var vkAcquireNextImage2KHR = Module.findExportByName("vulkan-1.dll", "vkAcquireNextImage2KHR")
Interceptor.attach(vkAcquireNextImage2KHR, {onLeave: function (args) {send("vkAcquireNextImage2KHR");}});

var vkAcquireNextImageKHR = Module.findExportByName("vulkan-1.dll", "vkAcquireNextImageKHR")
Interceptor.attach(vkAcquireNextImageKHR, {onLeave: function (args) {send("vkAcquireNextImageKHR");}});

var vkAllocateCommandBuffers = Module.findExportByName("vulkan-1.dll", "vkAllocateCommandBuffers")
Interceptor.attach(vkAllocateCommandBuffers, {onLeave: function (args) {send("vkAllocateCommandBuffers");}});

var vkAllocateDescriptorSets = Module.findExportByName("vulkan-1.dll", "vkAllocateDescriptorSets")
Interceptor.attach(vkAllocateDescriptorSets, {onLeave: function (args) {send("vkAllocateDescriptorSets");}});

var vkAllocateMemory = Module.findExportByName("vulkan-1.dll", "vkAllocateMemory")
Interceptor.attach(vkAllocateMemory, {onLeave: function (args) {send("vkAllocateMemory");}});

var vkBeginCommandBuffer = Module.findExportByName("vulkan-1.dll", "vkBeginCommandBuffer")
Interceptor.attach(vkBeginCommandBuffer, {onLeave: function (args) {send("vkBeginCommandBuffer");}});

var vkBindBufferMemory = Module.findExportByName("vulkan-1.dll", "vkBindBufferMemory")
Interceptor.attach(vkBindBufferMemory, {onLeave: function (args) {send("vkBindBufferMemory");}});

var vkBindBufferMemory2 = Module.findExportByName("vulkan-1.dll", "vkBindBufferMemory2")
Interceptor.attach(vkBindBufferMemory2, {onLeave: function (args) {send("vkBindBufferMemory2");}});

var vkBindImageMemory = Module.findExportByName("vulkan-1.dll", "vkBindImageMemory")
Interceptor.attach(vkBindImageMemory, {onLeave: function (args) {send("vkBindImageMemory");}});

var vkBindImageMemory2 = Module.findExportByName("vulkan-1.dll", "vkBindImageMemory2")
Interceptor.attach(vkBindImageMemory2, {onLeave: function (args) {send("vkBindImageMemory2");}});

var vkCmdBeginQuery = Module.findExportByName("vulkan-1.dll", "vkCmdBeginQuery")
Interceptor.attach(vkCmdBeginQuery, {onLeave: function (args) {send("vkCmdBeginQuery");}});

var vkCmdBeginRenderPass = Module.findExportByName("vulkan-1.dll", "vkCmdBeginRenderPass")
Interceptor.attach(vkCmdBeginRenderPass, {onLeave: function (args) {send("vkCmdBeginRenderPass");}});

var vkCmdBeginRenderPass2 = Module.findExportByName("vulkan-1.dll", "vkCmdBeginRenderPass2")
Interceptor.attach(vkCmdBeginRenderPass2, {onLeave: function (args) {send("vkCmdBeginRenderPass2");}});

var vkCmdBeginRendering = Module.findExportByName("vulkan-1.dll", "vkCmdBeginRendering")
Interceptor.attach(vkCmdBeginRendering, {onLeave: function (args) {send("vkCmdBeginRendering");}});

var vkCmdBindDescriptorSets = Module.findExportByName("vulkan-1.dll", "vkCmdBindDescriptorSets")
Interceptor.attach(vkCmdBindDescriptorSets, {onLeave: function (args) {send("vkCmdBindDescriptorSets");}});

var vkCmdBindIndexBuffer = Module.findExportByName("vulkan-1.dll", "vkCmdBindIndexBuffer")
Interceptor.attach(vkCmdBindIndexBuffer, {onLeave: function (args) {send("vkCmdBindIndexBuffer");}});

var vkCmdBindPipeline = Module.findExportByName("vulkan-1.dll", "vkCmdBindPipeline")
Interceptor.attach(vkCmdBindPipeline, {onLeave: function (args) {send("vkCmdBindPipeline");}});

var vkCmdBindVertexBuffers = Module.findExportByName("vulkan-1.dll", "vkCmdBindVertexBuffers")
Interceptor.attach(vkCmdBindVertexBuffers, {onLeave: function (args) {send("vkCmdBindVertexBuffers");}});

var vkCmdBindVertexBuffers2 = Module.findExportByName("vulkan-1.dll", "vkCmdBindVertexBuffers2")
Interceptor.attach(vkCmdBindVertexBuffers2, {onLeave: function (args) {send("vkCmdBindVertexBuffers2");}});

var vkCmdBlitImage = Module.findExportByName("vulkan-1.dll", "vkCmdBlitImage")
Interceptor.attach(vkCmdBlitImage, {onLeave: function (args) {send("vkCmdBlitImage");}});

var vkCmdBlitImage2 = Module.findExportByName("vulkan-1.dll", "vkCmdBlitImage2")
Interceptor.attach(vkCmdBlitImage2, {onLeave: function (args) {send("vkCmdBlitImage2");}});

var vkCmdClearAttachments = Module.findExportByName("vulkan-1.dll", "vkCmdClearAttachments")
Interceptor.attach(vkCmdClearAttachments, {onLeave: function (args) {send("vkCmdClearAttachments");}});

var vkCmdClearColorImage = Module.findExportByName("vulkan-1.dll", "vkCmdClearColorImage")
Interceptor.attach(vkCmdClearColorImage, {onLeave: function (args) {send("vkCmdClearColorImage");}});

var vkCmdClearDepthStencilImage = Module.findExportByName("vulkan-1.dll", "vkCmdClearDepthStencilImage")
Interceptor.attach(vkCmdClearDepthStencilImage, {onLeave: function (args) {send("vkCmdClearDepthStencilImage");}});

var vkCmdCopyBuffer = Module.findExportByName("vulkan-1.dll", "vkCmdCopyBuffer")
Interceptor.attach(vkCmdCopyBuffer, {onLeave: function (args) {send("vkCmdCopyBuffer");}});

var vkCmdCopyBuffer2 = Module.findExportByName("vulkan-1.dll", "vkCmdCopyBuffer2")
Interceptor.attach(vkCmdCopyBuffer2, {onLeave: function (args) {send("vkCmdCopyBuffer2");}});

var vkCmdCopyBufferToImage = Module.findExportByName("vulkan-1.dll", "vkCmdCopyBufferToImage")
Interceptor.attach(vkCmdCopyBufferToImage, {onLeave: function (args) {send("vkCmdCopyBufferToImage");}});

var vkCmdCopyBufferToImage2 = Module.findExportByName("vulkan-1.dll", "vkCmdCopyBufferToImage2")
Interceptor.attach(vkCmdCopyBufferToImage2, {onLeave: function (args) {send("vkCmdCopyBufferToImage2");}});

var vkCmdCopyImage = Module.findExportByName("vulkan-1.dll", "vkCmdCopyImage")
Interceptor.attach(vkCmdCopyImage, {onLeave: function (args) {send("vkCmdCopyImage");}});

var vkCmdCopyImage2 = Module.findExportByName("vulkan-1.dll", "vkCmdCopyImage2")
Interceptor.attach(vkCmdCopyImage2, {onLeave: function (args) {send("vkCmdCopyImage2");}});

var vkCmdCopyImageToBuffer = Module.findExportByName("vulkan-1.dll", "vkCmdCopyImageToBuffer")
Interceptor.attach(vkCmdCopyImageToBuffer, {onLeave: function (args) {send("vkCmdCopyImageToBuffer");}});

var vkCmdCopyImageToBuffer2 = Module.findExportByName("vulkan-1.dll", "vkCmdCopyImageToBuffer2")
Interceptor.attach(vkCmdCopyImageToBuffer2, {onLeave: function (args) {send("vkCmdCopyImageToBuffer2");}});

var vkCmdCopyQueryPoolResults = Module.findExportByName("vulkan-1.dll", "vkCmdCopyQueryPoolResults")
Interceptor.attach(vkCmdCopyQueryPoolResults, {onLeave: function (args) {send("vkCmdCopyQueryPoolResults");}});

var vkCmdDispatch = Module.findExportByName("vulkan-1.dll", "vkCmdDispatch")
Interceptor.attach(vkCmdDispatch, {onLeave: function (args) {send("vkCmdDispatch");}});

var vkCmdDispatchBase = Module.findExportByName("vulkan-1.dll", "vkCmdDispatchBase")
Interceptor.attach(vkCmdDispatchBase, {onLeave: function (args) {send("vkCmdDispatchBase");}});

var vkCmdDispatchIndirect = Module.findExportByName("vulkan-1.dll", "vkCmdDispatchIndirect")
Interceptor.attach(vkCmdDispatchIndirect, {onLeave: function (args) {send("vkCmdDispatchIndirect");}});

var vkCmdDraw = Module.findExportByName("vulkan-1.dll", "vkCmdDraw")
Interceptor.attach(vkCmdDraw, {onLeave: function (args) {send("vkCmdDraw");}});

var vkCmdDrawIndexed = Module.findExportByName("vulkan-1.dll", "vkCmdDrawIndexed")
Interceptor.attach(vkCmdDrawIndexed, {onLeave: function (args) {send("vkCmdDrawIndexed");}});

var vkCmdDrawIndexedIndirect = Module.findExportByName("vulkan-1.dll", "vkCmdDrawIndexedIndirect")
Interceptor.attach(vkCmdDrawIndexedIndirect, {onLeave: function (args) {send("vkCmdDrawIndexedIndirect");}});

var vkCmdDrawIndexedIndirectCount = Module.findExportByName("vulkan-1.dll", "vkCmdDrawIndexedIndirectCount")
Interceptor.attach(vkCmdDrawIndexedIndirectCount, {onLeave: function (args) {send("vkCmdDrawIndexedIndirectCount");}});

var vkCmdDrawIndirect = Module.findExportByName("vulkan-1.dll", "vkCmdDrawIndirect")
Interceptor.attach(vkCmdDrawIndirect, {onLeave: function (args) {send("vkCmdDrawIndirect");}});

var vkCmdDrawIndirectCount = Module.findExportByName("vulkan-1.dll", "vkCmdDrawIndirectCount")
Interceptor.attach(vkCmdDrawIndirectCount, {onLeave: function (args) {send("vkCmdDrawIndirectCount");}});

var vkCmdEndQuery = Module.findExportByName("vulkan-1.dll", "vkCmdEndQuery")
Interceptor.attach(vkCmdEndQuery, {onLeave: function (args) {send("vkCmdEndQuery");}});

var vkCmdEndRenderPass = Module.findExportByName("vulkan-1.dll", "vkCmdEndRenderPass")
Interceptor.attach(vkCmdEndRenderPass, {onLeave: function (args) {send("vkCmdEndRenderPass");}});

var vkCmdEndRenderPass2 = Module.findExportByName("vulkan-1.dll", "vkCmdEndRenderPass2")
Interceptor.attach(vkCmdEndRenderPass2, {onLeave: function (args) {send("vkCmdEndRenderPass2");}});

var vkCmdEndRendering = Module.findExportByName("vulkan-1.dll", "vkCmdEndRendering")
Interceptor.attach(vkCmdEndRendering, {onLeave: function (args) {send("vkCmdEndRendering");}});

var vkCmdExecuteCommands = Module.findExportByName("vulkan-1.dll", "vkCmdExecuteCommands")
Interceptor.attach(vkCmdExecuteCommands, {onLeave: function (args) {send("vkCmdExecuteCommands");}});

var vkCmdFillBuffer = Module.findExportByName("vulkan-1.dll", "vkCmdFillBuffer")
Interceptor.attach(vkCmdFillBuffer, {onLeave: function (args) {send("vkCmdFillBuffer");}});

var vkCmdNextSubpass = Module.findExportByName("vulkan-1.dll", "vkCmdNextSubpass")
Interceptor.attach(vkCmdNextSubpass, {onLeave: function (args) {send("vkCmdNextSubpass");}});

var vkCmdNextSubpass2 = Module.findExportByName("vulkan-1.dll", "vkCmdNextSubpass2")
Interceptor.attach(vkCmdNextSubpass2, {onLeave: function (args) {send("vkCmdNextSubpass2");}});

var vkCmdPipelineBarrier = Module.findExportByName("vulkan-1.dll", "vkCmdPipelineBarrier")
Interceptor.attach(vkCmdPipelineBarrier, {onLeave: function (args) {send("vkCmdPipelineBarrier");}});

var vkCmdPipelineBarrier2 = Module.findExportByName("vulkan-1.dll", "vkCmdPipelineBarrier2")
Interceptor.attach(vkCmdPipelineBarrier2, {onLeave: function (args) {send("vkCmdPipelineBarrier2");}});

var vkCmdPushConstants = Module.findExportByName("vulkan-1.dll", "vkCmdPushConstants")
Interceptor.attach(vkCmdPushConstants, {onLeave: function (args) {send("vkCmdPushConstants");}});

var vkCmdResetEvent = Module.findExportByName("vulkan-1.dll", "vkCmdResetEvent")
Interceptor.attach(vkCmdResetEvent, {onLeave: function (args) {send("vkCmdResetEvent");}});

var vkCmdResetEvent2 = Module.findExportByName("vulkan-1.dll", "vkCmdResetEvent2")
Interceptor.attach(vkCmdResetEvent2, {onLeave: function (args) {send("vkCmdResetEvent2");}});

var vkCmdResetQueryPool = Module.findExportByName("vulkan-1.dll", "vkCmdResetQueryPool")
Interceptor.attach(vkCmdResetQueryPool, {onLeave: function (args) {send("vkCmdResetQueryPool");}});

var vkCmdResolveImage = Module.findExportByName("vulkan-1.dll", "vkCmdResolveImage")
Interceptor.attach(vkCmdResolveImage, {onLeave: function (args) {send("vkCmdResolveImage");}});

var vkCmdResolveImage2 = Module.findExportByName("vulkan-1.dll", "vkCmdResolveImage2")
Interceptor.attach(vkCmdResolveImage2, {onLeave: function (args) {send("vkCmdResolveImage2");}});

var vkCmdSetBlendConstants = Module.findExportByName("vulkan-1.dll", "vkCmdSetBlendConstants")
Interceptor.attach(vkCmdSetBlendConstants, {onLeave: function (args) {send("vkCmdSetBlendConstants");}});

var vkCmdSetCullMode = Module.findExportByName("vulkan-1.dll", "vkCmdSetCullMode")
Interceptor.attach(vkCmdSetCullMode, {onLeave: function (args) {send("vkCmdSetCullMode");}});

var vkCmdSetDepthBias = Module.findExportByName("vulkan-1.dll", "vkCmdSetDepthBias")
Interceptor.attach(vkCmdSetDepthBias, {onLeave: function (args) {send("vkCmdSetDepthBias");}});

var vkCmdSetDepthBiasEnable = Module.findExportByName("vulkan-1.dll", "vkCmdSetDepthBiasEnable")
Interceptor.attach(vkCmdSetDepthBiasEnable, {onLeave: function (args) {send("vkCmdSetDepthBiasEnable");}});

var vkCmdSetDepthBounds = Module.findExportByName("vulkan-1.dll", "vkCmdSetDepthBounds")
Interceptor.attach(vkCmdSetDepthBounds, {onLeave: function (args) {send("vkCmdSetDepthBounds");}});

var vkCmdSetDepthBoundsTestEnable = Module.findExportByName("vulkan-1.dll", "vkCmdSetDepthBoundsTestEnable")
Interceptor.attach(vkCmdSetDepthBoundsTestEnable, {onLeave: function (args) {send("vkCmdSetDepthBoundsTestEnable");}});

var vkCmdSetDepthCompareOp = Module.findExportByName("vulkan-1.dll", "vkCmdSetDepthCompareOp")
Interceptor.attach(vkCmdSetDepthCompareOp, {onLeave: function (args) {send("vkCmdSetDepthCompareOp");}});

var vkCmdSetDepthTestEnable = Module.findExportByName("vulkan-1.dll", "vkCmdSetDepthTestEnable")
Interceptor.attach(vkCmdSetDepthTestEnable, {onLeave: function (args) {send("vkCmdSetDepthTestEnable");}});

var vkCmdSetDepthWriteEnable = Module.findExportByName("vulkan-1.dll", "vkCmdSetDepthWriteEnable")
Interceptor.attach(vkCmdSetDepthWriteEnable, {onLeave: function (args) {send("vkCmdSetDepthWriteEnable");}});

var vkCmdSetDeviceMask = Module.findExportByName("vulkan-1.dll", "vkCmdSetDeviceMask")
Interceptor.attach(vkCmdSetDeviceMask, {onLeave: function (args) {send("vkCmdSetDeviceMask");}});

var vkCmdSetEvent = Module.findExportByName("vulkan-1.dll", "vkCmdSetEvent")
Interceptor.attach(vkCmdSetEvent, {onLeave: function (args) {send("vkCmdSetEvent");}});

var vkCmdSetEvent2 = Module.findExportByName("vulkan-1.dll", "vkCmdSetEvent2")
Interceptor.attach(vkCmdSetEvent2, {onLeave: function (args) {send("vkCmdSetEvent2");}});

var vkCmdSetFrontFace = Module.findExportByName("vulkan-1.dll", "vkCmdSetFrontFace")
Interceptor.attach(vkCmdSetFrontFace, {onLeave: function (args) {send("vkCmdSetFrontFace");}});

var vkCmdSetLineWidth = Module.findExportByName("vulkan-1.dll", "vkCmdSetLineWidth")
Interceptor.attach(vkCmdSetLineWidth, {onLeave: function (args) {send("vkCmdSetLineWidth");}});

var vkCmdSetPrimitiveRestartEnable = Module.findExportByName("vulkan-1.dll", "vkCmdSetPrimitiveRestartEnable")
Interceptor.attach(vkCmdSetPrimitiveRestartEnable, {onLeave: function (args) {send("vkCmdSetPrimitiveRestartEnable");}});

var vkCmdSetPrimitiveTopology = Module.findExportByName("vulkan-1.dll", "vkCmdSetPrimitiveTopology")
Interceptor.attach(vkCmdSetPrimitiveTopology, {onLeave: function (args) {send("vkCmdSetPrimitiveTopology");}});

var vkCmdSetRasterizerDiscardEnable = Module.findExportByName("vulkan-1.dll", "vkCmdSetRasterizerDiscardEnable")
Interceptor.attach(vkCmdSetRasterizerDiscardEnable, {onLeave: function (args) {send("vkCmdSetRasterizerDiscardEnable");}});

var vkCmdSetScissor = Module.findExportByName("vulkan-1.dll", "vkCmdSetScissor")
Interceptor.attach(vkCmdSetScissor, {onLeave: function (args) {send("vkCmdSetScissor");}});

var vkCmdSetScissorWithCount = Module.findExportByName("vulkan-1.dll", "vkCmdSetScissorWithCount")
Interceptor.attach(vkCmdSetScissorWithCount, {onLeave: function (args) {send("vkCmdSetScissorWithCount");}});

var vkCmdSetStencilCompareMask = Module.findExportByName("vulkan-1.dll", "vkCmdSetStencilCompareMask")
Interceptor.attach(vkCmdSetStencilCompareMask, {onLeave: function (args) {send("vkCmdSetStencilCompareMask");}});

var vkCmdSetStencilOp = Module.findExportByName("vulkan-1.dll", "vkCmdSetStencilOp")
Interceptor.attach(vkCmdSetStencilOp, {onLeave: function (args) {send("vkCmdSetStencilOp");}});

var vkCmdSetStencilReference = Module.findExportByName("vulkan-1.dll", "vkCmdSetStencilReference")
Interceptor.attach(vkCmdSetStencilReference, {onLeave: function (args) {send("vkCmdSetStencilReference");}});

var vkCmdSetStencilTestEnable = Module.findExportByName("vulkan-1.dll", "vkCmdSetStencilTestEnable")
Interceptor.attach(vkCmdSetStencilTestEnable, {onLeave: function (args) {send("vkCmdSetStencilTestEnable");}});

var vkCmdSetStencilWriteMask = Module.findExportByName("vulkan-1.dll", "vkCmdSetStencilWriteMask")
Interceptor.attach(vkCmdSetStencilWriteMask, {onLeave: function (args) {send("vkCmdSetStencilWriteMask");}});

var vkCmdSetViewport = Module.findExportByName("vulkan-1.dll", "vkCmdSetViewport")
Interceptor.attach(vkCmdSetViewport, {onLeave: function (args) {send("vkCmdSetViewport");}});

var vkCmdSetViewportWithCount = Module.findExportByName("vulkan-1.dll", "vkCmdSetViewportWithCount")
Interceptor.attach(vkCmdSetViewportWithCount, {onLeave: function (args) {send("vkCmdSetViewportWithCount");}});

var vkCmdUpdateBuffer = Module.findExportByName("vulkan-1.dll", "vkCmdUpdateBuffer")
Interceptor.attach(vkCmdUpdateBuffer, {onLeave: function (args) {send("vkCmdUpdateBuffer");}});

var vkCmdWaitEvents = Module.findExportByName("vulkan-1.dll", "vkCmdWaitEvents")
Interceptor.attach(vkCmdWaitEvents, {onLeave: function (args) {send("vkCmdWaitEvents");}});

var vkCmdWaitEvents2 = Module.findExportByName("vulkan-1.dll", "vkCmdWaitEvents2")
Interceptor.attach(vkCmdWaitEvents2, {onLeave: function (args) {send("vkCmdWaitEvents2");}});

var vkCmdWriteTimestamp = Module.findExportByName("vulkan-1.dll", "vkCmdWriteTimestamp")
Interceptor.attach(vkCmdWriteTimestamp, {onLeave: function (args) {send("vkCmdWriteTimestamp");}});

var vkCmdWriteTimestamp2 = Module.findExportByName("vulkan-1.dll", "vkCmdWriteTimestamp2")
Interceptor.attach(vkCmdWriteTimestamp2, {onLeave: function (args) {send("vkCmdWriteTimestamp2");}});

var vkCreateBuffer = Module.findExportByName("vulkan-1.dll", "vkCreateBuffer")
Interceptor.attach(vkCreateBuffer, {onLeave: function (args) {send("vkCreateBuffer");}});

var vkCreateBufferView = Module.findExportByName("vulkan-1.dll", "vkCreateBufferView")
Interceptor.attach(vkCreateBufferView, {onLeave: function (args) {send("vkCreateBufferView");}});

var vkCreateCommandPool = Module.findExportByName("vulkan-1.dll", "vkCreateCommandPool")
Interceptor.attach(vkCreateCommandPool, {onLeave: function (args) {send("vkCreateCommandPool");}});

var vkCreateComputePipelines = Module.findExportByName("vulkan-1.dll", "vkCreateComputePipelines")
Interceptor.attach(vkCreateComputePipelines, {onLeave: function (args) {send("vkCreateComputePipelines");}});

var vkCreateDescriptorPool = Module.findExportByName("vulkan-1.dll", "vkCreateDescriptorPool")
Interceptor.attach(vkCreateDescriptorPool, {onLeave: function (args) {send("vkCreateDescriptorPool");}});

var vkCreateDescriptorSetLayout = Module.findExportByName("vulkan-1.dll", "vkCreateDescriptorSetLayout")
Interceptor.attach(vkCreateDescriptorSetLayout, {onLeave: function (args) {send("vkCreateDescriptorSetLayout");}});

var vkCreateDescriptorUpdateTemplate = Module.findExportByName("vulkan-1.dll", "vkCreateDescriptorUpdateTemplate")
Interceptor.attach(vkCreateDescriptorUpdateTemplate, {onLeave: function (args) {send("vkCreateDescriptorUpdateTemplate");}});

var vkCreateDevice = Module.findExportByName("vulkan-1.dll", "vkCreateDevice")
Interceptor.attach(vkCreateDevice, {onLeave: function (args) {send("vkCreateDevice");}});

var vkCreateDisplayModeKHR = Module.findExportByName("vulkan-1.dll", "vkCreateDisplayModeKHR")
Interceptor.attach(vkCreateDisplayModeKHR, {onLeave: function (args) {send("vkCreateDisplayModeKHR");}});

var vkCreateDisplayPlaneSurfaceKHR = Module.findExportByName("vulkan-1.dll", "vkCreateDisplayPlaneSurfaceKHR")
Interceptor.attach(vkCreateDisplayPlaneSurfaceKHR, {onLeave: function (args) {send("vkCreateDisplayPlaneSurfaceKHR");}});

var vkCreateEvent = Module.findExportByName("vulkan-1.dll", "vkCreateEvent")
Interceptor.attach(vkCreateEvent, {onLeave: function (args) {send("vkCreateEvent");}});

var vkCreateFence = Module.findExportByName("vulkan-1.dll", "vkCreateFence")
Interceptor.attach(vkCreateFence, {onLeave: function (args) {send("vkCreateFence");}});

var vkCreateFramebuffer = Module.findExportByName("vulkan-1.dll", "vkCreateFramebuffer")
Interceptor.attach(vkCreateFramebuffer, {onLeave: function (args) {send("vkCreateFramebuffer");}});

var vkCreateGraphicsPipelines = Module.findExportByName("vulkan-1.dll", "vkCreateGraphicsPipelines")
Interceptor.attach(vkCreateGraphicsPipelines, {onLeave: function (args) {send("vkCreateGraphicsPipelines");}});

var vkCreateHeadlessSurfaceEXT = Module.findExportByName("vulkan-1.dll", "vkCreateHeadlessSurfaceEXT")
Interceptor.attach(vkCreateHeadlessSurfaceEXT, {onLeave: function (args) {send("vkCreateHeadlessSurfaceEXT");}});

var vkCreateImage = Module.findExportByName("vulkan-1.dll", "vkCreateImage")
Interceptor.attach(vkCreateImage, {onLeave: function (args) {send("vkCreateImage");}});

var vkCreateImageView = Module.findExportByName("vulkan-1.dll", "vkCreateImageView")
Interceptor.attach(vkCreateImageView, {onLeave: function (args) {send("vkCreateImageView");}});

var vkCreateInstance = Module.findExportByName("vulkan-1.dll", "vkCreateInstance")
Interceptor.attach(vkCreateInstance, {onLeave: function (args) {send("vkCreateInstance");}});

var vkCreatePipelineCache = Module.findExportByName("vulkan-1.dll", "vkCreatePipelineCache")
Interceptor.attach(vkCreatePipelineCache, {onLeave: function (args) {send("vkCreatePipelineCache");}});

var vkCreatePipelineLayout = Module.findExportByName("vulkan-1.dll", "vkCreatePipelineLayout")
Interceptor.attach(vkCreatePipelineLayout, {onLeave: function (args) {send("vkCreatePipelineLayout");}});

var vkCreatePrivateDataSlot = Module.findExportByName("vulkan-1.dll", "vkCreatePrivateDataSlot")
Interceptor.attach(vkCreatePrivateDataSlot, {onLeave: function (args) {send("vkCreatePrivateDataSlot");}});

var vkCreateQueryPool = Module.findExportByName("vulkan-1.dll", "vkCreateQueryPool")
Interceptor.attach(vkCreateQueryPool, {onLeave: function (args) {send("vkCreateQueryPool");}});

var vkCreateRenderPass = Module.findExportByName("vulkan-1.dll", "vkCreateRenderPass")
Interceptor.attach(vkCreateRenderPass, {onLeave: function (args) {send("vkCreateRenderPass");}});

var vkCreateRenderPass2 = Module.findExportByName("vulkan-1.dll", "vkCreateRenderPass2")
Interceptor.attach(vkCreateRenderPass2, {onLeave: function (args) {send("vkCreateRenderPass2");}});

var vkCreateSampler = Module.findExportByName("vulkan-1.dll", "vkCreateSampler")
Interceptor.attach(vkCreateSampler, {onLeave: function (args) {send("vkCreateSampler");}});

var vkCreateSamplerYcbcrConversion = Module.findExportByName("vulkan-1.dll", "vkCreateSamplerYcbcrConversion")
Interceptor.attach(vkCreateSamplerYcbcrConversion, {onLeave: function (args) {send("vkCreateSamplerYcbcrConversion");}});

var vkCreateSemaphore = Module.findExportByName("vulkan-1.dll", "vkCreateSemaphore")
Interceptor.attach(vkCreateSemaphore, {onLeave: function (args) {send("vkCreateSemaphore");}});

var vkCreateShaderModule = Module.findExportByName("vulkan-1.dll", "vkCreateShaderModule")
Interceptor.attach(vkCreateShaderModule, {onLeave: function (args) {send("vkCreateShaderModule");}});

var vkCreateSharedSwapchainsKHR = Module.findExportByName("vulkan-1.dll", "vkCreateSharedSwapchainsKHR")
Interceptor.attach(vkCreateSharedSwapchainsKHR, {onLeave: function (args) {send("vkCreateSharedSwapchainsKHR");}});

var vkCreateSwapchainKHR = Module.findExportByName("vulkan-1.dll", "vkCreateSwapchainKHR")
Interceptor.attach(vkCreateSwapchainKHR, {onLeave: function (args) {send("vkCreateSwapchainKHR");}});

var vkCreateWin32SurfaceKHR = Module.findExportByName("vulkan-1.dll", "vkCreateWin32SurfaceKHR")
Interceptor.attach(vkCreateWin32SurfaceKHR, {onLeave: function (args) {send("vkCreateWin32SurfaceKHR");}});

var vkDestroyBuffer = Module.findExportByName("vulkan-1.dll", "vkDestroyBuffer")
Interceptor.attach(vkDestroyBuffer, {onLeave: function (args) {send("vkDestroyBuffer");}});

var vkDestroyBufferView = Module.findExportByName("vulkan-1.dll", "vkDestroyBufferView")
Interceptor.attach(vkDestroyBufferView, {onLeave: function (args) {send("vkDestroyBufferView");}});

var vkDestroyCommandPool = Module.findExportByName("vulkan-1.dll", "vkDestroyCommandPool")
Interceptor.attach(vkDestroyCommandPool, {onLeave: function (args) {send("vkDestroyCommandPool");}});

var vkDestroyDescriptorPool = Module.findExportByName("vulkan-1.dll", "vkDestroyDescriptorPool")
Interceptor.attach(vkDestroyDescriptorPool, {onLeave: function (args) {send("vkDestroyDescriptorPool");}});

var vkDestroyDescriptorSetLayout = Module.findExportByName("vulkan-1.dll", "vkDestroyDescriptorSetLayout")
Interceptor.attach(vkDestroyDescriptorSetLayout, {onLeave: function (args) {send("vkDestroyDescriptorSetLayout");}});

var vkDestroyDescriptorUpdateTemplate = Module.findExportByName("vulkan-1.dll", "vkDestroyDescriptorUpdateTemplate")
Interceptor.attach(vkDestroyDescriptorUpdateTemplate, {onLeave: function (args) {send("vkDestroyDescriptorUpdateTemplate");}});

var vkDestroyDevice = Module.findExportByName("vulkan-1.dll", "vkDestroyDevice")
Interceptor.attach(vkDestroyDevice, {onLeave: function (args) {send("vkDestroyDevice");}});

var vkDestroyEvent = Module.findExportByName("vulkan-1.dll", "vkDestroyEvent")
Interceptor.attach(vkDestroyEvent, {onLeave: function (args) {send("vkDestroyEvent");}});

var vkDestroyFence = Module.findExportByName("vulkan-1.dll", "vkDestroyFence")
Interceptor.attach(vkDestroyFence, {onLeave: function (args) {send("vkDestroyFence");}});

var vkDestroyFramebuffer = Module.findExportByName("vulkan-1.dll", "vkDestroyFramebuffer")
Interceptor.attach(vkDestroyFramebuffer, {onLeave: function (args) {send("vkDestroyFramebuffer");}});

var vkDestroyImage = Module.findExportByName("vulkan-1.dll", "vkDestroyImage")
Interceptor.attach(vkDestroyImage, {onLeave: function (args) {send("vkDestroyImage");}});

var vkDestroyImageView = Module.findExportByName("vulkan-1.dll", "vkDestroyImageView")
Interceptor.attach(vkDestroyImageView, {onLeave: function (args) {send("vkDestroyImageView");}});

var vkDestroyInstance = Module.findExportByName("vulkan-1.dll", "vkDestroyInstance")
Interceptor.attach(vkDestroyInstance, {onLeave: function (args) {send("vkDestroyInstance");}});

var vkDestroyPipeline = Module.findExportByName("vulkan-1.dll", "vkDestroyPipeline")
Interceptor.attach(vkDestroyPipeline, {onLeave: function (args) {send("vkDestroyPipeline");}});

var vkDestroyPipelineCache = Module.findExportByName("vulkan-1.dll", "vkDestroyPipelineCache")
Interceptor.attach(vkDestroyPipelineCache, {onLeave: function (args) {send("vkDestroyPipelineCache");}});

var vkDestroyPipelineLayout = Module.findExportByName("vulkan-1.dll", "vkDestroyPipelineLayout")
Interceptor.attach(vkDestroyPipelineLayout, {onLeave: function (args) {send("vkDestroyPipelineLayout");}});

var vkDestroyPrivateDataSlot = Module.findExportByName("vulkan-1.dll", "vkDestroyPrivateDataSlot")
Interceptor.attach(vkDestroyPrivateDataSlot, {onLeave: function (args) {send("vkDestroyPrivateDataSlot");}});

var vkDestroyQueryPool = Module.findExportByName("vulkan-1.dll", "vkDestroyQueryPool")
Interceptor.attach(vkDestroyQueryPool, {onLeave: function (args) {send("vkDestroyQueryPool");}});

var vkDestroyRenderPass = Module.findExportByName("vulkan-1.dll", "vkDestroyRenderPass")
Interceptor.attach(vkDestroyRenderPass, {onLeave: function (args) {send("vkDestroyRenderPass");}});

var vkDestroySampler = Module.findExportByName("vulkan-1.dll", "vkDestroySampler")
Interceptor.attach(vkDestroySampler, {onLeave: function (args) {send("vkDestroySampler");}});

var vkDestroySamplerYcbcrConversion = Module.findExportByName("vulkan-1.dll", "vkDestroySamplerYcbcrConversion")
Interceptor.attach(vkDestroySamplerYcbcrConversion, {onLeave: function (args) {send("vkDestroySamplerYcbcrConversion");}});

var vkDestroySemaphore = Module.findExportByName("vulkan-1.dll", "vkDestroySemaphore")
Interceptor.attach(vkDestroySemaphore, {onLeave: function (args) {send("vkDestroySemaphore");}});

var vkDestroyShaderModule = Module.findExportByName("vulkan-1.dll", "vkDestroyShaderModule")
Interceptor.attach(vkDestroyShaderModule, {onLeave: function (args) {send("vkDestroyShaderModule");}});

var vkDestroySurfaceKHR = Module.findExportByName("vulkan-1.dll", "vkDestroySurfaceKHR")
Interceptor.attach(vkDestroySurfaceKHR, {onLeave: function (args) {send("vkDestroySurfaceKHR");}});

var vkDestroySwapchainKHR = Module.findExportByName("vulkan-1.dll", "vkDestroySwapchainKHR")
Interceptor.attach(vkDestroySwapchainKHR, {onLeave: function (args) {send("vkDestroySwapchainKHR");}});

var vkDeviceWaitIdle = Module.findExportByName("vulkan-1.dll", "vkDeviceWaitIdle")
Interceptor.attach(vkDeviceWaitIdle, {onLeave: function (args) {send("vkDeviceWaitIdle");}});

var vkEndCommandBuffer = Module.findExportByName("vulkan-1.dll", "vkEndCommandBuffer")
Interceptor.attach(vkEndCommandBuffer, {onLeave: function (args) {send("vkEndCommandBuffer");}});

var vkEnumerateDeviceExtensionProperties = Module.findExportByName("vulkan-1.dll", "vkEnumerateDeviceExtensionProperties")
Interceptor.attach(vkEnumerateDeviceExtensionProperties, {onLeave: function (args) {send("vkEnumerateDeviceExtensionProperties");}});

var vkEnumerateDeviceLayerProperties = Module.findExportByName("vulkan-1.dll", "vkEnumerateDeviceLayerProperties")
Interceptor.attach(vkEnumerateDeviceLayerProperties, {onLeave: function (args) {send("vkEnumerateDeviceLayerProperties");}});

var vkEnumerateInstanceExtensionProperties = Module.findExportByName("vulkan-1.dll", "vkEnumerateInstanceExtensionProperties")
Interceptor.attach(vkEnumerateInstanceExtensionProperties, {onLeave: function (args) {send("vkEnumerateInstanceExtensionProperties");}});

var vkEnumerateInstanceLayerProperties = Module.findExportByName("vulkan-1.dll", "vkEnumerateInstanceLayerProperties")
Interceptor.attach(vkEnumerateInstanceLayerProperties, {onLeave: function (args) {send("vkEnumerateInstanceLayerProperties");}});

var vkEnumerateInstanceVersion = Module.findExportByName("vulkan-1.dll", "vkEnumerateInstanceVersion")
Interceptor.attach(vkEnumerateInstanceVersion, {onLeave: function (args) {send("vkEnumerateInstanceVersion");}});

var vkEnumeratePhysicalDeviceGroups = Module.findExportByName("vulkan-1.dll", "vkEnumeratePhysicalDeviceGroups")
Interceptor.attach(vkEnumeratePhysicalDeviceGroups, {onLeave: function (args) {send("vkEnumeratePhysicalDeviceGroups");}});

var vkEnumeratePhysicalDevices = Module.findExportByName("vulkan-1.dll", "vkEnumeratePhysicalDevices")
Interceptor.attach(vkEnumeratePhysicalDevices, {onLeave: function (args) {send("vkEnumeratePhysicalDevices");}});

var vkFlushMappedMemoryRanges = Module.findExportByName("vulkan-1.dll", "vkFlushMappedMemoryRanges")
Interceptor.attach(vkFlushMappedMemoryRanges, {onLeave: function (args) {send("vkFlushMappedMemoryRanges");}});

var vkFreeCommandBuffers = Module.findExportByName("vulkan-1.dll", "vkFreeCommandBuffers")
Interceptor.attach(vkFreeCommandBuffers, {onLeave: function (args) {send("vkFreeCommandBuffers");}});

var vkFreeDescriptorSets = Module.findExportByName("vulkan-1.dll", "vkFreeDescriptorSets")
Interceptor.attach(vkFreeDescriptorSets, {onLeave: function (args) {send("vkFreeDescriptorSets");}});

var vkFreeMemory = Module.findExportByName("vulkan-1.dll", "vkFreeMemory")
Interceptor.attach(vkFreeMemory, {onLeave: function (args) {send("vkFreeMemory");}});

var vkGetBufferDeviceAddress = Module.findExportByName("vulkan-1.dll", "vkGetBufferDeviceAddress")
Interceptor.attach(vkGetBufferDeviceAddress, {onLeave: function (args) {send("vkGetBufferDeviceAddress");}});

var vkGetBufferMemoryRequirements = Module.findExportByName("vulkan-1.dll", "vkGetBufferMemoryRequirements")
Interceptor.attach(vkGetBufferMemoryRequirements, {onLeave: function (args) {send("vkGetBufferMemoryRequirements");}});

var vkGetBufferMemoryRequirements2 = Module.findExportByName("vulkan-1.dll", "vkGetBufferMemoryRequirements2")
Interceptor.attach(vkGetBufferMemoryRequirements2, {onLeave: function (args) {send("vkGetBufferMemoryRequirements2");}});

var vkGetBufferOpaqueCaptureAddress = Module.findExportByName("vulkan-1.dll", "vkGetBufferOpaqueCaptureAddress")
Interceptor.attach(vkGetBufferOpaqueCaptureAddress, {onLeave: function (args) {send("vkGetBufferOpaqueCaptureAddress");}});

var vkGetDescriptorSetLayoutSupport = Module.findExportByName("vulkan-1.dll", "vkGetDescriptorSetLayoutSupport")
Interceptor.attach(vkGetDescriptorSetLayoutSupport, {onLeave: function (args) {send("vkGetDescriptorSetLayoutSupport");}});

var vkGetDeviceBufferMemoryRequirements = Module.findExportByName("vulkan-1.dll", "vkGetDeviceBufferMemoryRequirements")
Interceptor.attach(vkGetDeviceBufferMemoryRequirements, {onLeave: function (args) {send("vkGetDeviceBufferMemoryRequirements");}});

var vkGetDeviceGroupPeerMemoryFeatures = Module.findExportByName("vulkan-1.dll", "vkGetDeviceGroupPeerMemoryFeatures")
Interceptor.attach(vkGetDeviceGroupPeerMemoryFeatures, {onLeave: function (args) {send("vkGetDeviceGroupPeerMemoryFeatures");}});

var vkGetDeviceGroupPresentCapabilitiesKHR = Module.findExportByName("vulkan-1.dll", "vkGetDeviceGroupPresentCapabilitiesKHR")
Interceptor.attach(vkGetDeviceGroupPresentCapabilitiesKHR, {onLeave: function (args) {send("vkGetDeviceGroupPresentCapabilitiesKHR");}});

var vkGetDeviceGroupSurfacePresentModesKHR = Module.findExportByName("vulkan-1.dll", "vkGetDeviceGroupSurfacePresentModesKHR")
Interceptor.attach(vkGetDeviceGroupSurfacePresentModesKHR, {onLeave: function (args) {send("vkGetDeviceGroupSurfacePresentModesKHR");}});

var vkGetDeviceImageMemoryRequirements = Module.findExportByName("vulkan-1.dll", "vkGetDeviceImageMemoryRequirements")
Interceptor.attach(vkGetDeviceImageMemoryRequirements, {onLeave: function (args) {send("vkGetDeviceImageMemoryRequirements");}});

var vkGetDeviceImageSparseMemoryRequirements = Module.findExportByName("vulkan-1.dll", "vkGetDeviceImageSparseMemoryRequirements")
Interceptor.attach(vkGetDeviceImageSparseMemoryRequirements, {onLeave: function (args) {send("vkGetDeviceImageSparseMemoryRequirements");}});

var vkGetDeviceMemoryCommitment = Module.findExportByName("vulkan-1.dll", "vkGetDeviceMemoryCommitment")
Interceptor.attach(vkGetDeviceMemoryCommitment, {onLeave: function (args) {send("vkGetDeviceMemoryCommitment");}});

var vkGetDeviceMemoryOpaqueCaptureAddress = Module.findExportByName("vulkan-1.dll", "vkGetDeviceMemoryOpaqueCaptureAddress")
Interceptor.attach(vkGetDeviceMemoryOpaqueCaptureAddress, {onLeave: function (args) {send("vkGetDeviceMemoryOpaqueCaptureAddress");}});

var vkGetDeviceProcAddr = Module.findExportByName("vulkan-1.dll", "vkGetDeviceProcAddr")
Interceptor.attach(vkGetDeviceProcAddr, {onLeave: function (args) {send("vkGetDeviceProcAddr");}});

var vkGetDeviceQueue = Module.findExportByName("vulkan-1.dll", "vkGetDeviceQueue")
Interceptor.attach(vkGetDeviceQueue, {onLeave: function (args) {send("vkGetDeviceQueue");}});

var vkGetDeviceQueue2 = Module.findExportByName("vulkan-1.dll", "vkGetDeviceQueue2")
Interceptor.attach(vkGetDeviceQueue2, {onLeave: function (args) {send("vkGetDeviceQueue2");}});

var vkGetDisplayModeProperties2KHR = Module.findExportByName("vulkan-1.dll", "vkGetDisplayModeProperties2KHR")
Interceptor.attach(vkGetDisplayModeProperties2KHR, {onLeave: function (args) {send("vkGetDisplayModeProperties2KHR");}});

var vkGetDisplayModePropertiesKHR = Module.findExportByName("vulkan-1.dll", "vkGetDisplayModePropertiesKHR")
Interceptor.attach(vkGetDisplayModePropertiesKHR, {onLeave: function (args) {send("vkGetDisplayModePropertiesKHR");}});

var vkGetDisplayPlaneCapabilities2KHR = Module.findExportByName("vulkan-1.dll", "vkGetDisplayPlaneCapabilities2KHR")
Interceptor.attach(vkGetDisplayPlaneCapabilities2KHR, {onLeave: function (args) {send("vkGetDisplayPlaneCapabilities2KHR");}});

var vkGetDisplayPlaneCapabilitiesKHR = Module.findExportByName("vulkan-1.dll", "vkGetDisplayPlaneCapabilitiesKHR")
Interceptor.attach(vkGetDisplayPlaneCapabilitiesKHR, {onLeave: function (args) {send("vkGetDisplayPlaneCapabilitiesKHR");}});

var vkGetDisplayPlaneSupportedDisplaysKHR = Module.findExportByName("vulkan-1.dll", "vkGetDisplayPlaneSupportedDisplaysKHR")
Interceptor.attach(vkGetDisplayPlaneSupportedDisplaysKHR, {onLeave: function (args) {send("vkGetDisplayPlaneSupportedDisplaysKHR");}});

var vkGetEventStatus = Module.findExportByName("vulkan-1.dll", "vkGetEventStatus")
Interceptor.attach(vkGetEventStatus, {onLeave: function (args) {send("vkGetEventStatus");}});

var vkGetFenceStatus = Module.findExportByName("vulkan-1.dll", "vkGetFenceStatus")
Interceptor.attach(vkGetFenceStatus, {onLeave: function (args) {send("vkGetFenceStatus");}});

var vkGetImageMemoryRequirements = Module.findExportByName("vulkan-1.dll", "vkGetImageMemoryRequirements")
Interceptor.attach(vkGetImageMemoryRequirements, {onLeave: function (args) {send("vkGetImageMemoryRequirements");}});

var vkGetImageMemoryRequirements2 = Module.findExportByName("vulkan-1.dll", "vkGetImageMemoryRequirements2")
Interceptor.attach(vkGetImageMemoryRequirements2, {onLeave: function (args) {send("vkGetImageMemoryRequirements2");}});

var vkGetImageSparseMemoryRequirements = Module.findExportByName("vulkan-1.dll", "vkGetImageSparseMemoryRequirements")
Interceptor.attach(vkGetImageSparseMemoryRequirements, {onLeave: function (args) {send("vkGetImageSparseMemoryRequirements");}});

var vkGetImageSparseMemoryRequirements2 = Module.findExportByName("vulkan-1.dll", "vkGetImageSparseMemoryRequirements2")
Interceptor.attach(vkGetImageSparseMemoryRequirements2, {onLeave: function (args) {send("vkGetImageSparseMemoryRequirements2");}});

var vkGetImageSubresourceLayout = Module.findExportByName("vulkan-1.dll", "vkGetImageSubresourceLayout")
Interceptor.attach(vkGetImageSubresourceLayout, {onLeave: function (args) {send("vkGetImageSubresourceLayout");}});

var vkGetInstanceProcAddr = Module.findExportByName("vulkan-1.dll", "vkGetInstanceProcAddr")
Interceptor.attach(vkGetInstanceProcAddr, {onLeave: function (args) {send("vkGetInstanceProcAddr");}});

var vkGetPhysicalDeviceDisplayPlaneProperties2KHR = Module.findExportByName("vulkan-1.dll", "vkGetPhysicalDeviceDisplayPlaneProperties2KHR")
Interceptor.attach(vkGetPhysicalDeviceDisplayPlaneProperties2KHR, {onLeave: function (args) {send("vkGetPhysicalDeviceDisplayPlaneProperties2KHR");}});

var vkGetPhysicalDeviceDisplayPlanePropertiesKHR = Module.findExportByName("vulkan-1.dll", "vkGetPhysicalDeviceDisplayPlanePropertiesKHR")
Interceptor.attach(vkGetPhysicalDeviceDisplayPlanePropertiesKHR, {onLeave: function (args) {send("vkGetPhysicalDeviceDisplayPlanePropertiesKHR");}});

var vkGetPhysicalDeviceDisplayProperties2KHR = Module.findExportByName("vulkan-1.dll", "vkGetPhysicalDeviceDisplayProperties2KHR")
Interceptor.attach(vkGetPhysicalDeviceDisplayProperties2KHR, {onLeave: function (args) {send("vkGetPhysicalDeviceDisplayProperties2KHR");}});

var vkGetPhysicalDeviceDisplayPropertiesKHR = Module.findExportByName("vulkan-1.dll", "vkGetPhysicalDeviceDisplayPropertiesKHR")
Interceptor.attach(vkGetPhysicalDeviceDisplayPropertiesKHR, {onLeave: function (args) {send("vkGetPhysicalDeviceDisplayPropertiesKHR");}});

var vkGetPhysicalDeviceExternalBufferProperties = Module.findExportByName("vulkan-1.dll", "vkGetPhysicalDeviceExternalBufferProperties")
Interceptor.attach(vkGetPhysicalDeviceExternalBufferProperties, {onLeave: function (args) {send("vkGetPhysicalDeviceExternalBufferProperties");}});

var vkGetPhysicalDeviceExternalFenceProperties = Module.findExportByName("vulkan-1.dll", "vkGetPhysicalDeviceExternalFenceProperties")
Interceptor.attach(vkGetPhysicalDeviceExternalFenceProperties, {onLeave: function (args) {send("vkGetPhysicalDeviceExternalFenceProperties");}});

var vkGetPhysicalDeviceExternalSemaphoreProperties = Module.findExportByName("vulkan-1.dll", "vkGetPhysicalDeviceExternalSemaphoreProperties")
Interceptor.attach(vkGetPhysicalDeviceExternalSemaphoreProperties, {onLeave: function (args) {send("vkGetPhysicalDeviceExternalSemaphoreProperties");}});

var vkGetPhysicalDeviceFeatures = Module.findExportByName("vulkan-1.dll", "vkGetPhysicalDeviceFeatures")
Interceptor.attach(vkGetPhysicalDeviceFeatures, {onLeave: function (args) {send("vkGetPhysicalDeviceFeatures");}});

var vkGetPhysicalDeviceFeatures2 = Module.findExportByName("vulkan-1.dll", "vkGetPhysicalDeviceFeatures2")
Interceptor.attach(vkGetPhysicalDeviceFeatures2, {onLeave: function (args) {send("vkGetPhysicalDeviceFeatures2");}});

var vkGetPhysicalDeviceFormatProperties = Module.findExportByName("vulkan-1.dll", "vkGetPhysicalDeviceFormatProperties")
Interceptor.attach(vkGetPhysicalDeviceFormatProperties, {onLeave: function (args) {send("vkGetPhysicalDeviceFormatProperties");}});

var vkGetPhysicalDeviceFormatProperties2 = Module.findExportByName("vulkan-1.dll", "vkGetPhysicalDeviceFormatProperties2")
Interceptor.attach(vkGetPhysicalDeviceFormatProperties2, {onLeave: function (args) {send("vkGetPhysicalDeviceFormatProperties2");}});

var vkGetPhysicalDeviceImageFormatProperties = Module.findExportByName("vulkan-1.dll", "vkGetPhysicalDeviceImageFormatProperties")
Interceptor.attach(vkGetPhysicalDeviceImageFormatProperties, {onLeave: function (args) {send("vkGetPhysicalDeviceImageFormatProperties");}});

var vkGetPhysicalDeviceImageFormatProperties2 = Module.findExportByName("vulkan-1.dll", "vkGetPhysicalDeviceImageFormatProperties2")
Interceptor.attach(vkGetPhysicalDeviceImageFormatProperties2, {onLeave: function (args) {send("vkGetPhysicalDeviceImageFormatProperties2");}});

var vkGetPhysicalDeviceMemoryProperties = Module.findExportByName("vulkan-1.dll", "vkGetPhysicalDeviceMemoryProperties")
Interceptor.attach(vkGetPhysicalDeviceMemoryProperties, {onLeave: function (args) {send("vkGetPhysicalDeviceMemoryProperties");}});

var vkGetPhysicalDeviceMemoryProperties2 = Module.findExportByName("vulkan-1.dll", "vkGetPhysicalDeviceMemoryProperties2")
Interceptor.attach(vkGetPhysicalDeviceMemoryProperties2, {onLeave: function (args) {send("vkGetPhysicalDeviceMemoryProperties2");}});

var vkGetPhysicalDevicePresentRectanglesKHR = Module.findExportByName("vulkan-1.dll", "vkGetPhysicalDevicePresentRectanglesKHR")
Interceptor.attach(vkGetPhysicalDevicePresentRectanglesKHR, {onLeave: function (args) {send("vkGetPhysicalDevicePresentRectanglesKHR");}});

var vkGetPhysicalDeviceProperties = Module.findExportByName("vulkan-1.dll", "vkGetPhysicalDeviceProperties")
Interceptor.attach(vkGetPhysicalDeviceProperties, {onLeave: function (args) {send("vkGetPhysicalDeviceProperties");}});

var vkGetPhysicalDeviceProperties2 = Module.findExportByName("vulkan-1.dll", "vkGetPhysicalDeviceProperties2")
Interceptor.attach(vkGetPhysicalDeviceProperties2, {onLeave: function (args) {send("vkGetPhysicalDeviceProperties2");}});

var vkGetPhysicalDeviceQueueFamilyProperties = Module.findExportByName("vulkan-1.dll", "vkGetPhysicalDeviceQueueFamilyProperties")
Interceptor.attach(vkGetPhysicalDeviceQueueFamilyProperties, {onLeave: function (args) {send("vkGetPhysicalDeviceQueueFamilyProperties");}});

var vkGetPhysicalDeviceQueueFamilyProperties2 = Module.findExportByName("vulkan-1.dll", "vkGetPhysicalDeviceQueueFamilyProperties2")
Interceptor.attach(vkGetPhysicalDeviceQueueFamilyProperties2, {onLeave: function (args) {send("vkGetPhysicalDeviceQueueFamilyProperties2");}});

var vkGetPhysicalDeviceSparseImageFormatProperties = Module.findExportByName("vulkan-1.dll", "vkGetPhysicalDeviceSparseImageFormatProperties")
Interceptor.attach(vkGetPhysicalDeviceSparseImageFormatProperties, {onLeave: function (args) {send("vkGetPhysicalDeviceSparseImageFormatProperties");}});

var vkGetPhysicalDeviceSparseImageFormatProperties2 = Module.findExportByName("vulkan-1.dll", "vkGetPhysicalDeviceSparseImageFormatProperties2")
Interceptor.attach(vkGetPhysicalDeviceSparseImageFormatProperties2, {onLeave: function (args) {send("vkGetPhysicalDeviceSparseImageFormatProperties2");}});

var vkGetPhysicalDeviceSurfaceCapabilities2KHR = Module.findExportByName("vulkan-1.dll", "vkGetPhysicalDeviceSurfaceCapabilities2KHR")
Interceptor.attach(vkGetPhysicalDeviceSurfaceCapabilities2KHR, {onLeave: function (args) {send("vkGetPhysicalDeviceSurfaceCapabilities2KHR");}});

var vkGetPhysicalDeviceSurfaceCapabilitiesKHR = Module.findExportByName("vulkan-1.dll", "vkGetPhysicalDeviceSurfaceCapabilitiesKHR")
Interceptor.attach(vkGetPhysicalDeviceSurfaceCapabilitiesKHR, {onLeave: function (args) {send("vkGetPhysicalDeviceSurfaceCapabilitiesKHR");}});

var vkGetPhysicalDeviceSurfaceFormats2KHR = Module.findExportByName("vulkan-1.dll", "vkGetPhysicalDeviceSurfaceFormats2KHR")
Interceptor.attach(vkGetPhysicalDeviceSurfaceFormats2KHR, {onLeave: function (args) {send("vkGetPhysicalDeviceSurfaceFormats2KHR");}});

var vkGetPhysicalDeviceSurfaceFormatsKHR = Module.findExportByName("vulkan-1.dll", "vkGetPhysicalDeviceSurfaceFormatsKHR")
Interceptor.attach(vkGetPhysicalDeviceSurfaceFormatsKHR, {onLeave: function (args) {send("vkGetPhysicalDeviceSurfaceFormatsKHR");}});

var vkGetPhysicalDeviceSurfacePresentModesKHR = Module.findExportByName("vulkan-1.dll", "vkGetPhysicalDeviceSurfacePresentModesKHR")
Interceptor.attach(vkGetPhysicalDeviceSurfacePresentModesKHR, {onLeave: function (args) {send("vkGetPhysicalDeviceSurfacePresentModesKHR");}});

var vkGetPhysicalDeviceSurfaceSupportKHR = Module.findExportByName("vulkan-1.dll", "vkGetPhysicalDeviceSurfaceSupportKHR")
Interceptor.attach(vkGetPhysicalDeviceSurfaceSupportKHR, {onLeave: function (args) {send("vkGetPhysicalDeviceSurfaceSupportKHR");}});

var vkGetPhysicalDeviceToolProperties = Module.findExportByName("vulkan-1.dll", "vkGetPhysicalDeviceToolProperties")
Interceptor.attach(vkGetPhysicalDeviceToolProperties, {onLeave: function (args) {send("vkGetPhysicalDeviceToolProperties");}});

var vkGetPhysicalDeviceWin32PresentationSupportKHR = Module.findExportByName("vulkan-1.dll", "vkGetPhysicalDeviceWin32PresentationSupportKHR")
Interceptor.attach(vkGetPhysicalDeviceWin32PresentationSupportKHR, {onLeave: function (args) {send("vkGetPhysicalDeviceWin32PresentationSupportKHR");}});

var vkGetPipelineCacheData = Module.findExportByName("vulkan-1.dll", "vkGetPipelineCacheData")
Interceptor.attach(vkGetPipelineCacheData, {onLeave: function (args) {send("vkGetPipelineCacheData");}});

var vkGetPrivateData = Module.findExportByName("vulkan-1.dll", "vkGetPrivateData")
Interceptor.attach(vkGetPrivateData, {onLeave: function (args) {send("vkGetPrivateData");}});

var vkGetQueryPoolResults = Module.findExportByName("vulkan-1.dll", "vkGetQueryPoolResults")
Interceptor.attach(vkGetQueryPoolResults, {onLeave: function (args) {send("vkGetQueryPoolResults");}});

var vkGetRenderAreaGranularity = Module.findExportByName("vulkan-1.dll", "vkGetRenderAreaGranularity")
Interceptor.attach(vkGetRenderAreaGranularity, {onLeave: function (args) {send("vkGetRenderAreaGranularity");}});

var vkGetSemaphoreCounterValue = Module.findExportByName("vulkan-1.dll", "vkGetSemaphoreCounterValue")
Interceptor.attach(vkGetSemaphoreCounterValue, {onLeave: function (args) {send("vkGetSemaphoreCounterValue");}});

var vkGetSwapchainImagesKHR = Module.findExportByName("vulkan-1.dll", "vkGetSwapchainImagesKHR")
Interceptor.attach(vkGetSwapchainImagesKHR, {onLeave: function (args) {send("vkGetSwapchainImagesKHR");}});

var vkInvalidateMappedMemoryRanges = Module.findExportByName("vulkan-1.dll", "vkInvalidateMappedMemoryRanges")
Interceptor.attach(vkInvalidateMappedMemoryRanges, {onLeave: function (args) {send("vkInvalidateMappedMemoryRanges");}});

var vkMapMemory = Module.findExportByName("vulkan-1.dll", "vkMapMemory")
Interceptor.attach(vkMapMemory, {onLeave: function (args) {send("vkMapMemory");}});

var vkMergePipelineCaches = Module.findExportByName("vulkan-1.dll", "vkMergePipelineCaches")
Interceptor.attach(vkMergePipelineCaches, {onLeave: function (args) {send("vkMergePipelineCaches");}});

var vkQueueBindSparse = Module.findExportByName("vulkan-1.dll", "vkQueueBindSparse")
Interceptor.attach(vkQueueBindSparse, {onLeave: function (args) {send("vkQueueBindSparse");}});

var vkQueuePresentKHR = Module.findExportByName("vulkan-1.dll", "vkQueuePresentKHR")
Interceptor.attach(vkQueuePresentKHR, {onLeave: function (args) {send("vkQueuePresentKHR");}});

var vkQueueSubmit = Module.findExportByName("vulkan-1.dll", "vkQueueSubmit")
Interceptor.attach(vkQueueSubmit, {onLeave: function (args) {send("vkQueueSubmit");}});

var vkQueueSubmit2 = Module.findExportByName("vulkan-1.dll", "vkQueueSubmit2")
Interceptor.attach(vkQueueSubmit2, {onLeave: function (args) {send("vkQueueSubmit2");}});

var vkQueueWaitIdle = Module.findExportByName("vulkan-1.dll", "vkQueueWaitIdle")
Interceptor.attach(vkQueueWaitIdle, {onLeave: function (args) {send("vkQueueWaitIdle");}});

var vkResetCommandBuffer = Module.findExportByName("vulkan-1.dll", "vkResetCommandBuffer")
Interceptor.attach(vkResetCommandBuffer, {onLeave: function (args) {send("vkResetCommandBuffer");}});

var vkResetCommandPool = Module.findExportByName("vulkan-1.dll", "vkResetCommandPool")
Interceptor.attach(vkResetCommandPool, {onLeave: function (args) {send("vkResetCommandPool");}});

var vkResetDescriptorPool = Module.findExportByName("vulkan-1.dll", "vkResetDescriptorPool")
Interceptor.attach(vkResetDescriptorPool, {onLeave: function (args) {send("vkResetDescriptorPool");}});

var vkResetEvent = Module.findExportByName("vulkan-1.dll", "vkResetEvent")
Interceptor.attach(vkResetEvent, {onLeave: function (args) {send("vkResetEvent");}});

var vkResetFences = Module.findExportByName("vulkan-1.dll", "vkResetFences")
Interceptor.attach(vkResetFences, {onLeave: function (args) {send("vkResetFences");}});

var vkResetQueryPool = Module.findExportByName("vulkan-1.dll", "vkResetQueryPool")
Interceptor.attach(vkResetQueryPool, {onLeave: function (args) {send("vkResetQueryPool");}});

var vkSetEvent = Module.findExportByName("vulkan-1.dll", "vkSetEvent")
Interceptor.attach(vkSetEvent, {onLeave: function (args) {send("vkSetEvent");}});

var vkSetPrivateData = Module.findExportByName("vulkan-1.dll", "vkSetPrivateData")
Interceptor.attach(vkSetPrivateData, {onLeave: function (args) {send("vkSetPrivateData");}});

var vkSignalSemaphore = Module.findExportByName("vulkan-1.dll", "vkSignalSemaphore")
Interceptor.attach(vkSignalSemaphore, {onLeave: function (args) {send("vkSignalSemaphore");}});

var vkTrimCommandPool = Module.findExportByName("vulkan-1.dll", "vkTrimCommandPool")
Interceptor.attach(vkTrimCommandPool, {onLeave: function (args) {send("vkTrimCommandPool");}});

var vkUnmapMemory = Module.findExportByName("vulkan-1.dll", "vkUnmapMemory")
Interceptor.attach(vkUnmapMemory, {onLeave: function (args) {send("vkUnmapMemory");}});

var vkUpdateDescriptorSetWithTemplate = Module.findExportByName("vulkan-1.dll", "vkUpdateDescriptorSetWithTemplate")
Interceptor.attach(vkUpdateDescriptorSetWithTemplate, {onLeave: function (args) {send("vkUpdateDescriptorSetWithTemplate");}});

var vkUpdateDescriptorSets = Module.findExportByName("vulkan-1.dll", "vkUpdateDescriptorSets")
Interceptor.attach(vkUpdateDescriptorSets, {onLeave: function (args) {send("vkUpdateDescriptorSets");}});

var vkWaitForFences = Module.findExportByName("vulkan-1.dll", "vkWaitForFences")
Interceptor.attach(vkWaitForFences, {onLeave: function (args) {send("vkWaitForFences");}});

var vkWaitSemaphores = Module.findExportByName("vulkan-1.dll", "vkWaitSemaphores")
Interceptor.attach(vkWaitSemaphores, {onLeave: function (args) {send("vkWaitSemaphores");}});

