var AbortAllStatus = Module.findExportByName("F690Master.dll", "AbortAllStatus")
Interceptor.attach(AbortAllStatus, {onLeave: function (args) {send("AbortAllStatus");}});

var CancelIap = Module.findExportByName("F690Master.dll", "CancelIap")
Interceptor.attach(CancelIap, {onLeave: function (args) {send("CancelIap");}});

var DebugMode = Module.findExportByName("F690Master.dll", "DebugMode")
Interceptor.attach(DebugMode, {onLeave: function (args) {send("DebugMode");}});

var DestroyF690Master = Module.findExportByName("F690Master.dll", "DestroyF690Master")
Interceptor.attach(DestroyF690Master, {onLeave: function (args) {send("DestroyF690Master");}});

var ExitAuthMode = Module.findExportByName("F690Master.dll", "ExitAuthMode")
Interceptor.attach(ExitAuthMode, {onLeave: function (args) {send("ExitAuthMode");}});

var FinishedIap = Module.findExportByName("F690Master.dll", "FinishedIap")
Interceptor.attach(FinishedIap, {onLeave: function (args) {send("FinishedIap");}});

var GetChecksum = Module.findExportByName("F690Master.dll", "GetChecksum")
Interceptor.attach(GetChecksum, {onLeave: function (args) {send("GetChecksum");}});

var GetStatus = Module.findExportByName("F690Master.dll", "GetStatus")
Interceptor.attach(GetStatus, {onLeave: function (args) {send("GetStatus");}});

var GetVerFw = Module.findExportByName("F690Master.dll", "GetVerFw")
Interceptor.attach(GetVerFw, {onLeave: function (args) {send("GetVerFw");}});

var GetVerSpec = Module.findExportByName("F690Master.dll", "GetVerSpec")
Interceptor.attach(GetVerSpec, {onLeave: function (args) {send("GetVerSpec");}});

var InitialF690Master = Module.findExportByName("F690Master.dll", "InitialF690Master")
Interceptor.attach(InitialF690Master, {onLeave: function (args) {send("InitialF690Master");}});

var IsBootDeviceExist = Module.findExportByName("F690Master.dll", "IsBootDeviceExist")
Interceptor.attach(IsBootDeviceExist, {onLeave: function (args) {send("IsBootDeviceExist");}});

var IsEEPromEnable = Module.findExportByName("F690Master.dll", "IsEEPromEnable")
Interceptor.attach(IsEEPromEnable, {onLeave: function (args) {send("IsEEPromEnable");}});

var ReadOptData = Module.findExportByName("F690Master.dll", "ReadOptData")
Interceptor.attach(ReadOptData, {onLeave: function (args) {send("ReadOptData");}});

var ReadRomData = Module.findExportByName("F690Master.dll", "ReadRomData")
Interceptor.attach(ReadRomData, {onLeave: function (args) {send("ReadRomData");}});

var ReadWriteRomStatus = Module.findExportByName("F690Master.dll", "ReadWriteRomStatus")
Interceptor.attach(ReadWriteRomStatus, {onLeave: function (args) {send("ReadWriteRomStatus");}});

var RunIap = Module.findExportByName("F690Master.dll", "RunIap")
Interceptor.attach(RunIap, {onLeave: function (args) {send("RunIap");}});

var SoftwareReset = Module.findExportByName("F690Master.dll", "SoftwareReset")
Interceptor.attach(SoftwareReset, {onLeave: function (args) {send("SoftwareReset");}});

var WriteCheckSum = Module.findExportByName("F690Master.dll", "WriteCheckSum")
Interceptor.attach(WriteCheckSum, {onLeave: function (args) {send("WriteCheckSum");}});

var WriteOptData = Module.findExportByName("F690Master.dll", "WriteOptData")
Interceptor.attach(WriteOptData, {onLeave: function (args) {send("WriteOptData");}});

var WriteRomData = Module.findExportByName("F690Master.dll", "WriteRomData")
Interceptor.attach(WriteRomData, {onLeave: function (args) {send("WriteRomData");}});

