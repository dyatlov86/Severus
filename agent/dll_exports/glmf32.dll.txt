var __glsParser_create = Module.findExportByName("glmf32.dll", "__glsParser_create")
Interceptor.attach(__glsParser_create, {onLeave: function (args) {send("__glsParser_create");}});

var __glsParser_print = Module.findExportByName("glmf32.dll", "__glsParser_print")
Interceptor.attach(__glsParser_print, {onLeave: function (args) {send("__glsParser_print");}});

var __glsString_appendChar = Module.findExportByName("glmf32.dll", "__glsString_appendChar")
Interceptor.attach(__glsString_appendChar, {onLeave: function (args) {send("__glsString_appendChar");}});

var __glsString_assign = Module.findExportByName("glmf32.dll", "__glsString_assign")
Interceptor.attach(__glsString_assign, {onLeave: function (args) {send("__glsString_assign");}});

var __glsString_init = Module.findExportByName("glmf32.dll", "__glsString_init")
Interceptor.attach(__glsString_init, {onLeave: function (args) {send("__glsString_init");}});

var glsAbortCall = Module.findExportByName("glmf32.dll", "glsAbortCall")
Interceptor.attach(glsAbortCall, {onLeave: function (args) {send("glsAbortCall");}});

var glsAppRef = Module.findExportByName("glmf32.dll", "glsAppRef")
Interceptor.attach(glsAppRef, {onLeave: function (args) {send("glsAppRef");}});

var glsBeginCapture = Module.findExportByName("glmf32.dll", "glsBeginCapture")
Interceptor.attach(glsBeginCapture, {onLeave: function (args) {send("glsBeginCapture");}});

var glsBeginGLS = Module.findExportByName("glmf32.dll", "glsBeginGLS")
Interceptor.attach(glsBeginGLS, {onLeave: function (args) {send("glsBeginGLS");}});

var glsBeginObj = Module.findExportByName("glmf32.dll", "glsBeginObj")
Interceptor.attach(glsBeginObj, {onLeave: function (args) {send("glsBeginObj");}});

var glsBinary = Module.findExportByName("glmf32.dll", "glsBinary")
Interceptor.attach(glsBinary, {onLeave: function (args) {send("glsBinary");}});

var glsBlock = Module.findExportByName("glmf32.dll", "glsBlock")
Interceptor.attach(glsBlock, {onLeave: function (args) {send("glsBlock");}});

var glsCallArray = Module.findExportByName("glmf32.dll", "glsCallArray")
Interceptor.attach(glsCallArray, {onLeave: function (args) {send("glsCallArray");}});

var glsCallArrayInContext = Module.findExportByName("glmf32.dll", "glsCallArrayInContext")
Interceptor.attach(glsCallArrayInContext, {onLeave: function (args) {send("glsCallArrayInContext");}});

var glsCallStream = Module.findExportByName("glmf32.dll", "glsCallStream")
Interceptor.attach(glsCallStream, {onLeave: function (args) {send("glsCallStream");}});

var glsCaptureFlags = Module.findExportByName("glmf32.dll", "glsCaptureFlags")
Interceptor.attach(glsCaptureFlags, {onLeave: function (args) {send("glsCaptureFlags");}});

var glsCaptureFunc = Module.findExportByName("glmf32.dll", "glsCaptureFunc")
Interceptor.attach(glsCaptureFunc, {onLeave: function (args) {send("glsCaptureFunc");}});

var glsChannel = Module.findExportByName("glmf32.dll", "glsChannel")
Interceptor.attach(glsChannel, {onLeave: function (args) {send("glsChannel");}});

var glsCharubz = Module.findExportByName("glmf32.dll", "glsCharubz")
Interceptor.attach(glsCharubz, {onLeave: function (args) {send("glsCharubz");}});

var glsCommandAPI = Module.findExportByName("glmf32.dll", "glsCommandAPI")
Interceptor.attach(glsCommandAPI, {onLeave: function (args) {send("glsCommandAPI");}});

var glsCommandFunc = Module.findExportByName("glmf32.dll", "glsCommandFunc")
Interceptor.attach(glsCommandFunc, {onLeave: function (args) {send("glsCommandFunc");}});

var glsCommandString = Module.findExportByName("glmf32.dll", "glsCommandString")
Interceptor.attach(glsCommandString, {onLeave: function (args) {send("glsCommandString");}});

var glsComment = Module.findExportByName("glmf32.dll", "glsComment")
Interceptor.attach(glsComment, {onLeave: function (args) {send("glsComment");}});

var glsContext = Module.findExportByName("glmf32.dll", "glsContext")
Interceptor.attach(glsContext, {onLeave: function (args) {send("glsContext");}});

var glsCopyStream = Module.findExportByName("glmf32.dll", "glsCopyStream")
Interceptor.attach(glsCopyStream, {onLeave: function (args) {send("glsCopyStream");}});

var glsDataPointer = Module.findExportByName("glmf32.dll", "glsDataPointer")
Interceptor.attach(glsDataPointer, {onLeave: function (args) {send("glsDataPointer");}});

var glsDeleteContext = Module.findExportByName("glmf32.dll", "glsDeleteContext")
Interceptor.attach(glsDeleteContext, {onLeave: function (args) {send("glsDeleteContext");}});

var glsDeleteReadPrefix = Module.findExportByName("glmf32.dll", "glsDeleteReadPrefix")
Interceptor.attach(glsDeleteReadPrefix, {onLeave: function (args) {send("glsDeleteReadPrefix");}});

var glsDeleteStream = Module.findExportByName("glmf32.dll", "glsDeleteStream")
Interceptor.attach(glsDeleteStream, {onLeave: function (args) {send("glsDeleteStream");}});

var glsDisplayMapfv = Module.findExportByName("glmf32.dll", "glsDisplayMapfv")
Interceptor.attach(glsDisplayMapfv, {onLeave: function (args) {send("glsDisplayMapfv");}});

var glsEndCapture = Module.findExportByName("glmf32.dll", "glsEndCapture")
Interceptor.attach(glsEndCapture, {onLeave: function (args) {send("glsEndCapture");}});

var glsEndGLS = Module.findExportByName("glmf32.dll", "glsEndGLS")
Interceptor.attach(glsEndGLS, {onLeave: function (args) {send("glsEndGLS");}});

var glsEndObj = Module.findExportByName("glmf32.dll", "glsEndObj")
Interceptor.attach(glsEndObj, {onLeave: function (args) {send("glsEndObj");}});

var glsEnumString = Module.findExportByName("glmf32.dll", "glsEnumString")
Interceptor.attach(glsEnumString, {onLeave: function (args) {send("glsEnumString");}});

var glsError = Module.findExportByName("glmf32.dll", "glsError")
Interceptor.attach(glsError, {onLeave: function (args) {send("glsError");}});

var glsFlush = Module.findExportByName("glmf32.dll", "glsFlush")
Interceptor.attach(glsFlush, {onLeave: function (args) {send("glsFlush");}});

var glsGLRC = Module.findExportByName("glmf32.dll", "glsGLRC")
Interceptor.attach(glsGLRC, {onLeave: function (args) {send("glsGLRC");}});

var glsGLRCLayer = Module.findExportByName("glmf32.dll", "glsGLRCLayer")
Interceptor.attach(glsGLRCLayer, {onLeave: function (args) {send("glsGLRCLayer");}});

var glsGenContext = Module.findExportByName("glmf32.dll", "glsGenContext")
Interceptor.attach(glsGenContext, {onLeave: function (args) {send("glsGenContext");}});

var glsGetAllContexts = Module.findExportByName("glmf32.dll", "glsGetAllContexts")
Interceptor.attach(glsGetAllContexts, {onLeave: function (args) {send("glsGetAllContexts");}});

var glsGetCaptureDispatchTable = Module.findExportByName("glmf32.dll", "glsGetCaptureDispatchTable")
Interceptor.attach(glsGetCaptureDispatchTable, {onLeave: function (args) {send("glsGetCaptureDispatchTable");}});

var glsGetCaptureExecTable = Module.findExportByName("glmf32.dll", "glsGetCaptureExecTable")
Interceptor.attach(glsGetCaptureExecTable, {onLeave: function (args) {send("glsGetCaptureExecTable");}});

var glsGetCaptureFlags = Module.findExportByName("glmf32.dll", "glsGetCaptureFlags")
Interceptor.attach(glsGetCaptureFlags, {onLeave: function (args) {send("glsGetCaptureFlags");}});

var glsGetCommandAlignment = Module.findExportByName("glmf32.dll", "glsGetCommandAlignment")
Interceptor.attach(glsGetCommandAlignment, {onLeave: function (args) {send("glsGetCommandAlignment");}});

var glsGetCommandAttrib = Module.findExportByName("glmf32.dll", "glsGetCommandAttrib")
Interceptor.attach(glsGetCommandAttrib, {onLeave: function (args) {send("glsGetCommandAttrib");}});

var glsGetCommandFunc = Module.findExportByName("glmf32.dll", "glsGetCommandFunc")
Interceptor.attach(glsGetCommandFunc, {onLeave: function (args) {send("glsGetCommandFunc");}});

var glsGetConsti = Module.findExportByName("glmf32.dll", "glsGetConsti")
Interceptor.attach(glsGetConsti, {onLeave: function (args) {send("glsGetConsti");}});

var glsGetConstiv = Module.findExportByName("glmf32.dll", "glsGetConstiv")
Interceptor.attach(glsGetConstiv, {onLeave: function (args) {send("glsGetConstiv");}});

var glsGetConstubz = Module.findExportByName("glmf32.dll", "glsGetConstubz")
Interceptor.attach(glsGetConstubz, {onLeave: function (args) {send("glsGetConstubz");}});

var glsGetContextFunc = Module.findExportByName("glmf32.dll", "glsGetContextFunc")
Interceptor.attach(glsGetContextFunc, {onLeave: function (args) {send("glsGetContextFunc");}});

var glsGetContextListl = Module.findExportByName("glmf32.dll", "glsGetContextListl")
Interceptor.attach(glsGetContextListl, {onLeave: function (args) {send("glsGetContextListl");}});

var glsGetContextListubz = Module.findExportByName("glmf32.dll", "glsGetContextListubz")
Interceptor.attach(glsGetContextListubz, {onLeave: function (args) {send("glsGetContextListubz");}});

var glsGetContextPointer = Module.findExportByName("glmf32.dll", "glsGetContextPointer")
Interceptor.attach(glsGetContextPointer, {onLeave: function (args) {send("glsGetContextPointer");}});

var glsGetContexti = Module.findExportByName("glmf32.dll", "glsGetContexti")
Interceptor.attach(glsGetContexti, {onLeave: function (args) {send("glsGetContexti");}});

var glsGetContextubz = Module.findExportByName("glmf32.dll", "glsGetContextubz")
Interceptor.attach(glsGetContextubz, {onLeave: function (args) {send("glsGetContextubz");}});

var glsGetCurrentContext = Module.findExportByName("glmf32.dll", "glsGetCurrentContext")
Interceptor.attach(glsGetCurrentContext, {onLeave: function (args) {send("glsGetCurrentContext");}});

var glsGetCurrentTime = Module.findExportByName("glmf32.dll", "glsGetCurrentTime")
Interceptor.attach(glsGetCurrentTime, {onLeave: function (args) {send("glsGetCurrentTime");}});

var glsGetError = Module.findExportByName("glmf32.dll", "glsGetError")
Interceptor.attach(glsGetError, {onLeave: function (args) {send("glsGetError");}});

var glsGetGLRCi = Module.findExportByName("glmf32.dll", "glsGetGLRCi")
Interceptor.attach(glsGetGLRCi, {onLeave: function (args) {send("glsGetGLRCi");}});

var glsGetHeaderf = Module.findExportByName("glmf32.dll", "glsGetHeaderf")
Interceptor.attach(glsGetHeaderf, {onLeave: function (args) {send("glsGetHeaderf");}});

var glsGetHeaderfv = Module.findExportByName("glmf32.dll", "glsGetHeaderfv")
Interceptor.attach(glsGetHeaderfv, {onLeave: function (args) {send("glsGetHeaderfv");}});

var glsGetHeaderi = Module.findExportByName("glmf32.dll", "glsGetHeaderi")
Interceptor.attach(glsGetHeaderi, {onLeave: function (args) {send("glsGetHeaderi");}});

var glsGetHeaderiv = Module.findExportByName("glmf32.dll", "glsGetHeaderiv")
Interceptor.attach(glsGetHeaderiv, {onLeave: function (args) {send("glsGetHeaderiv");}});

var glsGetHeaderubz = Module.findExportByName("glmf32.dll", "glsGetHeaderubz")
Interceptor.attach(glsGetHeaderubz, {onLeave: function (args) {send("glsGetHeaderubz");}});

var glsGetLayerf = Module.findExportByName("glmf32.dll", "glsGetLayerf")
Interceptor.attach(glsGetLayerf, {onLeave: function (args) {send("glsGetLayerf");}});

var glsGetLayeri = Module.findExportByName("glmf32.dll", "glsGetLayeri")
Interceptor.attach(glsGetLayeri, {onLeave: function (args) {send("glsGetLayeri");}});

var glsGetOpcodeCount = Module.findExportByName("glmf32.dll", "glsGetOpcodeCount")
Interceptor.attach(glsGetOpcodeCount, {onLeave: function (args) {send("glsGetOpcodeCount");}});

var glsGetOpcodes = Module.findExportByName("glmf32.dll", "glsGetOpcodes")
Interceptor.attach(glsGetOpcodes, {onLeave: function (args) {send("glsGetOpcodes");}});

var glsGetStreamAttrib = Module.findExportByName("glmf32.dll", "glsGetStreamAttrib")
Interceptor.attach(glsGetStreamAttrib, {onLeave: function (args) {send("glsGetStreamAttrib");}});

var glsGetStreamCRC32 = Module.findExportByName("glmf32.dll", "glsGetStreamCRC32")
Interceptor.attach(glsGetStreamCRC32, {onLeave: function (args) {send("glsGetStreamCRC32");}});

var glsGetStreamReadName = Module.findExportByName("glmf32.dll", "glsGetStreamReadName")
Interceptor.attach(glsGetStreamReadName, {onLeave: function (args) {send("glsGetStreamReadName");}});

var glsGetStreamSize = Module.findExportByName("glmf32.dll", "glsGetStreamSize")
Interceptor.attach(glsGetStreamSize, {onLeave: function (args) {send("glsGetStreamSize");}});

var glsGetStreamType = Module.findExportByName("glmf32.dll", "glsGetStreamType")
Interceptor.attach(glsGetStreamType, {onLeave: function (args) {send("glsGetStreamType");}});

var glsHeaderGLRCi = Module.findExportByName("glmf32.dll", "glsHeaderGLRCi")
Interceptor.attach(glsHeaderGLRCi, {onLeave: function (args) {send("glsHeaderGLRCi");}});

var glsHeaderLayerf = Module.findExportByName("glmf32.dll", "glsHeaderLayerf")
Interceptor.attach(glsHeaderLayerf, {onLeave: function (args) {send("glsHeaderLayerf");}});

var glsHeaderLayeri = Module.findExportByName("glmf32.dll", "glsHeaderLayeri")
Interceptor.attach(glsHeaderLayeri, {onLeave: function (args) {send("glsHeaderLayeri");}});

var glsHeaderf = Module.findExportByName("glmf32.dll", "glsHeaderf")
Interceptor.attach(glsHeaderf, {onLeave: function (args) {send("glsHeaderf");}});

var glsHeaderfv = Module.findExportByName("glmf32.dll", "glsHeaderfv")
Interceptor.attach(glsHeaderfv, {onLeave: function (args) {send("glsHeaderfv");}});

var glsHeaderi = Module.findExportByName("glmf32.dll", "glsHeaderi")
Interceptor.attach(glsHeaderi, {onLeave: function (args) {send("glsHeaderi");}});

var glsHeaderiv = Module.findExportByName("glmf32.dll", "glsHeaderiv")
Interceptor.attach(glsHeaderiv, {onLeave: function (args) {send("glsHeaderiv");}});

var glsHeaderubz = Module.findExportByName("glmf32.dll", "glsHeaderubz")
Interceptor.attach(glsHeaderubz, {onLeave: function (args) {send("glsHeaderubz");}});

var glsIsContext = Module.findExportByName("glmf32.dll", "glsIsContext")
Interceptor.attach(glsIsContext, {onLeave: function (args) {send("glsIsContext");}});

var glsIsContextStream = Module.findExportByName("glmf32.dll", "glsIsContextStream")
Interceptor.attach(glsIsContextStream, {onLeave: function (args) {send("glsIsContextStream");}});

var glsIsExtensionSupported = Module.findExportByName("glmf32.dll", "glsIsExtensionSupported")
Interceptor.attach(glsIsExtensionSupported, {onLeave: function (args) {send("glsIsExtensionSupported");}});

var glsIsUTF8String = Module.findExportByName("glmf32.dll", "glsIsUTF8String")
Interceptor.attach(glsIsUTF8String, {onLeave: function (args) {send("glsIsUTF8String");}});

var glsLong = Module.findExportByName("glmf32.dll", "glsLong")
Interceptor.attach(glsLong, {onLeave: function (args) {send("glsLong");}});

var glsLongHigh = Module.findExportByName("glmf32.dll", "glsLongHigh")
Interceptor.attach(glsLongHigh, {onLeave: function (args) {send("glsLongHigh");}});

var glsLongLow = Module.findExportByName("glmf32.dll", "glsLongLow")
Interceptor.attach(glsLongLow, {onLeave: function (args) {send("glsLongLow");}});

var glsNullCommandFunc = Module.findExportByName("glmf32.dll", "glsNullCommandFunc")
Interceptor.attach(glsNullCommandFunc, {onLeave: function (args) {send("glsNullCommandFunc");}});

var glsNumb = Module.findExportByName("glmf32.dll", "glsNumb")
Interceptor.attach(glsNumb, {onLeave: function (args) {send("glsNumb");}});

var glsNumbv = Module.findExportByName("glmf32.dll", "glsNumbv")
Interceptor.attach(glsNumbv, {onLeave: function (args) {send("glsNumbv");}});

var glsNumd = Module.findExportByName("glmf32.dll", "glsNumd")
Interceptor.attach(glsNumd, {onLeave: function (args) {send("glsNumd");}});

var glsNumdv = Module.findExportByName("glmf32.dll", "glsNumdv")
Interceptor.attach(glsNumdv, {onLeave: function (args) {send("glsNumdv");}});

var glsNumf = Module.findExportByName("glmf32.dll", "glsNumf")
Interceptor.attach(glsNumf, {onLeave: function (args) {send("glsNumf");}});

var glsNumfv = Module.findExportByName("glmf32.dll", "glsNumfv")
Interceptor.attach(glsNumfv, {onLeave: function (args) {send("glsNumfv");}});

var glsNumi = Module.findExportByName("glmf32.dll", "glsNumi")
Interceptor.attach(glsNumi, {onLeave: function (args) {send("glsNumi");}});

var glsNumiv = Module.findExportByName("glmf32.dll", "glsNumiv")
Interceptor.attach(glsNumiv, {onLeave: function (args) {send("glsNumiv");}});

var glsNuml = Module.findExportByName("glmf32.dll", "glsNuml")
Interceptor.attach(glsNuml, {onLeave: function (args) {send("glsNuml");}});

var glsNumlv = Module.findExportByName("glmf32.dll", "glsNumlv")
Interceptor.attach(glsNumlv, {onLeave: function (args) {send("glsNumlv");}});

var glsNums = Module.findExportByName("glmf32.dll", "glsNums")
Interceptor.attach(glsNums, {onLeave: function (args) {send("glsNums");}});

var glsNumsv = Module.findExportByName("glmf32.dll", "glsNumsv")
Interceptor.attach(glsNumsv, {onLeave: function (args) {send("glsNumsv");}});

var glsNumub = Module.findExportByName("glmf32.dll", "glsNumub")
Interceptor.attach(glsNumub, {onLeave: function (args) {send("glsNumub");}});

var glsNumubv = Module.findExportByName("glmf32.dll", "glsNumubv")
Interceptor.attach(glsNumubv, {onLeave: function (args) {send("glsNumubv");}});

var glsNumui = Module.findExportByName("glmf32.dll", "glsNumui")
Interceptor.attach(glsNumui, {onLeave: function (args) {send("glsNumui");}});

var glsNumuiv = Module.findExportByName("glmf32.dll", "glsNumuiv")
Interceptor.attach(glsNumuiv, {onLeave: function (args) {send("glsNumuiv");}});

var glsNumul = Module.findExportByName("glmf32.dll", "glsNumul")
Interceptor.attach(glsNumul, {onLeave: function (args) {send("glsNumul");}});

var glsNumulv = Module.findExportByName("glmf32.dll", "glsNumulv")
Interceptor.attach(glsNumulv, {onLeave: function (args) {send("glsNumulv");}});

var glsNumus = Module.findExportByName("glmf32.dll", "glsNumus")
Interceptor.attach(glsNumus, {onLeave: function (args) {send("glsNumus");}});

var glsNumusv = Module.findExportByName("glmf32.dll", "glsNumusv")
Interceptor.attach(glsNumusv, {onLeave: function (args) {send("glsNumusv");}});

var glsPad = Module.findExportByName("glmf32.dll", "glsPad")
Interceptor.attach(glsPad, {onLeave: function (args) {send("glsPad");}});

var glsPixelSetup = Module.findExportByName("glmf32.dll", "glsPixelSetup")
Interceptor.attach(glsPixelSetup, {onLeave: function (args) {send("glsPixelSetup");}});

var glsPixelSetupGen = Module.findExportByName("glmf32.dll", "glsPixelSetupGen")
Interceptor.attach(glsPixelSetupGen, {onLeave: function (args) {send("glsPixelSetupGen");}});

var glsReadFunc = Module.findExportByName("glmf32.dll", "glsReadFunc")
Interceptor.attach(glsReadFunc, {onLeave: function (args) {send("glsReadFunc");}});

var glsReadPrefix = Module.findExportByName("glmf32.dll", "glsReadPrefix")
Interceptor.attach(glsReadPrefix, {onLeave: function (args) {send("glsReadPrefix");}});

var glsRequireExtension = Module.findExportByName("glmf32.dll", "glsRequireExtension")
Interceptor.attach(glsRequireExtension, {onLeave: function (args) {send("glsRequireExtension");}});

var glsSwapBuffers = Module.findExportByName("glmf32.dll", "glsSwapBuffers")
Interceptor.attach(glsSwapBuffers, {onLeave: function (args) {send("glsSwapBuffers");}});

var glsUCS1toUTF8z = Module.findExportByName("glmf32.dll", "glsUCS1toUTF8z")
Interceptor.attach(glsUCS1toUTF8z, {onLeave: function (args) {send("glsUCS1toUTF8z");}});

var glsUCS2toUTF8z = Module.findExportByName("glmf32.dll", "glsUCS2toUTF8z")
Interceptor.attach(glsUCS2toUTF8z, {onLeave: function (args) {send("glsUCS2toUTF8z");}});

var glsUCS4toUTF8 = Module.findExportByName("glmf32.dll", "glsUCS4toUTF8")
Interceptor.attach(glsUCS4toUTF8, {onLeave: function (args) {send("glsUCS4toUTF8");}});

var glsUCS4toUTF8z = Module.findExportByName("glmf32.dll", "glsUCS4toUTF8z")
Interceptor.attach(glsUCS4toUTF8z, {onLeave: function (args) {send("glsUCS4toUTF8z");}});

var glsUCStoUTF8z = Module.findExportByName("glmf32.dll", "glsUCStoUTF8z")
Interceptor.attach(glsUCStoUTF8z, {onLeave: function (args) {send("glsUCStoUTF8z");}});

var glsULong = Module.findExportByName("glmf32.dll", "glsULong")
Interceptor.attach(glsULong, {onLeave: function (args) {send("glsULong");}});

var glsULongHigh = Module.findExportByName("glmf32.dll", "glsULongHigh")
Interceptor.attach(glsULongHigh, {onLeave: function (args) {send("glsULongHigh");}});

var glsULongLow = Module.findExportByName("glmf32.dll", "glsULongLow")
Interceptor.attach(glsULongLow, {onLeave: function (args) {send("glsULongLow");}});

var glsUTF8toUCS1z = Module.findExportByName("glmf32.dll", "glsUTF8toUCS1z")
Interceptor.attach(glsUTF8toUCS1z, {onLeave: function (args) {send("glsUTF8toUCS1z");}});

var glsUTF8toUCS2z = Module.findExportByName("glmf32.dll", "glsUTF8toUCS2z")
Interceptor.attach(glsUTF8toUCS2z, {onLeave: function (args) {send("glsUTF8toUCS2z");}});

var glsUTF8toUCS4 = Module.findExportByName("glmf32.dll", "glsUTF8toUCS4")
Interceptor.attach(glsUTF8toUCS4, {onLeave: function (args) {send("glsUTF8toUCS4");}});

var glsUTF8toUCS4z = Module.findExportByName("glmf32.dll", "glsUTF8toUCS4z")
Interceptor.attach(glsUTF8toUCS4z, {onLeave: function (args) {send("glsUTF8toUCS4z");}});

var glsUTF8toUCSz = Module.findExportByName("glmf32.dll", "glsUTF8toUCSz")
Interceptor.attach(glsUTF8toUCSz, {onLeave: function (args) {send("glsUTF8toUCSz");}});

var glsUnreadFunc = Module.findExportByName("glmf32.dll", "glsUnreadFunc")
Interceptor.attach(glsUnreadFunc, {onLeave: function (args) {send("glsUnreadFunc");}});

var glsUnsupportedCommand = Module.findExportByName("glmf32.dll", "glsUnsupportedCommand")
Interceptor.attach(glsUnsupportedCommand, {onLeave: function (args) {send("glsUnsupportedCommand");}});

var glsUpdateCaptureExecTable = Module.findExportByName("glmf32.dll", "glsUpdateCaptureExecTable")
Interceptor.attach(glsUpdateCaptureExecTable, {onLeave: function (args) {send("glsUpdateCaptureExecTable");}});

var glsWriteFunc = Module.findExportByName("glmf32.dll", "glsWriteFunc")
Interceptor.attach(glsWriteFunc, {onLeave: function (args) {send("glsWriteFunc");}});

var glsWritePrefix = Module.findExportByName("glmf32.dll", "glsWritePrefix")
Interceptor.attach(glsWritePrefix, {onLeave: function (args) {send("glsWritePrefix");}});

