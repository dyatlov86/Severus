var UCNV_FROM_U_CALLBACK_ESCAPE = Module.findExportByName("icuuc.dll", "UCNV_FROM_U_CALLBACK_ESCAPE")
Interceptor.attach(UCNV_FROM_U_CALLBACK_ESCAPE, {onLeave: function (args) {send("UCNV_FROM_U_CALLBACK_ESCAPE");}});

var UCNV_FROM_U_CALLBACK_SKIP = Module.findExportByName("icuuc.dll", "UCNV_FROM_U_CALLBACK_SKIP")
Interceptor.attach(UCNV_FROM_U_CALLBACK_SKIP, {onLeave: function (args) {send("UCNV_FROM_U_CALLBACK_SKIP");}});

var UCNV_FROM_U_CALLBACK_STOP = Module.findExportByName("icuuc.dll", "UCNV_FROM_U_CALLBACK_STOP")
Interceptor.attach(UCNV_FROM_U_CALLBACK_STOP, {onLeave: function (args) {send("UCNV_FROM_U_CALLBACK_STOP");}});

var UCNV_FROM_U_CALLBACK_SUBSTITUTE = Module.findExportByName("icuuc.dll", "UCNV_FROM_U_CALLBACK_SUBSTITUTE")
Interceptor.attach(UCNV_FROM_U_CALLBACK_SUBSTITUTE, {onLeave: function (args) {send("UCNV_FROM_U_CALLBACK_SUBSTITUTE");}});

var UCNV_TO_U_CALLBACK_ESCAPE = Module.findExportByName("icuuc.dll", "UCNV_TO_U_CALLBACK_ESCAPE")
Interceptor.attach(UCNV_TO_U_CALLBACK_ESCAPE, {onLeave: function (args) {send("UCNV_TO_U_CALLBACK_ESCAPE");}});

var UCNV_TO_U_CALLBACK_SKIP = Module.findExportByName("icuuc.dll", "UCNV_TO_U_CALLBACK_SKIP")
Interceptor.attach(UCNV_TO_U_CALLBACK_SKIP, {onLeave: function (args) {send("UCNV_TO_U_CALLBACK_SKIP");}});

var UCNV_TO_U_CALLBACK_STOP = Module.findExportByName("icuuc.dll", "UCNV_TO_U_CALLBACK_STOP")
Interceptor.attach(UCNV_TO_U_CALLBACK_STOP, {onLeave: function (args) {send("UCNV_TO_U_CALLBACK_STOP");}});

var UCNV_TO_U_CALLBACK_SUBSTITUTE = Module.findExportByName("icuuc.dll", "UCNV_TO_U_CALLBACK_SUBSTITUTE")
Interceptor.attach(UCNV_TO_U_CALLBACK_SUBSTITUTE, {onLeave: function (args) {send("UCNV_TO_U_CALLBACK_SUBSTITUTE");}});

var u_UCharsToChars = Module.findExportByName("icuuc.dll", "u_UCharsToChars")
Interceptor.attach(u_UCharsToChars, {onLeave: function (args) {send("u_UCharsToChars");}});

var u_austrcpy = Module.findExportByName("icuuc.dll", "u_austrcpy")
Interceptor.attach(u_austrcpy, {onLeave: function (args) {send("u_austrcpy");}});

var u_austrncpy = Module.findExportByName("icuuc.dll", "u_austrncpy")
Interceptor.attach(u_austrncpy, {onLeave: function (args) {send("u_austrncpy");}});

var u_catclose = Module.findExportByName("icuuc.dll", "u_catclose")
Interceptor.attach(u_catclose, {onLeave: function (args) {send("u_catclose");}});

var u_catgets = Module.findExportByName("icuuc.dll", "u_catgets")
Interceptor.attach(u_catgets, {onLeave: function (args) {send("u_catgets");}});

var u_catopen = Module.findExportByName("icuuc.dll", "u_catopen")
Interceptor.attach(u_catopen, {onLeave: function (args) {send("u_catopen");}});

var u_charAge = Module.findExportByName("icuuc.dll", "u_charAge")
Interceptor.attach(u_charAge, {onLeave: function (args) {send("u_charAge");}});

var u_charDigitValue = Module.findExportByName("icuuc.dll", "u_charDigitValue")
Interceptor.attach(u_charDigitValue, {onLeave: function (args) {send("u_charDigitValue");}});

var u_charDirection = Module.findExportByName("icuuc.dll", "u_charDirection")
Interceptor.attach(u_charDirection, {onLeave: function (args) {send("u_charDirection");}});

var u_charFromName = Module.findExportByName("icuuc.dll", "u_charFromName")
Interceptor.attach(u_charFromName, {onLeave: function (args) {send("u_charFromName");}});

var u_charMirror = Module.findExportByName("icuuc.dll", "u_charMirror")
Interceptor.attach(u_charMirror, {onLeave: function (args) {send("u_charMirror");}});

var u_charName = Module.findExportByName("icuuc.dll", "u_charName")
Interceptor.attach(u_charName, {onLeave: function (args) {send("u_charName");}});

var u_charType = Module.findExportByName("icuuc.dll", "u_charType")
Interceptor.attach(u_charType, {onLeave: function (args) {send("u_charType");}});

var u_charsToUChars = Module.findExportByName("icuuc.dll", "u_charsToUChars")
Interceptor.attach(u_charsToUChars, {onLeave: function (args) {send("u_charsToUChars");}});

var u_cleanup = Module.findExportByName("icuuc.dll", "u_cleanup")
Interceptor.attach(u_cleanup, {onLeave: function (args) {send("u_cleanup");}});

var u_countChar32 = Module.findExportByName("icuuc.dll", "u_countChar32")
Interceptor.attach(u_countChar32, {onLeave: function (args) {send("u_countChar32");}});

var u_digit = Module.findExportByName("icuuc.dll", "u_digit")
Interceptor.attach(u_digit, {onLeave: function (args) {send("u_digit");}});

var u_enumCharNames = Module.findExportByName("icuuc.dll", "u_enumCharNames")
Interceptor.attach(u_enumCharNames, {onLeave: function (args) {send("u_enumCharNames");}});

var u_enumCharTypes = Module.findExportByName("icuuc.dll", "u_enumCharTypes")
Interceptor.attach(u_enumCharTypes, {onLeave: function (args) {send("u_enumCharTypes");}});

var u_errorName = Module.findExportByName("icuuc.dll", "u_errorName")
Interceptor.attach(u_errorName, {onLeave: function (args) {send("u_errorName");}});

var u_foldCase = Module.findExportByName("icuuc.dll", "u_foldCase")
Interceptor.attach(u_foldCase, {onLeave: function (args) {send("u_foldCase");}});

var u_forDigit = Module.findExportByName("icuuc.dll", "u_forDigit")
Interceptor.attach(u_forDigit, {onLeave: function (args) {send("u_forDigit");}});

var u_getBidiPairedBracket = Module.findExportByName("icuuc.dll", "u_getBidiPairedBracket")
Interceptor.attach(u_getBidiPairedBracket, {onLeave: function (args) {send("u_getBidiPairedBracket");}});

var u_getCombiningClass = Module.findExportByName("icuuc.dll", "u_getCombiningClass")
Interceptor.attach(u_getCombiningClass, {onLeave: function (args) {send("u_getCombiningClass");}});

var u_getDataVersion = Module.findExportByName("icuuc.dll", "u_getDataVersion")
Interceptor.attach(u_getDataVersion, {onLeave: function (args) {send("u_getDataVersion");}});

var u_getFC_NFKC_Closure = Module.findExportByName("icuuc.dll", "u_getFC_NFKC_Closure")
Interceptor.attach(u_getFC_NFKC_Closure, {onLeave: function (args) {send("u_getFC_NFKC_Closure");}});

var u_getIntPropertyMaxValue = Module.findExportByName("icuuc.dll", "u_getIntPropertyMaxValue")
Interceptor.attach(u_getIntPropertyMaxValue, {onLeave: function (args) {send("u_getIntPropertyMaxValue");}});

var u_getIntPropertyMinValue = Module.findExportByName("icuuc.dll", "u_getIntPropertyMinValue")
Interceptor.attach(u_getIntPropertyMinValue, {onLeave: function (args) {send("u_getIntPropertyMinValue");}});

var u_getIntPropertyValue = Module.findExportByName("icuuc.dll", "u_getIntPropertyValue")
Interceptor.attach(u_getIntPropertyValue, {onLeave: function (args) {send("u_getIntPropertyValue");}});

var u_getNumericValue = Module.findExportByName("icuuc.dll", "u_getNumericValue")
Interceptor.attach(u_getNumericValue, {onLeave: function (args) {send("u_getNumericValue");}});

var u_getPropertyEnum = Module.findExportByName("icuuc.dll", "u_getPropertyEnum")
Interceptor.attach(u_getPropertyEnum, {onLeave: function (args) {send("u_getPropertyEnum");}});

var u_getPropertyName = Module.findExportByName("icuuc.dll", "u_getPropertyName")
Interceptor.attach(u_getPropertyName, {onLeave: function (args) {send("u_getPropertyName");}});

var u_getPropertyValueEnum = Module.findExportByName("icuuc.dll", "u_getPropertyValueEnum")
Interceptor.attach(u_getPropertyValueEnum, {onLeave: function (args) {send("u_getPropertyValueEnum");}});

var u_getPropertyValueName = Module.findExportByName("icuuc.dll", "u_getPropertyValueName")
Interceptor.attach(u_getPropertyValueName, {onLeave: function (args) {send("u_getPropertyValueName");}});

var u_getUnicodeVersion = Module.findExportByName("icuuc.dll", "u_getUnicodeVersion")
Interceptor.attach(u_getUnicodeVersion, {onLeave: function (args) {send("u_getUnicodeVersion");}});

var u_getVersion = Module.findExportByName("icuuc.dll", "u_getVersion")
Interceptor.attach(u_getVersion, {onLeave: function (args) {send("u_getVersion");}});

var u_hasBinaryProperty = Module.findExportByName("icuuc.dll", "u_hasBinaryProperty")
Interceptor.attach(u_hasBinaryProperty, {onLeave: function (args) {send("u_hasBinaryProperty");}});

var u_init = Module.findExportByName("icuuc.dll", "u_init")
Interceptor.attach(u_init, {onLeave: function (args) {send("u_init");}});

var u_isIDIgnorable = Module.findExportByName("icuuc.dll", "u_isIDIgnorable")
Interceptor.attach(u_isIDIgnorable, {onLeave: function (args) {send("u_isIDIgnorable");}});

var u_isIDPart = Module.findExportByName("icuuc.dll", "u_isIDPart")
Interceptor.attach(u_isIDPart, {onLeave: function (args) {send("u_isIDPart");}});

var u_isIDStart = Module.findExportByName("icuuc.dll", "u_isIDStart")
Interceptor.attach(u_isIDStart, {onLeave: function (args) {send("u_isIDStart");}});

var u_isISOControl = Module.findExportByName("icuuc.dll", "u_isISOControl")
Interceptor.attach(u_isISOControl, {onLeave: function (args) {send("u_isISOControl");}});

var u_isJavaIDPart = Module.findExportByName("icuuc.dll", "u_isJavaIDPart")
Interceptor.attach(u_isJavaIDPart, {onLeave: function (args) {send("u_isJavaIDPart");}});

var u_isJavaIDStart = Module.findExportByName("icuuc.dll", "u_isJavaIDStart")
Interceptor.attach(u_isJavaIDStart, {onLeave: function (args) {send("u_isJavaIDStart");}});

var u_isJavaSpaceChar = Module.findExportByName("icuuc.dll", "u_isJavaSpaceChar")
Interceptor.attach(u_isJavaSpaceChar, {onLeave: function (args) {send("u_isJavaSpaceChar");}});

var u_isMirrored = Module.findExportByName("icuuc.dll", "u_isMirrored")
Interceptor.attach(u_isMirrored, {onLeave: function (args) {send("u_isMirrored");}});

var u_isUAlphabetic = Module.findExportByName("icuuc.dll", "u_isUAlphabetic")
Interceptor.attach(u_isUAlphabetic, {onLeave: function (args) {send("u_isUAlphabetic");}});

var u_isULowercase = Module.findExportByName("icuuc.dll", "u_isULowercase")
Interceptor.attach(u_isULowercase, {onLeave: function (args) {send("u_isULowercase");}});

var u_isUUppercase = Module.findExportByName("icuuc.dll", "u_isUUppercase")
Interceptor.attach(u_isUUppercase, {onLeave: function (args) {send("u_isUUppercase");}});

var u_isUWhiteSpace = Module.findExportByName("icuuc.dll", "u_isUWhiteSpace")
Interceptor.attach(u_isUWhiteSpace, {onLeave: function (args) {send("u_isUWhiteSpace");}});

var u_isWhitespace = Module.findExportByName("icuuc.dll", "u_isWhitespace")
Interceptor.attach(u_isWhitespace, {onLeave: function (args) {send("u_isWhitespace");}});

var u_isalnum = Module.findExportByName("icuuc.dll", "u_isalnum")
Interceptor.attach(u_isalnum, {onLeave: function (args) {send("u_isalnum");}});

var u_isalpha = Module.findExportByName("icuuc.dll", "u_isalpha")
Interceptor.attach(u_isalpha, {onLeave: function (args) {send("u_isalpha");}});

var u_isbase = Module.findExportByName("icuuc.dll", "u_isbase")
Interceptor.attach(u_isbase, {onLeave: function (args) {send("u_isbase");}});

var u_isblank = Module.findExportByName("icuuc.dll", "u_isblank")
Interceptor.attach(u_isblank, {onLeave: function (args) {send("u_isblank");}});

var u_iscntrl = Module.findExportByName("icuuc.dll", "u_iscntrl")
Interceptor.attach(u_iscntrl, {onLeave: function (args) {send("u_iscntrl");}});

var u_isdefined = Module.findExportByName("icuuc.dll", "u_isdefined")
Interceptor.attach(u_isdefined, {onLeave: function (args) {send("u_isdefined");}});

var u_isdigit = Module.findExportByName("icuuc.dll", "u_isdigit")
Interceptor.attach(u_isdigit, {onLeave: function (args) {send("u_isdigit");}});

var u_isgraph = Module.findExportByName("icuuc.dll", "u_isgraph")
Interceptor.attach(u_isgraph, {onLeave: function (args) {send("u_isgraph");}});

var u_islower = Module.findExportByName("icuuc.dll", "u_islower")
Interceptor.attach(u_islower, {onLeave: function (args) {send("u_islower");}});

var u_isprint = Module.findExportByName("icuuc.dll", "u_isprint")
Interceptor.attach(u_isprint, {onLeave: function (args) {send("u_isprint");}});

var u_ispunct = Module.findExportByName("icuuc.dll", "u_ispunct")
Interceptor.attach(u_ispunct, {onLeave: function (args) {send("u_ispunct");}});

var u_isspace = Module.findExportByName("icuuc.dll", "u_isspace")
Interceptor.attach(u_isspace, {onLeave: function (args) {send("u_isspace");}});

var u_istitle = Module.findExportByName("icuuc.dll", "u_istitle")
Interceptor.attach(u_istitle, {onLeave: function (args) {send("u_istitle");}});

var u_isupper = Module.findExportByName("icuuc.dll", "u_isupper")
Interceptor.attach(u_isupper, {onLeave: function (args) {send("u_isupper");}});

var u_isxdigit = Module.findExportByName("icuuc.dll", "u_isxdigit")
Interceptor.attach(u_isxdigit, {onLeave: function (args) {send("u_isxdigit");}});

var u_memcasecmp = Module.findExportByName("icuuc.dll", "u_memcasecmp")
Interceptor.attach(u_memcasecmp, {onLeave: function (args) {send("u_memcasecmp");}});

var u_memchr = Module.findExportByName("icuuc.dll", "u_memchr")
Interceptor.attach(u_memchr, {onLeave: function (args) {send("u_memchr");}});

var u_memchr32 = Module.findExportByName("icuuc.dll", "u_memchr32")
Interceptor.attach(u_memchr32, {onLeave: function (args) {send("u_memchr32");}});

var u_memcmp = Module.findExportByName("icuuc.dll", "u_memcmp")
Interceptor.attach(u_memcmp, {onLeave: function (args) {send("u_memcmp");}});

var u_memcmpCodePointOrder = Module.findExportByName("icuuc.dll", "u_memcmpCodePointOrder")
Interceptor.attach(u_memcmpCodePointOrder, {onLeave: function (args) {send("u_memcmpCodePointOrder");}});

var u_memcpy = Module.findExportByName("icuuc.dll", "u_memcpy")
Interceptor.attach(u_memcpy, {onLeave: function (args) {send("u_memcpy");}});

var u_memmove = Module.findExportByName("icuuc.dll", "u_memmove")
Interceptor.attach(u_memmove, {onLeave: function (args) {send("u_memmove");}});

var u_memrchr = Module.findExportByName("icuuc.dll", "u_memrchr")
Interceptor.attach(u_memrchr, {onLeave: function (args) {send("u_memrchr");}});

var u_memrchr32 = Module.findExportByName("icuuc.dll", "u_memrchr32")
Interceptor.attach(u_memrchr32, {onLeave: function (args) {send("u_memrchr32");}});

var u_memset = Module.findExportByName("icuuc.dll", "u_memset")
Interceptor.attach(u_memset, {onLeave: function (args) {send("u_memset");}});

var u_setMemoryFunctions = Module.findExportByName("icuuc.dll", "u_setMemoryFunctions")
Interceptor.attach(u_setMemoryFunctions, {onLeave: function (args) {send("u_setMemoryFunctions");}});

var u_shapeArabic = Module.findExportByName("icuuc.dll", "u_shapeArabic")
Interceptor.attach(u_shapeArabic, {onLeave: function (args) {send("u_shapeArabic");}});

var u_strCaseCompare = Module.findExportByName("icuuc.dll", "u_strCaseCompare")
Interceptor.attach(u_strCaseCompare, {onLeave: function (args) {send("u_strCaseCompare");}});

var u_strCompare = Module.findExportByName("icuuc.dll", "u_strCompare")
Interceptor.attach(u_strCompare, {onLeave: function (args) {send("u_strCompare");}});

var u_strCompareIter = Module.findExportByName("icuuc.dll", "u_strCompareIter")
Interceptor.attach(u_strCompareIter, {onLeave: function (args) {send("u_strCompareIter");}});

var u_strFindFirst = Module.findExportByName("icuuc.dll", "u_strFindFirst")
Interceptor.attach(u_strFindFirst, {onLeave: function (args) {send("u_strFindFirst");}});

var u_strFindLast = Module.findExportByName("icuuc.dll", "u_strFindLast")
Interceptor.attach(u_strFindLast, {onLeave: function (args) {send("u_strFindLast");}});

var u_strFoldCase = Module.findExportByName("icuuc.dll", "u_strFoldCase")
Interceptor.attach(u_strFoldCase, {onLeave: function (args) {send("u_strFoldCase");}});

var u_strFromJavaModifiedUTF8WithSub = Module.findExportByName("icuuc.dll", "u_strFromJavaModifiedUTF8WithSub")
Interceptor.attach(u_strFromJavaModifiedUTF8WithSub, {onLeave: function (args) {send("u_strFromJavaModifiedUTF8WithSub");}});

var u_strFromUTF32 = Module.findExportByName("icuuc.dll", "u_strFromUTF32")
Interceptor.attach(u_strFromUTF32, {onLeave: function (args) {send("u_strFromUTF32");}});

var u_strFromUTF32WithSub = Module.findExportByName("icuuc.dll", "u_strFromUTF32WithSub")
Interceptor.attach(u_strFromUTF32WithSub, {onLeave: function (args) {send("u_strFromUTF32WithSub");}});

var u_strFromUTF8 = Module.findExportByName("icuuc.dll", "u_strFromUTF8")
Interceptor.attach(u_strFromUTF8, {onLeave: function (args) {send("u_strFromUTF8");}});

var u_strFromUTF8Lenient = Module.findExportByName("icuuc.dll", "u_strFromUTF8Lenient")
Interceptor.attach(u_strFromUTF8Lenient, {onLeave: function (args) {send("u_strFromUTF8Lenient");}});

var u_strFromUTF8WithSub = Module.findExportByName("icuuc.dll", "u_strFromUTF8WithSub")
Interceptor.attach(u_strFromUTF8WithSub, {onLeave: function (args) {send("u_strFromUTF8WithSub");}});

var u_strFromWCS = Module.findExportByName("icuuc.dll", "u_strFromWCS")
Interceptor.attach(u_strFromWCS, {onLeave: function (args) {send("u_strFromWCS");}});

var u_strHasMoreChar32Than = Module.findExportByName("icuuc.dll", "u_strHasMoreChar32Than")
Interceptor.attach(u_strHasMoreChar32Than, {onLeave: function (args) {send("u_strHasMoreChar32Than");}});

var u_strToJavaModifiedUTF8 = Module.findExportByName("icuuc.dll", "u_strToJavaModifiedUTF8")
Interceptor.attach(u_strToJavaModifiedUTF8, {onLeave: function (args) {send("u_strToJavaModifiedUTF8");}});

var u_strToLower = Module.findExportByName("icuuc.dll", "u_strToLower")
Interceptor.attach(u_strToLower, {onLeave: function (args) {send("u_strToLower");}});

var u_strToTitle = Module.findExportByName("icuuc.dll", "u_strToTitle")
Interceptor.attach(u_strToTitle, {onLeave: function (args) {send("u_strToTitle");}});

var u_strToUTF32 = Module.findExportByName("icuuc.dll", "u_strToUTF32")
Interceptor.attach(u_strToUTF32, {onLeave: function (args) {send("u_strToUTF32");}});

var u_strToUTF32WithSub = Module.findExportByName("icuuc.dll", "u_strToUTF32WithSub")
Interceptor.attach(u_strToUTF32WithSub, {onLeave: function (args) {send("u_strToUTF32WithSub");}});

var u_strToUTF8 = Module.findExportByName("icuuc.dll", "u_strToUTF8")
Interceptor.attach(u_strToUTF8, {onLeave: function (args) {send("u_strToUTF8");}});

var u_strToUTF8WithSub = Module.findExportByName("icuuc.dll", "u_strToUTF8WithSub")
Interceptor.attach(u_strToUTF8WithSub, {onLeave: function (args) {send("u_strToUTF8WithSub");}});

var u_strToUpper = Module.findExportByName("icuuc.dll", "u_strToUpper")
Interceptor.attach(u_strToUpper, {onLeave: function (args) {send("u_strToUpper");}});

var u_strToWCS = Module.findExportByName("icuuc.dll", "u_strToWCS")
Interceptor.attach(u_strToWCS, {onLeave: function (args) {send("u_strToWCS");}});

var u_strcasecmp = Module.findExportByName("icuuc.dll", "u_strcasecmp")
Interceptor.attach(u_strcasecmp, {onLeave: function (args) {send("u_strcasecmp");}});

var u_strcat = Module.findExportByName("icuuc.dll", "u_strcat")
Interceptor.attach(u_strcat, {onLeave: function (args) {send("u_strcat");}});

var u_strchr = Module.findExportByName("icuuc.dll", "u_strchr")
Interceptor.attach(u_strchr, {onLeave: function (args) {send("u_strchr");}});

var u_strchr32 = Module.findExportByName("icuuc.dll", "u_strchr32")
Interceptor.attach(u_strchr32, {onLeave: function (args) {send("u_strchr32");}});

var u_strcmp = Module.findExportByName("icuuc.dll", "u_strcmp")
Interceptor.attach(u_strcmp, {onLeave: function (args) {send("u_strcmp");}});

var u_strcmpCodePointOrder = Module.findExportByName("icuuc.dll", "u_strcmpCodePointOrder")
Interceptor.attach(u_strcmpCodePointOrder, {onLeave: function (args) {send("u_strcmpCodePointOrder");}});

var u_strcpy = Module.findExportByName("icuuc.dll", "u_strcpy")
Interceptor.attach(u_strcpy, {onLeave: function (args) {send("u_strcpy");}});

var u_strcspn = Module.findExportByName("icuuc.dll", "u_strcspn")
Interceptor.attach(u_strcspn, {onLeave: function (args) {send("u_strcspn");}});

var u_strlen = Module.findExportByName("icuuc.dll", "u_strlen")
Interceptor.attach(u_strlen, {onLeave: function (args) {send("u_strlen");}});

var u_strncasecmp = Module.findExportByName("icuuc.dll", "u_strncasecmp")
Interceptor.attach(u_strncasecmp, {onLeave: function (args) {send("u_strncasecmp");}});

var u_strncat = Module.findExportByName("icuuc.dll", "u_strncat")
Interceptor.attach(u_strncat, {onLeave: function (args) {send("u_strncat");}});

var u_strncmp = Module.findExportByName("icuuc.dll", "u_strncmp")
Interceptor.attach(u_strncmp, {onLeave: function (args) {send("u_strncmp");}});

var u_strncmpCodePointOrder = Module.findExportByName("icuuc.dll", "u_strncmpCodePointOrder")
Interceptor.attach(u_strncmpCodePointOrder, {onLeave: function (args) {send("u_strncmpCodePointOrder");}});

var u_strncpy = Module.findExportByName("icuuc.dll", "u_strncpy")
Interceptor.attach(u_strncpy, {onLeave: function (args) {send("u_strncpy");}});

var u_strpbrk = Module.findExportByName("icuuc.dll", "u_strpbrk")
Interceptor.attach(u_strpbrk, {onLeave: function (args) {send("u_strpbrk");}});

var u_strrchr = Module.findExportByName("icuuc.dll", "u_strrchr")
Interceptor.attach(u_strrchr, {onLeave: function (args) {send("u_strrchr");}});

var u_strrchr32 = Module.findExportByName("icuuc.dll", "u_strrchr32")
Interceptor.attach(u_strrchr32, {onLeave: function (args) {send("u_strrchr32");}});

var u_strrstr = Module.findExportByName("icuuc.dll", "u_strrstr")
Interceptor.attach(u_strrstr, {onLeave: function (args) {send("u_strrstr");}});

var u_strspn = Module.findExportByName("icuuc.dll", "u_strspn")
Interceptor.attach(u_strspn, {onLeave: function (args) {send("u_strspn");}});

var u_strstr = Module.findExportByName("icuuc.dll", "u_strstr")
Interceptor.attach(u_strstr, {onLeave: function (args) {send("u_strstr");}});

var u_strtok_r = Module.findExportByName("icuuc.dll", "u_strtok_r")
Interceptor.attach(u_strtok_r, {onLeave: function (args) {send("u_strtok_r");}});

var u_tolower = Module.findExportByName("icuuc.dll", "u_tolower")
Interceptor.attach(u_tolower, {onLeave: function (args) {send("u_tolower");}});

var u_totitle = Module.findExportByName("icuuc.dll", "u_totitle")
Interceptor.attach(u_totitle, {onLeave: function (args) {send("u_totitle");}});

var u_toupper = Module.findExportByName("icuuc.dll", "u_toupper")
Interceptor.attach(u_toupper, {onLeave: function (args) {send("u_toupper");}});

var u_uastrcpy = Module.findExportByName("icuuc.dll", "u_uastrcpy")
Interceptor.attach(u_uastrcpy, {onLeave: function (args) {send("u_uastrcpy");}});

var u_uastrncpy = Module.findExportByName("icuuc.dll", "u_uastrncpy")
Interceptor.attach(u_uastrncpy, {onLeave: function (args) {send("u_uastrncpy");}});

var u_unescape = Module.findExportByName("icuuc.dll", "u_unescape")
Interceptor.attach(u_unescape, {onLeave: function (args) {send("u_unescape");}});

var u_unescapeAt = Module.findExportByName("icuuc.dll", "u_unescapeAt")
Interceptor.attach(u_unescapeAt, {onLeave: function (args) {send("u_unescapeAt");}});

var u_versionFromString = Module.findExportByName("icuuc.dll", "u_versionFromString")
Interceptor.attach(u_versionFromString, {onLeave: function (args) {send("u_versionFromString");}});

var u_versionFromUString = Module.findExportByName("icuuc.dll", "u_versionFromUString")
Interceptor.attach(u_versionFromUString, {onLeave: function (args) {send("u_versionFromUString");}});

var u_versionToString = Module.findExportByName("icuuc.dll", "u_versionToString")
Interceptor.attach(u_versionToString, {onLeave: function (args) {send("u_versionToString");}});

var ubidi_close = Module.findExportByName("icuuc.dll", "ubidi_close")
Interceptor.attach(ubidi_close, {onLeave: function (args) {send("ubidi_close");}});

var ubidi_countParagraphs = Module.findExportByName("icuuc.dll", "ubidi_countParagraphs")
Interceptor.attach(ubidi_countParagraphs, {onLeave: function (args) {send("ubidi_countParagraphs");}});

var ubidi_countRuns = Module.findExportByName("icuuc.dll", "ubidi_countRuns")
Interceptor.attach(ubidi_countRuns, {onLeave: function (args) {send("ubidi_countRuns");}});

var ubidi_getBaseDirection = Module.findExportByName("icuuc.dll", "ubidi_getBaseDirection")
Interceptor.attach(ubidi_getBaseDirection, {onLeave: function (args) {send("ubidi_getBaseDirection");}});

var ubidi_getClassCallback = Module.findExportByName("icuuc.dll", "ubidi_getClassCallback")
Interceptor.attach(ubidi_getClassCallback, {onLeave: function (args) {send("ubidi_getClassCallback");}});

var ubidi_getCustomizedClass = Module.findExportByName("icuuc.dll", "ubidi_getCustomizedClass")
Interceptor.attach(ubidi_getCustomizedClass, {onLeave: function (args) {send("ubidi_getCustomizedClass");}});

var ubidi_getDirection = Module.findExportByName("icuuc.dll", "ubidi_getDirection")
Interceptor.attach(ubidi_getDirection, {onLeave: function (args) {send("ubidi_getDirection");}});

var ubidi_getLength = Module.findExportByName("icuuc.dll", "ubidi_getLength")
Interceptor.attach(ubidi_getLength, {onLeave: function (args) {send("ubidi_getLength");}});

var ubidi_getLevelAt = Module.findExportByName("icuuc.dll", "ubidi_getLevelAt")
Interceptor.attach(ubidi_getLevelAt, {onLeave: function (args) {send("ubidi_getLevelAt");}});

var ubidi_getLevels = Module.findExportByName("icuuc.dll", "ubidi_getLevels")
Interceptor.attach(ubidi_getLevels, {onLeave: function (args) {send("ubidi_getLevels");}});

var ubidi_getLogicalIndex = Module.findExportByName("icuuc.dll", "ubidi_getLogicalIndex")
Interceptor.attach(ubidi_getLogicalIndex, {onLeave: function (args) {send("ubidi_getLogicalIndex");}});

var ubidi_getLogicalMap = Module.findExportByName("icuuc.dll", "ubidi_getLogicalMap")
Interceptor.attach(ubidi_getLogicalMap, {onLeave: function (args) {send("ubidi_getLogicalMap");}});

var ubidi_getLogicalRun = Module.findExportByName("icuuc.dll", "ubidi_getLogicalRun")
Interceptor.attach(ubidi_getLogicalRun, {onLeave: function (args) {send("ubidi_getLogicalRun");}});

var ubidi_getParaLevel = Module.findExportByName("icuuc.dll", "ubidi_getParaLevel")
Interceptor.attach(ubidi_getParaLevel, {onLeave: function (args) {send("ubidi_getParaLevel");}});

var ubidi_getParagraph = Module.findExportByName("icuuc.dll", "ubidi_getParagraph")
Interceptor.attach(ubidi_getParagraph, {onLeave: function (args) {send("ubidi_getParagraph");}});

var ubidi_getParagraphByIndex = Module.findExportByName("icuuc.dll", "ubidi_getParagraphByIndex")
Interceptor.attach(ubidi_getParagraphByIndex, {onLeave: function (args) {send("ubidi_getParagraphByIndex");}});

var ubidi_getProcessedLength = Module.findExportByName("icuuc.dll", "ubidi_getProcessedLength")
Interceptor.attach(ubidi_getProcessedLength, {onLeave: function (args) {send("ubidi_getProcessedLength");}});

var ubidi_getReorderingMode = Module.findExportByName("icuuc.dll", "ubidi_getReorderingMode")
Interceptor.attach(ubidi_getReorderingMode, {onLeave: function (args) {send("ubidi_getReorderingMode");}});

var ubidi_getReorderingOptions = Module.findExportByName("icuuc.dll", "ubidi_getReorderingOptions")
Interceptor.attach(ubidi_getReorderingOptions, {onLeave: function (args) {send("ubidi_getReorderingOptions");}});

var ubidi_getResultLength = Module.findExportByName("icuuc.dll", "ubidi_getResultLength")
Interceptor.attach(ubidi_getResultLength, {onLeave: function (args) {send("ubidi_getResultLength");}});

var ubidi_getText = Module.findExportByName("icuuc.dll", "ubidi_getText")
Interceptor.attach(ubidi_getText, {onLeave: function (args) {send("ubidi_getText");}});

var ubidi_getVisualIndex = Module.findExportByName("icuuc.dll", "ubidi_getVisualIndex")
Interceptor.attach(ubidi_getVisualIndex, {onLeave: function (args) {send("ubidi_getVisualIndex");}});

var ubidi_getVisualMap = Module.findExportByName("icuuc.dll", "ubidi_getVisualMap")
Interceptor.attach(ubidi_getVisualMap, {onLeave: function (args) {send("ubidi_getVisualMap");}});

var ubidi_getVisualRun = Module.findExportByName("icuuc.dll", "ubidi_getVisualRun")
Interceptor.attach(ubidi_getVisualRun, {onLeave: function (args) {send("ubidi_getVisualRun");}});

var ubidi_invertMap = Module.findExportByName("icuuc.dll", "ubidi_invertMap")
Interceptor.attach(ubidi_invertMap, {onLeave: function (args) {send("ubidi_invertMap");}});

var ubidi_isInverse = Module.findExportByName("icuuc.dll", "ubidi_isInverse")
Interceptor.attach(ubidi_isInverse, {onLeave: function (args) {send("ubidi_isInverse");}});

var ubidi_isOrderParagraphsLTR = Module.findExportByName("icuuc.dll", "ubidi_isOrderParagraphsLTR")
Interceptor.attach(ubidi_isOrderParagraphsLTR, {onLeave: function (args) {send("ubidi_isOrderParagraphsLTR");}});

var ubidi_open = Module.findExportByName("icuuc.dll", "ubidi_open")
Interceptor.attach(ubidi_open, {onLeave: function (args) {send("ubidi_open");}});

var ubidi_openSized = Module.findExportByName("icuuc.dll", "ubidi_openSized")
Interceptor.attach(ubidi_openSized, {onLeave: function (args) {send("ubidi_openSized");}});

var ubidi_orderParagraphsLTR = Module.findExportByName("icuuc.dll", "ubidi_orderParagraphsLTR")
Interceptor.attach(ubidi_orderParagraphsLTR, {onLeave: function (args) {send("ubidi_orderParagraphsLTR");}});

var ubidi_reorderLogical = Module.findExportByName("icuuc.dll", "ubidi_reorderLogical")
Interceptor.attach(ubidi_reorderLogical, {onLeave: function (args) {send("ubidi_reorderLogical");}});

var ubidi_reorderVisual = Module.findExportByName("icuuc.dll", "ubidi_reorderVisual")
Interceptor.attach(ubidi_reorderVisual, {onLeave: function (args) {send("ubidi_reorderVisual");}});

var ubidi_setClassCallback = Module.findExportByName("icuuc.dll", "ubidi_setClassCallback")
Interceptor.attach(ubidi_setClassCallback, {onLeave: function (args) {send("ubidi_setClassCallback");}});

var ubidi_setContext = Module.findExportByName("icuuc.dll", "ubidi_setContext")
Interceptor.attach(ubidi_setContext, {onLeave: function (args) {send("ubidi_setContext");}});

var ubidi_setInverse = Module.findExportByName("icuuc.dll", "ubidi_setInverse")
Interceptor.attach(ubidi_setInverse, {onLeave: function (args) {send("ubidi_setInverse");}});

var ubidi_setLine = Module.findExportByName("icuuc.dll", "ubidi_setLine")
Interceptor.attach(ubidi_setLine, {onLeave: function (args) {send("ubidi_setLine");}});

var ubidi_setPara = Module.findExportByName("icuuc.dll", "ubidi_setPara")
Interceptor.attach(ubidi_setPara, {onLeave: function (args) {send("ubidi_setPara");}});

var ubidi_setReorderingMode = Module.findExportByName("icuuc.dll", "ubidi_setReorderingMode")
Interceptor.attach(ubidi_setReorderingMode, {onLeave: function (args) {send("ubidi_setReorderingMode");}});

var ubidi_setReorderingOptions = Module.findExportByName("icuuc.dll", "ubidi_setReorderingOptions")
Interceptor.attach(ubidi_setReorderingOptions, {onLeave: function (args) {send("ubidi_setReorderingOptions");}});

var ubidi_writeReordered = Module.findExportByName("icuuc.dll", "ubidi_writeReordered")
Interceptor.attach(ubidi_writeReordered, {onLeave: function (args) {send("ubidi_writeReordered");}});

var ubidi_writeReverse = Module.findExportByName("icuuc.dll", "ubidi_writeReverse")
Interceptor.attach(ubidi_writeReverse, {onLeave: function (args) {send("ubidi_writeReverse");}});

var ubiditransform_close = Module.findExportByName("icuuc.dll", "ubiditransform_close")
Interceptor.attach(ubiditransform_close, {onLeave: function (args) {send("ubiditransform_close");}});

var ubiditransform_open = Module.findExportByName("icuuc.dll", "ubiditransform_open")
Interceptor.attach(ubiditransform_open, {onLeave: function (args) {send("ubiditransform_open");}});

var ubiditransform_transform = Module.findExportByName("icuuc.dll", "ubiditransform_transform")
Interceptor.attach(ubiditransform_transform, {onLeave: function (args) {send("ubiditransform_transform");}});

var ublock_getCode = Module.findExportByName("icuuc.dll", "ublock_getCode")
Interceptor.attach(ublock_getCode, {onLeave: function (args) {send("ublock_getCode");}});

var ubrk_close = Module.findExportByName("icuuc.dll", "ubrk_close")
Interceptor.attach(ubrk_close, {onLeave: function (args) {send("ubrk_close");}});

var ubrk_countAvailable = Module.findExportByName("icuuc.dll", "ubrk_countAvailable")
Interceptor.attach(ubrk_countAvailable, {onLeave: function (args) {send("ubrk_countAvailable");}});

var ubrk_current = Module.findExportByName("icuuc.dll", "ubrk_current")
Interceptor.attach(ubrk_current, {onLeave: function (args) {send("ubrk_current");}});

var ubrk_first = Module.findExportByName("icuuc.dll", "ubrk_first")
Interceptor.attach(ubrk_first, {onLeave: function (args) {send("ubrk_first");}});

var ubrk_following = Module.findExportByName("icuuc.dll", "ubrk_following")
Interceptor.attach(ubrk_following, {onLeave: function (args) {send("ubrk_following");}});

var ubrk_getAvailable = Module.findExportByName("icuuc.dll", "ubrk_getAvailable")
Interceptor.attach(ubrk_getAvailable, {onLeave: function (args) {send("ubrk_getAvailable");}});

var ubrk_getBinaryRules = Module.findExportByName("icuuc.dll", "ubrk_getBinaryRules")
Interceptor.attach(ubrk_getBinaryRules, {onLeave: function (args) {send("ubrk_getBinaryRules");}});

var ubrk_getLocaleByType = Module.findExportByName("icuuc.dll", "ubrk_getLocaleByType")
Interceptor.attach(ubrk_getLocaleByType, {onLeave: function (args) {send("ubrk_getLocaleByType");}});

var ubrk_getRuleStatus = Module.findExportByName("icuuc.dll", "ubrk_getRuleStatus")
Interceptor.attach(ubrk_getRuleStatus, {onLeave: function (args) {send("ubrk_getRuleStatus");}});

var ubrk_getRuleStatusVec = Module.findExportByName("icuuc.dll", "ubrk_getRuleStatusVec")
Interceptor.attach(ubrk_getRuleStatusVec, {onLeave: function (args) {send("ubrk_getRuleStatusVec");}});

var ubrk_isBoundary = Module.findExportByName("icuuc.dll", "ubrk_isBoundary")
Interceptor.attach(ubrk_isBoundary, {onLeave: function (args) {send("ubrk_isBoundary");}});

var ubrk_last = Module.findExportByName("icuuc.dll", "ubrk_last")
Interceptor.attach(ubrk_last, {onLeave: function (args) {send("ubrk_last");}});

var ubrk_next = Module.findExportByName("icuuc.dll", "ubrk_next")
Interceptor.attach(ubrk_next, {onLeave: function (args) {send("ubrk_next");}});

var ubrk_open = Module.findExportByName("icuuc.dll", "ubrk_open")
Interceptor.attach(ubrk_open, {onLeave: function (args) {send("ubrk_open");}});

var ubrk_openBinaryRules = Module.findExportByName("icuuc.dll", "ubrk_openBinaryRules")
Interceptor.attach(ubrk_openBinaryRules, {onLeave: function (args) {send("ubrk_openBinaryRules");}});

var ubrk_openRules = Module.findExportByName("icuuc.dll", "ubrk_openRules")
Interceptor.attach(ubrk_openRules, {onLeave: function (args) {send("ubrk_openRules");}});

var ubrk_preceding = Module.findExportByName("icuuc.dll", "ubrk_preceding")
Interceptor.attach(ubrk_preceding, {onLeave: function (args) {send("ubrk_preceding");}});

var ubrk_previous = Module.findExportByName("icuuc.dll", "ubrk_previous")
Interceptor.attach(ubrk_previous, {onLeave: function (args) {send("ubrk_previous");}});

var ubrk_refreshUText = Module.findExportByName("icuuc.dll", "ubrk_refreshUText")
Interceptor.attach(ubrk_refreshUText, {onLeave: function (args) {send("ubrk_refreshUText");}});

var ubrk_safeClone = Module.findExportByName("icuuc.dll", "ubrk_safeClone")
Interceptor.attach(ubrk_safeClone, {onLeave: function (args) {send("ubrk_safeClone");}});

var ubrk_setText = Module.findExportByName("icuuc.dll", "ubrk_setText")
Interceptor.attach(ubrk_setText, {onLeave: function (args) {send("ubrk_setText");}});

var ubrk_setUText = Module.findExportByName("icuuc.dll", "ubrk_setUText")
Interceptor.attach(ubrk_setUText, {onLeave: function (args) {send("ubrk_setUText");}});

var ucasemap_close = Module.findExportByName("icuuc.dll", "ucasemap_close")
Interceptor.attach(ucasemap_close, {onLeave: function (args) {send("ucasemap_close");}});

var ucasemap_getBreakIterator = Module.findExportByName("icuuc.dll", "ucasemap_getBreakIterator")
Interceptor.attach(ucasemap_getBreakIterator, {onLeave: function (args) {send("ucasemap_getBreakIterator");}});

var ucasemap_getLocale = Module.findExportByName("icuuc.dll", "ucasemap_getLocale")
Interceptor.attach(ucasemap_getLocale, {onLeave: function (args) {send("ucasemap_getLocale");}});

var ucasemap_getOptions = Module.findExportByName("icuuc.dll", "ucasemap_getOptions")
Interceptor.attach(ucasemap_getOptions, {onLeave: function (args) {send("ucasemap_getOptions");}});

var ucasemap_open = Module.findExportByName("icuuc.dll", "ucasemap_open")
Interceptor.attach(ucasemap_open, {onLeave: function (args) {send("ucasemap_open");}});

var ucasemap_setBreakIterator = Module.findExportByName("icuuc.dll", "ucasemap_setBreakIterator")
Interceptor.attach(ucasemap_setBreakIterator, {onLeave: function (args) {send("ucasemap_setBreakIterator");}});

var ucasemap_setLocale = Module.findExportByName("icuuc.dll", "ucasemap_setLocale")
Interceptor.attach(ucasemap_setLocale, {onLeave: function (args) {send("ucasemap_setLocale");}});

var ucasemap_setOptions = Module.findExportByName("icuuc.dll", "ucasemap_setOptions")
Interceptor.attach(ucasemap_setOptions, {onLeave: function (args) {send("ucasemap_setOptions");}});

var ucasemap_toTitle = Module.findExportByName("icuuc.dll", "ucasemap_toTitle")
Interceptor.attach(ucasemap_toTitle, {onLeave: function (args) {send("ucasemap_toTitle");}});

var ucasemap_utf8FoldCase = Module.findExportByName("icuuc.dll", "ucasemap_utf8FoldCase")
Interceptor.attach(ucasemap_utf8FoldCase, {onLeave: function (args) {send("ucasemap_utf8FoldCase");}});

var ucasemap_utf8ToLower = Module.findExportByName("icuuc.dll", "ucasemap_utf8ToLower")
Interceptor.attach(ucasemap_utf8ToLower, {onLeave: function (args) {send("ucasemap_utf8ToLower");}});

var ucasemap_utf8ToTitle = Module.findExportByName("icuuc.dll", "ucasemap_utf8ToTitle")
Interceptor.attach(ucasemap_utf8ToTitle, {onLeave: function (args) {send("ucasemap_utf8ToTitle");}});

var ucasemap_utf8ToUpper = Module.findExportByName("icuuc.dll", "ucasemap_utf8ToUpper")
Interceptor.attach(ucasemap_utf8ToUpper, {onLeave: function (args) {send("ucasemap_utf8ToUpper");}});

var ucnv_cbFromUWriteBytes = Module.findExportByName("icuuc.dll", "ucnv_cbFromUWriteBytes")
Interceptor.attach(ucnv_cbFromUWriteBytes, {onLeave: function (args) {send("ucnv_cbFromUWriteBytes");}});

var ucnv_cbFromUWriteSub = Module.findExportByName("icuuc.dll", "ucnv_cbFromUWriteSub")
Interceptor.attach(ucnv_cbFromUWriteSub, {onLeave: function (args) {send("ucnv_cbFromUWriteSub");}});

var ucnv_cbFromUWriteUChars = Module.findExportByName("icuuc.dll", "ucnv_cbFromUWriteUChars")
Interceptor.attach(ucnv_cbFromUWriteUChars, {onLeave: function (args) {send("ucnv_cbFromUWriteUChars");}});

var ucnv_cbToUWriteSub = Module.findExportByName("icuuc.dll", "ucnv_cbToUWriteSub")
Interceptor.attach(ucnv_cbToUWriteSub, {onLeave: function (args) {send("ucnv_cbToUWriteSub");}});

var ucnv_cbToUWriteUChars = Module.findExportByName("icuuc.dll", "ucnv_cbToUWriteUChars")
Interceptor.attach(ucnv_cbToUWriteUChars, {onLeave: function (args) {send("ucnv_cbToUWriteUChars");}});

var ucnv_close = Module.findExportByName("icuuc.dll", "ucnv_close")
Interceptor.attach(ucnv_close, {onLeave: function (args) {send("ucnv_close");}});

var ucnv_compareNames = Module.findExportByName("icuuc.dll", "ucnv_compareNames")
Interceptor.attach(ucnv_compareNames, {onLeave: function (args) {send("ucnv_compareNames");}});

var ucnv_convert = Module.findExportByName("icuuc.dll", "ucnv_convert")
Interceptor.attach(ucnv_convert, {onLeave: function (args) {send("ucnv_convert");}});

var ucnv_convertEx = Module.findExportByName("icuuc.dll", "ucnv_convertEx")
Interceptor.attach(ucnv_convertEx, {onLeave: function (args) {send("ucnv_convertEx");}});

var ucnv_countAliases = Module.findExportByName("icuuc.dll", "ucnv_countAliases")
Interceptor.attach(ucnv_countAliases, {onLeave: function (args) {send("ucnv_countAliases");}});

var ucnv_countAvailable = Module.findExportByName("icuuc.dll", "ucnv_countAvailable")
Interceptor.attach(ucnv_countAvailable, {onLeave: function (args) {send("ucnv_countAvailable");}});

var ucnv_countStandards = Module.findExportByName("icuuc.dll", "ucnv_countStandards")
Interceptor.attach(ucnv_countStandards, {onLeave: function (args) {send("ucnv_countStandards");}});

var ucnv_detectUnicodeSignature = Module.findExportByName("icuuc.dll", "ucnv_detectUnicodeSignature")
Interceptor.attach(ucnv_detectUnicodeSignature, {onLeave: function (args) {send("ucnv_detectUnicodeSignature");}});

var ucnv_fixFileSeparator = Module.findExportByName("icuuc.dll", "ucnv_fixFileSeparator")
Interceptor.attach(ucnv_fixFileSeparator, {onLeave: function (args) {send("ucnv_fixFileSeparator");}});

var ucnv_flushCache = Module.findExportByName("icuuc.dll", "ucnv_flushCache")
Interceptor.attach(ucnv_flushCache, {onLeave: function (args) {send("ucnv_flushCache");}});

var ucnv_fromAlgorithmic = Module.findExportByName("icuuc.dll", "ucnv_fromAlgorithmic")
Interceptor.attach(ucnv_fromAlgorithmic, {onLeave: function (args) {send("ucnv_fromAlgorithmic");}});

var ucnv_fromUChars = Module.findExportByName("icuuc.dll", "ucnv_fromUChars")
Interceptor.attach(ucnv_fromUChars, {onLeave: function (args) {send("ucnv_fromUChars");}});

var ucnv_fromUCountPending = Module.findExportByName("icuuc.dll", "ucnv_fromUCountPending")
Interceptor.attach(ucnv_fromUCountPending, {onLeave: function (args) {send("ucnv_fromUCountPending");}});

var ucnv_fromUnicode = Module.findExportByName("icuuc.dll", "ucnv_fromUnicode")
Interceptor.attach(ucnv_fromUnicode, {onLeave: function (args) {send("ucnv_fromUnicode");}});

var ucnv_getAlias = Module.findExportByName("icuuc.dll", "ucnv_getAlias")
Interceptor.attach(ucnv_getAlias, {onLeave: function (args) {send("ucnv_getAlias");}});

var ucnv_getAliases = Module.findExportByName("icuuc.dll", "ucnv_getAliases")
Interceptor.attach(ucnv_getAliases, {onLeave: function (args) {send("ucnv_getAliases");}});

var ucnv_getAvailableName = Module.findExportByName("icuuc.dll", "ucnv_getAvailableName")
Interceptor.attach(ucnv_getAvailableName, {onLeave: function (args) {send("ucnv_getAvailableName");}});

var ucnv_getCCSID = Module.findExportByName("icuuc.dll", "ucnv_getCCSID")
Interceptor.attach(ucnv_getCCSID, {onLeave: function (args) {send("ucnv_getCCSID");}});

var ucnv_getCanonicalName = Module.findExportByName("icuuc.dll", "ucnv_getCanonicalName")
Interceptor.attach(ucnv_getCanonicalName, {onLeave: function (args) {send("ucnv_getCanonicalName");}});

var ucnv_getDefaultName = Module.findExportByName("icuuc.dll", "ucnv_getDefaultName")
Interceptor.attach(ucnv_getDefaultName, {onLeave: function (args) {send("ucnv_getDefaultName");}});

var ucnv_getDisplayName = Module.findExportByName("icuuc.dll", "ucnv_getDisplayName")
Interceptor.attach(ucnv_getDisplayName, {onLeave: function (args) {send("ucnv_getDisplayName");}});

var ucnv_getFromUCallBack = Module.findExportByName("icuuc.dll", "ucnv_getFromUCallBack")
Interceptor.attach(ucnv_getFromUCallBack, {onLeave: function (args) {send("ucnv_getFromUCallBack");}});

var ucnv_getInvalidChars = Module.findExportByName("icuuc.dll", "ucnv_getInvalidChars")
Interceptor.attach(ucnv_getInvalidChars, {onLeave: function (args) {send("ucnv_getInvalidChars");}});

var ucnv_getInvalidUChars = Module.findExportByName("icuuc.dll", "ucnv_getInvalidUChars")
Interceptor.attach(ucnv_getInvalidUChars, {onLeave: function (args) {send("ucnv_getInvalidUChars");}});

var ucnv_getMaxCharSize = Module.findExportByName("icuuc.dll", "ucnv_getMaxCharSize")
Interceptor.attach(ucnv_getMaxCharSize, {onLeave: function (args) {send("ucnv_getMaxCharSize");}});

var ucnv_getMinCharSize = Module.findExportByName("icuuc.dll", "ucnv_getMinCharSize")
Interceptor.attach(ucnv_getMinCharSize, {onLeave: function (args) {send("ucnv_getMinCharSize");}});

var ucnv_getName = Module.findExportByName("icuuc.dll", "ucnv_getName")
Interceptor.attach(ucnv_getName, {onLeave: function (args) {send("ucnv_getName");}});

var ucnv_getNextUChar = Module.findExportByName("icuuc.dll", "ucnv_getNextUChar")
Interceptor.attach(ucnv_getNextUChar, {onLeave: function (args) {send("ucnv_getNextUChar");}});

var ucnv_getPlatform = Module.findExportByName("icuuc.dll", "ucnv_getPlatform")
Interceptor.attach(ucnv_getPlatform, {onLeave: function (args) {send("ucnv_getPlatform");}});

var ucnv_getStandard = Module.findExportByName("icuuc.dll", "ucnv_getStandard")
Interceptor.attach(ucnv_getStandard, {onLeave: function (args) {send("ucnv_getStandard");}});

var ucnv_getStandardName = Module.findExportByName("icuuc.dll", "ucnv_getStandardName")
Interceptor.attach(ucnv_getStandardName, {onLeave: function (args) {send("ucnv_getStandardName");}});

var ucnv_getStarters = Module.findExportByName("icuuc.dll", "ucnv_getStarters")
Interceptor.attach(ucnv_getStarters, {onLeave: function (args) {send("ucnv_getStarters");}});

var ucnv_getSubstChars = Module.findExportByName("icuuc.dll", "ucnv_getSubstChars")
Interceptor.attach(ucnv_getSubstChars, {onLeave: function (args) {send("ucnv_getSubstChars");}});

var ucnv_getToUCallBack = Module.findExportByName("icuuc.dll", "ucnv_getToUCallBack")
Interceptor.attach(ucnv_getToUCallBack, {onLeave: function (args) {send("ucnv_getToUCallBack");}});

var ucnv_getType = Module.findExportByName("icuuc.dll", "ucnv_getType")
Interceptor.attach(ucnv_getType, {onLeave: function (args) {send("ucnv_getType");}});

var ucnv_getUnicodeSet = Module.findExportByName("icuuc.dll", "ucnv_getUnicodeSet")
Interceptor.attach(ucnv_getUnicodeSet, {onLeave: function (args) {send("ucnv_getUnicodeSet");}});

var ucnv_isAmbiguous = Module.findExportByName("icuuc.dll", "ucnv_isAmbiguous")
Interceptor.attach(ucnv_isAmbiguous, {onLeave: function (args) {send("ucnv_isAmbiguous");}});

var ucnv_isFixedWidth = Module.findExportByName("icuuc.dll", "ucnv_isFixedWidth")
Interceptor.attach(ucnv_isFixedWidth, {onLeave: function (args) {send("ucnv_isFixedWidth");}});

var ucnv_open = Module.findExportByName("icuuc.dll", "ucnv_open")
Interceptor.attach(ucnv_open, {onLeave: function (args) {send("ucnv_open");}});

var ucnv_openAllNames = Module.findExportByName("icuuc.dll", "ucnv_openAllNames")
Interceptor.attach(ucnv_openAllNames, {onLeave: function (args) {send("ucnv_openAllNames");}});

var ucnv_openCCSID = Module.findExportByName("icuuc.dll", "ucnv_openCCSID")
Interceptor.attach(ucnv_openCCSID, {onLeave: function (args) {send("ucnv_openCCSID");}});

var ucnv_openPackage = Module.findExportByName("icuuc.dll", "ucnv_openPackage")
Interceptor.attach(ucnv_openPackage, {onLeave: function (args) {send("ucnv_openPackage");}});

var ucnv_openStandardNames = Module.findExportByName("icuuc.dll", "ucnv_openStandardNames")
Interceptor.attach(ucnv_openStandardNames, {onLeave: function (args) {send("ucnv_openStandardNames");}});

var ucnv_openU = Module.findExportByName("icuuc.dll", "ucnv_openU")
Interceptor.attach(ucnv_openU, {onLeave: function (args) {send("ucnv_openU");}});

var ucnv_reset = Module.findExportByName("icuuc.dll", "ucnv_reset")
Interceptor.attach(ucnv_reset, {onLeave: function (args) {send("ucnv_reset");}});

var ucnv_resetFromUnicode = Module.findExportByName("icuuc.dll", "ucnv_resetFromUnicode")
Interceptor.attach(ucnv_resetFromUnicode, {onLeave: function (args) {send("ucnv_resetFromUnicode");}});

var ucnv_resetToUnicode = Module.findExportByName("icuuc.dll", "ucnv_resetToUnicode")
Interceptor.attach(ucnv_resetToUnicode, {onLeave: function (args) {send("ucnv_resetToUnicode");}});

var ucnv_safeClone = Module.findExportByName("icuuc.dll", "ucnv_safeClone")
Interceptor.attach(ucnv_safeClone, {onLeave: function (args) {send("ucnv_safeClone");}});

var ucnv_setDefaultName = Module.findExportByName("icuuc.dll", "ucnv_setDefaultName")
Interceptor.attach(ucnv_setDefaultName, {onLeave: function (args) {send("ucnv_setDefaultName");}});

var ucnv_setFallback = Module.findExportByName("icuuc.dll", "ucnv_setFallback")
Interceptor.attach(ucnv_setFallback, {onLeave: function (args) {send("ucnv_setFallback");}});

var ucnv_setFromUCallBack = Module.findExportByName("icuuc.dll", "ucnv_setFromUCallBack")
Interceptor.attach(ucnv_setFromUCallBack, {onLeave: function (args) {send("ucnv_setFromUCallBack");}});

var ucnv_setSubstChars = Module.findExportByName("icuuc.dll", "ucnv_setSubstChars")
Interceptor.attach(ucnv_setSubstChars, {onLeave: function (args) {send("ucnv_setSubstChars");}});

var ucnv_setSubstString = Module.findExportByName("icuuc.dll", "ucnv_setSubstString")
Interceptor.attach(ucnv_setSubstString, {onLeave: function (args) {send("ucnv_setSubstString");}});

var ucnv_setToUCallBack = Module.findExportByName("icuuc.dll", "ucnv_setToUCallBack")
Interceptor.attach(ucnv_setToUCallBack, {onLeave: function (args) {send("ucnv_setToUCallBack");}});

var ucnv_toAlgorithmic = Module.findExportByName("icuuc.dll", "ucnv_toAlgorithmic")
Interceptor.attach(ucnv_toAlgorithmic, {onLeave: function (args) {send("ucnv_toAlgorithmic");}});

var ucnv_toUChars = Module.findExportByName("icuuc.dll", "ucnv_toUChars")
Interceptor.attach(ucnv_toUChars, {onLeave: function (args) {send("ucnv_toUChars");}});

var ucnv_toUCountPending = Module.findExportByName("icuuc.dll", "ucnv_toUCountPending")
Interceptor.attach(ucnv_toUCountPending, {onLeave: function (args) {send("ucnv_toUCountPending");}});

var ucnv_toUnicode = Module.findExportByName("icuuc.dll", "ucnv_toUnicode")
Interceptor.attach(ucnv_toUnicode, {onLeave: function (args) {send("ucnv_toUnicode");}});

var ucnv_usesFallback = Module.findExportByName("icuuc.dll", "ucnv_usesFallback")
Interceptor.attach(ucnv_usesFallback, {onLeave: function (args) {send("ucnv_usesFallback");}});

var ucnvsel_close = Module.findExportByName("icuuc.dll", "ucnvsel_close")
Interceptor.attach(ucnvsel_close, {onLeave: function (args) {send("ucnvsel_close");}});

var ucnvsel_open = Module.findExportByName("icuuc.dll", "ucnvsel_open")
Interceptor.attach(ucnvsel_open, {onLeave: function (args) {send("ucnvsel_open");}});

var ucnvsel_openFromSerialized = Module.findExportByName("icuuc.dll", "ucnvsel_openFromSerialized")
Interceptor.attach(ucnvsel_openFromSerialized, {onLeave: function (args) {send("ucnvsel_openFromSerialized");}});

var ucnvsel_selectForString = Module.findExportByName("icuuc.dll", "ucnvsel_selectForString")
Interceptor.attach(ucnvsel_selectForString, {onLeave: function (args) {send("ucnvsel_selectForString");}});

var ucnvsel_selectForUTF8 = Module.findExportByName("icuuc.dll", "ucnvsel_selectForUTF8")
Interceptor.attach(ucnvsel_selectForUTF8, {onLeave: function (args) {send("ucnvsel_selectForUTF8");}});

var ucnvsel_serialize = Module.findExportByName("icuuc.dll", "ucnvsel_serialize")
Interceptor.attach(ucnvsel_serialize, {onLeave: function (args) {send("ucnvsel_serialize");}});

var ucurr_countCurrencies = Module.findExportByName("icuuc.dll", "ucurr_countCurrencies")
Interceptor.attach(ucurr_countCurrencies, {onLeave: function (args) {send("ucurr_countCurrencies");}});

var ucurr_forLocale = Module.findExportByName("icuuc.dll", "ucurr_forLocale")
Interceptor.attach(ucurr_forLocale, {onLeave: function (args) {send("ucurr_forLocale");}});

var ucurr_forLocaleAndDate = Module.findExportByName("icuuc.dll", "ucurr_forLocaleAndDate")
Interceptor.attach(ucurr_forLocaleAndDate, {onLeave: function (args) {send("ucurr_forLocaleAndDate");}});

var ucurr_getDefaultFractionDigits = Module.findExportByName("icuuc.dll", "ucurr_getDefaultFractionDigits")
Interceptor.attach(ucurr_getDefaultFractionDigits, {onLeave: function (args) {send("ucurr_getDefaultFractionDigits");}});

var ucurr_getDefaultFractionDigitsForUsage = Module.findExportByName("icuuc.dll", "ucurr_getDefaultFractionDigitsForUsage")
Interceptor.attach(ucurr_getDefaultFractionDigitsForUsage, {onLeave: function (args) {send("ucurr_getDefaultFractionDigitsForUsage");}});

var ucurr_getKeywordValuesForLocale = Module.findExportByName("icuuc.dll", "ucurr_getKeywordValuesForLocale")
Interceptor.attach(ucurr_getKeywordValuesForLocale, {onLeave: function (args) {send("ucurr_getKeywordValuesForLocale");}});

var ucurr_getName = Module.findExportByName("icuuc.dll", "ucurr_getName")
Interceptor.attach(ucurr_getName, {onLeave: function (args) {send("ucurr_getName");}});

var ucurr_getNumericCode = Module.findExportByName("icuuc.dll", "ucurr_getNumericCode")
Interceptor.attach(ucurr_getNumericCode, {onLeave: function (args) {send("ucurr_getNumericCode");}});

var ucurr_getPluralName = Module.findExportByName("icuuc.dll", "ucurr_getPluralName")
Interceptor.attach(ucurr_getPluralName, {onLeave: function (args) {send("ucurr_getPluralName");}});

var ucurr_getRoundingIncrement = Module.findExportByName("icuuc.dll", "ucurr_getRoundingIncrement")
Interceptor.attach(ucurr_getRoundingIncrement, {onLeave: function (args) {send("ucurr_getRoundingIncrement");}});

var ucurr_getRoundingIncrementForUsage = Module.findExportByName("icuuc.dll", "ucurr_getRoundingIncrementForUsage")
Interceptor.attach(ucurr_getRoundingIncrementForUsage, {onLeave: function (args) {send("ucurr_getRoundingIncrementForUsage");}});

var ucurr_isAvailable = Module.findExportByName("icuuc.dll", "ucurr_isAvailable")
Interceptor.attach(ucurr_isAvailable, {onLeave: function (args) {send("ucurr_isAvailable");}});

var ucurr_openISOCurrencies = Module.findExportByName("icuuc.dll", "ucurr_openISOCurrencies")
Interceptor.attach(ucurr_openISOCurrencies, {onLeave: function (args) {send("ucurr_openISOCurrencies");}});

var ucurr_register = Module.findExportByName("icuuc.dll", "ucurr_register")
Interceptor.attach(ucurr_register, {onLeave: function (args) {send("ucurr_register");}});

var ucurr_unregister = Module.findExportByName("icuuc.dll", "ucurr_unregister")
Interceptor.attach(ucurr_unregister, {onLeave: function (args) {send("ucurr_unregister");}});

var uenum_close = Module.findExportByName("icuuc.dll", "uenum_close")
Interceptor.attach(uenum_close, {onLeave: function (args) {send("uenum_close");}});

var uenum_count = Module.findExportByName("icuuc.dll", "uenum_count")
Interceptor.attach(uenum_count, {onLeave: function (args) {send("uenum_count");}});

var uenum_next = Module.findExportByName("icuuc.dll", "uenum_next")
Interceptor.attach(uenum_next, {onLeave: function (args) {send("uenum_next");}});

var uenum_openCharStringsEnumeration = Module.findExportByName("icuuc.dll", "uenum_openCharStringsEnumeration")
Interceptor.attach(uenum_openCharStringsEnumeration, {onLeave: function (args) {send("uenum_openCharStringsEnumeration");}});

var uenum_openUCharStringsEnumeration = Module.findExportByName("icuuc.dll", "uenum_openUCharStringsEnumeration")
Interceptor.attach(uenum_openUCharStringsEnumeration, {onLeave: function (args) {send("uenum_openUCharStringsEnumeration");}});

var uenum_reset = Module.findExportByName("icuuc.dll", "uenum_reset")
Interceptor.attach(uenum_reset, {onLeave: function (args) {send("uenum_reset");}});

var uenum_unext = Module.findExportByName("icuuc.dll", "uenum_unext")
Interceptor.attach(uenum_unext, {onLeave: function (args) {send("uenum_unext");}});

var uidna_close = Module.findExportByName("icuuc.dll", "uidna_close")
Interceptor.attach(uidna_close, {onLeave: function (args) {send("uidna_close");}});

var uidna_labelToASCII = Module.findExportByName("icuuc.dll", "uidna_labelToASCII")
Interceptor.attach(uidna_labelToASCII, {onLeave: function (args) {send("uidna_labelToASCII");}});

var uidna_labelToASCII_UTF8 = Module.findExportByName("icuuc.dll", "uidna_labelToASCII_UTF8")
Interceptor.attach(uidna_labelToASCII_UTF8, {onLeave: function (args) {send("uidna_labelToASCII_UTF8");}});

var uidna_labelToUnicode = Module.findExportByName("icuuc.dll", "uidna_labelToUnicode")
Interceptor.attach(uidna_labelToUnicode, {onLeave: function (args) {send("uidna_labelToUnicode");}});

var uidna_labelToUnicodeUTF8 = Module.findExportByName("icuuc.dll", "uidna_labelToUnicodeUTF8")
Interceptor.attach(uidna_labelToUnicodeUTF8, {onLeave: function (args) {send("uidna_labelToUnicodeUTF8");}});

var uidna_nameToASCII = Module.findExportByName("icuuc.dll", "uidna_nameToASCII")
Interceptor.attach(uidna_nameToASCII, {onLeave: function (args) {send("uidna_nameToASCII");}});

var uidna_nameToASCII_UTF8 = Module.findExportByName("icuuc.dll", "uidna_nameToASCII_UTF8")
Interceptor.attach(uidna_nameToASCII_UTF8, {onLeave: function (args) {send("uidna_nameToASCII_UTF8");}});

var uidna_nameToUnicode = Module.findExportByName("icuuc.dll", "uidna_nameToUnicode")
Interceptor.attach(uidna_nameToUnicode, {onLeave: function (args) {send("uidna_nameToUnicode");}});

var uidna_nameToUnicodeUTF8 = Module.findExportByName("icuuc.dll", "uidna_nameToUnicodeUTF8")
Interceptor.attach(uidna_nameToUnicodeUTF8, {onLeave: function (args) {send("uidna_nameToUnicodeUTF8");}});

var uidna_openUTS46 = Module.findExportByName("icuuc.dll", "uidna_openUTS46")
Interceptor.attach(uidna_openUTS46, {onLeave: function (args) {send("uidna_openUTS46");}});

var uiter_current32 = Module.findExportByName("icuuc.dll", "uiter_current32")
Interceptor.attach(uiter_current32, {onLeave: function (args) {send("uiter_current32");}});

var uiter_getState = Module.findExportByName("icuuc.dll", "uiter_getState")
Interceptor.attach(uiter_getState, {onLeave: function (args) {send("uiter_getState");}});

var uiter_next32 = Module.findExportByName("icuuc.dll", "uiter_next32")
Interceptor.attach(uiter_next32, {onLeave: function (args) {send("uiter_next32");}});

var uiter_previous32 = Module.findExportByName("icuuc.dll", "uiter_previous32")
Interceptor.attach(uiter_previous32, {onLeave: function (args) {send("uiter_previous32");}});

var uiter_setState = Module.findExportByName("icuuc.dll", "uiter_setState")
Interceptor.attach(uiter_setState, {onLeave: function (args) {send("uiter_setState");}});

var uiter_setString = Module.findExportByName("icuuc.dll", "uiter_setString")
Interceptor.attach(uiter_setString, {onLeave: function (args) {send("uiter_setString");}});

var uiter_setUTF16BE = Module.findExportByName("icuuc.dll", "uiter_setUTF16BE")
Interceptor.attach(uiter_setUTF16BE, {onLeave: function (args) {send("uiter_setUTF16BE");}});

var uiter_setUTF8 = Module.findExportByName("icuuc.dll", "uiter_setUTF8")
Interceptor.attach(uiter_setUTF8, {onLeave: function (args) {send("uiter_setUTF8");}});

var uldn_close = Module.findExportByName("icuuc.dll", "uldn_close")
Interceptor.attach(uldn_close, {onLeave: function (args) {send("uldn_close");}});

var uldn_getContext = Module.findExportByName("icuuc.dll", "uldn_getContext")
Interceptor.attach(uldn_getContext, {onLeave: function (args) {send("uldn_getContext");}});

var uldn_getDialectHandling = Module.findExportByName("icuuc.dll", "uldn_getDialectHandling")
Interceptor.attach(uldn_getDialectHandling, {onLeave: function (args) {send("uldn_getDialectHandling");}});

var uldn_getLocale = Module.findExportByName("icuuc.dll", "uldn_getLocale")
Interceptor.attach(uldn_getLocale, {onLeave: function (args) {send("uldn_getLocale");}});

var uldn_keyDisplayName = Module.findExportByName("icuuc.dll", "uldn_keyDisplayName")
Interceptor.attach(uldn_keyDisplayName, {onLeave: function (args) {send("uldn_keyDisplayName");}});

var uldn_keyValueDisplayName = Module.findExportByName("icuuc.dll", "uldn_keyValueDisplayName")
Interceptor.attach(uldn_keyValueDisplayName, {onLeave: function (args) {send("uldn_keyValueDisplayName");}});

var uldn_languageDisplayName = Module.findExportByName("icuuc.dll", "uldn_languageDisplayName")
Interceptor.attach(uldn_languageDisplayName, {onLeave: function (args) {send("uldn_languageDisplayName");}});

var uldn_localeDisplayName = Module.findExportByName("icuuc.dll", "uldn_localeDisplayName")
Interceptor.attach(uldn_localeDisplayName, {onLeave: function (args) {send("uldn_localeDisplayName");}});

var uldn_open = Module.findExportByName("icuuc.dll", "uldn_open")
Interceptor.attach(uldn_open, {onLeave: function (args) {send("uldn_open");}});

var uldn_openForContext = Module.findExportByName("icuuc.dll", "uldn_openForContext")
Interceptor.attach(uldn_openForContext, {onLeave: function (args) {send("uldn_openForContext");}});

var uldn_regionDisplayName = Module.findExportByName("icuuc.dll", "uldn_regionDisplayName")
Interceptor.attach(uldn_regionDisplayName, {onLeave: function (args) {send("uldn_regionDisplayName");}});

var uldn_scriptCodeDisplayName = Module.findExportByName("icuuc.dll", "uldn_scriptCodeDisplayName")
Interceptor.attach(uldn_scriptCodeDisplayName, {onLeave: function (args) {send("uldn_scriptCodeDisplayName");}});

var uldn_scriptDisplayName = Module.findExportByName("icuuc.dll", "uldn_scriptDisplayName")
Interceptor.attach(uldn_scriptDisplayName, {onLeave: function (args) {send("uldn_scriptDisplayName");}});

var uldn_variantDisplayName = Module.findExportByName("icuuc.dll", "uldn_variantDisplayName")
Interceptor.attach(uldn_variantDisplayName, {onLeave: function (args) {send("uldn_variantDisplayName");}});

var ulistfmt_close = Module.findExportByName("icuuc.dll", "ulistfmt_close")
Interceptor.attach(ulistfmt_close, {onLeave: function (args) {send("ulistfmt_close");}});

var ulistfmt_format = Module.findExportByName("icuuc.dll", "ulistfmt_format")
Interceptor.attach(ulistfmt_format, {onLeave: function (args) {send("ulistfmt_format");}});

var ulistfmt_open = Module.findExportByName("icuuc.dll", "ulistfmt_open")
Interceptor.attach(ulistfmt_open, {onLeave: function (args) {send("ulistfmt_open");}});

var uloc_acceptLanguage = Module.findExportByName("icuuc.dll", "uloc_acceptLanguage")
Interceptor.attach(uloc_acceptLanguage, {onLeave: function (args) {send("uloc_acceptLanguage");}});

var uloc_acceptLanguageFromHTTP = Module.findExportByName("icuuc.dll", "uloc_acceptLanguageFromHTTP")
Interceptor.attach(uloc_acceptLanguageFromHTTP, {onLeave: function (args) {send("uloc_acceptLanguageFromHTTP");}});

var uloc_addLikelySubtags = Module.findExportByName("icuuc.dll", "uloc_addLikelySubtags")
Interceptor.attach(uloc_addLikelySubtags, {onLeave: function (args) {send("uloc_addLikelySubtags");}});

var uloc_canonicalize = Module.findExportByName("icuuc.dll", "uloc_canonicalize")
Interceptor.attach(uloc_canonicalize, {onLeave: function (args) {send("uloc_canonicalize");}});

var uloc_countAvailable = Module.findExportByName("icuuc.dll", "uloc_countAvailable")
Interceptor.attach(uloc_countAvailable, {onLeave: function (args) {send("uloc_countAvailable");}});

var uloc_forLanguageTag = Module.findExportByName("icuuc.dll", "uloc_forLanguageTag")
Interceptor.attach(uloc_forLanguageTag, {onLeave: function (args) {send("uloc_forLanguageTag");}});

var uloc_getAvailable = Module.findExportByName("icuuc.dll", "uloc_getAvailable")
Interceptor.attach(uloc_getAvailable, {onLeave: function (args) {send("uloc_getAvailable");}});

var uloc_getBaseName = Module.findExportByName("icuuc.dll", "uloc_getBaseName")
Interceptor.attach(uloc_getBaseName, {onLeave: function (args) {send("uloc_getBaseName");}});

var uloc_getCharacterOrientation = Module.findExportByName("icuuc.dll", "uloc_getCharacterOrientation")
Interceptor.attach(uloc_getCharacterOrientation, {onLeave: function (args) {send("uloc_getCharacterOrientation");}});

var uloc_getCountry = Module.findExportByName("icuuc.dll", "uloc_getCountry")
Interceptor.attach(uloc_getCountry, {onLeave: function (args) {send("uloc_getCountry");}});

var uloc_getDefault = Module.findExportByName("icuuc.dll", "uloc_getDefault")
Interceptor.attach(uloc_getDefault, {onLeave: function (args) {send("uloc_getDefault");}});

var uloc_getDisplayCountry = Module.findExportByName("icuuc.dll", "uloc_getDisplayCountry")
Interceptor.attach(uloc_getDisplayCountry, {onLeave: function (args) {send("uloc_getDisplayCountry");}});

var uloc_getDisplayKeyword = Module.findExportByName("icuuc.dll", "uloc_getDisplayKeyword")
Interceptor.attach(uloc_getDisplayKeyword, {onLeave: function (args) {send("uloc_getDisplayKeyword");}});

var uloc_getDisplayKeywordValue = Module.findExportByName("icuuc.dll", "uloc_getDisplayKeywordValue")
Interceptor.attach(uloc_getDisplayKeywordValue, {onLeave: function (args) {send("uloc_getDisplayKeywordValue");}});

var uloc_getDisplayLanguage = Module.findExportByName("icuuc.dll", "uloc_getDisplayLanguage")
Interceptor.attach(uloc_getDisplayLanguage, {onLeave: function (args) {send("uloc_getDisplayLanguage");}});

var uloc_getDisplayName = Module.findExportByName("icuuc.dll", "uloc_getDisplayName")
Interceptor.attach(uloc_getDisplayName, {onLeave: function (args) {send("uloc_getDisplayName");}});

var uloc_getDisplayScript = Module.findExportByName("icuuc.dll", "uloc_getDisplayScript")
Interceptor.attach(uloc_getDisplayScript, {onLeave: function (args) {send("uloc_getDisplayScript");}});

var uloc_getDisplayVariant = Module.findExportByName("icuuc.dll", "uloc_getDisplayVariant")
Interceptor.attach(uloc_getDisplayVariant, {onLeave: function (args) {send("uloc_getDisplayVariant");}});

var uloc_getISO3Country = Module.findExportByName("icuuc.dll", "uloc_getISO3Country")
Interceptor.attach(uloc_getISO3Country, {onLeave: function (args) {send("uloc_getISO3Country");}});

var uloc_getISO3Language = Module.findExportByName("icuuc.dll", "uloc_getISO3Language")
Interceptor.attach(uloc_getISO3Language, {onLeave: function (args) {send("uloc_getISO3Language");}});

var uloc_getISOCountries = Module.findExportByName("icuuc.dll", "uloc_getISOCountries")
Interceptor.attach(uloc_getISOCountries, {onLeave: function (args) {send("uloc_getISOCountries");}});

var uloc_getISOLanguages = Module.findExportByName("icuuc.dll", "uloc_getISOLanguages")
Interceptor.attach(uloc_getISOLanguages, {onLeave: function (args) {send("uloc_getISOLanguages");}});

var uloc_getKeywordValue = Module.findExportByName("icuuc.dll", "uloc_getKeywordValue")
Interceptor.attach(uloc_getKeywordValue, {onLeave: function (args) {send("uloc_getKeywordValue");}});

var uloc_getLCID = Module.findExportByName("icuuc.dll", "uloc_getLCID")
Interceptor.attach(uloc_getLCID, {onLeave: function (args) {send("uloc_getLCID");}});

var uloc_getLanguage = Module.findExportByName("icuuc.dll", "uloc_getLanguage")
Interceptor.attach(uloc_getLanguage, {onLeave: function (args) {send("uloc_getLanguage");}});

var uloc_getLineOrientation = Module.findExportByName("icuuc.dll", "uloc_getLineOrientation")
Interceptor.attach(uloc_getLineOrientation, {onLeave: function (args) {send("uloc_getLineOrientation");}});

var uloc_getLocaleForLCID = Module.findExportByName("icuuc.dll", "uloc_getLocaleForLCID")
Interceptor.attach(uloc_getLocaleForLCID, {onLeave: function (args) {send("uloc_getLocaleForLCID");}});

var uloc_getName = Module.findExportByName("icuuc.dll", "uloc_getName")
Interceptor.attach(uloc_getName, {onLeave: function (args) {send("uloc_getName");}});

var uloc_getParent = Module.findExportByName("icuuc.dll", "uloc_getParent")
Interceptor.attach(uloc_getParent, {onLeave: function (args) {send("uloc_getParent");}});

var uloc_getScript = Module.findExportByName("icuuc.dll", "uloc_getScript")
Interceptor.attach(uloc_getScript, {onLeave: function (args) {send("uloc_getScript");}});

var uloc_getVariant = Module.findExportByName("icuuc.dll", "uloc_getVariant")
Interceptor.attach(uloc_getVariant, {onLeave: function (args) {send("uloc_getVariant");}});

var uloc_isRightToLeft = Module.findExportByName("icuuc.dll", "uloc_isRightToLeft")
Interceptor.attach(uloc_isRightToLeft, {onLeave: function (args) {send("uloc_isRightToLeft");}});

var uloc_minimizeSubtags = Module.findExportByName("icuuc.dll", "uloc_minimizeSubtags")
Interceptor.attach(uloc_minimizeSubtags, {onLeave: function (args) {send("uloc_minimizeSubtags");}});

var uloc_openKeywords = Module.findExportByName("icuuc.dll", "uloc_openKeywords")
Interceptor.attach(uloc_openKeywords, {onLeave: function (args) {send("uloc_openKeywords");}});

var uloc_setDefault = Module.findExportByName("icuuc.dll", "uloc_setDefault")
Interceptor.attach(uloc_setDefault, {onLeave: function (args) {send("uloc_setDefault");}});

var uloc_setKeywordValue = Module.findExportByName("icuuc.dll", "uloc_setKeywordValue")
Interceptor.attach(uloc_setKeywordValue, {onLeave: function (args) {send("uloc_setKeywordValue");}});

var uloc_toLanguageTag = Module.findExportByName("icuuc.dll", "uloc_toLanguageTag")
Interceptor.attach(uloc_toLanguageTag, {onLeave: function (args) {send("uloc_toLanguageTag");}});

var uloc_toLegacyKey = Module.findExportByName("icuuc.dll", "uloc_toLegacyKey")
Interceptor.attach(uloc_toLegacyKey, {onLeave: function (args) {send("uloc_toLegacyKey");}});

var uloc_toLegacyType = Module.findExportByName("icuuc.dll", "uloc_toLegacyType")
Interceptor.attach(uloc_toLegacyType, {onLeave: function (args) {send("uloc_toLegacyType");}});

var uloc_toUnicodeLocaleKey = Module.findExportByName("icuuc.dll", "uloc_toUnicodeLocaleKey")
Interceptor.attach(uloc_toUnicodeLocaleKey, {onLeave: function (args) {send("uloc_toUnicodeLocaleKey");}});

var uloc_toUnicodeLocaleType = Module.findExportByName("icuuc.dll", "uloc_toUnicodeLocaleType")
Interceptor.attach(uloc_toUnicodeLocaleType, {onLeave: function (args) {send("uloc_toUnicodeLocaleType");}});

var unorm2_append = Module.findExportByName("icuuc.dll", "unorm2_append")
Interceptor.attach(unorm2_append, {onLeave: function (args) {send("unorm2_append");}});

var unorm2_close = Module.findExportByName("icuuc.dll", "unorm2_close")
Interceptor.attach(unorm2_close, {onLeave: function (args) {send("unorm2_close");}});

var unorm2_composePair = Module.findExportByName("icuuc.dll", "unorm2_composePair")
Interceptor.attach(unorm2_composePair, {onLeave: function (args) {send("unorm2_composePair");}});

var unorm2_getCombiningClass = Module.findExportByName("icuuc.dll", "unorm2_getCombiningClass")
Interceptor.attach(unorm2_getCombiningClass, {onLeave: function (args) {send("unorm2_getCombiningClass");}});

var unorm2_getDecomposition = Module.findExportByName("icuuc.dll", "unorm2_getDecomposition")
Interceptor.attach(unorm2_getDecomposition, {onLeave: function (args) {send("unorm2_getDecomposition");}});

var unorm2_getInstance = Module.findExportByName("icuuc.dll", "unorm2_getInstance")
Interceptor.attach(unorm2_getInstance, {onLeave: function (args) {send("unorm2_getInstance");}});

var unorm2_getNFCInstance = Module.findExportByName("icuuc.dll", "unorm2_getNFCInstance")
Interceptor.attach(unorm2_getNFCInstance, {onLeave: function (args) {send("unorm2_getNFCInstance");}});

var unorm2_getNFDInstance = Module.findExportByName("icuuc.dll", "unorm2_getNFDInstance")
Interceptor.attach(unorm2_getNFDInstance, {onLeave: function (args) {send("unorm2_getNFDInstance");}});

var unorm2_getNFKCCasefoldInstance = Module.findExportByName("icuuc.dll", "unorm2_getNFKCCasefoldInstance")
Interceptor.attach(unorm2_getNFKCCasefoldInstance, {onLeave: function (args) {send("unorm2_getNFKCCasefoldInstance");}});

var unorm2_getNFKCInstance = Module.findExportByName("icuuc.dll", "unorm2_getNFKCInstance")
Interceptor.attach(unorm2_getNFKCInstance, {onLeave: function (args) {send("unorm2_getNFKCInstance");}});

var unorm2_getNFKDInstance = Module.findExportByName("icuuc.dll", "unorm2_getNFKDInstance")
Interceptor.attach(unorm2_getNFKDInstance, {onLeave: function (args) {send("unorm2_getNFKDInstance");}});

var unorm2_getRawDecomposition = Module.findExportByName("icuuc.dll", "unorm2_getRawDecomposition")
Interceptor.attach(unorm2_getRawDecomposition, {onLeave: function (args) {send("unorm2_getRawDecomposition");}});

var unorm2_hasBoundaryAfter = Module.findExportByName("icuuc.dll", "unorm2_hasBoundaryAfter")
Interceptor.attach(unorm2_hasBoundaryAfter, {onLeave: function (args) {send("unorm2_hasBoundaryAfter");}});

var unorm2_hasBoundaryBefore = Module.findExportByName("icuuc.dll", "unorm2_hasBoundaryBefore")
Interceptor.attach(unorm2_hasBoundaryBefore, {onLeave: function (args) {send("unorm2_hasBoundaryBefore");}});

var unorm2_isInert = Module.findExportByName("icuuc.dll", "unorm2_isInert")
Interceptor.attach(unorm2_isInert, {onLeave: function (args) {send("unorm2_isInert");}});

var unorm2_isNormalized = Module.findExportByName("icuuc.dll", "unorm2_isNormalized")
Interceptor.attach(unorm2_isNormalized, {onLeave: function (args) {send("unorm2_isNormalized");}});

var unorm2_normalize = Module.findExportByName("icuuc.dll", "unorm2_normalize")
Interceptor.attach(unorm2_normalize, {onLeave: function (args) {send("unorm2_normalize");}});

var unorm2_normalizeSecondAndAppend = Module.findExportByName("icuuc.dll", "unorm2_normalizeSecondAndAppend")
Interceptor.attach(unorm2_normalizeSecondAndAppend, {onLeave: function (args) {send("unorm2_normalizeSecondAndAppend");}});

var unorm2_openFiltered = Module.findExportByName("icuuc.dll", "unorm2_openFiltered")
Interceptor.attach(unorm2_openFiltered, {onLeave: function (args) {send("unorm2_openFiltered");}});

var unorm2_quickCheck = Module.findExportByName("icuuc.dll", "unorm2_quickCheck")
Interceptor.attach(unorm2_quickCheck, {onLeave: function (args) {send("unorm2_quickCheck");}});

var unorm2_spanQuickCheckYes = Module.findExportByName("icuuc.dll", "unorm2_spanQuickCheckYes")
Interceptor.attach(unorm2_spanQuickCheckYes, {onLeave: function (args) {send("unorm2_spanQuickCheckYes");}});

var unorm_compare = Module.findExportByName("icuuc.dll", "unorm_compare")
Interceptor.attach(unorm_compare, {onLeave: function (args) {send("unorm_compare");}});

var ures_close = Module.findExportByName("icuuc.dll", "ures_close")
Interceptor.attach(ures_close, {onLeave: function (args) {send("ures_close");}});

var ures_getBinary = Module.findExportByName("icuuc.dll", "ures_getBinary")
Interceptor.attach(ures_getBinary, {onLeave: function (args) {send("ures_getBinary");}});

var ures_getByIndex = Module.findExportByName("icuuc.dll", "ures_getByIndex")
Interceptor.attach(ures_getByIndex, {onLeave: function (args) {send("ures_getByIndex");}});

var ures_getByKey = Module.findExportByName("icuuc.dll", "ures_getByKey")
Interceptor.attach(ures_getByKey, {onLeave: function (args) {send("ures_getByKey");}});

var ures_getInt = Module.findExportByName("icuuc.dll", "ures_getInt")
Interceptor.attach(ures_getInt, {onLeave: function (args) {send("ures_getInt");}});

var ures_getIntVector = Module.findExportByName("icuuc.dll", "ures_getIntVector")
Interceptor.attach(ures_getIntVector, {onLeave: function (args) {send("ures_getIntVector");}});

var ures_getKey = Module.findExportByName("icuuc.dll", "ures_getKey")
Interceptor.attach(ures_getKey, {onLeave: function (args) {send("ures_getKey");}});

var ures_getLocaleByType = Module.findExportByName("icuuc.dll", "ures_getLocaleByType")
Interceptor.attach(ures_getLocaleByType, {onLeave: function (args) {send("ures_getLocaleByType");}});

var ures_getNextResource = Module.findExportByName("icuuc.dll", "ures_getNextResource")
Interceptor.attach(ures_getNextResource, {onLeave: function (args) {send("ures_getNextResource");}});

var ures_getNextString = Module.findExportByName("icuuc.dll", "ures_getNextString")
Interceptor.attach(ures_getNextString, {onLeave: function (args) {send("ures_getNextString");}});

var ures_getSize = Module.findExportByName("icuuc.dll", "ures_getSize")
Interceptor.attach(ures_getSize, {onLeave: function (args) {send("ures_getSize");}});

var ures_getString = Module.findExportByName("icuuc.dll", "ures_getString")
Interceptor.attach(ures_getString, {onLeave: function (args) {send("ures_getString");}});

var ures_getStringByIndex = Module.findExportByName("icuuc.dll", "ures_getStringByIndex")
Interceptor.attach(ures_getStringByIndex, {onLeave: function (args) {send("ures_getStringByIndex");}});

var ures_getStringByKey = Module.findExportByName("icuuc.dll", "ures_getStringByKey")
Interceptor.attach(ures_getStringByKey, {onLeave: function (args) {send("ures_getStringByKey");}});

var ures_getType = Module.findExportByName("icuuc.dll", "ures_getType")
Interceptor.attach(ures_getType, {onLeave: function (args) {send("ures_getType");}});

var ures_getUInt = Module.findExportByName("icuuc.dll", "ures_getUInt")
Interceptor.attach(ures_getUInt, {onLeave: function (args) {send("ures_getUInt");}});

var ures_getUTF8String = Module.findExportByName("icuuc.dll", "ures_getUTF8String")
Interceptor.attach(ures_getUTF8String, {onLeave: function (args) {send("ures_getUTF8String");}});

var ures_getUTF8StringByIndex = Module.findExportByName("icuuc.dll", "ures_getUTF8StringByIndex")
Interceptor.attach(ures_getUTF8StringByIndex, {onLeave: function (args) {send("ures_getUTF8StringByIndex");}});

var ures_getUTF8StringByKey = Module.findExportByName("icuuc.dll", "ures_getUTF8StringByKey")
Interceptor.attach(ures_getUTF8StringByKey, {onLeave: function (args) {send("ures_getUTF8StringByKey");}});

var ures_getVersion = Module.findExportByName("icuuc.dll", "ures_getVersion")
Interceptor.attach(ures_getVersion, {onLeave: function (args) {send("ures_getVersion");}});

var ures_hasNext = Module.findExportByName("icuuc.dll", "ures_hasNext")
Interceptor.attach(ures_hasNext, {onLeave: function (args) {send("ures_hasNext");}});

var ures_open = Module.findExportByName("icuuc.dll", "ures_open")
Interceptor.attach(ures_open, {onLeave: function (args) {send("ures_open");}});

var ures_openAvailableLocales = Module.findExportByName("icuuc.dll", "ures_openAvailableLocales")
Interceptor.attach(ures_openAvailableLocales, {onLeave: function (args) {send("ures_openAvailableLocales");}});

var ures_openDirect = Module.findExportByName("icuuc.dll", "ures_openDirect")
Interceptor.attach(ures_openDirect, {onLeave: function (args) {send("ures_openDirect");}});

var ures_openU = Module.findExportByName("icuuc.dll", "ures_openU")
Interceptor.attach(ures_openU, {onLeave: function (args) {send("ures_openU");}});

var ures_resetIterator = Module.findExportByName("icuuc.dll", "ures_resetIterator")
Interceptor.attach(ures_resetIterator, {onLeave: function (args) {send("ures_resetIterator");}});

var uscript_breaksBetweenLetters = Module.findExportByName("icuuc.dll", "uscript_breaksBetweenLetters")
Interceptor.attach(uscript_breaksBetweenLetters, {onLeave: function (args) {send("uscript_breaksBetweenLetters");}});

var uscript_getCode = Module.findExportByName("icuuc.dll", "uscript_getCode")
Interceptor.attach(uscript_getCode, {onLeave: function (args) {send("uscript_getCode");}});

var uscript_getName = Module.findExportByName("icuuc.dll", "uscript_getName")
Interceptor.attach(uscript_getName, {onLeave: function (args) {send("uscript_getName");}});

var uscript_getSampleString = Module.findExportByName("icuuc.dll", "uscript_getSampleString")
Interceptor.attach(uscript_getSampleString, {onLeave: function (args) {send("uscript_getSampleString");}});

var uscript_getScript = Module.findExportByName("icuuc.dll", "uscript_getScript")
Interceptor.attach(uscript_getScript, {onLeave: function (args) {send("uscript_getScript");}});

var uscript_getScriptExtensions = Module.findExportByName("icuuc.dll", "uscript_getScriptExtensions")
Interceptor.attach(uscript_getScriptExtensions, {onLeave: function (args) {send("uscript_getScriptExtensions");}});

var uscript_getShortName = Module.findExportByName("icuuc.dll", "uscript_getShortName")
Interceptor.attach(uscript_getShortName, {onLeave: function (args) {send("uscript_getShortName");}});

var uscript_getUsage = Module.findExportByName("icuuc.dll", "uscript_getUsage")
Interceptor.attach(uscript_getUsage, {onLeave: function (args) {send("uscript_getUsage");}});

var uscript_hasScript = Module.findExportByName("icuuc.dll", "uscript_hasScript")
Interceptor.attach(uscript_hasScript, {onLeave: function (args) {send("uscript_hasScript");}});

var uscript_isCased = Module.findExportByName("icuuc.dll", "uscript_isCased")
Interceptor.attach(uscript_isCased, {onLeave: function (args) {send("uscript_isCased");}});

var uscript_isRightToLeft = Module.findExportByName("icuuc.dll", "uscript_isRightToLeft")
Interceptor.attach(uscript_isRightToLeft, {onLeave: function (args) {send("uscript_isRightToLeft");}});

var uset_add = Module.findExportByName("icuuc.dll", "uset_add")
Interceptor.attach(uset_add, {onLeave: function (args) {send("uset_add");}});

var uset_addAll = Module.findExportByName("icuuc.dll", "uset_addAll")
Interceptor.attach(uset_addAll, {onLeave: function (args) {send("uset_addAll");}});

var uset_addAllCodePoints = Module.findExportByName("icuuc.dll", "uset_addAllCodePoints")
Interceptor.attach(uset_addAllCodePoints, {onLeave: function (args) {send("uset_addAllCodePoints");}});

var uset_addRange = Module.findExportByName("icuuc.dll", "uset_addRange")
Interceptor.attach(uset_addRange, {onLeave: function (args) {send("uset_addRange");}});

var uset_addString = Module.findExportByName("icuuc.dll", "uset_addString")
Interceptor.attach(uset_addString, {onLeave: function (args) {send("uset_addString");}});

var uset_applyIntPropertyValue = Module.findExportByName("icuuc.dll", "uset_applyIntPropertyValue")
Interceptor.attach(uset_applyIntPropertyValue, {onLeave: function (args) {send("uset_applyIntPropertyValue");}});

var uset_applyPattern = Module.findExportByName("icuuc.dll", "uset_applyPattern")
Interceptor.attach(uset_applyPattern, {onLeave: function (args) {send("uset_applyPattern");}});

var uset_applyPropertyAlias = Module.findExportByName("icuuc.dll", "uset_applyPropertyAlias")
Interceptor.attach(uset_applyPropertyAlias, {onLeave: function (args) {send("uset_applyPropertyAlias");}});

var uset_charAt = Module.findExportByName("icuuc.dll", "uset_charAt")
Interceptor.attach(uset_charAt, {onLeave: function (args) {send("uset_charAt");}});

var uset_clear = Module.findExportByName("icuuc.dll", "uset_clear")
Interceptor.attach(uset_clear, {onLeave: function (args) {send("uset_clear");}});

var uset_clone = Module.findExportByName("icuuc.dll", "uset_clone")
Interceptor.attach(uset_clone, {onLeave: function (args) {send("uset_clone");}});

var uset_cloneAsThawed = Module.findExportByName("icuuc.dll", "uset_cloneAsThawed")
Interceptor.attach(uset_cloneAsThawed, {onLeave: function (args) {send("uset_cloneAsThawed");}});

var uset_close = Module.findExportByName("icuuc.dll", "uset_close")
Interceptor.attach(uset_close, {onLeave: function (args) {send("uset_close");}});

var uset_closeOver = Module.findExportByName("icuuc.dll", "uset_closeOver")
Interceptor.attach(uset_closeOver, {onLeave: function (args) {send("uset_closeOver");}});

var uset_compact = Module.findExportByName("icuuc.dll", "uset_compact")
Interceptor.attach(uset_compact, {onLeave: function (args) {send("uset_compact");}});

var uset_complement = Module.findExportByName("icuuc.dll", "uset_complement")
Interceptor.attach(uset_complement, {onLeave: function (args) {send("uset_complement");}});

var uset_complementAll = Module.findExportByName("icuuc.dll", "uset_complementAll")
Interceptor.attach(uset_complementAll, {onLeave: function (args) {send("uset_complementAll");}});

var uset_contains = Module.findExportByName("icuuc.dll", "uset_contains")
Interceptor.attach(uset_contains, {onLeave: function (args) {send("uset_contains");}});

var uset_containsAll = Module.findExportByName("icuuc.dll", "uset_containsAll")
Interceptor.attach(uset_containsAll, {onLeave: function (args) {send("uset_containsAll");}});

var uset_containsAllCodePoints = Module.findExportByName("icuuc.dll", "uset_containsAllCodePoints")
Interceptor.attach(uset_containsAllCodePoints, {onLeave: function (args) {send("uset_containsAllCodePoints");}});

var uset_containsNone = Module.findExportByName("icuuc.dll", "uset_containsNone")
Interceptor.attach(uset_containsNone, {onLeave: function (args) {send("uset_containsNone");}});

var uset_containsRange = Module.findExportByName("icuuc.dll", "uset_containsRange")
Interceptor.attach(uset_containsRange, {onLeave: function (args) {send("uset_containsRange");}});

var uset_containsSome = Module.findExportByName("icuuc.dll", "uset_containsSome")
Interceptor.attach(uset_containsSome, {onLeave: function (args) {send("uset_containsSome");}});

var uset_containsString = Module.findExportByName("icuuc.dll", "uset_containsString")
Interceptor.attach(uset_containsString, {onLeave: function (args) {send("uset_containsString");}});

var uset_equals = Module.findExportByName("icuuc.dll", "uset_equals")
Interceptor.attach(uset_equals, {onLeave: function (args) {send("uset_equals");}});

var uset_freeze = Module.findExportByName("icuuc.dll", "uset_freeze")
Interceptor.attach(uset_freeze, {onLeave: function (args) {send("uset_freeze");}});

var uset_getItem = Module.findExportByName("icuuc.dll", "uset_getItem")
Interceptor.attach(uset_getItem, {onLeave: function (args) {send("uset_getItem");}});

var uset_getItemCount = Module.findExportByName("icuuc.dll", "uset_getItemCount")
Interceptor.attach(uset_getItemCount, {onLeave: function (args) {send("uset_getItemCount");}});

var uset_getSerializedRange = Module.findExportByName("icuuc.dll", "uset_getSerializedRange")
Interceptor.attach(uset_getSerializedRange, {onLeave: function (args) {send("uset_getSerializedRange");}});

var uset_getSerializedRangeCount = Module.findExportByName("icuuc.dll", "uset_getSerializedRangeCount")
Interceptor.attach(uset_getSerializedRangeCount, {onLeave: function (args) {send("uset_getSerializedRangeCount");}});

var uset_getSerializedSet = Module.findExportByName("icuuc.dll", "uset_getSerializedSet")
Interceptor.attach(uset_getSerializedSet, {onLeave: function (args) {send("uset_getSerializedSet");}});

var uset_indexOf = Module.findExportByName("icuuc.dll", "uset_indexOf")
Interceptor.attach(uset_indexOf, {onLeave: function (args) {send("uset_indexOf");}});

var uset_isEmpty = Module.findExportByName("icuuc.dll", "uset_isEmpty")
Interceptor.attach(uset_isEmpty, {onLeave: function (args) {send("uset_isEmpty");}});

var uset_isFrozen = Module.findExportByName("icuuc.dll", "uset_isFrozen")
Interceptor.attach(uset_isFrozen, {onLeave: function (args) {send("uset_isFrozen");}});

var uset_open = Module.findExportByName("icuuc.dll", "uset_open")
Interceptor.attach(uset_open, {onLeave: function (args) {send("uset_open");}});

var uset_openEmpty = Module.findExportByName("icuuc.dll", "uset_openEmpty")
Interceptor.attach(uset_openEmpty, {onLeave: function (args) {send("uset_openEmpty");}});

var uset_openPattern = Module.findExportByName("icuuc.dll", "uset_openPattern")
Interceptor.attach(uset_openPattern, {onLeave: function (args) {send("uset_openPattern");}});

var uset_openPatternOptions = Module.findExportByName("icuuc.dll", "uset_openPatternOptions")
Interceptor.attach(uset_openPatternOptions, {onLeave: function (args) {send("uset_openPatternOptions");}});

var uset_remove = Module.findExportByName("icuuc.dll", "uset_remove")
Interceptor.attach(uset_remove, {onLeave: function (args) {send("uset_remove");}});

var uset_removeAll = Module.findExportByName("icuuc.dll", "uset_removeAll")
Interceptor.attach(uset_removeAll, {onLeave: function (args) {send("uset_removeAll");}});

var uset_removeAllStrings = Module.findExportByName("icuuc.dll", "uset_removeAllStrings")
Interceptor.attach(uset_removeAllStrings, {onLeave: function (args) {send("uset_removeAllStrings");}});

var uset_removeRange = Module.findExportByName("icuuc.dll", "uset_removeRange")
Interceptor.attach(uset_removeRange, {onLeave: function (args) {send("uset_removeRange");}});

var uset_removeString = Module.findExportByName("icuuc.dll", "uset_removeString")
Interceptor.attach(uset_removeString, {onLeave: function (args) {send("uset_removeString");}});

var uset_resemblesPattern = Module.findExportByName("icuuc.dll", "uset_resemblesPattern")
Interceptor.attach(uset_resemblesPattern, {onLeave: function (args) {send("uset_resemblesPattern");}});

var uset_retain = Module.findExportByName("icuuc.dll", "uset_retain")
Interceptor.attach(uset_retain, {onLeave: function (args) {send("uset_retain");}});

var uset_retainAll = Module.findExportByName("icuuc.dll", "uset_retainAll")
Interceptor.attach(uset_retainAll, {onLeave: function (args) {send("uset_retainAll");}});

var uset_serialize = Module.findExportByName("icuuc.dll", "uset_serialize")
Interceptor.attach(uset_serialize, {onLeave: function (args) {send("uset_serialize");}});

var uset_serializedContains = Module.findExportByName("icuuc.dll", "uset_serializedContains")
Interceptor.attach(uset_serializedContains, {onLeave: function (args) {send("uset_serializedContains");}});

var uset_set = Module.findExportByName("icuuc.dll", "uset_set")
Interceptor.attach(uset_set, {onLeave: function (args) {send("uset_set");}});

var uset_setSerializedToOne = Module.findExportByName("icuuc.dll", "uset_setSerializedToOne")
Interceptor.attach(uset_setSerializedToOne, {onLeave: function (args) {send("uset_setSerializedToOne");}});

var uset_size = Module.findExportByName("icuuc.dll", "uset_size")
Interceptor.attach(uset_size, {onLeave: function (args) {send("uset_size");}});

var uset_span = Module.findExportByName("icuuc.dll", "uset_span")
Interceptor.attach(uset_span, {onLeave: function (args) {send("uset_span");}});

var uset_spanBack = Module.findExportByName("icuuc.dll", "uset_spanBack")
Interceptor.attach(uset_spanBack, {onLeave: function (args) {send("uset_spanBack");}});

var uset_spanBackUTF8 = Module.findExportByName("icuuc.dll", "uset_spanBackUTF8")
Interceptor.attach(uset_spanBackUTF8, {onLeave: function (args) {send("uset_spanBackUTF8");}});

var uset_spanUTF8 = Module.findExportByName("icuuc.dll", "uset_spanUTF8")
Interceptor.attach(uset_spanUTF8, {onLeave: function (args) {send("uset_spanUTF8");}});

var uset_toPattern = Module.findExportByName("icuuc.dll", "uset_toPattern")
Interceptor.attach(uset_toPattern, {onLeave: function (args) {send("uset_toPattern");}});

var usprep_close = Module.findExportByName("icuuc.dll", "usprep_close")
Interceptor.attach(usprep_close, {onLeave: function (args) {send("usprep_close");}});

var usprep_open = Module.findExportByName("icuuc.dll", "usprep_open")
Interceptor.attach(usprep_open, {onLeave: function (args) {send("usprep_open");}});

var usprep_openByType = Module.findExportByName("icuuc.dll", "usprep_openByType")
Interceptor.attach(usprep_openByType, {onLeave: function (args) {send("usprep_openByType");}});

var usprep_prepare = Module.findExportByName("icuuc.dll", "usprep_prepare")
Interceptor.attach(usprep_prepare, {onLeave: function (args) {send("usprep_prepare");}});

var utext_char32At = Module.findExportByName("icuuc.dll", "utext_char32At")
Interceptor.attach(utext_char32At, {onLeave: function (args) {send("utext_char32At");}});

var utext_clone = Module.findExportByName("icuuc.dll", "utext_clone")
Interceptor.attach(utext_clone, {onLeave: function (args) {send("utext_clone");}});

var utext_close = Module.findExportByName("icuuc.dll", "utext_close")
Interceptor.attach(utext_close, {onLeave: function (args) {send("utext_close");}});

var utext_copy = Module.findExportByName("icuuc.dll", "utext_copy")
Interceptor.attach(utext_copy, {onLeave: function (args) {send("utext_copy");}});

var utext_current32 = Module.findExportByName("icuuc.dll", "utext_current32")
Interceptor.attach(utext_current32, {onLeave: function (args) {send("utext_current32");}});

var utext_equals = Module.findExportByName("icuuc.dll", "utext_equals")
Interceptor.attach(utext_equals, {onLeave: function (args) {send("utext_equals");}});

var utext_extract = Module.findExportByName("icuuc.dll", "utext_extract")
Interceptor.attach(utext_extract, {onLeave: function (args) {send("utext_extract");}});

var utext_freeze = Module.findExportByName("icuuc.dll", "utext_freeze")
Interceptor.attach(utext_freeze, {onLeave: function (args) {send("utext_freeze");}});

var utext_getNativeIndex = Module.findExportByName("icuuc.dll", "utext_getNativeIndex")
Interceptor.attach(utext_getNativeIndex, {onLeave: function (args) {send("utext_getNativeIndex");}});

var utext_getPreviousNativeIndex = Module.findExportByName("icuuc.dll", "utext_getPreviousNativeIndex")
Interceptor.attach(utext_getPreviousNativeIndex, {onLeave: function (args) {send("utext_getPreviousNativeIndex");}});

var utext_hasMetaData = Module.findExportByName("icuuc.dll", "utext_hasMetaData")
Interceptor.attach(utext_hasMetaData, {onLeave: function (args) {send("utext_hasMetaData");}});

var utext_isLengthExpensive = Module.findExportByName("icuuc.dll", "utext_isLengthExpensive")
Interceptor.attach(utext_isLengthExpensive, {onLeave: function (args) {send("utext_isLengthExpensive");}});

var utext_isWritable = Module.findExportByName("icuuc.dll", "utext_isWritable")
Interceptor.attach(utext_isWritable, {onLeave: function (args) {send("utext_isWritable");}});

var utext_moveIndex32 = Module.findExportByName("icuuc.dll", "utext_moveIndex32")
Interceptor.attach(utext_moveIndex32, {onLeave: function (args) {send("utext_moveIndex32");}});

var utext_nativeLength = Module.findExportByName("icuuc.dll", "utext_nativeLength")
Interceptor.attach(utext_nativeLength, {onLeave: function (args) {send("utext_nativeLength");}});

var utext_next32 = Module.findExportByName("icuuc.dll", "utext_next32")
Interceptor.attach(utext_next32, {onLeave: function (args) {send("utext_next32");}});

var utext_next32From = Module.findExportByName("icuuc.dll", "utext_next32From")
Interceptor.attach(utext_next32From, {onLeave: function (args) {send("utext_next32From");}});

var utext_openUChars = Module.findExportByName("icuuc.dll", "utext_openUChars")
Interceptor.attach(utext_openUChars, {onLeave: function (args) {send("utext_openUChars");}});

var utext_openUTF8 = Module.findExportByName("icuuc.dll", "utext_openUTF8")
Interceptor.attach(utext_openUTF8, {onLeave: function (args) {send("utext_openUTF8");}});

var utext_previous32 = Module.findExportByName("icuuc.dll", "utext_previous32")
Interceptor.attach(utext_previous32, {onLeave: function (args) {send("utext_previous32");}});

var utext_previous32From = Module.findExportByName("icuuc.dll", "utext_previous32From")
Interceptor.attach(utext_previous32From, {onLeave: function (args) {send("utext_previous32From");}});

var utext_replace = Module.findExportByName("icuuc.dll", "utext_replace")
Interceptor.attach(utext_replace, {onLeave: function (args) {send("utext_replace");}});

var utext_setNativeIndex = Module.findExportByName("icuuc.dll", "utext_setNativeIndex")
Interceptor.attach(utext_setNativeIndex, {onLeave: function (args) {send("utext_setNativeIndex");}});

var utext_setup = Module.findExportByName("icuuc.dll", "utext_setup")
Interceptor.attach(utext_setup, {onLeave: function (args) {send("utext_setup");}});

var utf8_appendCharSafeBody = Module.findExportByName("icuuc.dll", "utf8_appendCharSafeBody")
Interceptor.attach(utf8_appendCharSafeBody, {onLeave: function (args) {send("utf8_appendCharSafeBody");}});

var utf8_back1SafeBody = Module.findExportByName("icuuc.dll", "utf8_back1SafeBody")
Interceptor.attach(utf8_back1SafeBody, {onLeave: function (args) {send("utf8_back1SafeBody");}});

var utf8_nextCharSafeBody = Module.findExportByName("icuuc.dll", "utf8_nextCharSafeBody")
Interceptor.attach(utf8_nextCharSafeBody, {onLeave: function (args) {send("utf8_nextCharSafeBody");}});

var utf8_prevCharSafeBody = Module.findExportByName("icuuc.dll", "utf8_prevCharSafeBody")
Interceptor.attach(utf8_prevCharSafeBody, {onLeave: function (args) {send("utf8_prevCharSafeBody");}});

var utrace_format = Module.findExportByName("icuuc.dll", "utrace_format")
Interceptor.attach(utrace_format, {onLeave: function (args) {send("utrace_format");}});

var utrace_functionName = Module.findExportByName("icuuc.dll", "utrace_functionName")
Interceptor.attach(utrace_functionName, {onLeave: function (args) {send("utrace_functionName");}});

var utrace_getFunctions = Module.findExportByName("icuuc.dll", "utrace_getFunctions")
Interceptor.attach(utrace_getFunctions, {onLeave: function (args) {send("utrace_getFunctions");}});

var utrace_getLevel = Module.findExportByName("icuuc.dll", "utrace_getLevel")
Interceptor.attach(utrace_getLevel, {onLeave: function (args) {send("utrace_getLevel");}});

var utrace_setFunctions = Module.findExportByName("icuuc.dll", "utrace_setFunctions")
Interceptor.attach(utrace_setFunctions, {onLeave: function (args) {send("utrace_setFunctions");}});

var utrace_setLevel = Module.findExportByName("icuuc.dll", "utrace_setLevel")
Interceptor.attach(utrace_setLevel, {onLeave: function (args) {send("utrace_setLevel");}});

var utrace_vformat = Module.findExportByName("icuuc.dll", "utrace_vformat")
Interceptor.attach(utrace_vformat, {onLeave: function (args) {send("utrace_vformat");}});

