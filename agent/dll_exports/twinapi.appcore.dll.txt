var BiActivateWorkItemForUser = Module.findExportByName("twinapi.appcore.dll", "BiActivateWorkItemForUser")
Interceptor.attach(BiActivateWorkItemForUser, {onLeave: function (args) {send("BiActivateWorkItemForUser");}});

var BiChangeApplicationStateForPackageName = Module.findExportByName("twinapi.appcore.dll", "BiChangeApplicationStateForPackageName")
Interceptor.attach(BiChangeApplicationStateForPackageName, {onLeave: function (args) {send("BiChangeApplicationStateForPackageName");}});

var BiChangeApplicationStateForPackageNameForUser = Module.findExportByName("twinapi.appcore.dll", "BiChangeApplicationStateForPackageNameForUser")
Interceptor.attach(BiChangeApplicationStateForPackageNameForUser, {onLeave: function (args) {send("BiChangeApplicationStateForPackageNameForUser");}});

var BiChangeApplicationStateForPsmKey = Module.findExportByName("twinapi.appcore.dll", "BiChangeApplicationStateForPsmKey")
Interceptor.attach(BiChangeApplicationStateForPsmKey, {onLeave: function (args) {send("BiChangeApplicationStateForPsmKey");}});

var BiChangeApplicationStateForPsmKeyForUser = Module.findExportByName("twinapi.appcore.dll", "BiChangeApplicationStateForPsmKeyForUser")
Interceptor.attach(BiChangeApplicationStateForPsmKeyForUser, {onLeave: function (args) {send("BiChangeApplicationStateForPsmKeyForUser");}});

var BiChangeSessionState = Module.findExportByName("twinapi.appcore.dll", "BiChangeSessionState")
Interceptor.attach(BiChangeSessionState, {onLeave: function (args) {send("BiChangeSessionState");}});

var BiChangeUserState = Module.findExportByName("twinapi.appcore.dll", "BiChangeUserState")
Interceptor.attach(BiChangeUserState, {onLeave: function (args) {send("BiChangeUserState");}});

var BiEnumerateWorkItemsForPackageNameAndUser = Module.findExportByName("twinapi.appcore.dll", "BiEnumerateWorkItemsForPackageNameAndUser")
Interceptor.attach(BiEnumerateWorkItemsForPackageNameAndUser, {onLeave: function (args) {send("BiEnumerateWorkItemsForPackageNameAndUser");}});

var BiGetActiveBackgroundTasksEvent = Module.findExportByName("twinapi.appcore.dll", "BiGetActiveBackgroundTasksEvent")
Interceptor.attach(BiGetActiveBackgroundTasksEvent, {onLeave: function (args) {send("BiGetActiveBackgroundTasksEvent");}});

var BiGetActiveBackgroundTasksEventForUser = Module.findExportByName("twinapi.appcore.dll", "BiGetActiveBackgroundTasksEventForUser")
Interceptor.attach(BiGetActiveBackgroundTasksEventForUser, {onLeave: function (args) {send("BiGetActiveBackgroundTasksEventForUser");}});

var BiGetCancellationTimeoutInMs = Module.findExportByName("twinapi.appcore.dll", "BiGetCancellationTimeoutInMs")
Interceptor.attach(BiGetCancellationTimeoutInMs, {onLeave: function (args) {send("BiGetCancellationTimeoutInMs");}});

var BiIsApplicationTerminateSensitive = Module.findExportByName("twinapi.appcore.dll", "BiIsApplicationTerminateSensitive")
Interceptor.attach(BiIsApplicationTerminateSensitive, {onLeave: function (args) {send("BiIsApplicationTerminateSensitive");}});

var BiIsApplicationTerminateSensitiveForUser = Module.findExportByName("twinapi.appcore.dll", "BiIsApplicationTerminateSensitiveForUser")
Interceptor.attach(BiIsApplicationTerminateSensitiveForUser, {onLeave: function (args) {send("BiIsApplicationTerminateSensitiveForUser");}});

var BiNotifyNewSession = Module.findExportByName("twinapi.appcore.dll", "BiNotifyNewSession")
Interceptor.attach(BiNotifyNewSession, {onLeave: function (args) {send("BiNotifyNewSession");}});

var BiNotifyNewSessionComplete = Module.findExportByName("twinapi.appcore.dll", "BiNotifyNewSessionComplete")
Interceptor.attach(BiNotifyNewSessionComplete, {onLeave: function (args) {send("BiNotifyNewSessionComplete");}});

var BiNotifyNewUser = Module.findExportByName("twinapi.appcore.dll", "BiNotifyNewUser")
Interceptor.attach(BiNotifyNewUser, {onLeave: function (args) {send("BiNotifyNewUser");}});

var BiPlmFreeMemory = Module.findExportByName("twinapi.appcore.dll", "BiPlmFreeMemory")
Interceptor.attach(BiPlmFreeMemory, {onLeave: function (args) {send("BiPlmFreeMemory");}});

var BiPtActivateDeferredWorkItem = Module.findExportByName("twinapi.appcore.dll", "BiPtActivateDeferredWorkItem")
Interceptor.attach(BiPtActivateDeferredWorkItem, {onLeave: function (args) {send("BiPtActivateDeferredWorkItem");}});

var BiPtActivateInBackground = Module.findExportByName("twinapi.appcore.dll", "BiPtActivateInBackground")
Interceptor.attach(BiPtActivateInBackground, {onLeave: function (args) {send("BiPtActivateInBackground");}});

var BiPtActivateInBackgroundEx = Module.findExportByName("twinapi.appcore.dll", "BiPtActivateInBackgroundEx")
Interceptor.attach(BiPtActivateInBackgroundEx, {onLeave: function (args) {send("BiPtActivateInBackgroundEx");}});

var BiPtActivateWorkItem = Module.findExportByName("twinapi.appcore.dll", "BiPtActivateWorkItem")
Interceptor.attach(BiPtActivateWorkItem, {onLeave: function (args) {send("BiPtActivateWorkItem");}});

var BiPtAssociateActivationProxy = Module.findExportByName("twinapi.appcore.dll", "BiPtAssociateActivationProxy")
Interceptor.attach(BiPtAssociateActivationProxy, {onLeave: function (args) {send("BiPtAssociateActivationProxy");}});

var BiPtAssociateApplicationEntryPoint = Module.findExportByName("twinapi.appcore.dll", "BiPtAssociateApplicationEntryPoint")
Interceptor.attach(BiPtAssociateApplicationEntryPoint, {onLeave: function (args) {send("BiPtAssociateApplicationEntryPoint");}});

var BiPtAssociateApplicationExtensionClass = Module.findExportByName("twinapi.appcore.dll", "BiPtAssociateApplicationExtensionClass")
Interceptor.attach(BiPtAssociateApplicationExtensionClass, {onLeave: function (args) {send("BiPtAssociateApplicationExtensionClass");}});

var BiPtCancelWorkItem = Module.findExportByName("twinapi.appcore.dll", "BiPtCancelWorkItem")
Interceptor.attach(BiPtCancelWorkItem, {onLeave: function (args) {send("BiPtCancelWorkItem");}});

var BiPtCancelWorkItemEx = Module.findExportByName("twinapi.appcore.dll", "BiPtCancelWorkItemEx")
Interceptor.attach(BiPtCancelWorkItemEx, {onLeave: function (args) {send("BiPtCancelWorkItemEx");}});

var BiPtCreateEvent = Module.findExportByName("twinapi.appcore.dll", "BiPtCreateEvent")
Interceptor.attach(BiPtCreateEvent, {onLeave: function (args) {send("BiPtCreateEvent");}});

var BiPtCreateEventForApp = Module.findExportByName("twinapi.appcore.dll", "BiPtCreateEventForApp")
Interceptor.attach(BiPtCreateEventForApp, {onLeave: function (args) {send("BiPtCreateEventForApp");}});

var BiPtCreateEventForPackageName = Module.findExportByName("twinapi.appcore.dll", "BiPtCreateEventForPackageName")
Interceptor.attach(BiPtCreateEventForPackageName, {onLeave: function (args) {send("BiPtCreateEventForPackageName");}});

var BiPtDeleteEvent = Module.findExportByName("twinapi.appcore.dll", "BiPtDeleteEvent")
Interceptor.attach(BiPtDeleteEvent, {onLeave: function (args) {send("BiPtDeleteEvent");}});

var BiPtDisableWorkItem = Module.findExportByName("twinapi.appcore.dll", "BiPtDisableWorkItem")
Interceptor.attach(BiPtDisableWorkItem, {onLeave: function (args) {send("BiPtDisableWorkItem");}});

var BiPtDisassociateWorkItem = Module.findExportByName("twinapi.appcore.dll", "BiPtDisassociateWorkItem")
Interceptor.attach(BiPtDisassociateWorkItem, {onLeave: function (args) {send("BiPtDisassociateWorkItem");}});

var BiPtDisassociateWorkItemEx = Module.findExportByName("twinapi.appcore.dll", "BiPtDisassociateWorkItemEx")
Interceptor.attach(BiPtDisassociateWorkItemEx, {onLeave: function (args) {send("BiPtDisassociateWorkItemEx");}});

var BiPtEnableWorkItem = Module.findExportByName("twinapi.appcore.dll", "BiPtEnableWorkItem")
Interceptor.attach(BiPtEnableWorkItem, {onLeave: function (args) {send("BiPtEnableWorkItem");}});

var BiPtEnumerateBrokeredEvents = Module.findExportByName("twinapi.appcore.dll", "BiPtEnumerateBrokeredEvents")
Interceptor.attach(BiPtEnumerateBrokeredEvents, {onLeave: function (args) {send("BiPtEnumerateBrokeredEvents");}});

var BiPtEnumerateBrokeredEventsEx = Module.findExportByName("twinapi.appcore.dll", "BiPtEnumerateBrokeredEventsEx")
Interceptor.attach(BiPtEnumerateBrokeredEventsEx, {onLeave: function (args) {send("BiPtEnumerateBrokeredEventsEx");}});

var BiPtEnumerateWorkItemsForPackageName = Module.findExportByName("twinapi.appcore.dll", "BiPtEnumerateWorkItemsForPackageName")
Interceptor.attach(BiPtEnumerateWorkItemsForPackageName, {onLeave: function (args) {send("BiPtEnumerateWorkItemsForPackageName");}});

var BiPtEnumerateWorkItemsForPackageNameEx = Module.findExportByName("twinapi.appcore.dll", "BiPtEnumerateWorkItemsForPackageNameEx")
Interceptor.attach(BiPtEnumerateWorkItemsForPackageNameEx, {onLeave: function (args) {send("BiPtEnumerateWorkItemsForPackageNameEx");}});

var BiPtFreeMemory = Module.findExportByName("twinapi.appcore.dll", "BiPtFreeMemory")
Interceptor.attach(BiPtFreeMemory, {onLeave: function (args) {send("BiPtFreeMemory");}});

var BiPtGetStatusStateNameFromBrokerEventId = Module.findExportByName("twinapi.appcore.dll", "BiPtGetStatusStateNameFromBrokerEventId")
Interceptor.attach(BiPtGetStatusStateNameFromBrokerEventId, {onLeave: function (args) {send("BiPtGetStatusStateNameFromBrokerEventId");}});

var BiPtQueryBrokerEventId = Module.findExportByName("twinapi.appcore.dll", "BiPtQueryBrokerEventId")
Interceptor.attach(BiPtQueryBrokerEventId, {onLeave: function (args) {send("BiPtQueryBrokerEventId");}});

var BiPtQueryBrokeredEvent = Module.findExportByName("twinapi.appcore.dll", "BiPtQueryBrokeredEvent")
Interceptor.attach(BiPtQueryBrokeredEvent, {onLeave: function (args) {send("BiPtQueryBrokeredEvent");}});

var BiPtQuerySystemStateBroadcastChannels = Module.findExportByName("twinapi.appcore.dll", "BiPtQuerySystemStateBroadcastChannels")
Interceptor.attach(BiPtQuerySystemStateBroadcastChannels, {onLeave: function (args) {send("BiPtQuerySystemStateBroadcastChannels");}});

var BiPtQueryWorkItem = Module.findExportByName("twinapi.appcore.dll", "BiPtQueryWorkItem")
Interceptor.attach(BiPtQueryWorkItem, {onLeave: function (args) {send("BiPtQueryWorkItem");}});

var BiPtQueryWorkItemEx = Module.findExportByName("twinapi.appcore.dll", "BiPtQueryWorkItemEx")
Interceptor.attach(BiPtQueryWorkItemEx, {onLeave: function (args) {send("BiPtQueryWorkItemEx");}});

var BiPtQueryWorkItemStatusStateName = Module.findExportByName("twinapi.appcore.dll", "BiPtQueryWorkItemStatusStateName")
Interceptor.attach(BiPtQueryWorkItemStatusStateName, {onLeave: function (args) {send("BiPtQueryWorkItemStatusStateName");}});

var BiPtSignalEvent = Module.findExportByName("twinapi.appcore.dll", "BiPtSignalEvent")
Interceptor.attach(BiPtSignalEvent, {onLeave: function (args) {send("BiPtSignalEvent");}});

var BiPtSignalEventEx = Module.findExportByName("twinapi.appcore.dll", "BiPtSignalEventEx")
Interceptor.attach(BiPtSignalEventEx, {onLeave: function (args) {send("BiPtSignalEventEx");}});

var BiPtSignalMultipleEvents = Module.findExportByName("twinapi.appcore.dll", "BiPtSignalMultipleEvents")
Interceptor.attach(BiPtSignalMultipleEvents, {onLeave: function (args) {send("BiPtSignalMultipleEvents");}});

var BiPtSignalTriggerEvent = Module.findExportByName("twinapi.appcore.dll", "BiPtSignalTriggerEvent")
Interceptor.attach(BiPtSignalTriggerEvent, {onLeave: function (args) {send("BiPtSignalTriggerEvent");}});

var BiPtSignalTriggerEventEx = Module.findExportByName("twinapi.appcore.dll", "BiPtSignalTriggerEventEx")
Interceptor.attach(BiPtSignalTriggerEventEx, {onLeave: function (args) {send("BiPtSignalTriggerEventEx");}});

var BiQueryWorkItemForUser = Module.findExportByName("twinapi.appcore.dll", "BiQueryWorkItemForUser")
Interceptor.attach(BiQueryWorkItemForUser, {onLeave: function (args) {send("BiQueryWorkItemForUser");}});

var BiResetActiveSessionForPackage = Module.findExportByName("twinapi.appcore.dll", "BiResetActiveSessionForPackage")
Interceptor.attach(BiResetActiveSessionForPackage, {onLeave: function (args) {send("BiResetActiveSessionForPackage");}});

var BiResetActiveUserForPackage = Module.findExportByName("twinapi.appcore.dll", "BiResetActiveUserForPackage")
Interceptor.attach(BiResetActiveUserForPackage, {onLeave: function (args) {send("BiResetActiveUserForPackage");}});

var BiSetActiveSessionForPackage = Module.findExportByName("twinapi.appcore.dll", "BiSetActiveSessionForPackage")
Interceptor.attach(BiSetActiveSessionForPackage, {onLeave: function (args) {send("BiSetActiveSessionForPackage");}});

var BiSetActiveUserForPackage = Module.findExportByName("twinapi.appcore.dll", "BiSetActiveUserForPackage")
Interceptor.attach(BiSetActiveUserForPackage, {onLeave: function (args) {send("BiSetActiveUserForPackage");}});

var BiTerminateApplicationHost = Module.findExportByName("twinapi.appcore.dll", "BiTerminateApplicationHost")
Interceptor.attach(BiTerminateApplicationHost, {onLeave: function (args) {send("BiTerminateApplicationHost");}});

var BiTerminateApplicationHost2 = Module.findExportByName("twinapi.appcore.dll", "BiTerminateApplicationHost2")
Interceptor.attach(BiTerminateApplicationHost2, {onLeave: function (args) {send("BiTerminateApplicationHost2");}});

var BiTerminateApplicationHostForUser = Module.findExportByName("twinapi.appcore.dll", "BiTerminateApplicationHostForUser")
Interceptor.attach(BiTerminateApplicationHostForUser, {onLeave: function (args) {send("BiTerminateApplicationHostForUser");}});

var BiUpdateBackgroundAccessApplicationsForUser = Module.findExportByName("twinapi.appcore.dll", "BiUpdateBackgroundAccessApplicationsForUser")
Interceptor.attach(BiUpdateBackgroundAccessApplicationsForUser, {onLeave: function (args) {send("BiUpdateBackgroundAccessApplicationsForUser");}});

var BiUpdateLockScreenApplications = Module.findExportByName("twinapi.appcore.dll", "BiUpdateLockScreenApplications")
Interceptor.attach(BiUpdateLockScreenApplications, {onLeave: function (args) {send("BiUpdateLockScreenApplications");}});

var DllCanUnloadNow = Module.findExportByName("twinapi.appcore.dll", "DllCanUnloadNow")
Interceptor.attach(DllCanUnloadNow, {onLeave: function (args) {send("DllCanUnloadNow");}});

var DllGetActivationFactory = Module.findExportByName("twinapi.appcore.dll", "DllGetActivationFactory")
Interceptor.attach(DllGetActivationFactory, {onLeave: function (args) {send("DllGetActivationFactory");}});

var DllGetClassObject = Module.findExportByName("twinapi.appcore.dll", "DllGetClassObject")
Interceptor.attach(DllGetClassObject, {onLeave: function (args) {send("DllGetClassObject");}});

var PsmApplyTaskCompletion = Module.findExportByName("twinapi.appcore.dll", "PsmApplyTaskCompletion")
Interceptor.attach(PsmApplyTaskCompletion, {onLeave: function (args) {send("PsmApplyTaskCompletion");}});

var PsmBlockAppStateChangeCompletion = Module.findExportByName("twinapi.appcore.dll", "PsmBlockAppStateChangeCompletion")
Interceptor.attach(PsmBlockAppStateChangeCompletion, {onLeave: function (args) {send("PsmBlockAppStateChangeCompletion");}});

var PsmDisconnect = Module.findExportByName("twinapi.appcore.dll", "PsmDisconnect")
Interceptor.attach(PsmDisconnect, {onLeave: function (args) {send("PsmDisconnect");}});

var PsmGetSessionInfo = Module.findExportByName("twinapi.appcore.dll", "PsmGetSessionInfo")
Interceptor.attach(PsmGetSessionInfo, {onLeave: function (args) {send("PsmGetSessionInfo");}});

var PsmInitializeExtension = Module.findExportByName("twinapi.appcore.dll", "PsmInitializeExtension")
Interceptor.attach(PsmInitializeExtension, {onLeave: function (args) {send("PsmInitializeExtension");}});

var PsmIsProcessInApplication = Module.findExportByName("twinapi.appcore.dll", "PsmIsProcessInApplication")
Interceptor.attach(PsmIsProcessInApplication, {onLeave: function (args) {send("PsmIsProcessInApplication");}});

var PsmIsProcessInApplication2 = Module.findExportByName("twinapi.appcore.dll", "PsmIsProcessInApplication2")
Interceptor.attach(PsmIsProcessInApplication2, {onLeave: function (args) {send("PsmIsProcessInApplication2");}});

var PsmQueryApplicationInformation = Module.findExportByName("twinapi.appcore.dll", "PsmQueryApplicationInformation")
Interceptor.attach(PsmQueryApplicationInformation, {onLeave: function (args) {send("PsmQueryApplicationInformation");}});

var PsmQueryApplicationInformation2 = Module.findExportByName("twinapi.appcore.dll", "PsmQueryApplicationInformation2")
Interceptor.attach(PsmQueryApplicationInformation2, {onLeave: function (args) {send("PsmQueryApplicationInformation2");}});

var PsmQueryApplicationInterferenceCount = Module.findExportByName("twinapi.appcore.dll", "PsmQueryApplicationInterferenceCount")
Interceptor.attach(PsmQueryApplicationInterferenceCount, {onLeave: function (args) {send("PsmQueryApplicationInterferenceCount");}});

var PsmQueryApplicationInterferenceCount2 = Module.findExportByName("twinapi.appcore.dll", "PsmQueryApplicationInterferenceCount2")
Interceptor.attach(PsmQueryApplicationInterferenceCount2, {onLeave: function (args) {send("PsmQueryApplicationInterferenceCount2");}});

var PsmQueryApplicationList = Module.findExportByName("twinapi.appcore.dll", "PsmQueryApplicationList")
Interceptor.attach(PsmQueryApplicationList, {onLeave: function (args) {send("PsmQueryApplicationList");}});

var PsmQueryApplicationList2 = Module.findExportByName("twinapi.appcore.dll", "PsmQueryApplicationList2")
Interceptor.attach(PsmQueryApplicationList2, {onLeave: function (args) {send("PsmQueryApplicationList2");}});

var PsmQueryApplicationProperties = Module.findExportByName("twinapi.appcore.dll", "PsmQueryApplicationProperties")
Interceptor.attach(PsmQueryApplicationProperties, {onLeave: function (args) {send("PsmQueryApplicationProperties");}});

var PsmQueryApplicationProperties2 = Module.findExportByName("twinapi.appcore.dll", "PsmQueryApplicationProperties2")
Interceptor.attach(PsmQueryApplicationProperties2, {onLeave: function (args) {send("PsmQueryApplicationProperties2");}});

var PsmQueryApplicationProperties3 = Module.findExportByName("twinapi.appcore.dll", "PsmQueryApplicationProperties3")
Interceptor.attach(PsmQueryApplicationProperties3, {onLeave: function (args) {send("PsmQueryApplicationProperties3");}});

var PsmQueryApplicationPropertiesByUser = Module.findExportByName("twinapi.appcore.dll", "PsmQueryApplicationPropertiesByUser")
Interceptor.attach(PsmQueryApplicationPropertiesByUser, {onLeave: function (args) {send("PsmQueryApplicationPropertiesByUser");}});

var PsmQueryApplicationResourceUsage = Module.findExportByName("twinapi.appcore.dll", "PsmQueryApplicationResourceUsage")
Interceptor.attach(PsmQueryApplicationResourceUsage, {onLeave: function (args) {send("PsmQueryApplicationResourceUsage");}});

var PsmQueryApplicationResourceUsage2 = Module.findExportByName("twinapi.appcore.dll", "PsmQueryApplicationResourceUsage2")
Interceptor.attach(PsmQueryApplicationResourceUsage2, {onLeave: function (args) {send("PsmQueryApplicationResourceUsage2");}});

var PsmQueryApplicationResourceUsageForTimer = Module.findExportByName("twinapi.appcore.dll", "PsmQueryApplicationResourceUsageForTimer")
Interceptor.attach(PsmQueryApplicationResourceUsageForTimer, {onLeave: function (args) {send("PsmQueryApplicationResourceUsageForTimer");}});

var PsmQueryCurrentAppState = Module.findExportByName("twinapi.appcore.dll", "PsmQueryCurrentAppState")
Interceptor.attach(PsmQueryCurrentAppState, {onLeave: function (args) {send("PsmQueryCurrentAppState");}});

var PsmQueryMaxMemoryUsage = Module.findExportByName("twinapi.appcore.dll", "PsmQueryMaxMemoryUsage")
Interceptor.attach(PsmQueryMaxMemoryUsage, {onLeave: function (args) {send("PsmQueryMaxMemoryUsage");}});

var PsmQueryMaxMemoryUsage2 = Module.findExportByName("twinapi.appcore.dll", "PsmQueryMaxMemoryUsage2")
Interceptor.attach(PsmQueryMaxMemoryUsage2, {onLeave: function (args) {send("PsmQueryMaxMemoryUsage2");}});

var PsmQueryMemoryUsage = Module.findExportByName("twinapi.appcore.dll", "PsmQueryMemoryUsage")
Interceptor.attach(PsmQueryMemoryUsage, {onLeave: function (args) {send("PsmQueryMemoryUsage");}});

var PsmQueryMemoryUsage2 = Module.findExportByName("twinapi.appcore.dll", "PsmQueryMemoryUsage2")
Interceptor.attach(PsmQueryMemoryUsage2, {onLeave: function (args) {send("PsmQueryMemoryUsage2");}});

var PsmQueryMemoryUsageByUser = Module.findExportByName("twinapi.appcore.dll", "PsmQueryMemoryUsageByUser")
Interceptor.attach(PsmQueryMemoryUsageByUser, {onLeave: function (args) {send("PsmQueryMemoryUsageByUser");}});

var PsmQueryProcessList = Module.findExportByName("twinapi.appcore.dll", "PsmQueryProcessList")
Interceptor.attach(PsmQueryProcessList, {onLeave: function (args) {send("PsmQueryProcessList");}});

var PsmQueryProcessList2 = Module.findExportByName("twinapi.appcore.dll", "PsmQueryProcessList2")
Interceptor.attach(PsmQueryProcessList2, {onLeave: function (args) {send("PsmQueryProcessList2");}});

var PsmQuerySharedCommitByUser = Module.findExportByName("twinapi.appcore.dll", "PsmQuerySharedCommitByUser")
Interceptor.attach(PsmQuerySharedCommitByUser, {onLeave: function (args) {send("PsmQuerySharedCommitByUser");}});

var PsmQueryTaskCompletionInformation = Module.findExportByName("twinapi.appcore.dll", "PsmQueryTaskCompletionInformation")
Interceptor.attach(PsmQueryTaskCompletionInformation, {onLeave: function (args) {send("PsmQueryTaskCompletionInformation");}});

var PsmQueryTaskCompletionInformation2 = Module.findExportByName("twinapi.appcore.dll", "PsmQueryTaskCompletionInformation2")
Interceptor.attach(PsmQueryTaskCompletionInformation2, {onLeave: function (args) {send("PsmQueryTaskCompletionInformation2");}});

var PsmRegisterAppPriorityNotification = Module.findExportByName("twinapi.appcore.dll", "PsmRegisterAppPriorityNotification")
Interceptor.attach(PsmRegisterAppPriorityNotification, {onLeave: function (args) {send("PsmRegisterAppPriorityNotification");}});

var PsmRegisterAppStateChangeNotification = Module.findExportByName("twinapi.appcore.dll", "PsmRegisterAppStateChangeNotification")
Interceptor.attach(PsmRegisterAppStateChangeNotification, {onLeave: function (args) {send("PsmRegisterAppStateChangeNotification");}});

var PsmRegisterApplicationNotification = Module.findExportByName("twinapi.appcore.dll", "PsmRegisterApplicationNotification")
Interceptor.attach(PsmRegisterApplicationNotification, {onLeave: function (args) {send("PsmRegisterApplicationNotification");}});

var PsmRegisterApplicationNotification2 = Module.findExportByName("twinapi.appcore.dll", "PsmRegisterApplicationNotification2")
Interceptor.attach(PsmRegisterApplicationNotification2, {onLeave: function (args) {send("PsmRegisterApplicationNotification2");}});

var PsmRegisterDynamicProcess = Module.findExportByName("twinapi.appcore.dll", "PsmRegisterDynamicProcess")
Interceptor.attach(PsmRegisterDynamicProcess, {onLeave: function (args) {send("PsmRegisterDynamicProcess");}});

var PsmRegisterKeyNotification = Module.findExportByName("twinapi.appcore.dll", "PsmRegisterKeyNotification")
Interceptor.attach(PsmRegisterKeyNotification, {onLeave: function (args) {send("PsmRegisterKeyNotification");}});

var PsmRegisterManagerType = Module.findExportByName("twinapi.appcore.dll", "PsmRegisterManagerType")
Interceptor.attach(PsmRegisterManagerType, {onLeave: function (args) {send("PsmRegisterManagerType");}});

var PsmResetMaxMemoryUsage = Module.findExportByName("twinapi.appcore.dll", "PsmResetMaxMemoryUsage")
Interceptor.attach(PsmResetMaxMemoryUsage, {onLeave: function (args) {send("PsmResetMaxMemoryUsage");}});

var PsmResetMaxMemoryUsage2 = Module.findExportByName("twinapi.appcore.dll", "PsmResetMaxMemoryUsage2")
Interceptor.attach(PsmResetMaxMemoryUsage2, {onLeave: function (args) {send("PsmResetMaxMemoryUsage2");}});

var PsmResetMaxMemoryUsageByUser = Module.findExportByName("twinapi.appcore.dll", "PsmResetMaxMemoryUsageByUser")
Interceptor.attach(PsmResetMaxMemoryUsageByUser, {onLeave: function (args) {send("PsmResetMaxMemoryUsageByUser");}});

var PsmSetApplicationPriority = Module.findExportByName("twinapi.appcore.dll", "PsmSetApplicationPriority")
Interceptor.attach(PsmSetApplicationPriority, {onLeave: function (args) {send("PsmSetApplicationPriority");}});

var PsmSetApplicationPriority2 = Module.findExportByName("twinapi.appcore.dll", "PsmSetApplicationPriority2")
Interceptor.attach(PsmSetApplicationPriority2, {onLeave: function (args) {send("PsmSetApplicationPriority2");}});

var PsmSetApplicationProperties = Module.findExportByName("twinapi.appcore.dll", "PsmSetApplicationProperties")
Interceptor.attach(PsmSetApplicationProperties, {onLeave: function (args) {send("PsmSetApplicationProperties");}});

var PsmSetApplicationProperties2 = Module.findExportByName("twinapi.appcore.dll", "PsmSetApplicationProperties2")
Interceptor.attach(PsmSetApplicationProperties2, {onLeave: function (args) {send("PsmSetApplicationProperties2");}});

var PsmSetApplicationProperties3 = Module.findExportByName("twinapi.appcore.dll", "PsmSetApplicationProperties3")
Interceptor.attach(PsmSetApplicationProperties3, {onLeave: function (args) {send("PsmSetApplicationProperties3");}});

var PsmSetApplicationPropertiesByUser = Module.findExportByName("twinapi.appcore.dll", "PsmSetApplicationPropertiesByUser")
Interceptor.attach(PsmSetApplicationPropertiesByUser, {onLeave: function (args) {send("PsmSetApplicationPropertiesByUser");}});

var PsmSetApplicationState = Module.findExportByName("twinapi.appcore.dll", "PsmSetApplicationState")
Interceptor.attach(PsmSetApplicationState, {onLeave: function (args) {send("PsmSetApplicationState");}});

var PsmSetApplicationState2 = Module.findExportByName("twinapi.appcore.dll", "PsmSetApplicationState2")
Interceptor.attach(PsmSetApplicationState2, {onLeave: function (args) {send("PsmSetApplicationState2");}});

var PsmShutdownApplication = Module.findExportByName("twinapi.appcore.dll", "PsmShutdownApplication")
Interceptor.attach(PsmShutdownApplication, {onLeave: function (args) {send("PsmShutdownApplication");}});

var PsmTimerCleanup = Module.findExportByName("twinapi.appcore.dll", "PsmTimerCleanup")
Interceptor.attach(PsmTimerCleanup, {onLeave: function (args) {send("PsmTimerCleanup");}});

var PsmTimerElapsedResourceTimeGet = Module.findExportByName("twinapi.appcore.dll", "PsmTimerElapsedResourceTimeGet")
Interceptor.attach(PsmTimerElapsedResourceTimeGet, {onLeave: function (args) {send("PsmTimerElapsedResourceTimeGet");}});

var PsmTimerInitialize = Module.findExportByName("twinapi.appcore.dll", "PsmTimerInitialize")
Interceptor.attach(PsmTimerInitialize, {onLeave: function (args) {send("PsmTimerInitialize");}});

var PsmTimerRemainingResourceTimeGet = Module.findExportByName("twinapi.appcore.dll", "PsmTimerRemainingResourceTimeGet")
Interceptor.attach(PsmTimerRemainingResourceTimeGet, {onLeave: function (args) {send("PsmTimerRemainingResourceTimeGet");}});

var PsmTimerStart = Module.findExportByName("twinapi.appcore.dll", "PsmTimerStart")
Interceptor.attach(PsmTimerStart, {onLeave: function (args) {send("PsmTimerStart");}});

var PsmUnblockAppStateChangeCompletion = Module.findExportByName("twinapi.appcore.dll", "PsmUnblockAppStateChangeCompletion")
Interceptor.attach(PsmUnblockAppStateChangeCompletion, {onLeave: function (args) {send("PsmUnblockAppStateChangeCompletion");}});

var PsmUnregisterAppStateChangeNotification = Module.findExportByName("twinapi.appcore.dll", "PsmUnregisterAppStateChangeNotification")
Interceptor.attach(PsmUnregisterAppStateChangeNotification, {onLeave: function (args) {send("PsmUnregisterAppStateChangeNotification");}});

var PsmWaitForAppResume = Module.findExportByName("twinapi.appcore.dll", "PsmWaitForAppResume")
Interceptor.attach(PsmWaitForAppResume, {onLeave: function (args) {send("PsmWaitForAppResume");}});

var RegisterAppConstrainedChangeNotification = Module.findExportByName("twinapi.appcore.dll", "RegisterAppConstrainedChangeNotification")
Interceptor.attach(RegisterAppConstrainedChangeNotification, {onLeave: function (args) {send("RegisterAppConstrainedChangeNotification");}});

var RegisterAppStateChangeNotification = Module.findExportByName("twinapi.appcore.dll", "RegisterAppStateChangeNotification")
Interceptor.attach(RegisterAppStateChangeNotification, {onLeave: function (args) {send("RegisterAppStateChangeNotification");}});

var UnregisterAppConstrainedChangeNotification = Module.findExportByName("twinapi.appcore.dll", "UnregisterAppConstrainedChangeNotification")
Interceptor.attach(UnregisterAppConstrainedChangeNotification, {onLeave: function (args) {send("UnregisterAppConstrainedChangeNotification");}});

var UnregisterAppStateChangeNotification = Module.findExportByName("twinapi.appcore.dll", "UnregisterAppStateChangeNotification")
Interceptor.attach(UnregisterAppStateChangeNotification, {onLeave: function (args) {send("UnregisterAppStateChangeNotification");}});

var ValidateSystemShutdown = Module.findExportByName("twinapi.appcore.dll", "ValidateSystemShutdown")
Interceptor.attach(ValidateSystemShutdown, {onLeave: function (args) {send("ValidateSystemShutdown");}});

