var FveAuthElementFromPassPhraseW = Module.findExportByName("fveapibase.dll", "FveAuthElementFromPassPhraseW")
Interceptor.attach(FveAuthElementFromPassPhraseW, {onLeave: function (args) {send("FveAuthElementFromPassPhraseW");}});

var FveAuthElementFromPinW = Module.findExportByName("fveapibase.dll", "FveAuthElementFromPinW")
Interceptor.attach(FveAuthElementFromPinW, {onLeave: function (args) {send("FveAuthElementFromPinW");}});

var FveAuthElementFromRecoveryPasswordW = Module.findExportByName("fveapibase.dll", "FveAuthElementFromRecoveryPasswordW")
Interceptor.attach(FveAuthElementFromRecoveryPasswordW, {onLeave: function (args) {send("FveAuthElementFromRecoveryPasswordW");}});

var FveAuthElementGetKeyFileNameW = Module.findExportByName("fveapibase.dll", "FveAuthElementGetKeyFileNameW")
Interceptor.attach(FveAuthElementGetKeyFileNameW, {onLeave: function (args) {send("FveAuthElementGetKeyFileNameW");}});

var FveAuthElementReadExternalKeyW = Module.findExportByName("fveapibase.dll", "FveAuthElementReadExternalKeyW")
Interceptor.attach(FveAuthElementReadExternalKeyW, {onLeave: function (args) {send("FveAuthElementReadExternalKeyW");}});

var FveAuthElementToRecoveryPasswordW = Module.findExportByName("fveapibase.dll", "FveAuthElementToRecoveryPasswordW")
Interceptor.attach(FveAuthElementToRecoveryPasswordW, {onLeave: function (args) {send("FveAuthElementToRecoveryPasswordW");}});

var FveAuthElementWriteExternalKeyExW = Module.findExportByName("fveapibase.dll", "FveAuthElementWriteExternalKeyExW")
Interceptor.attach(FveAuthElementWriteExternalKeyExW, {onLeave: function (args) {send("FveAuthElementWriteExternalKeyExW");}});

var FveAuthElementWriteExternalKeyW = Module.findExportByName("fveapibase.dll", "FveAuthElementWriteExternalKeyW")
Interceptor.attach(FveAuthElementWriteExternalKeyW, {onLeave: function (args) {send("FveAuthElementWriteExternalKeyW");}});

var FveCanPinExceptionPolicyBeApplied = Module.findExportByName("fveapibase.dll", "FveCanPinExceptionPolicyBeApplied")
Interceptor.attach(FveCanPinExceptionPolicyBeApplied, {onLeave: function (args) {send("FveCanPinExceptionPolicyBeApplied");}});

var FveClearUserFlags = Module.findExportByName("fveapibase.dll", "FveClearUserFlags")
Interceptor.attach(FveClearUserFlags, {onLeave: function (args) {send("FveClearUserFlags");}});

var FveCloseHandle = Module.findExportByName("fveapibase.dll", "FveCloseHandle")
Interceptor.attach(FveCloseHandle, {onLeave: function (args) {send("FveCloseHandle");}});

var FveCloseVolume = Module.findExportByName("fveapibase.dll", "FveCloseVolume")
Interceptor.attach(FveCloseVolume, {onLeave: function (args) {send("FveCloseVolume");}});

var FveCommitChanges = Module.findExportByName("fveapibase.dll", "FveCommitChanges")
Interceptor.attach(FveCommitChanges, {onLeave: function (args) {send("FveCommitChanges");}});

var FveCommitChangesEx = Module.findExportByName("fveapibase.dll", "FveCommitChangesEx")
Interceptor.attach(FveCommitChangesEx, {onLeave: function (args) {send("FveCommitChangesEx");}});

var FveConversionDecrypt = Module.findExportByName("fveapibase.dll", "FveConversionDecrypt")
Interceptor.attach(FveConversionDecrypt, {onLeave: function (args) {send("FveConversionDecrypt");}});

var FveConversionDecryptEx = Module.findExportByName("fveapibase.dll", "FveConversionDecryptEx")
Interceptor.attach(FveConversionDecryptEx, {onLeave: function (args) {send("FveConversionDecryptEx");}});

var FveConversionPause = Module.findExportByName("fveapibase.dll", "FveConversionPause")
Interceptor.attach(FveConversionPause, {onLeave: function (args) {send("FveConversionPause");}});

var FveConversionResume = Module.findExportByName("fveapibase.dll", "FveConversionResume")
Interceptor.attach(FveConversionResume, {onLeave: function (args) {send("FveConversionResume");}});

var FveConversionStop = Module.findExportByName("fveapibase.dll", "FveConversionStop")
Interceptor.attach(FveConversionStop, {onLeave: function (args) {send("FveConversionStop");}});

var FveConversionStopEx = Module.findExportByName("fveapibase.dll", "FveConversionStopEx")
Interceptor.attach(FveConversionStopEx, {onLeave: function (args) {send("FveConversionStopEx");}});

var FveDiscardChanges = Module.findExportByName("fveapibase.dll", "FveDiscardChanges")
Interceptor.attach(FveDiscardChanges, {onLeave: function (args) {send("FveDiscardChanges");}});

var FveEnableRawAccess = Module.findExportByName("fveapibase.dll", "FveEnableRawAccess")
Interceptor.attach(FveEnableRawAccess, {onLeave: function (args) {send("FveEnableRawAccess");}});

var FveEraseDrive = Module.findExportByName("fveapibase.dll", "FveEraseDrive")
Interceptor.attach(FveEraseDrive, {onLeave: function (args) {send("FveEraseDrive");}});

var FveFindFirstVolume = Module.findExportByName("fveapibase.dll", "FveFindFirstVolume")
Interceptor.attach(FveFindFirstVolume, {onLeave: function (args) {send("FveFindFirstVolume");}});

var FveFindNextVolume = Module.findExportByName("fveapibase.dll", "FveFindNextVolume")
Interceptor.attach(FveFindNextVolume, {onLeave: function (args) {send("FveFindNextVolume");}});

var FveGetAllowKeyExport = Module.findExportByName("fveapibase.dll", "FveGetAllowKeyExport")
Interceptor.attach(FveGetAllowKeyExport, {onLeave: function (args) {send("FveGetAllowKeyExport");}});

var FveGetAuthMethodGuids = Module.findExportByName("fveapibase.dll", "FveGetAuthMethodGuids")
Interceptor.attach(FveGetAuthMethodGuids, {onLeave: function (args) {send("FveGetAuthMethodGuids");}});

var FveGetAuthMethodInformation = Module.findExportByName("fveapibase.dll", "FveGetAuthMethodInformation")
Interceptor.attach(FveGetAuthMethodInformation, {onLeave: function (args) {send("FveGetAuthMethodInformation");}});

var FveGetDataSet = Module.findExportByName("fveapibase.dll", "FveGetDataSet")
Interceptor.attach(FveGetDataSet, {onLeave: function (args) {send("FveGetDataSet");}});

var FveGetFipsAllowDisabled = Module.findExportByName("fveapibase.dll", "FveGetFipsAllowDisabled")
Interceptor.attach(FveGetFipsAllowDisabled, {onLeave: function (args) {send("FveGetFipsAllowDisabled");}});

var FveGetFveMethod = Module.findExportByName("fveapibase.dll", "FveGetFveMethod")
Interceptor.attach(FveGetFveMethod, {onLeave: function (args) {send("FveGetFveMethod");}});

var FveGetFveMethodEDrv = Module.findExportByName("fveapibase.dll", "FveGetFveMethodEDrv")
Interceptor.attach(FveGetFveMethodEDrv, {onLeave: function (args) {send("FveGetFveMethodEDrv");}});

var FveGetFveMethodEx = Module.findExportByName("fveapibase.dll", "FveGetFveMethodEx")
Interceptor.attach(FveGetFveMethodEx, {onLeave: function (args) {send("FveGetFveMethodEx");}});

var FveGetIdentity = Module.findExportByName("fveapibase.dll", "FveGetIdentity")
Interceptor.attach(FveGetIdentity, {onLeave: function (args) {send("FveGetIdentity");}});

var FveGetKeyPackage = Module.findExportByName("fveapibase.dll", "FveGetKeyPackage")
Interceptor.attach(FveGetKeyPackage, {onLeave: function (args) {send("FveGetKeyPackage");}});

var FveGetStatus = Module.findExportByName("fveapibase.dll", "FveGetStatus")
Interceptor.attach(FveGetStatus, {onLeave: function (args) {send("FveGetStatus");}});

var FveGetStatusW = Module.findExportByName("fveapibase.dll", "FveGetStatusW")
Interceptor.attach(FveGetStatusW, {onLeave: function (args) {send("FveGetStatusW");}});

var FveGetUserFlags = Module.findExportByName("fveapibase.dll", "FveGetUserFlags")
Interceptor.attach(FveGetUserFlags, {onLeave: function (args) {send("FveGetUserFlags");}});

var FveGetVolumeNameW = Module.findExportByName("fveapibase.dll", "FveGetVolumeNameW")
Interceptor.attach(FveGetVolumeNameW, {onLeave: function (args) {send("FveGetVolumeNameW");}});

var FveIsHardwareReadyForConversion = Module.findExportByName("fveapibase.dll", "FveIsHardwareReadyForConversion")
Interceptor.attach(FveIsHardwareReadyForConversion, {onLeave: function (args) {send("FveIsHardwareReadyForConversion");}});

var FveIsRecoveryPasswordGroupValidW = Module.findExportByName("fveapibase.dll", "FveIsRecoveryPasswordGroupValidW")
Interceptor.attach(FveIsRecoveryPasswordGroupValidW, {onLeave: function (args) {send("FveIsRecoveryPasswordGroupValidW");}});

var FveIsRecoveryPasswordValidW = Module.findExportByName("fveapibase.dll", "FveIsRecoveryPasswordValidW")
Interceptor.attach(FveIsRecoveryPasswordValidW, {onLeave: function (args) {send("FveIsRecoveryPasswordValidW");}});

var FveIsVolumeEncryptable = Module.findExportByName("fveapibase.dll", "FveIsVolumeEncryptable")
Interceptor.attach(FveIsVolumeEncryptable, {onLeave: function (args) {send("FveIsVolumeEncryptable");}});

var FveLockVolume = Module.findExportByName("fveapibase.dll", "FveLockVolume")
Interceptor.attach(FveLockVolume, {onLeave: function (args) {send("FveLockVolume");}});

var FveNotifyVolumeAfterFormat = Module.findExportByName("fveapibase.dll", "FveNotifyVolumeAfterFormat")
Interceptor.attach(FveNotifyVolumeAfterFormat, {onLeave: function (args) {send("FveNotifyVolumeAfterFormat");}});

var FveOpenVolumeByHandle = Module.findExportByName("fveapibase.dll", "FveOpenVolumeByHandle")
Interceptor.attach(FveOpenVolumeByHandle, {onLeave: function (args) {send("FveOpenVolumeByHandle");}});

var FveOpenVolumeExW = Module.findExportByName("fveapibase.dll", "FveOpenVolumeExW")
Interceptor.attach(FveOpenVolumeExW, {onLeave: function (args) {send("FveOpenVolumeExW");}});

var FveOpenVolumeW = Module.findExportByName("fveapibase.dll", "FveOpenVolumeW")
Interceptor.attach(FveOpenVolumeW, {onLeave: function (args) {send("FveOpenVolumeW");}});

var FveQuery = Module.findExportByName("fveapibase.dll", "FveQuery")
Interceptor.attach(FveQuery, {onLeave: function (args) {send("FveQuery");}});

var FveRevertVolume = Module.findExportByName("fveapibase.dll", "FveRevertVolume")
Interceptor.attach(FveRevertVolume, {onLeave: function (args) {send("FveRevertVolume");}});

var FveSelectBestRecoveryPasswordByBackupInformation = Module.findExportByName("fveapibase.dll", "FveSelectBestRecoveryPasswordByBackupInformation")
Interceptor.attach(FveSelectBestRecoveryPasswordByBackupInformation, {onLeave: function (args) {send("FveSelectBestRecoveryPasswordByBackupInformation");}});

var FveSetAllowKeyExport = Module.findExportByName("fveapibase.dll", "FveSetAllowKeyExport")
Interceptor.attach(FveSetAllowKeyExport, {onLeave: function (args) {send("FveSetAllowKeyExport");}});

var FveSetFipsAllowDisabled = Module.findExportByName("fveapibase.dll", "FveSetFipsAllowDisabled")
Interceptor.attach(FveSetFipsAllowDisabled, {onLeave: function (args) {send("FveSetFipsAllowDisabled");}});

var FveSetFveMethod = Module.findExportByName("fveapibase.dll", "FveSetFveMethod")
Interceptor.attach(FveSetFveMethod, {onLeave: function (args) {send("FveSetFveMethod");}});

var FveSetRecoveryPasswordBackupInformation = Module.findExportByName("fveapibase.dll", "FveSetRecoveryPasswordBackupInformation")
Interceptor.attach(FveSetRecoveryPasswordBackupInformation, {onLeave: function (args) {send("FveSetRecoveryPasswordBackupInformation");}});

var FveSetUserFlags = Module.findExportByName("fveapibase.dll", "FveSetUserFlags")
Interceptor.attach(FveSetUserFlags, {onLeave: function (args) {send("FveSetUserFlags");}});

var FveUpgradeVolume = Module.findExportByName("fveapibase.dll", "FveUpgradeVolume")
Interceptor.attach(FveUpgradeVolume, {onLeave: function (args) {send("FveUpgradeVolume");}});

var InternalFveIsVolumeEncrypted = Module.findExportByName("fveapibase.dll", "InternalFveIsVolumeEncrypted")
Interceptor.attach(InternalFveIsVolumeEncrypted, {onLeave: function (args) {send("InternalFveIsVolumeEncrypted");}});

