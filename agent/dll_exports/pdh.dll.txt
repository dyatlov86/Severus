var PdhAddCounterA = Module.findExportByName("pdh.dll", "PdhAddCounterA")
Interceptor.attach(PdhAddCounterA, {onLeave: function (args) {send("PdhAddCounterA");}});

var PdhAddCounterW = Module.findExportByName("pdh.dll", "PdhAddCounterW")
Interceptor.attach(PdhAddCounterW, {onLeave: function (args) {send("PdhAddCounterW");}});

var PdhAddEnglishCounterA = Module.findExportByName("pdh.dll", "PdhAddEnglishCounterA")
Interceptor.attach(PdhAddEnglishCounterA, {onLeave: function (args) {send("PdhAddEnglishCounterA");}});

var PdhAddEnglishCounterW = Module.findExportByName("pdh.dll", "PdhAddEnglishCounterW")
Interceptor.attach(PdhAddEnglishCounterW, {onLeave: function (args) {send("PdhAddEnglishCounterW");}});

var PdhAddRelogCounter = Module.findExportByName("pdh.dll", "PdhAddRelogCounter")
Interceptor.attach(PdhAddRelogCounter, {onLeave: function (args) {send("PdhAddRelogCounter");}});

var PdhBindInputDataSourceA = Module.findExportByName("pdh.dll", "PdhBindInputDataSourceA")
Interceptor.attach(PdhBindInputDataSourceA, {onLeave: function (args) {send("PdhBindInputDataSourceA");}});

var PdhBindInputDataSourceW = Module.findExportByName("pdh.dll", "PdhBindInputDataSourceW")
Interceptor.attach(PdhBindInputDataSourceW, {onLeave: function (args) {send("PdhBindInputDataSourceW");}});

var PdhBrowseCountersA = Module.findExportByName("pdh.dll", "PdhBrowseCountersA")
Interceptor.attach(PdhBrowseCountersA, {onLeave: function (args) {send("PdhBrowseCountersA");}});

var PdhBrowseCountersHA = Module.findExportByName("pdh.dll", "PdhBrowseCountersHA")
Interceptor.attach(PdhBrowseCountersHA, {onLeave: function (args) {send("PdhBrowseCountersHA");}});

var PdhBrowseCountersHW = Module.findExportByName("pdh.dll", "PdhBrowseCountersHW")
Interceptor.attach(PdhBrowseCountersHW, {onLeave: function (args) {send("PdhBrowseCountersHW");}});

var PdhBrowseCountersW = Module.findExportByName("pdh.dll", "PdhBrowseCountersW")
Interceptor.attach(PdhBrowseCountersW, {onLeave: function (args) {send("PdhBrowseCountersW");}});

var PdhCalculateCounterFromRawValue = Module.findExportByName("pdh.dll", "PdhCalculateCounterFromRawValue")
Interceptor.attach(PdhCalculateCounterFromRawValue, {onLeave: function (args) {send("PdhCalculateCounterFromRawValue");}});

var PdhCloseLog = Module.findExportByName("pdh.dll", "PdhCloseLog")
Interceptor.attach(PdhCloseLog, {onLeave: function (args) {send("PdhCloseLog");}});

var PdhCloseQuery = Module.findExportByName("pdh.dll", "PdhCloseQuery")
Interceptor.attach(PdhCloseQuery, {onLeave: function (args) {send("PdhCloseQuery");}});

var PdhCollectQueryData = Module.findExportByName("pdh.dll", "PdhCollectQueryData")
Interceptor.attach(PdhCollectQueryData, {onLeave: function (args) {send("PdhCollectQueryData");}});

var PdhCollectQueryDataEx = Module.findExportByName("pdh.dll", "PdhCollectQueryDataEx")
Interceptor.attach(PdhCollectQueryDataEx, {onLeave: function (args) {send("PdhCollectQueryDataEx");}});

var PdhCollectQueryDataWithTime = Module.findExportByName("pdh.dll", "PdhCollectQueryDataWithTime")
Interceptor.attach(PdhCollectQueryDataWithTime, {onLeave: function (args) {send("PdhCollectQueryDataWithTime");}});

var PdhComputeCounterStatistics = Module.findExportByName("pdh.dll", "PdhComputeCounterStatistics")
Interceptor.attach(PdhComputeCounterStatistics, {onLeave: function (args) {send("PdhComputeCounterStatistics");}});

var PdhConnectMachineA = Module.findExportByName("pdh.dll", "PdhConnectMachineA")
Interceptor.attach(PdhConnectMachineA, {onLeave: function (args) {send("PdhConnectMachineA");}});

var PdhConnectMachineW = Module.findExportByName("pdh.dll", "PdhConnectMachineW")
Interceptor.attach(PdhConnectMachineW, {onLeave: function (args) {send("PdhConnectMachineW");}});

var PdhCreateSQLTablesA = Module.findExportByName("pdh.dll", "PdhCreateSQLTablesA")
Interceptor.attach(PdhCreateSQLTablesA, {onLeave: function (args) {send("PdhCreateSQLTablesA");}});

var PdhCreateSQLTablesW = Module.findExportByName("pdh.dll", "PdhCreateSQLTablesW")
Interceptor.attach(PdhCreateSQLTablesW, {onLeave: function (args) {send("PdhCreateSQLTablesW");}});

var PdhEnumLogSetNamesA = Module.findExportByName("pdh.dll", "PdhEnumLogSetNamesA")
Interceptor.attach(PdhEnumLogSetNamesA, {onLeave: function (args) {send("PdhEnumLogSetNamesA");}});

var PdhEnumLogSetNamesW = Module.findExportByName("pdh.dll", "PdhEnumLogSetNamesW")
Interceptor.attach(PdhEnumLogSetNamesW, {onLeave: function (args) {send("PdhEnumLogSetNamesW");}});

var PdhEnumMachinesA = Module.findExportByName("pdh.dll", "PdhEnumMachinesA")
Interceptor.attach(PdhEnumMachinesA, {onLeave: function (args) {send("PdhEnumMachinesA");}});

var PdhEnumMachinesHA = Module.findExportByName("pdh.dll", "PdhEnumMachinesHA")
Interceptor.attach(PdhEnumMachinesHA, {onLeave: function (args) {send("PdhEnumMachinesHA");}});

var PdhEnumMachinesHW = Module.findExportByName("pdh.dll", "PdhEnumMachinesHW")
Interceptor.attach(PdhEnumMachinesHW, {onLeave: function (args) {send("PdhEnumMachinesHW");}});

var PdhEnumMachinesW = Module.findExportByName("pdh.dll", "PdhEnumMachinesW")
Interceptor.attach(PdhEnumMachinesW, {onLeave: function (args) {send("PdhEnumMachinesW");}});

var PdhEnumObjectItemsA = Module.findExportByName("pdh.dll", "PdhEnumObjectItemsA")
Interceptor.attach(PdhEnumObjectItemsA, {onLeave: function (args) {send("PdhEnumObjectItemsA");}});

var PdhEnumObjectItemsHA = Module.findExportByName("pdh.dll", "PdhEnumObjectItemsHA")
Interceptor.attach(PdhEnumObjectItemsHA, {onLeave: function (args) {send("PdhEnumObjectItemsHA");}});

var PdhEnumObjectItemsHW = Module.findExportByName("pdh.dll", "PdhEnumObjectItemsHW")
Interceptor.attach(PdhEnumObjectItemsHW, {onLeave: function (args) {send("PdhEnumObjectItemsHW");}});

var PdhEnumObjectItemsW = Module.findExportByName("pdh.dll", "PdhEnumObjectItemsW")
Interceptor.attach(PdhEnumObjectItemsW, {onLeave: function (args) {send("PdhEnumObjectItemsW");}});

var PdhEnumObjectsA = Module.findExportByName("pdh.dll", "PdhEnumObjectsA")
Interceptor.attach(PdhEnumObjectsA, {onLeave: function (args) {send("PdhEnumObjectsA");}});

var PdhEnumObjectsHA = Module.findExportByName("pdh.dll", "PdhEnumObjectsHA")
Interceptor.attach(PdhEnumObjectsHA, {onLeave: function (args) {send("PdhEnumObjectsHA");}});

var PdhEnumObjectsHW = Module.findExportByName("pdh.dll", "PdhEnumObjectsHW")
Interceptor.attach(PdhEnumObjectsHW, {onLeave: function (args) {send("PdhEnumObjectsHW");}});

var PdhEnumObjectsW = Module.findExportByName("pdh.dll", "PdhEnumObjectsW")
Interceptor.attach(PdhEnumObjectsW, {onLeave: function (args) {send("PdhEnumObjectsW");}});

var PdhExpandCounterPathA = Module.findExportByName("pdh.dll", "PdhExpandCounterPathA")
Interceptor.attach(PdhExpandCounterPathA, {onLeave: function (args) {send("PdhExpandCounterPathA");}});

var PdhExpandCounterPathW = Module.findExportByName("pdh.dll", "PdhExpandCounterPathW")
Interceptor.attach(PdhExpandCounterPathW, {onLeave: function (args) {send("PdhExpandCounterPathW");}});

var PdhExpandWildCardPathA = Module.findExportByName("pdh.dll", "PdhExpandWildCardPathA")
Interceptor.attach(PdhExpandWildCardPathA, {onLeave: function (args) {send("PdhExpandWildCardPathA");}});

var PdhExpandWildCardPathHA = Module.findExportByName("pdh.dll", "PdhExpandWildCardPathHA")
Interceptor.attach(PdhExpandWildCardPathHA, {onLeave: function (args) {send("PdhExpandWildCardPathHA");}});

var PdhExpandWildCardPathHW = Module.findExportByName("pdh.dll", "PdhExpandWildCardPathHW")
Interceptor.attach(PdhExpandWildCardPathHW, {onLeave: function (args) {send("PdhExpandWildCardPathHW");}});

var PdhExpandWildCardPathW = Module.findExportByName("pdh.dll", "PdhExpandWildCardPathW")
Interceptor.attach(PdhExpandWildCardPathW, {onLeave: function (args) {send("PdhExpandWildCardPathW");}});

var PdhFormatFromRawValue = Module.findExportByName("pdh.dll", "PdhFormatFromRawValue")
Interceptor.attach(PdhFormatFromRawValue, {onLeave: function (args) {send("PdhFormatFromRawValue");}});

var PdhGetCounterInfoA = Module.findExportByName("pdh.dll", "PdhGetCounterInfoA")
Interceptor.attach(PdhGetCounterInfoA, {onLeave: function (args) {send("PdhGetCounterInfoA");}});

var PdhGetCounterInfoW = Module.findExportByName("pdh.dll", "PdhGetCounterInfoW")
Interceptor.attach(PdhGetCounterInfoW, {onLeave: function (args) {send("PdhGetCounterInfoW");}});

var PdhGetCounterTimeBase = Module.findExportByName("pdh.dll", "PdhGetCounterTimeBase")
Interceptor.attach(PdhGetCounterTimeBase, {onLeave: function (args) {send("PdhGetCounterTimeBase");}});

var PdhGetDataSourceTimeRangeA = Module.findExportByName("pdh.dll", "PdhGetDataSourceTimeRangeA")
Interceptor.attach(PdhGetDataSourceTimeRangeA, {onLeave: function (args) {send("PdhGetDataSourceTimeRangeA");}});

var PdhGetDataSourceTimeRangeH = Module.findExportByName("pdh.dll", "PdhGetDataSourceTimeRangeH")
Interceptor.attach(PdhGetDataSourceTimeRangeH, {onLeave: function (args) {send("PdhGetDataSourceTimeRangeH");}});

var PdhGetDataSourceTimeRangeW = Module.findExportByName("pdh.dll", "PdhGetDataSourceTimeRangeW")
Interceptor.attach(PdhGetDataSourceTimeRangeW, {onLeave: function (args) {send("PdhGetDataSourceTimeRangeW");}});

var PdhGetDefaultPerfCounterA = Module.findExportByName("pdh.dll", "PdhGetDefaultPerfCounterA")
Interceptor.attach(PdhGetDefaultPerfCounterA, {onLeave: function (args) {send("PdhGetDefaultPerfCounterA");}});

var PdhGetDefaultPerfCounterHA = Module.findExportByName("pdh.dll", "PdhGetDefaultPerfCounterHA")
Interceptor.attach(PdhGetDefaultPerfCounterHA, {onLeave: function (args) {send("PdhGetDefaultPerfCounterHA");}});

var PdhGetDefaultPerfCounterHW = Module.findExportByName("pdh.dll", "PdhGetDefaultPerfCounterHW")
Interceptor.attach(PdhGetDefaultPerfCounterHW, {onLeave: function (args) {send("PdhGetDefaultPerfCounterHW");}});

var PdhGetDefaultPerfCounterW = Module.findExportByName("pdh.dll", "PdhGetDefaultPerfCounterW")
Interceptor.attach(PdhGetDefaultPerfCounterW, {onLeave: function (args) {send("PdhGetDefaultPerfCounterW");}});

var PdhGetDefaultPerfObjectA = Module.findExportByName("pdh.dll", "PdhGetDefaultPerfObjectA")
Interceptor.attach(PdhGetDefaultPerfObjectA, {onLeave: function (args) {send("PdhGetDefaultPerfObjectA");}});

var PdhGetDefaultPerfObjectHA = Module.findExportByName("pdh.dll", "PdhGetDefaultPerfObjectHA")
Interceptor.attach(PdhGetDefaultPerfObjectHA, {onLeave: function (args) {send("PdhGetDefaultPerfObjectHA");}});

var PdhGetDefaultPerfObjectHW = Module.findExportByName("pdh.dll", "PdhGetDefaultPerfObjectHW")
Interceptor.attach(PdhGetDefaultPerfObjectHW, {onLeave: function (args) {send("PdhGetDefaultPerfObjectHW");}});

var PdhGetDefaultPerfObjectW = Module.findExportByName("pdh.dll", "PdhGetDefaultPerfObjectW")
Interceptor.attach(PdhGetDefaultPerfObjectW, {onLeave: function (args) {send("PdhGetDefaultPerfObjectW");}});

var PdhGetDllVersion = Module.findExportByName("pdh.dll", "PdhGetDllVersion")
Interceptor.attach(PdhGetDllVersion, {onLeave: function (args) {send("PdhGetDllVersion");}});

var PdhGetExplainText = Module.findExportByName("pdh.dll", "PdhGetExplainText")
Interceptor.attach(PdhGetExplainText, {onLeave: function (args) {send("PdhGetExplainText");}});

var PdhGetFormattedCounterArrayA = Module.findExportByName("pdh.dll", "PdhGetFormattedCounterArrayA")
Interceptor.attach(PdhGetFormattedCounterArrayA, {onLeave: function (args) {send("PdhGetFormattedCounterArrayA");}});

var PdhGetFormattedCounterArrayW = Module.findExportByName("pdh.dll", "PdhGetFormattedCounterArrayW")
Interceptor.attach(PdhGetFormattedCounterArrayW, {onLeave: function (args) {send("PdhGetFormattedCounterArrayW");}});

var PdhGetFormattedCounterValue = Module.findExportByName("pdh.dll", "PdhGetFormattedCounterValue")
Interceptor.attach(PdhGetFormattedCounterValue, {onLeave: function (args) {send("PdhGetFormattedCounterValue");}});

var PdhGetLogFileSize = Module.findExportByName("pdh.dll", "PdhGetLogFileSize")
Interceptor.attach(PdhGetLogFileSize, {onLeave: function (args) {send("PdhGetLogFileSize");}});

var PdhGetLogFileTypeW = Module.findExportByName("pdh.dll", "PdhGetLogFileTypeW")
Interceptor.attach(PdhGetLogFileTypeW, {onLeave: function (args) {send("PdhGetLogFileTypeW");}});

var PdhGetLogSetGUID = Module.findExportByName("pdh.dll", "PdhGetLogSetGUID")
Interceptor.attach(PdhGetLogSetGUID, {onLeave: function (args) {send("PdhGetLogSetGUID");}});

var PdhGetRawCounterArrayA = Module.findExportByName("pdh.dll", "PdhGetRawCounterArrayA")
Interceptor.attach(PdhGetRawCounterArrayA, {onLeave: function (args) {send("PdhGetRawCounterArrayA");}});

var PdhGetRawCounterArrayW = Module.findExportByName("pdh.dll", "PdhGetRawCounterArrayW")
Interceptor.attach(PdhGetRawCounterArrayW, {onLeave: function (args) {send("PdhGetRawCounterArrayW");}});

var PdhGetRawCounterValue = Module.findExportByName("pdh.dll", "PdhGetRawCounterValue")
Interceptor.attach(PdhGetRawCounterValue, {onLeave: function (args) {send("PdhGetRawCounterValue");}});

var PdhIsRealTimeQuery = Module.findExportByName("pdh.dll", "PdhIsRealTimeQuery")
Interceptor.attach(PdhIsRealTimeQuery, {onLeave: function (args) {send("PdhIsRealTimeQuery");}});

var PdhLookupPerfIndexByNameA = Module.findExportByName("pdh.dll", "PdhLookupPerfIndexByNameA")
Interceptor.attach(PdhLookupPerfIndexByNameA, {onLeave: function (args) {send("PdhLookupPerfIndexByNameA");}});

var PdhLookupPerfIndexByNameW = Module.findExportByName("pdh.dll", "PdhLookupPerfIndexByNameW")
Interceptor.attach(PdhLookupPerfIndexByNameW, {onLeave: function (args) {send("PdhLookupPerfIndexByNameW");}});

var PdhLookupPerfNameByIndexA = Module.findExportByName("pdh.dll", "PdhLookupPerfNameByIndexA")
Interceptor.attach(PdhLookupPerfNameByIndexA, {onLeave: function (args) {send("PdhLookupPerfNameByIndexA");}});

var PdhLookupPerfNameByIndexW = Module.findExportByName("pdh.dll", "PdhLookupPerfNameByIndexW")
Interceptor.attach(PdhLookupPerfNameByIndexW, {onLeave: function (args) {send("PdhLookupPerfNameByIndexW");}});

var PdhMakeCounterPathA = Module.findExportByName("pdh.dll", "PdhMakeCounterPathA")
Interceptor.attach(PdhMakeCounterPathA, {onLeave: function (args) {send("PdhMakeCounterPathA");}});

var PdhMakeCounterPathW = Module.findExportByName("pdh.dll", "PdhMakeCounterPathW")
Interceptor.attach(PdhMakeCounterPathW, {onLeave: function (args) {send("PdhMakeCounterPathW");}});

var PdhOpenLogA = Module.findExportByName("pdh.dll", "PdhOpenLogA")
Interceptor.attach(PdhOpenLogA, {onLeave: function (args) {send("PdhOpenLogA");}});

var PdhOpenLogW = Module.findExportByName("pdh.dll", "PdhOpenLogW")
Interceptor.attach(PdhOpenLogW, {onLeave: function (args) {send("PdhOpenLogW");}});

var PdhOpenQuery = Module.findExportByName("pdh.dll", "PdhOpenQuery")
Interceptor.attach(PdhOpenQuery, {onLeave: function (args) {send("PdhOpenQuery");}});

var PdhOpenQueryA = Module.findExportByName("pdh.dll", "PdhOpenQueryA")
Interceptor.attach(PdhOpenQueryA, {onLeave: function (args) {send("PdhOpenQueryA");}});

var PdhOpenQueryH = Module.findExportByName("pdh.dll", "PdhOpenQueryH")
Interceptor.attach(PdhOpenQueryH, {onLeave: function (args) {send("PdhOpenQueryH");}});

var PdhOpenQueryW = Module.findExportByName("pdh.dll", "PdhOpenQueryW")
Interceptor.attach(PdhOpenQueryW, {onLeave: function (args) {send("PdhOpenQueryW");}});

var PdhParseCounterPathA = Module.findExportByName("pdh.dll", "PdhParseCounterPathA")
Interceptor.attach(PdhParseCounterPathA, {onLeave: function (args) {send("PdhParseCounterPathA");}});

var PdhParseCounterPathW = Module.findExportByName("pdh.dll", "PdhParseCounterPathW")
Interceptor.attach(PdhParseCounterPathW, {onLeave: function (args) {send("PdhParseCounterPathW");}});

var PdhParseInstanceNameA = Module.findExportByName("pdh.dll", "PdhParseInstanceNameA")
Interceptor.attach(PdhParseInstanceNameA, {onLeave: function (args) {send("PdhParseInstanceNameA");}});

var PdhParseInstanceNameW = Module.findExportByName("pdh.dll", "PdhParseInstanceNameW")
Interceptor.attach(PdhParseInstanceNameW, {onLeave: function (args) {send("PdhParseInstanceNameW");}});

var PdhReadRawLogRecord = Module.findExportByName("pdh.dll", "PdhReadRawLogRecord")
Interceptor.attach(PdhReadRawLogRecord, {onLeave: function (args) {send("PdhReadRawLogRecord");}});

var PdhRelogW = Module.findExportByName("pdh.dll", "PdhRelogW")
Interceptor.attach(PdhRelogW, {onLeave: function (args) {send("PdhRelogW");}});

var PdhRemoveCounter = Module.findExportByName("pdh.dll", "PdhRemoveCounter")
Interceptor.attach(PdhRemoveCounter, {onLeave: function (args) {send("PdhRemoveCounter");}});

var PdhResetRelogCounterValues = Module.findExportByName("pdh.dll", "PdhResetRelogCounterValues")
Interceptor.attach(PdhResetRelogCounterValues, {onLeave: function (args) {send("PdhResetRelogCounterValues");}});

var PdhSelectDataSourceA = Module.findExportByName("pdh.dll", "PdhSelectDataSourceA")
Interceptor.attach(PdhSelectDataSourceA, {onLeave: function (args) {send("PdhSelectDataSourceA");}});

var PdhSelectDataSourceW = Module.findExportByName("pdh.dll", "PdhSelectDataSourceW")
Interceptor.attach(PdhSelectDataSourceW, {onLeave: function (args) {send("PdhSelectDataSourceW");}});

var PdhSetCounterScaleFactor = Module.findExportByName("pdh.dll", "PdhSetCounterScaleFactor")
Interceptor.attach(PdhSetCounterScaleFactor, {onLeave: function (args) {send("PdhSetCounterScaleFactor");}});

var PdhSetCounterValue = Module.findExportByName("pdh.dll", "PdhSetCounterValue")
Interceptor.attach(PdhSetCounterValue, {onLeave: function (args) {send("PdhSetCounterValue");}});

var PdhSetDefaultRealTimeDataSource = Module.findExportByName("pdh.dll", "PdhSetDefaultRealTimeDataSource")
Interceptor.attach(PdhSetDefaultRealTimeDataSource, {onLeave: function (args) {send("PdhSetDefaultRealTimeDataSource");}});

var PdhSetLogSetRunID = Module.findExportByName("pdh.dll", "PdhSetLogSetRunID")
Interceptor.attach(PdhSetLogSetRunID, {onLeave: function (args) {send("PdhSetLogSetRunID");}});

var PdhSetQueryTimeRange = Module.findExportByName("pdh.dll", "PdhSetQueryTimeRange")
Interceptor.attach(PdhSetQueryTimeRange, {onLeave: function (args) {send("PdhSetQueryTimeRange");}});

var PdhTranslate009CounterW = Module.findExportByName("pdh.dll", "PdhTranslate009CounterW")
Interceptor.attach(PdhTranslate009CounterW, {onLeave: function (args) {send("PdhTranslate009CounterW");}});

var PdhTranslateLocaleCounterW = Module.findExportByName("pdh.dll", "PdhTranslateLocaleCounterW")
Interceptor.attach(PdhTranslateLocaleCounterW, {onLeave: function (args) {send("PdhTranslateLocaleCounterW");}});

var PdhUpdateLogA = Module.findExportByName("pdh.dll", "PdhUpdateLogA")
Interceptor.attach(PdhUpdateLogA, {onLeave: function (args) {send("PdhUpdateLogA");}});

var PdhUpdateLogFileCatalog = Module.findExportByName("pdh.dll", "PdhUpdateLogFileCatalog")
Interceptor.attach(PdhUpdateLogFileCatalog, {onLeave: function (args) {send("PdhUpdateLogFileCatalog");}});

var PdhUpdateLogW = Module.findExportByName("pdh.dll", "PdhUpdateLogW")
Interceptor.attach(PdhUpdateLogW, {onLeave: function (args) {send("PdhUpdateLogW");}});

var PdhValidatePathA = Module.findExportByName("pdh.dll", "PdhValidatePathA")
Interceptor.attach(PdhValidatePathA, {onLeave: function (args) {send("PdhValidatePathA");}});

var PdhValidatePathExA = Module.findExportByName("pdh.dll", "PdhValidatePathExA")
Interceptor.attach(PdhValidatePathExA, {onLeave: function (args) {send("PdhValidatePathExA");}});

var PdhValidatePathExW = Module.findExportByName("pdh.dll", "PdhValidatePathExW")
Interceptor.attach(PdhValidatePathExW, {onLeave: function (args) {send("PdhValidatePathExW");}});

var PdhValidatePathW = Module.findExportByName("pdh.dll", "PdhValidatePathW")
Interceptor.attach(PdhValidatePathW, {onLeave: function (args) {send("PdhValidatePathW");}});

var PdhVbAddCounter = Module.findExportByName("pdh.dll", "PdhVbAddCounter")
Interceptor.attach(PdhVbAddCounter, {onLeave: function (args) {send("PdhVbAddCounter");}});

var PdhVbCreateCounterPathList = Module.findExportByName("pdh.dll", "PdhVbCreateCounterPathList")
Interceptor.attach(PdhVbCreateCounterPathList, {onLeave: function (args) {send("PdhVbCreateCounterPathList");}});

var PdhVbGetCounterPathElements = Module.findExportByName("pdh.dll", "PdhVbGetCounterPathElements")
Interceptor.attach(PdhVbGetCounterPathElements, {onLeave: function (args) {send("PdhVbGetCounterPathElements");}});

var PdhVbGetCounterPathFromList = Module.findExportByName("pdh.dll", "PdhVbGetCounterPathFromList")
Interceptor.attach(PdhVbGetCounterPathFromList, {onLeave: function (args) {send("PdhVbGetCounterPathFromList");}});

var PdhVbGetDoubleCounterValue = Module.findExportByName("pdh.dll", "PdhVbGetDoubleCounterValue")
Interceptor.attach(PdhVbGetDoubleCounterValue, {onLeave: function (args) {send("PdhVbGetDoubleCounterValue");}});

var PdhVbGetLogFileSize = Module.findExportByName("pdh.dll", "PdhVbGetLogFileSize")
Interceptor.attach(PdhVbGetLogFileSize, {onLeave: function (args) {send("PdhVbGetLogFileSize");}});

var PdhVbGetOneCounterPath = Module.findExportByName("pdh.dll", "PdhVbGetOneCounterPath")
Interceptor.attach(PdhVbGetOneCounterPath, {onLeave: function (args) {send("PdhVbGetOneCounterPath");}});

var PdhVbIsGoodStatus = Module.findExportByName("pdh.dll", "PdhVbIsGoodStatus")
Interceptor.attach(PdhVbIsGoodStatus, {onLeave: function (args) {send("PdhVbIsGoodStatus");}});

var PdhVbOpenLog = Module.findExportByName("pdh.dll", "PdhVbOpenLog")
Interceptor.attach(PdhVbOpenLog, {onLeave: function (args) {send("PdhVbOpenLog");}});

var PdhVbOpenQuery = Module.findExportByName("pdh.dll", "PdhVbOpenQuery")
Interceptor.attach(PdhVbOpenQuery, {onLeave: function (args) {send("PdhVbOpenQuery");}});

var PdhVbUpdateLog = Module.findExportByName("pdh.dll", "PdhVbUpdateLog")
Interceptor.attach(PdhVbUpdateLog, {onLeave: function (args) {send("PdhVbUpdateLog");}});

var PdhVerifySQLDBA = Module.findExportByName("pdh.dll", "PdhVerifySQLDBA")
Interceptor.attach(PdhVerifySQLDBA, {onLeave: function (args) {send("PdhVerifySQLDBA");}});

var PdhVerifySQLDBW = Module.findExportByName("pdh.dll", "PdhVerifySQLDBW")
Interceptor.attach(PdhVerifySQLDBW, {onLeave: function (args) {send("PdhVerifySQLDBW");}});

var PdhWriteRelogSample = Module.findExportByName("pdh.dll", "PdhWriteRelogSample")
Interceptor.attach(PdhWriteRelogSample, {onLeave: function (args) {send("PdhWriteRelogSample");}});

