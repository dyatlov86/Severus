var LxUtilBufferRead = Module.findExportByName("lxutil.dll", "LxUtilBufferRead")
Interceptor.attach(LxUtilBufferRead, {onLeave: function (args) {send("LxUtilBufferRead");}});

var LxUtilBufferWrite = Module.findExportByName("lxutil.dll", "LxUtilBufferWrite")
Interceptor.attach(LxUtilBufferWrite, {onLeave: function (args) {send("LxUtilBufferWrite");}});

var LxUtilCheckTraversePrivilege = Module.findExportByName("lxutil.dll", "LxUtilCheckTraversePrivilege")
Interceptor.attach(LxUtilCheckTraversePrivilege, {onLeave: function (args) {send("LxUtilCheckTraversePrivilege");}});

var LxUtilDirectoryEnumeratorCleanup = Module.findExportByName("lxutil.dll", "LxUtilDirectoryEnumeratorCleanup")
Interceptor.attach(LxUtilDirectoryEnumeratorCleanup, {onLeave: function (args) {send("LxUtilDirectoryEnumeratorCleanup");}});

var LxUtilDirectoryEnumeratorCurrent = Module.findExportByName("lxutil.dll", "LxUtilDirectoryEnumeratorCurrent")
Interceptor.attach(LxUtilDirectoryEnumeratorCurrent, {onLeave: function (args) {send("LxUtilDirectoryEnumeratorCurrent");}});

var LxUtilDirectoryEnumeratorInitialize = Module.findExportByName("lxutil.dll", "LxUtilDirectoryEnumeratorInitialize")
Interceptor.attach(LxUtilDirectoryEnumeratorInitialize, {onLeave: function (args) {send("LxUtilDirectoryEnumeratorInitialize");}});

var LxUtilDirectoryEnumeratorNext = Module.findExportByName("lxutil.dll", "LxUtilDirectoryEnumeratorNext")
Interceptor.attach(LxUtilDirectoryEnumeratorNext, {onLeave: function (args) {send("LxUtilDirectoryEnumeratorNext");}});

var LxUtilFsAllocationSizeToBlockCount = Module.findExportByName("lxutil.dll", "LxUtilFsAllocationSizeToBlockCount")
Interceptor.attach(LxUtilFsAllocationSizeToBlockCount, {onLeave: function (args) {send("LxUtilFsAllocationSizeToBlockCount");}});

var LxUtilFsCheckSecurity = Module.findExportByName("lxutil.dll", "LxUtilFsCheckSecurity")
Interceptor.attach(LxUtilFsCheckSecurity, {onLeave: function (args) {send("LxUtilFsCheckSecurity");}});

var LxUtilFsChmod = Module.findExportByName("lxutil.dll", "LxUtilFsChmod")
Interceptor.attach(LxUtilFsChmod, {onLeave: function (args) {send("LxUtilFsChmod");}});

var LxUtilFsConvertMode = Module.findExportByName("lxutil.dll", "LxUtilFsConvertMode")
Interceptor.attach(LxUtilFsConvertMode, {onLeave: function (args) {send("LxUtilFsConvertMode");}});

var LxUtilFsCreateLink = Module.findExportByName("lxutil.dll", "LxUtilFsCreateLink")
Interceptor.attach(LxUtilFsCreateLink, {onLeave: function (args) {send("LxUtilFsCreateLink");}});

var LxUtilFsCreateLinkReparseBuffer = Module.findExportByName("lxutil.dll", "LxUtilFsCreateLinkReparseBuffer")
Interceptor.attach(LxUtilFsCreateLinkReparseBuffer, {onLeave: function (args) {send("LxUtilFsCreateLinkReparseBuffer");}});

var LxUtilFsCreateMetadataEaBuffer = Module.findExportByName("lxutil.dll", "LxUtilFsCreateMetadataEaBuffer")
Interceptor.attach(LxUtilFsCreateMetadataEaBuffer, {onLeave: function (args) {send("LxUtilFsCreateMetadataEaBuffer");}});

var LxUtilFsCreateNtLinkReparseBuffer = Module.findExportByName("lxutil.dll", "LxUtilFsCreateNtLinkReparseBuffer")
Interceptor.attach(LxUtilFsCreateNtLinkReparseBuffer, {onLeave: function (args) {send("LxUtilFsCreateNtLinkReparseBuffer");}});

var LxUtilFsCreateRenameInformation = Module.findExportByName("lxutil.dll", "LxUtilFsCreateRenameInformation")
Interceptor.attach(LxUtilFsCreateRenameInformation, {onLeave: function (args) {send("LxUtilFsCreateRenameInformation");}});

var LxUtilFsDeleteFile = Module.findExportByName("lxutil.dll", "LxUtilFsDeleteFile")
Interceptor.attach(LxUtilFsDeleteFile, {onLeave: function (args) {send("LxUtilFsDeleteFile");}});

var LxUtilFsDeleteFileCore = Module.findExportByName("lxutil.dll", "LxUtilFsDeleteFileCore")
Interceptor.attach(LxUtilFsDeleteFileCore, {onLeave: function (args) {send("LxUtilFsDeleteFileCore");}});

var LxUtilFsDeleteReadOnlyFile = Module.findExportByName("lxutil.dll", "LxUtilFsDeleteReadOnlyFile")
Interceptor.attach(LxUtilFsDeleteReadOnlyFile, {onLeave: function (args) {send("LxUtilFsDeleteReadOnlyFile");}});

var LxUtilFsDetermineCompatibilityFlags = Module.findExportByName("lxutil.dll", "LxUtilFsDetermineCompatibilityFlags")
Interceptor.attach(LxUtilFsDetermineCompatibilityFlags, {onLeave: function (args) {send("LxUtilFsDetermineCompatibilityFlags");}});

var LxUtilFsDetermineCreationInfo = Module.findExportByName("lxutil.dll", "LxUtilFsDetermineCreationInfo")
Interceptor.attach(LxUtilFsDetermineCreationInfo, {onLeave: function (args) {send("LxUtilFsDetermineCreationInfo");}});

var LxUtilFsDetermineInodeAttributes = Module.findExportByName("lxutil.dll", "LxUtilFsDetermineInodeAttributes")
Interceptor.attach(LxUtilFsDetermineInodeAttributes, {onLeave: function (args) {send("LxUtilFsDetermineInodeAttributes");}});

var LxUtilFsDisableAccessTime = Module.findExportByName("lxutil.dll", "LxUtilFsDisableAccessTime")
Interceptor.attach(LxUtilFsDisableAccessTime, {onLeave: function (args) {send("LxUtilFsDisableAccessTime");}});

var LxUtilFsFileModeToReparseTag = Module.findExportByName("lxutil.dll", "LxUtilFsFileModeToReparseTag")
Interceptor.attach(LxUtilFsFileModeToReparseTag, {onLeave: function (args) {send("LxUtilFsFileModeToReparseTag");}});

var LxUtilFsGetFileSystemAttributes = Module.findExportByName("lxutil.dll", "LxUtilFsGetFileSystemAttributes")
Interceptor.attach(LxUtilFsGetFileSystemAttributes, {onLeave: function (args) {send("LxUtilFsGetFileSystemAttributes");}});

var LxUtilFsGetFileSystemBlockSize = Module.findExportByName("lxutil.dll", "LxUtilFsGetFileSystemBlockSize")
Interceptor.attach(LxUtilFsGetFileSystemBlockSize, {onLeave: function (args) {send("LxUtilFsGetFileSystemBlockSize");}});

var LxUtilFsGetLxAttributes = Module.findExportByName("lxutil.dll", "LxUtilFsGetLxAttributes")
Interceptor.attach(LxUtilFsGetLxAttributes, {onLeave: function (args) {send("LxUtilFsGetLxAttributes");}});

var LxUtilFsGetLxFileSystemAttributes = Module.findExportByName("lxutil.dll", "LxUtilFsGetLxFileSystemAttributes")
Interceptor.attach(LxUtilFsGetLxFileSystemAttributes, {onLeave: function (args) {send("LxUtilFsGetLxFileSystemAttributes");}});

var LxUtilFsGetVolumeFlags = Module.findExportByName("lxutil.dll", "LxUtilFsGetVolumeFlags")
Interceptor.attach(LxUtilFsGetVolumeFlags, {onLeave: function (args) {send("LxUtilFsGetVolumeFlags");}});

var LxUtilFsInitialize = Module.findExportByName("lxutil.dll", "LxUtilFsInitialize")
Interceptor.attach(LxUtilFsInitialize, {onLeave: function (args) {send("LxUtilFsInitialize");}});

var LxUtilFsIsAppExecLink = Module.findExportByName("lxutil.dll", "LxUtilFsIsAppExecLink")
Interceptor.attach(LxUtilFsIsAppExecLink, {onLeave: function (args) {send("LxUtilFsIsAppExecLink");}});

var LxUtilFsQueryInformationByName = Module.findExportByName("lxutil.dll", "LxUtilFsQueryInformationByName")
Interceptor.attach(LxUtilFsQueryInformationByName, {onLeave: function (args) {send("LxUtilFsQueryInformationByName");}});

var LxUtilFsQueryStatInformation = Module.findExportByName("lxutil.dll", "LxUtilFsQueryStatInformation")
Interceptor.attach(LxUtilFsQueryStatInformation, {onLeave: function (args) {send("LxUtilFsQueryStatInformation");}});

var LxUtilFsQueryStatInformationByName = Module.findExportByName("lxutil.dll", "LxUtilFsQueryStatInformationByName")
Interceptor.attach(LxUtilFsQueryStatInformationByName, {onLeave: function (args) {send("LxUtilFsQueryStatInformationByName");}});

var LxUtilFsQueryStatLxInformation = Module.findExportByName("lxutil.dll", "LxUtilFsQueryStatLxInformation")
Interceptor.attach(LxUtilFsQueryStatLxInformation, {onLeave: function (args) {send("LxUtilFsQueryStatLxInformation");}});

var LxUtilFsQueryStatLxInformationByName = Module.findExportByName("lxutil.dll", "LxUtilFsQueryStatLxInformationByName")
Interceptor.attach(LxUtilFsQueryStatLxInformationByName, {onLeave: function (args) {send("LxUtilFsQueryStatLxInformationByName");}});

var LxUtilFsReadAppExecLink = Module.findExportByName("lxutil.dll", "LxUtilFsReadAppExecLink")
Interceptor.attach(LxUtilFsReadAppExecLink, {onLeave: function (args) {send("LxUtilFsReadAppExecLink");}});

var LxUtilFsReadDir = Module.findExportByName("lxutil.dll", "LxUtilFsReadDir")
Interceptor.attach(LxUtilFsReadDir, {onLeave: function (args) {send("LxUtilFsReadDir");}});

var LxUtilFsReadLinkLength = Module.findExportByName("lxutil.dll", "LxUtilFsReadLinkLength")
Interceptor.attach(LxUtilFsReadLinkLength, {onLeave: function (args) {send("LxUtilFsReadLinkLength");}});

var LxUtilFsReadReparseLink = Module.findExportByName("lxutil.dll", "LxUtilFsReadReparseLink")
Interceptor.attach(LxUtilFsReadReparseLink, {onLeave: function (args) {send("LxUtilFsReadReparseLink");}});

var LxUtilFsRename = Module.findExportByName("lxutil.dll", "LxUtilFsRename")
Interceptor.attach(LxUtilFsRename, {onLeave: function (args) {send("LxUtilFsRename");}});

var LxUtilFsReparseTagToFileMode = Module.findExportByName("lxutil.dll", "LxUtilFsReparseTagToFileMode")
Interceptor.attach(LxUtilFsReparseTagToFileMode, {onLeave: function (args) {send("LxUtilFsReparseTagToFileMode");}});

var LxUtilFsReparseTagToFileType = Module.findExportByName("lxutil.dll", "LxUtilFsReparseTagToFileType")
Interceptor.attach(LxUtilFsReparseTagToFileType, {onLeave: function (args) {send("LxUtilFsReparseTagToFileType");}});

var LxUtilFsSetCaseSensitivity = Module.findExportByName("lxutil.dll", "LxUtilFsSetCaseSensitivity")
Interceptor.attach(LxUtilFsSetCaseSensitivity, {onLeave: function (args) {send("LxUtilFsSetCaseSensitivity");}});

var LxUtilFsSetTimes = Module.findExportByName("lxutil.dll", "LxUtilFsSetTimes")
Interceptor.attach(LxUtilFsSetTimes, {onLeave: function (args) {send("LxUtilFsSetTimes");}});

var LxUtilFsTruncate = Module.findExportByName("lxutil.dll", "LxUtilFsTruncate")
Interceptor.attach(LxUtilFsTruncate, {onLeave: function (args) {send("LxUtilFsTruncate");}});

var LxUtilFsUnlinkAt = Module.findExportByName("lxutil.dll", "LxUtilFsUnlinkAt")
Interceptor.attach(LxUtilFsUnlinkAt, {onLeave: function (args) {send("LxUtilFsUnlinkAt");}});

var LxUtilFsUpdateLxAttributes = Module.findExportByName("lxutil.dll", "LxUtilFsUpdateLxAttributes")
Interceptor.attach(LxUtilFsUpdateLxAttributes, {onLeave: function (args) {send("LxUtilFsUpdateLxAttributes");}});

var LxUtilLxErrorToNtStatus = Module.findExportByName("lxutil.dll", "LxUtilLxErrorToNtStatus")
Interceptor.attach(LxUtilLxErrorToNtStatus, {onLeave: function (args) {send("LxUtilLxErrorToNtStatus");}});

var LxUtilLxPathToNtPath = Module.findExportByName("lxutil.dll", "LxUtilLxPathToNtPath")
Interceptor.attach(LxUtilLxPathToNtPath, {onLeave: function (args) {send("LxUtilLxPathToNtPath");}});

var LxUtilNtFileNameAppendEscaped = Module.findExportByName("lxutil.dll", "LxUtilNtFileNameAppendEscaped")
Interceptor.attach(LxUtilNtFileNameAppendEscaped, {onLeave: function (args) {send("LxUtilNtFileNameAppendEscaped");}});

var LxUtilNtFileNameEscape = Module.findExportByName("lxutil.dll", "LxUtilNtFileNameEscape")
Interceptor.attach(LxUtilNtFileNameEscape, {onLeave: function (args) {send("LxUtilNtFileNameEscape");}});

var LxUtilNtFileNameEscapeInPlace = Module.findExportByName("lxutil.dll", "LxUtilNtFileNameEscapeInPlace")
Interceptor.attach(LxUtilNtFileNameEscapeInPlace, {onLeave: function (args) {send("LxUtilNtFileNameEscapeInPlace");}});

var LxUtilNtFileNameFreeCopy = Module.findExportByName("lxutil.dll", "LxUtilNtFileNameFreeCopy")
Interceptor.attach(LxUtilNtFileNameFreeCopy, {onLeave: function (args) {send("LxUtilNtFileNameFreeCopy");}});

var LxUtilNtFileNameLegacyEscape = Module.findExportByName("lxutil.dll", "LxUtilNtFileNameLegacyEscape")
Interceptor.attach(LxUtilNtFileNameLegacyEscape, {onLeave: function (args) {send("LxUtilNtFileNameLegacyEscape");}});

var LxUtilNtFileNameLegacyUnescape = Module.findExportByName("lxutil.dll", "LxUtilNtFileNameLegacyUnescape")
Interceptor.attach(LxUtilNtFileNameLegacyUnescape, {onLeave: function (args) {send("LxUtilNtFileNameLegacyUnescape");}});

var LxUtilNtHandleGetFileInformation = Module.findExportByName("lxutil.dll", "LxUtilNtHandleGetFileInformation")
Interceptor.attach(LxUtilNtHandleGetFileInformation, {onLeave: function (args) {send("LxUtilNtHandleGetFileInformation");}});

var LxUtilNtHandleRename = Module.findExportByName("lxutil.dll", "LxUtilNtHandleRename")
Interceptor.attach(LxUtilNtHandleRename, {onLeave: function (args) {send("LxUtilNtHandleRename");}});

var LxUtilNtPathAppend = Module.findExportByName("lxutil.dll", "LxUtilNtPathAppend")
Interceptor.attach(LxUtilNtPathAppend, {onLeave: function (args) {send("LxUtilNtPathAppend");}});

var LxUtilNtPathAppendLength = Module.findExportByName("lxutil.dll", "LxUtilNtPathAppendLength")
Interceptor.attach(LxUtilNtPathAppendLength, {onLeave: function (args) {send("LxUtilNtPathAppendLength");}});

var LxUtilNtPathEscapeInPlace = Module.findExportByName("lxutil.dll", "LxUtilNtPathEscapeInPlace")
Interceptor.attach(LxUtilNtPathEscapeInPlace, {onLeave: function (args) {send("LxUtilNtPathEscapeInPlace");}});

var LxUtilNtPathToLxPath = Module.findExportByName("lxutil.dll", "LxUtilNtPathToLxPath")
Interceptor.attach(LxUtilNtPathToLxPath, {onLeave: function (args) {send("LxUtilNtPathToLxPath");}});

var LxUtilNtPathUnescape = Module.findExportByName("lxutil.dll", "LxUtilNtPathUnescape")
Interceptor.attach(LxUtilNtPathUnescape, {onLeave: function (args) {send("LxUtilNtPathUnescape");}});

var LxUtilNtStatusToLxError = Module.findExportByName("lxutil.dll", "LxUtilNtStatusToLxError")
Interceptor.attach(LxUtilNtStatusToLxError, {onLeave: function (args) {send("LxUtilNtStatusToLxError");}});

var LxUtilNtTimeToTimespec = Module.findExportByName("lxutil.dll", "LxUtilNtTimeToTimespec")
Interceptor.attach(LxUtilNtTimeToTimespec, {onLeave: function (args) {send("LxUtilNtTimeToTimespec");}});

var LxUtilSymlinkRead = Module.findExportByName("lxutil.dll", "LxUtilSymlinkRead")
Interceptor.attach(LxUtilSymlinkRead, {onLeave: function (args) {send("LxUtilSymlinkRead");}});

var LxUtilTimespecToNtTime = Module.findExportByName("lxutil.dll", "LxUtilTimespecToNtTime")
Interceptor.attach(LxUtilTimespecToNtTime, {onLeave: function (args) {send("LxUtilTimespecToNtTime");}});

var LxUtilTranslateLxPathToWidePath = Module.findExportByName("lxutil.dll", "LxUtilTranslateLxPathToWidePath")
Interceptor.attach(LxUtilTranslateLxPathToWidePath, {onLeave: function (args) {send("LxUtilTranslateLxPathToWidePath");}});

var LxUtilTranslateWidePathToLxPath = Module.findExportByName("lxutil.dll", "LxUtilTranslateWidePathToLxPath")
Interceptor.attach(LxUtilTranslateWidePathToLxPath, {onLeave: function (args) {send("LxUtilTranslateWidePathToLxPath");}});

var LxUtilUnicodeStringDuplicate = Module.findExportByName("lxutil.dll", "LxUtilUnicodeStringDuplicate")
Interceptor.attach(LxUtilUnicodeStringDuplicate, {onLeave: function (args) {send("LxUtilUnicodeStringDuplicate");}});

var LxUtilXattrGet = Module.findExportByName("lxutil.dll", "LxUtilXattrGet")
Interceptor.attach(LxUtilXattrGet, {onLeave: function (args) {send("LxUtilXattrGet");}});

var LxUtilXattrGetSystem = Module.findExportByName("lxutil.dll", "LxUtilXattrGetSystem")
Interceptor.attach(LxUtilXattrGetSystem, {onLeave: function (args) {send("LxUtilXattrGetSystem");}});

var LxUtilXattrIsCaseSensitiveAttribute = Module.findExportByName("lxutil.dll", "LxUtilXattrIsCaseSensitiveAttribute")
Interceptor.attach(LxUtilXattrIsCaseSensitiveAttribute, {onLeave: function (args) {send("LxUtilXattrIsCaseSensitiveAttribute");}});

var LxUtilXattrList = Module.findExportByName("lxutil.dll", "LxUtilXattrList")
Interceptor.attach(LxUtilXattrList, {onLeave: function (args) {send("LxUtilXattrList");}});

var LxUtilXattrRemove = Module.findExportByName("lxutil.dll", "LxUtilXattrRemove")
Interceptor.attach(LxUtilXattrRemove, {onLeave: function (args) {send("LxUtilXattrRemove");}});

var LxUtilXattrSet = Module.findExportByName("lxutil.dll", "LxUtilXattrSet")
Interceptor.attach(LxUtilXattrSet, {onLeave: function (args) {send("LxUtilXattrSet");}});

var LxUtilXattrSetSystem = Module.findExportByName("lxutil.dll", "LxUtilXattrSetSystem")
Interceptor.attach(LxUtilXattrSetSystem, {onLeave: function (args) {send("LxUtilXattrSetSystem");}});

