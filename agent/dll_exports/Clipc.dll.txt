var ClipCallServer = Module.findExportByName("Clipc.dll", "ClipCallServer")
Interceptor.attach(ClipCallServer, {onLeave: function (args) {send("ClipCallServer");}});

var ClipCleanUpState = Module.findExportByName("Clipc.dll", "ClipCleanUpState")
Interceptor.attach(ClipCleanUpState, {onLeave: function (args) {send("ClipCleanUpState");}});

var ClipClose = Module.findExportByName("Clipc.dll", "ClipClose")
Interceptor.attach(ClipClose, {onLeave: function (args) {send("ClipClose");}});

var ClipGatherDiagnostics = Module.findExportByName("Clipc.dll", "ClipGatherDiagnostics")
Interceptor.attach(ClipGatherDiagnostics, {onLeave: function (args) {send("ClipGatherDiagnostics");}});

var ClipGenerateClientChallengeData = Module.findExportByName("Clipc.dll", "ClipGenerateClientChallengeData")
Interceptor.attach(ClipGenerateClientChallengeData, {onLeave: function (args) {send("ClipGenerateClientChallengeData");}});

var ClipGenerateDeviceLicenseRequest = Module.findExportByName("Clipc.dll", "ClipGenerateDeviceLicenseRequest")
Interceptor.attach(ClipGenerateDeviceLicenseRequest, {onLeave: function (args) {send("ClipGenerateDeviceLicenseRequest");}});

var ClipGetAssociatedResults = Module.findExportByName("Clipc.dll", "ClipGetAssociatedResults")
Interceptor.attach(ClipGetAssociatedResults, {onLeave: function (args) {send("ClipGetAssociatedResults");}});

var ClipGetDeviceHardwareData = Module.findExportByName("Clipc.dll", "ClipGetDeviceHardwareData")
Interceptor.attach(ClipGetDeviceHardwareData, {onLeave: function (args) {send("ClipGetDeviceHardwareData");}});

var ClipGetFileIdFromAssociateId = Module.findExportByName("Clipc.dll", "ClipGetFileIdFromAssociateId")
Interceptor.attach(ClipGetFileIdFromAssociateId, {onLeave: function (args) {send("ClipGetFileIdFromAssociateId");}});

var ClipGetLicenseAndPolicyForPfn = Module.findExportByName("Clipc.dll", "ClipGetLicenseAndPolicyForPfn")
Interceptor.attach(ClipGetLicenseAndPolicyForPfn, {onLeave: function (args) {send("ClipGetLicenseAndPolicyForPfn");}});

var ClipGetLicenseData = Module.findExportByName("Clipc.dll", "ClipGetLicenseData")
Interceptor.attach(ClipGetLicenseData, {onLeave: function (args) {send("ClipGetLicenseData");}});

var ClipGetQueryResults = Module.findExportByName("Clipc.dll", "ClipGetQueryResults")
Interceptor.attach(ClipGetQueryResults, {onLeave: function (args) {send("ClipGetQueryResults");}});

var ClipGetSubscriptionStatus = Module.findExportByName("Clipc.dll", "ClipGetSubscriptionStatus")
Interceptor.attach(ClipGetSubscriptionStatus, {onLeave: function (args) {send("ClipGetSubscriptionStatus");}});

var ClipInstallLicense = Module.findExportByName("Clipc.dll", "ClipInstallLicense")
Interceptor.attach(ClipInstallLicense, {onLeave: function (args) {send("ClipInstallLicense");}});

var ClipOpen = Module.findExportByName("Clipc.dll", "ClipOpen")
Interceptor.attach(ClipOpen, {onLeave: function (args) {send("ClipOpen");}});

var ClipQueryAssociateId = Module.findExportByName("Clipc.dll", "ClipQueryAssociateId")
Interceptor.attach(ClipQueryAssociateId, {onLeave: function (args) {send("ClipQueryAssociateId");}});

var ClipRefreshLicense = Module.findExportByName("Clipc.dll", "ClipRefreshLicense")
Interceptor.attach(ClipRefreshLicense, {onLeave: function (args) {send("ClipRefreshLicense");}});

var ClipUninstallLicense = Module.findExportByName("Clipc.dll", "ClipUninstallLicense")
Interceptor.attach(ClipUninstallLicense, {onLeave: function (args) {send("ClipUninstallLicense");}});

var GetExchangeDeviceUniqueID = Module.findExportByName("Clipc.dll", "GetExchangeDeviceUniqueID")
Interceptor.attach(GetExchangeDeviceUniqueID, {onLeave: function (args) {send("GetExchangeDeviceUniqueID");}});

var GetOfflineDeviceUniqueID = Module.findExportByName("Clipc.dll", "GetOfflineDeviceUniqueID")
Interceptor.attach(GetOfflineDeviceUniqueID, {onLeave: function (args) {send("GetOfflineDeviceUniqueID");}});

var SLQueryLicenseValueFromApp = Module.findExportByName("Clipc.dll", "SLQueryLicenseValueFromApp")
Interceptor.attach(SLQueryLicenseValueFromApp, {onLeave: function (args) {send("SLQueryLicenseValueFromApp");}});

var SLQueryLicenseValueFromApp2 = Module.findExportByName("Clipc.dll", "SLQueryLicenseValueFromApp2")
Interceptor.attach(SLQueryLicenseValueFromApp2, {onLeave: function (args) {send("SLQueryLicenseValueFromApp2");}});

