var SLCallServer = Module.findExportByName("sppc.dll", "SLCallServer")
Interceptor.attach(SLCallServer, {onLeave: function (args) {send("SLCallServer");}});

var SLClose = Module.findExportByName("sppc.dll", "SLClose")
Interceptor.attach(SLClose, {onLeave: function (args) {send("SLClose");}});

var SLConsumeRight = Module.findExportByName("sppc.dll", "SLConsumeRight")
Interceptor.attach(SLConsumeRight, {onLeave: function (args) {send("SLConsumeRight");}});

var SLDepositMigrationBlob = Module.findExportByName("sppc.dll", "SLDepositMigrationBlob")
Interceptor.attach(SLDepositMigrationBlob, {onLeave: function (args) {send("SLDepositMigrationBlob");}});

var SLDepositOfflineConfirmationId = Module.findExportByName("sppc.dll", "SLDepositOfflineConfirmationId")
Interceptor.attach(SLDepositOfflineConfirmationId, {onLeave: function (args) {send("SLDepositOfflineConfirmationId");}});

var SLDepositOfflineConfirmationIdEx = Module.findExportByName("sppc.dll", "SLDepositOfflineConfirmationIdEx")
Interceptor.attach(SLDepositOfflineConfirmationIdEx, {onLeave: function (args) {send("SLDepositOfflineConfirmationIdEx");}});

var SLDepositStoreToken = Module.findExportByName("sppc.dll", "SLDepositStoreToken")
Interceptor.attach(SLDepositStoreToken, {onLeave: function (args) {send("SLDepositStoreToken");}});

var SLFireEvent = Module.findExportByName("sppc.dll", "SLFireEvent")
Interceptor.attach(SLFireEvent, {onLeave: function (args) {send("SLFireEvent");}});

var SLGatherMigrationBlob = Module.findExportByName("sppc.dll", "SLGatherMigrationBlob")
Interceptor.attach(SLGatherMigrationBlob, {onLeave: function (args) {send("SLGatherMigrationBlob");}});

var SLGatherMigrationBlobEx = Module.findExportByName("sppc.dll", "SLGatherMigrationBlobEx")
Interceptor.attach(SLGatherMigrationBlobEx, {onLeave: function (args) {send("SLGatherMigrationBlobEx");}});

var SLGenerateOfflineInstallationId = Module.findExportByName("sppc.dll", "SLGenerateOfflineInstallationId")
Interceptor.attach(SLGenerateOfflineInstallationId, {onLeave: function (args) {send("SLGenerateOfflineInstallationId");}});

var SLGenerateOfflineInstallationIdEx = Module.findExportByName("sppc.dll", "SLGenerateOfflineInstallationIdEx")
Interceptor.attach(SLGenerateOfflineInstallationIdEx, {onLeave: function (args) {send("SLGenerateOfflineInstallationIdEx");}});

var SLGetActiveLicenseInfo = Module.findExportByName("sppc.dll", "SLGetActiveLicenseInfo")
Interceptor.attach(SLGetActiveLicenseInfo, {onLeave: function (args) {send("SLGetActiveLicenseInfo");}});

var SLGetApplicationInformation = Module.findExportByName("sppc.dll", "SLGetApplicationInformation")
Interceptor.attach(SLGetApplicationInformation, {onLeave: function (args) {send("SLGetApplicationInformation");}});

var SLGetApplicationPolicy = Module.findExportByName("sppc.dll", "SLGetApplicationPolicy")
Interceptor.attach(SLGetApplicationPolicy, {onLeave: function (args) {send("SLGetApplicationPolicy");}});

var SLGetAuthenticationResult = Module.findExportByName("sppc.dll", "SLGetAuthenticationResult")
Interceptor.attach(SLGetAuthenticationResult, {onLeave: function (args) {send("SLGetAuthenticationResult");}});

var SLGetEncryptedPIDEx = Module.findExportByName("sppc.dll", "SLGetEncryptedPIDEx")
Interceptor.attach(SLGetEncryptedPIDEx, {onLeave: function (args) {send("SLGetEncryptedPIDEx");}});

var SLGetGenuineInformation = Module.findExportByName("sppc.dll", "SLGetGenuineInformation")
Interceptor.attach(SLGetGenuineInformation, {onLeave: function (args) {send("SLGetGenuineInformation");}});

var SLGetInstalledProductKeyIds = Module.findExportByName("sppc.dll", "SLGetInstalledProductKeyIds")
Interceptor.attach(SLGetInstalledProductKeyIds, {onLeave: function (args) {send("SLGetInstalledProductKeyIds");}});

var SLGetLicense = Module.findExportByName("sppc.dll", "SLGetLicense")
Interceptor.attach(SLGetLicense, {onLeave: function (args) {send("SLGetLicense");}});

var SLGetLicenseFileId = Module.findExportByName("sppc.dll", "SLGetLicenseFileId")
Interceptor.attach(SLGetLicenseFileId, {onLeave: function (args) {send("SLGetLicenseFileId");}});

var SLGetLicenseInformation = Module.findExportByName("sppc.dll", "SLGetLicenseInformation")
Interceptor.attach(SLGetLicenseInformation, {onLeave: function (args) {send("SLGetLicenseInformation");}});

var SLGetLicensingStatusInformation = Module.findExportByName("sppc.dll", "SLGetLicensingStatusInformation")
Interceptor.attach(SLGetLicensingStatusInformation, {onLeave: function (args) {send("SLGetLicensingStatusInformation");}});

var SLGetPKeyId = Module.findExportByName("sppc.dll", "SLGetPKeyId")
Interceptor.attach(SLGetPKeyId, {onLeave: function (args) {send("SLGetPKeyId");}});

var SLGetPKeyInformation = Module.findExportByName("sppc.dll", "SLGetPKeyInformation")
Interceptor.attach(SLGetPKeyInformation, {onLeave: function (args) {send("SLGetPKeyInformation");}});

var SLGetPolicyInformation = Module.findExportByName("sppc.dll", "SLGetPolicyInformation")
Interceptor.attach(SLGetPolicyInformation, {onLeave: function (args) {send("SLGetPolicyInformation");}});

var SLGetPolicyInformationDWORD = Module.findExportByName("sppc.dll", "SLGetPolicyInformationDWORD")
Interceptor.attach(SLGetPolicyInformationDWORD, {onLeave: function (args) {send("SLGetPolicyInformationDWORD");}});

var SLGetProductSkuInformation = Module.findExportByName("sppc.dll", "SLGetProductSkuInformation")
Interceptor.attach(SLGetProductSkuInformation, {onLeave: function (args) {send("SLGetProductSkuInformation");}});

var SLGetSLIDList = Module.findExportByName("sppc.dll", "SLGetSLIDList")
Interceptor.attach(SLGetSLIDList, {onLeave: function (args) {send("SLGetSLIDList");}});

var SLGetServiceInformation = Module.findExportByName("sppc.dll", "SLGetServiceInformation")
Interceptor.attach(SLGetServiceInformation, {onLeave: function (args) {send("SLGetServiceInformation");}});

var SLInstallLicense = Module.findExportByName("sppc.dll", "SLInstallLicense")
Interceptor.attach(SLInstallLicense, {onLeave: function (args) {send("SLInstallLicense");}});

var SLInstallProofOfPurchase = Module.findExportByName("sppc.dll", "SLInstallProofOfPurchase")
Interceptor.attach(SLInstallProofOfPurchase, {onLeave: function (args) {send("SLInstallProofOfPurchase");}});

var SLInstallProofOfPurchaseEx = Module.findExportByName("sppc.dll", "SLInstallProofOfPurchaseEx")
Interceptor.attach(SLInstallProofOfPurchaseEx, {onLeave: function (args) {send("SLInstallProofOfPurchaseEx");}});

var SLIsGenuineLocalEx = Module.findExportByName("sppc.dll", "SLIsGenuineLocalEx")
Interceptor.attach(SLIsGenuineLocalEx, {onLeave: function (args) {send("SLIsGenuineLocalEx");}});

var SLLoadApplicationPolicies = Module.findExportByName("sppc.dll", "SLLoadApplicationPolicies")
Interceptor.attach(SLLoadApplicationPolicies, {onLeave: function (args) {send("SLLoadApplicationPolicies");}});

var SLOpen = Module.findExportByName("sppc.dll", "SLOpen")
Interceptor.attach(SLOpen, {onLeave: function (args) {send("SLOpen");}});

var SLPersistApplicationPolicies = Module.findExportByName("sppc.dll", "SLPersistApplicationPolicies")
Interceptor.attach(SLPersistApplicationPolicies, {onLeave: function (args) {send("SLPersistApplicationPolicies");}});

var SLPersistRTSPayloadOverride = Module.findExportByName("sppc.dll", "SLPersistRTSPayloadOverride")
Interceptor.attach(SLPersistRTSPayloadOverride, {onLeave: function (args) {send("SLPersistRTSPayloadOverride");}});

var SLReArm = Module.findExportByName("sppc.dll", "SLReArm")
Interceptor.attach(SLReArm, {onLeave: function (args) {send("SLReArm");}});

var SLRegisterEvent = Module.findExportByName("sppc.dll", "SLRegisterEvent")
Interceptor.attach(SLRegisterEvent, {onLeave: function (args) {send("SLRegisterEvent");}});

var SLRegisterPlugin = Module.findExportByName("sppc.dll", "SLRegisterPlugin")
Interceptor.attach(SLRegisterPlugin, {onLeave: function (args) {send("SLRegisterPlugin");}});

var SLSetAuthenticationData = Module.findExportByName("sppc.dll", "SLSetAuthenticationData")
Interceptor.attach(SLSetAuthenticationData, {onLeave: function (args) {send("SLSetAuthenticationData");}});

var SLSetCurrentProductKey = Module.findExportByName("sppc.dll", "SLSetCurrentProductKey")
Interceptor.attach(SLSetCurrentProductKey, {onLeave: function (args) {send("SLSetCurrentProductKey");}});

var SLSetGenuineInformation = Module.findExportByName("sppc.dll", "SLSetGenuineInformation")
Interceptor.attach(SLSetGenuineInformation, {onLeave: function (args) {send("SLSetGenuineInformation");}});

var SLUninstallLicense = Module.findExportByName("sppc.dll", "SLUninstallLicense")
Interceptor.attach(SLUninstallLicense, {onLeave: function (args) {send("SLUninstallLicense");}});

var SLUninstallProofOfPurchase = Module.findExportByName("sppc.dll", "SLUninstallProofOfPurchase")
Interceptor.attach(SLUninstallProofOfPurchase, {onLeave: function (args) {send("SLUninstallProofOfPurchase");}});

var SLUnloadApplicationPolicies = Module.findExportByName("sppc.dll", "SLUnloadApplicationPolicies")
Interceptor.attach(SLUnloadApplicationPolicies, {onLeave: function (args) {send("SLUnloadApplicationPolicies");}});

var SLUnregisterEvent = Module.findExportByName("sppc.dll", "SLUnregisterEvent")
Interceptor.attach(SLUnregisterEvent, {onLeave: function (args) {send("SLUnregisterEvent");}});

var SLUnregisterPlugin = Module.findExportByName("sppc.dll", "SLUnregisterPlugin")
Interceptor.attach(SLUnregisterPlugin, {onLeave: function (args) {send("SLUnregisterPlugin");}});

var SLpAuthenticateGenuineTicketResponse = Module.findExportByName("sppc.dll", "SLpAuthenticateGenuineTicketResponse")
Interceptor.attach(SLpAuthenticateGenuineTicketResponse, {onLeave: function (args) {send("SLpAuthenticateGenuineTicketResponse");}});

var SLpBeginGenuineTicketTransaction = Module.findExportByName("sppc.dll", "SLpBeginGenuineTicketTransaction")
Interceptor.attach(SLpBeginGenuineTicketTransaction, {onLeave: function (args) {send("SLpBeginGenuineTicketTransaction");}});

var SLpClearActivationInProgress = Module.findExportByName("sppc.dll", "SLpClearActivationInProgress")
Interceptor.attach(SLpClearActivationInProgress, {onLeave: function (args) {send("SLpClearActivationInProgress");}});

var SLpDepositDownlevelGenuineTicket = Module.findExportByName("sppc.dll", "SLpDepositDownlevelGenuineTicket")
Interceptor.attach(SLpDepositDownlevelGenuineTicket, {onLeave: function (args) {send("SLpDepositDownlevelGenuineTicket");}});

var SLpDepositTokenActivationResponse = Module.findExportByName("sppc.dll", "SLpDepositTokenActivationResponse")
Interceptor.attach(SLpDepositTokenActivationResponse, {onLeave: function (args) {send("SLpDepositTokenActivationResponse");}});

var SLpGenerateTokenActivationChallenge = Module.findExportByName("sppc.dll", "SLpGenerateTokenActivationChallenge")
Interceptor.attach(SLpGenerateTokenActivationChallenge, {onLeave: function (args) {send("SLpGenerateTokenActivationChallenge");}});

var SLpGetGenuineBlob = Module.findExportByName("sppc.dll", "SLpGetGenuineBlob")
Interceptor.attach(SLpGetGenuineBlob, {onLeave: function (args) {send("SLpGetGenuineBlob");}});

var SLpGetGenuineLocal = Module.findExportByName("sppc.dll", "SLpGetGenuineLocal")
Interceptor.attach(SLpGetGenuineLocal, {onLeave: function (args) {send("SLpGetGenuineLocal");}});

var SLpGetLicenseAcquisitionInfo = Module.findExportByName("sppc.dll", "SLpGetLicenseAcquisitionInfo")
Interceptor.attach(SLpGetLicenseAcquisitionInfo, {onLeave: function (args) {send("SLpGetLicenseAcquisitionInfo");}});

var SLpGetMSPidInformation = Module.findExportByName("sppc.dll", "SLpGetMSPidInformation")
Interceptor.attach(SLpGetMSPidInformation, {onLeave: function (args) {send("SLpGetMSPidInformation");}});

var SLpGetMachineUGUID = Module.findExportByName("sppc.dll", "SLpGetMachineUGUID")
Interceptor.attach(SLpGetMachineUGUID, {onLeave: function (args) {send("SLpGetMachineUGUID");}});

var SLpGetTokenActivationGrantInfo = Module.findExportByName("sppc.dll", "SLpGetTokenActivationGrantInfo")
Interceptor.attach(SLpGetTokenActivationGrantInfo, {onLeave: function (args) {send("SLpGetTokenActivationGrantInfo");}});

var SLpIAActivateProduct = Module.findExportByName("sppc.dll", "SLpIAActivateProduct")
Interceptor.attach(SLpIAActivateProduct, {onLeave: function (args) {send("SLpIAActivateProduct");}});

var SLpIsCurrentInstalledProductKeyDefaultKey = Module.findExportByName("sppc.dll", "SLpIsCurrentInstalledProductKeyDefaultKey")
Interceptor.attach(SLpIsCurrentInstalledProductKeyDefaultKey, {onLeave: function (args) {send("SLpIsCurrentInstalledProductKeyDefaultKey");}});

var SLpProcessVMPipeMessage = Module.findExportByName("sppc.dll", "SLpProcessVMPipeMessage")
Interceptor.attach(SLpProcessVMPipeMessage, {onLeave: function (args) {send("SLpProcessVMPipeMessage");}});

var SLpSetActivationInProgress = Module.findExportByName("sppc.dll", "SLpSetActivationInProgress")
Interceptor.attach(SLpSetActivationInProgress, {onLeave: function (args) {send("SLpSetActivationInProgress");}});

var SLpTriggerServiceWorker = Module.findExportByName("sppc.dll", "SLpTriggerServiceWorker")
Interceptor.attach(SLpTriggerServiceWorker, {onLeave: function (args) {send("SLpTriggerServiceWorker");}});

var SLpVLActivateProduct = Module.findExportByName("sppc.dll", "SLpVLActivateProduct")
Interceptor.attach(SLpVLActivateProduct, {onLeave: function (args) {send("SLpVLActivateProduct");}});

