var CfgUtilCheckCharacteristicNode = Module.findExportByName("dmcfgutils.dll", "CfgUtilCheckCharacteristicNode")
Interceptor.attach(CfgUtilCheckCharacteristicNode, {onLeave: function (args) {send("CfgUtilCheckCharacteristicNode");}});

var CfgUtilCheckParmNode = Module.findExportByName("dmcfgutils.dll", "CfgUtilCheckParmNode")
Interceptor.attach(CfgUtilCheckParmNode, {onLeave: function (args) {send("CfgUtilCheckParmNode");}});

var CfgUtilCreateCharacteristic = Module.findExportByName("dmcfgutils.dll", "CfgUtilCreateCharacteristic")
Interceptor.attach(CfgUtilCreateCharacteristic, {onLeave: function (args) {send("CfgUtilCreateCharacteristic");}});

var CfgUtilCreateParm = Module.findExportByName("dmcfgutils.dll", "CfgUtilCreateParm")
Interceptor.attach(CfgUtilCreateParm, {onLeave: function (args) {send("CfgUtilCreateParm");}});

var CfgUtilGetConfigDataTypeName = Module.findExportByName("dmcfgutils.dll", "CfgUtilGetConfigDataTypeName")
Interceptor.attach(CfgUtilGetConfigDataTypeName, {onLeave: function (args) {send("CfgUtilGetConfigDataTypeName");}});

var CfgUtilGetConfigSemanticTypeName = Module.findExportByName("dmcfgutils.dll", "CfgUtilGetConfigSemanticTypeName")
Interceptor.attach(CfgUtilGetConfigSemanticTypeName, {onLeave: function (args) {send("CfgUtilGetConfigSemanticTypeName");}});

var CfgUtilGetElementName = Module.findExportByName("dmcfgutils.dll", "CfgUtilGetElementName")
Interceptor.attach(CfgUtilGetElementName, {onLeave: function (args) {send("CfgUtilGetElementName");}});

var CfgUtilGetName = Module.findExportByName("dmcfgutils.dll", "CfgUtilGetName")
Interceptor.attach(CfgUtilGetName, {onLeave: function (args) {send("CfgUtilGetName");}});

var CfgUtilGetParmAttributeName = Module.findExportByName("dmcfgutils.dll", "CfgUtilGetParmAttributeName")
Interceptor.attach(CfgUtilGetParmAttributeName, {onLeave: function (args) {send("CfgUtilGetParmAttributeName");}});

var CfgUtilParseConfigDataTypeName = Module.findExportByName("dmcfgutils.dll", "CfgUtilParseConfigDataTypeName")
Interceptor.attach(CfgUtilParseConfigDataTypeName, {onLeave: function (args) {send("CfgUtilParseConfigDataTypeName");}});

var CfgUtilParseConfigSemanticTypeName = Module.findExportByName("dmcfgutils.dll", "CfgUtilParseConfigSemanticTypeName")
Interceptor.attach(CfgUtilParseConfigSemanticTypeName, {onLeave: function (args) {send("CfgUtilParseConfigSemanticTypeName");}});

var CfgUtilParseElementName = Module.findExportByName("dmcfgutils.dll", "CfgUtilParseElementName")
Interceptor.attach(CfgUtilParseElementName, {onLeave: function (args) {send("CfgUtilParseElementName");}});

var CfgUtilParseName = Module.findExportByName("dmcfgutils.dll", "CfgUtilParseName")
Interceptor.attach(CfgUtilParseName, {onLeave: function (args) {send("CfgUtilParseName");}});

var CfgUtilParseNameByLen = Module.findExportByName("dmcfgutils.dll", "CfgUtilParseNameByLen")
Interceptor.attach(CfgUtilParseNameByLen, {onLeave: function (args) {send("CfgUtilParseNameByLen");}});

var CfgUtilParseParmAttributeName = Module.findExportByName("dmcfgutils.dll", "CfgUtilParseParmAttributeName")
Interceptor.attach(CfgUtilParseParmAttributeName, {onLeave: function (args) {send("CfgUtilParseParmAttributeName");}});

var CleanupPolicyComplianceEnsuranceForSource = Module.findExportByName("dmcfgutils.dll", "CleanupPolicyComplianceEnsuranceForSource")
Interceptor.attach(CleanupPolicyComplianceEnsuranceForSource, {onLeave: function (args) {send("CleanupPolicyComplianceEnsuranceForSource");}});

var EnsurePolicyComplianceForSource = Module.findExportByName("dmcfgutils.dll", "EnsurePolicyComplianceForSource")
Interceptor.attach(EnsurePolicyComplianceForSource, {onLeave: function (args) {send("EnsurePolicyComplianceForSource");}});

var SyncGetDeviceUniqueID = Module.findExportByName("dmcfgutils.dll", "SyncGetDeviceUniqueID")
Interceptor.attach(SyncGetDeviceUniqueID, {onLeave: function (args) {send("SyncGetDeviceUniqueID");}});

var VerifyFullAdminPrivileges = Module.findExportByName("dmcfgutils.dll", "VerifyFullAdminPrivileges")
Interceptor.attach(VerifyFullAdminPrivileges, {onLeave: function (args) {send("VerifyFullAdminPrivileges");}});

