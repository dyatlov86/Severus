var AllowPermLayer = Module.findExportByName("apphelp.dll", "AllowPermLayer")
Interceptor.attach(AllowPermLayer, {onLeave: function (args) {send("AllowPermLayer");}});

var ApphelpCheckExe = Module.findExportByName("apphelp.dll", "ApphelpCheckExe")
Interceptor.attach(ApphelpCheckExe, {onLeave: function (args) {send("ApphelpCheckExe");}});

var ApphelpCheckIME = Module.findExportByName("apphelp.dll", "ApphelpCheckIME")
Interceptor.attach(ApphelpCheckIME, {onLeave: function (args) {send("ApphelpCheckIME");}});

var ApphelpCheckInstallShieldPackage = Module.findExportByName("apphelp.dll", "ApphelpCheckInstallShieldPackage")
Interceptor.attach(ApphelpCheckInstallShieldPackage, {onLeave: function (args) {send("ApphelpCheckInstallShieldPackage");}});

var ApphelpCheckModule = Module.findExportByName("apphelp.dll", "ApphelpCheckModule")
Interceptor.attach(ApphelpCheckModule, {onLeave: function (args) {send("ApphelpCheckModule");}});

var ApphelpCheckMsiPackage = Module.findExportByName("apphelp.dll", "ApphelpCheckMsiPackage")
Interceptor.attach(ApphelpCheckMsiPackage, {onLeave: function (args) {send("ApphelpCheckMsiPackage");}});

var ApphelpCheckRunApp = Module.findExportByName("apphelp.dll", "ApphelpCheckRunApp")
Interceptor.attach(ApphelpCheckRunApp, {onLeave: function (args) {send("ApphelpCheckRunApp");}});

var ApphelpCheckRunAppEx = Module.findExportByName("apphelp.dll", "ApphelpCheckRunAppEx")
Interceptor.attach(ApphelpCheckRunAppEx, {onLeave: function (args) {send("ApphelpCheckRunAppEx");}});

var ApphelpCheckShellObject = Module.findExportByName("apphelp.dll", "ApphelpCheckShellObject")
Interceptor.attach(ApphelpCheckShellObject, {onLeave: function (args) {send("ApphelpCheckShellObject");}});

var ApphelpChpeModSettingsFromQueryResult = Module.findExportByName("apphelp.dll", "ApphelpChpeModSettingsFromQueryResult")
Interceptor.attach(ApphelpChpeModSettingsFromQueryResult, {onLeave: function (args) {send("ApphelpChpeModSettingsFromQueryResult");}});

var ApphelpCreateAppcompatData = Module.findExportByName("apphelp.dll", "ApphelpCreateAppcompatData")
Interceptor.attach(ApphelpCreateAppcompatData, {onLeave: function (args) {send("ApphelpCreateAppcompatData");}});

var ApphelpFixMsiPackage = Module.findExportByName("apphelp.dll", "ApphelpFixMsiPackage")
Interceptor.attach(ApphelpFixMsiPackage, {onLeave: function (args) {send("ApphelpFixMsiPackage");}});

var ApphelpFixMsiPackageExe = Module.findExportByName("apphelp.dll", "ApphelpFixMsiPackageExe")
Interceptor.attach(ApphelpFixMsiPackageExe, {onLeave: function (args) {send("ApphelpFixMsiPackageExe");}});

var ApphelpFreeFileAttributes = Module.findExportByName("apphelp.dll", "ApphelpFreeFileAttributes")
Interceptor.attach(ApphelpFreeFileAttributes, {onLeave: function (args) {send("ApphelpFreeFileAttributes");}});

var ApphelpGetFileAttributes = Module.findExportByName("apphelp.dll", "ApphelpGetFileAttributes")
Interceptor.attach(ApphelpGetFileAttributes, {onLeave: function (args) {send("ApphelpGetFileAttributes");}});

var ApphelpGetMsiProperties = Module.findExportByName("apphelp.dll", "ApphelpGetMsiProperties")
Interceptor.attach(ApphelpGetMsiProperties, {onLeave: function (args) {send("ApphelpGetMsiProperties");}});

var ApphelpGetNTVDMInfo = Module.findExportByName("apphelp.dll", "ApphelpGetNTVDMInfo")
Interceptor.attach(ApphelpGetNTVDMInfo, {onLeave: function (args) {send("ApphelpGetNTVDMInfo");}});

var ApphelpGetShimDebugLevel = Module.findExportByName("apphelp.dll", "ApphelpGetShimDebugLevel")
Interceptor.attach(ApphelpGetShimDebugLevel, {onLeave: function (args) {send("ApphelpGetShimDebugLevel");}});

var ApphelpIsPortMonAllowed = Module.findExportByName("apphelp.dll", "ApphelpIsPortMonAllowed")
Interceptor.attach(ApphelpIsPortMonAllowed, {onLeave: function (args) {send("ApphelpIsPortMonAllowed");}});

var ApphelpNotifyPcaOfProblem = Module.findExportByName("apphelp.dll", "ApphelpNotifyPcaOfProblem")
Interceptor.attach(ApphelpNotifyPcaOfProblem, {onLeave: function (args) {send("ApphelpNotifyPcaOfProblem");}});

var ApphelpParseModuleData = Module.findExportByName("apphelp.dll", "ApphelpParseModuleData")
Interceptor.attach(ApphelpParseModuleData, {onLeave: function (args) {send("ApphelpParseModuleData");}});

var ApphelpQueryModSettingsAlloc = Module.findExportByName("apphelp.dll", "ApphelpQueryModSettingsAlloc")
Interceptor.attach(ApphelpQueryModSettingsAlloc, {onLeave: function (args) {send("ApphelpQueryModSettingsAlloc");}});

var ApphelpQueryModuleData = Module.findExportByName("apphelp.dll", "ApphelpQueryModuleData")
Interceptor.attach(ApphelpQueryModuleData, {onLeave: function (args) {send("ApphelpQueryModuleData");}});

var ApphelpQueryModuleDataEx = Module.findExportByName("apphelp.dll", "ApphelpQueryModuleDataEx")
Interceptor.attach(ApphelpQueryModuleDataEx, {onLeave: function (args) {send("ApphelpQueryModuleDataEx");}});

var ApphelpShowDialog = Module.findExportByName("apphelp.dll", "ApphelpShowDialog")
Interceptor.attach(ApphelpShowDialog, {onLeave: function (args) {send("ApphelpShowDialog");}});

var ApphelpUpdateCacheEntry = Module.findExportByName("apphelp.dll", "ApphelpUpdateCacheEntry")
Interceptor.attach(ApphelpUpdateCacheEntry, {onLeave: function (args) {send("ApphelpUpdateCacheEntry");}});

var GetPermLayers = Module.findExportByName("apphelp.dll", "GetPermLayers")
Interceptor.attach(GetPermLayers, {onLeave: function (args) {send("GetPermLayers");}});

var SE_AddHookset = Module.findExportByName("apphelp.dll", "SE_AddHookset")
Interceptor.attach(SE_AddHookset, {onLeave: function (args) {send("SE_AddHookset");}});

var SE_CALLBACK_AddHook = Module.findExportByName("apphelp.dll", "SE_CALLBACK_AddHook")
Interceptor.attach(SE_CALLBACK_AddHook, {onLeave: function (args) {send("SE_CALLBACK_AddHook");}});

var SE_CALLBACK_Lookup = Module.findExportByName("apphelp.dll", "SE_CALLBACK_Lookup")
Interceptor.attach(SE_CALLBACK_Lookup, {onLeave: function (args) {send("SE_CALLBACK_Lookup");}});

var SE_COM_AddHook = Module.findExportByName("apphelp.dll", "SE_COM_AddHook")
Interceptor.attach(SE_COM_AddHook, {onLeave: function (args) {send("SE_COM_AddHook");}});

var SE_COM_AddServer = Module.findExportByName("apphelp.dll", "SE_COM_AddServer")
Interceptor.attach(SE_COM_AddServer, {onLeave: function (args) {send("SE_COM_AddServer");}});

var SE_COM_HookInterface = Module.findExportByName("apphelp.dll", "SE_COM_HookInterface")
Interceptor.attach(SE_COM_HookInterface, {onLeave: function (args) {send("SE_COM_HookInterface");}});

var SE_COM_HookObject = Module.findExportByName("apphelp.dll", "SE_COM_HookObject")
Interceptor.attach(SE_COM_HookObject, {onLeave: function (args) {send("SE_COM_HookObject");}});

var SE_COM_Lookup = Module.findExportByName("apphelp.dll", "SE_COM_Lookup")
Interceptor.attach(SE_COM_Lookup, {onLeave: function (args) {send("SE_COM_Lookup");}});

var SE_DllLoaded = Module.findExportByName("apphelp.dll", "SE_DllLoaded")
Interceptor.attach(SE_DllLoaded, {onLeave: function (args) {send("SE_DllLoaded");}});

var SE_DllUnloaded = Module.findExportByName("apphelp.dll", "SE_DllUnloaded")
Interceptor.attach(SE_DllUnloaded, {onLeave: function (args) {send("SE_DllUnloaded");}});

var SE_DynamicShim = Module.findExportByName("apphelp.dll", "SE_DynamicShim")
Interceptor.attach(SE_DynamicShim, {onLeave: function (args) {send("SE_DynamicShim");}});

var SE_GetHookAPIs = Module.findExportByName("apphelp.dll", "SE_GetHookAPIs")
Interceptor.attach(SE_GetHookAPIs, {onLeave: function (args) {send("SE_GetHookAPIs");}});

var SE_GetMaxShimCount = Module.findExportByName("apphelp.dll", "SE_GetMaxShimCount")
Interceptor.attach(SE_GetMaxShimCount, {onLeave: function (args) {send("SE_GetMaxShimCount");}});

var SE_GetProcAddressForCaller = Module.findExportByName("apphelp.dll", "SE_GetProcAddressForCaller")
Interceptor.attach(SE_GetProcAddressForCaller, {onLeave: function (args) {send("SE_GetProcAddressForCaller");}});

var SE_GetProcAddressIgnoreIncExc = Module.findExportByName("apphelp.dll", "SE_GetProcAddressIgnoreIncExc")
Interceptor.attach(SE_GetProcAddressIgnoreIncExc, {onLeave: function (args) {send("SE_GetProcAddressIgnoreIncExc");}});

var SE_GetProcAddressLoad = Module.findExportByName("apphelp.dll", "SE_GetProcAddressLoad")
Interceptor.attach(SE_GetProcAddressLoad, {onLeave: function (args) {send("SE_GetProcAddressLoad");}});

var SE_GetShimCount = Module.findExportByName("apphelp.dll", "SE_GetShimCount")
Interceptor.attach(SE_GetShimCount, {onLeave: function (args) {send("SE_GetShimCount");}});

var SE_GetShimId = Module.findExportByName("apphelp.dll", "SE_GetShimId")
Interceptor.attach(SE_GetShimId, {onLeave: function (args) {send("SE_GetShimId");}});

var SE_InitializeEngine = Module.findExportByName("apphelp.dll", "SE_InitializeEngine")
Interceptor.attach(SE_InitializeEngine, {onLeave: function (args) {send("SE_InitializeEngine");}});

var SE_InstallAfterInit = Module.findExportByName("apphelp.dll", "SE_InstallAfterInit")
Interceptor.attach(SE_InstallAfterInit, {onLeave: function (args) {send("SE_InstallAfterInit");}});

var SE_InstallBeforeInit = Module.findExportByName("apphelp.dll", "SE_InstallBeforeInit")
Interceptor.attach(SE_InstallBeforeInit, {onLeave: function (args) {send("SE_InstallBeforeInit");}});

var SE_IsShimDll = Module.findExportByName("apphelp.dll", "SE_IsShimDll")
Interceptor.attach(SE_IsShimDll, {onLeave: function (args) {send("SE_IsShimDll");}});

var SE_LdrEntryRemoved = Module.findExportByName("apphelp.dll", "SE_LdrEntryRemoved")
Interceptor.attach(SE_LdrEntryRemoved, {onLeave: function (args) {send("SE_LdrEntryRemoved");}});

var SE_LdrResolveDllName = Module.findExportByName("apphelp.dll", "SE_LdrResolveDllName")
Interceptor.attach(SE_LdrResolveDllName, {onLeave: function (args) {send("SE_LdrResolveDllName");}});

var SE_LookupAddress = Module.findExportByName("apphelp.dll", "SE_LookupAddress")
Interceptor.attach(SE_LookupAddress, {onLeave: function (args) {send("SE_LookupAddress");}});

var SE_LookupCaller = Module.findExportByName("apphelp.dll", "SE_LookupCaller")
Interceptor.attach(SE_LookupCaller, {onLeave: function (args) {send("SE_LookupCaller");}});

var SE_ProcessDying = Module.findExportByName("apphelp.dll", "SE_ProcessDying")
Interceptor.attach(SE_ProcessDying, {onLeave: function (args) {send("SE_ProcessDying");}});

var SE_ShimDPF = Module.findExportByName("apphelp.dll", "SE_ShimDPF")
Interceptor.attach(SE_ShimDPF, {onLeave: function (args) {send("SE_ShimDPF");}});

var SE_ShimDllLoaded = Module.findExportByName("apphelp.dll", "SE_ShimDllLoaded")
Interceptor.attach(SE_ShimDllLoaded, {onLeave: function (args) {send("SE_ShimDllLoaded");}});

var SE_WINRT_AddHook = Module.findExportByName("apphelp.dll", "SE_WINRT_AddHook")
Interceptor.attach(SE_WINRT_AddHook, {onLeave: function (args) {send("SE_WINRT_AddHook");}});

var SE_WINRT_HookObject = Module.findExportByName("apphelp.dll", "SE_WINRT_HookObject")
Interceptor.attach(SE_WINRT_HookObject, {onLeave: function (args) {send("SE_WINRT_HookObject");}});

var SdbAddLayerTagRefToQuery = Module.findExportByName("apphelp.dll", "SdbAddLayerTagRefToQuery")
Interceptor.attach(SdbAddLayerTagRefToQuery, {onLeave: function (args) {send("SdbAddLayerTagRefToQuery");}});

var SdbApphelpNotify = Module.findExportByName("apphelp.dll", "SdbApphelpNotify")
Interceptor.attach(SdbApphelpNotify, {onLeave: function (args) {send("SdbApphelpNotify");}});

var SdbApphelpNotifyEx = Module.findExportByName("apphelp.dll", "SdbApphelpNotifyEx")
Interceptor.attach(SdbApphelpNotifyEx, {onLeave: function (args) {send("SdbApphelpNotifyEx");}});

var SdbApphelpNotifyEx2 = Module.findExportByName("apphelp.dll", "SdbApphelpNotifyEx2")
Interceptor.attach(SdbApphelpNotifyEx2, {onLeave: function (args) {send("SdbApphelpNotifyEx2");}});

var SdbBeginWriteListTag = Module.findExportByName("apphelp.dll", "SdbBeginWriteListTag")
Interceptor.attach(SdbBeginWriteListTag, {onLeave: function (args) {send("SdbBeginWriteListTag");}});

var SdbBuildCompatEnvVariables = Module.findExportByName("apphelp.dll", "SdbBuildCompatEnvVariables")
Interceptor.attach(SdbBuildCompatEnvVariables, {onLeave: function (args) {send("SdbBuildCompatEnvVariables");}});

var SdbCloseApphelpInformation = Module.findExportByName("apphelp.dll", "SdbCloseApphelpInformation")
Interceptor.attach(SdbCloseApphelpInformation, {onLeave: function (args) {send("SdbCloseApphelpInformation");}});

var SdbCloseDatabase = Module.findExportByName("apphelp.dll", "SdbCloseDatabase")
Interceptor.attach(SdbCloseDatabase, {onLeave: function (args) {send("SdbCloseDatabase");}});

var SdbCloseDatabaseWrite = Module.findExportByName("apphelp.dll", "SdbCloseDatabaseWrite")
Interceptor.attach(SdbCloseDatabaseWrite, {onLeave: function (args) {send("SdbCloseDatabaseWrite");}});

var SdbCloseLocalDatabase = Module.findExportByName("apphelp.dll", "SdbCloseLocalDatabase")
Interceptor.attach(SdbCloseLocalDatabase, {onLeave: function (args) {send("SdbCloseLocalDatabase");}});

var SdbCommitIndexes = Module.findExportByName("apphelp.dll", "SdbCommitIndexes")
Interceptor.attach(SdbCommitIndexes, {onLeave: function (args) {send("SdbCommitIndexes");}});

var SdbCreateDatabase = Module.findExportByName("apphelp.dll", "SdbCreateDatabase")
Interceptor.attach(SdbCreateDatabase, {onLeave: function (args) {send("SdbCreateDatabase");}});

var SdbCreateHelpCenterURL = Module.findExportByName("apphelp.dll", "SdbCreateHelpCenterURL")
Interceptor.attach(SdbCreateHelpCenterURL, {onLeave: function (args) {send("SdbCreateHelpCenterURL");}});

var SdbCreateMsiTransformFile = Module.findExportByName("apphelp.dll", "SdbCreateMsiTransformFile")
Interceptor.attach(SdbCreateMsiTransformFile, {onLeave: function (args) {send("SdbCreateMsiTransformFile");}});

var SdbDeclareIndex = Module.findExportByName("apphelp.dll", "SdbDeclareIndex")
Interceptor.attach(SdbDeclareIndex, {onLeave: function (args) {send("SdbDeclareIndex");}});

var SdbDeletePermLayerKeys = Module.findExportByName("apphelp.dll", "SdbDeletePermLayerKeys")
Interceptor.attach(SdbDeletePermLayerKeys, {onLeave: function (args) {send("SdbDeletePermLayerKeys");}});

var SdbDumpSearchPathPartCaches = Module.findExportByName("apphelp.dll", "SdbDumpSearchPathPartCaches")
Interceptor.attach(SdbDumpSearchPathPartCaches, {onLeave: function (args) {send("SdbDumpSearchPathPartCaches");}});

var SdbEndWriteListTag = Module.findExportByName("apphelp.dll", "SdbEndWriteListTag")
Interceptor.attach(SdbEndWriteListTag, {onLeave: function (args) {send("SdbEndWriteListTag");}});

var SdbEnumMsiTransforms = Module.findExportByName("apphelp.dll", "SdbEnumMsiTransforms")
Interceptor.attach(SdbEnumMsiTransforms, {onLeave: function (args) {send("SdbEnumMsiTransforms");}});

var SdbEscapeApphelpURL = Module.findExportByName("apphelp.dll", "SdbEscapeApphelpURL")
Interceptor.attach(SdbEscapeApphelpURL, {onLeave: function (args) {send("SdbEscapeApphelpURL");}});

var SdbFindCustomActionForPackage = Module.findExportByName("apphelp.dll", "SdbFindCustomActionForPackage")
Interceptor.attach(SdbFindCustomActionForPackage, {onLeave: function (args) {send("SdbFindCustomActionForPackage");}});

var SdbFindFirstDWORDIndexedTag = Module.findExportByName("apphelp.dll", "SdbFindFirstDWORDIndexedTag")
Interceptor.attach(SdbFindFirstDWORDIndexedTag, {onLeave: function (args) {send("SdbFindFirstDWORDIndexedTag");}});

var SdbFindFirstGUIDIndexedTag = Module.findExportByName("apphelp.dll", "SdbFindFirstGUIDIndexedTag")
Interceptor.attach(SdbFindFirstGUIDIndexedTag, {onLeave: function (args) {send("SdbFindFirstGUIDIndexedTag");}});

var SdbFindFirstMsiPackage = Module.findExportByName("apphelp.dll", "SdbFindFirstMsiPackage")
Interceptor.attach(SdbFindFirstMsiPackage, {onLeave: function (args) {send("SdbFindFirstMsiPackage");}});

var SdbFindFirstMsiPackage_Str = Module.findExportByName("apphelp.dll", "SdbFindFirstMsiPackage_Str")
Interceptor.attach(SdbFindFirstMsiPackage_Str, {onLeave: function (args) {send("SdbFindFirstMsiPackage_Str");}});

var SdbFindFirstNamedTag = Module.findExportByName("apphelp.dll", "SdbFindFirstNamedTag")
Interceptor.attach(SdbFindFirstNamedTag, {onLeave: function (args) {send("SdbFindFirstNamedTag");}});

var SdbFindFirstStringIndexedTag = Module.findExportByName("apphelp.dll", "SdbFindFirstStringIndexedTag")
Interceptor.attach(SdbFindFirstStringIndexedTag, {onLeave: function (args) {send("SdbFindFirstStringIndexedTag");}});

var SdbFindFirstTag = Module.findExportByName("apphelp.dll", "SdbFindFirstTag")
Interceptor.attach(SdbFindFirstTag, {onLeave: function (args) {send("SdbFindFirstTag");}});

var SdbFindFirstTagRef = Module.findExportByName("apphelp.dll", "SdbFindFirstTagRef")
Interceptor.attach(SdbFindFirstTagRef, {onLeave: function (args) {send("SdbFindFirstTagRef");}});

var SdbFindMsiPackageByID = Module.findExportByName("apphelp.dll", "SdbFindMsiPackageByID")
Interceptor.attach(SdbFindMsiPackageByID, {onLeave: function (args) {send("SdbFindMsiPackageByID");}});

var SdbFindNextDWORDIndexedTag = Module.findExportByName("apphelp.dll", "SdbFindNextDWORDIndexedTag")
Interceptor.attach(SdbFindNextDWORDIndexedTag, {onLeave: function (args) {send("SdbFindNextDWORDIndexedTag");}});

var SdbFindNextGUIDIndexedTag = Module.findExportByName("apphelp.dll", "SdbFindNextGUIDIndexedTag")
Interceptor.attach(SdbFindNextGUIDIndexedTag, {onLeave: function (args) {send("SdbFindNextGUIDIndexedTag");}});

var SdbFindNextMsiPackage = Module.findExportByName("apphelp.dll", "SdbFindNextMsiPackage")
Interceptor.attach(SdbFindNextMsiPackage, {onLeave: function (args) {send("SdbFindNextMsiPackage");}});

var SdbFindNextStringIndexedTag = Module.findExportByName("apphelp.dll", "SdbFindNextStringIndexedTag")
Interceptor.attach(SdbFindNextStringIndexedTag, {onLeave: function (args) {send("SdbFindNextStringIndexedTag");}});

var SdbFindNextTag = Module.findExportByName("apphelp.dll", "SdbFindNextTag")
Interceptor.attach(SdbFindNextTag, {onLeave: function (args) {send("SdbFindNextTag");}});

var SdbFindNextTagRef = Module.findExportByName("apphelp.dll", "SdbFindNextTagRef")
Interceptor.attach(SdbFindNextTagRef, {onLeave: function (args) {send("SdbFindNextTagRef");}});

var SdbFormatAttribute = Module.findExportByName("apphelp.dll", "SdbFormatAttribute")
Interceptor.attach(SdbFormatAttribute, {onLeave: function (args) {send("SdbFormatAttribute");}});

var SdbFreeDatabaseInformation = Module.findExportByName("apphelp.dll", "SdbFreeDatabaseInformation")
Interceptor.attach(SdbFreeDatabaseInformation, {onLeave: function (args) {send("SdbFreeDatabaseInformation");}});

var SdbFreeFileAttributes = Module.findExportByName("apphelp.dll", "SdbFreeFileAttributes")
Interceptor.attach(SdbFreeFileAttributes, {onLeave: function (args) {send("SdbFreeFileAttributes");}});

var SdbFreeFileInfo = Module.findExportByName("apphelp.dll", "SdbFreeFileInfo")
Interceptor.attach(SdbFreeFileInfo, {onLeave: function (args) {send("SdbFreeFileInfo");}});

var SdbFreeFlagInfo = Module.findExportByName("apphelp.dll", "SdbFreeFlagInfo")
Interceptor.attach(SdbFreeFlagInfo, {onLeave: function (args) {send("SdbFreeFlagInfo");}});

var SdbGUIDFromString = Module.findExportByName("apphelp.dll", "SdbGUIDFromString")
Interceptor.attach(SdbGUIDFromString, {onLeave: function (args) {send("SdbGUIDFromString");}});

var SdbGUIDToString = Module.findExportByName("apphelp.dll", "SdbGUIDToString")
Interceptor.attach(SdbGUIDToString, {onLeave: function (args) {send("SdbGUIDToString");}});

var SdbGetAppCompatDataSize = Module.findExportByName("apphelp.dll", "SdbGetAppCompatDataSize")
Interceptor.attach(SdbGetAppCompatDataSize, {onLeave: function (args) {send("SdbGetAppCompatDataSize");}});

var SdbGetAppPatchDir = Module.findExportByName("apphelp.dll", "SdbGetAppPatchDir")
Interceptor.attach(SdbGetAppPatchDir, {onLeave: function (args) {send("SdbGetAppPatchDir");}});

var SdbGetBinaryTagData = Module.findExportByName("apphelp.dll", "SdbGetBinaryTagData")
Interceptor.attach(SdbGetBinaryTagData, {onLeave: function (args) {send("SdbGetBinaryTagData");}});

var SdbGetDatabaseGUID = Module.findExportByName("apphelp.dll", "SdbGetDatabaseGUID")
Interceptor.attach(SdbGetDatabaseGUID, {onLeave: function (args) {send("SdbGetDatabaseGUID");}});

var SdbGetDatabaseID = Module.findExportByName("apphelp.dll", "SdbGetDatabaseID")
Interceptor.attach(SdbGetDatabaseID, {onLeave: function (args) {send("SdbGetDatabaseID");}});

var SdbGetDatabaseInformation = Module.findExportByName("apphelp.dll", "SdbGetDatabaseInformation")
Interceptor.attach(SdbGetDatabaseInformation, {onLeave: function (args) {send("SdbGetDatabaseInformation");}});

var SdbGetDatabaseInformationByName = Module.findExportByName("apphelp.dll", "SdbGetDatabaseInformationByName")
Interceptor.attach(SdbGetDatabaseInformationByName, {onLeave: function (args) {send("SdbGetDatabaseInformationByName");}});

var SdbGetDatabaseMatch = Module.findExportByName("apphelp.dll", "SdbGetDatabaseMatch")
Interceptor.attach(SdbGetDatabaseMatch, {onLeave: function (args) {send("SdbGetDatabaseMatch");}});

var SdbGetDatabaseVersion = Module.findExportByName("apphelp.dll", "SdbGetDatabaseVersion")
Interceptor.attach(SdbGetDatabaseVersion, {onLeave: function (args) {send("SdbGetDatabaseVersion");}});

var SdbGetDllPath = Module.findExportByName("apphelp.dll", "SdbGetDllPath")
Interceptor.attach(SdbGetDllPath, {onLeave: function (args) {send("SdbGetDllPath");}});

var SdbGetEntryFlags = Module.findExportByName("apphelp.dll", "SdbGetEntryFlags")
Interceptor.attach(SdbGetEntryFlags, {onLeave: function (args) {send("SdbGetEntryFlags");}});

var SdbGetFileAttributes = Module.findExportByName("apphelp.dll", "SdbGetFileAttributes")
Interceptor.attach(SdbGetFileAttributes, {onLeave: function (args) {send("SdbGetFileAttributes");}});

var SdbGetFileImageType = Module.findExportByName("apphelp.dll", "SdbGetFileImageType")
Interceptor.attach(SdbGetFileImageType, {onLeave: function (args) {send("SdbGetFileImageType");}});

var SdbGetFileImageTypeEx = Module.findExportByName("apphelp.dll", "SdbGetFileImageTypeEx")
Interceptor.attach(SdbGetFileImageTypeEx, {onLeave: function (args) {send("SdbGetFileImageTypeEx");}});

var SdbGetFileInfo = Module.findExportByName("apphelp.dll", "SdbGetFileInfo")
Interceptor.attach(SdbGetFileInfo, {onLeave: function (args) {send("SdbGetFileInfo");}});

var SdbGetFirstChild = Module.findExportByName("apphelp.dll", "SdbGetFirstChild")
Interceptor.attach(SdbGetFirstChild, {onLeave: function (args) {send("SdbGetFirstChild");}});

var SdbGetImageType = Module.findExportByName("apphelp.dll", "SdbGetImageType")
Interceptor.attach(SdbGetImageType, {onLeave: function (args) {send("SdbGetImageType");}});

var SdbGetIndex = Module.findExportByName("apphelp.dll", "SdbGetIndex")
Interceptor.attach(SdbGetIndex, {onLeave: function (args) {send("SdbGetIndex");}});

var SdbGetItemFromItemRef = Module.findExportByName("apphelp.dll", "SdbGetItemFromItemRef")
Interceptor.attach(SdbGetItemFromItemRef, {onLeave: function (args) {send("SdbGetItemFromItemRef");}});

var SdbGetLayerName = Module.findExportByName("apphelp.dll", "SdbGetLayerName")
Interceptor.attach(SdbGetLayerName, {onLeave: function (args) {send("SdbGetLayerName");}});

var SdbGetLayerTagRef = Module.findExportByName("apphelp.dll", "SdbGetLayerTagRef")
Interceptor.attach(SdbGetLayerTagRef, {onLeave: function (args) {send("SdbGetLayerTagRef");}});

var SdbGetLocalPDB = Module.findExportByName("apphelp.dll", "SdbGetLocalPDB")
Interceptor.attach(SdbGetLocalPDB, {onLeave: function (args) {send("SdbGetLocalPDB");}});

var SdbGetMatchingExe = Module.findExportByName("apphelp.dll", "SdbGetMatchingExe")
Interceptor.attach(SdbGetMatchingExe, {onLeave: function (args) {send("SdbGetMatchingExe");}});

var SdbGetMsiPackageInformation = Module.findExportByName("apphelp.dll", "SdbGetMsiPackageInformation")
Interceptor.attach(SdbGetMsiPackageInformation, {onLeave: function (args) {send("SdbGetMsiPackageInformation");}});

var SdbGetNamedLayer = Module.findExportByName("apphelp.dll", "SdbGetNamedLayer")
Interceptor.attach(SdbGetNamedLayer, {onLeave: function (args) {send("SdbGetNamedLayer");}});

var SdbGetNextChild = Module.findExportByName("apphelp.dll", "SdbGetNextChild")
Interceptor.attach(SdbGetNextChild, {onLeave: function (args) {send("SdbGetNextChild");}});

var SdbGetNthUserSdb = Module.findExportByName("apphelp.dll", "SdbGetNthUserSdb")
Interceptor.attach(SdbGetNthUserSdb, {onLeave: function (args) {send("SdbGetNthUserSdb");}});

var SdbGetPDBFromGUID = Module.findExportByName("apphelp.dll", "SdbGetPDBFromGUID")
Interceptor.attach(SdbGetPDBFromGUID, {onLeave: function (args) {send("SdbGetPDBFromGUID");}});

var SdbGetPathCustomSdb = Module.findExportByName("apphelp.dll", "SdbGetPathCustomSdb")
Interceptor.attach(SdbGetPathCustomSdb, {onLeave: function (args) {send("SdbGetPathCustomSdb");}});

var SdbGetPathSystemSdb = Module.findExportByName("apphelp.dll", "SdbGetPathSystemSdb")
Interceptor.attach(SdbGetPathSystemSdb, {onLeave: function (args) {send("SdbGetPathSystemSdb");}});

var SdbGetPermLayerKeys = Module.findExportByName("apphelp.dll", "SdbGetPermLayerKeys")
Interceptor.attach(SdbGetPermLayerKeys, {onLeave: function (args) {send("SdbGetPermLayerKeys");}});

var SdbGetShowDebugInfoOption = Module.findExportByName("apphelp.dll", "SdbGetShowDebugInfoOption")
Interceptor.attach(SdbGetShowDebugInfoOption, {onLeave: function (args) {send("SdbGetShowDebugInfoOption");}});

var SdbGetShowDebugInfoOptionValue = Module.findExportByName("apphelp.dll", "SdbGetShowDebugInfoOptionValue")
Interceptor.attach(SdbGetShowDebugInfoOptionValue, {onLeave: function (args) {send("SdbGetShowDebugInfoOptionValue");}});

var SdbGetStandardDatabaseGUID = Module.findExportByName("apphelp.dll", "SdbGetStandardDatabaseGUID")
Interceptor.attach(SdbGetStandardDatabaseGUID, {onLeave: function (args) {send("SdbGetStandardDatabaseGUID");}});

var SdbGetStringTagPtr = Module.findExportByName("apphelp.dll", "SdbGetStringTagPtr")
Interceptor.attach(SdbGetStringTagPtr, {onLeave: function (args) {send("SdbGetStringTagPtr");}});

var SdbGetTagDataSize = Module.findExportByName("apphelp.dll", "SdbGetTagDataSize")
Interceptor.attach(SdbGetTagDataSize, {onLeave: function (args) {send("SdbGetTagDataSize");}});

var SdbGetTagFromTagID = Module.findExportByName("apphelp.dll", "SdbGetTagFromTagID")
Interceptor.attach(SdbGetTagFromTagID, {onLeave: function (args) {send("SdbGetTagFromTagID");}});

var SdbGrabMatchingInfo = Module.findExportByName("apphelp.dll", "SdbGrabMatchingInfo")
Interceptor.attach(SdbGrabMatchingInfo, {onLeave: function (args) {send("SdbGrabMatchingInfo");}});

var SdbGrabMatchingInfoEx = Module.findExportByName("apphelp.dll", "SdbGrabMatchingInfoEx")
Interceptor.attach(SdbGrabMatchingInfoEx, {onLeave: function (args) {send("SdbGrabMatchingInfoEx");}});

var SdbInitDatabase = Module.findExportByName("apphelp.dll", "SdbInitDatabase")
Interceptor.attach(SdbInitDatabase, {onLeave: function (args) {send("SdbInitDatabase");}});

var SdbInitDatabaseEx = Module.findExportByName("apphelp.dll", "SdbInitDatabaseEx")
Interceptor.attach(SdbInitDatabaseEx, {onLeave: function (args) {send("SdbInitDatabaseEx");}});

var SdbIsDbRuntimePlatformSupportedOnHost = Module.findExportByName("apphelp.dll", "SdbIsDbRuntimePlatformSupportedOnHost")
Interceptor.attach(SdbIsDbRuntimePlatformSupportedOnHost, {onLeave: function (args) {send("SdbIsDbRuntimePlatformSupportedOnHost");}});

var SdbIsNullGUID = Module.findExportByName("apphelp.dll", "SdbIsNullGUID")
Interceptor.attach(SdbIsNullGUID, {onLeave: function (args) {send("SdbIsNullGUID");}});

var SdbIsStandardDatabase = Module.findExportByName("apphelp.dll", "SdbIsStandardDatabase")
Interceptor.attach(SdbIsStandardDatabase, {onLeave: function (args) {send("SdbIsStandardDatabase");}});

var SdbIsTagrefFromLocalDB = Module.findExportByName("apphelp.dll", "SdbIsTagrefFromLocalDB")
Interceptor.attach(SdbIsTagrefFromLocalDB, {onLeave: function (args) {send("SdbIsTagrefFromLocalDB");}});

var SdbIsTagrefFromMainDB = Module.findExportByName("apphelp.dll", "SdbIsTagrefFromMainDB")
Interceptor.attach(SdbIsTagrefFromMainDB, {onLeave: function (args) {send("SdbIsTagrefFromMainDB");}});

var SdbIsTagrefFromMergeStubDB = Module.findExportByName("apphelp.dll", "SdbIsTagrefFromMergeStubDB")
Interceptor.attach(SdbIsTagrefFromMergeStubDB, {onLeave: function (args) {send("SdbIsTagrefFromMergeStubDB");}});

var SdbLoadString = Module.findExportByName("apphelp.dll", "SdbLoadString")
Interceptor.attach(SdbLoadString, {onLeave: function (args) {send("SdbLoadString");}});

var SdbMakeIndexKeyFromString = Module.findExportByName("apphelp.dll", "SdbMakeIndexKeyFromString")
Interceptor.attach(SdbMakeIndexKeyFromString, {onLeave: function (args) {send("SdbMakeIndexKeyFromString");}});

var SdbOpenApphelpDetailsDatabase = Module.findExportByName("apphelp.dll", "SdbOpenApphelpDetailsDatabase")
Interceptor.attach(SdbOpenApphelpDetailsDatabase, {onLeave: function (args) {send("SdbOpenApphelpDetailsDatabase");}});

var SdbOpenApphelpDetailsDatabaseSP = Module.findExportByName("apphelp.dll", "SdbOpenApphelpDetailsDatabaseSP")
Interceptor.attach(SdbOpenApphelpDetailsDatabaseSP, {onLeave: function (args) {send("SdbOpenApphelpDetailsDatabaseSP");}});

var SdbOpenApphelpInformation = Module.findExportByName("apphelp.dll", "SdbOpenApphelpInformation")
Interceptor.attach(SdbOpenApphelpInformation, {onLeave: function (args) {send("SdbOpenApphelpInformation");}});

var SdbOpenApphelpInformationByID = Module.findExportByName("apphelp.dll", "SdbOpenApphelpInformationByID")
Interceptor.attach(SdbOpenApphelpInformationByID, {onLeave: function (args) {send("SdbOpenApphelpInformationByID");}});

var SdbOpenApphelpResourceFile = Module.findExportByName("apphelp.dll", "SdbOpenApphelpResourceFile")
Interceptor.attach(SdbOpenApphelpResourceFile, {onLeave: function (args) {send("SdbOpenApphelpResourceFile");}});

var SdbOpenDatabase = Module.findExportByName("apphelp.dll", "SdbOpenDatabase")
Interceptor.attach(SdbOpenDatabase, {onLeave: function (args) {send("SdbOpenDatabase");}});

var SdbOpenDbFromGuid = Module.findExportByName("apphelp.dll", "SdbOpenDbFromGuid")
Interceptor.attach(SdbOpenDbFromGuid, {onLeave: function (args) {send("SdbOpenDbFromGuid");}});

var SdbOpenLocalDatabase = Module.findExportByName("apphelp.dll", "SdbOpenLocalDatabase")
Interceptor.attach(SdbOpenLocalDatabase, {onLeave: function (args) {send("SdbOpenLocalDatabase");}});

var SdbPackAppCompatData = Module.findExportByName("apphelp.dll", "SdbPackAppCompatData")
Interceptor.attach(SdbPackAppCompatData, {onLeave: function (args) {send("SdbPackAppCompatData");}});

var SdbQueryApphelpInformation = Module.findExportByName("apphelp.dll", "SdbQueryApphelpInformation")
Interceptor.attach(SdbQueryApphelpInformation, {onLeave: function (args) {send("SdbQueryApphelpInformation");}});

var SdbQueryBlockUpgrade = Module.findExportByName("apphelp.dll", "SdbQueryBlockUpgrade")
Interceptor.attach(SdbQueryBlockUpgrade, {onLeave: function (args) {send("SdbQueryBlockUpgrade");}});

var SdbQueryContext = Module.findExportByName("apphelp.dll", "SdbQueryContext")
Interceptor.attach(SdbQueryContext, {onLeave: function (args) {send("SdbQueryContext");}});

var SdbQueryData = Module.findExportByName("apphelp.dll", "SdbQueryData")
Interceptor.attach(SdbQueryData, {onLeave: function (args) {send("SdbQueryData");}});

var SdbQueryDataEx = Module.findExportByName("apphelp.dll", "SdbQueryDataEx")
Interceptor.attach(SdbQueryDataEx, {onLeave: function (args) {send("SdbQueryDataEx");}});

var SdbQueryDataExTagID = Module.findExportByName("apphelp.dll", "SdbQueryDataExTagID")
Interceptor.attach(SdbQueryDataExTagID, {onLeave: function (args) {send("SdbQueryDataExTagID");}});

var SdbQueryFlagInfo = Module.findExportByName("apphelp.dll", "SdbQueryFlagInfo")
Interceptor.attach(SdbQueryFlagInfo, {onLeave: function (args) {send("SdbQueryFlagInfo");}});

var SdbQueryFlagMask = Module.findExportByName("apphelp.dll", "SdbQueryFlagMask")
Interceptor.attach(SdbQueryFlagMask, {onLeave: function (args) {send("SdbQueryFlagMask");}});

var SdbQueryName = Module.findExportByName("apphelp.dll", "SdbQueryName")
Interceptor.attach(SdbQueryName, {onLeave: function (args) {send("SdbQueryName");}});

var SdbQueryReinstallUpgrade = Module.findExportByName("apphelp.dll", "SdbQueryReinstallUpgrade")
Interceptor.attach(SdbQueryReinstallUpgrade, {onLeave: function (args) {send("SdbQueryReinstallUpgrade");}});

var SdbReadApphelpData = Module.findExportByName("apphelp.dll", "SdbReadApphelpData")
Interceptor.attach(SdbReadApphelpData, {onLeave: function (args) {send("SdbReadApphelpData");}});

var SdbReadApphelpDetailsData = Module.findExportByName("apphelp.dll", "SdbReadApphelpDetailsData")
Interceptor.attach(SdbReadApphelpDetailsData, {onLeave: function (args) {send("SdbReadApphelpDetailsData");}});

var SdbReadBYTETag = Module.findExportByName("apphelp.dll", "SdbReadBYTETag")
Interceptor.attach(SdbReadBYTETag, {onLeave: function (args) {send("SdbReadBYTETag");}});

var SdbReadBYTETagRef = Module.findExportByName("apphelp.dll", "SdbReadBYTETagRef")
Interceptor.attach(SdbReadBYTETagRef, {onLeave: function (args) {send("SdbReadBYTETagRef");}});

var SdbReadBinaryTag = Module.findExportByName("apphelp.dll", "SdbReadBinaryTag")
Interceptor.attach(SdbReadBinaryTag, {onLeave: function (args) {send("SdbReadBinaryTag");}});

var SdbReadDWORDTag = Module.findExportByName("apphelp.dll", "SdbReadDWORDTag")
Interceptor.attach(SdbReadDWORDTag, {onLeave: function (args) {send("SdbReadDWORDTag");}});

var SdbReadDWORDTagRef = Module.findExportByName("apphelp.dll", "SdbReadDWORDTagRef")
Interceptor.attach(SdbReadDWORDTagRef, {onLeave: function (args) {send("SdbReadDWORDTagRef");}});

var SdbReadEntryInformation = Module.findExportByName("apphelp.dll", "SdbReadEntryInformation")
Interceptor.attach(SdbReadEntryInformation, {onLeave: function (args) {send("SdbReadEntryInformation");}});

var SdbReadMsiTransformInfo = Module.findExportByName("apphelp.dll", "SdbReadMsiTransformInfo")
Interceptor.attach(SdbReadMsiTransformInfo, {onLeave: function (args) {send("SdbReadMsiTransformInfo");}});

var SdbReadPatchBits = Module.findExportByName("apphelp.dll", "SdbReadPatchBits")
Interceptor.attach(SdbReadPatchBits, {onLeave: function (args) {send("SdbReadPatchBits");}});

var SdbReadQWORDTag = Module.findExportByName("apphelp.dll", "SdbReadQWORDTag")
Interceptor.attach(SdbReadQWORDTag, {onLeave: function (args) {send("SdbReadQWORDTag");}});

var SdbReadQWORDTagRef = Module.findExportByName("apphelp.dll", "SdbReadQWORDTagRef")
Interceptor.attach(SdbReadQWORDTagRef, {onLeave: function (args) {send("SdbReadQWORDTagRef");}});

var SdbReadStringTag = Module.findExportByName("apphelp.dll", "SdbReadStringTag")
Interceptor.attach(SdbReadStringTag, {onLeave: function (args) {send("SdbReadStringTag");}});

var SdbReadStringTagRef = Module.findExportByName("apphelp.dll", "SdbReadStringTagRef")
Interceptor.attach(SdbReadStringTagRef, {onLeave: function (args) {send("SdbReadStringTagRef");}});

var SdbReadWORDTag = Module.findExportByName("apphelp.dll", "SdbReadWORDTag")
Interceptor.attach(SdbReadWORDTag, {onLeave: function (args) {send("SdbReadWORDTag");}});

var SdbReadWORDTagRef = Module.findExportByName("apphelp.dll", "SdbReadWORDTagRef")
Interceptor.attach(SdbReadWORDTagRef, {onLeave: function (args) {send("SdbReadWORDTagRef");}});

var SdbRegisterDatabase = Module.findExportByName("apphelp.dll", "SdbRegisterDatabase")
Interceptor.attach(SdbRegisterDatabase, {onLeave: function (args) {send("SdbRegisterDatabase");}});

var SdbRegisterDatabaseEx = Module.findExportByName("apphelp.dll", "SdbRegisterDatabaseEx")
Interceptor.attach(SdbRegisterDatabaseEx, {onLeave: function (args) {send("SdbRegisterDatabaseEx");}});

var SdbReleaseDatabase = Module.findExportByName("apphelp.dll", "SdbReleaseDatabase")
Interceptor.attach(SdbReleaseDatabase, {onLeave: function (args) {send("SdbReleaseDatabase");}});

var SdbReleaseMatchingExe = Module.findExportByName("apphelp.dll", "SdbReleaseMatchingExe")
Interceptor.attach(SdbReleaseMatchingExe, {onLeave: function (args) {send("SdbReleaseMatchingExe");}});

var SdbResolveDatabase = Module.findExportByName("apphelp.dll", "SdbResolveDatabase")
Interceptor.attach(SdbResolveDatabase, {onLeave: function (args) {send("SdbResolveDatabase");}});

var SdbSetApphelpDebugParameters = Module.findExportByName("apphelp.dll", "SdbSetApphelpDebugParameters")
Interceptor.attach(SdbSetApphelpDebugParameters, {onLeave: function (args) {send("SdbSetApphelpDebugParameters");}});

var SdbSetEntryFlags = Module.findExportByName("apphelp.dll", "SdbSetEntryFlags")
Interceptor.attach(SdbSetEntryFlags, {onLeave: function (args) {send("SdbSetEntryFlags");}});

var SdbSetImageType = Module.findExportByName("apphelp.dll", "SdbSetImageType")
Interceptor.attach(SdbSetImageType, {onLeave: function (args) {send("SdbSetImageType");}});

var SdbSetPermLayerKeys = Module.findExportByName("apphelp.dll", "SdbSetPermLayerKeys")
Interceptor.attach(SdbSetPermLayerKeys, {onLeave: function (args) {send("SdbSetPermLayerKeys");}});

var SdbShowApphelpDialog = Module.findExportByName("apphelp.dll", "SdbShowApphelpDialog")
Interceptor.attach(SdbShowApphelpDialog, {onLeave: function (args) {send("SdbShowApphelpDialog");}});

var SdbShowApphelpFromQuery = Module.findExportByName("apphelp.dll", "SdbShowApphelpFromQuery")
Interceptor.attach(SdbShowApphelpFromQuery, {onLeave: function (args) {send("SdbShowApphelpFromQuery");}});

var SdbStartIndexing = Module.findExportByName("apphelp.dll", "SdbStartIndexing")
Interceptor.attach(SdbStartIndexing, {onLeave: function (args) {send("SdbStartIndexing");}});

var SdbStopIndexing = Module.findExportByName("apphelp.dll", "SdbStopIndexing")
Interceptor.attach(SdbStopIndexing, {onLeave: function (args) {send("SdbStopIndexing");}});

var SdbStringDuplicate = Module.findExportByName("apphelp.dll", "SdbStringDuplicate")
Interceptor.attach(SdbStringDuplicate, {onLeave: function (args) {send("SdbStringDuplicate");}});

var SdbStringReplace = Module.findExportByName("apphelp.dll", "SdbStringReplace")
Interceptor.attach(SdbStringReplace, {onLeave: function (args) {send("SdbStringReplace");}});

var SdbStringReplaceArray = Module.findExportByName("apphelp.dll", "SdbStringReplaceArray")
Interceptor.attach(SdbStringReplaceArray, {onLeave: function (args) {send("SdbStringReplaceArray");}});

var SdbTagIDToTagRef = Module.findExportByName("apphelp.dll", "SdbTagIDToTagRef")
Interceptor.attach(SdbTagIDToTagRef, {onLeave: function (args) {send("SdbTagIDToTagRef");}});

var SdbTagRefToTagID = Module.findExportByName("apphelp.dll", "SdbTagRefToTagID")
Interceptor.attach(SdbTagRefToTagID, {onLeave: function (args) {send("SdbTagRefToTagID");}});

var SdbTagToString = Module.findExportByName("apphelp.dll", "SdbTagToString")
Interceptor.attach(SdbTagToString, {onLeave: function (args) {send("SdbTagToString");}});

var SdbUnpackAppCompatData = Module.findExportByName("apphelp.dll", "SdbUnpackAppCompatData")
Interceptor.attach(SdbUnpackAppCompatData, {onLeave: function (args) {send("SdbUnpackAppCompatData");}});

var SdbUnpackQueryResult = Module.findExportByName("apphelp.dll", "SdbUnpackQueryResult")
Interceptor.attach(SdbUnpackQueryResult, {onLeave: function (args) {send("SdbUnpackQueryResult");}});

var SdbUnregisterDatabase = Module.findExportByName("apphelp.dll", "SdbUnregisterDatabase")
Interceptor.attach(SdbUnregisterDatabase, {onLeave: function (args) {send("SdbUnregisterDatabase");}});

var SdbWriteBYTETag = Module.findExportByName("apphelp.dll", "SdbWriteBYTETag")
Interceptor.attach(SdbWriteBYTETag, {onLeave: function (args) {send("SdbWriteBYTETag");}});

var SdbWriteBinaryTag = Module.findExportByName("apphelp.dll", "SdbWriteBinaryTag")
Interceptor.attach(SdbWriteBinaryTag, {onLeave: function (args) {send("SdbWriteBinaryTag");}});

var SdbWriteBinaryTagFromFile = Module.findExportByName("apphelp.dll", "SdbWriteBinaryTagFromFile")
Interceptor.attach(SdbWriteBinaryTagFromFile, {onLeave: function (args) {send("SdbWriteBinaryTagFromFile");}});

var SdbWriteDWORDTag = Module.findExportByName("apphelp.dll", "SdbWriteDWORDTag")
Interceptor.attach(SdbWriteDWORDTag, {onLeave: function (args) {send("SdbWriteDWORDTag");}});

var SdbWriteNULLTag = Module.findExportByName("apphelp.dll", "SdbWriteNULLTag")
Interceptor.attach(SdbWriteNULLTag, {onLeave: function (args) {send("SdbWriteNULLTag");}});

var SdbWriteQWORDTag = Module.findExportByName("apphelp.dll", "SdbWriteQWORDTag")
Interceptor.attach(SdbWriteQWORDTag, {onLeave: function (args) {send("SdbWriteQWORDTag");}});

var SdbWriteStringRefTag = Module.findExportByName("apphelp.dll", "SdbWriteStringRefTag")
Interceptor.attach(SdbWriteStringRefTag, {onLeave: function (args) {send("SdbWriteStringRefTag");}});

var SdbWriteStringTag = Module.findExportByName("apphelp.dll", "SdbWriteStringTag")
Interceptor.attach(SdbWriteStringTag, {onLeave: function (args) {send("SdbWriteStringTag");}});

var SdbWriteStringTagDirect = Module.findExportByName("apphelp.dll", "SdbWriteStringTagDirect")
Interceptor.attach(SdbWriteStringTagDirect, {onLeave: function (args) {send("SdbWriteStringTagDirect");}});

var SdbWriteWORDTag = Module.findExportByName("apphelp.dll", "SdbWriteWORDTag")
Interceptor.attach(SdbWriteWORDTag, {onLeave: function (args) {send("SdbWriteWORDTag");}});

var SetPermLayerState = Module.findExportByName("apphelp.dll", "SetPermLayerState")
Interceptor.attach(SetPermLayerState, {onLeave: function (args) {send("SetPermLayerState");}});

var SetPermLayerStateEx = Module.findExportByName("apphelp.dll", "SetPermLayerStateEx")
Interceptor.attach(SetPermLayerStateEx, {onLeave: function (args) {send("SetPermLayerStateEx");}});

var SetPermLayers = Module.findExportByName("apphelp.dll", "SetPermLayers")
Interceptor.attach(SetPermLayers, {onLeave: function (args) {send("SetPermLayers");}});

var ShimDbgPrint = Module.findExportByName("apphelp.dll", "ShimDbgPrint")
Interceptor.attach(ShimDbgPrint, {onLeave: function (args) {send("ShimDbgPrint");}});

var ShimDumpCache = Module.findExportByName("apphelp.dll", "ShimDumpCache")
Interceptor.attach(ShimDumpCache, {onLeave: function (args) {send("ShimDumpCache");}});

var ShimFlushCache = Module.findExportByName("apphelp.dll", "ShimFlushCache")
Interceptor.attach(ShimFlushCache, {onLeave: function (args) {send("ShimFlushCache");}});

