var LogErrorA = Module.findExportByName("rtutils.dll", "LogErrorA")
Interceptor.attach(LogErrorA, {onLeave: function (args) {send("LogErrorA");}});

var LogErrorW = Module.findExportByName("rtutils.dll", "LogErrorW")
Interceptor.attach(LogErrorW, {onLeave: function (args) {send("LogErrorW");}});

var LogEventA = Module.findExportByName("rtutils.dll", "LogEventA")
Interceptor.attach(LogEventA, {onLeave: function (args) {send("LogEventA");}});

var LogEventW = Module.findExportByName("rtutils.dll", "LogEventW")
Interceptor.attach(LogEventW, {onLeave: function (args) {send("LogEventW");}});

var MprSetupProtocolEnum = Module.findExportByName("rtutils.dll", "MprSetupProtocolEnum")
Interceptor.attach(MprSetupProtocolEnum, {onLeave: function (args) {send("MprSetupProtocolEnum");}});

var MprSetupProtocolFree = Module.findExportByName("rtutils.dll", "MprSetupProtocolFree")
Interceptor.attach(MprSetupProtocolFree, {onLeave: function (args) {send("MprSetupProtocolFree");}});

var RouterAssert = Module.findExportByName("rtutils.dll", "RouterAssert")
Interceptor.attach(RouterAssert, {onLeave: function (args) {send("RouterAssert");}});

var RouterGetErrorStringA = Module.findExportByName("rtutils.dll", "RouterGetErrorStringA")
Interceptor.attach(RouterGetErrorStringA, {onLeave: function (args) {send("RouterGetErrorStringA");}});

var RouterGetErrorStringW = Module.findExportByName("rtutils.dll", "RouterGetErrorStringW")
Interceptor.attach(RouterGetErrorStringW, {onLeave: function (args) {send("RouterGetErrorStringW");}});

var RouterLogDeregisterA = Module.findExportByName("rtutils.dll", "RouterLogDeregisterA")
Interceptor.attach(RouterLogDeregisterA, {onLeave: function (args) {send("RouterLogDeregisterA");}});

var RouterLogDeregisterW = Module.findExportByName("rtutils.dll", "RouterLogDeregisterW")
Interceptor.attach(RouterLogDeregisterW, {onLeave: function (args) {send("RouterLogDeregisterW");}});

var RouterLogEventA = Module.findExportByName("rtutils.dll", "RouterLogEventA")
Interceptor.attach(RouterLogEventA, {onLeave: function (args) {send("RouterLogEventA");}});

var RouterLogEventDataA = Module.findExportByName("rtutils.dll", "RouterLogEventDataA")
Interceptor.attach(RouterLogEventDataA, {onLeave: function (args) {send("RouterLogEventDataA");}});

var RouterLogEventDataW = Module.findExportByName("rtutils.dll", "RouterLogEventDataW")
Interceptor.attach(RouterLogEventDataW, {onLeave: function (args) {send("RouterLogEventDataW");}});

var RouterLogEventExA = Module.findExportByName("rtutils.dll", "RouterLogEventExA")
Interceptor.attach(RouterLogEventExA, {onLeave: function (args) {send("RouterLogEventExA");}});

var RouterLogEventExW = Module.findExportByName("rtutils.dll", "RouterLogEventExW")
Interceptor.attach(RouterLogEventExW, {onLeave: function (args) {send("RouterLogEventExW");}});

var RouterLogEventStringA = Module.findExportByName("rtutils.dll", "RouterLogEventStringA")
Interceptor.attach(RouterLogEventStringA, {onLeave: function (args) {send("RouterLogEventStringA");}});

var RouterLogEventStringW = Module.findExportByName("rtutils.dll", "RouterLogEventStringW")
Interceptor.attach(RouterLogEventStringW, {onLeave: function (args) {send("RouterLogEventStringW");}});

var RouterLogEventValistExA = Module.findExportByName("rtutils.dll", "RouterLogEventValistExA")
Interceptor.attach(RouterLogEventValistExA, {onLeave: function (args) {send("RouterLogEventValistExA");}});

var RouterLogEventValistExW = Module.findExportByName("rtutils.dll", "RouterLogEventValistExW")
Interceptor.attach(RouterLogEventValistExW, {onLeave: function (args) {send("RouterLogEventValistExW");}});

var RouterLogEventW = Module.findExportByName("rtutils.dll", "RouterLogEventW")
Interceptor.attach(RouterLogEventW, {onLeave: function (args) {send("RouterLogEventW");}});

var RouterLogRegisterA = Module.findExportByName("rtutils.dll", "RouterLogRegisterA")
Interceptor.attach(RouterLogRegisterA, {onLeave: function (args) {send("RouterLogRegisterA");}});

var RouterLogRegisterW = Module.findExportByName("rtutils.dll", "RouterLogRegisterW")
Interceptor.attach(RouterLogRegisterW, {onLeave: function (args) {send("RouterLogRegisterW");}});

var TraceDeregisterA = Module.findExportByName("rtutils.dll", "TraceDeregisterA")
Interceptor.attach(TraceDeregisterA, {onLeave: function (args) {send("TraceDeregisterA");}});

var TraceDeregisterExA = Module.findExportByName("rtutils.dll", "TraceDeregisterExA")
Interceptor.attach(TraceDeregisterExA, {onLeave: function (args) {send("TraceDeregisterExA");}});

var TraceDeregisterExW = Module.findExportByName("rtutils.dll", "TraceDeregisterExW")
Interceptor.attach(TraceDeregisterExW, {onLeave: function (args) {send("TraceDeregisterExW");}});

var TraceDeregisterW = Module.findExportByName("rtutils.dll", "TraceDeregisterW")
Interceptor.attach(TraceDeregisterW, {onLeave: function (args) {send("TraceDeregisterW");}});

var TraceDumpExA = Module.findExportByName("rtutils.dll", "TraceDumpExA")
Interceptor.attach(TraceDumpExA, {onLeave: function (args) {send("TraceDumpExA");}});

var TraceDumpExW = Module.findExportByName("rtutils.dll", "TraceDumpExW")
Interceptor.attach(TraceDumpExW, {onLeave: function (args) {send("TraceDumpExW");}});

var TraceGetConsoleA = Module.findExportByName("rtutils.dll", "TraceGetConsoleA")
Interceptor.attach(TraceGetConsoleA, {onLeave: function (args) {send("TraceGetConsoleA");}});

var TraceGetConsoleW = Module.findExportByName("rtutils.dll", "TraceGetConsoleW")
Interceptor.attach(TraceGetConsoleW, {onLeave: function (args) {send("TraceGetConsoleW");}});

var TracePrintfA = Module.findExportByName("rtutils.dll", "TracePrintfA")
Interceptor.attach(TracePrintfA, {onLeave: function (args) {send("TracePrintfA");}});

var TracePrintfExA = Module.findExportByName("rtutils.dll", "TracePrintfExA")
Interceptor.attach(TracePrintfExA, {onLeave: function (args) {send("TracePrintfExA");}});

var TracePrintfExW = Module.findExportByName("rtutils.dll", "TracePrintfExW")
Interceptor.attach(TracePrintfExW, {onLeave: function (args) {send("TracePrintfExW");}});

var TracePrintfW = Module.findExportByName("rtutils.dll", "TracePrintfW")
Interceptor.attach(TracePrintfW, {onLeave: function (args) {send("TracePrintfW");}});

var TracePutsExA = Module.findExportByName("rtutils.dll", "TracePutsExA")
Interceptor.attach(TracePutsExA, {onLeave: function (args) {send("TracePutsExA");}});

var TracePutsExW = Module.findExportByName("rtutils.dll", "TracePutsExW")
Interceptor.attach(TracePutsExW, {onLeave: function (args) {send("TracePutsExW");}});

var TraceRegisterExA = Module.findExportByName("rtutils.dll", "TraceRegisterExA")
Interceptor.attach(TraceRegisterExA, {onLeave: function (args) {send("TraceRegisterExA");}});

var TraceRegisterExW = Module.findExportByName("rtutils.dll", "TraceRegisterExW")
Interceptor.attach(TraceRegisterExW, {onLeave: function (args) {send("TraceRegisterExW");}});

var TraceVprintfExA = Module.findExportByName("rtutils.dll", "TraceVprintfExA")
Interceptor.attach(TraceVprintfExA, {onLeave: function (args) {send("TraceVprintfExA");}});

var TraceVprintfExW = Module.findExportByName("rtutils.dll", "TraceVprintfExW")
Interceptor.attach(TraceVprintfExW, {onLeave: function (args) {send("TraceVprintfExW");}});

