var PcwAddQueryItem = Module.findExportByName("pcwum.dll", "PcwAddQueryItem")
Interceptor.attach(PcwAddQueryItem, {onLeave: function (args) {send("PcwAddQueryItem");}});

var PcwClearCounterSetSecurity = Module.findExportByName("pcwum.dll", "PcwClearCounterSetSecurity")
Interceptor.attach(PcwClearCounterSetSecurity, {onLeave: function (args) {send("PcwClearCounterSetSecurity");}});

var PcwCollectData = Module.findExportByName("pcwum.dll", "PcwCollectData")
Interceptor.attach(PcwCollectData, {onLeave: function (args) {send("PcwCollectData");}});

var PcwCompleteNotification = Module.findExportByName("pcwum.dll", "PcwCompleteNotification")
Interceptor.attach(PcwCompleteNotification, {onLeave: function (args) {send("PcwCompleteNotification");}});

var PcwCreateNotifier = Module.findExportByName("pcwum.dll", "PcwCreateNotifier")
Interceptor.attach(PcwCreateNotifier, {onLeave: function (args) {send("PcwCreateNotifier");}});

var PcwCreateQuery = Module.findExportByName("pcwum.dll", "PcwCreateQuery")
Interceptor.attach(PcwCreateQuery, {onLeave: function (args) {send("PcwCreateQuery");}});

var PcwDisconnectCounterSet = Module.findExportByName("pcwum.dll", "PcwDisconnectCounterSet")
Interceptor.attach(PcwDisconnectCounterSet, {onLeave: function (args) {send("PcwDisconnectCounterSet");}});

var PcwEnumerateInstances = Module.findExportByName("pcwum.dll", "PcwEnumerateInstances")
Interceptor.attach(PcwEnumerateInstances, {onLeave: function (args) {send("PcwEnumerateInstances");}});

var PcwIsNotifierAlive = Module.findExportByName("pcwum.dll", "PcwIsNotifierAlive")
Interceptor.attach(PcwIsNotifierAlive, {onLeave: function (args) {send("PcwIsNotifierAlive");}});

var PcwQueryCounterSetSecurity = Module.findExportByName("pcwum.dll", "PcwQueryCounterSetSecurity")
Interceptor.attach(PcwQueryCounterSetSecurity, {onLeave: function (args) {send("PcwQueryCounterSetSecurity");}});

var PcwReadNotificationData = Module.findExportByName("pcwum.dll", "PcwReadNotificationData")
Interceptor.attach(PcwReadNotificationData, {onLeave: function (args) {send("PcwReadNotificationData");}});

var PcwRegisterCounterSet = Module.findExportByName("pcwum.dll", "PcwRegisterCounterSet")
Interceptor.attach(PcwRegisterCounterSet, {onLeave: function (args) {send("PcwRegisterCounterSet");}});

var PcwRemoveQueryItem = Module.findExportByName("pcwum.dll", "PcwRemoveQueryItem")
Interceptor.attach(PcwRemoveQueryItem, {onLeave: function (args) {send("PcwRemoveQueryItem");}});

var PcwSendNotification = Module.findExportByName("pcwum.dll", "PcwSendNotification")
Interceptor.attach(PcwSendNotification, {onLeave: function (args) {send("PcwSendNotification");}});

var PcwSendStatelessNotification = Module.findExportByName("pcwum.dll", "PcwSendStatelessNotification")
Interceptor.attach(PcwSendStatelessNotification, {onLeave: function (args) {send("PcwSendStatelessNotification");}});

var PcwSetCounterSetSecurity = Module.findExportByName("pcwum.dll", "PcwSetCounterSetSecurity")
Interceptor.attach(PcwSetCounterSetSecurity, {onLeave: function (args) {send("PcwSetCounterSetSecurity");}});

var PcwSetQueryItemUserData = Module.findExportByName("pcwum.dll", "PcwSetQueryItemUserData")
Interceptor.attach(PcwSetQueryItemUserData, {onLeave: function (args) {send("PcwSetQueryItemUserData");}});

var PerfCreateInstance = Module.findExportByName("pcwum.dll", "PerfCreateInstance")
Interceptor.attach(PerfCreateInstance, {onLeave: function (args) {send("PerfCreateInstance");}});

var PerfDecrementULongCounterValue = Module.findExportByName("pcwum.dll", "PerfDecrementULongCounterValue")
Interceptor.attach(PerfDecrementULongCounterValue, {onLeave: function (args) {send("PerfDecrementULongCounterValue");}});

var PerfDecrementULongLongCounterValue = Module.findExportByName("pcwum.dll", "PerfDecrementULongLongCounterValue")
Interceptor.attach(PerfDecrementULongLongCounterValue, {onLeave: function (args) {send("PerfDecrementULongLongCounterValue");}});

var PerfDeleteInstance = Module.findExportByName("pcwum.dll", "PerfDeleteInstance")
Interceptor.attach(PerfDeleteInstance, {onLeave: function (args) {send("PerfDeleteInstance");}});

var PerfIncrementULongCounterValue = Module.findExportByName("pcwum.dll", "PerfIncrementULongCounterValue")
Interceptor.attach(PerfIncrementULongCounterValue, {onLeave: function (args) {send("PerfIncrementULongCounterValue");}});

var PerfIncrementULongLongCounterValue = Module.findExportByName("pcwum.dll", "PerfIncrementULongLongCounterValue")
Interceptor.attach(PerfIncrementULongLongCounterValue, {onLeave: function (args) {send("PerfIncrementULongLongCounterValue");}});

var PerfQueryInstance = Module.findExportByName("pcwum.dll", "PerfQueryInstance")
Interceptor.attach(PerfQueryInstance, {onLeave: function (args) {send("PerfQueryInstance");}});

var PerfSetCounterRefValue = Module.findExportByName("pcwum.dll", "PerfSetCounterRefValue")
Interceptor.attach(PerfSetCounterRefValue, {onLeave: function (args) {send("PerfSetCounterRefValue");}});

var PerfSetCounterSetInfo = Module.findExportByName("pcwum.dll", "PerfSetCounterSetInfo")
Interceptor.attach(PerfSetCounterSetInfo, {onLeave: function (args) {send("PerfSetCounterSetInfo");}});

var PerfSetULongCounterValue = Module.findExportByName("pcwum.dll", "PerfSetULongCounterValue")
Interceptor.attach(PerfSetULongCounterValue, {onLeave: function (args) {send("PerfSetULongCounterValue");}});

var PerfSetULongLongCounterValue = Module.findExportByName("pcwum.dll", "PerfSetULongLongCounterValue")
Interceptor.attach(PerfSetULongLongCounterValue, {onLeave: function (args) {send("PerfSetULongLongCounterValue");}});

var PerfStartProvider = Module.findExportByName("pcwum.dll", "PerfStartProvider")
Interceptor.attach(PerfStartProvider, {onLeave: function (args) {send("PerfStartProvider");}});

var PerfStartProviderEx = Module.findExportByName("pcwum.dll", "PerfStartProviderEx")
Interceptor.attach(PerfStartProviderEx, {onLeave: function (args) {send("PerfStartProviderEx");}});

var PerfStopProvider = Module.findExportByName("pcwum.dll", "PerfStopProvider")
Interceptor.attach(PerfStopProvider, {onLeave: function (args) {send("PerfStopProvider");}});

