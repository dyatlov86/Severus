var av_buffer_create = Module.findExportByName("ffmpeg.dll", "av_buffer_create")
Interceptor.attach(av_buffer_create, {onLeave: function (args) {send("av_buffer_create");}});

var av_buffer_get_opaque = Module.findExportByName("ffmpeg.dll", "av_buffer_get_opaque")
Interceptor.attach(av_buffer_get_opaque, {onLeave: function (args) {send("av_buffer_get_opaque");}});

var av_dict_count = Module.findExportByName("ffmpeg.dll", "av_dict_count")
Interceptor.attach(av_dict_count, {onLeave: function (args) {send("av_dict_count");}});

var av_dict_free = Module.findExportByName("ffmpeg.dll", "av_dict_free")
Interceptor.attach(av_dict_free, {onLeave: function (args) {send("av_dict_free");}});

var av_dict_get = Module.findExportByName("ffmpeg.dll", "av_dict_get")
Interceptor.attach(av_dict_get, {onLeave: function (args) {send("av_dict_get");}});

var av_dict_set = Module.findExportByName("ffmpeg.dll", "av_dict_set")
Interceptor.attach(av_dict_set, {onLeave: function (args) {send("av_dict_set");}});

var av_dump_format = Module.findExportByName("ffmpeg.dll", "av_dump_format")
Interceptor.attach(av_dump_format, {onLeave: function (args) {send("av_dump_format");}});

var av_force_cpu_flags = Module.findExportByName("ffmpeg.dll", "av_force_cpu_flags")
Interceptor.attach(av_force_cpu_flags, {onLeave: function (args) {send("av_force_cpu_flags");}});

var av_frame_alloc = Module.findExportByName("ffmpeg.dll", "av_frame_alloc")
Interceptor.attach(av_frame_alloc, {onLeave: function (args) {send("av_frame_alloc");}});

var av_frame_clone = Module.findExportByName("ffmpeg.dll", "av_frame_clone")
Interceptor.attach(av_frame_clone, {onLeave: function (args) {send("av_frame_clone");}});

var av_frame_free = Module.findExportByName("ffmpeg.dll", "av_frame_free")
Interceptor.attach(av_frame_free, {onLeave: function (args) {send("av_frame_free");}});

var av_frame_unref = Module.findExportByName("ffmpeg.dll", "av_frame_unref")
Interceptor.attach(av_frame_unref, {onLeave: function (args) {send("av_frame_unref");}});

var av_free = Module.findExportByName("ffmpeg.dll", "av_free")
Interceptor.attach(av_free, {onLeave: function (args) {send("av_free");}});

var av_get_bytes_per_sample = Module.findExportByName("ffmpeg.dll", "av_get_bytes_per_sample")
Interceptor.attach(av_get_bytes_per_sample, {onLeave: function (args) {send("av_get_bytes_per_sample");}});

var av_get_cpu_flags = Module.findExportByName("ffmpeg.dll", "av_get_cpu_flags")
Interceptor.attach(av_get_cpu_flags, {onLeave: function (args) {send("av_get_cpu_flags");}});

var av_guess_format = Module.findExportByName("ffmpeg.dll", "av_guess_format")
Interceptor.attach(av_guess_format, {onLeave: function (args) {send("av_guess_format");}});

var av_image_check_size = Module.findExportByName("ffmpeg.dll", "av_image_check_size")
Interceptor.attach(av_image_check_size, {onLeave: function (args) {send("av_image_check_size");}});

var av_init_packet = Module.findExportByName("ffmpeg.dll", "av_init_packet")
Interceptor.attach(av_init_packet, {onLeave: function (args) {send("av_init_packet");}});

var av_interleaved_write_frame = Module.findExportByName("ffmpeg.dll", "av_interleaved_write_frame")
Interceptor.attach(av_interleaved_write_frame, {onLeave: function (args) {send("av_interleaved_write_frame");}});

var av_log_set_level = Module.findExportByName("ffmpeg.dll", "av_log_set_level")
Interceptor.attach(av_log_set_level, {onLeave: function (args) {send("av_log_set_level");}});

var av_malloc = Module.findExportByName("ffmpeg.dll", "av_malloc")
Interceptor.attach(av_malloc, {onLeave: function (args) {send("av_malloc");}});

var av_max_alloc = Module.findExportByName("ffmpeg.dll", "av_max_alloc")
Interceptor.attach(av_max_alloc, {onLeave: function (args) {send("av_max_alloc");}});

var av_new_packet = Module.findExportByName("ffmpeg.dll", "av_new_packet")
Interceptor.attach(av_new_packet, {onLeave: function (args) {send("av_new_packet");}});

var av_packet_alloc = Module.findExportByName("ffmpeg.dll", "av_packet_alloc")
Interceptor.attach(av_packet_alloc, {onLeave: function (args) {send("av_packet_alloc");}});

var av_packet_copy_props = Module.findExportByName("ffmpeg.dll", "av_packet_copy_props")
Interceptor.attach(av_packet_copy_props, {onLeave: function (args) {send("av_packet_copy_props");}});

var av_packet_free = Module.findExportByName("ffmpeg.dll", "av_packet_free")
Interceptor.attach(av_packet_free, {onLeave: function (args) {send("av_packet_free");}});

var av_packet_get_side_data = Module.findExportByName("ffmpeg.dll", "av_packet_get_side_data")
Interceptor.attach(av_packet_get_side_data, {onLeave: function (args) {send("av_packet_get_side_data");}});

var av_packet_unref = Module.findExportByName("ffmpeg.dll", "av_packet_unref")
Interceptor.attach(av_packet_unref, {onLeave: function (args) {send("av_packet_unref");}});

var av_rdft_calc = Module.findExportByName("ffmpeg.dll", "av_rdft_calc")
Interceptor.attach(av_rdft_calc, {onLeave: function (args) {send("av_rdft_calc");}});

var av_rdft_end = Module.findExportByName("ffmpeg.dll", "av_rdft_end")
Interceptor.attach(av_rdft_end, {onLeave: function (args) {send("av_rdft_end");}});

var av_rdft_init = Module.findExportByName("ffmpeg.dll", "av_rdft_init")
Interceptor.attach(av_rdft_init, {onLeave: function (args) {send("av_rdft_init");}});

var av_read_frame = Module.findExportByName("ffmpeg.dll", "av_read_frame")
Interceptor.attach(av_read_frame, {onLeave: function (args) {send("av_read_frame");}});

var av_rescale_q = Module.findExportByName("ffmpeg.dll", "av_rescale_q")
Interceptor.attach(av_rescale_q, {onLeave: function (args) {send("av_rescale_q");}});

var av_rescale_q_rnd = Module.findExportByName("ffmpeg.dll", "av_rescale_q_rnd")
Interceptor.attach(av_rescale_q_rnd, {onLeave: function (args) {send("av_rescale_q_rnd");}});

var av_samples_get_buffer_size = Module.findExportByName("ffmpeg.dll", "av_samples_get_buffer_size")
Interceptor.attach(av_samples_get_buffer_size, {onLeave: function (args) {send("av_samples_get_buffer_size");}});

var av_seek_frame = Module.findExportByName("ffmpeg.dll", "av_seek_frame")
Interceptor.attach(av_seek_frame, {onLeave: function (args) {send("av_seek_frame");}});

var av_stream_get_first_dts = Module.findExportByName("ffmpeg.dll", "av_stream_get_first_dts")
Interceptor.attach(av_stream_get_first_dts, {onLeave: function (args) {send("av_stream_get_first_dts");}});

var av_stream_get_side_data = Module.findExportByName("ffmpeg.dll", "av_stream_get_side_data")
Interceptor.attach(av_stream_get_side_data, {onLeave: function (args) {send("av_stream_get_side_data");}});

var av_strerror = Module.findExportByName("ffmpeg.dll", "av_strerror")
Interceptor.attach(av_strerror, {onLeave: function (args) {send("av_strerror");}});

var av_write_trailer = Module.findExportByName("ffmpeg.dll", "av_write_trailer")
Interceptor.attach(av_write_trailer, {onLeave: function (args) {send("av_write_trailer");}});

var avcodec_align_dimensions = Module.findExportByName("ffmpeg.dll", "avcodec_align_dimensions")
Interceptor.attach(avcodec_align_dimensions, {onLeave: function (args) {send("avcodec_align_dimensions");}});

var avcodec_alloc_context3 = Module.findExportByName("ffmpeg.dll", "avcodec_alloc_context3")
Interceptor.attach(avcodec_alloc_context3, {onLeave: function (args) {send("avcodec_alloc_context3");}});

var avcodec_descriptor_get = Module.findExportByName("ffmpeg.dll", "avcodec_descriptor_get")
Interceptor.attach(avcodec_descriptor_get, {onLeave: function (args) {send("avcodec_descriptor_get");}});

var avcodec_descriptor_next = Module.findExportByName("ffmpeg.dll", "avcodec_descriptor_next")
Interceptor.attach(avcodec_descriptor_next, {onLeave: function (args) {send("avcodec_descriptor_next");}});

var avcodec_find_decoder = Module.findExportByName("ffmpeg.dll", "avcodec_find_decoder")
Interceptor.attach(avcodec_find_decoder, {onLeave: function (args) {send("avcodec_find_decoder");}});

var avcodec_flush_buffers = Module.findExportByName("ffmpeg.dll", "avcodec_flush_buffers")
Interceptor.attach(avcodec_flush_buffers, {onLeave: function (args) {send("avcodec_flush_buffers");}});

var avcodec_free_context = Module.findExportByName("ffmpeg.dll", "avcodec_free_context")
Interceptor.attach(avcodec_free_context, {onLeave: function (args) {send("avcodec_free_context");}});

var avcodec_get_name = Module.findExportByName("ffmpeg.dll", "avcodec_get_name")
Interceptor.attach(avcodec_get_name, {onLeave: function (args) {send("avcodec_get_name");}});

var avcodec_open2 = Module.findExportByName("ffmpeg.dll", "avcodec_open2")
Interceptor.attach(avcodec_open2, {onLeave: function (args) {send("avcodec_open2");}});

var avcodec_parameters_copy = Module.findExportByName("ffmpeg.dll", "avcodec_parameters_copy")
Interceptor.attach(avcodec_parameters_copy, {onLeave: function (args) {send("avcodec_parameters_copy");}});

var avcodec_parameters_to_context = Module.findExportByName("ffmpeg.dll", "avcodec_parameters_to_context")
Interceptor.attach(avcodec_parameters_to_context, {onLeave: function (args) {send("avcodec_parameters_to_context");}});

var avcodec_receive_frame = Module.findExportByName("ffmpeg.dll", "avcodec_receive_frame")
Interceptor.attach(avcodec_receive_frame, {onLeave: function (args) {send("avcodec_receive_frame");}});

var avcodec_send_packet = Module.findExportByName("ffmpeg.dll", "avcodec_send_packet")
Interceptor.attach(avcodec_send_packet, {onLeave: function (args) {send("avcodec_send_packet");}});

var avformat_alloc_context = Module.findExportByName("ffmpeg.dll", "avformat_alloc_context")
Interceptor.attach(avformat_alloc_context, {onLeave: function (args) {send("avformat_alloc_context");}});

var avformat_alloc_output_context2 = Module.findExportByName("ffmpeg.dll", "avformat_alloc_output_context2")
Interceptor.attach(avformat_alloc_output_context2, {onLeave: function (args) {send("avformat_alloc_output_context2");}});

var avformat_close_input = Module.findExportByName("ffmpeg.dll", "avformat_close_input")
Interceptor.attach(avformat_close_input, {onLeave: function (args) {send("avformat_close_input");}});

var avformat_find_stream_info = Module.findExportByName("ffmpeg.dll", "avformat_find_stream_info")
Interceptor.attach(avformat_find_stream_info, {onLeave: function (args) {send("avformat_find_stream_info");}});

var avformat_free_context = Module.findExportByName("ffmpeg.dll", "avformat_free_context")
Interceptor.attach(avformat_free_context, {onLeave: function (args) {send("avformat_free_context");}});

var avformat_new_stream = Module.findExportByName("ffmpeg.dll", "avformat_new_stream")
Interceptor.attach(avformat_new_stream, {onLeave: function (args) {send("avformat_new_stream");}});

var avformat_open_input = Module.findExportByName("ffmpeg.dll", "avformat_open_input")
Interceptor.attach(avformat_open_input, {onLeave: function (args) {send("avformat_open_input");}});

var avformat_write_header = Module.findExportByName("ffmpeg.dll", "avformat_write_header")
Interceptor.attach(avformat_write_header, {onLeave: function (args) {send("avformat_write_header");}});

var avio_alloc_context = Module.findExportByName("ffmpeg.dll", "avio_alloc_context")
Interceptor.attach(avio_alloc_context, {onLeave: function (args) {send("avio_alloc_context");}});

var avio_close = Module.findExportByName("ffmpeg.dll", "avio_close")
Interceptor.attach(avio_close, {onLeave: function (args) {send("avio_close");}});

