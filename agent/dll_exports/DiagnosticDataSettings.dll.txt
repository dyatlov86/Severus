var TelEvaluateActiveSettingAuthority = Module.findExportByName("DiagnosticDataSettings.dll", "TelEvaluateActiveSettingAuthority")
Interceptor.attach(TelEvaluateActiveSettingAuthority, {onLeave: function (args) {send("TelEvaluateActiveSettingAuthority");}});

var TelGetAllAllowedTelemetryTypes = Module.findExportByName("DiagnosticDataSettings.dll", "TelGetAllAllowedTelemetryTypes")
Interceptor.attach(TelGetAllAllowedTelemetryTypes, {onLeave: function (args) {send("TelGetAllAllowedTelemetryTypes");}});

var TelGetLocalAllowTelemetryRegPath = Module.findExportByName("DiagnosticDataSettings.dll", "TelGetLocalAllowTelemetryRegPath")
Interceptor.attach(TelGetLocalAllowTelemetryRegPath, {onLeave: function (args) {send("TelGetLocalAllowTelemetryRegPath");}});

var TelGetMaximumAllowedTelemetryLevel = Module.findExportByName("DiagnosticDataSettings.dll", "TelGetMaximumAllowedTelemetryLevel")
Interceptor.attach(TelGetMaximumAllowedTelemetryLevel, {onLeave: function (args) {send("TelGetMaximumAllowedTelemetryLevel");}});

var TelGetNumericPolicy = Module.findExportByName("DiagnosticDataSettings.dll", "TelGetNumericPolicy")
Interceptor.attach(TelGetNumericPolicy, {onLeave: function (args) {send("TelGetNumericPolicy");}});

var TelGetRegionalSettingsValue = Module.findExportByName("DiagnosticDataSettings.dll", "TelGetRegionalSettingsValue")
Interceptor.attach(TelGetRegionalSettingsValue, {onLeave: function (args) {send("TelGetRegionalSettingsValue");}});

var TelGetStringPolicy = Module.findExportByName("DiagnosticDataSettings.dll", "TelGetStringPolicy")
Interceptor.attach(TelGetStringPolicy, {onLeave: function (args) {send("TelGetStringPolicy");}});

var TelGetWerTelemetryMode = Module.findExportByName("DiagnosticDataSettings.dll", "TelGetWerTelemetryMode")
Interceptor.attach(TelGetWerTelemetryMode, {onLeave: function (args) {send("TelGetWerTelemetryMode");}});

var TelIsOsInProcessorMode = Module.findExportByName("DiagnosticDataSettings.dll", "TelIsOsInProcessorMode")
Interceptor.attach(TelIsOsInProcessorMode, {onLeave: function (args) {send("TelIsOsInProcessorMode");}});

var TelIsProcessorModeAllowed = Module.findExportByName("DiagnosticDataSettings.dll", "TelIsProcessorModeAllowed")
Interceptor.attach(TelIsProcessorModeAllowed, {onLeave: function (args) {send("TelIsProcessorModeAllowed");}});

var TelIsRestrictivePolicySet = Module.findExportByName("DiagnosticDataSettings.dll", "TelIsRestrictivePolicySet")
Interceptor.attach(TelIsRestrictivePolicySet, {onLeave: function (args) {send("TelIsRestrictivePolicySet");}});

var TelIsTelemetryTypeAllowed = Module.findExportByName("DiagnosticDataSettings.dll", "TelIsTelemetryTypeAllowed")
Interceptor.attach(TelIsTelemetryTypeAllowed, {onLeave: function (args) {send("TelIsTelemetryTypeAllowed");}});

var TelSetLocalTelemetrySetting = Module.findExportByName("DiagnosticDataSettings.dll", "TelSetLocalTelemetrySetting")
Interceptor.attach(TelSetLocalTelemetrySetting, {onLeave: function (args) {send("TelSetLocalTelemetrySetting");}});

