var AssocCreate = Module.findExportByName("shlwapi.dll", "AssocCreate")
Interceptor.attach(AssocCreate, {onLeave: function (args) {send("AssocCreate");}});

var AssocGetPerceivedType = Module.findExportByName("shlwapi.dll", "AssocGetPerceivedType")
Interceptor.attach(AssocGetPerceivedType, {onLeave: function (args) {send("AssocGetPerceivedType");}});

var AssocIsDangerous = Module.findExportByName("shlwapi.dll", "AssocIsDangerous")
Interceptor.attach(AssocIsDangerous, {onLeave: function (args) {send("AssocIsDangerous");}});

var AssocQueryKeyA = Module.findExportByName("shlwapi.dll", "AssocQueryKeyA")
Interceptor.attach(AssocQueryKeyA, {onLeave: function (args) {send("AssocQueryKeyA");}});

var AssocQueryKeyW = Module.findExportByName("shlwapi.dll", "AssocQueryKeyW")
Interceptor.attach(AssocQueryKeyW, {onLeave: function (args) {send("AssocQueryKeyW");}});

var AssocQueryStringA = Module.findExportByName("shlwapi.dll", "AssocQueryStringA")
Interceptor.attach(AssocQueryStringA, {onLeave: function (args) {send("AssocQueryStringA");}});

var AssocQueryStringByKeyA = Module.findExportByName("shlwapi.dll", "AssocQueryStringByKeyA")
Interceptor.attach(AssocQueryStringByKeyA, {onLeave: function (args) {send("AssocQueryStringByKeyA");}});

var AssocQueryStringByKeyW = Module.findExportByName("shlwapi.dll", "AssocQueryStringByKeyW")
Interceptor.attach(AssocQueryStringByKeyW, {onLeave: function (args) {send("AssocQueryStringByKeyW");}});

var AssocQueryStringW = Module.findExportByName("shlwapi.dll", "AssocQueryStringW")
Interceptor.attach(AssocQueryStringW, {onLeave: function (args) {send("AssocQueryStringW");}});

var ChrCmpIA = Module.findExportByName("shlwapi.dll", "ChrCmpIA")
Interceptor.attach(ChrCmpIA, {onLeave: function (args) {send("ChrCmpIA");}});

var ChrCmpIW = Module.findExportByName("shlwapi.dll", "ChrCmpIW")
Interceptor.attach(ChrCmpIW, {onLeave: function (args) {send("ChrCmpIW");}});

var ColorAdjustLuma = Module.findExportByName("shlwapi.dll", "ColorAdjustLuma")
Interceptor.attach(ColorAdjustLuma, {onLeave: function (args) {send("ColorAdjustLuma");}});

var ColorHLSToRGB = Module.findExportByName("shlwapi.dll", "ColorHLSToRGB")
Interceptor.attach(ColorHLSToRGB, {onLeave: function (args) {send("ColorHLSToRGB");}});

var ColorRGBToHLS = Module.findExportByName("shlwapi.dll", "ColorRGBToHLS")
Interceptor.attach(ColorRGBToHLS, {onLeave: function (args) {send("ColorRGBToHLS");}});

var ConnectToConnectionPoint = Module.findExportByName("shlwapi.dll", "ConnectToConnectionPoint")
Interceptor.attach(ConnectToConnectionPoint, {onLeave: function (args) {send("ConnectToConnectionPoint");}});

var DelayLoadFailureHook = Module.findExportByName("shlwapi.dll", "DelayLoadFailureHook")
Interceptor.attach(DelayLoadFailureHook, {onLeave: function (args) {send("DelayLoadFailureHook");}});

var DllGetClassObject = Module.findExportByName("shlwapi.dll", "DllGetClassObject")
Interceptor.attach(DllGetClassObject, {onLeave: function (args) {send("DllGetClassObject");}});

var DllGetVersion = Module.findExportByName("shlwapi.dll", "DllGetVersion")
Interceptor.attach(DllGetVersion, {onLeave: function (args) {send("DllGetVersion");}});

var GUIDFromStringW = Module.findExportByName("shlwapi.dll", "GUIDFromStringW")
Interceptor.attach(GUIDFromStringW, {onLeave: function (args) {send("GUIDFromStringW");}});

var GetAcceptLanguagesA = Module.findExportByName("shlwapi.dll", "GetAcceptLanguagesA")
Interceptor.attach(GetAcceptLanguagesA, {onLeave: function (args) {send("GetAcceptLanguagesA");}});

var GetAcceptLanguagesW = Module.findExportByName("shlwapi.dll", "GetAcceptLanguagesW")
Interceptor.attach(GetAcceptLanguagesW, {onLeave: function (args) {send("GetAcceptLanguagesW");}});

var GetMenuPosFromID = Module.findExportByName("shlwapi.dll", "GetMenuPosFromID")
Interceptor.attach(GetMenuPosFromID, {onLeave: function (args) {send("GetMenuPosFromID");}});

var HashData = Module.findExportByName("shlwapi.dll", "HashData")
Interceptor.attach(HashData, {onLeave: function (args) {send("HashData");}});

var IStream_Copy = Module.findExportByName("shlwapi.dll", "IStream_Copy")
Interceptor.attach(IStream_Copy, {onLeave: function (args) {send("IStream_Copy");}});

var IStream_Read = Module.findExportByName("shlwapi.dll", "IStream_Read")
Interceptor.attach(IStream_Read, {onLeave: function (args) {send("IStream_Read");}});

var IStream_ReadPidl = Module.findExportByName("shlwapi.dll", "IStream_ReadPidl")
Interceptor.attach(IStream_ReadPidl, {onLeave: function (args) {send("IStream_ReadPidl");}});

var IStream_ReadStr = Module.findExportByName("shlwapi.dll", "IStream_ReadStr")
Interceptor.attach(IStream_ReadStr, {onLeave: function (args) {send("IStream_ReadStr");}});

var IStream_Reset = Module.findExportByName("shlwapi.dll", "IStream_Reset")
Interceptor.attach(IStream_Reset, {onLeave: function (args) {send("IStream_Reset");}});

var IStream_Size = Module.findExportByName("shlwapi.dll", "IStream_Size")
Interceptor.attach(IStream_Size, {onLeave: function (args) {send("IStream_Size");}});

var IStream_Write = Module.findExportByName("shlwapi.dll", "IStream_Write")
Interceptor.attach(IStream_Write, {onLeave: function (args) {send("IStream_Write");}});

var IStream_WritePidl = Module.findExportByName("shlwapi.dll", "IStream_WritePidl")
Interceptor.attach(IStream_WritePidl, {onLeave: function (args) {send("IStream_WritePidl");}});

var IStream_WriteStr = Module.findExportByName("shlwapi.dll", "IStream_WriteStr")
Interceptor.attach(IStream_WriteStr, {onLeave: function (args) {send("IStream_WriteStr");}});

var IUnknown_AtomicRelease = Module.findExportByName("shlwapi.dll", "IUnknown_AtomicRelease")
Interceptor.attach(IUnknown_AtomicRelease, {onLeave: function (args) {send("IUnknown_AtomicRelease");}});

var IUnknown_Exec = Module.findExportByName("shlwapi.dll", "IUnknown_Exec")
Interceptor.attach(IUnknown_Exec, {onLeave: function (args) {send("IUnknown_Exec");}});

var IUnknown_GetSite = Module.findExportByName("shlwapi.dll", "IUnknown_GetSite")
Interceptor.attach(IUnknown_GetSite, {onLeave: function (args) {send("IUnknown_GetSite");}});

var IUnknown_GetWindow = Module.findExportByName("shlwapi.dll", "IUnknown_GetWindow")
Interceptor.attach(IUnknown_GetWindow, {onLeave: function (args) {send("IUnknown_GetWindow");}});

var IUnknown_QueryService = Module.findExportByName("shlwapi.dll", "IUnknown_QueryService")
Interceptor.attach(IUnknown_QueryService, {onLeave: function (args) {send("IUnknown_QueryService");}});

var IUnknown_QueryStatus = Module.findExportByName("shlwapi.dll", "IUnknown_QueryStatus")
Interceptor.attach(IUnknown_QueryStatus, {onLeave: function (args) {send("IUnknown_QueryStatus");}});

var IUnknown_Set = Module.findExportByName("shlwapi.dll", "IUnknown_Set")
Interceptor.attach(IUnknown_Set, {onLeave: function (args) {send("IUnknown_Set");}});

var IUnknown_SetSite = Module.findExportByName("shlwapi.dll", "IUnknown_SetSite")
Interceptor.attach(IUnknown_SetSite, {onLeave: function (args) {send("IUnknown_SetSite");}});

var IntlStrEqWorkerA = Module.findExportByName("shlwapi.dll", "IntlStrEqWorkerA")
Interceptor.attach(IntlStrEqWorkerA, {onLeave: function (args) {send("IntlStrEqWorkerA");}});

var IntlStrEqWorkerW = Module.findExportByName("shlwapi.dll", "IntlStrEqWorkerW")
Interceptor.attach(IntlStrEqWorkerW, {onLeave: function (args) {send("IntlStrEqWorkerW");}});

var IsCharSpaceA = Module.findExportByName("shlwapi.dll", "IsCharSpaceA")
Interceptor.attach(IsCharSpaceA, {onLeave: function (args) {send("IsCharSpaceA");}});

var IsCharSpaceW = Module.findExportByName("shlwapi.dll", "IsCharSpaceW")
Interceptor.attach(IsCharSpaceW, {onLeave: function (args) {send("IsCharSpaceW");}});

var IsInternetESCEnabled = Module.findExportByName("shlwapi.dll", "IsInternetESCEnabled")
Interceptor.attach(IsInternetESCEnabled, {onLeave: function (args) {send("IsInternetESCEnabled");}});

var IsOS = Module.findExportByName("shlwapi.dll", "IsOS")
Interceptor.attach(IsOS, {onLeave: function (args) {send("IsOS");}});

var MLLoadLibraryA = Module.findExportByName("shlwapi.dll", "MLLoadLibraryA")
Interceptor.attach(MLLoadLibraryA, {onLeave: function (args) {send("MLLoadLibraryA");}});

var MLLoadLibraryW = Module.findExportByName("shlwapi.dll", "MLLoadLibraryW")
Interceptor.attach(MLLoadLibraryW, {onLeave: function (args) {send("MLLoadLibraryW");}});

var ParseURLA = Module.findExportByName("shlwapi.dll", "ParseURLA")
Interceptor.attach(ParseURLA, {onLeave: function (args) {send("ParseURLA");}});

var ParseURLW = Module.findExportByName("shlwapi.dll", "ParseURLW")
Interceptor.attach(ParseURLW, {onLeave: function (args) {send("ParseURLW");}});

var PathAddBackslashA = Module.findExportByName("shlwapi.dll", "PathAddBackslashA")
Interceptor.attach(PathAddBackslashA, {onLeave: function (args) {send("PathAddBackslashA");}});

var PathAddBackslashW = Module.findExportByName("shlwapi.dll", "PathAddBackslashW")
Interceptor.attach(PathAddBackslashW, {onLeave: function (args) {send("PathAddBackslashW");}});

var PathAddExtensionA = Module.findExportByName("shlwapi.dll", "PathAddExtensionA")
Interceptor.attach(PathAddExtensionA, {onLeave: function (args) {send("PathAddExtensionA");}});

var PathAddExtensionW = Module.findExportByName("shlwapi.dll", "PathAddExtensionW")
Interceptor.attach(PathAddExtensionW, {onLeave: function (args) {send("PathAddExtensionW");}});

var PathAppendA = Module.findExportByName("shlwapi.dll", "PathAppendA")
Interceptor.attach(PathAppendA, {onLeave: function (args) {send("PathAppendA");}});

var PathAppendW = Module.findExportByName("shlwapi.dll", "PathAppendW")
Interceptor.attach(PathAppendW, {onLeave: function (args) {send("PathAppendW");}});

var PathBuildRootA = Module.findExportByName("shlwapi.dll", "PathBuildRootA")
Interceptor.attach(PathBuildRootA, {onLeave: function (args) {send("PathBuildRootA");}});

var PathBuildRootW = Module.findExportByName("shlwapi.dll", "PathBuildRootW")
Interceptor.attach(PathBuildRootW, {onLeave: function (args) {send("PathBuildRootW");}});

var PathCanonicalizeA = Module.findExportByName("shlwapi.dll", "PathCanonicalizeA")
Interceptor.attach(PathCanonicalizeA, {onLeave: function (args) {send("PathCanonicalizeA");}});

var PathCanonicalizeW = Module.findExportByName("shlwapi.dll", "PathCanonicalizeW")
Interceptor.attach(PathCanonicalizeW, {onLeave: function (args) {send("PathCanonicalizeW");}});

var PathCombineA = Module.findExportByName("shlwapi.dll", "PathCombineA")
Interceptor.attach(PathCombineA, {onLeave: function (args) {send("PathCombineA");}});

var PathCombineW = Module.findExportByName("shlwapi.dll", "PathCombineW")
Interceptor.attach(PathCombineW, {onLeave: function (args) {send("PathCombineW");}});

var PathCommonPrefixA = Module.findExportByName("shlwapi.dll", "PathCommonPrefixA")
Interceptor.attach(PathCommonPrefixA, {onLeave: function (args) {send("PathCommonPrefixA");}});

var PathCommonPrefixW = Module.findExportByName("shlwapi.dll", "PathCommonPrefixW")
Interceptor.attach(PathCommonPrefixW, {onLeave: function (args) {send("PathCommonPrefixW");}});

var PathCompactPathA = Module.findExportByName("shlwapi.dll", "PathCompactPathA")
Interceptor.attach(PathCompactPathA, {onLeave: function (args) {send("PathCompactPathA");}});

var PathCompactPathExA = Module.findExportByName("shlwapi.dll", "PathCompactPathExA")
Interceptor.attach(PathCompactPathExA, {onLeave: function (args) {send("PathCompactPathExA");}});

var PathCompactPathExW = Module.findExportByName("shlwapi.dll", "PathCompactPathExW")
Interceptor.attach(PathCompactPathExW, {onLeave: function (args) {send("PathCompactPathExW");}});

var PathCompactPathW = Module.findExportByName("shlwapi.dll", "PathCompactPathW")
Interceptor.attach(PathCompactPathW, {onLeave: function (args) {send("PathCompactPathW");}});

var PathCreateFromUrlA = Module.findExportByName("shlwapi.dll", "PathCreateFromUrlA")
Interceptor.attach(PathCreateFromUrlA, {onLeave: function (args) {send("PathCreateFromUrlA");}});

var PathCreateFromUrlAlloc = Module.findExportByName("shlwapi.dll", "PathCreateFromUrlAlloc")
Interceptor.attach(PathCreateFromUrlAlloc, {onLeave: function (args) {send("PathCreateFromUrlAlloc");}});

var PathCreateFromUrlW = Module.findExportByName("shlwapi.dll", "PathCreateFromUrlW")
Interceptor.attach(PathCreateFromUrlW, {onLeave: function (args) {send("PathCreateFromUrlW");}});

var PathFileExistsA = Module.findExportByName("shlwapi.dll", "PathFileExistsA")
Interceptor.attach(PathFileExistsA, {onLeave: function (args) {send("PathFileExistsA");}});

var PathFileExistsAndAttributesW = Module.findExportByName("shlwapi.dll", "PathFileExistsAndAttributesW")
Interceptor.attach(PathFileExistsAndAttributesW, {onLeave: function (args) {send("PathFileExistsAndAttributesW");}});

var PathFileExistsW = Module.findExportByName("shlwapi.dll", "PathFileExistsW")
Interceptor.attach(PathFileExistsW, {onLeave: function (args) {send("PathFileExistsW");}});

var PathFindExtensionA = Module.findExportByName("shlwapi.dll", "PathFindExtensionA")
Interceptor.attach(PathFindExtensionA, {onLeave: function (args) {send("PathFindExtensionA");}});

var PathFindExtensionW = Module.findExportByName("shlwapi.dll", "PathFindExtensionW")
Interceptor.attach(PathFindExtensionW, {onLeave: function (args) {send("PathFindExtensionW");}});

var PathFindFileNameA = Module.findExportByName("shlwapi.dll", "PathFindFileNameA")
Interceptor.attach(PathFindFileNameA, {onLeave: function (args) {send("PathFindFileNameA");}});

var PathFindFileNameW = Module.findExportByName("shlwapi.dll", "PathFindFileNameW")
Interceptor.attach(PathFindFileNameW, {onLeave: function (args) {send("PathFindFileNameW");}});

var PathFindNextComponentA = Module.findExportByName("shlwapi.dll", "PathFindNextComponentA")
Interceptor.attach(PathFindNextComponentA, {onLeave: function (args) {send("PathFindNextComponentA");}});

var PathFindNextComponentW = Module.findExportByName("shlwapi.dll", "PathFindNextComponentW")
Interceptor.attach(PathFindNextComponentW, {onLeave: function (args) {send("PathFindNextComponentW");}});

var PathFindOnPathA = Module.findExportByName("shlwapi.dll", "PathFindOnPathA")
Interceptor.attach(PathFindOnPathA, {onLeave: function (args) {send("PathFindOnPathA");}});

var PathFindOnPathW = Module.findExportByName("shlwapi.dll", "PathFindOnPathW")
Interceptor.attach(PathFindOnPathW, {onLeave: function (args) {send("PathFindOnPathW");}});

var PathFindSuffixArrayA = Module.findExportByName("shlwapi.dll", "PathFindSuffixArrayA")
Interceptor.attach(PathFindSuffixArrayA, {onLeave: function (args) {send("PathFindSuffixArrayA");}});

var PathFindSuffixArrayW = Module.findExportByName("shlwapi.dll", "PathFindSuffixArrayW")
Interceptor.attach(PathFindSuffixArrayW, {onLeave: function (args) {send("PathFindSuffixArrayW");}});

var PathGetArgsA = Module.findExportByName("shlwapi.dll", "PathGetArgsA")
Interceptor.attach(PathGetArgsA, {onLeave: function (args) {send("PathGetArgsA");}});

var PathGetArgsW = Module.findExportByName("shlwapi.dll", "PathGetArgsW")
Interceptor.attach(PathGetArgsW, {onLeave: function (args) {send("PathGetArgsW");}});

var PathGetCharTypeA = Module.findExportByName("shlwapi.dll", "PathGetCharTypeA")
Interceptor.attach(PathGetCharTypeA, {onLeave: function (args) {send("PathGetCharTypeA");}});

var PathGetCharTypeW = Module.findExportByName("shlwapi.dll", "PathGetCharTypeW")
Interceptor.attach(PathGetCharTypeW, {onLeave: function (args) {send("PathGetCharTypeW");}});

var PathGetDriveNumberA = Module.findExportByName("shlwapi.dll", "PathGetDriveNumberA")
Interceptor.attach(PathGetDriveNumberA, {onLeave: function (args) {send("PathGetDriveNumberA");}});

var PathGetDriveNumberW = Module.findExportByName("shlwapi.dll", "PathGetDriveNumberW")
Interceptor.attach(PathGetDriveNumberW, {onLeave: function (args) {send("PathGetDriveNumberW");}});

var PathIsContentTypeA = Module.findExportByName("shlwapi.dll", "PathIsContentTypeA")
Interceptor.attach(PathIsContentTypeA, {onLeave: function (args) {send("PathIsContentTypeA");}});

var PathIsContentTypeW = Module.findExportByName("shlwapi.dll", "PathIsContentTypeW")
Interceptor.attach(PathIsContentTypeW, {onLeave: function (args) {send("PathIsContentTypeW");}});

var PathIsDirectoryA = Module.findExportByName("shlwapi.dll", "PathIsDirectoryA")
Interceptor.attach(PathIsDirectoryA, {onLeave: function (args) {send("PathIsDirectoryA");}});

var PathIsDirectoryEmptyA = Module.findExportByName("shlwapi.dll", "PathIsDirectoryEmptyA")
Interceptor.attach(PathIsDirectoryEmptyA, {onLeave: function (args) {send("PathIsDirectoryEmptyA");}});

var PathIsDirectoryEmptyW = Module.findExportByName("shlwapi.dll", "PathIsDirectoryEmptyW")
Interceptor.attach(PathIsDirectoryEmptyW, {onLeave: function (args) {send("PathIsDirectoryEmptyW");}});

var PathIsDirectoryW = Module.findExportByName("shlwapi.dll", "PathIsDirectoryW")
Interceptor.attach(PathIsDirectoryW, {onLeave: function (args) {send("PathIsDirectoryW");}});

var PathIsFileSpecA = Module.findExportByName("shlwapi.dll", "PathIsFileSpecA")
Interceptor.attach(PathIsFileSpecA, {onLeave: function (args) {send("PathIsFileSpecA");}});

var PathIsFileSpecW = Module.findExportByName("shlwapi.dll", "PathIsFileSpecW")
Interceptor.attach(PathIsFileSpecW, {onLeave: function (args) {send("PathIsFileSpecW");}});

var PathIsLFNFileSpecA = Module.findExportByName("shlwapi.dll", "PathIsLFNFileSpecA")
Interceptor.attach(PathIsLFNFileSpecA, {onLeave: function (args) {send("PathIsLFNFileSpecA");}});

var PathIsLFNFileSpecW = Module.findExportByName("shlwapi.dll", "PathIsLFNFileSpecW")
Interceptor.attach(PathIsLFNFileSpecW, {onLeave: function (args) {send("PathIsLFNFileSpecW");}});

var PathIsNetworkPathA = Module.findExportByName("shlwapi.dll", "PathIsNetworkPathA")
Interceptor.attach(PathIsNetworkPathA, {onLeave: function (args) {send("PathIsNetworkPathA");}});

var PathIsNetworkPathW = Module.findExportByName("shlwapi.dll", "PathIsNetworkPathW")
Interceptor.attach(PathIsNetworkPathW, {onLeave: function (args) {send("PathIsNetworkPathW");}});

var PathIsPrefixA = Module.findExportByName("shlwapi.dll", "PathIsPrefixA")
Interceptor.attach(PathIsPrefixA, {onLeave: function (args) {send("PathIsPrefixA");}});

var PathIsPrefixW = Module.findExportByName("shlwapi.dll", "PathIsPrefixW")
Interceptor.attach(PathIsPrefixW, {onLeave: function (args) {send("PathIsPrefixW");}});

var PathIsRelativeA = Module.findExportByName("shlwapi.dll", "PathIsRelativeA")
Interceptor.attach(PathIsRelativeA, {onLeave: function (args) {send("PathIsRelativeA");}});

var PathIsRelativeW = Module.findExportByName("shlwapi.dll", "PathIsRelativeW")
Interceptor.attach(PathIsRelativeW, {onLeave: function (args) {send("PathIsRelativeW");}});

var PathIsRootA = Module.findExportByName("shlwapi.dll", "PathIsRootA")
Interceptor.attach(PathIsRootA, {onLeave: function (args) {send("PathIsRootA");}});

var PathIsRootW = Module.findExportByName("shlwapi.dll", "PathIsRootW")
Interceptor.attach(PathIsRootW, {onLeave: function (args) {send("PathIsRootW");}});

var PathIsSameRootA = Module.findExportByName("shlwapi.dll", "PathIsSameRootA")
Interceptor.attach(PathIsSameRootA, {onLeave: function (args) {send("PathIsSameRootA");}});

var PathIsSameRootW = Module.findExportByName("shlwapi.dll", "PathIsSameRootW")
Interceptor.attach(PathIsSameRootW, {onLeave: function (args) {send("PathIsSameRootW");}});

var PathIsSystemFolderA = Module.findExportByName("shlwapi.dll", "PathIsSystemFolderA")
Interceptor.attach(PathIsSystemFolderA, {onLeave: function (args) {send("PathIsSystemFolderA");}});

var PathIsSystemFolderW = Module.findExportByName("shlwapi.dll", "PathIsSystemFolderW")
Interceptor.attach(PathIsSystemFolderW, {onLeave: function (args) {send("PathIsSystemFolderW");}});

var PathIsUNCA = Module.findExportByName("shlwapi.dll", "PathIsUNCA")
Interceptor.attach(PathIsUNCA, {onLeave: function (args) {send("PathIsUNCA");}});

var PathIsUNCServerA = Module.findExportByName("shlwapi.dll", "PathIsUNCServerA")
Interceptor.attach(PathIsUNCServerA, {onLeave: function (args) {send("PathIsUNCServerA");}});

var PathIsUNCServerShareA = Module.findExportByName("shlwapi.dll", "PathIsUNCServerShareA")
Interceptor.attach(PathIsUNCServerShareA, {onLeave: function (args) {send("PathIsUNCServerShareA");}});

var PathIsUNCServerShareW = Module.findExportByName("shlwapi.dll", "PathIsUNCServerShareW")
Interceptor.attach(PathIsUNCServerShareW, {onLeave: function (args) {send("PathIsUNCServerShareW");}});

var PathIsUNCServerW = Module.findExportByName("shlwapi.dll", "PathIsUNCServerW")
Interceptor.attach(PathIsUNCServerW, {onLeave: function (args) {send("PathIsUNCServerW");}});

var PathIsUNCW = Module.findExportByName("shlwapi.dll", "PathIsUNCW")
Interceptor.attach(PathIsUNCW, {onLeave: function (args) {send("PathIsUNCW");}});

var PathIsURLA = Module.findExportByName("shlwapi.dll", "PathIsURLA")
Interceptor.attach(PathIsURLA, {onLeave: function (args) {send("PathIsURLA");}});

var PathIsURLW = Module.findExportByName("shlwapi.dll", "PathIsURLW")
Interceptor.attach(PathIsURLW, {onLeave: function (args) {send("PathIsURLW");}});

var PathMakePrettyA = Module.findExportByName("shlwapi.dll", "PathMakePrettyA")
Interceptor.attach(PathMakePrettyA, {onLeave: function (args) {send("PathMakePrettyA");}});

var PathMakePrettyW = Module.findExportByName("shlwapi.dll", "PathMakePrettyW")
Interceptor.attach(PathMakePrettyW, {onLeave: function (args) {send("PathMakePrettyW");}});

var PathMakeSystemFolderA = Module.findExportByName("shlwapi.dll", "PathMakeSystemFolderA")
Interceptor.attach(PathMakeSystemFolderA, {onLeave: function (args) {send("PathMakeSystemFolderA");}});

var PathMakeSystemFolderW = Module.findExportByName("shlwapi.dll", "PathMakeSystemFolderW")
Interceptor.attach(PathMakeSystemFolderW, {onLeave: function (args) {send("PathMakeSystemFolderW");}});

var PathMatchSpecA = Module.findExportByName("shlwapi.dll", "PathMatchSpecA")
Interceptor.attach(PathMatchSpecA, {onLeave: function (args) {send("PathMatchSpecA");}});

var PathMatchSpecExA = Module.findExportByName("shlwapi.dll", "PathMatchSpecExA")
Interceptor.attach(PathMatchSpecExA, {onLeave: function (args) {send("PathMatchSpecExA");}});

var PathMatchSpecExW = Module.findExportByName("shlwapi.dll", "PathMatchSpecExW")
Interceptor.attach(PathMatchSpecExW, {onLeave: function (args) {send("PathMatchSpecExW");}});

var PathMatchSpecW = Module.findExportByName("shlwapi.dll", "PathMatchSpecW")
Interceptor.attach(PathMatchSpecW, {onLeave: function (args) {send("PathMatchSpecW");}});

var PathParseIconLocationA = Module.findExportByName("shlwapi.dll", "PathParseIconLocationA")
Interceptor.attach(PathParseIconLocationA, {onLeave: function (args) {send("PathParseIconLocationA");}});

var PathParseIconLocationW = Module.findExportByName("shlwapi.dll", "PathParseIconLocationW")
Interceptor.attach(PathParseIconLocationW, {onLeave: function (args) {send("PathParseIconLocationW");}});

var PathQuoteSpacesA = Module.findExportByName("shlwapi.dll", "PathQuoteSpacesA")
Interceptor.attach(PathQuoteSpacesA, {onLeave: function (args) {send("PathQuoteSpacesA");}});

var PathQuoteSpacesW = Module.findExportByName("shlwapi.dll", "PathQuoteSpacesW")
Interceptor.attach(PathQuoteSpacesW, {onLeave: function (args) {send("PathQuoteSpacesW");}});

var PathRelativePathToA = Module.findExportByName("shlwapi.dll", "PathRelativePathToA")
Interceptor.attach(PathRelativePathToA, {onLeave: function (args) {send("PathRelativePathToA");}});

var PathRelativePathToW = Module.findExportByName("shlwapi.dll", "PathRelativePathToW")
Interceptor.attach(PathRelativePathToW, {onLeave: function (args) {send("PathRelativePathToW");}});

var PathRemoveArgsA = Module.findExportByName("shlwapi.dll", "PathRemoveArgsA")
Interceptor.attach(PathRemoveArgsA, {onLeave: function (args) {send("PathRemoveArgsA");}});

var PathRemoveArgsW = Module.findExportByName("shlwapi.dll", "PathRemoveArgsW")
Interceptor.attach(PathRemoveArgsW, {onLeave: function (args) {send("PathRemoveArgsW");}});

var PathRemoveBackslashA = Module.findExportByName("shlwapi.dll", "PathRemoveBackslashA")
Interceptor.attach(PathRemoveBackslashA, {onLeave: function (args) {send("PathRemoveBackslashA");}});

var PathRemoveBackslashW = Module.findExportByName("shlwapi.dll", "PathRemoveBackslashW")
Interceptor.attach(PathRemoveBackslashW, {onLeave: function (args) {send("PathRemoveBackslashW");}});

var PathRemoveBlanksA = Module.findExportByName("shlwapi.dll", "PathRemoveBlanksA")
Interceptor.attach(PathRemoveBlanksA, {onLeave: function (args) {send("PathRemoveBlanksA");}});

var PathRemoveBlanksW = Module.findExportByName("shlwapi.dll", "PathRemoveBlanksW")
Interceptor.attach(PathRemoveBlanksW, {onLeave: function (args) {send("PathRemoveBlanksW");}});

var PathRemoveExtensionA = Module.findExportByName("shlwapi.dll", "PathRemoveExtensionA")
Interceptor.attach(PathRemoveExtensionA, {onLeave: function (args) {send("PathRemoveExtensionA");}});

var PathRemoveExtensionW = Module.findExportByName("shlwapi.dll", "PathRemoveExtensionW")
Interceptor.attach(PathRemoveExtensionW, {onLeave: function (args) {send("PathRemoveExtensionW");}});

var PathRemoveFileSpecA = Module.findExportByName("shlwapi.dll", "PathRemoveFileSpecA")
Interceptor.attach(PathRemoveFileSpecA, {onLeave: function (args) {send("PathRemoveFileSpecA");}});

var PathRemoveFileSpecW = Module.findExportByName("shlwapi.dll", "PathRemoveFileSpecW")
Interceptor.attach(PathRemoveFileSpecW, {onLeave: function (args) {send("PathRemoveFileSpecW");}});

var PathRenameExtensionA = Module.findExportByName("shlwapi.dll", "PathRenameExtensionA")
Interceptor.attach(PathRenameExtensionA, {onLeave: function (args) {send("PathRenameExtensionA");}});

var PathRenameExtensionW = Module.findExportByName("shlwapi.dll", "PathRenameExtensionW")
Interceptor.attach(PathRenameExtensionW, {onLeave: function (args) {send("PathRenameExtensionW");}});

var PathSearchAndQualifyA = Module.findExportByName("shlwapi.dll", "PathSearchAndQualifyA")
Interceptor.attach(PathSearchAndQualifyA, {onLeave: function (args) {send("PathSearchAndQualifyA");}});

var PathSearchAndQualifyW = Module.findExportByName("shlwapi.dll", "PathSearchAndQualifyW")
Interceptor.attach(PathSearchAndQualifyW, {onLeave: function (args) {send("PathSearchAndQualifyW");}});

var PathSetDlgItemPathA = Module.findExportByName("shlwapi.dll", "PathSetDlgItemPathA")
Interceptor.attach(PathSetDlgItemPathA, {onLeave: function (args) {send("PathSetDlgItemPathA");}});

var PathSetDlgItemPathW = Module.findExportByName("shlwapi.dll", "PathSetDlgItemPathW")
Interceptor.attach(PathSetDlgItemPathW, {onLeave: function (args) {send("PathSetDlgItemPathW");}});

var PathSkipRootA = Module.findExportByName("shlwapi.dll", "PathSkipRootA")
Interceptor.attach(PathSkipRootA, {onLeave: function (args) {send("PathSkipRootA");}});

var PathSkipRootW = Module.findExportByName("shlwapi.dll", "PathSkipRootW")
Interceptor.attach(PathSkipRootW, {onLeave: function (args) {send("PathSkipRootW");}});

var PathStripPathA = Module.findExportByName("shlwapi.dll", "PathStripPathA")
Interceptor.attach(PathStripPathA, {onLeave: function (args) {send("PathStripPathA");}});

var PathStripPathW = Module.findExportByName("shlwapi.dll", "PathStripPathW")
Interceptor.attach(PathStripPathW, {onLeave: function (args) {send("PathStripPathW");}});

var PathStripToRootA = Module.findExportByName("shlwapi.dll", "PathStripToRootA")
Interceptor.attach(PathStripToRootA, {onLeave: function (args) {send("PathStripToRootA");}});

var PathStripToRootW = Module.findExportByName("shlwapi.dll", "PathStripToRootW")
Interceptor.attach(PathStripToRootW, {onLeave: function (args) {send("PathStripToRootW");}});

var PathUnExpandEnvStringsA = Module.findExportByName("shlwapi.dll", "PathUnExpandEnvStringsA")
Interceptor.attach(PathUnExpandEnvStringsA, {onLeave: function (args) {send("PathUnExpandEnvStringsA");}});

var PathUnExpandEnvStringsW = Module.findExportByName("shlwapi.dll", "PathUnExpandEnvStringsW")
Interceptor.attach(PathUnExpandEnvStringsW, {onLeave: function (args) {send("PathUnExpandEnvStringsW");}});

var PathUndecorateA = Module.findExportByName("shlwapi.dll", "PathUndecorateA")
Interceptor.attach(PathUndecorateA, {onLeave: function (args) {send("PathUndecorateA");}});

var PathUndecorateW = Module.findExportByName("shlwapi.dll", "PathUndecorateW")
Interceptor.attach(PathUndecorateW, {onLeave: function (args) {send("PathUndecorateW");}});

var PathUnmakeSystemFolderA = Module.findExportByName("shlwapi.dll", "PathUnmakeSystemFolderA")
Interceptor.attach(PathUnmakeSystemFolderA, {onLeave: function (args) {send("PathUnmakeSystemFolderA");}});

var PathUnmakeSystemFolderW = Module.findExportByName("shlwapi.dll", "PathUnmakeSystemFolderW")
Interceptor.attach(PathUnmakeSystemFolderW, {onLeave: function (args) {send("PathUnmakeSystemFolderW");}});

var PathUnquoteSpacesA = Module.findExportByName("shlwapi.dll", "PathUnquoteSpacesA")
Interceptor.attach(PathUnquoteSpacesA, {onLeave: function (args) {send("PathUnquoteSpacesA");}});

var PathUnquoteSpacesW = Module.findExportByName("shlwapi.dll", "PathUnquoteSpacesW")
Interceptor.attach(PathUnquoteSpacesW, {onLeave: function (args) {send("PathUnquoteSpacesW");}});

var QISearch = Module.findExportByName("shlwapi.dll", "QISearch")
Interceptor.attach(QISearch, {onLeave: function (args) {send("QISearch");}});

var SHAllocShared = Module.findExportByName("shlwapi.dll", "SHAllocShared")
Interceptor.attach(SHAllocShared, {onLeave: function (args) {send("SHAllocShared");}});

var SHAnsiToAnsi = Module.findExportByName("shlwapi.dll", "SHAnsiToAnsi")
Interceptor.attach(SHAnsiToAnsi, {onLeave: function (args) {send("SHAnsiToAnsi");}});

var SHAnsiToUnicode = Module.findExportByName("shlwapi.dll", "SHAnsiToUnicode")
Interceptor.attach(SHAnsiToUnicode, {onLeave: function (args) {send("SHAnsiToUnicode");}});

var SHAutoComplete = Module.findExportByName("shlwapi.dll", "SHAutoComplete")
Interceptor.attach(SHAutoComplete, {onLeave: function (args) {send("SHAutoComplete");}});

var SHCopyKeyA = Module.findExportByName("shlwapi.dll", "SHCopyKeyA")
Interceptor.attach(SHCopyKeyA, {onLeave: function (args) {send("SHCopyKeyA");}});

var SHCopyKeyW = Module.findExportByName("shlwapi.dll", "SHCopyKeyW")
Interceptor.attach(SHCopyKeyW, {onLeave: function (args) {send("SHCopyKeyW");}});

var SHCreateMemStream = Module.findExportByName("shlwapi.dll", "SHCreateMemStream")
Interceptor.attach(SHCreateMemStream, {onLeave: function (args) {send("SHCreateMemStream");}});

var SHCreateShellPalette = Module.findExportByName("shlwapi.dll", "SHCreateShellPalette")
Interceptor.attach(SHCreateShellPalette, {onLeave: function (args) {send("SHCreateShellPalette");}});

var SHCreateStreamOnFileA = Module.findExportByName("shlwapi.dll", "SHCreateStreamOnFileA")
Interceptor.attach(SHCreateStreamOnFileA, {onLeave: function (args) {send("SHCreateStreamOnFileA");}});

var SHCreateStreamOnFileEx = Module.findExportByName("shlwapi.dll", "SHCreateStreamOnFileEx")
Interceptor.attach(SHCreateStreamOnFileEx, {onLeave: function (args) {send("SHCreateStreamOnFileEx");}});

var SHCreateStreamOnFileW = Module.findExportByName("shlwapi.dll", "SHCreateStreamOnFileW")
Interceptor.attach(SHCreateStreamOnFileW, {onLeave: function (args) {send("SHCreateStreamOnFileW");}});

var SHCreateStreamWrapper = Module.findExportByName("shlwapi.dll", "SHCreateStreamWrapper")
Interceptor.attach(SHCreateStreamWrapper, {onLeave: function (args) {send("SHCreateStreamWrapper");}});

var SHCreateThread = Module.findExportByName("shlwapi.dll", "SHCreateThread")
Interceptor.attach(SHCreateThread, {onLeave: function (args) {send("SHCreateThread");}});

var SHCreateThreadRef = Module.findExportByName("shlwapi.dll", "SHCreateThreadRef")
Interceptor.attach(SHCreateThreadRef, {onLeave: function (args) {send("SHCreateThreadRef");}});

var SHCreateThreadWithHandle = Module.findExportByName("shlwapi.dll", "SHCreateThreadWithHandle")
Interceptor.attach(SHCreateThreadWithHandle, {onLeave: function (args) {send("SHCreateThreadWithHandle");}});

var SHCreateWorkerWindowW = Module.findExportByName("shlwapi.dll", "SHCreateWorkerWindowW")
Interceptor.attach(SHCreateWorkerWindowW, {onLeave: function (args) {send("SHCreateWorkerWindowW");}});

var SHDeleteEmptyKeyA = Module.findExportByName("shlwapi.dll", "SHDeleteEmptyKeyA")
Interceptor.attach(SHDeleteEmptyKeyA, {onLeave: function (args) {send("SHDeleteEmptyKeyA");}});

var SHDeleteEmptyKeyW = Module.findExportByName("shlwapi.dll", "SHDeleteEmptyKeyW")
Interceptor.attach(SHDeleteEmptyKeyW, {onLeave: function (args) {send("SHDeleteEmptyKeyW");}});

var SHDeleteKeyA = Module.findExportByName("shlwapi.dll", "SHDeleteKeyA")
Interceptor.attach(SHDeleteKeyA, {onLeave: function (args) {send("SHDeleteKeyA");}});

var SHDeleteKeyW = Module.findExportByName("shlwapi.dll", "SHDeleteKeyW")
Interceptor.attach(SHDeleteKeyW, {onLeave: function (args) {send("SHDeleteKeyW");}});

var SHDeleteOrphanKeyA = Module.findExportByName("shlwapi.dll", "SHDeleteOrphanKeyA")
Interceptor.attach(SHDeleteOrphanKeyA, {onLeave: function (args) {send("SHDeleteOrphanKeyA");}});

var SHDeleteOrphanKeyW = Module.findExportByName("shlwapi.dll", "SHDeleteOrphanKeyW")
Interceptor.attach(SHDeleteOrphanKeyW, {onLeave: function (args) {send("SHDeleteOrphanKeyW");}});

var SHDeleteValueA = Module.findExportByName("shlwapi.dll", "SHDeleteValueA")
Interceptor.attach(SHDeleteValueA, {onLeave: function (args) {send("SHDeleteValueA");}});

var SHDeleteValueW = Module.findExportByName("shlwapi.dll", "SHDeleteValueW")
Interceptor.attach(SHDeleteValueW, {onLeave: function (args) {send("SHDeleteValueW");}});

var SHEnumKeyExA = Module.findExportByName("shlwapi.dll", "SHEnumKeyExA")
Interceptor.attach(SHEnumKeyExA, {onLeave: function (args) {send("SHEnumKeyExA");}});

var SHEnumKeyExW = Module.findExportByName("shlwapi.dll", "SHEnumKeyExW")
Interceptor.attach(SHEnumKeyExW, {onLeave: function (args) {send("SHEnumKeyExW");}});

var SHEnumValueA = Module.findExportByName("shlwapi.dll", "SHEnumValueA")
Interceptor.attach(SHEnumValueA, {onLeave: function (args) {send("SHEnumValueA");}});

var SHEnumValueW = Module.findExportByName("shlwapi.dll", "SHEnumValueW")
Interceptor.attach(SHEnumValueW, {onLeave: function (args) {send("SHEnumValueW");}});

var SHFormatDateTimeA = Module.findExportByName("shlwapi.dll", "SHFormatDateTimeA")
Interceptor.attach(SHFormatDateTimeA, {onLeave: function (args) {send("SHFormatDateTimeA");}});

var SHFormatDateTimeW = Module.findExportByName("shlwapi.dll", "SHFormatDateTimeW")
Interceptor.attach(SHFormatDateTimeW, {onLeave: function (args) {send("SHFormatDateTimeW");}});

var SHFreeShared = Module.findExportByName("shlwapi.dll", "SHFreeShared")
Interceptor.attach(SHFreeShared, {onLeave: function (args) {send("SHFreeShared");}});

var SHGetInverseCMAP = Module.findExportByName("shlwapi.dll", "SHGetInverseCMAP")
Interceptor.attach(SHGetInverseCMAP, {onLeave: function (args) {send("SHGetInverseCMAP");}});

var SHGetThreadRef = Module.findExportByName("shlwapi.dll", "SHGetThreadRef")
Interceptor.attach(SHGetThreadRef, {onLeave: function (args) {send("SHGetThreadRef");}});

var SHGetValueA = Module.findExportByName("shlwapi.dll", "SHGetValueA")
Interceptor.attach(SHGetValueA, {onLeave: function (args) {send("SHGetValueA");}});

var SHGetValueW = Module.findExportByName("shlwapi.dll", "SHGetValueW")
Interceptor.attach(SHGetValueW, {onLeave: function (args) {send("SHGetValueW");}});

var SHGetViewStatePropertyBag = Module.findExportByName("shlwapi.dll", "SHGetViewStatePropertyBag")
Interceptor.attach(SHGetViewStatePropertyBag, {onLeave: function (args) {send("SHGetViewStatePropertyBag");}});

var SHIsChildOrSelf = Module.findExportByName("shlwapi.dll", "SHIsChildOrSelf")
Interceptor.attach(SHIsChildOrSelf, {onLeave: function (args) {send("SHIsChildOrSelf");}});

var SHIsLowMemoryMachine = Module.findExportByName("shlwapi.dll", "SHIsLowMemoryMachine")
Interceptor.attach(SHIsLowMemoryMachine, {onLeave: function (args) {send("SHIsLowMemoryMachine");}});

var SHLoadIndirectString = Module.findExportByName("shlwapi.dll", "SHLoadIndirectString")
Interceptor.attach(SHLoadIndirectString, {onLeave: function (args) {send("SHLoadIndirectString");}});

var SHLockShared = Module.findExportByName("shlwapi.dll", "SHLockShared")
Interceptor.attach(SHLockShared, {onLeave: function (args) {send("SHLockShared");}});

var SHMessageBoxCheckA = Module.findExportByName("shlwapi.dll", "SHMessageBoxCheckA")
Interceptor.attach(SHMessageBoxCheckA, {onLeave: function (args) {send("SHMessageBoxCheckA");}});

var SHMessageBoxCheckW = Module.findExportByName("shlwapi.dll", "SHMessageBoxCheckW")
Interceptor.attach(SHMessageBoxCheckW, {onLeave: function (args) {send("SHMessageBoxCheckW");}});

var SHOpenRegStream2A = Module.findExportByName("shlwapi.dll", "SHOpenRegStream2A")
Interceptor.attach(SHOpenRegStream2A, {onLeave: function (args) {send("SHOpenRegStream2A");}});

var SHOpenRegStream2W = Module.findExportByName("shlwapi.dll", "SHOpenRegStream2W")
Interceptor.attach(SHOpenRegStream2W, {onLeave: function (args) {send("SHOpenRegStream2W");}});

var SHOpenRegStreamA = Module.findExportByName("shlwapi.dll", "SHOpenRegStreamA")
Interceptor.attach(SHOpenRegStreamA, {onLeave: function (args) {send("SHOpenRegStreamA");}});

var SHOpenRegStreamW = Module.findExportByName("shlwapi.dll", "SHOpenRegStreamW")
Interceptor.attach(SHOpenRegStreamW, {onLeave: function (args) {send("SHOpenRegStreamW");}});

var SHPackDispParamsV = Module.findExportByName("shlwapi.dll", "SHPackDispParamsV")
Interceptor.attach(SHPackDispParamsV, {onLeave: function (args) {send("SHPackDispParamsV");}});

var SHPinDllOfCLSID = Module.findExportByName("shlwapi.dll", "SHPinDllOfCLSID")
Interceptor.attach(SHPinDllOfCLSID, {onLeave: function (args) {send("SHPinDllOfCLSID");}});

var SHPropertyBag_ReadStrAlloc = Module.findExportByName("shlwapi.dll", "SHPropertyBag_ReadStrAlloc")
Interceptor.attach(SHPropertyBag_ReadStrAlloc, {onLeave: function (args) {send("SHPropertyBag_ReadStrAlloc");}});

var SHPropertyBag_WriteBSTR = Module.findExportByName("shlwapi.dll", "SHPropertyBag_WriteBSTR")
Interceptor.attach(SHPropertyBag_WriteBSTR, {onLeave: function (args) {send("SHPropertyBag_WriteBSTR");}});

var SHQueryInfoKeyA = Module.findExportByName("shlwapi.dll", "SHQueryInfoKeyA")
Interceptor.attach(SHQueryInfoKeyA, {onLeave: function (args) {send("SHQueryInfoKeyA");}});

var SHQueryInfoKeyW = Module.findExportByName("shlwapi.dll", "SHQueryInfoKeyW")
Interceptor.attach(SHQueryInfoKeyW, {onLeave: function (args) {send("SHQueryInfoKeyW");}});

var SHQueryValueExA = Module.findExportByName("shlwapi.dll", "SHQueryValueExA")
Interceptor.attach(SHQueryValueExA, {onLeave: function (args) {send("SHQueryValueExA");}});

var SHQueryValueExW = Module.findExportByName("shlwapi.dll", "SHQueryValueExW")
Interceptor.attach(SHQueryValueExW, {onLeave: function (args) {send("SHQueryValueExW");}});

var SHRegCloseUSKey = Module.findExportByName("shlwapi.dll", "SHRegCloseUSKey")
Interceptor.attach(SHRegCloseUSKey, {onLeave: function (args) {send("SHRegCloseUSKey");}});

var SHRegCreateUSKeyA = Module.findExportByName("shlwapi.dll", "SHRegCreateUSKeyA")
Interceptor.attach(SHRegCreateUSKeyA, {onLeave: function (args) {send("SHRegCreateUSKeyA");}});

var SHRegCreateUSKeyW = Module.findExportByName("shlwapi.dll", "SHRegCreateUSKeyW")
Interceptor.attach(SHRegCreateUSKeyW, {onLeave: function (args) {send("SHRegCreateUSKeyW");}});

var SHRegDeleteEmptyUSKeyA = Module.findExportByName("shlwapi.dll", "SHRegDeleteEmptyUSKeyA")
Interceptor.attach(SHRegDeleteEmptyUSKeyA, {onLeave: function (args) {send("SHRegDeleteEmptyUSKeyA");}});

var SHRegDeleteEmptyUSKeyW = Module.findExportByName("shlwapi.dll", "SHRegDeleteEmptyUSKeyW")
Interceptor.attach(SHRegDeleteEmptyUSKeyW, {onLeave: function (args) {send("SHRegDeleteEmptyUSKeyW");}});

var SHRegDeleteUSValueA = Module.findExportByName("shlwapi.dll", "SHRegDeleteUSValueA")
Interceptor.attach(SHRegDeleteUSValueA, {onLeave: function (args) {send("SHRegDeleteUSValueA");}});

var SHRegDeleteUSValueW = Module.findExportByName("shlwapi.dll", "SHRegDeleteUSValueW")
Interceptor.attach(SHRegDeleteUSValueW, {onLeave: function (args) {send("SHRegDeleteUSValueW");}});

var SHRegDuplicateHKey = Module.findExportByName("shlwapi.dll", "SHRegDuplicateHKey")
Interceptor.attach(SHRegDuplicateHKey, {onLeave: function (args) {send("SHRegDuplicateHKey");}});

var SHRegEnumUSKeyA = Module.findExportByName("shlwapi.dll", "SHRegEnumUSKeyA")
Interceptor.attach(SHRegEnumUSKeyA, {onLeave: function (args) {send("SHRegEnumUSKeyA");}});

var SHRegEnumUSKeyW = Module.findExportByName("shlwapi.dll", "SHRegEnumUSKeyW")
Interceptor.attach(SHRegEnumUSKeyW, {onLeave: function (args) {send("SHRegEnumUSKeyW");}});

var SHRegEnumUSValueA = Module.findExportByName("shlwapi.dll", "SHRegEnumUSValueA")
Interceptor.attach(SHRegEnumUSValueA, {onLeave: function (args) {send("SHRegEnumUSValueA");}});

var SHRegEnumUSValueW = Module.findExportByName("shlwapi.dll", "SHRegEnumUSValueW")
Interceptor.attach(SHRegEnumUSValueW, {onLeave: function (args) {send("SHRegEnumUSValueW");}});

var SHRegGetBoolUSValueA = Module.findExportByName("shlwapi.dll", "SHRegGetBoolUSValueA")
Interceptor.attach(SHRegGetBoolUSValueA, {onLeave: function (args) {send("SHRegGetBoolUSValueA");}});

var SHRegGetBoolUSValueW = Module.findExportByName("shlwapi.dll", "SHRegGetBoolUSValueW")
Interceptor.attach(SHRegGetBoolUSValueW, {onLeave: function (args) {send("SHRegGetBoolUSValueW");}});

var SHRegGetBoolValueFromHKCUHKLM = Module.findExportByName("shlwapi.dll", "SHRegGetBoolValueFromHKCUHKLM")
Interceptor.attach(SHRegGetBoolValueFromHKCUHKLM, {onLeave: function (args) {send("SHRegGetBoolValueFromHKCUHKLM");}});

var SHRegGetIntW = Module.findExportByName("shlwapi.dll", "SHRegGetIntW")
Interceptor.attach(SHRegGetIntW, {onLeave: function (args) {send("SHRegGetIntW");}});

var SHRegGetPathA = Module.findExportByName("shlwapi.dll", "SHRegGetPathA")
Interceptor.attach(SHRegGetPathA, {onLeave: function (args) {send("SHRegGetPathA");}});

var SHRegGetPathW = Module.findExportByName("shlwapi.dll", "SHRegGetPathW")
Interceptor.attach(SHRegGetPathW, {onLeave: function (args) {send("SHRegGetPathW");}});

var SHRegGetUSValueA = Module.findExportByName("shlwapi.dll", "SHRegGetUSValueA")
Interceptor.attach(SHRegGetUSValueA, {onLeave: function (args) {send("SHRegGetUSValueA");}});

var SHRegGetUSValueW = Module.findExportByName("shlwapi.dll", "SHRegGetUSValueW")
Interceptor.attach(SHRegGetUSValueW, {onLeave: function (args) {send("SHRegGetUSValueW");}});

var SHRegGetValueA = Module.findExportByName("shlwapi.dll", "SHRegGetValueA")
Interceptor.attach(SHRegGetValueA, {onLeave: function (args) {send("SHRegGetValueA");}});

var SHRegGetValueFromHKCUHKLM = Module.findExportByName("shlwapi.dll", "SHRegGetValueFromHKCUHKLM")
Interceptor.attach(SHRegGetValueFromHKCUHKLM, {onLeave: function (args) {send("SHRegGetValueFromHKCUHKLM");}});

var SHRegGetValueW = Module.findExportByName("shlwapi.dll", "SHRegGetValueW")
Interceptor.attach(SHRegGetValueW, {onLeave: function (args) {send("SHRegGetValueW");}});

var SHRegOpenUSKeyA = Module.findExportByName("shlwapi.dll", "SHRegOpenUSKeyA")
Interceptor.attach(SHRegOpenUSKeyA, {onLeave: function (args) {send("SHRegOpenUSKeyA");}});

var SHRegOpenUSKeyW = Module.findExportByName("shlwapi.dll", "SHRegOpenUSKeyW")
Interceptor.attach(SHRegOpenUSKeyW, {onLeave: function (args) {send("SHRegOpenUSKeyW");}});

var SHRegQueryInfoUSKeyA = Module.findExportByName("shlwapi.dll", "SHRegQueryInfoUSKeyA")
Interceptor.attach(SHRegQueryInfoUSKeyA, {onLeave: function (args) {send("SHRegQueryInfoUSKeyA");}});

var SHRegQueryInfoUSKeyW = Module.findExportByName("shlwapi.dll", "SHRegQueryInfoUSKeyW")
Interceptor.attach(SHRegQueryInfoUSKeyW, {onLeave: function (args) {send("SHRegQueryInfoUSKeyW");}});

var SHRegQueryUSValueA = Module.findExportByName("shlwapi.dll", "SHRegQueryUSValueA")
Interceptor.attach(SHRegQueryUSValueA, {onLeave: function (args) {send("SHRegQueryUSValueA");}});

var SHRegQueryUSValueW = Module.findExportByName("shlwapi.dll", "SHRegQueryUSValueW")
Interceptor.attach(SHRegQueryUSValueW, {onLeave: function (args) {send("SHRegQueryUSValueW");}});

var SHRegSetPathA = Module.findExportByName("shlwapi.dll", "SHRegSetPathA")
Interceptor.attach(SHRegSetPathA, {onLeave: function (args) {send("SHRegSetPathA");}});

var SHRegSetPathW = Module.findExportByName("shlwapi.dll", "SHRegSetPathW")
Interceptor.attach(SHRegSetPathW, {onLeave: function (args) {send("SHRegSetPathW");}});

var SHRegSetUSValueA = Module.findExportByName("shlwapi.dll", "SHRegSetUSValueA")
Interceptor.attach(SHRegSetUSValueA, {onLeave: function (args) {send("SHRegSetUSValueA");}});

var SHRegSetUSValueW = Module.findExportByName("shlwapi.dll", "SHRegSetUSValueW")
Interceptor.attach(SHRegSetUSValueW, {onLeave: function (args) {send("SHRegSetUSValueW");}});

var SHRegWriteUSValueA = Module.findExportByName("shlwapi.dll", "SHRegWriteUSValueA")
Interceptor.attach(SHRegWriteUSValueA, {onLeave: function (args) {send("SHRegWriteUSValueA");}});

var SHRegWriteUSValueW = Module.findExportByName("shlwapi.dll", "SHRegWriteUSValueW")
Interceptor.attach(SHRegWriteUSValueW, {onLeave: function (args) {send("SHRegWriteUSValueW");}});

var SHRegisterValidateTemplate = Module.findExportByName("shlwapi.dll", "SHRegisterValidateTemplate")
Interceptor.attach(SHRegisterValidateTemplate, {onLeave: function (args) {send("SHRegisterValidateTemplate");}});

var SHReleaseThreadRef = Module.findExportByName("shlwapi.dll", "SHReleaseThreadRef")
Interceptor.attach(SHReleaseThreadRef, {onLeave: function (args) {send("SHReleaseThreadRef");}});

var SHRunIndirectRegClientCommand = Module.findExportByName("shlwapi.dll", "SHRunIndirectRegClientCommand")
Interceptor.attach(SHRunIndirectRegClientCommand, {onLeave: function (args) {send("SHRunIndirectRegClientCommand");}});

var SHSendMessageBroadcastA = Module.findExportByName("shlwapi.dll", "SHSendMessageBroadcastA")
Interceptor.attach(SHSendMessageBroadcastA, {onLeave: function (args) {send("SHSendMessageBroadcastA");}});

var SHSendMessageBroadcastW = Module.findExportByName("shlwapi.dll", "SHSendMessageBroadcastW")
Interceptor.attach(SHSendMessageBroadcastW, {onLeave: function (args) {send("SHSendMessageBroadcastW");}});

var SHSetThreadRef = Module.findExportByName("shlwapi.dll", "SHSetThreadRef")
Interceptor.attach(SHSetThreadRef, {onLeave: function (args) {send("SHSetThreadRef");}});

var SHSetValueA = Module.findExportByName("shlwapi.dll", "SHSetValueA")
Interceptor.attach(SHSetValueA, {onLeave: function (args) {send("SHSetValueA");}});

var SHSetValueW = Module.findExportByName("shlwapi.dll", "SHSetValueW")
Interceptor.attach(SHSetValueW, {onLeave: function (args) {send("SHSetValueW");}});

var SHSkipJunction = Module.findExportByName("shlwapi.dll", "SHSkipJunction")
Interceptor.attach(SHSkipJunction, {onLeave: function (args) {send("SHSkipJunction");}});

var SHStrDupA = Module.findExportByName("shlwapi.dll", "SHStrDupA")
Interceptor.attach(SHStrDupA, {onLeave: function (args) {send("SHStrDupA");}});

var SHStrDupW = Module.findExportByName("shlwapi.dll", "SHStrDupW")
Interceptor.attach(SHStrDupW, {onLeave: function (args) {send("SHStrDupW");}});

var SHStripMneumonicA = Module.findExportByName("shlwapi.dll", "SHStripMneumonicA")
Interceptor.attach(SHStripMneumonicA, {onLeave: function (args) {send("SHStripMneumonicA");}});

var SHStripMneumonicW = Module.findExportByName("shlwapi.dll", "SHStripMneumonicW")
Interceptor.attach(SHStripMneumonicW, {onLeave: function (args) {send("SHStripMneumonicW");}});

var SHUnicodeToAnsi = Module.findExportByName("shlwapi.dll", "SHUnicodeToAnsi")
Interceptor.attach(SHUnicodeToAnsi, {onLeave: function (args) {send("SHUnicodeToAnsi");}});

var SHUnicodeToAnsiCP = Module.findExportByName("shlwapi.dll", "SHUnicodeToAnsiCP")
Interceptor.attach(SHUnicodeToAnsiCP, {onLeave: function (args) {send("SHUnicodeToAnsiCP");}});

var SHUnicodeToUnicode = Module.findExportByName("shlwapi.dll", "SHUnicodeToUnicode")
Interceptor.attach(SHUnicodeToUnicode, {onLeave: function (args) {send("SHUnicodeToUnicode");}});

var SHUnlockShared = Module.findExportByName("shlwapi.dll", "SHUnlockShared")
Interceptor.attach(SHUnlockShared, {onLeave: function (args) {send("SHUnlockShared");}});

var ShellMessageBoxA = Module.findExportByName("shlwapi.dll", "ShellMessageBoxA")
Interceptor.attach(ShellMessageBoxA, {onLeave: function (args) {send("ShellMessageBoxA");}});

var ShellMessageBoxW = Module.findExportByName("shlwapi.dll", "ShellMessageBoxW")
Interceptor.attach(ShellMessageBoxW, {onLeave: function (args) {send("ShellMessageBoxW");}});

var StrCSpnA = Module.findExportByName("shlwapi.dll", "StrCSpnA")
Interceptor.attach(StrCSpnA, {onLeave: function (args) {send("StrCSpnA");}});

var StrCSpnIA = Module.findExportByName("shlwapi.dll", "StrCSpnIA")
Interceptor.attach(StrCSpnIA, {onLeave: function (args) {send("StrCSpnIA");}});

var StrCSpnIW = Module.findExportByName("shlwapi.dll", "StrCSpnIW")
Interceptor.attach(StrCSpnIW, {onLeave: function (args) {send("StrCSpnIW");}});

var StrCSpnW = Module.findExportByName("shlwapi.dll", "StrCSpnW")
Interceptor.attach(StrCSpnW, {onLeave: function (args) {send("StrCSpnW");}});

var StrCatBuffA = Module.findExportByName("shlwapi.dll", "StrCatBuffA")
Interceptor.attach(StrCatBuffA, {onLeave: function (args) {send("StrCatBuffA");}});

var StrCatBuffW = Module.findExportByName("shlwapi.dll", "StrCatBuffW")
Interceptor.attach(StrCatBuffW, {onLeave: function (args) {send("StrCatBuffW");}});

var StrCatChainW = Module.findExportByName("shlwapi.dll", "StrCatChainW")
Interceptor.attach(StrCatChainW, {onLeave: function (args) {send("StrCatChainW");}});

var StrCatW = Module.findExportByName("shlwapi.dll", "StrCatW")
Interceptor.attach(StrCatW, {onLeave: function (args) {send("StrCatW");}});

var StrChrA = Module.findExportByName("shlwapi.dll", "StrChrA")
Interceptor.attach(StrChrA, {onLeave: function (args) {send("StrChrA");}});

var StrChrIA = Module.findExportByName("shlwapi.dll", "StrChrIA")
Interceptor.attach(StrChrIA, {onLeave: function (args) {send("StrChrIA");}});

var StrChrIW = Module.findExportByName("shlwapi.dll", "StrChrIW")
Interceptor.attach(StrChrIW, {onLeave: function (args) {send("StrChrIW");}});

var StrChrNIW = Module.findExportByName("shlwapi.dll", "StrChrNIW")
Interceptor.attach(StrChrNIW, {onLeave: function (args) {send("StrChrNIW");}});

var StrChrNW = Module.findExportByName("shlwapi.dll", "StrChrNW")
Interceptor.attach(StrChrNW, {onLeave: function (args) {send("StrChrNW");}});

var StrChrW = Module.findExportByName("shlwapi.dll", "StrChrW")
Interceptor.attach(StrChrW, {onLeave: function (args) {send("StrChrW");}});

var StrCmpCA = Module.findExportByName("shlwapi.dll", "StrCmpCA")
Interceptor.attach(StrCmpCA, {onLeave: function (args) {send("StrCmpCA");}});

var StrCmpCW = Module.findExportByName("shlwapi.dll", "StrCmpCW")
Interceptor.attach(StrCmpCW, {onLeave: function (args) {send("StrCmpCW");}});

var StrCmpICA = Module.findExportByName("shlwapi.dll", "StrCmpICA")
Interceptor.attach(StrCmpICA, {onLeave: function (args) {send("StrCmpICA");}});

var StrCmpICW = Module.findExportByName("shlwapi.dll", "StrCmpICW")
Interceptor.attach(StrCmpICW, {onLeave: function (args) {send("StrCmpICW");}});

var StrCmpIW = Module.findExportByName("shlwapi.dll", "StrCmpIW")
Interceptor.attach(StrCmpIW, {onLeave: function (args) {send("StrCmpIW");}});

var StrCmpLogicalW = Module.findExportByName("shlwapi.dll", "StrCmpLogicalW")
Interceptor.attach(StrCmpLogicalW, {onLeave: function (args) {send("StrCmpLogicalW");}});

var StrCmpNA = Module.findExportByName("shlwapi.dll", "StrCmpNA")
Interceptor.attach(StrCmpNA, {onLeave: function (args) {send("StrCmpNA");}});

var StrCmpNCA = Module.findExportByName("shlwapi.dll", "StrCmpNCA")
Interceptor.attach(StrCmpNCA, {onLeave: function (args) {send("StrCmpNCA");}});

var StrCmpNCW = Module.findExportByName("shlwapi.dll", "StrCmpNCW")
Interceptor.attach(StrCmpNCW, {onLeave: function (args) {send("StrCmpNCW");}});

var StrCmpNIA = Module.findExportByName("shlwapi.dll", "StrCmpNIA")
Interceptor.attach(StrCmpNIA, {onLeave: function (args) {send("StrCmpNIA");}});

var StrCmpNICA = Module.findExportByName("shlwapi.dll", "StrCmpNICA")
Interceptor.attach(StrCmpNICA, {onLeave: function (args) {send("StrCmpNICA");}});

var StrCmpNICW = Module.findExportByName("shlwapi.dll", "StrCmpNICW")
Interceptor.attach(StrCmpNICW, {onLeave: function (args) {send("StrCmpNICW");}});

var StrCmpNIW = Module.findExportByName("shlwapi.dll", "StrCmpNIW")
Interceptor.attach(StrCmpNIW, {onLeave: function (args) {send("StrCmpNIW");}});

var StrCmpNW = Module.findExportByName("shlwapi.dll", "StrCmpNW")
Interceptor.attach(StrCmpNW, {onLeave: function (args) {send("StrCmpNW");}});

var StrCmpW = Module.findExportByName("shlwapi.dll", "StrCmpW")
Interceptor.attach(StrCmpW, {onLeave: function (args) {send("StrCmpW");}});

var StrCpyNW = Module.findExportByName("shlwapi.dll", "StrCpyNW")
Interceptor.attach(StrCpyNW, {onLeave: function (args) {send("StrCpyNW");}});

var StrCpyW = Module.findExportByName("shlwapi.dll", "StrCpyW")
Interceptor.attach(StrCpyW, {onLeave: function (args) {send("StrCpyW");}});

var StrDupA = Module.findExportByName("shlwapi.dll", "StrDupA")
Interceptor.attach(StrDupA, {onLeave: function (args) {send("StrDupA");}});

var StrDupW = Module.findExportByName("shlwapi.dll", "StrDupW")
Interceptor.attach(StrDupW, {onLeave: function (args) {send("StrDupW");}});

var StrFormatByteSize64A = Module.findExportByName("shlwapi.dll", "StrFormatByteSize64A")
Interceptor.attach(StrFormatByteSize64A, {onLeave: function (args) {send("StrFormatByteSize64A");}});

var StrFormatByteSizeA = Module.findExportByName("shlwapi.dll", "StrFormatByteSizeA")
Interceptor.attach(StrFormatByteSizeA, {onLeave: function (args) {send("StrFormatByteSizeA");}});

var StrFormatByteSizeEx = Module.findExportByName("shlwapi.dll", "StrFormatByteSizeEx")
Interceptor.attach(StrFormatByteSizeEx, {onLeave: function (args) {send("StrFormatByteSizeEx");}});

var StrFormatByteSizeW = Module.findExportByName("shlwapi.dll", "StrFormatByteSizeW")
Interceptor.attach(StrFormatByteSizeW, {onLeave: function (args) {send("StrFormatByteSizeW");}});

var StrFormatKBSizeA = Module.findExportByName("shlwapi.dll", "StrFormatKBSizeA")
Interceptor.attach(StrFormatKBSizeA, {onLeave: function (args) {send("StrFormatKBSizeA");}});

var StrFormatKBSizeW = Module.findExportByName("shlwapi.dll", "StrFormatKBSizeW")
Interceptor.attach(StrFormatKBSizeW, {onLeave: function (args) {send("StrFormatKBSizeW");}});

var StrFromTimeIntervalA = Module.findExportByName("shlwapi.dll", "StrFromTimeIntervalA")
Interceptor.attach(StrFromTimeIntervalA, {onLeave: function (args) {send("StrFromTimeIntervalA");}});

var StrFromTimeIntervalW = Module.findExportByName("shlwapi.dll", "StrFromTimeIntervalW")
Interceptor.attach(StrFromTimeIntervalW, {onLeave: function (args) {send("StrFromTimeIntervalW");}});

var StrIsIntlEqualA = Module.findExportByName("shlwapi.dll", "StrIsIntlEqualA")
Interceptor.attach(StrIsIntlEqualA, {onLeave: function (args) {send("StrIsIntlEqualA");}});

var StrIsIntlEqualW = Module.findExportByName("shlwapi.dll", "StrIsIntlEqualW")
Interceptor.attach(StrIsIntlEqualW, {onLeave: function (args) {send("StrIsIntlEqualW");}});

var StrNCatA = Module.findExportByName("shlwapi.dll", "StrNCatA")
Interceptor.attach(StrNCatA, {onLeave: function (args) {send("StrNCatA");}});

var StrNCatW = Module.findExportByName("shlwapi.dll", "StrNCatW")
Interceptor.attach(StrNCatW, {onLeave: function (args) {send("StrNCatW");}});

var StrPBrkA = Module.findExportByName("shlwapi.dll", "StrPBrkA")
Interceptor.attach(StrPBrkA, {onLeave: function (args) {send("StrPBrkA");}});

var StrPBrkW = Module.findExportByName("shlwapi.dll", "StrPBrkW")
Interceptor.attach(StrPBrkW, {onLeave: function (args) {send("StrPBrkW");}});

var StrRChrA = Module.findExportByName("shlwapi.dll", "StrRChrA")
Interceptor.attach(StrRChrA, {onLeave: function (args) {send("StrRChrA");}});

var StrRChrIA = Module.findExportByName("shlwapi.dll", "StrRChrIA")
Interceptor.attach(StrRChrIA, {onLeave: function (args) {send("StrRChrIA");}});

var StrRChrIW = Module.findExportByName("shlwapi.dll", "StrRChrIW")
Interceptor.attach(StrRChrIW, {onLeave: function (args) {send("StrRChrIW");}});

var StrRChrW = Module.findExportByName("shlwapi.dll", "StrRChrW")
Interceptor.attach(StrRChrW, {onLeave: function (args) {send("StrRChrW");}});

var StrRStrIA = Module.findExportByName("shlwapi.dll", "StrRStrIA")
Interceptor.attach(StrRStrIA, {onLeave: function (args) {send("StrRStrIA");}});

var StrRStrIW = Module.findExportByName("shlwapi.dll", "StrRStrIW")
Interceptor.attach(StrRStrIW, {onLeave: function (args) {send("StrRStrIW");}});

var StrRetToBSTR = Module.findExportByName("shlwapi.dll", "StrRetToBSTR")
Interceptor.attach(StrRetToBSTR, {onLeave: function (args) {send("StrRetToBSTR");}});

var StrRetToBufA = Module.findExportByName("shlwapi.dll", "StrRetToBufA")
Interceptor.attach(StrRetToBufA, {onLeave: function (args) {send("StrRetToBufA");}});

var StrRetToBufW = Module.findExportByName("shlwapi.dll", "StrRetToBufW")
Interceptor.attach(StrRetToBufW, {onLeave: function (args) {send("StrRetToBufW");}});

var StrRetToStrA = Module.findExportByName("shlwapi.dll", "StrRetToStrA")
Interceptor.attach(StrRetToStrA, {onLeave: function (args) {send("StrRetToStrA");}});

var StrRetToStrW = Module.findExportByName("shlwapi.dll", "StrRetToStrW")
Interceptor.attach(StrRetToStrW, {onLeave: function (args) {send("StrRetToStrW");}});

var StrSpnA = Module.findExportByName("shlwapi.dll", "StrSpnA")
Interceptor.attach(StrSpnA, {onLeave: function (args) {send("StrSpnA");}});

var StrSpnW = Module.findExportByName("shlwapi.dll", "StrSpnW")
Interceptor.attach(StrSpnW, {onLeave: function (args) {send("StrSpnW");}});

var StrStrA = Module.findExportByName("shlwapi.dll", "StrStrA")
Interceptor.attach(StrStrA, {onLeave: function (args) {send("StrStrA");}});

var StrStrIA = Module.findExportByName("shlwapi.dll", "StrStrIA")
Interceptor.attach(StrStrIA, {onLeave: function (args) {send("StrStrIA");}});

var StrStrIW = Module.findExportByName("shlwapi.dll", "StrStrIW")
Interceptor.attach(StrStrIW, {onLeave: function (args) {send("StrStrIW");}});

var StrStrNIW = Module.findExportByName("shlwapi.dll", "StrStrNIW")
Interceptor.attach(StrStrNIW, {onLeave: function (args) {send("StrStrNIW");}});

var StrStrNW = Module.findExportByName("shlwapi.dll", "StrStrNW")
Interceptor.attach(StrStrNW, {onLeave: function (args) {send("StrStrNW");}});

var StrStrW = Module.findExportByName("shlwapi.dll", "StrStrW")
Interceptor.attach(StrStrW, {onLeave: function (args) {send("StrStrW");}});

var StrToInt64ExA = Module.findExportByName("shlwapi.dll", "StrToInt64ExA")
Interceptor.attach(StrToInt64ExA, {onLeave: function (args) {send("StrToInt64ExA");}});

var StrToInt64ExW = Module.findExportByName("shlwapi.dll", "StrToInt64ExW")
Interceptor.attach(StrToInt64ExW, {onLeave: function (args) {send("StrToInt64ExW");}});

var StrToIntA = Module.findExportByName("shlwapi.dll", "StrToIntA")
Interceptor.attach(StrToIntA, {onLeave: function (args) {send("StrToIntA");}});

var StrToIntExA = Module.findExportByName("shlwapi.dll", "StrToIntExA")
Interceptor.attach(StrToIntExA, {onLeave: function (args) {send("StrToIntExA");}});

var StrToIntExW = Module.findExportByName("shlwapi.dll", "StrToIntExW")
Interceptor.attach(StrToIntExW, {onLeave: function (args) {send("StrToIntExW");}});

var StrToIntW = Module.findExportByName("shlwapi.dll", "StrToIntW")
Interceptor.attach(StrToIntW, {onLeave: function (args) {send("StrToIntW");}});

var StrTrimA = Module.findExportByName("shlwapi.dll", "StrTrimA")
Interceptor.attach(StrTrimA, {onLeave: function (args) {send("StrTrimA");}});

var StrTrimW = Module.findExportByName("shlwapi.dll", "StrTrimW")
Interceptor.attach(StrTrimW, {onLeave: function (args) {send("StrTrimW");}});

var UrlApplySchemeA = Module.findExportByName("shlwapi.dll", "UrlApplySchemeA")
Interceptor.attach(UrlApplySchemeA, {onLeave: function (args) {send("UrlApplySchemeA");}});

var UrlApplySchemeW = Module.findExportByName("shlwapi.dll", "UrlApplySchemeW")
Interceptor.attach(UrlApplySchemeW, {onLeave: function (args) {send("UrlApplySchemeW");}});

var UrlCanonicalizeA = Module.findExportByName("shlwapi.dll", "UrlCanonicalizeA")
Interceptor.attach(UrlCanonicalizeA, {onLeave: function (args) {send("UrlCanonicalizeA");}});

var UrlCanonicalizeW = Module.findExportByName("shlwapi.dll", "UrlCanonicalizeW")
Interceptor.attach(UrlCanonicalizeW, {onLeave: function (args) {send("UrlCanonicalizeW");}});

var UrlCombineA = Module.findExportByName("shlwapi.dll", "UrlCombineA")
Interceptor.attach(UrlCombineA, {onLeave: function (args) {send("UrlCombineA");}});

var UrlCombineW = Module.findExportByName("shlwapi.dll", "UrlCombineW")
Interceptor.attach(UrlCombineW, {onLeave: function (args) {send("UrlCombineW");}});

var UrlCompareA = Module.findExportByName("shlwapi.dll", "UrlCompareA")
Interceptor.attach(UrlCompareA, {onLeave: function (args) {send("UrlCompareA");}});

var UrlCompareW = Module.findExportByName("shlwapi.dll", "UrlCompareW")
Interceptor.attach(UrlCompareW, {onLeave: function (args) {send("UrlCompareW");}});

var UrlCreateFromPathA = Module.findExportByName("shlwapi.dll", "UrlCreateFromPathA")
Interceptor.attach(UrlCreateFromPathA, {onLeave: function (args) {send("UrlCreateFromPathA");}});

var UrlCreateFromPathW = Module.findExportByName("shlwapi.dll", "UrlCreateFromPathW")
Interceptor.attach(UrlCreateFromPathW, {onLeave: function (args) {send("UrlCreateFromPathW");}});

var UrlEscapeA = Module.findExportByName("shlwapi.dll", "UrlEscapeA")
Interceptor.attach(UrlEscapeA, {onLeave: function (args) {send("UrlEscapeA");}});

var UrlEscapeW = Module.findExportByName("shlwapi.dll", "UrlEscapeW")
Interceptor.attach(UrlEscapeW, {onLeave: function (args) {send("UrlEscapeW");}});

var UrlFixupW = Module.findExportByName("shlwapi.dll", "UrlFixupW")
Interceptor.attach(UrlFixupW, {onLeave: function (args) {send("UrlFixupW");}});

var UrlGetLocationA = Module.findExportByName("shlwapi.dll", "UrlGetLocationA")
Interceptor.attach(UrlGetLocationA, {onLeave: function (args) {send("UrlGetLocationA");}});

var UrlGetLocationW = Module.findExportByName("shlwapi.dll", "UrlGetLocationW")
Interceptor.attach(UrlGetLocationW, {onLeave: function (args) {send("UrlGetLocationW");}});

var UrlGetPartA = Module.findExportByName("shlwapi.dll", "UrlGetPartA")
Interceptor.attach(UrlGetPartA, {onLeave: function (args) {send("UrlGetPartA");}});

var UrlGetPartW = Module.findExportByName("shlwapi.dll", "UrlGetPartW")
Interceptor.attach(UrlGetPartW, {onLeave: function (args) {send("UrlGetPartW");}});

var UrlHashA = Module.findExportByName("shlwapi.dll", "UrlHashA")
Interceptor.attach(UrlHashA, {onLeave: function (args) {send("UrlHashA");}});

var UrlHashW = Module.findExportByName("shlwapi.dll", "UrlHashW")
Interceptor.attach(UrlHashW, {onLeave: function (args) {send("UrlHashW");}});

var UrlIsA = Module.findExportByName("shlwapi.dll", "UrlIsA")
Interceptor.attach(UrlIsA, {onLeave: function (args) {send("UrlIsA");}});

var UrlIsNoHistoryA = Module.findExportByName("shlwapi.dll", "UrlIsNoHistoryA")
Interceptor.attach(UrlIsNoHistoryA, {onLeave: function (args) {send("UrlIsNoHistoryA");}});

var UrlIsNoHistoryW = Module.findExportByName("shlwapi.dll", "UrlIsNoHistoryW")
Interceptor.attach(UrlIsNoHistoryW, {onLeave: function (args) {send("UrlIsNoHistoryW");}});

var UrlIsOpaqueA = Module.findExportByName("shlwapi.dll", "UrlIsOpaqueA")
Interceptor.attach(UrlIsOpaqueA, {onLeave: function (args) {send("UrlIsOpaqueA");}});

var UrlIsOpaqueW = Module.findExportByName("shlwapi.dll", "UrlIsOpaqueW")
Interceptor.attach(UrlIsOpaqueW, {onLeave: function (args) {send("UrlIsOpaqueW");}});

var UrlIsW = Module.findExportByName("shlwapi.dll", "UrlIsW")
Interceptor.attach(UrlIsW, {onLeave: function (args) {send("UrlIsW");}});

var UrlUnescapeA = Module.findExportByName("shlwapi.dll", "UrlUnescapeA")
Interceptor.attach(UrlUnescapeA, {onLeave: function (args) {send("UrlUnescapeA");}});

var UrlUnescapeW = Module.findExportByName("shlwapi.dll", "UrlUnescapeW")
Interceptor.attach(UrlUnescapeW, {onLeave: function (args) {send("UrlUnescapeW");}});

var WhichPlatform = Module.findExportByName("shlwapi.dll", "WhichPlatform")
Interceptor.attach(WhichPlatform, {onLeave: function (args) {send("WhichPlatform");}});

var wnsprintfA = Module.findExportByName("shlwapi.dll", "wnsprintfA")
Interceptor.attach(wnsprintfA, {onLeave: function (args) {send("wnsprintfA");}});

var wnsprintfW = Module.findExportByName("shlwapi.dll", "wnsprintfW")
Interceptor.attach(wnsprintfW, {onLeave: function (args) {send("wnsprintfW");}});

var wvnsprintfA = Module.findExportByName("shlwapi.dll", "wvnsprintfA")
Interceptor.attach(wvnsprintfA, {onLeave: function (args) {send("wvnsprintfA");}});

var wvnsprintfW = Module.findExportByName("shlwapi.dll", "wvnsprintfW")
Interceptor.attach(wvnsprintfW, {onLeave: function (args) {send("wvnsprintfW");}});

