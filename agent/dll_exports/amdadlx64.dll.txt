var ADLXInitialize = Module.findExportByName("amdadlx64.dll", "ADLXInitialize")
Interceptor.attach(ADLXInitialize, {onLeave: function (args) {send("ADLXInitialize");}});

var ADLXInitializeWithCallerAdl = Module.findExportByName("amdadlx64.dll", "ADLXInitializeWithCallerAdl")
Interceptor.attach(ADLXInitializeWithCallerAdl, {onLeave: function (args) {send("ADLXInitializeWithCallerAdl");}});

var ADLXInitializeWithIncompatibleDriver = Module.findExportByName("amdadlx64.dll", "ADLXInitializeWithIncompatibleDriver")
Interceptor.attach(ADLXInitializeWithIncompatibleDriver, {onLeave: function (args) {send("ADLXInitializeWithIncompatibleDriver");}});

var ADLXQueryFullVersion = Module.findExportByName("amdadlx64.dll", "ADLXQueryFullVersion")
Interceptor.attach(ADLXQueryFullVersion, {onLeave: function (args) {send("ADLXQueryFullVersion");}});

var ADLXQueryVersion = Module.findExportByName("amdadlx64.dll", "ADLXQueryVersion")
Interceptor.attach(ADLXQueryVersion, {onLeave: function (args) {send("ADLXQueryVersion");}});

var ADLXTerminate = Module.findExportByName("amdadlx64.dll", "ADLXTerminate")
Interceptor.attach(ADLXTerminate, {onLeave: function (args) {send("ADLXTerminate");}});

