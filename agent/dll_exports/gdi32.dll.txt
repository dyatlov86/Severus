var AbortDoc = Module.findExportByName("gdi32.dll", "AbortDoc")
Interceptor.attach(AbortDoc, {onLeave: function (args) {send("AbortDoc");}});

var AbortPath = Module.findExportByName("gdi32.dll", "AbortPath")
Interceptor.attach(AbortPath, {onLeave: function (args) {send("AbortPath");}});

var AddFontMemResourceEx = Module.findExportByName("gdi32.dll", "AddFontMemResourceEx")
Interceptor.attach(AddFontMemResourceEx, {onLeave: function (args) {send("AddFontMemResourceEx");}});

var AddFontResourceA = Module.findExportByName("gdi32.dll", "AddFontResourceA")
Interceptor.attach(AddFontResourceA, {onLeave: function (args) {send("AddFontResourceA");}});

var AddFontResourceExA = Module.findExportByName("gdi32.dll", "AddFontResourceExA")
Interceptor.attach(AddFontResourceExA, {onLeave: function (args) {send("AddFontResourceExA");}});

var AddFontResourceExW = Module.findExportByName("gdi32.dll", "AddFontResourceExW")
Interceptor.attach(AddFontResourceExW, {onLeave: function (args) {send("AddFontResourceExW");}});

var AddFontResourceTracking = Module.findExportByName("gdi32.dll", "AddFontResourceTracking")
Interceptor.attach(AddFontResourceTracking, {onLeave: function (args) {send("AddFontResourceTracking");}});

var AddFontResourceW = Module.findExportByName("gdi32.dll", "AddFontResourceW")
Interceptor.attach(AddFontResourceW, {onLeave: function (args) {send("AddFontResourceW");}});

var AngleArc = Module.findExportByName("gdi32.dll", "AngleArc")
Interceptor.attach(AngleArc, {onLeave: function (args) {send("AngleArc");}});

var AnimatePalette = Module.findExportByName("gdi32.dll", "AnimatePalette")
Interceptor.attach(AnimatePalette, {onLeave: function (args) {send("AnimatePalette");}});

var AnyLinkedFonts = Module.findExportByName("gdi32.dll", "AnyLinkedFonts")
Interceptor.attach(AnyLinkedFonts, {onLeave: function (args) {send("AnyLinkedFonts");}});

var Arc = Module.findExportByName("gdi32.dll", "Arc")
Interceptor.attach(Arc, {onLeave: function (args) {send("Arc");}});

var ArcTo = Module.findExportByName("gdi32.dll", "ArcTo")
Interceptor.attach(ArcTo, {onLeave: function (args) {send("ArcTo");}});

var BRUSHOBJ_hGetColorTransform = Module.findExportByName("gdi32.dll", "BRUSHOBJ_hGetColorTransform")
Interceptor.attach(BRUSHOBJ_hGetColorTransform, {onLeave: function (args) {send("BRUSHOBJ_hGetColorTransform");}});

var BRUSHOBJ_pvAllocRbrush = Module.findExportByName("gdi32.dll", "BRUSHOBJ_pvAllocRbrush")
Interceptor.attach(BRUSHOBJ_pvAllocRbrush, {onLeave: function (args) {send("BRUSHOBJ_pvAllocRbrush");}});

var BRUSHOBJ_pvGetRbrush = Module.findExportByName("gdi32.dll", "BRUSHOBJ_pvGetRbrush")
Interceptor.attach(BRUSHOBJ_pvGetRbrush, {onLeave: function (args) {send("BRUSHOBJ_pvGetRbrush");}});

var BRUSHOBJ_ulGetBrushColor = Module.findExportByName("gdi32.dll", "BRUSHOBJ_ulGetBrushColor")
Interceptor.attach(BRUSHOBJ_ulGetBrushColor, {onLeave: function (args) {send("BRUSHOBJ_ulGetBrushColor");}});

var BeginGdiRendering = Module.findExportByName("gdi32.dll", "BeginGdiRendering")
Interceptor.attach(BeginGdiRendering, {onLeave: function (args) {send("BeginGdiRendering");}});

var BeginPath = Module.findExportByName("gdi32.dll", "BeginPath")
Interceptor.attach(BeginPath, {onLeave: function (args) {send("BeginPath");}});

var BitBlt = Module.findExportByName("gdi32.dll", "BitBlt")
Interceptor.attach(BitBlt, {onLeave: function (args) {send("BitBlt");}});

var CLIPOBJ_bEnum = Module.findExportByName("gdi32.dll", "CLIPOBJ_bEnum")
Interceptor.attach(CLIPOBJ_bEnum, {onLeave: function (args) {send("CLIPOBJ_bEnum");}});

var CLIPOBJ_cEnumStart = Module.findExportByName("gdi32.dll", "CLIPOBJ_cEnumStart")
Interceptor.attach(CLIPOBJ_cEnumStart, {onLeave: function (args) {send("CLIPOBJ_cEnumStart");}});

var CLIPOBJ_ppoGetPath = Module.findExportByName("gdi32.dll", "CLIPOBJ_ppoGetPath")
Interceptor.attach(CLIPOBJ_ppoGetPath, {onLeave: function (args) {send("CLIPOBJ_ppoGetPath");}});

var CancelDC = Module.findExportByName("gdi32.dll", "CancelDC")
Interceptor.attach(CancelDC, {onLeave: function (args) {send("CancelDC");}});

var CheckColorsInGamut = Module.findExportByName("gdi32.dll", "CheckColorsInGamut")
Interceptor.attach(CheckColorsInGamut, {onLeave: function (args) {send("CheckColorsInGamut");}});

var ChoosePixelFormat = Module.findExportByName("gdi32.dll", "ChoosePixelFormat")
Interceptor.attach(ChoosePixelFormat, {onLeave: function (args) {send("ChoosePixelFormat");}});

var Chord = Module.findExportByName("gdi32.dll", "Chord")
Interceptor.attach(Chord, {onLeave: function (args) {send("Chord");}});

var ClearBitmapAttributes = Module.findExportByName("gdi32.dll", "ClearBitmapAttributes")
Interceptor.attach(ClearBitmapAttributes, {onLeave: function (args) {send("ClearBitmapAttributes");}});

var ClearBrushAttributes = Module.findExportByName("gdi32.dll", "ClearBrushAttributes")
Interceptor.attach(ClearBrushAttributes, {onLeave: function (args) {send("ClearBrushAttributes");}});

var CloseEnhMetaFile = Module.findExportByName("gdi32.dll", "CloseEnhMetaFile")
Interceptor.attach(CloseEnhMetaFile, {onLeave: function (args) {send("CloseEnhMetaFile");}});

var CloseFigure = Module.findExportByName("gdi32.dll", "CloseFigure")
Interceptor.attach(CloseFigure, {onLeave: function (args) {send("CloseFigure");}});

var CloseMetaFile = Module.findExportByName("gdi32.dll", "CloseMetaFile")
Interceptor.attach(CloseMetaFile, {onLeave: function (args) {send("CloseMetaFile");}});

var ColorCorrectPalette = Module.findExportByName("gdi32.dll", "ColorCorrectPalette")
Interceptor.attach(ColorCorrectPalette, {onLeave: function (args) {send("ColorCorrectPalette");}});

var ColorMatchToTarget = Module.findExportByName("gdi32.dll", "ColorMatchToTarget")
Interceptor.attach(ColorMatchToTarget, {onLeave: function (args) {send("ColorMatchToTarget");}});

var CombineRgn = Module.findExportByName("gdi32.dll", "CombineRgn")
Interceptor.attach(CombineRgn, {onLeave: function (args) {send("CombineRgn");}});

var CombineTransform = Module.findExportByName("gdi32.dll", "CombineTransform")
Interceptor.attach(CombineTransform, {onLeave: function (args) {send("CombineTransform");}});

var ConfigureOPMProtectedOutput = Module.findExportByName("gdi32.dll", "ConfigureOPMProtectedOutput")
Interceptor.attach(ConfigureOPMProtectedOutput, {onLeave: function (args) {send("ConfigureOPMProtectedOutput");}});

var CopyEnhMetaFileA = Module.findExportByName("gdi32.dll", "CopyEnhMetaFileA")
Interceptor.attach(CopyEnhMetaFileA, {onLeave: function (args) {send("CopyEnhMetaFileA");}});

var CopyEnhMetaFileW = Module.findExportByName("gdi32.dll", "CopyEnhMetaFileW")
Interceptor.attach(CopyEnhMetaFileW, {onLeave: function (args) {send("CopyEnhMetaFileW");}});

var CopyMetaFileA = Module.findExportByName("gdi32.dll", "CopyMetaFileA")
Interceptor.attach(CopyMetaFileA, {onLeave: function (args) {send("CopyMetaFileA");}});

var CopyMetaFileW = Module.findExportByName("gdi32.dll", "CopyMetaFileW")
Interceptor.attach(CopyMetaFileW, {onLeave: function (args) {send("CopyMetaFileW");}});

var CreateBitmap = Module.findExportByName("gdi32.dll", "CreateBitmap")
Interceptor.attach(CreateBitmap, {onLeave: function (args) {send("CreateBitmap");}});

var CreateBitmapFromDxSurface = Module.findExportByName("gdi32.dll", "CreateBitmapFromDxSurface")
Interceptor.attach(CreateBitmapFromDxSurface, {onLeave: function (args) {send("CreateBitmapFromDxSurface");}});

var CreateBitmapFromDxSurface2 = Module.findExportByName("gdi32.dll", "CreateBitmapFromDxSurface2")
Interceptor.attach(CreateBitmapFromDxSurface2, {onLeave: function (args) {send("CreateBitmapFromDxSurface2");}});

var CreateBitmapIndirect = Module.findExportByName("gdi32.dll", "CreateBitmapIndirect")
Interceptor.attach(CreateBitmapIndirect, {onLeave: function (args) {send("CreateBitmapIndirect");}});

var CreateBrushIndirect = Module.findExportByName("gdi32.dll", "CreateBrushIndirect")
Interceptor.attach(CreateBrushIndirect, {onLeave: function (args) {send("CreateBrushIndirect");}});

var CreateColorSpaceA = Module.findExportByName("gdi32.dll", "CreateColorSpaceA")
Interceptor.attach(CreateColorSpaceA, {onLeave: function (args) {send("CreateColorSpaceA");}});

var CreateColorSpaceW = Module.findExportByName("gdi32.dll", "CreateColorSpaceW")
Interceptor.attach(CreateColorSpaceW, {onLeave: function (args) {send("CreateColorSpaceW");}});

var CreateCompatibleBitmap = Module.findExportByName("gdi32.dll", "CreateCompatibleBitmap")
Interceptor.attach(CreateCompatibleBitmap, {onLeave: function (args) {send("CreateCompatibleBitmap");}});

var CreateCompatibleDC = Module.findExportByName("gdi32.dll", "CreateCompatibleDC")
Interceptor.attach(CreateCompatibleDC, {onLeave: function (args) {send("CreateCompatibleDC");}});

var CreateDCA = Module.findExportByName("gdi32.dll", "CreateDCA")
Interceptor.attach(CreateDCA, {onLeave: function (args) {send("CreateDCA");}});

var CreateDCExW = Module.findExportByName("gdi32.dll", "CreateDCExW")
Interceptor.attach(CreateDCExW, {onLeave: function (args) {send("CreateDCExW");}});

var CreateDCW = Module.findExportByName("gdi32.dll", "CreateDCW")
Interceptor.attach(CreateDCW, {onLeave: function (args) {send("CreateDCW");}});

var CreateDIBPatternBrush = Module.findExportByName("gdi32.dll", "CreateDIBPatternBrush")
Interceptor.attach(CreateDIBPatternBrush, {onLeave: function (args) {send("CreateDIBPatternBrush");}});

var CreateDIBPatternBrushPt = Module.findExportByName("gdi32.dll", "CreateDIBPatternBrushPt")
Interceptor.attach(CreateDIBPatternBrushPt, {onLeave: function (args) {send("CreateDIBPatternBrushPt");}});

var CreateDIBSection = Module.findExportByName("gdi32.dll", "CreateDIBSection")
Interceptor.attach(CreateDIBSection, {onLeave: function (args) {send("CreateDIBSection");}});

var CreateDIBitmap = Module.findExportByName("gdi32.dll", "CreateDIBitmap")
Interceptor.attach(CreateDIBitmap, {onLeave: function (args) {send("CreateDIBitmap");}});

var CreateDPIScaledDIBSection = Module.findExportByName("gdi32.dll", "CreateDPIScaledDIBSection")
Interceptor.attach(CreateDPIScaledDIBSection, {onLeave: function (args) {send("CreateDPIScaledDIBSection");}});

var CreateDiscardableBitmap = Module.findExportByName("gdi32.dll", "CreateDiscardableBitmap")
Interceptor.attach(CreateDiscardableBitmap, {onLeave: function (args) {send("CreateDiscardableBitmap");}});

var CreateEllipticRgn = Module.findExportByName("gdi32.dll", "CreateEllipticRgn")
Interceptor.attach(CreateEllipticRgn, {onLeave: function (args) {send("CreateEllipticRgn");}});

var CreateEllipticRgnIndirect = Module.findExportByName("gdi32.dll", "CreateEllipticRgnIndirect")
Interceptor.attach(CreateEllipticRgnIndirect, {onLeave: function (args) {send("CreateEllipticRgnIndirect");}});

var CreateEnhMetaFileA = Module.findExportByName("gdi32.dll", "CreateEnhMetaFileA")
Interceptor.attach(CreateEnhMetaFileA, {onLeave: function (args) {send("CreateEnhMetaFileA");}});

var CreateEnhMetaFileW = Module.findExportByName("gdi32.dll", "CreateEnhMetaFileW")
Interceptor.attach(CreateEnhMetaFileW, {onLeave: function (args) {send("CreateEnhMetaFileW");}});

var CreateFontA = Module.findExportByName("gdi32.dll", "CreateFontA")
Interceptor.attach(CreateFontA, {onLeave: function (args) {send("CreateFontA");}});

var CreateFontIndirectA = Module.findExportByName("gdi32.dll", "CreateFontIndirectA")
Interceptor.attach(CreateFontIndirectA, {onLeave: function (args) {send("CreateFontIndirectA");}});

var CreateFontIndirectExA = Module.findExportByName("gdi32.dll", "CreateFontIndirectExA")
Interceptor.attach(CreateFontIndirectExA, {onLeave: function (args) {send("CreateFontIndirectExA");}});

var CreateFontIndirectExW = Module.findExportByName("gdi32.dll", "CreateFontIndirectExW")
Interceptor.attach(CreateFontIndirectExW, {onLeave: function (args) {send("CreateFontIndirectExW");}});

var CreateFontIndirectW = Module.findExportByName("gdi32.dll", "CreateFontIndirectW")
Interceptor.attach(CreateFontIndirectW, {onLeave: function (args) {send("CreateFontIndirectW");}});

var CreateFontW = Module.findExportByName("gdi32.dll", "CreateFontW")
Interceptor.attach(CreateFontW, {onLeave: function (args) {send("CreateFontW");}});

var CreateHalftonePalette = Module.findExportByName("gdi32.dll", "CreateHalftonePalette")
Interceptor.attach(CreateHalftonePalette, {onLeave: function (args) {send("CreateHalftonePalette");}});

var CreateHatchBrush = Module.findExportByName("gdi32.dll", "CreateHatchBrush")
Interceptor.attach(CreateHatchBrush, {onLeave: function (args) {send("CreateHatchBrush");}});

var CreateICA = Module.findExportByName("gdi32.dll", "CreateICA")
Interceptor.attach(CreateICA, {onLeave: function (args) {send("CreateICA");}});

var CreateICW = Module.findExportByName("gdi32.dll", "CreateICW")
Interceptor.attach(CreateICW, {onLeave: function (args) {send("CreateICW");}});

var CreateMetaFileA = Module.findExportByName("gdi32.dll", "CreateMetaFileA")
Interceptor.attach(CreateMetaFileA, {onLeave: function (args) {send("CreateMetaFileA");}});

var CreateMetaFileW = Module.findExportByName("gdi32.dll", "CreateMetaFileW")
Interceptor.attach(CreateMetaFileW, {onLeave: function (args) {send("CreateMetaFileW");}});

var CreateOPMProtectedOutput = Module.findExportByName("gdi32.dll", "CreateOPMProtectedOutput")
Interceptor.attach(CreateOPMProtectedOutput, {onLeave: function (args) {send("CreateOPMProtectedOutput");}});

var CreateOPMProtectedOutputs = Module.findExportByName("gdi32.dll", "CreateOPMProtectedOutputs")
Interceptor.attach(CreateOPMProtectedOutputs, {onLeave: function (args) {send("CreateOPMProtectedOutputs");}});

var CreatePalette = Module.findExportByName("gdi32.dll", "CreatePalette")
Interceptor.attach(CreatePalette, {onLeave: function (args) {send("CreatePalette");}});

var CreatePatternBrush = Module.findExportByName("gdi32.dll", "CreatePatternBrush")
Interceptor.attach(CreatePatternBrush, {onLeave: function (args) {send("CreatePatternBrush");}});

var CreatePen = Module.findExportByName("gdi32.dll", "CreatePen")
Interceptor.attach(CreatePen, {onLeave: function (args) {send("CreatePen");}});

var CreatePenIndirect = Module.findExportByName("gdi32.dll", "CreatePenIndirect")
Interceptor.attach(CreatePenIndirect, {onLeave: function (args) {send("CreatePenIndirect");}});

var CreatePolyPolygonRgn = Module.findExportByName("gdi32.dll", "CreatePolyPolygonRgn")
Interceptor.attach(CreatePolyPolygonRgn, {onLeave: function (args) {send("CreatePolyPolygonRgn");}});

var CreatePolygonRgn = Module.findExportByName("gdi32.dll", "CreatePolygonRgn")
Interceptor.attach(CreatePolygonRgn, {onLeave: function (args) {send("CreatePolygonRgn");}});

var CreateRectRgn = Module.findExportByName("gdi32.dll", "CreateRectRgn")
Interceptor.attach(CreateRectRgn, {onLeave: function (args) {send("CreateRectRgn");}});

var CreateRectRgnIndirect = Module.findExportByName("gdi32.dll", "CreateRectRgnIndirect")
Interceptor.attach(CreateRectRgnIndirect, {onLeave: function (args) {send("CreateRectRgnIndirect");}});

var CreateRoundRectRgn = Module.findExportByName("gdi32.dll", "CreateRoundRectRgn")
Interceptor.attach(CreateRoundRectRgn, {onLeave: function (args) {send("CreateRoundRectRgn");}});

var CreateScalableFontResourceA = Module.findExportByName("gdi32.dll", "CreateScalableFontResourceA")
Interceptor.attach(CreateScalableFontResourceA, {onLeave: function (args) {send("CreateScalableFontResourceA");}});

var CreateScalableFontResourceW = Module.findExportByName("gdi32.dll", "CreateScalableFontResourceW")
Interceptor.attach(CreateScalableFontResourceW, {onLeave: function (args) {send("CreateScalableFontResourceW");}});

var CreateScaledCompatibleBitmap = Module.findExportByName("gdi32.dll", "CreateScaledCompatibleBitmap")
Interceptor.attach(CreateScaledCompatibleBitmap, {onLeave: function (args) {send("CreateScaledCompatibleBitmap");}});

var CreateSessionMappedDIBSection = Module.findExportByName("gdi32.dll", "CreateSessionMappedDIBSection")
Interceptor.attach(CreateSessionMappedDIBSection, {onLeave: function (args) {send("CreateSessionMappedDIBSection");}});

var CreateSolidBrush = Module.findExportByName("gdi32.dll", "CreateSolidBrush")
Interceptor.attach(CreateSolidBrush, {onLeave: function (args) {send("CreateSolidBrush");}});

var D3DKMTAbandonSwapChain = Module.findExportByName("gdi32.dll", "D3DKMTAbandonSwapChain")
Interceptor.attach(D3DKMTAbandonSwapChain, {onLeave: function (args) {send("D3DKMTAbandonSwapChain");}});

var D3DKMTAcquireKeyedMutex = Module.findExportByName("gdi32.dll", "D3DKMTAcquireKeyedMutex")
Interceptor.attach(D3DKMTAcquireKeyedMutex, {onLeave: function (args) {send("D3DKMTAcquireKeyedMutex");}});

var D3DKMTAcquireKeyedMutex2 = Module.findExportByName("gdi32.dll", "D3DKMTAcquireKeyedMutex2")
Interceptor.attach(D3DKMTAcquireKeyedMutex2, {onLeave: function (args) {send("D3DKMTAcquireKeyedMutex2");}});

var D3DKMTAcquireSwapChain = Module.findExportByName("gdi32.dll", "D3DKMTAcquireSwapChain")
Interceptor.attach(D3DKMTAcquireSwapChain, {onLeave: function (args) {send("D3DKMTAcquireSwapChain");}});

var D3DKMTAddSurfaceToSwapChain = Module.findExportByName("gdi32.dll", "D3DKMTAddSurfaceToSwapChain")
Interceptor.attach(D3DKMTAddSurfaceToSwapChain, {onLeave: function (args) {send("D3DKMTAddSurfaceToSwapChain");}});

var D3DKMTAdjustFullscreenGamma = Module.findExportByName("gdi32.dll", "D3DKMTAdjustFullscreenGamma")
Interceptor.attach(D3DKMTAdjustFullscreenGamma, {onLeave: function (args) {send("D3DKMTAdjustFullscreenGamma");}});

var D3DKMTCacheHybridQueryValue = Module.findExportByName("gdi32.dll", "D3DKMTCacheHybridQueryValue")
Interceptor.attach(D3DKMTCacheHybridQueryValue, {onLeave: function (args) {send("D3DKMTCacheHybridQueryValue");}});

var D3DKMTCancelPresents = Module.findExportByName("gdi32.dll", "D3DKMTCancelPresents")
Interceptor.attach(D3DKMTCancelPresents, {onLeave: function (args) {send("D3DKMTCancelPresents");}});

var D3DKMTChangeVideoMemoryReservation = Module.findExportByName("gdi32.dll", "D3DKMTChangeVideoMemoryReservation")
Interceptor.attach(D3DKMTChangeVideoMemoryReservation, {onLeave: function (args) {send("D3DKMTChangeVideoMemoryReservation");}});

var D3DKMTCheckExclusiveOwnership = Module.findExportByName("gdi32.dll", "D3DKMTCheckExclusiveOwnership")
Interceptor.attach(D3DKMTCheckExclusiveOwnership, {onLeave: function (args) {send("D3DKMTCheckExclusiveOwnership");}});

var D3DKMTCheckMonitorPowerState = Module.findExportByName("gdi32.dll", "D3DKMTCheckMonitorPowerState")
Interceptor.attach(D3DKMTCheckMonitorPowerState, {onLeave: function (args) {send("D3DKMTCheckMonitorPowerState");}});

var D3DKMTCheckMultiPlaneOverlaySupport = Module.findExportByName("gdi32.dll", "D3DKMTCheckMultiPlaneOverlaySupport")
Interceptor.attach(D3DKMTCheckMultiPlaneOverlaySupport, {onLeave: function (args) {send("D3DKMTCheckMultiPlaneOverlaySupport");}});

var D3DKMTCheckMultiPlaneOverlaySupport2 = Module.findExportByName("gdi32.dll", "D3DKMTCheckMultiPlaneOverlaySupport2")
Interceptor.attach(D3DKMTCheckMultiPlaneOverlaySupport2, {onLeave: function (args) {send("D3DKMTCheckMultiPlaneOverlaySupport2");}});

var D3DKMTCheckMultiPlaneOverlaySupport3 = Module.findExportByName("gdi32.dll", "D3DKMTCheckMultiPlaneOverlaySupport3")
Interceptor.attach(D3DKMTCheckMultiPlaneOverlaySupport3, {onLeave: function (args) {send("D3DKMTCheckMultiPlaneOverlaySupport3");}});

var D3DKMTCheckOcclusion = Module.findExportByName("gdi32.dll", "D3DKMTCheckOcclusion")
Interceptor.attach(D3DKMTCheckOcclusion, {onLeave: function (args) {send("D3DKMTCheckOcclusion");}});

var D3DKMTCheckSharedResourceAccess = Module.findExportByName("gdi32.dll", "D3DKMTCheckSharedResourceAccess")
Interceptor.attach(D3DKMTCheckSharedResourceAccess, {onLeave: function (args) {send("D3DKMTCheckSharedResourceAccess");}});

var D3DKMTCheckSinglePlaneForMultiPlaneOverlaySupport = Module.findExportByName("gdi32.dll", "D3DKMTCheckSinglePlaneForMultiPlaneOverlaySupport")
Interceptor.attach(D3DKMTCheckSinglePlaneForMultiPlaneOverlaySupport, {onLeave: function (args) {send("D3DKMTCheckSinglePlaneForMultiPlaneOverlaySupport");}});

var D3DKMTCheckVidPnExclusiveOwnership = Module.findExportByName("gdi32.dll", "D3DKMTCheckVidPnExclusiveOwnership")
Interceptor.attach(D3DKMTCheckVidPnExclusiveOwnership, {onLeave: function (args) {send("D3DKMTCheckVidPnExclusiveOwnership");}});

var D3DKMTCloseAdapter = Module.findExportByName("gdi32.dll", "D3DKMTCloseAdapter")
Interceptor.attach(D3DKMTCloseAdapter, {onLeave: function (args) {send("D3DKMTCloseAdapter");}});

var D3DKMTConfigureSharedResource = Module.findExportByName("gdi32.dll", "D3DKMTConfigureSharedResource")
Interceptor.attach(D3DKMTConfigureSharedResource, {onLeave: function (args) {send("D3DKMTConfigureSharedResource");}});

var D3DKMTConnectDoorbell = Module.findExportByName("gdi32.dll", "D3DKMTConnectDoorbell")
Interceptor.attach(D3DKMTConnectDoorbell, {onLeave: function (args) {send("D3DKMTConnectDoorbell");}});

var D3DKMTCreateAllocation = Module.findExportByName("gdi32.dll", "D3DKMTCreateAllocation")
Interceptor.attach(D3DKMTCreateAllocation, {onLeave: function (args) {send("D3DKMTCreateAllocation");}});

var D3DKMTCreateAllocation2 = Module.findExportByName("gdi32.dll", "D3DKMTCreateAllocation2")
Interceptor.attach(D3DKMTCreateAllocation2, {onLeave: function (args) {send("D3DKMTCreateAllocation2");}});

var D3DKMTCreateBundleObject = Module.findExportByName("gdi32.dll", "D3DKMTCreateBundleObject")
Interceptor.attach(D3DKMTCreateBundleObject, {onLeave: function (args) {send("D3DKMTCreateBundleObject");}});

var D3DKMTCreateContext = Module.findExportByName("gdi32.dll", "D3DKMTCreateContext")
Interceptor.attach(D3DKMTCreateContext, {onLeave: function (args) {send("D3DKMTCreateContext");}});

var D3DKMTCreateContextVirtual = Module.findExportByName("gdi32.dll", "D3DKMTCreateContextVirtual")
Interceptor.attach(D3DKMTCreateContextVirtual, {onLeave: function (args) {send("D3DKMTCreateContextVirtual");}});

var D3DKMTCreateDCFromMemory = Module.findExportByName("gdi32.dll", "D3DKMTCreateDCFromMemory")
Interceptor.attach(D3DKMTCreateDCFromMemory, {onLeave: function (args) {send("D3DKMTCreateDCFromMemory");}});

var D3DKMTCreateDevice = Module.findExportByName("gdi32.dll", "D3DKMTCreateDevice")
Interceptor.attach(D3DKMTCreateDevice, {onLeave: function (args) {send("D3DKMTCreateDevice");}});

var D3DKMTCreateDoorbell = Module.findExportByName("gdi32.dll", "D3DKMTCreateDoorbell")
Interceptor.attach(D3DKMTCreateDoorbell, {onLeave: function (args) {send("D3DKMTCreateDoorbell");}});

var D3DKMTCreateHwContext = Module.findExportByName("gdi32.dll", "D3DKMTCreateHwContext")
Interceptor.attach(D3DKMTCreateHwContext, {onLeave: function (args) {send("D3DKMTCreateHwContext");}});

var D3DKMTCreateHwQueue = Module.findExportByName("gdi32.dll", "D3DKMTCreateHwQueue")
Interceptor.attach(D3DKMTCreateHwQueue, {onLeave: function (args) {send("D3DKMTCreateHwQueue");}});

var D3DKMTCreateKeyedMutex = Module.findExportByName("gdi32.dll", "D3DKMTCreateKeyedMutex")
Interceptor.attach(D3DKMTCreateKeyedMutex, {onLeave: function (args) {send("D3DKMTCreateKeyedMutex");}});

var D3DKMTCreateKeyedMutex2 = Module.findExportByName("gdi32.dll", "D3DKMTCreateKeyedMutex2")
Interceptor.attach(D3DKMTCreateKeyedMutex2, {onLeave: function (args) {send("D3DKMTCreateKeyedMutex2");}});

var D3DKMTCreateNativeFence = Module.findExportByName("gdi32.dll", "D3DKMTCreateNativeFence")
Interceptor.attach(D3DKMTCreateNativeFence, {onLeave: function (args) {send("D3DKMTCreateNativeFence");}});

var D3DKMTCreateOutputDupl = Module.findExportByName("gdi32.dll", "D3DKMTCreateOutputDupl")
Interceptor.attach(D3DKMTCreateOutputDupl, {onLeave: function (args) {send("D3DKMTCreateOutputDupl");}});

var D3DKMTCreateOverlay = Module.findExportByName("gdi32.dll", "D3DKMTCreateOverlay")
Interceptor.attach(D3DKMTCreateOverlay, {onLeave: function (args) {send("D3DKMTCreateOverlay");}});

var D3DKMTCreatePagingQueue = Module.findExportByName("gdi32.dll", "D3DKMTCreatePagingQueue")
Interceptor.attach(D3DKMTCreatePagingQueue, {onLeave: function (args) {send("D3DKMTCreatePagingQueue");}});

var D3DKMTCreateProtectedSession = Module.findExportByName("gdi32.dll", "D3DKMTCreateProtectedSession")
Interceptor.attach(D3DKMTCreateProtectedSession, {onLeave: function (args) {send("D3DKMTCreateProtectedSession");}});

var D3DKMTCreateSwapChain = Module.findExportByName("gdi32.dll", "D3DKMTCreateSwapChain")
Interceptor.attach(D3DKMTCreateSwapChain, {onLeave: function (args) {send("D3DKMTCreateSwapChain");}});

var D3DKMTCreateSynchronizationObject = Module.findExportByName("gdi32.dll", "D3DKMTCreateSynchronizationObject")
Interceptor.attach(D3DKMTCreateSynchronizationObject, {onLeave: function (args) {send("D3DKMTCreateSynchronizationObject");}});

var D3DKMTCreateSynchronizationObject2 = Module.findExportByName("gdi32.dll", "D3DKMTCreateSynchronizationObject2")
Interceptor.attach(D3DKMTCreateSynchronizationObject2, {onLeave: function (args) {send("D3DKMTCreateSynchronizationObject2");}});

var D3DKMTCreateTrackedWorkload = Module.findExportByName("gdi32.dll", "D3DKMTCreateTrackedWorkload")
Interceptor.attach(D3DKMTCreateTrackedWorkload, {onLeave: function (args) {send("D3DKMTCreateTrackedWorkload");}});

var D3DKMTDDisplayEnum = Module.findExportByName("gdi32.dll", "D3DKMTDDisplayEnum")
Interceptor.attach(D3DKMTDDisplayEnum, {onLeave: function (args) {send("D3DKMTDDisplayEnum");}});

var D3DKMTDestroyAllocation = Module.findExportByName("gdi32.dll", "D3DKMTDestroyAllocation")
Interceptor.attach(D3DKMTDestroyAllocation, {onLeave: function (args) {send("D3DKMTDestroyAllocation");}});

var D3DKMTDestroyAllocation2 = Module.findExportByName("gdi32.dll", "D3DKMTDestroyAllocation2")
Interceptor.attach(D3DKMTDestroyAllocation2, {onLeave: function (args) {send("D3DKMTDestroyAllocation2");}});

var D3DKMTDestroyContext = Module.findExportByName("gdi32.dll", "D3DKMTDestroyContext")
Interceptor.attach(D3DKMTDestroyContext, {onLeave: function (args) {send("D3DKMTDestroyContext");}});

var D3DKMTDestroyDCFromMemory = Module.findExportByName("gdi32.dll", "D3DKMTDestroyDCFromMemory")
Interceptor.attach(D3DKMTDestroyDCFromMemory, {onLeave: function (args) {send("D3DKMTDestroyDCFromMemory");}});

var D3DKMTDestroyDevice = Module.findExportByName("gdi32.dll", "D3DKMTDestroyDevice")
Interceptor.attach(D3DKMTDestroyDevice, {onLeave: function (args) {send("D3DKMTDestroyDevice");}});

var D3DKMTDestroyDoorbell = Module.findExportByName("gdi32.dll", "D3DKMTDestroyDoorbell")
Interceptor.attach(D3DKMTDestroyDoorbell, {onLeave: function (args) {send("D3DKMTDestroyDoorbell");}});

var D3DKMTDestroyHwContext = Module.findExportByName("gdi32.dll", "D3DKMTDestroyHwContext")
Interceptor.attach(D3DKMTDestroyHwContext, {onLeave: function (args) {send("D3DKMTDestroyHwContext");}});

var D3DKMTDestroyHwQueue = Module.findExportByName("gdi32.dll", "D3DKMTDestroyHwQueue")
Interceptor.attach(D3DKMTDestroyHwQueue, {onLeave: function (args) {send("D3DKMTDestroyHwQueue");}});

var D3DKMTDestroyKeyedMutex = Module.findExportByName("gdi32.dll", "D3DKMTDestroyKeyedMutex")
Interceptor.attach(D3DKMTDestroyKeyedMutex, {onLeave: function (args) {send("D3DKMTDestroyKeyedMutex");}});

var D3DKMTDestroyOutputDupl = Module.findExportByName("gdi32.dll", "D3DKMTDestroyOutputDupl")
Interceptor.attach(D3DKMTDestroyOutputDupl, {onLeave: function (args) {send("D3DKMTDestroyOutputDupl");}});

var D3DKMTDestroyOverlay = Module.findExportByName("gdi32.dll", "D3DKMTDestroyOverlay")
Interceptor.attach(D3DKMTDestroyOverlay, {onLeave: function (args) {send("D3DKMTDestroyOverlay");}});

var D3DKMTDestroyPagingQueue = Module.findExportByName("gdi32.dll", "D3DKMTDestroyPagingQueue")
Interceptor.attach(D3DKMTDestroyPagingQueue, {onLeave: function (args) {send("D3DKMTDestroyPagingQueue");}});

var D3DKMTDestroyProtectedSession = Module.findExportByName("gdi32.dll", "D3DKMTDestroyProtectedSession")
Interceptor.attach(D3DKMTDestroyProtectedSession, {onLeave: function (args) {send("D3DKMTDestroyProtectedSession");}});

var D3DKMTDestroySynchronizationObject = Module.findExportByName("gdi32.dll", "D3DKMTDestroySynchronizationObject")
Interceptor.attach(D3DKMTDestroySynchronizationObject, {onLeave: function (args) {send("D3DKMTDestroySynchronizationObject");}});

var D3DKMTDestroyTrackedWorkload = Module.findExportByName("gdi32.dll", "D3DKMTDestroyTrackedWorkload")
Interceptor.attach(D3DKMTDestroyTrackedWorkload, {onLeave: function (args) {send("D3DKMTDestroyTrackedWorkload");}});

var D3DKMTDispMgrCreate = Module.findExportByName("gdi32.dll", "D3DKMTDispMgrCreate")
Interceptor.attach(D3DKMTDispMgrCreate, {onLeave: function (args) {send("D3DKMTDispMgrCreate");}});

var D3DKMTDispMgrOperation = Module.findExportByName("gdi32.dll", "D3DKMTDispMgrOperation")
Interceptor.attach(D3DKMTDispMgrOperation, {onLeave: function (args) {send("D3DKMTDispMgrOperation");}});

var D3DKMTDispMgrSourceOperation = Module.findExportByName("gdi32.dll", "D3DKMTDispMgrSourceOperation")
Interceptor.attach(D3DKMTDispMgrSourceOperation, {onLeave: function (args) {send("D3DKMTDispMgrSourceOperation");}});

var D3DKMTDispMgrTargetOperation = Module.findExportByName("gdi32.dll", "D3DKMTDispMgrTargetOperation")
Interceptor.attach(D3DKMTDispMgrTargetOperation, {onLeave: function (args) {send("D3DKMTDispMgrTargetOperation");}});

var D3DKMTDisplayPortOperation = Module.findExportByName("gdi32.dll", "D3DKMTDisplayPortOperation")
Interceptor.attach(D3DKMTDisplayPortOperation, {onLeave: function (args) {send("D3DKMTDisplayPortOperation");}});

var D3DKMTDuplicateHandle = Module.findExportByName("gdi32.dll", "D3DKMTDuplicateHandle")
Interceptor.attach(D3DKMTDuplicateHandle, {onLeave: function (args) {send("D3DKMTDuplicateHandle");}});

var D3DKMTEnumAdapters = Module.findExportByName("gdi32.dll", "D3DKMTEnumAdapters")
Interceptor.attach(D3DKMTEnumAdapters, {onLeave: function (args) {send("D3DKMTEnumAdapters");}});

var D3DKMTEnumAdapters2 = Module.findExportByName("gdi32.dll", "D3DKMTEnumAdapters2")
Interceptor.attach(D3DKMTEnumAdapters2, {onLeave: function (args) {send("D3DKMTEnumAdapters2");}});

var D3DKMTEnumAdapters3 = Module.findExportByName("gdi32.dll", "D3DKMTEnumAdapters3")
Interceptor.attach(D3DKMTEnumAdapters3, {onLeave: function (args) {send("D3DKMTEnumAdapters3");}});

var D3DKMTEnumProcesses = Module.findExportByName("gdi32.dll", "D3DKMTEnumProcesses")
Interceptor.attach(D3DKMTEnumProcesses, {onLeave: function (args) {send("D3DKMTEnumProcesses");}});

var D3DKMTEscape = Module.findExportByName("gdi32.dll", "D3DKMTEscape")
Interceptor.attach(D3DKMTEscape, {onLeave: function (args) {send("D3DKMTEscape");}});

var D3DKMTEvict = Module.findExportByName("gdi32.dll", "D3DKMTEvict")
Interceptor.attach(D3DKMTEvict, {onLeave: function (args) {send("D3DKMTEvict");}});

var D3DKMTExtractBundleObject = Module.findExportByName("gdi32.dll", "D3DKMTExtractBundleObject")
Interceptor.attach(D3DKMTExtractBundleObject, {onLeave: function (args) {send("D3DKMTExtractBundleObject");}});

var D3DKMTFlipOverlay = Module.findExportByName("gdi32.dll", "D3DKMTFlipOverlay")
Interceptor.attach(D3DKMTFlipOverlay, {onLeave: function (args) {send("D3DKMTFlipOverlay");}});

var D3DKMTFlushHeapTransitions = Module.findExportByName("gdi32.dll", "D3DKMTFlushHeapTransitions")
Interceptor.attach(D3DKMTFlushHeapTransitions, {onLeave: function (args) {send("D3DKMTFlushHeapTransitions");}});

var D3DKMTFreeGpuVirtualAddress = Module.findExportByName("gdi32.dll", "D3DKMTFreeGpuVirtualAddress")
Interceptor.attach(D3DKMTFreeGpuVirtualAddress, {onLeave: function (args) {send("D3DKMTFreeGpuVirtualAddress");}});

var D3DKMTGetAllocationPriority = Module.findExportByName("gdi32.dll", "D3DKMTGetAllocationPriority")
Interceptor.attach(D3DKMTGetAllocationPriority, {onLeave: function (args) {send("D3DKMTGetAllocationPriority");}});

var D3DKMTGetAvailableTrackedWorkloadIndex = Module.findExportByName("gdi32.dll", "D3DKMTGetAvailableTrackedWorkloadIndex")
Interceptor.attach(D3DKMTGetAvailableTrackedWorkloadIndex, {onLeave: function (args) {send("D3DKMTGetAvailableTrackedWorkloadIndex");}});

var D3DKMTGetCachedHybridQueryValue = Module.findExportByName("gdi32.dll", "D3DKMTGetCachedHybridQueryValue")
Interceptor.attach(D3DKMTGetCachedHybridQueryValue, {onLeave: function (args) {send("D3DKMTGetCachedHybridQueryValue");}});

var D3DKMTGetContextInProcessSchedulingPriority = Module.findExportByName("gdi32.dll", "D3DKMTGetContextInProcessSchedulingPriority")
Interceptor.attach(D3DKMTGetContextInProcessSchedulingPriority, {onLeave: function (args) {send("D3DKMTGetContextInProcessSchedulingPriority");}});

var D3DKMTGetContextSchedulingPriority = Module.findExportByName("gdi32.dll", "D3DKMTGetContextSchedulingPriority")
Interceptor.attach(D3DKMTGetContextSchedulingPriority, {onLeave: function (args) {send("D3DKMTGetContextSchedulingPriority");}});

var D3DKMTGetDWMVerticalBlankEvent = Module.findExportByName("gdi32.dll", "D3DKMTGetDWMVerticalBlankEvent")
Interceptor.attach(D3DKMTGetDWMVerticalBlankEvent, {onLeave: function (args) {send("D3DKMTGetDWMVerticalBlankEvent");}});

var D3DKMTGetDeviceState = Module.findExportByName("gdi32.dll", "D3DKMTGetDeviceState")
Interceptor.attach(D3DKMTGetDeviceState, {onLeave: function (args) {send("D3DKMTGetDeviceState");}});

var D3DKMTGetDisplayModeList = Module.findExportByName("gdi32.dll", "D3DKMTGetDisplayModeList")
Interceptor.attach(D3DKMTGetDisplayModeList, {onLeave: function (args) {send("D3DKMTGetDisplayModeList");}});

var D3DKMTGetMemoryBudgetTarget = Module.findExportByName("gdi32.dll", "D3DKMTGetMemoryBudgetTarget")
Interceptor.attach(D3DKMTGetMemoryBudgetTarget, {onLeave: function (args) {send("D3DKMTGetMemoryBudgetTarget");}});

var D3DKMTGetMultiPlaneOverlayCaps = Module.findExportByName("gdi32.dll", "D3DKMTGetMultiPlaneOverlayCaps")
Interceptor.attach(D3DKMTGetMultiPlaneOverlayCaps, {onLeave: function (args) {send("D3DKMTGetMultiPlaneOverlayCaps");}});

var D3DKMTGetMultisampleMethodList = Module.findExportByName("gdi32.dll", "D3DKMTGetMultisampleMethodList")
Interceptor.attach(D3DKMTGetMultisampleMethodList, {onLeave: function (args) {send("D3DKMTGetMultisampleMethodList");}});

var D3DKMTGetOverlayState = Module.findExportByName("gdi32.dll", "D3DKMTGetOverlayState")
Interceptor.attach(D3DKMTGetOverlayState, {onLeave: function (args) {send("D3DKMTGetOverlayState");}});

var D3DKMTGetPostCompositionCaps = Module.findExportByName("gdi32.dll", "D3DKMTGetPostCompositionCaps")
Interceptor.attach(D3DKMTGetPostCompositionCaps, {onLeave: function (args) {send("D3DKMTGetPostCompositionCaps");}});

var D3DKMTGetPresentHistory = Module.findExportByName("gdi32.dll", "D3DKMTGetPresentHistory")
Interceptor.attach(D3DKMTGetPresentHistory, {onLeave: function (args) {send("D3DKMTGetPresentHistory");}});

var D3DKMTGetPresentQueueEvent = Module.findExportByName("gdi32.dll", "D3DKMTGetPresentQueueEvent")
Interceptor.attach(D3DKMTGetPresentQueueEvent, {onLeave: function (args) {send("D3DKMTGetPresentQueueEvent");}});

var D3DKMTGetProcessDeviceRemovalSupport = Module.findExportByName("gdi32.dll", "D3DKMTGetProcessDeviceRemovalSupport")
Interceptor.attach(D3DKMTGetProcessDeviceRemovalSupport, {onLeave: function (args) {send("D3DKMTGetProcessDeviceRemovalSupport");}});

var D3DKMTGetProcessList = Module.findExportByName("gdi32.dll", "D3DKMTGetProcessList")
Interceptor.attach(D3DKMTGetProcessList, {onLeave: function (args) {send("D3DKMTGetProcessList");}});

var D3DKMTGetProcessSchedulingPriorityBand = Module.findExportByName("gdi32.dll", "D3DKMTGetProcessSchedulingPriorityBand")
Interceptor.attach(D3DKMTGetProcessSchedulingPriorityBand, {onLeave: function (args) {send("D3DKMTGetProcessSchedulingPriorityBand");}});

var D3DKMTGetProcessSchedulingPriorityClass = Module.findExportByName("gdi32.dll", "D3DKMTGetProcessSchedulingPriorityClass")
Interceptor.attach(D3DKMTGetProcessSchedulingPriorityClass, {onLeave: function (args) {send("D3DKMTGetProcessSchedulingPriorityClass");}});

var D3DKMTGetProperties = Module.findExportByName("gdi32.dll", "D3DKMTGetProperties")
Interceptor.attach(D3DKMTGetProperties, {onLeave: function (args) {send("D3DKMTGetProperties");}});

var D3DKMTGetResourcePresentPrivateDriverData = Module.findExportByName("gdi32.dll", "D3DKMTGetResourcePresentPrivateDriverData")
Interceptor.attach(D3DKMTGetResourcePresentPrivateDriverData, {onLeave: function (args) {send("D3DKMTGetResourcePresentPrivateDriverData");}});

var D3DKMTGetRuntimeData = Module.findExportByName("gdi32.dll", "D3DKMTGetRuntimeData")
Interceptor.attach(D3DKMTGetRuntimeData, {onLeave: function (args) {send("D3DKMTGetRuntimeData");}});

var D3DKMTGetScanLine = Module.findExportByName("gdi32.dll", "D3DKMTGetScanLine")
Interceptor.attach(D3DKMTGetScanLine, {onLeave: function (args) {send("D3DKMTGetScanLine");}});

var D3DKMTGetSetSwapChainMetadata = Module.findExportByName("gdi32.dll", "D3DKMTGetSetSwapChainMetadata")
Interceptor.attach(D3DKMTGetSetSwapChainMetadata, {onLeave: function (args) {send("D3DKMTGetSetSwapChainMetadata");}});

var D3DKMTGetSharedPrimaryHandle = Module.findExportByName("gdi32.dll", "D3DKMTGetSharedPrimaryHandle")
Interceptor.attach(D3DKMTGetSharedPrimaryHandle, {onLeave: function (args) {send("D3DKMTGetSharedPrimaryHandle");}});

var D3DKMTGetSharedResourceAdapterLuid = Module.findExportByName("gdi32.dll", "D3DKMTGetSharedResourceAdapterLuid")
Interceptor.attach(D3DKMTGetSharedResourceAdapterLuid, {onLeave: function (args) {send("D3DKMTGetSharedResourceAdapterLuid");}});

var D3DKMTGetSwapChainSurfacePhysicalAddress = Module.findExportByName("gdi32.dll", "D3DKMTGetSwapChainSurfacePhysicalAddress")
Interceptor.attach(D3DKMTGetSwapChainSurfacePhysicalAddress, {onLeave: function (args) {send("D3DKMTGetSwapChainSurfacePhysicalAddress");}});

var D3DKMTGetTrackedWorkloadStatistics = Module.findExportByName("gdi32.dll", "D3DKMTGetTrackedWorkloadStatistics")
Interceptor.attach(D3DKMTGetTrackedWorkloadStatistics, {onLeave: function (args) {send("D3DKMTGetTrackedWorkloadStatistics");}});

var D3DKMTGetYieldPercentage = Module.findExportByName("gdi32.dll", "D3DKMTGetYieldPercentage")
Interceptor.attach(D3DKMTGetYieldPercentage, {onLeave: function (args) {send("D3DKMTGetYieldPercentage");}});

var D3DKMTInvalidateActiveVidPn = Module.findExportByName("gdi32.dll", "D3DKMTInvalidateActiveVidPn")
Interceptor.attach(D3DKMTInvalidateActiveVidPn, {onLeave: function (args) {send("D3DKMTInvalidateActiveVidPn");}});

var D3DKMTInvalidateCache = Module.findExportByName("gdi32.dll", "D3DKMTInvalidateCache")
Interceptor.attach(D3DKMTInvalidateCache, {onLeave: function (args) {send("D3DKMTInvalidateCache");}});

var D3DKMTLock = Module.findExportByName("gdi32.dll", "D3DKMTLock")
Interceptor.attach(D3DKMTLock, {onLeave: function (args) {send("D3DKMTLock");}});

var D3DKMTLock2 = Module.findExportByName("gdi32.dll", "D3DKMTLock2")
Interceptor.attach(D3DKMTLock2, {onLeave: function (args) {send("D3DKMTLock2");}});

var D3DKMTMakeResident = Module.findExportByName("gdi32.dll", "D3DKMTMakeResident")
Interceptor.attach(D3DKMTMakeResident, {onLeave: function (args) {send("D3DKMTMakeResident");}});

var D3DKMTMapGpuVirtualAddress = Module.findExportByName("gdi32.dll", "D3DKMTMapGpuVirtualAddress")
Interceptor.attach(D3DKMTMapGpuVirtualAddress, {onLeave: function (args) {send("D3DKMTMapGpuVirtualAddress");}});

var D3DKMTMarkDeviceAsError = Module.findExportByName("gdi32.dll", "D3DKMTMarkDeviceAsError")
Interceptor.attach(D3DKMTMarkDeviceAsError, {onLeave: function (args) {send("D3DKMTMarkDeviceAsError");}});

var D3DKMTNetDispGetNextChunkInfo = Module.findExportByName("gdi32.dll", "D3DKMTNetDispGetNextChunkInfo")
Interceptor.attach(D3DKMTNetDispGetNextChunkInfo, {onLeave: function (args) {send("D3DKMTNetDispGetNextChunkInfo");}});

var D3DKMTNetDispQueryMiracastDisplayDeviceStatus = Module.findExportByName("gdi32.dll", "D3DKMTNetDispQueryMiracastDisplayDeviceStatus")
Interceptor.attach(D3DKMTNetDispQueryMiracastDisplayDeviceStatus, {onLeave: function (args) {send("D3DKMTNetDispQueryMiracastDisplayDeviceStatus");}});

var D3DKMTNetDispQueryMiracastDisplayDeviceSupport = Module.findExportByName("gdi32.dll", "D3DKMTNetDispQueryMiracastDisplayDeviceSupport")
Interceptor.attach(D3DKMTNetDispQueryMiracastDisplayDeviceSupport, {onLeave: function (args) {send("D3DKMTNetDispQueryMiracastDisplayDeviceSupport");}});

var D3DKMTNetDispStartMiracastDisplayDevice = Module.findExportByName("gdi32.dll", "D3DKMTNetDispStartMiracastDisplayDevice")
Interceptor.attach(D3DKMTNetDispStartMiracastDisplayDevice, {onLeave: function (args) {send("D3DKMTNetDispStartMiracastDisplayDevice");}});

var D3DKMTNetDispStartMiracastDisplayDevice2 = Module.findExportByName("gdi32.dll", "D3DKMTNetDispStartMiracastDisplayDevice2")
Interceptor.attach(D3DKMTNetDispStartMiracastDisplayDevice2, {onLeave: function (args) {send("D3DKMTNetDispStartMiracastDisplayDevice2");}});

var D3DKMTNetDispStartMiracastDisplayDeviceEx = Module.findExportByName("gdi32.dll", "D3DKMTNetDispStartMiracastDisplayDeviceEx")
Interceptor.attach(D3DKMTNetDispStartMiracastDisplayDeviceEx, {onLeave: function (args) {send("D3DKMTNetDispStartMiracastDisplayDeviceEx");}});

var D3DKMTNetDispStopMiracastDisplayDevice = Module.findExportByName("gdi32.dll", "D3DKMTNetDispStopMiracastDisplayDevice")
Interceptor.attach(D3DKMTNetDispStopMiracastDisplayDevice, {onLeave: function (args) {send("D3DKMTNetDispStopMiracastDisplayDevice");}});

var D3DKMTNotifyWorkSubmission = Module.findExportByName("gdi32.dll", "D3DKMTNotifyWorkSubmission")
Interceptor.attach(D3DKMTNotifyWorkSubmission, {onLeave: function (args) {send("D3DKMTNotifyWorkSubmission");}});

var D3DKMTOfferAllocations = Module.findExportByName("gdi32.dll", "D3DKMTOfferAllocations")
Interceptor.attach(D3DKMTOfferAllocations, {onLeave: function (args) {send("D3DKMTOfferAllocations");}});

var D3DKMTOpenAdapterFromDeviceName = Module.findExportByName("gdi32.dll", "D3DKMTOpenAdapterFromDeviceName")
Interceptor.attach(D3DKMTOpenAdapterFromDeviceName, {onLeave: function (args) {send("D3DKMTOpenAdapterFromDeviceName");}});

var D3DKMTOpenAdapterFromGdiDisplayName = Module.findExportByName("gdi32.dll", "D3DKMTOpenAdapterFromGdiDisplayName")
Interceptor.attach(D3DKMTOpenAdapterFromGdiDisplayName, {onLeave: function (args) {send("D3DKMTOpenAdapterFromGdiDisplayName");}});

var D3DKMTOpenAdapterFromHdc = Module.findExportByName("gdi32.dll", "D3DKMTOpenAdapterFromHdc")
Interceptor.attach(D3DKMTOpenAdapterFromHdc, {onLeave: function (args) {send("D3DKMTOpenAdapterFromHdc");}});

var D3DKMTOpenAdapterFromLuid = Module.findExportByName("gdi32.dll", "D3DKMTOpenAdapterFromLuid")
Interceptor.attach(D3DKMTOpenAdapterFromLuid, {onLeave: function (args) {send("D3DKMTOpenAdapterFromLuid");}});

var D3DKMTOpenBundleObjectNtHandleFromName = Module.findExportByName("gdi32.dll", "D3DKMTOpenBundleObjectNtHandleFromName")
Interceptor.attach(D3DKMTOpenBundleObjectNtHandleFromName, {onLeave: function (args) {send("D3DKMTOpenBundleObjectNtHandleFromName");}});

var D3DKMTOpenKeyedMutex = Module.findExportByName("gdi32.dll", "D3DKMTOpenKeyedMutex")
Interceptor.attach(D3DKMTOpenKeyedMutex, {onLeave: function (args) {send("D3DKMTOpenKeyedMutex");}});

var D3DKMTOpenKeyedMutex2 = Module.findExportByName("gdi32.dll", "D3DKMTOpenKeyedMutex2")
Interceptor.attach(D3DKMTOpenKeyedMutex2, {onLeave: function (args) {send("D3DKMTOpenKeyedMutex2");}});

var D3DKMTOpenKeyedMutexFromNtHandle = Module.findExportByName("gdi32.dll", "D3DKMTOpenKeyedMutexFromNtHandle")
Interceptor.attach(D3DKMTOpenKeyedMutexFromNtHandle, {onLeave: function (args) {send("D3DKMTOpenKeyedMutexFromNtHandle");}});

var D3DKMTOpenNativeFenceFromNtHandle = Module.findExportByName("gdi32.dll", "D3DKMTOpenNativeFenceFromNtHandle")
Interceptor.attach(D3DKMTOpenNativeFenceFromNtHandle, {onLeave: function (args) {send("D3DKMTOpenNativeFenceFromNtHandle");}});

var D3DKMTOpenNtHandleFromName = Module.findExportByName("gdi32.dll", "D3DKMTOpenNtHandleFromName")
Interceptor.attach(D3DKMTOpenNtHandleFromName, {onLeave: function (args) {send("D3DKMTOpenNtHandleFromName");}});

var D3DKMTOpenProtectedSessionFromNtHandle = Module.findExportByName("gdi32.dll", "D3DKMTOpenProtectedSessionFromNtHandle")
Interceptor.attach(D3DKMTOpenProtectedSessionFromNtHandle, {onLeave: function (args) {send("D3DKMTOpenProtectedSessionFromNtHandle");}});

var D3DKMTOpenResource = Module.findExportByName("gdi32.dll", "D3DKMTOpenResource")
Interceptor.attach(D3DKMTOpenResource, {onLeave: function (args) {send("D3DKMTOpenResource");}});

var D3DKMTOpenResource2 = Module.findExportByName("gdi32.dll", "D3DKMTOpenResource2")
Interceptor.attach(D3DKMTOpenResource2, {onLeave: function (args) {send("D3DKMTOpenResource2");}});

var D3DKMTOpenResourceFromNtHandle = Module.findExportByName("gdi32.dll", "D3DKMTOpenResourceFromNtHandle")
Interceptor.attach(D3DKMTOpenResourceFromNtHandle, {onLeave: function (args) {send("D3DKMTOpenResourceFromNtHandle");}});

var D3DKMTOpenSwapChain = Module.findExportByName("gdi32.dll", "D3DKMTOpenSwapChain")
Interceptor.attach(D3DKMTOpenSwapChain, {onLeave: function (args) {send("D3DKMTOpenSwapChain");}});

var D3DKMTOpenSyncObjectFromNtHandle = Module.findExportByName("gdi32.dll", "D3DKMTOpenSyncObjectFromNtHandle")
Interceptor.attach(D3DKMTOpenSyncObjectFromNtHandle, {onLeave: function (args) {send("D3DKMTOpenSyncObjectFromNtHandle");}});

var D3DKMTOpenSyncObjectFromNtHandle2 = Module.findExportByName("gdi32.dll", "D3DKMTOpenSyncObjectFromNtHandle2")
Interceptor.attach(D3DKMTOpenSyncObjectFromNtHandle2, {onLeave: function (args) {send("D3DKMTOpenSyncObjectFromNtHandle2");}});

var D3DKMTOpenSyncObjectNtHandleFromName = Module.findExportByName("gdi32.dll", "D3DKMTOpenSyncObjectNtHandleFromName")
Interceptor.attach(D3DKMTOpenSyncObjectNtHandleFromName, {onLeave: function (args) {send("D3DKMTOpenSyncObjectNtHandleFromName");}});

var D3DKMTOpenSynchronizationObject = Module.findExportByName("gdi32.dll", "D3DKMTOpenSynchronizationObject")
Interceptor.attach(D3DKMTOpenSynchronizationObject, {onLeave: function (args) {send("D3DKMTOpenSynchronizationObject");}});

var D3DKMTOutputDuplGetFrameInfo = Module.findExportByName("gdi32.dll", "D3DKMTOutputDuplGetFrameInfo")
Interceptor.attach(D3DKMTOutputDuplGetFrameInfo, {onLeave: function (args) {send("D3DKMTOutputDuplGetFrameInfo");}});

var D3DKMTOutputDuplGetMetaData = Module.findExportByName("gdi32.dll", "D3DKMTOutputDuplGetMetaData")
Interceptor.attach(D3DKMTOutputDuplGetMetaData, {onLeave: function (args) {send("D3DKMTOutputDuplGetMetaData");}});

var D3DKMTOutputDuplGetPointerShapeData = Module.findExportByName("gdi32.dll", "D3DKMTOutputDuplGetPointerShapeData")
Interceptor.attach(D3DKMTOutputDuplGetPointerShapeData, {onLeave: function (args) {send("D3DKMTOutputDuplGetPointerShapeData");}});

var D3DKMTOutputDuplPresent = Module.findExportByName("gdi32.dll", "D3DKMTOutputDuplPresent")
Interceptor.attach(D3DKMTOutputDuplPresent, {onLeave: function (args) {send("D3DKMTOutputDuplPresent");}});

var D3DKMTOutputDuplPresentToHwQueue = Module.findExportByName("gdi32.dll", "D3DKMTOutputDuplPresentToHwQueue")
Interceptor.attach(D3DKMTOutputDuplPresentToHwQueue, {onLeave: function (args) {send("D3DKMTOutputDuplPresentToHwQueue");}});

var D3DKMTOutputDuplReleaseFrame = Module.findExportByName("gdi32.dll", "D3DKMTOutputDuplReleaseFrame")
Interceptor.attach(D3DKMTOutputDuplReleaseFrame, {onLeave: function (args) {send("D3DKMTOutputDuplReleaseFrame");}});

var D3DKMTPinDirectFlipResources = Module.findExportByName("gdi32.dll", "D3DKMTPinDirectFlipResources")
Interceptor.attach(D3DKMTPinDirectFlipResources, {onLeave: function (args) {send("D3DKMTPinDirectFlipResources");}});

var D3DKMTPinResources = Module.findExportByName("gdi32.dll", "D3DKMTPinResources")
Interceptor.attach(D3DKMTPinResources, {onLeave: function (args) {send("D3DKMTPinResources");}});

var D3DKMTPollDisplayChildren = Module.findExportByName("gdi32.dll", "D3DKMTPollDisplayChildren")
Interceptor.attach(D3DKMTPollDisplayChildren, {onLeave: function (args) {send("D3DKMTPollDisplayChildren");}});

var D3DKMTPresent = Module.findExportByName("gdi32.dll", "D3DKMTPresent")
Interceptor.attach(D3DKMTPresent, {onLeave: function (args) {send("D3DKMTPresent");}});

var D3DKMTPresentMultiPlaneOverlay = Module.findExportByName("gdi32.dll", "D3DKMTPresentMultiPlaneOverlay")
Interceptor.attach(D3DKMTPresentMultiPlaneOverlay, {onLeave: function (args) {send("D3DKMTPresentMultiPlaneOverlay");}});

var D3DKMTPresentMultiPlaneOverlay2 = Module.findExportByName("gdi32.dll", "D3DKMTPresentMultiPlaneOverlay2")
Interceptor.attach(D3DKMTPresentMultiPlaneOverlay2, {onLeave: function (args) {send("D3DKMTPresentMultiPlaneOverlay2");}});

var D3DKMTPresentMultiPlaneOverlay3 = Module.findExportByName("gdi32.dll", "D3DKMTPresentMultiPlaneOverlay3")
Interceptor.attach(D3DKMTPresentMultiPlaneOverlay3, {onLeave: function (args) {send("D3DKMTPresentMultiPlaneOverlay3");}});

var D3DKMTPresentRedirected = Module.findExportByName("gdi32.dll", "D3DKMTPresentRedirected")
Interceptor.attach(D3DKMTPresentRedirected, {onLeave: function (args) {send("D3DKMTPresentRedirected");}});

var D3DKMTQueryAdapterInfo = Module.findExportByName("gdi32.dll", "D3DKMTQueryAdapterInfo")
Interceptor.attach(D3DKMTQueryAdapterInfo, {onLeave: function (args) {send("D3DKMTQueryAdapterInfo");}});

var D3DKMTQueryAllocationResidency = Module.findExportByName("gdi32.dll", "D3DKMTQueryAllocationResidency")
Interceptor.attach(D3DKMTQueryAllocationResidency, {onLeave: function (args) {send("D3DKMTQueryAllocationResidency");}});

var D3DKMTQueryClockCalibration = Module.findExportByName("gdi32.dll", "D3DKMTQueryClockCalibration")
Interceptor.attach(D3DKMTQueryClockCalibration, {onLeave: function (args) {send("D3DKMTQueryClockCalibration");}});

var D3DKMTQueryFSEBlock = Module.findExportByName("gdi32.dll", "D3DKMTQueryFSEBlock")
Interceptor.attach(D3DKMTQueryFSEBlock, {onLeave: function (args) {send("D3DKMTQueryFSEBlock");}});

var D3DKMTQueryProcessOfferInfo = Module.findExportByName("gdi32.dll", "D3DKMTQueryProcessOfferInfo")
Interceptor.attach(D3DKMTQueryProcessOfferInfo, {onLeave: function (args) {send("D3DKMTQueryProcessOfferInfo");}});

var D3DKMTQueryProtectedSessionInfoFromNtHandle = Module.findExportByName("gdi32.dll", "D3DKMTQueryProtectedSessionInfoFromNtHandle")
Interceptor.attach(D3DKMTQueryProtectedSessionInfoFromNtHandle, {onLeave: function (args) {send("D3DKMTQueryProtectedSessionInfoFromNtHandle");}});

var D3DKMTQueryProtectedSessionStatus = Module.findExportByName("gdi32.dll", "D3DKMTQueryProtectedSessionStatus")
Interceptor.attach(D3DKMTQueryProtectedSessionStatus, {onLeave: function (args) {send("D3DKMTQueryProtectedSessionStatus");}});

var D3DKMTQueryRemoteVidPnSourceFromGdiDisplayName = Module.findExportByName("gdi32.dll", "D3DKMTQueryRemoteVidPnSourceFromGdiDisplayName")
Interceptor.attach(D3DKMTQueryRemoteVidPnSourceFromGdiDisplayName, {onLeave: function (args) {send("D3DKMTQueryRemoteVidPnSourceFromGdiDisplayName");}});

var D3DKMTQueryResourceInfo = Module.findExportByName("gdi32.dll", "D3DKMTQueryResourceInfo")
Interceptor.attach(D3DKMTQueryResourceInfo, {onLeave: function (args) {send("D3DKMTQueryResourceInfo");}});

var D3DKMTQueryResourceInfoFromNtHandle = Module.findExportByName("gdi32.dll", "D3DKMTQueryResourceInfoFromNtHandle")
Interceptor.attach(D3DKMTQueryResourceInfoFromNtHandle, {onLeave: function (args) {send("D3DKMTQueryResourceInfoFromNtHandle");}});

var D3DKMTQueryStatistics = Module.findExportByName("gdi32.dll", "D3DKMTQueryStatistics")
Interceptor.attach(D3DKMTQueryStatistics, {onLeave: function (args) {send("D3DKMTQueryStatistics");}});

var D3DKMTQueryVidPnExclusiveOwnership = Module.findExportByName("gdi32.dll", "D3DKMTQueryVidPnExclusiveOwnership")
Interceptor.attach(D3DKMTQueryVidPnExclusiveOwnership, {onLeave: function (args) {send("D3DKMTQueryVidPnExclusiveOwnership");}});

var D3DKMTQueryVideoMemoryInfo = Module.findExportByName("gdi32.dll", "D3DKMTQueryVideoMemoryInfo")
Interceptor.attach(D3DKMTQueryVideoMemoryInfo, {onLeave: function (args) {send("D3DKMTQueryVideoMemoryInfo");}});

var D3DKMTReclaimAllocations = Module.findExportByName("gdi32.dll", "D3DKMTReclaimAllocations")
Interceptor.attach(D3DKMTReclaimAllocations, {onLeave: function (args) {send("D3DKMTReclaimAllocations");}});

var D3DKMTReclaimAllocations2 = Module.findExportByName("gdi32.dll", "D3DKMTReclaimAllocations2")
Interceptor.attach(D3DKMTReclaimAllocations2, {onLeave: function (args) {send("D3DKMTReclaimAllocations2");}});

var D3DKMTRegisterTrimNotification = Module.findExportByName("gdi32.dll", "D3DKMTRegisterTrimNotification")
Interceptor.attach(D3DKMTRegisterTrimNotification, {onLeave: function (args) {send("D3DKMTRegisterTrimNotification");}});

var D3DKMTRegisterVailProcess = Module.findExportByName("gdi32.dll", "D3DKMTRegisterVailProcess")
Interceptor.attach(D3DKMTRegisterVailProcess, {onLeave: function (args) {send("D3DKMTRegisterVailProcess");}});

var D3DKMTReleaseKeyedMutex = Module.findExportByName("gdi32.dll", "D3DKMTReleaseKeyedMutex")
Interceptor.attach(D3DKMTReleaseKeyedMutex, {onLeave: function (args) {send("D3DKMTReleaseKeyedMutex");}});

var D3DKMTReleaseKeyedMutex2 = Module.findExportByName("gdi32.dll", "D3DKMTReleaseKeyedMutex2")
Interceptor.attach(D3DKMTReleaseKeyedMutex2, {onLeave: function (args) {send("D3DKMTReleaseKeyedMutex2");}});

var D3DKMTReleaseProcessVidPnSourceOwners = Module.findExportByName("gdi32.dll", "D3DKMTReleaseProcessVidPnSourceOwners")
Interceptor.attach(D3DKMTReleaseProcessVidPnSourceOwners, {onLeave: function (args) {send("D3DKMTReleaseProcessVidPnSourceOwners");}});

var D3DKMTReleaseSwapChain = Module.findExportByName("gdi32.dll", "D3DKMTReleaseSwapChain")
Interceptor.attach(D3DKMTReleaseSwapChain, {onLeave: function (args) {send("D3DKMTReleaseSwapChain");}});

var D3DKMTRemoveSurfaceFromSwapChain = Module.findExportByName("gdi32.dll", "D3DKMTRemoveSurfaceFromSwapChain")
Interceptor.attach(D3DKMTRemoveSurfaceFromSwapChain, {onLeave: function (args) {send("D3DKMTRemoveSurfaceFromSwapChain");}});

var D3DKMTRender = Module.findExportByName("gdi32.dll", "D3DKMTRender")
Interceptor.attach(D3DKMTRender, {onLeave: function (args) {send("D3DKMTRender");}});

var D3DKMTReserveGpuVirtualAddress = Module.findExportByName("gdi32.dll", "D3DKMTReserveGpuVirtualAddress")
Interceptor.attach(D3DKMTReserveGpuVirtualAddress, {onLeave: function (args) {send("D3DKMTReserveGpuVirtualAddress");}});

var D3DKMTResetTrackedWorkloadStatistics = Module.findExportByName("gdi32.dll", "D3DKMTResetTrackedWorkloadStatistics")
Interceptor.attach(D3DKMTResetTrackedWorkloadStatistics, {onLeave: function (args) {send("D3DKMTResetTrackedWorkloadStatistics");}});

var D3DKMTSetAllocationPriority = Module.findExportByName("gdi32.dll", "D3DKMTSetAllocationPriority")
Interceptor.attach(D3DKMTSetAllocationPriority, {onLeave: function (args) {send("D3DKMTSetAllocationPriority");}});

var D3DKMTSetContextInProcessSchedulingPriority = Module.findExportByName("gdi32.dll", "D3DKMTSetContextInProcessSchedulingPriority")
Interceptor.attach(D3DKMTSetContextInProcessSchedulingPriority, {onLeave: function (args) {send("D3DKMTSetContextInProcessSchedulingPriority");}});

var D3DKMTSetContextSchedulingPriority = Module.findExportByName("gdi32.dll", "D3DKMTSetContextSchedulingPriority")
Interceptor.attach(D3DKMTSetContextSchedulingPriority, {onLeave: function (args) {send("D3DKMTSetContextSchedulingPriority");}});

var D3DKMTSetDisplayMode = Module.findExportByName("gdi32.dll", "D3DKMTSetDisplayMode")
Interceptor.attach(D3DKMTSetDisplayMode, {onLeave: function (args) {send("D3DKMTSetDisplayMode");}});

var D3DKMTSetDisplayPrivateDriverFormat = Module.findExportByName("gdi32.dll", "D3DKMTSetDisplayPrivateDriverFormat")
Interceptor.attach(D3DKMTSetDisplayPrivateDriverFormat, {onLeave: function (args) {send("D3DKMTSetDisplayPrivateDriverFormat");}});

var D3DKMTSetDodIndirectSwapchain = Module.findExportByName("gdi32.dll", "D3DKMTSetDodIndirectSwapchain")
Interceptor.attach(D3DKMTSetDodIndirectSwapchain, {onLeave: function (args) {send("D3DKMTSetDodIndirectSwapchain");}});

var D3DKMTSetFSEBlock = Module.findExportByName("gdi32.dll", "D3DKMTSetFSEBlock")
Interceptor.attach(D3DKMTSetFSEBlock, {onLeave: function (args) {send("D3DKMTSetFSEBlock");}});

var D3DKMTSetGammaRamp = Module.findExportByName("gdi32.dll", "D3DKMTSetGammaRamp")
Interceptor.attach(D3DKMTSetGammaRamp, {onLeave: function (args) {send("D3DKMTSetGammaRamp");}});

var D3DKMTSetHwProtectionTeardownRecovery = Module.findExportByName("gdi32.dll", "D3DKMTSetHwProtectionTeardownRecovery")
Interceptor.attach(D3DKMTSetHwProtectionTeardownRecovery, {onLeave: function (args) {send("D3DKMTSetHwProtectionTeardownRecovery");}});

var D3DKMTSetMemoryBudgetTarget = Module.findExportByName("gdi32.dll", "D3DKMTSetMemoryBudgetTarget")
Interceptor.attach(D3DKMTSetMemoryBudgetTarget, {onLeave: function (args) {send("D3DKMTSetMemoryBudgetTarget");}});

var D3DKMTSetMonitorColorSpaceTransform = Module.findExportByName("gdi32.dll", "D3DKMTSetMonitorColorSpaceTransform")
Interceptor.attach(D3DKMTSetMonitorColorSpaceTransform, {onLeave: function (args) {send("D3DKMTSetMonitorColorSpaceTransform");}});

var D3DKMTSetProcessDeviceRemovalSupport = Module.findExportByName("gdi32.dll", "D3DKMTSetProcessDeviceRemovalSupport")
Interceptor.attach(D3DKMTSetProcessDeviceRemovalSupport, {onLeave: function (args) {send("D3DKMTSetProcessDeviceRemovalSupport");}});

var D3DKMTSetProcessSchedulingPriorityBand = Module.findExportByName("gdi32.dll", "D3DKMTSetProcessSchedulingPriorityBand")
Interceptor.attach(D3DKMTSetProcessSchedulingPriorityBand, {onLeave: function (args) {send("D3DKMTSetProcessSchedulingPriorityBand");}});

var D3DKMTSetProcessSchedulingPriorityClass = Module.findExportByName("gdi32.dll", "D3DKMTSetProcessSchedulingPriorityClass")
Interceptor.attach(D3DKMTSetProcessSchedulingPriorityClass, {onLeave: function (args) {send("D3DKMTSetProcessSchedulingPriorityClass");}});

var D3DKMTSetProperties = Module.findExportByName("gdi32.dll", "D3DKMTSetProperties")
Interceptor.attach(D3DKMTSetProperties, {onLeave: function (args) {send("D3DKMTSetProperties");}});

var D3DKMTSetQueuedLimit = Module.findExportByName("gdi32.dll", "D3DKMTSetQueuedLimit")
Interceptor.attach(D3DKMTSetQueuedLimit, {onLeave: function (args) {send("D3DKMTSetQueuedLimit");}});

var D3DKMTSetStablePowerState = Module.findExportByName("gdi32.dll", "D3DKMTSetStablePowerState")
Interceptor.attach(D3DKMTSetStablePowerState, {onLeave: function (args) {send("D3DKMTSetStablePowerState");}});

var D3DKMTSetStereoEnabled = Module.findExportByName("gdi32.dll", "D3DKMTSetStereoEnabled")
Interceptor.attach(D3DKMTSetStereoEnabled, {onLeave: function (args) {send("D3DKMTSetStereoEnabled");}});

var D3DKMTSetSyncRefreshCountWaitTarget = Module.findExportByName("gdi32.dll", "D3DKMTSetSyncRefreshCountWaitTarget")
Interceptor.attach(D3DKMTSetSyncRefreshCountWaitTarget, {onLeave: function (args) {send("D3DKMTSetSyncRefreshCountWaitTarget");}});

var D3DKMTSetVidPnSourceHwProtection = Module.findExportByName("gdi32.dll", "D3DKMTSetVidPnSourceHwProtection")
Interceptor.attach(D3DKMTSetVidPnSourceHwProtection, {onLeave: function (args) {send("D3DKMTSetVidPnSourceHwProtection");}});

var D3DKMTSetVidPnSourceOwner = Module.findExportByName("gdi32.dll", "D3DKMTSetVidPnSourceOwner")
Interceptor.attach(D3DKMTSetVidPnSourceOwner, {onLeave: function (args) {send("D3DKMTSetVidPnSourceOwner");}});

var D3DKMTSetVidPnSourceOwner1 = Module.findExportByName("gdi32.dll", "D3DKMTSetVidPnSourceOwner1")
Interceptor.attach(D3DKMTSetVidPnSourceOwner1, {onLeave: function (args) {send("D3DKMTSetVidPnSourceOwner1");}});

var D3DKMTSetVidPnSourceOwner2 = Module.findExportByName("gdi32.dll", "D3DKMTSetVidPnSourceOwner2")
Interceptor.attach(D3DKMTSetVidPnSourceOwner2, {onLeave: function (args) {send("D3DKMTSetVidPnSourceOwner2");}});

var D3DKMTSetYieldPercentage = Module.findExportByName("gdi32.dll", "D3DKMTSetYieldPercentage")
Interceptor.attach(D3DKMTSetYieldPercentage, {onLeave: function (args) {send("D3DKMTSetYieldPercentage");}});

var D3DKMTShareObjects = Module.findExportByName("gdi32.dll", "D3DKMTShareObjects")
Interceptor.attach(D3DKMTShareObjects, {onLeave: function (args) {send("D3DKMTShareObjects");}});

var D3DKMTSharedPrimaryLockNotification = Module.findExportByName("gdi32.dll", "D3DKMTSharedPrimaryLockNotification")
Interceptor.attach(D3DKMTSharedPrimaryLockNotification, {onLeave: function (args) {send("D3DKMTSharedPrimaryLockNotification");}});

var D3DKMTSharedPrimaryUnLockNotification = Module.findExportByName("gdi32.dll", "D3DKMTSharedPrimaryUnLockNotification")
Interceptor.attach(D3DKMTSharedPrimaryUnLockNotification, {onLeave: function (args) {send("D3DKMTSharedPrimaryUnLockNotification");}});

var D3DKMTSignalSynchronizationObject = Module.findExportByName("gdi32.dll", "D3DKMTSignalSynchronizationObject")
Interceptor.attach(D3DKMTSignalSynchronizationObject, {onLeave: function (args) {send("D3DKMTSignalSynchronizationObject");}});

var D3DKMTSignalSynchronizationObject2 = Module.findExportByName("gdi32.dll", "D3DKMTSignalSynchronizationObject2")
Interceptor.attach(D3DKMTSignalSynchronizationObject2, {onLeave: function (args) {send("D3DKMTSignalSynchronizationObject2");}});

var D3DKMTSignalSynchronizationObjectFromCpu = Module.findExportByName("gdi32.dll", "D3DKMTSignalSynchronizationObjectFromCpu")
Interceptor.attach(D3DKMTSignalSynchronizationObjectFromCpu, {onLeave: function (args) {send("D3DKMTSignalSynchronizationObjectFromCpu");}});

var D3DKMTSignalSynchronizationObjectFromGpu = Module.findExportByName("gdi32.dll", "D3DKMTSignalSynchronizationObjectFromGpu")
Interceptor.attach(D3DKMTSignalSynchronizationObjectFromGpu, {onLeave: function (args) {send("D3DKMTSignalSynchronizationObjectFromGpu");}});

var D3DKMTSignalSynchronizationObjectFromGpu2 = Module.findExportByName("gdi32.dll", "D3DKMTSignalSynchronizationObjectFromGpu2")
Interceptor.attach(D3DKMTSignalSynchronizationObjectFromGpu2, {onLeave: function (args) {send("D3DKMTSignalSynchronizationObjectFromGpu2");}});

var D3DKMTSubmitCommand = Module.findExportByName("gdi32.dll", "D3DKMTSubmitCommand")
Interceptor.attach(D3DKMTSubmitCommand, {onLeave: function (args) {send("D3DKMTSubmitCommand");}});

var D3DKMTSubmitCommandToHwQueue = Module.findExportByName("gdi32.dll", "D3DKMTSubmitCommandToHwQueue")
Interceptor.attach(D3DKMTSubmitCommandToHwQueue, {onLeave: function (args) {send("D3DKMTSubmitCommandToHwQueue");}});

var D3DKMTSubmitPresentBltToHwQueue = Module.findExportByName("gdi32.dll", "D3DKMTSubmitPresentBltToHwQueue")
Interceptor.attach(D3DKMTSubmitPresentBltToHwQueue, {onLeave: function (args) {send("D3DKMTSubmitPresentBltToHwQueue");}});

var D3DKMTSubmitPresentToHwQueue = Module.findExportByName("gdi32.dll", "D3DKMTSubmitPresentToHwQueue")
Interceptor.attach(D3DKMTSubmitPresentToHwQueue, {onLeave: function (args) {send("D3DKMTSubmitPresentToHwQueue");}});

var D3DKMTSubmitSignalSyncObjectsToHwQueue = Module.findExportByName("gdi32.dll", "D3DKMTSubmitSignalSyncObjectsToHwQueue")
Interceptor.attach(D3DKMTSubmitSignalSyncObjectsToHwQueue, {onLeave: function (args) {send("D3DKMTSubmitSignalSyncObjectsToHwQueue");}});

var D3DKMTSubmitWaitForSyncObjectsToHwQueue = Module.findExportByName("gdi32.dll", "D3DKMTSubmitWaitForSyncObjectsToHwQueue")
Interceptor.attach(D3DKMTSubmitWaitForSyncObjectsToHwQueue, {onLeave: function (args) {send("D3DKMTSubmitWaitForSyncObjectsToHwQueue");}});

var D3DKMTTrimProcessCommitment = Module.findExportByName("gdi32.dll", "D3DKMTTrimProcessCommitment")
Interceptor.attach(D3DKMTTrimProcessCommitment, {onLeave: function (args) {send("D3DKMTTrimProcessCommitment");}});

var D3DKMTUnOrderedPresentSwapChain = Module.findExportByName("gdi32.dll", "D3DKMTUnOrderedPresentSwapChain")
Interceptor.attach(D3DKMTUnOrderedPresentSwapChain, {onLeave: function (args) {send("D3DKMTUnOrderedPresentSwapChain");}});

var D3DKMTUnlock = Module.findExportByName("gdi32.dll", "D3DKMTUnlock")
Interceptor.attach(D3DKMTUnlock, {onLeave: function (args) {send("D3DKMTUnlock");}});

var D3DKMTUnlock2 = Module.findExportByName("gdi32.dll", "D3DKMTUnlock2")
Interceptor.attach(D3DKMTUnlock2, {onLeave: function (args) {send("D3DKMTUnlock2");}});

var D3DKMTUnpinDirectFlipResources = Module.findExportByName("gdi32.dll", "D3DKMTUnpinDirectFlipResources")
Interceptor.attach(D3DKMTUnpinDirectFlipResources, {onLeave: function (args) {send("D3DKMTUnpinDirectFlipResources");}});

var D3DKMTUnpinResources = Module.findExportByName("gdi32.dll", "D3DKMTUnpinResources")
Interceptor.attach(D3DKMTUnpinResources, {onLeave: function (args) {send("D3DKMTUnpinResources");}});

var D3DKMTUnregisterTrimNotification = Module.findExportByName("gdi32.dll", "D3DKMTUnregisterTrimNotification")
Interceptor.attach(D3DKMTUnregisterTrimNotification, {onLeave: function (args) {send("D3DKMTUnregisterTrimNotification");}});

var D3DKMTUpdateAllocationProperty = Module.findExportByName("gdi32.dll", "D3DKMTUpdateAllocationProperty")
Interceptor.attach(D3DKMTUpdateAllocationProperty, {onLeave: function (args) {send("D3DKMTUpdateAllocationProperty");}});

var D3DKMTUpdateGpuVirtualAddress = Module.findExportByName("gdi32.dll", "D3DKMTUpdateGpuVirtualAddress")
Interceptor.attach(D3DKMTUpdateGpuVirtualAddress, {onLeave: function (args) {send("D3DKMTUpdateGpuVirtualAddress");}});

var D3DKMTUpdateOverlay = Module.findExportByName("gdi32.dll", "D3DKMTUpdateOverlay")
Interceptor.attach(D3DKMTUpdateOverlay, {onLeave: function (args) {send("D3DKMTUpdateOverlay");}});

var D3DKMTUpdateTrackedWorkload = Module.findExportByName("gdi32.dll", "D3DKMTUpdateTrackedWorkload")
Interceptor.attach(D3DKMTUpdateTrackedWorkload, {onLeave: function (args) {send("D3DKMTUpdateTrackedWorkload");}});

var D3DKMTVailConnect = Module.findExportByName("gdi32.dll", "D3DKMTVailConnect")
Interceptor.attach(D3DKMTVailConnect, {onLeave: function (args) {send("D3DKMTVailConnect");}});

var D3DKMTVailDisconnect = Module.findExportByName("gdi32.dll", "D3DKMTVailDisconnect")
Interceptor.attach(D3DKMTVailDisconnect, {onLeave: function (args) {send("D3DKMTVailDisconnect");}});

var D3DKMTVailPromoteCompositionSurface = Module.findExportByName("gdi32.dll", "D3DKMTVailPromoteCompositionSurface")
Interceptor.attach(D3DKMTVailPromoteCompositionSurface, {onLeave: function (args) {send("D3DKMTVailPromoteCompositionSurface");}});

var D3DKMTWaitForIdle = Module.findExportByName("gdi32.dll", "D3DKMTWaitForIdle")
Interceptor.attach(D3DKMTWaitForIdle, {onLeave: function (args) {send("D3DKMTWaitForIdle");}});

var D3DKMTWaitForSynchronizationObject = Module.findExportByName("gdi32.dll", "D3DKMTWaitForSynchronizationObject")
Interceptor.attach(D3DKMTWaitForSynchronizationObject, {onLeave: function (args) {send("D3DKMTWaitForSynchronizationObject");}});

var D3DKMTWaitForSynchronizationObject2 = Module.findExportByName("gdi32.dll", "D3DKMTWaitForSynchronizationObject2")
Interceptor.attach(D3DKMTWaitForSynchronizationObject2, {onLeave: function (args) {send("D3DKMTWaitForSynchronizationObject2");}});

var D3DKMTWaitForSynchronizationObjectFromCpu = Module.findExportByName("gdi32.dll", "D3DKMTWaitForSynchronizationObjectFromCpu")
Interceptor.attach(D3DKMTWaitForSynchronizationObjectFromCpu, {onLeave: function (args) {send("D3DKMTWaitForSynchronizationObjectFromCpu");}});

var D3DKMTWaitForSynchronizationObjectFromGpu = Module.findExportByName("gdi32.dll", "D3DKMTWaitForSynchronizationObjectFromGpu")
Interceptor.attach(D3DKMTWaitForSynchronizationObjectFromGpu, {onLeave: function (args) {send("D3DKMTWaitForSynchronizationObjectFromGpu");}});

var D3DKMTWaitForVerticalBlankEvent = Module.findExportByName("gdi32.dll", "D3DKMTWaitForVerticalBlankEvent")
Interceptor.attach(D3DKMTWaitForVerticalBlankEvent, {onLeave: function (args) {send("D3DKMTWaitForVerticalBlankEvent");}});

var D3DKMTWaitForVerticalBlankEvent2 = Module.findExportByName("gdi32.dll", "D3DKMTWaitForVerticalBlankEvent2")
Interceptor.attach(D3DKMTWaitForVerticalBlankEvent2, {onLeave: function (args) {send("D3DKMTWaitForVerticalBlankEvent2");}});

var DDCCIGetCapabilitiesString = Module.findExportByName("gdi32.dll", "DDCCIGetCapabilitiesString")
Interceptor.attach(DDCCIGetCapabilitiesString, {onLeave: function (args) {send("DDCCIGetCapabilitiesString");}});

var DDCCIGetCapabilitiesStringLength = Module.findExportByName("gdi32.dll", "DDCCIGetCapabilitiesStringLength")
Interceptor.attach(DDCCIGetCapabilitiesStringLength, {onLeave: function (args) {send("DDCCIGetCapabilitiesStringLength");}});

var DDCCIGetTimingReport = Module.findExportByName("gdi32.dll", "DDCCIGetTimingReport")
Interceptor.attach(DDCCIGetTimingReport, {onLeave: function (args) {send("DDCCIGetTimingReport");}});

var DDCCIGetVCPFeature = Module.findExportByName("gdi32.dll", "DDCCIGetVCPFeature")
Interceptor.attach(DDCCIGetVCPFeature, {onLeave: function (args) {send("DDCCIGetVCPFeature");}});

var DDCCISaveCurrentSettings = Module.findExportByName("gdi32.dll", "DDCCISaveCurrentSettings")
Interceptor.attach(DDCCISaveCurrentSettings, {onLeave: function (args) {send("DDCCISaveCurrentSettings");}});

var DDCCISetVCPFeature = Module.findExportByName("gdi32.dll", "DDCCISetVCPFeature")
Interceptor.attach(DDCCISetVCPFeature, {onLeave: function (args) {send("DDCCISetVCPFeature");}});

var DPtoLP = Module.findExportByName("gdi32.dll", "DPtoLP")
Interceptor.attach(DPtoLP, {onLeave: function (args) {send("DPtoLP");}});

var DdCreateFullscreenSprite = Module.findExportByName("gdi32.dll", "DdCreateFullscreenSprite")
Interceptor.attach(DdCreateFullscreenSprite, {onLeave: function (args) {send("DdCreateFullscreenSprite");}});

var DdDestroyFullscreenSprite = Module.findExportByName("gdi32.dll", "DdDestroyFullscreenSprite")
Interceptor.attach(DdDestroyFullscreenSprite, {onLeave: function (args) {send("DdDestroyFullscreenSprite");}});

var DdEntry0 = Module.findExportByName("gdi32.dll", "DdEntry0")
Interceptor.attach(DdEntry0, {onLeave: function (args) {send("DdEntry0");}});

var DdEntry1 = Module.findExportByName("gdi32.dll", "DdEntry1")
Interceptor.attach(DdEntry1, {onLeave: function (args) {send("DdEntry1");}});

var DdEntry10 = Module.findExportByName("gdi32.dll", "DdEntry10")
Interceptor.attach(DdEntry10, {onLeave: function (args) {send("DdEntry10");}});

var DdEntry11 = Module.findExportByName("gdi32.dll", "DdEntry11")
Interceptor.attach(DdEntry11, {onLeave: function (args) {send("DdEntry11");}});

var DdEntry12 = Module.findExportByName("gdi32.dll", "DdEntry12")
Interceptor.attach(DdEntry12, {onLeave: function (args) {send("DdEntry12");}});

var DdEntry13 = Module.findExportByName("gdi32.dll", "DdEntry13")
Interceptor.attach(DdEntry13, {onLeave: function (args) {send("DdEntry13");}});

var DdEntry14 = Module.findExportByName("gdi32.dll", "DdEntry14")
Interceptor.attach(DdEntry14, {onLeave: function (args) {send("DdEntry14");}});

var DdEntry15 = Module.findExportByName("gdi32.dll", "DdEntry15")
Interceptor.attach(DdEntry15, {onLeave: function (args) {send("DdEntry15");}});

var DdEntry16 = Module.findExportByName("gdi32.dll", "DdEntry16")
Interceptor.attach(DdEntry16, {onLeave: function (args) {send("DdEntry16");}});

var DdEntry17 = Module.findExportByName("gdi32.dll", "DdEntry17")
Interceptor.attach(DdEntry17, {onLeave: function (args) {send("DdEntry17");}});

var DdEntry18 = Module.findExportByName("gdi32.dll", "DdEntry18")
Interceptor.attach(DdEntry18, {onLeave: function (args) {send("DdEntry18");}});

var DdEntry19 = Module.findExportByName("gdi32.dll", "DdEntry19")
Interceptor.attach(DdEntry19, {onLeave: function (args) {send("DdEntry19");}});

var DdEntry2 = Module.findExportByName("gdi32.dll", "DdEntry2")
Interceptor.attach(DdEntry2, {onLeave: function (args) {send("DdEntry2");}});

var DdEntry20 = Module.findExportByName("gdi32.dll", "DdEntry20")
Interceptor.attach(DdEntry20, {onLeave: function (args) {send("DdEntry20");}});

var DdEntry21 = Module.findExportByName("gdi32.dll", "DdEntry21")
Interceptor.attach(DdEntry21, {onLeave: function (args) {send("DdEntry21");}});

var DdEntry22 = Module.findExportByName("gdi32.dll", "DdEntry22")
Interceptor.attach(DdEntry22, {onLeave: function (args) {send("DdEntry22");}});

var DdEntry23 = Module.findExportByName("gdi32.dll", "DdEntry23")
Interceptor.attach(DdEntry23, {onLeave: function (args) {send("DdEntry23");}});

var DdEntry24 = Module.findExportByName("gdi32.dll", "DdEntry24")
Interceptor.attach(DdEntry24, {onLeave: function (args) {send("DdEntry24");}});

var DdEntry25 = Module.findExportByName("gdi32.dll", "DdEntry25")
Interceptor.attach(DdEntry25, {onLeave: function (args) {send("DdEntry25");}});

var DdEntry26 = Module.findExportByName("gdi32.dll", "DdEntry26")
Interceptor.attach(DdEntry26, {onLeave: function (args) {send("DdEntry26");}});

var DdEntry27 = Module.findExportByName("gdi32.dll", "DdEntry27")
Interceptor.attach(DdEntry27, {onLeave: function (args) {send("DdEntry27");}});

var DdEntry28 = Module.findExportByName("gdi32.dll", "DdEntry28")
Interceptor.attach(DdEntry28, {onLeave: function (args) {send("DdEntry28");}});

var DdEntry29 = Module.findExportByName("gdi32.dll", "DdEntry29")
Interceptor.attach(DdEntry29, {onLeave: function (args) {send("DdEntry29");}});

var DdEntry3 = Module.findExportByName("gdi32.dll", "DdEntry3")
Interceptor.attach(DdEntry3, {onLeave: function (args) {send("DdEntry3");}});

var DdEntry30 = Module.findExportByName("gdi32.dll", "DdEntry30")
Interceptor.attach(DdEntry30, {onLeave: function (args) {send("DdEntry30");}});

var DdEntry31 = Module.findExportByName("gdi32.dll", "DdEntry31")
Interceptor.attach(DdEntry31, {onLeave: function (args) {send("DdEntry31");}});

var DdEntry32 = Module.findExportByName("gdi32.dll", "DdEntry32")
Interceptor.attach(DdEntry32, {onLeave: function (args) {send("DdEntry32");}});

var DdEntry33 = Module.findExportByName("gdi32.dll", "DdEntry33")
Interceptor.attach(DdEntry33, {onLeave: function (args) {send("DdEntry33");}});

var DdEntry34 = Module.findExportByName("gdi32.dll", "DdEntry34")
Interceptor.attach(DdEntry34, {onLeave: function (args) {send("DdEntry34");}});

var DdEntry35 = Module.findExportByName("gdi32.dll", "DdEntry35")
Interceptor.attach(DdEntry35, {onLeave: function (args) {send("DdEntry35");}});

var DdEntry36 = Module.findExportByName("gdi32.dll", "DdEntry36")
Interceptor.attach(DdEntry36, {onLeave: function (args) {send("DdEntry36");}});

var DdEntry37 = Module.findExportByName("gdi32.dll", "DdEntry37")
Interceptor.attach(DdEntry37, {onLeave: function (args) {send("DdEntry37");}});

var DdEntry38 = Module.findExportByName("gdi32.dll", "DdEntry38")
Interceptor.attach(DdEntry38, {onLeave: function (args) {send("DdEntry38");}});

var DdEntry39 = Module.findExportByName("gdi32.dll", "DdEntry39")
Interceptor.attach(DdEntry39, {onLeave: function (args) {send("DdEntry39");}});

var DdEntry4 = Module.findExportByName("gdi32.dll", "DdEntry4")
Interceptor.attach(DdEntry4, {onLeave: function (args) {send("DdEntry4");}});

var DdEntry40 = Module.findExportByName("gdi32.dll", "DdEntry40")
Interceptor.attach(DdEntry40, {onLeave: function (args) {send("DdEntry40");}});

var DdEntry41 = Module.findExportByName("gdi32.dll", "DdEntry41")
Interceptor.attach(DdEntry41, {onLeave: function (args) {send("DdEntry41");}});

var DdEntry42 = Module.findExportByName("gdi32.dll", "DdEntry42")
Interceptor.attach(DdEntry42, {onLeave: function (args) {send("DdEntry42");}});

var DdEntry43 = Module.findExportByName("gdi32.dll", "DdEntry43")
Interceptor.attach(DdEntry43, {onLeave: function (args) {send("DdEntry43");}});

var DdEntry44 = Module.findExportByName("gdi32.dll", "DdEntry44")
Interceptor.attach(DdEntry44, {onLeave: function (args) {send("DdEntry44");}});

var DdEntry45 = Module.findExportByName("gdi32.dll", "DdEntry45")
Interceptor.attach(DdEntry45, {onLeave: function (args) {send("DdEntry45");}});

var DdEntry46 = Module.findExportByName("gdi32.dll", "DdEntry46")
Interceptor.attach(DdEntry46, {onLeave: function (args) {send("DdEntry46");}});

var DdEntry47 = Module.findExportByName("gdi32.dll", "DdEntry47")
Interceptor.attach(DdEntry47, {onLeave: function (args) {send("DdEntry47");}});

var DdEntry48 = Module.findExportByName("gdi32.dll", "DdEntry48")
Interceptor.attach(DdEntry48, {onLeave: function (args) {send("DdEntry48");}});

var DdEntry49 = Module.findExportByName("gdi32.dll", "DdEntry49")
Interceptor.attach(DdEntry49, {onLeave: function (args) {send("DdEntry49");}});

var DdEntry5 = Module.findExportByName("gdi32.dll", "DdEntry5")
Interceptor.attach(DdEntry5, {onLeave: function (args) {send("DdEntry5");}});

var DdEntry50 = Module.findExportByName("gdi32.dll", "DdEntry50")
Interceptor.attach(DdEntry50, {onLeave: function (args) {send("DdEntry50");}});

var DdEntry51 = Module.findExportByName("gdi32.dll", "DdEntry51")
Interceptor.attach(DdEntry51, {onLeave: function (args) {send("DdEntry51");}});

var DdEntry52 = Module.findExportByName("gdi32.dll", "DdEntry52")
Interceptor.attach(DdEntry52, {onLeave: function (args) {send("DdEntry52");}});

var DdEntry53 = Module.findExportByName("gdi32.dll", "DdEntry53")
Interceptor.attach(DdEntry53, {onLeave: function (args) {send("DdEntry53");}});

var DdEntry54 = Module.findExportByName("gdi32.dll", "DdEntry54")
Interceptor.attach(DdEntry54, {onLeave: function (args) {send("DdEntry54");}});

var DdEntry55 = Module.findExportByName("gdi32.dll", "DdEntry55")
Interceptor.attach(DdEntry55, {onLeave: function (args) {send("DdEntry55");}});

var DdEntry56 = Module.findExportByName("gdi32.dll", "DdEntry56")
Interceptor.attach(DdEntry56, {onLeave: function (args) {send("DdEntry56");}});

var DdEntry6 = Module.findExportByName("gdi32.dll", "DdEntry6")
Interceptor.attach(DdEntry6, {onLeave: function (args) {send("DdEntry6");}});

var DdEntry7 = Module.findExportByName("gdi32.dll", "DdEntry7")
Interceptor.attach(DdEntry7, {onLeave: function (args) {send("DdEntry7");}});

var DdEntry8 = Module.findExportByName("gdi32.dll", "DdEntry8")
Interceptor.attach(DdEntry8, {onLeave: function (args) {send("DdEntry8");}});

var DdEntry9 = Module.findExportByName("gdi32.dll", "DdEntry9")
Interceptor.attach(DdEntry9, {onLeave: function (args) {send("DdEntry9");}});

var DdNotifyFullscreenSpriteUpdate = Module.findExportByName("gdi32.dll", "DdNotifyFullscreenSpriteUpdate")
Interceptor.attach(DdNotifyFullscreenSpriteUpdate, {onLeave: function (args) {send("DdNotifyFullscreenSpriteUpdate");}});

var DdQueryVisRgnUniqueness = Module.findExportByName("gdi32.dll", "DdQueryVisRgnUniqueness")
Interceptor.attach(DdQueryVisRgnUniqueness, {onLeave: function (args) {send("DdQueryVisRgnUniqueness");}});

var DeleteColorSpace = Module.findExportByName("gdi32.dll", "DeleteColorSpace")
Interceptor.attach(DeleteColorSpace, {onLeave: function (args) {send("DeleteColorSpace");}});

var DeleteDC = Module.findExportByName("gdi32.dll", "DeleteDC")
Interceptor.attach(DeleteDC, {onLeave: function (args) {send("DeleteDC");}});

var DeleteEnhMetaFile = Module.findExportByName("gdi32.dll", "DeleteEnhMetaFile")
Interceptor.attach(DeleteEnhMetaFile, {onLeave: function (args) {send("DeleteEnhMetaFile");}});

var DeleteMetaFile = Module.findExportByName("gdi32.dll", "DeleteMetaFile")
Interceptor.attach(DeleteMetaFile, {onLeave: function (args) {send("DeleteMetaFile");}});

var DeleteObject = Module.findExportByName("gdi32.dll", "DeleteObject")
Interceptor.attach(DeleteObject, {onLeave: function (args) {send("DeleteObject");}});

var DescribePixelFormat = Module.findExportByName("gdi32.dll", "DescribePixelFormat")
Interceptor.attach(DescribePixelFormat, {onLeave: function (args) {send("DescribePixelFormat");}});

var DestroyOPMProtectedOutput = Module.findExportByName("gdi32.dll", "DestroyOPMProtectedOutput")
Interceptor.attach(DestroyOPMProtectedOutput, {onLeave: function (args) {send("DestroyOPMProtectedOutput");}});

var DestroyPhysicalMonitorInternal = Module.findExportByName("gdi32.dll", "DestroyPhysicalMonitorInternal")
Interceptor.attach(DestroyPhysicalMonitorInternal, {onLeave: function (args) {send("DestroyPhysicalMonitorInternal");}});

var DeviceCapabilitiesExA = Module.findExportByName("gdi32.dll", "DeviceCapabilitiesExA")
Interceptor.attach(DeviceCapabilitiesExA, {onLeave: function (args) {send("DeviceCapabilitiesExA");}});

var DeviceCapabilitiesExW = Module.findExportByName("gdi32.dll", "DeviceCapabilitiesExW")
Interceptor.attach(DeviceCapabilitiesExW, {onLeave: function (args) {send("DeviceCapabilitiesExW");}});

var DrawEscape = Module.findExportByName("gdi32.dll", "DrawEscape")
Interceptor.attach(DrawEscape, {onLeave: function (args) {send("DrawEscape");}});

var DwmCreatedBitmapRemotingOutput = Module.findExportByName("gdi32.dll", "DwmCreatedBitmapRemotingOutput")
Interceptor.attach(DwmCreatedBitmapRemotingOutput, {onLeave: function (args) {send("DwmCreatedBitmapRemotingOutput");}});

var Ellipse = Module.findExportByName("gdi32.dll", "Ellipse")
Interceptor.attach(Ellipse, {onLeave: function (args) {send("Ellipse");}});

var EnableEUDC = Module.findExportByName("gdi32.dll", "EnableEUDC")
Interceptor.attach(EnableEUDC, {onLeave: function (args) {send("EnableEUDC");}});

var EndDoc = Module.findExportByName("gdi32.dll", "EndDoc")
Interceptor.attach(EndDoc, {onLeave: function (args) {send("EndDoc");}});

var EndFormPage = Module.findExportByName("gdi32.dll", "EndFormPage")
Interceptor.attach(EndFormPage, {onLeave: function (args) {send("EndFormPage");}});

var EndGdiRendering = Module.findExportByName("gdi32.dll", "EndGdiRendering")
Interceptor.attach(EndGdiRendering, {onLeave: function (args) {send("EndGdiRendering");}});

var EndPage = Module.findExportByName("gdi32.dll", "EndPage")
Interceptor.attach(EndPage, {onLeave: function (args) {send("EndPage");}});

var EndPath = Module.findExportByName("gdi32.dll", "EndPath")
Interceptor.attach(EndPath, {onLeave: function (args) {send("EndPath");}});

var EngAcquireSemaphore = Module.findExportByName("gdi32.dll", "EngAcquireSemaphore")
Interceptor.attach(EngAcquireSemaphore, {onLeave: function (args) {send("EngAcquireSemaphore");}});

var EngAlphaBlend = Module.findExportByName("gdi32.dll", "EngAlphaBlend")
Interceptor.attach(EngAlphaBlend, {onLeave: function (args) {send("EngAlphaBlend");}});

var EngAssociateSurface = Module.findExportByName("gdi32.dll", "EngAssociateSurface")
Interceptor.attach(EngAssociateSurface, {onLeave: function (args) {send("EngAssociateSurface");}});

var EngBitBlt = Module.findExportByName("gdi32.dll", "EngBitBlt")
Interceptor.attach(EngBitBlt, {onLeave: function (args) {send("EngBitBlt");}});

var EngCheckAbort = Module.findExportByName("gdi32.dll", "EngCheckAbort")
Interceptor.attach(EngCheckAbort, {onLeave: function (args) {send("EngCheckAbort");}});

var EngComputeGlyphSet = Module.findExportByName("gdi32.dll", "EngComputeGlyphSet")
Interceptor.attach(EngComputeGlyphSet, {onLeave: function (args) {send("EngComputeGlyphSet");}});

var EngCopyBits = Module.findExportByName("gdi32.dll", "EngCopyBits")
Interceptor.attach(EngCopyBits, {onLeave: function (args) {send("EngCopyBits");}});

var EngCreateBitmap = Module.findExportByName("gdi32.dll", "EngCreateBitmap")
Interceptor.attach(EngCreateBitmap, {onLeave: function (args) {send("EngCreateBitmap");}});

var EngCreateClip = Module.findExportByName("gdi32.dll", "EngCreateClip")
Interceptor.attach(EngCreateClip, {onLeave: function (args) {send("EngCreateClip");}});

var EngCreateDeviceBitmap = Module.findExportByName("gdi32.dll", "EngCreateDeviceBitmap")
Interceptor.attach(EngCreateDeviceBitmap, {onLeave: function (args) {send("EngCreateDeviceBitmap");}});

var EngCreateDeviceSurface = Module.findExportByName("gdi32.dll", "EngCreateDeviceSurface")
Interceptor.attach(EngCreateDeviceSurface, {onLeave: function (args) {send("EngCreateDeviceSurface");}});

var EngCreatePalette = Module.findExportByName("gdi32.dll", "EngCreatePalette")
Interceptor.attach(EngCreatePalette, {onLeave: function (args) {send("EngCreatePalette");}});

var EngCreateSemaphore = Module.findExportByName("gdi32.dll", "EngCreateSemaphore")
Interceptor.attach(EngCreateSemaphore, {onLeave: function (args) {send("EngCreateSemaphore");}});

var EngDeleteClip = Module.findExportByName("gdi32.dll", "EngDeleteClip")
Interceptor.attach(EngDeleteClip, {onLeave: function (args) {send("EngDeleteClip");}});

var EngDeletePalette = Module.findExportByName("gdi32.dll", "EngDeletePalette")
Interceptor.attach(EngDeletePalette, {onLeave: function (args) {send("EngDeletePalette");}});

var EngDeletePath = Module.findExportByName("gdi32.dll", "EngDeletePath")
Interceptor.attach(EngDeletePath, {onLeave: function (args) {send("EngDeletePath");}});

var EngDeleteSemaphore = Module.findExportByName("gdi32.dll", "EngDeleteSemaphore")
Interceptor.attach(EngDeleteSemaphore, {onLeave: function (args) {send("EngDeleteSemaphore");}});

var EngDeleteSurface = Module.findExportByName("gdi32.dll", "EngDeleteSurface")
Interceptor.attach(EngDeleteSurface, {onLeave: function (args) {send("EngDeleteSurface");}});

var EngEraseSurface = Module.findExportByName("gdi32.dll", "EngEraseSurface")
Interceptor.attach(EngEraseSurface, {onLeave: function (args) {send("EngEraseSurface");}});

var EngFillPath = Module.findExportByName("gdi32.dll", "EngFillPath")
Interceptor.attach(EngFillPath, {onLeave: function (args) {send("EngFillPath");}});

var EngFindResource = Module.findExportByName("gdi32.dll", "EngFindResource")
Interceptor.attach(EngFindResource, {onLeave: function (args) {send("EngFindResource");}});

var EngFreeModule = Module.findExportByName("gdi32.dll", "EngFreeModule")
Interceptor.attach(EngFreeModule, {onLeave: function (args) {send("EngFreeModule");}});

var EngGetCurrentCodePage = Module.findExportByName("gdi32.dll", "EngGetCurrentCodePage")
Interceptor.attach(EngGetCurrentCodePage, {onLeave: function (args) {send("EngGetCurrentCodePage");}});

var EngGetDriverName = Module.findExportByName("gdi32.dll", "EngGetDriverName")
Interceptor.attach(EngGetDriverName, {onLeave: function (args) {send("EngGetDriverName");}});

var EngGetPrinterDataFileName = Module.findExportByName("gdi32.dll", "EngGetPrinterDataFileName")
Interceptor.attach(EngGetPrinterDataFileName, {onLeave: function (args) {send("EngGetPrinterDataFileName");}});

var EngGradientFill = Module.findExportByName("gdi32.dll", "EngGradientFill")
Interceptor.attach(EngGradientFill, {onLeave: function (args) {send("EngGradientFill");}});

var EngLineTo = Module.findExportByName("gdi32.dll", "EngLineTo")
Interceptor.attach(EngLineTo, {onLeave: function (args) {send("EngLineTo");}});

var EngLoadModule = Module.findExportByName("gdi32.dll", "EngLoadModule")
Interceptor.attach(EngLoadModule, {onLeave: function (args) {send("EngLoadModule");}});

var EngLockSurface = Module.findExportByName("gdi32.dll", "EngLockSurface")
Interceptor.attach(EngLockSurface, {onLeave: function (args) {send("EngLockSurface");}});

var EngMarkBandingSurface = Module.findExportByName("gdi32.dll", "EngMarkBandingSurface")
Interceptor.attach(EngMarkBandingSurface, {onLeave: function (args) {send("EngMarkBandingSurface");}});

var EngMultiByteToUnicodeN = Module.findExportByName("gdi32.dll", "EngMultiByteToUnicodeN")
Interceptor.attach(EngMultiByteToUnicodeN, {onLeave: function (args) {send("EngMultiByteToUnicodeN");}});

var EngMultiByteToWideChar = Module.findExportByName("gdi32.dll", "EngMultiByteToWideChar")
Interceptor.attach(EngMultiByteToWideChar, {onLeave: function (args) {send("EngMultiByteToWideChar");}});

var EngPaint = Module.findExportByName("gdi32.dll", "EngPaint")
Interceptor.attach(EngPaint, {onLeave: function (args) {send("EngPaint");}});

var EngPlgBlt = Module.findExportByName("gdi32.dll", "EngPlgBlt")
Interceptor.attach(EngPlgBlt, {onLeave: function (args) {send("EngPlgBlt");}});

var EngQueryEMFInfo = Module.findExportByName("gdi32.dll", "EngQueryEMFInfo")
Interceptor.attach(EngQueryEMFInfo, {onLeave: function (args) {send("EngQueryEMFInfo");}});

var EngQueryLocalTime = Module.findExportByName("gdi32.dll", "EngQueryLocalTime")
Interceptor.attach(EngQueryLocalTime, {onLeave: function (args) {send("EngQueryLocalTime");}});

var EngReleaseSemaphore = Module.findExportByName("gdi32.dll", "EngReleaseSemaphore")
Interceptor.attach(EngReleaseSemaphore, {onLeave: function (args) {send("EngReleaseSemaphore");}});

var EngStretchBlt = Module.findExportByName("gdi32.dll", "EngStretchBlt")
Interceptor.attach(EngStretchBlt, {onLeave: function (args) {send("EngStretchBlt");}});

var EngStretchBltROP = Module.findExportByName("gdi32.dll", "EngStretchBltROP")
Interceptor.attach(EngStretchBltROP, {onLeave: function (args) {send("EngStretchBltROP");}});

var EngStrokeAndFillPath = Module.findExportByName("gdi32.dll", "EngStrokeAndFillPath")
Interceptor.attach(EngStrokeAndFillPath, {onLeave: function (args) {send("EngStrokeAndFillPath");}});

var EngStrokePath = Module.findExportByName("gdi32.dll", "EngStrokePath")
Interceptor.attach(EngStrokePath, {onLeave: function (args) {send("EngStrokePath");}});

var EngTextOut = Module.findExportByName("gdi32.dll", "EngTextOut")
Interceptor.attach(EngTextOut, {onLeave: function (args) {send("EngTextOut");}});

var EngTransparentBlt = Module.findExportByName("gdi32.dll", "EngTransparentBlt")
Interceptor.attach(EngTransparentBlt, {onLeave: function (args) {send("EngTransparentBlt");}});

var EngUnicodeToMultiByteN = Module.findExportByName("gdi32.dll", "EngUnicodeToMultiByteN")
Interceptor.attach(EngUnicodeToMultiByteN, {onLeave: function (args) {send("EngUnicodeToMultiByteN");}});

var EngUnlockSurface = Module.findExportByName("gdi32.dll", "EngUnlockSurface")
Interceptor.attach(EngUnlockSurface, {onLeave: function (args) {send("EngUnlockSurface");}});

var EngWideCharToMultiByte = Module.findExportByName("gdi32.dll", "EngWideCharToMultiByte")
Interceptor.attach(EngWideCharToMultiByte, {onLeave: function (args) {send("EngWideCharToMultiByte");}});

var EnumEnhMetaFile = Module.findExportByName("gdi32.dll", "EnumEnhMetaFile")
Interceptor.attach(EnumEnhMetaFile, {onLeave: function (args) {send("EnumEnhMetaFile");}});

var EnumFontFamiliesA = Module.findExportByName("gdi32.dll", "EnumFontFamiliesA")
Interceptor.attach(EnumFontFamiliesA, {onLeave: function (args) {send("EnumFontFamiliesA");}});

var EnumFontFamiliesExA = Module.findExportByName("gdi32.dll", "EnumFontFamiliesExA")
Interceptor.attach(EnumFontFamiliesExA, {onLeave: function (args) {send("EnumFontFamiliesExA");}});

var EnumFontFamiliesExW = Module.findExportByName("gdi32.dll", "EnumFontFamiliesExW")
Interceptor.attach(EnumFontFamiliesExW, {onLeave: function (args) {send("EnumFontFamiliesExW");}});

var EnumFontFamiliesW = Module.findExportByName("gdi32.dll", "EnumFontFamiliesW")
Interceptor.attach(EnumFontFamiliesW, {onLeave: function (args) {send("EnumFontFamiliesW");}});

var EnumFontsA = Module.findExportByName("gdi32.dll", "EnumFontsA")
Interceptor.attach(EnumFontsA, {onLeave: function (args) {send("EnumFontsA");}});

var EnumFontsW = Module.findExportByName("gdi32.dll", "EnumFontsW")
Interceptor.attach(EnumFontsW, {onLeave: function (args) {send("EnumFontsW");}});

var EnumICMProfilesA = Module.findExportByName("gdi32.dll", "EnumICMProfilesA")
Interceptor.attach(EnumICMProfilesA, {onLeave: function (args) {send("EnumICMProfilesA");}});

var EnumICMProfilesW = Module.findExportByName("gdi32.dll", "EnumICMProfilesW")
Interceptor.attach(EnumICMProfilesW, {onLeave: function (args) {send("EnumICMProfilesW");}});

var EnumMetaFile = Module.findExportByName("gdi32.dll", "EnumMetaFile")
Interceptor.attach(EnumMetaFile, {onLeave: function (args) {send("EnumMetaFile");}});

var EnumObjects = Module.findExportByName("gdi32.dll", "EnumObjects")
Interceptor.attach(EnumObjects, {onLeave: function (args) {send("EnumObjects");}});

var EqualRgn = Module.findExportByName("gdi32.dll", "EqualRgn")
Interceptor.attach(EqualRgn, {onLeave: function (args) {send("EqualRgn");}});

var Escape = Module.findExportByName("gdi32.dll", "Escape")
Interceptor.attach(Escape, {onLeave: function (args) {send("Escape");}});

var EudcLoadLinkW = Module.findExportByName("gdi32.dll", "EudcLoadLinkW")
Interceptor.attach(EudcLoadLinkW, {onLeave: function (args) {send("EudcLoadLinkW");}});

var EudcUnloadLinkW = Module.findExportByName("gdi32.dll", "EudcUnloadLinkW")
Interceptor.attach(EudcUnloadLinkW, {onLeave: function (args) {send("EudcUnloadLinkW");}});

var ExcludeClipRect = Module.findExportByName("gdi32.dll", "ExcludeClipRect")
Interceptor.attach(ExcludeClipRect, {onLeave: function (args) {send("ExcludeClipRect");}});

var ExtCreatePen = Module.findExportByName("gdi32.dll", "ExtCreatePen")
Interceptor.attach(ExtCreatePen, {onLeave: function (args) {send("ExtCreatePen");}});

var ExtCreateRegion = Module.findExportByName("gdi32.dll", "ExtCreateRegion")
Interceptor.attach(ExtCreateRegion, {onLeave: function (args) {send("ExtCreateRegion");}});

var ExtEscape = Module.findExportByName("gdi32.dll", "ExtEscape")
Interceptor.attach(ExtEscape, {onLeave: function (args) {send("ExtEscape");}});

var ExtFloodFill = Module.findExportByName("gdi32.dll", "ExtFloodFill")
Interceptor.attach(ExtFloodFill, {onLeave: function (args) {send("ExtFloodFill");}});

var ExtSelectClipRgn = Module.findExportByName("gdi32.dll", "ExtSelectClipRgn")
Interceptor.attach(ExtSelectClipRgn, {onLeave: function (args) {send("ExtSelectClipRgn");}});

var ExtTextOutA = Module.findExportByName("gdi32.dll", "ExtTextOutA")
Interceptor.attach(ExtTextOutA, {onLeave: function (args) {send("ExtTextOutA");}});

var ExtTextOutW = Module.findExportByName("gdi32.dll", "ExtTextOutW")
Interceptor.attach(ExtTextOutW, {onLeave: function (args) {send("ExtTextOutW");}});

var FONTOBJ_cGetAllGlyphHandles = Module.findExportByName("gdi32.dll", "FONTOBJ_cGetAllGlyphHandles")
Interceptor.attach(FONTOBJ_cGetAllGlyphHandles, {onLeave: function (args) {send("FONTOBJ_cGetAllGlyphHandles");}});

var FONTOBJ_cGetGlyphs = Module.findExportByName("gdi32.dll", "FONTOBJ_cGetGlyphs")
Interceptor.attach(FONTOBJ_cGetGlyphs, {onLeave: function (args) {send("FONTOBJ_cGetGlyphs");}});

var FONTOBJ_pQueryGlyphAttrs = Module.findExportByName("gdi32.dll", "FONTOBJ_pQueryGlyphAttrs")
Interceptor.attach(FONTOBJ_pQueryGlyphAttrs, {onLeave: function (args) {send("FONTOBJ_pQueryGlyphAttrs");}});

var FONTOBJ_pfdg = Module.findExportByName("gdi32.dll", "FONTOBJ_pfdg")
Interceptor.attach(FONTOBJ_pfdg, {onLeave: function (args) {send("FONTOBJ_pfdg");}});

var FONTOBJ_pifi = Module.findExportByName("gdi32.dll", "FONTOBJ_pifi")
Interceptor.attach(FONTOBJ_pifi, {onLeave: function (args) {send("FONTOBJ_pifi");}});

var FONTOBJ_pvTrueTypeFontFile = Module.findExportByName("gdi32.dll", "FONTOBJ_pvTrueTypeFontFile")
Interceptor.attach(FONTOBJ_pvTrueTypeFontFile, {onLeave: function (args) {send("FONTOBJ_pvTrueTypeFontFile");}});

var FONTOBJ_pxoGetXform = Module.findExportByName("gdi32.dll", "FONTOBJ_pxoGetXform")
Interceptor.attach(FONTOBJ_pxoGetXform, {onLeave: function (args) {send("FONTOBJ_pxoGetXform");}});

var FONTOBJ_vGetInfo = Module.findExportByName("gdi32.dll", "FONTOBJ_vGetInfo")
Interceptor.attach(FONTOBJ_vGetInfo, {onLeave: function (args) {send("FONTOBJ_vGetInfo");}});

var FillPath = Module.findExportByName("gdi32.dll", "FillPath")
Interceptor.attach(FillPath, {onLeave: function (args) {send("FillPath");}});

var FillRgn = Module.findExportByName("gdi32.dll", "FillRgn")
Interceptor.attach(FillRgn, {onLeave: function (args) {send("FillRgn");}});

var FixBrushOrgEx = Module.findExportByName("gdi32.dll", "FixBrushOrgEx")
Interceptor.attach(FixBrushOrgEx, {onLeave: function (args) {send("FixBrushOrgEx");}});

var FlattenPath = Module.findExportByName("gdi32.dll", "FlattenPath")
Interceptor.attach(FlattenPath, {onLeave: function (args) {send("FlattenPath");}});

var FloodFill = Module.findExportByName("gdi32.dll", "FloodFill")
Interceptor.attach(FloodFill, {onLeave: function (args) {send("FloodFill");}});

var FontIsLinked = Module.findExportByName("gdi32.dll", "FontIsLinked")
Interceptor.attach(FontIsLinked, {onLeave: function (args) {send("FontIsLinked");}});

var FrameRgn = Module.findExportByName("gdi32.dll", "FrameRgn")
Interceptor.attach(FrameRgn, {onLeave: function (args) {send("FrameRgn");}});

var Gdi32DllInitialize = Module.findExportByName("gdi32.dll", "Gdi32DllInitialize")
Interceptor.attach(Gdi32DllInitialize, {onLeave: function (args) {send("Gdi32DllInitialize");}});

var GdiAddFontResourceW = Module.findExportByName("gdi32.dll", "GdiAddFontResourceW")
Interceptor.attach(GdiAddFontResourceW, {onLeave: function (args) {send("GdiAddFontResourceW");}});

var GdiAddGlsBounds = Module.findExportByName("gdi32.dll", "GdiAddGlsBounds")
Interceptor.attach(GdiAddGlsBounds, {onLeave: function (args) {send("GdiAddGlsBounds");}});

var GdiAddGlsRecord = Module.findExportByName("gdi32.dll", "GdiAddGlsRecord")
Interceptor.attach(GdiAddGlsRecord, {onLeave: function (args) {send("GdiAddGlsRecord");}});

var GdiAddInitialFonts = Module.findExportByName("gdi32.dll", "GdiAddInitialFonts")
Interceptor.attach(GdiAddInitialFonts, {onLeave: function (args) {send("GdiAddInitialFonts");}});

var GdiAlphaBlend = Module.findExportByName("gdi32.dll", "GdiAlphaBlend")
Interceptor.attach(GdiAlphaBlend, {onLeave: function (args) {send("GdiAlphaBlend");}});

var GdiArtificialDecrementDriver = Module.findExportByName("gdi32.dll", "GdiArtificialDecrementDriver")
Interceptor.attach(GdiArtificialDecrementDriver, {onLeave: function (args) {send("GdiArtificialDecrementDriver");}});

var GdiBatchLimit = Module.findExportByName("gdi32.dll", "GdiBatchLimit")
Interceptor.attach(GdiBatchLimit, {onLeave: function (args) {send("GdiBatchLimit");}});

var GdiCleanCacheDC = Module.findExportByName("gdi32.dll", "GdiCleanCacheDC")
Interceptor.attach(GdiCleanCacheDC, {onLeave: function (args) {send("GdiCleanCacheDC");}});

var GdiComment = Module.findExportByName("gdi32.dll", "GdiComment")
Interceptor.attach(GdiComment, {onLeave: function (args) {send("GdiComment");}});

var GdiConsoleTextOut = Module.findExportByName("gdi32.dll", "GdiConsoleTextOut")
Interceptor.attach(GdiConsoleTextOut, {onLeave: function (args) {send("GdiConsoleTextOut");}});

var GdiConvertAndCheckDC = Module.findExportByName("gdi32.dll", "GdiConvertAndCheckDC")
Interceptor.attach(GdiConvertAndCheckDC, {onLeave: function (args) {send("GdiConvertAndCheckDC");}});

var GdiConvertBitmap = Module.findExportByName("gdi32.dll", "GdiConvertBitmap")
Interceptor.attach(GdiConvertBitmap, {onLeave: function (args) {send("GdiConvertBitmap");}});

var GdiConvertBitmapV5 = Module.findExportByName("gdi32.dll", "GdiConvertBitmapV5")
Interceptor.attach(GdiConvertBitmapV5, {onLeave: function (args) {send("GdiConvertBitmapV5");}});

var GdiConvertBrush = Module.findExportByName("gdi32.dll", "GdiConvertBrush")
Interceptor.attach(GdiConvertBrush, {onLeave: function (args) {send("GdiConvertBrush");}});

var GdiConvertDC = Module.findExportByName("gdi32.dll", "GdiConvertDC")
Interceptor.attach(GdiConvertDC, {onLeave: function (args) {send("GdiConvertDC");}});

var GdiConvertEnhMetaFile = Module.findExportByName("gdi32.dll", "GdiConvertEnhMetaFile")
Interceptor.attach(GdiConvertEnhMetaFile, {onLeave: function (args) {send("GdiConvertEnhMetaFile");}});

var GdiConvertFont = Module.findExportByName("gdi32.dll", "GdiConvertFont")
Interceptor.attach(GdiConvertFont, {onLeave: function (args) {send("GdiConvertFont");}});

var GdiConvertMetaFilePict = Module.findExportByName("gdi32.dll", "GdiConvertMetaFilePict")
Interceptor.attach(GdiConvertMetaFilePict, {onLeave: function (args) {send("GdiConvertMetaFilePict");}});

var GdiConvertPalette = Module.findExportByName("gdi32.dll", "GdiConvertPalette")
Interceptor.attach(GdiConvertPalette, {onLeave: function (args) {send("GdiConvertPalette");}});

var GdiConvertRegion = Module.findExportByName("gdi32.dll", "GdiConvertRegion")
Interceptor.attach(GdiConvertRegion, {onLeave: function (args) {send("GdiConvertRegion");}});

var GdiConvertToDevmodeW = Module.findExportByName("gdi32.dll", "GdiConvertToDevmodeW")
Interceptor.attach(GdiConvertToDevmodeW, {onLeave: function (args) {send("GdiConvertToDevmodeW");}});

var GdiCreateLocalEnhMetaFile = Module.findExportByName("gdi32.dll", "GdiCreateLocalEnhMetaFile")
Interceptor.attach(GdiCreateLocalEnhMetaFile, {onLeave: function (args) {send("GdiCreateLocalEnhMetaFile");}});

var GdiCreateLocalMetaFilePict = Module.findExportByName("gdi32.dll", "GdiCreateLocalMetaFilePict")
Interceptor.attach(GdiCreateLocalMetaFilePict, {onLeave: function (args) {send("GdiCreateLocalMetaFilePict");}});

var GdiCurrentProcessSplWow64 = Module.findExportByName("gdi32.dll", "GdiCurrentProcessSplWow64")
Interceptor.attach(GdiCurrentProcessSplWow64, {onLeave: function (args) {send("GdiCurrentProcessSplWow64");}});

var GdiDeleteLocalDC = Module.findExportByName("gdi32.dll", "GdiDeleteLocalDC")
Interceptor.attach(GdiDeleteLocalDC, {onLeave: function (args) {send("GdiDeleteLocalDC");}});

var GdiDeleteSpoolFileHandle = Module.findExportByName("gdi32.dll", "GdiDeleteSpoolFileHandle")
Interceptor.attach(GdiDeleteSpoolFileHandle, {onLeave: function (args) {send("GdiDeleteSpoolFileHandle");}});

var GdiDescribePixelFormat = Module.findExportByName("gdi32.dll", "GdiDescribePixelFormat")
Interceptor.attach(GdiDescribePixelFormat, {onLeave: function (args) {send("GdiDescribePixelFormat");}});

var GdiDisableUMPDSandboxing = Module.findExportByName("gdi32.dll", "GdiDisableUMPDSandboxing")
Interceptor.attach(GdiDisableUMPDSandboxing, {onLeave: function (args) {send("GdiDisableUMPDSandboxing");}});

var GdiDllInitialize = Module.findExportByName("gdi32.dll", "GdiDllInitialize")
Interceptor.attach(GdiDllInitialize, {onLeave: function (args) {send("GdiDllInitialize");}});

var GdiDrawStream = Module.findExportByName("gdi32.dll", "GdiDrawStream")
Interceptor.attach(GdiDrawStream, {onLeave: function (args) {send("GdiDrawStream");}});

var GdiEndDocEMF = Module.findExportByName("gdi32.dll", "GdiEndDocEMF")
Interceptor.attach(GdiEndDocEMF, {onLeave: function (args) {send("GdiEndDocEMF");}});

var GdiEndPageEMF = Module.findExportByName("gdi32.dll", "GdiEndPageEMF")
Interceptor.attach(GdiEndPageEMF, {onLeave: function (args) {send("GdiEndPageEMF");}});

var GdiEntry1 = Module.findExportByName("gdi32.dll", "GdiEntry1")
Interceptor.attach(GdiEntry1, {onLeave: function (args) {send("GdiEntry1");}});

var GdiEntry10 = Module.findExportByName("gdi32.dll", "GdiEntry10")
Interceptor.attach(GdiEntry10, {onLeave: function (args) {send("GdiEntry10");}});

var GdiEntry11 = Module.findExportByName("gdi32.dll", "GdiEntry11")
Interceptor.attach(GdiEntry11, {onLeave: function (args) {send("GdiEntry11");}});

var GdiEntry12 = Module.findExportByName("gdi32.dll", "GdiEntry12")
Interceptor.attach(GdiEntry12, {onLeave: function (args) {send("GdiEntry12");}});

var GdiEntry13 = Module.findExportByName("gdi32.dll", "GdiEntry13")
Interceptor.attach(GdiEntry13, {onLeave: function (args) {send("GdiEntry13");}});

var GdiEntry14 = Module.findExportByName("gdi32.dll", "GdiEntry14")
Interceptor.attach(GdiEntry14, {onLeave: function (args) {send("GdiEntry14");}});

var GdiEntry15 = Module.findExportByName("gdi32.dll", "GdiEntry15")
Interceptor.attach(GdiEntry15, {onLeave: function (args) {send("GdiEntry15");}});

var GdiEntry16 = Module.findExportByName("gdi32.dll", "GdiEntry16")
Interceptor.attach(GdiEntry16, {onLeave: function (args) {send("GdiEntry16");}});

var GdiEntry2 = Module.findExportByName("gdi32.dll", "GdiEntry2")
Interceptor.attach(GdiEntry2, {onLeave: function (args) {send("GdiEntry2");}});

var GdiEntry3 = Module.findExportByName("gdi32.dll", "GdiEntry3")
Interceptor.attach(GdiEntry3, {onLeave: function (args) {send("GdiEntry3");}});

var GdiEntry4 = Module.findExportByName("gdi32.dll", "GdiEntry4")
Interceptor.attach(GdiEntry4, {onLeave: function (args) {send("GdiEntry4");}});

var GdiEntry5 = Module.findExportByName("gdi32.dll", "GdiEntry5")
Interceptor.attach(GdiEntry5, {onLeave: function (args) {send("GdiEntry5");}});

var GdiEntry6 = Module.findExportByName("gdi32.dll", "GdiEntry6")
Interceptor.attach(GdiEntry6, {onLeave: function (args) {send("GdiEntry6");}});

var GdiEntry7 = Module.findExportByName("gdi32.dll", "GdiEntry7")
Interceptor.attach(GdiEntry7, {onLeave: function (args) {send("GdiEntry7");}});

var GdiEntry8 = Module.findExportByName("gdi32.dll", "GdiEntry8")
Interceptor.attach(GdiEntry8, {onLeave: function (args) {send("GdiEntry8");}});

var GdiEntry9 = Module.findExportByName("gdi32.dll", "GdiEntry9")
Interceptor.attach(GdiEntry9, {onLeave: function (args) {send("GdiEntry9");}});

var GdiFixUpHandle = Module.findExportByName("gdi32.dll", "GdiFixUpHandle")
Interceptor.attach(GdiFixUpHandle, {onLeave: function (args) {send("GdiFixUpHandle");}});

var GdiFlush = Module.findExportByName("gdi32.dll", "GdiFlush")
Interceptor.attach(GdiFlush, {onLeave: function (args) {send("GdiFlush");}});

var GdiFullscreenControl = Module.findExportByName("gdi32.dll", "GdiFullscreenControl")
Interceptor.attach(GdiFullscreenControl, {onLeave: function (args) {send("GdiFullscreenControl");}});

var GdiGetBatchLimit = Module.findExportByName("gdi32.dll", "GdiGetBatchLimit")
Interceptor.attach(GdiGetBatchLimit, {onLeave: function (args) {send("GdiGetBatchLimit");}});

var GdiGetBitmapBitsSize = Module.findExportByName("gdi32.dll", "GdiGetBitmapBitsSize")
Interceptor.attach(GdiGetBitmapBitsSize, {onLeave: function (args) {send("GdiGetBitmapBitsSize");}});

var GdiGetCharDimensions = Module.findExportByName("gdi32.dll", "GdiGetCharDimensions")
Interceptor.attach(GdiGetCharDimensions, {onLeave: function (args) {send("GdiGetCharDimensions");}});

var GdiGetCodePage = Module.findExportByName("gdi32.dll", "GdiGetCodePage")
Interceptor.attach(GdiGetCodePage, {onLeave: function (args) {send("GdiGetCodePage");}});

var GdiGetDC = Module.findExportByName("gdi32.dll", "GdiGetDC")
Interceptor.attach(GdiGetDC, {onLeave: function (args) {send("GdiGetDC");}});

var GdiGetDevmodeForPage = Module.findExportByName("gdi32.dll", "GdiGetDevmodeForPage")
Interceptor.attach(GdiGetDevmodeForPage, {onLeave: function (args) {send("GdiGetDevmodeForPage");}});

var GdiGetEntry = Module.findExportByName("gdi32.dll", "GdiGetEntry")
Interceptor.attach(GdiGetEntry, {onLeave: function (args) {send("GdiGetEntry");}});

var GdiGetLocalBrush = Module.findExportByName("gdi32.dll", "GdiGetLocalBrush")
Interceptor.attach(GdiGetLocalBrush, {onLeave: function (args) {send("GdiGetLocalBrush");}});

var GdiGetLocalDC = Module.findExportByName("gdi32.dll", "GdiGetLocalDC")
Interceptor.attach(GdiGetLocalDC, {onLeave: function (args) {send("GdiGetLocalDC");}});

var GdiGetLocalFont = Module.findExportByName("gdi32.dll", "GdiGetLocalFont")
Interceptor.attach(GdiGetLocalFont, {onLeave: function (args) {send("GdiGetLocalFont");}});

var GdiGetPageCount = Module.findExportByName("gdi32.dll", "GdiGetPageCount")
Interceptor.attach(GdiGetPageCount, {onLeave: function (args) {send("GdiGetPageCount");}});

var GdiGetPageHandle = Module.findExportByName("gdi32.dll", "GdiGetPageHandle")
Interceptor.attach(GdiGetPageHandle, {onLeave: function (args) {send("GdiGetPageHandle");}});

var GdiGetSpoolFileHandle = Module.findExportByName("gdi32.dll", "GdiGetSpoolFileHandle")
Interceptor.attach(GdiGetSpoolFileHandle, {onLeave: function (args) {send("GdiGetSpoolFileHandle");}});

var GdiGetSpoolMessage = Module.findExportByName("gdi32.dll", "GdiGetSpoolMessage")
Interceptor.attach(GdiGetSpoolMessage, {onLeave: function (args) {send("GdiGetSpoolMessage");}});

var GdiGetVariationStoreDelta = Module.findExportByName("gdi32.dll", "GdiGetVariationStoreDelta")
Interceptor.attach(GdiGetVariationStoreDelta, {onLeave: function (args) {send("GdiGetVariationStoreDelta");}});

var GdiGradientFill = Module.findExportByName("gdi32.dll", "GdiGradientFill")
Interceptor.attach(GdiGradientFill, {onLeave: function (args) {send("GdiGradientFill");}});

var GdiHandleBeingTracked = Module.findExportByName("gdi32.dll", "GdiHandleBeingTracked")
Interceptor.attach(GdiHandleBeingTracked, {onLeave: function (args) {send("GdiHandleBeingTracked");}});

var GdiInitSpool = Module.findExportByName("gdi32.dll", "GdiInitSpool")
Interceptor.attach(GdiInitSpool, {onLeave: function (args) {send("GdiInitSpool");}});

var GdiInitializeLanguagePack = Module.findExportByName("gdi32.dll", "GdiInitializeLanguagePack")
Interceptor.attach(GdiInitializeLanguagePack, {onLeave: function (args) {send("GdiInitializeLanguagePack");}});

var GdiIsMetaFileDC = Module.findExportByName("gdi32.dll", "GdiIsMetaFileDC")
Interceptor.attach(GdiIsMetaFileDC, {onLeave: function (args) {send("GdiIsMetaFileDC");}});

var GdiIsMetaPrintDC = Module.findExportByName("gdi32.dll", "GdiIsMetaPrintDC")
Interceptor.attach(GdiIsMetaPrintDC, {onLeave: function (args) {send("GdiIsMetaPrintDC");}});

var GdiIsPlayMetafileDC = Module.findExportByName("gdi32.dll", "GdiIsPlayMetafileDC")
Interceptor.attach(GdiIsPlayMetafileDC, {onLeave: function (args) {send("GdiIsPlayMetafileDC");}});

var GdiIsScreenDC = Module.findExportByName("gdi32.dll", "GdiIsScreenDC")
Interceptor.attach(GdiIsScreenDC, {onLeave: function (args) {send("GdiIsScreenDC");}});

var GdiIsUMPDSandboxingEnabled = Module.findExportByName("gdi32.dll", "GdiIsUMPDSandboxingEnabled")
Interceptor.attach(GdiIsUMPDSandboxingEnabled, {onLeave: function (args) {send("GdiIsUMPDSandboxingEnabled");}});

var GdiLoadType1Fonts = Module.findExportByName("gdi32.dll", "GdiLoadType1Fonts")
Interceptor.attach(GdiLoadType1Fonts, {onLeave: function (args) {send("GdiLoadType1Fonts");}});

var GdiPlayDCScript = Module.findExportByName("gdi32.dll", "GdiPlayDCScript")
Interceptor.attach(GdiPlayDCScript, {onLeave: function (args) {send("GdiPlayDCScript");}});

var GdiPlayEMF = Module.findExportByName("gdi32.dll", "GdiPlayEMF")
Interceptor.attach(GdiPlayEMF, {onLeave: function (args) {send("GdiPlayEMF");}});

var GdiPlayJournal = Module.findExportByName("gdi32.dll", "GdiPlayJournal")
Interceptor.attach(GdiPlayJournal, {onLeave: function (args) {send("GdiPlayJournal");}});

var GdiPlayPageEMF = Module.findExportByName("gdi32.dll", "GdiPlayPageEMF")
Interceptor.attach(GdiPlayPageEMF, {onLeave: function (args) {send("GdiPlayPageEMF");}});

var GdiPlayPrivatePageEMF = Module.findExportByName("gdi32.dll", "GdiPlayPrivatePageEMF")
Interceptor.attach(GdiPlayPrivatePageEMF, {onLeave: function (args) {send("GdiPlayPrivatePageEMF");}});

var GdiPlayScript = Module.findExportByName("gdi32.dll", "GdiPlayScript")
Interceptor.attach(GdiPlayScript, {onLeave: function (args) {send("GdiPlayScript");}});

var GdiPrinterThunk = Module.findExportByName("gdi32.dll", "GdiPrinterThunk")
Interceptor.attach(GdiPrinterThunk, {onLeave: function (args) {send("GdiPrinterThunk");}});

var GdiProcessSetup = Module.findExportByName("gdi32.dll", "GdiProcessSetup")
Interceptor.attach(GdiProcessSetup, {onLeave: function (args) {send("GdiProcessSetup");}});

var GdiQueryFonts = Module.findExportByName("gdi32.dll", "GdiQueryFonts")
Interceptor.attach(GdiQueryFonts, {onLeave: function (args) {send("GdiQueryFonts");}});

var GdiQueryTable = Module.findExportByName("gdi32.dll", "GdiQueryTable")
Interceptor.attach(GdiQueryTable, {onLeave: function (args) {send("GdiQueryTable");}});

var GdiRealizationInfo = Module.findExportByName("gdi32.dll", "GdiRealizationInfo")
Interceptor.attach(GdiRealizationInfo, {onLeave: function (args) {send("GdiRealizationInfo");}});

var GdiReleaseDC = Module.findExportByName("gdi32.dll", "GdiReleaseDC")
Interceptor.attach(GdiReleaseDC, {onLeave: function (args) {send("GdiReleaseDC");}});

var GdiReleaseLocalDC = Module.findExportByName("gdi32.dll", "GdiReleaseLocalDC")
Interceptor.attach(GdiReleaseLocalDC, {onLeave: function (args) {send("GdiReleaseLocalDC");}});

var GdiResetDCEMF = Module.findExportByName("gdi32.dll", "GdiResetDCEMF")
Interceptor.attach(GdiResetDCEMF, {onLeave: function (args) {send("GdiResetDCEMF");}});

var GdiSetAttrs = Module.findExportByName("gdi32.dll", "GdiSetAttrs")
Interceptor.attach(GdiSetAttrs, {onLeave: function (args) {send("GdiSetAttrs");}});

var GdiSetBatchLimit = Module.findExportByName("gdi32.dll", "GdiSetBatchLimit")
Interceptor.attach(GdiSetBatchLimit, {onLeave: function (args) {send("GdiSetBatchLimit");}});

var GdiSetLastError = Module.findExportByName("gdi32.dll", "GdiSetLastError")
Interceptor.attach(GdiSetLastError, {onLeave: function (args) {send("GdiSetLastError");}});

var GdiSetPixelFormat = Module.findExportByName("gdi32.dll", "GdiSetPixelFormat")
Interceptor.attach(GdiSetPixelFormat, {onLeave: function (args) {send("GdiSetPixelFormat");}});

var GdiSetServerAttr = Module.findExportByName("gdi32.dll", "GdiSetServerAttr")
Interceptor.attach(GdiSetServerAttr, {onLeave: function (args) {send("GdiSetServerAttr");}});

var GdiStartDocEMF = Module.findExportByName("gdi32.dll", "GdiStartDocEMF")
Interceptor.attach(GdiStartDocEMF, {onLeave: function (args) {send("GdiStartDocEMF");}});

var GdiStartPageEMF = Module.findExportByName("gdi32.dll", "GdiStartPageEMF")
Interceptor.attach(GdiStartPageEMF, {onLeave: function (args) {send("GdiStartPageEMF");}});

var GdiSupportsFontChangeEvent = Module.findExportByName("gdi32.dll", "GdiSupportsFontChangeEvent")
Interceptor.attach(GdiSupportsFontChangeEvent, {onLeave: function (args) {send("GdiSupportsFontChangeEvent");}});

var GdiSwapBuffers = Module.findExportByName("gdi32.dll", "GdiSwapBuffers")
Interceptor.attach(GdiSwapBuffers, {onLeave: function (args) {send("GdiSwapBuffers");}});

var GdiTrackHCreate = Module.findExportByName("gdi32.dll", "GdiTrackHCreate")
Interceptor.attach(GdiTrackHCreate, {onLeave: function (args) {send("GdiTrackHCreate");}});

var GdiTrackHDelete = Module.findExportByName("gdi32.dll", "GdiTrackHDelete")
Interceptor.attach(GdiTrackHDelete, {onLeave: function (args) {send("GdiTrackHDelete");}});

var GdiTransparentBlt = Module.findExportByName("gdi32.dll", "GdiTransparentBlt")
Interceptor.attach(GdiTransparentBlt, {onLeave: function (args) {send("GdiTransparentBlt");}});

var GdiValidateHandle = Module.findExportByName("gdi32.dll", "GdiValidateHandle")
Interceptor.attach(GdiValidateHandle, {onLeave: function (args) {send("GdiValidateHandle");}});

var GdiWaitForTextReady = Module.findExportByName("gdi32.dll", "GdiWaitForTextReady")
Interceptor.attach(GdiWaitForTextReady, {onLeave: function (args) {send("GdiWaitForTextReady");}});

var GditGetCallerTLStorage = Module.findExportByName("gdi32.dll", "GditGetCallerTLStorage")
Interceptor.attach(GditGetCallerTLStorage, {onLeave: function (args) {send("GditGetCallerTLStorage");}});

var GditPopCallerInfo = Module.findExportByName("gdi32.dll", "GditPopCallerInfo")
Interceptor.attach(GditPopCallerInfo, {onLeave: function (args) {send("GditPopCallerInfo");}});

var GditPushCallerInfo = Module.findExportByName("gdi32.dll", "GditPushCallerInfo")
Interceptor.attach(GditPushCallerInfo, {onLeave: function (args) {send("GditPushCallerInfo");}});

var GetArcDirection = Module.findExportByName("gdi32.dll", "GetArcDirection")
Interceptor.attach(GetArcDirection, {onLeave: function (args) {send("GetArcDirection");}});

var GetAspectRatioFilterEx = Module.findExportByName("gdi32.dll", "GetAspectRatioFilterEx")
Interceptor.attach(GetAspectRatioFilterEx, {onLeave: function (args) {send("GetAspectRatioFilterEx");}});

var GetBitmapAttributes = Module.findExportByName("gdi32.dll", "GetBitmapAttributes")
Interceptor.attach(GetBitmapAttributes, {onLeave: function (args) {send("GetBitmapAttributes");}});

var GetBitmapBits = Module.findExportByName("gdi32.dll", "GetBitmapBits")
Interceptor.attach(GetBitmapBits, {onLeave: function (args) {send("GetBitmapBits");}});

var GetBitmapDimensionEx = Module.findExportByName("gdi32.dll", "GetBitmapDimensionEx")
Interceptor.attach(GetBitmapDimensionEx, {onLeave: function (args) {send("GetBitmapDimensionEx");}});

var GetBitmapDpiScaleValue = Module.findExportByName("gdi32.dll", "GetBitmapDpiScaleValue")
Interceptor.attach(GetBitmapDpiScaleValue, {onLeave: function (args) {send("GetBitmapDpiScaleValue");}});

var GetBkColor = Module.findExportByName("gdi32.dll", "GetBkColor")
Interceptor.attach(GetBkColor, {onLeave: function (args) {send("GetBkColor");}});

var GetBkMode = Module.findExportByName("gdi32.dll", "GetBkMode")
Interceptor.attach(GetBkMode, {onLeave: function (args) {send("GetBkMode");}});

var GetBoundsRect = Module.findExportByName("gdi32.dll", "GetBoundsRect")
Interceptor.attach(GetBoundsRect, {onLeave: function (args) {send("GetBoundsRect");}});

var GetBrushAttributes = Module.findExportByName("gdi32.dll", "GetBrushAttributes")
Interceptor.attach(GetBrushAttributes, {onLeave: function (args) {send("GetBrushAttributes");}});

var GetBrushOrgEx = Module.findExportByName("gdi32.dll", "GetBrushOrgEx")
Interceptor.attach(GetBrushOrgEx, {onLeave: function (args) {send("GetBrushOrgEx");}});

var GetCOPPCompatibleOPMInformation = Module.findExportByName("gdi32.dll", "GetCOPPCompatibleOPMInformation")
Interceptor.attach(GetCOPPCompatibleOPMInformation, {onLeave: function (args) {send("GetCOPPCompatibleOPMInformation");}});

var GetCertificate = Module.findExportByName("gdi32.dll", "GetCertificate")
Interceptor.attach(GetCertificate, {onLeave: function (args) {send("GetCertificate");}});

var GetCertificateByHandle = Module.findExportByName("gdi32.dll", "GetCertificateByHandle")
Interceptor.attach(GetCertificateByHandle, {onLeave: function (args) {send("GetCertificateByHandle");}});

var GetCertificateSize = Module.findExportByName("gdi32.dll", "GetCertificateSize")
Interceptor.attach(GetCertificateSize, {onLeave: function (args) {send("GetCertificateSize");}});

var GetCertificateSizeByHandle = Module.findExportByName("gdi32.dll", "GetCertificateSizeByHandle")
Interceptor.attach(GetCertificateSizeByHandle, {onLeave: function (args) {send("GetCertificateSizeByHandle");}});

var GetCharABCWidthsA = Module.findExportByName("gdi32.dll", "GetCharABCWidthsA")
Interceptor.attach(GetCharABCWidthsA, {onLeave: function (args) {send("GetCharABCWidthsA");}});

var GetCharABCWidthsFloatA = Module.findExportByName("gdi32.dll", "GetCharABCWidthsFloatA")
Interceptor.attach(GetCharABCWidthsFloatA, {onLeave: function (args) {send("GetCharABCWidthsFloatA");}});

var GetCharABCWidthsFloatI = Module.findExportByName("gdi32.dll", "GetCharABCWidthsFloatI")
Interceptor.attach(GetCharABCWidthsFloatI, {onLeave: function (args) {send("GetCharABCWidthsFloatI");}});

var GetCharABCWidthsFloatW = Module.findExportByName("gdi32.dll", "GetCharABCWidthsFloatW")
Interceptor.attach(GetCharABCWidthsFloatW, {onLeave: function (args) {send("GetCharABCWidthsFloatW");}});

var GetCharABCWidthsI = Module.findExportByName("gdi32.dll", "GetCharABCWidthsI")
Interceptor.attach(GetCharABCWidthsI, {onLeave: function (args) {send("GetCharABCWidthsI");}});

var GetCharABCWidthsW = Module.findExportByName("gdi32.dll", "GetCharABCWidthsW")
Interceptor.attach(GetCharABCWidthsW, {onLeave: function (args) {send("GetCharABCWidthsW");}});

var GetCharWidth32A = Module.findExportByName("gdi32.dll", "GetCharWidth32A")
Interceptor.attach(GetCharWidth32A, {onLeave: function (args) {send("GetCharWidth32A");}});

var GetCharWidth32W = Module.findExportByName("gdi32.dll", "GetCharWidth32W")
Interceptor.attach(GetCharWidth32W, {onLeave: function (args) {send("GetCharWidth32W");}});

var GetCharWidthA = Module.findExportByName("gdi32.dll", "GetCharWidthA")
Interceptor.attach(GetCharWidthA, {onLeave: function (args) {send("GetCharWidthA");}});

var GetCharWidthFloatA = Module.findExportByName("gdi32.dll", "GetCharWidthFloatA")
Interceptor.attach(GetCharWidthFloatA, {onLeave: function (args) {send("GetCharWidthFloatA");}});

var GetCharWidthFloatW = Module.findExportByName("gdi32.dll", "GetCharWidthFloatW")
Interceptor.attach(GetCharWidthFloatW, {onLeave: function (args) {send("GetCharWidthFloatW");}});

var GetCharWidthI = Module.findExportByName("gdi32.dll", "GetCharWidthI")
Interceptor.attach(GetCharWidthI, {onLeave: function (args) {send("GetCharWidthI");}});

var GetCharWidthInfo = Module.findExportByName("gdi32.dll", "GetCharWidthInfo")
Interceptor.attach(GetCharWidthInfo, {onLeave: function (args) {send("GetCharWidthInfo");}});

var GetCharWidthW = Module.findExportByName("gdi32.dll", "GetCharWidthW")
Interceptor.attach(GetCharWidthW, {onLeave: function (args) {send("GetCharWidthW");}});

var GetCharacterPlacementA = Module.findExportByName("gdi32.dll", "GetCharacterPlacementA")
Interceptor.attach(GetCharacterPlacementA, {onLeave: function (args) {send("GetCharacterPlacementA");}});

var GetCharacterPlacementW = Module.findExportByName("gdi32.dll", "GetCharacterPlacementW")
Interceptor.attach(GetCharacterPlacementW, {onLeave: function (args) {send("GetCharacterPlacementW");}});

var GetClipBox = Module.findExportByName("gdi32.dll", "GetClipBox")
Interceptor.attach(GetClipBox, {onLeave: function (args) {send("GetClipBox");}});

var GetClipRgn = Module.findExportByName("gdi32.dll", "GetClipRgn")
Interceptor.attach(GetClipRgn, {onLeave: function (args) {send("GetClipRgn");}});

var GetColorAdjustment = Module.findExportByName("gdi32.dll", "GetColorAdjustment")
Interceptor.attach(GetColorAdjustment, {onLeave: function (args) {send("GetColorAdjustment");}});

var GetColorSpace = Module.findExportByName("gdi32.dll", "GetColorSpace")
Interceptor.attach(GetColorSpace, {onLeave: function (args) {send("GetColorSpace");}});

var GetCurrentDpiInfo = Module.findExportByName("gdi32.dll", "GetCurrentDpiInfo")
Interceptor.attach(GetCurrentDpiInfo, {onLeave: function (args) {send("GetCurrentDpiInfo");}});

var GetCurrentObject = Module.findExportByName("gdi32.dll", "GetCurrentObject")
Interceptor.attach(GetCurrentObject, {onLeave: function (args) {send("GetCurrentObject");}});

var GetCurrentPositionEx = Module.findExportByName("gdi32.dll", "GetCurrentPositionEx")
Interceptor.attach(GetCurrentPositionEx, {onLeave: function (args) {send("GetCurrentPositionEx");}});

var GetDCBrushColor = Module.findExportByName("gdi32.dll", "GetDCBrushColor")
Interceptor.attach(GetDCBrushColor, {onLeave: function (args) {send("GetDCBrushColor");}});

var GetDCDpiScaleValue = Module.findExportByName("gdi32.dll", "GetDCDpiScaleValue")
Interceptor.attach(GetDCDpiScaleValue, {onLeave: function (args) {send("GetDCDpiScaleValue");}});

var GetDCOrgEx = Module.findExportByName("gdi32.dll", "GetDCOrgEx")
Interceptor.attach(GetDCOrgEx, {onLeave: function (args) {send("GetDCOrgEx");}});

var GetDCPenColor = Module.findExportByName("gdi32.dll", "GetDCPenColor")
Interceptor.attach(GetDCPenColor, {onLeave: function (args) {send("GetDCPenColor");}});

var GetDIBColorTable = Module.findExportByName("gdi32.dll", "GetDIBColorTable")
Interceptor.attach(GetDIBColorTable, {onLeave: function (args) {send("GetDIBColorTable");}});

var GetDIBits = Module.findExportByName("gdi32.dll", "GetDIBits")
Interceptor.attach(GetDIBits, {onLeave: function (args) {send("GetDIBits");}});

var GetDeviceCaps = Module.findExportByName("gdi32.dll", "GetDeviceCaps")
Interceptor.attach(GetDeviceCaps, {onLeave: function (args) {send("GetDeviceCaps");}});

var GetDeviceGammaRamp = Module.findExportByName("gdi32.dll", "GetDeviceGammaRamp")
Interceptor.attach(GetDeviceGammaRamp, {onLeave: function (args) {send("GetDeviceGammaRamp");}});

var GetETM = Module.findExportByName("gdi32.dll", "GetETM")
Interceptor.attach(GetETM, {onLeave: function (args) {send("GetETM");}});

var GetEUDCTimeStamp = Module.findExportByName("gdi32.dll", "GetEUDCTimeStamp")
Interceptor.attach(GetEUDCTimeStamp, {onLeave: function (args) {send("GetEUDCTimeStamp");}});

var GetEUDCTimeStampExW = Module.findExportByName("gdi32.dll", "GetEUDCTimeStampExW")
Interceptor.attach(GetEUDCTimeStampExW, {onLeave: function (args) {send("GetEUDCTimeStampExW");}});

var GetEnhMetaFileA = Module.findExportByName("gdi32.dll", "GetEnhMetaFileA")
Interceptor.attach(GetEnhMetaFileA, {onLeave: function (args) {send("GetEnhMetaFileA");}});

var GetEnhMetaFileBits = Module.findExportByName("gdi32.dll", "GetEnhMetaFileBits")
Interceptor.attach(GetEnhMetaFileBits, {onLeave: function (args) {send("GetEnhMetaFileBits");}});

var GetEnhMetaFileDescriptionA = Module.findExportByName("gdi32.dll", "GetEnhMetaFileDescriptionA")
Interceptor.attach(GetEnhMetaFileDescriptionA, {onLeave: function (args) {send("GetEnhMetaFileDescriptionA");}});

var GetEnhMetaFileDescriptionW = Module.findExportByName("gdi32.dll", "GetEnhMetaFileDescriptionW")
Interceptor.attach(GetEnhMetaFileDescriptionW, {onLeave: function (args) {send("GetEnhMetaFileDescriptionW");}});

var GetEnhMetaFileHeader = Module.findExportByName("gdi32.dll", "GetEnhMetaFileHeader")
Interceptor.attach(GetEnhMetaFileHeader, {onLeave: function (args) {send("GetEnhMetaFileHeader");}});

var GetEnhMetaFilePaletteEntries = Module.findExportByName("gdi32.dll", "GetEnhMetaFilePaletteEntries")
Interceptor.attach(GetEnhMetaFilePaletteEntries, {onLeave: function (args) {send("GetEnhMetaFilePaletteEntries");}});

var GetEnhMetaFilePixelFormat = Module.findExportByName("gdi32.dll", "GetEnhMetaFilePixelFormat")
Interceptor.attach(GetEnhMetaFilePixelFormat, {onLeave: function (args) {send("GetEnhMetaFilePixelFormat");}});

var GetEnhMetaFileW = Module.findExportByName("gdi32.dll", "GetEnhMetaFileW")
Interceptor.attach(GetEnhMetaFileW, {onLeave: function (args) {send("GetEnhMetaFileW");}});

var GetFontAssocStatus = Module.findExportByName("gdi32.dll", "GetFontAssocStatus")
Interceptor.attach(GetFontAssocStatus, {onLeave: function (args) {send("GetFontAssocStatus");}});

var GetFontData = Module.findExportByName("gdi32.dll", "GetFontData")
Interceptor.attach(GetFontData, {onLeave: function (args) {send("GetFontData");}});

var GetFontFileData = Module.findExportByName("gdi32.dll", "GetFontFileData")
Interceptor.attach(GetFontFileData, {onLeave: function (args) {send("GetFontFileData");}});

var GetFontFileInfo = Module.findExportByName("gdi32.dll", "GetFontFileInfo")
Interceptor.attach(GetFontFileInfo, {onLeave: function (args) {send("GetFontFileInfo");}});

var GetFontLanguageInfo = Module.findExportByName("gdi32.dll", "GetFontLanguageInfo")
Interceptor.attach(GetFontLanguageInfo, {onLeave: function (args) {send("GetFontLanguageInfo");}});

var GetFontRealizationInfo = Module.findExportByName("gdi32.dll", "GetFontRealizationInfo")
Interceptor.attach(GetFontRealizationInfo, {onLeave: function (args) {send("GetFontRealizationInfo");}});

var GetFontResourceInfoW = Module.findExportByName("gdi32.dll", "GetFontResourceInfoW")
Interceptor.attach(GetFontResourceInfoW, {onLeave: function (args) {send("GetFontResourceInfoW");}});

var GetFontUnicodeRanges = Module.findExportByName("gdi32.dll", "GetFontUnicodeRanges")
Interceptor.attach(GetFontUnicodeRanges, {onLeave: function (args) {send("GetFontUnicodeRanges");}});

var GetGlyphIndicesA = Module.findExportByName("gdi32.dll", "GetGlyphIndicesA")
Interceptor.attach(GetGlyphIndicesA, {onLeave: function (args) {send("GetGlyphIndicesA");}});

var GetGlyphIndicesW = Module.findExportByName("gdi32.dll", "GetGlyphIndicesW")
Interceptor.attach(GetGlyphIndicesW, {onLeave: function (args) {send("GetGlyphIndicesW");}});

var GetGlyphOutline = Module.findExportByName("gdi32.dll", "GetGlyphOutline")
Interceptor.attach(GetGlyphOutline, {onLeave: function (args) {send("GetGlyphOutline");}});

var GetGlyphOutlineA = Module.findExportByName("gdi32.dll", "GetGlyphOutlineA")
Interceptor.attach(GetGlyphOutlineA, {onLeave: function (args) {send("GetGlyphOutlineA");}});

var GetGlyphOutlineW = Module.findExportByName("gdi32.dll", "GetGlyphOutlineW")
Interceptor.attach(GetGlyphOutlineW, {onLeave: function (args) {send("GetGlyphOutlineW");}});

var GetGlyphOutlineWow = Module.findExportByName("gdi32.dll", "GetGlyphOutlineWow")
Interceptor.attach(GetGlyphOutlineWow, {onLeave: function (args) {send("GetGlyphOutlineWow");}});

var GetGraphicsMode = Module.findExportByName("gdi32.dll", "GetGraphicsMode")
Interceptor.attach(GetGraphicsMode, {onLeave: function (args) {send("GetGraphicsMode");}});

var GetHFONT = Module.findExportByName("gdi32.dll", "GetHFONT")
Interceptor.attach(GetHFONT, {onLeave: function (args) {send("GetHFONT");}});

var GetICMProfileA = Module.findExportByName("gdi32.dll", "GetICMProfileA")
Interceptor.attach(GetICMProfileA, {onLeave: function (args) {send("GetICMProfileA");}});

var GetICMProfileW = Module.findExportByName("gdi32.dll", "GetICMProfileW")
Interceptor.attach(GetICMProfileW, {onLeave: function (args) {send("GetICMProfileW");}});

var GetKerningPairs = Module.findExportByName("gdi32.dll", "GetKerningPairs")
Interceptor.attach(GetKerningPairs, {onLeave: function (args) {send("GetKerningPairs");}});

var GetKerningPairsA = Module.findExportByName("gdi32.dll", "GetKerningPairsA")
Interceptor.attach(GetKerningPairsA, {onLeave: function (args) {send("GetKerningPairsA");}});

var GetKerningPairsW = Module.findExportByName("gdi32.dll", "GetKerningPairsW")
Interceptor.attach(GetKerningPairsW, {onLeave: function (args) {send("GetKerningPairsW");}});

var GetLayout = Module.findExportByName("gdi32.dll", "GetLayout")
Interceptor.attach(GetLayout, {onLeave: function (args) {send("GetLayout");}});

var GetLogColorSpaceA = Module.findExportByName("gdi32.dll", "GetLogColorSpaceA")
Interceptor.attach(GetLogColorSpaceA, {onLeave: function (args) {send("GetLogColorSpaceA");}});

var GetLogColorSpaceW = Module.findExportByName("gdi32.dll", "GetLogColorSpaceW")
Interceptor.attach(GetLogColorSpaceW, {onLeave: function (args) {send("GetLogColorSpaceW");}});

var GetMapMode = Module.findExportByName("gdi32.dll", "GetMapMode")
Interceptor.attach(GetMapMode, {onLeave: function (args) {send("GetMapMode");}});

var GetMetaFileA = Module.findExportByName("gdi32.dll", "GetMetaFileA")
Interceptor.attach(GetMetaFileA, {onLeave: function (args) {send("GetMetaFileA");}});

var GetMetaFileBitsEx = Module.findExportByName("gdi32.dll", "GetMetaFileBitsEx")
Interceptor.attach(GetMetaFileBitsEx, {onLeave: function (args) {send("GetMetaFileBitsEx");}});

var GetMetaFileW = Module.findExportByName("gdi32.dll", "GetMetaFileW")
Interceptor.attach(GetMetaFileW, {onLeave: function (args) {send("GetMetaFileW");}});

var GetMetaRgn = Module.findExportByName("gdi32.dll", "GetMetaRgn")
Interceptor.attach(GetMetaRgn, {onLeave: function (args) {send("GetMetaRgn");}});

var GetMiterLimit = Module.findExportByName("gdi32.dll", "GetMiterLimit")
Interceptor.attach(GetMiterLimit, {onLeave: function (args) {send("GetMiterLimit");}});

var GetNearestColor = Module.findExportByName("gdi32.dll", "GetNearestColor")
Interceptor.attach(GetNearestColor, {onLeave: function (args) {send("GetNearestColor");}});

var GetNearestPaletteIndex = Module.findExportByName("gdi32.dll", "GetNearestPaletteIndex")
Interceptor.attach(GetNearestPaletteIndex, {onLeave: function (args) {send("GetNearestPaletteIndex");}});

var GetNumberOfPhysicalMonitors = Module.findExportByName("gdi32.dll", "GetNumberOfPhysicalMonitors")
Interceptor.attach(GetNumberOfPhysicalMonitors, {onLeave: function (args) {send("GetNumberOfPhysicalMonitors");}});

var GetOPMInformation = Module.findExportByName("gdi32.dll", "GetOPMInformation")
Interceptor.attach(GetOPMInformation, {onLeave: function (args) {send("GetOPMInformation");}});

var GetOPMRandomNumber = Module.findExportByName("gdi32.dll", "GetOPMRandomNumber")
Interceptor.attach(GetOPMRandomNumber, {onLeave: function (args) {send("GetOPMRandomNumber");}});

var GetObjectA = Module.findExportByName("gdi32.dll", "GetObjectA")
Interceptor.attach(GetObjectA, {onLeave: function (args) {send("GetObjectA");}});

var GetObjectType = Module.findExportByName("gdi32.dll", "GetObjectType")
Interceptor.attach(GetObjectType, {onLeave: function (args) {send("GetObjectType");}});

var GetObjectW = Module.findExportByName("gdi32.dll", "GetObjectW")
Interceptor.attach(GetObjectW, {onLeave: function (args) {send("GetObjectW");}});

var GetOutlineTextMetricsA = Module.findExportByName("gdi32.dll", "GetOutlineTextMetricsA")
Interceptor.attach(GetOutlineTextMetricsA, {onLeave: function (args) {send("GetOutlineTextMetricsA");}});

var GetOutlineTextMetricsW = Module.findExportByName("gdi32.dll", "GetOutlineTextMetricsW")
Interceptor.attach(GetOutlineTextMetricsW, {onLeave: function (args) {send("GetOutlineTextMetricsW");}});

var GetPaletteEntries = Module.findExportByName("gdi32.dll", "GetPaletteEntries")
Interceptor.attach(GetPaletteEntries, {onLeave: function (args) {send("GetPaletteEntries");}});

var GetPath = Module.findExportByName("gdi32.dll", "GetPath")
Interceptor.attach(GetPath, {onLeave: function (args) {send("GetPath");}});

var GetPhysicalMonitorDescription = Module.findExportByName("gdi32.dll", "GetPhysicalMonitorDescription")
Interceptor.attach(GetPhysicalMonitorDescription, {onLeave: function (args) {send("GetPhysicalMonitorDescription");}});

var GetPhysicalMonitors = Module.findExportByName("gdi32.dll", "GetPhysicalMonitors")
Interceptor.attach(GetPhysicalMonitors, {onLeave: function (args) {send("GetPhysicalMonitors");}});

var GetPixel = Module.findExportByName("gdi32.dll", "GetPixel")
Interceptor.attach(GetPixel, {onLeave: function (args) {send("GetPixel");}});

var GetPixelFormat = Module.findExportByName("gdi32.dll", "GetPixelFormat")
Interceptor.attach(GetPixelFormat, {onLeave: function (args) {send("GetPixelFormat");}});

var GetPolyFillMode = Module.findExportByName("gdi32.dll", "GetPolyFillMode")
Interceptor.attach(GetPolyFillMode, {onLeave: function (args) {send("GetPolyFillMode");}});

var GetProcessSessionFonts = Module.findExportByName("gdi32.dll", "GetProcessSessionFonts")
Interceptor.attach(GetProcessSessionFonts, {onLeave: function (args) {send("GetProcessSessionFonts");}});

var GetROP2 = Module.findExportByName("gdi32.dll", "GetROP2")
Interceptor.attach(GetROP2, {onLeave: function (args) {send("GetROP2");}});

var GetRandomRgn = Module.findExportByName("gdi32.dll", "GetRandomRgn")
Interceptor.attach(GetRandomRgn, {onLeave: function (args) {send("GetRandomRgn");}});

var GetRasterizerCaps = Module.findExportByName("gdi32.dll", "GetRasterizerCaps")
Interceptor.attach(GetRasterizerCaps, {onLeave: function (args) {send("GetRasterizerCaps");}});

var GetRegionData = Module.findExportByName("gdi32.dll", "GetRegionData")
Interceptor.attach(GetRegionData, {onLeave: function (args) {send("GetRegionData");}});

var GetRelAbs = Module.findExportByName("gdi32.dll", "GetRelAbs")
Interceptor.attach(GetRelAbs, {onLeave: function (args) {send("GetRelAbs");}});

var GetRgnBox = Module.findExportByName("gdi32.dll", "GetRgnBox")
Interceptor.attach(GetRgnBox, {onLeave: function (args) {send("GetRgnBox");}});

var GetStockObject = Module.findExportByName("gdi32.dll", "GetStockObject")
Interceptor.attach(GetStockObject, {onLeave: function (args) {send("GetStockObject");}});

var GetStretchBltMode = Module.findExportByName("gdi32.dll", "GetStretchBltMode")
Interceptor.attach(GetStretchBltMode, {onLeave: function (args) {send("GetStretchBltMode");}});

var GetStringBitmapA = Module.findExportByName("gdi32.dll", "GetStringBitmapA")
Interceptor.attach(GetStringBitmapA, {onLeave: function (args) {send("GetStringBitmapA");}});

var GetStringBitmapW = Module.findExportByName("gdi32.dll", "GetStringBitmapW")
Interceptor.attach(GetStringBitmapW, {onLeave: function (args) {send("GetStringBitmapW");}});

var GetSuggestedOPMProtectedOutputArraySize = Module.findExportByName("gdi32.dll", "GetSuggestedOPMProtectedOutputArraySize")
Interceptor.attach(GetSuggestedOPMProtectedOutputArraySize, {onLeave: function (args) {send("GetSuggestedOPMProtectedOutputArraySize");}});

var GetSystemPaletteEntries = Module.findExportByName("gdi32.dll", "GetSystemPaletteEntries")
Interceptor.attach(GetSystemPaletteEntries, {onLeave: function (args) {send("GetSystemPaletteEntries");}});

var GetSystemPaletteUse = Module.findExportByName("gdi32.dll", "GetSystemPaletteUse")
Interceptor.attach(GetSystemPaletteUse, {onLeave: function (args) {send("GetSystemPaletteUse");}});

var GetTextAlign = Module.findExportByName("gdi32.dll", "GetTextAlign")
Interceptor.attach(GetTextAlign, {onLeave: function (args) {send("GetTextAlign");}});

var GetTextCharacterExtra = Module.findExportByName("gdi32.dll", "GetTextCharacterExtra")
Interceptor.attach(GetTextCharacterExtra, {onLeave: function (args) {send("GetTextCharacterExtra");}});

var GetTextCharset = Module.findExportByName("gdi32.dll", "GetTextCharset")
Interceptor.attach(GetTextCharset, {onLeave: function (args) {send("GetTextCharset");}});

var GetTextCharsetInfo = Module.findExportByName("gdi32.dll", "GetTextCharsetInfo")
Interceptor.attach(GetTextCharsetInfo, {onLeave: function (args) {send("GetTextCharsetInfo");}});

var GetTextColor = Module.findExportByName("gdi32.dll", "GetTextColor")
Interceptor.attach(GetTextColor, {onLeave: function (args) {send("GetTextColor");}});

var GetTextExtentExPointA = Module.findExportByName("gdi32.dll", "GetTextExtentExPointA")
Interceptor.attach(GetTextExtentExPointA, {onLeave: function (args) {send("GetTextExtentExPointA");}});

var GetTextExtentExPointI = Module.findExportByName("gdi32.dll", "GetTextExtentExPointI")
Interceptor.attach(GetTextExtentExPointI, {onLeave: function (args) {send("GetTextExtentExPointI");}});

var GetTextExtentExPointW = Module.findExportByName("gdi32.dll", "GetTextExtentExPointW")
Interceptor.attach(GetTextExtentExPointW, {onLeave: function (args) {send("GetTextExtentExPointW");}});

var GetTextExtentExPointWPri = Module.findExportByName("gdi32.dll", "GetTextExtentExPointWPri")
Interceptor.attach(GetTextExtentExPointWPri, {onLeave: function (args) {send("GetTextExtentExPointWPri");}});

var GetTextExtentPoint32A = Module.findExportByName("gdi32.dll", "GetTextExtentPoint32A")
Interceptor.attach(GetTextExtentPoint32A, {onLeave: function (args) {send("GetTextExtentPoint32A");}});

var GetTextExtentPoint32W = Module.findExportByName("gdi32.dll", "GetTextExtentPoint32W")
Interceptor.attach(GetTextExtentPoint32W, {onLeave: function (args) {send("GetTextExtentPoint32W");}});

var GetTextExtentPointA = Module.findExportByName("gdi32.dll", "GetTextExtentPointA")
Interceptor.attach(GetTextExtentPointA, {onLeave: function (args) {send("GetTextExtentPointA");}});

var GetTextExtentPointI = Module.findExportByName("gdi32.dll", "GetTextExtentPointI")
Interceptor.attach(GetTextExtentPointI, {onLeave: function (args) {send("GetTextExtentPointI");}});

var GetTextExtentPointW = Module.findExportByName("gdi32.dll", "GetTextExtentPointW")
Interceptor.attach(GetTextExtentPointW, {onLeave: function (args) {send("GetTextExtentPointW");}});

var GetTextFaceA = Module.findExportByName("gdi32.dll", "GetTextFaceA")
Interceptor.attach(GetTextFaceA, {onLeave: function (args) {send("GetTextFaceA");}});

var GetTextFaceAliasW = Module.findExportByName("gdi32.dll", "GetTextFaceAliasW")
Interceptor.attach(GetTextFaceAliasW, {onLeave: function (args) {send("GetTextFaceAliasW");}});

var GetTextFaceW = Module.findExportByName("gdi32.dll", "GetTextFaceW")
Interceptor.attach(GetTextFaceW, {onLeave: function (args) {send("GetTextFaceW");}});

var GetTextMetricsA = Module.findExportByName("gdi32.dll", "GetTextMetricsA")
Interceptor.attach(GetTextMetricsA, {onLeave: function (args) {send("GetTextMetricsA");}});

var GetTextMetricsW = Module.findExportByName("gdi32.dll", "GetTextMetricsW")
Interceptor.attach(GetTextMetricsW, {onLeave: function (args) {send("GetTextMetricsW");}});

var GetTransform = Module.findExportByName("gdi32.dll", "GetTransform")
Interceptor.attach(GetTransform, {onLeave: function (args) {send("GetTransform");}});

var GetViewportExtEx = Module.findExportByName("gdi32.dll", "GetViewportExtEx")
Interceptor.attach(GetViewportExtEx, {onLeave: function (args) {send("GetViewportExtEx");}});

var GetViewportOrgEx = Module.findExportByName("gdi32.dll", "GetViewportOrgEx")
Interceptor.attach(GetViewportOrgEx, {onLeave: function (args) {send("GetViewportOrgEx");}});

var GetWinMetaFileBits = Module.findExportByName("gdi32.dll", "GetWinMetaFileBits")
Interceptor.attach(GetWinMetaFileBits, {onLeave: function (args) {send("GetWinMetaFileBits");}});

var GetWindowExtEx = Module.findExportByName("gdi32.dll", "GetWindowExtEx")
Interceptor.attach(GetWindowExtEx, {onLeave: function (args) {send("GetWindowExtEx");}});

var GetWindowOrgEx = Module.findExportByName("gdi32.dll", "GetWindowOrgEx")
Interceptor.attach(GetWindowOrgEx, {onLeave: function (args) {send("GetWindowOrgEx");}});

var GetWorldTransform = Module.findExportByName("gdi32.dll", "GetWorldTransform")
Interceptor.attach(GetWorldTransform, {onLeave: function (args) {send("GetWorldTransform");}});

var HT_Get8BPPFormatPalette = Module.findExportByName("gdi32.dll", "HT_Get8BPPFormatPalette")
Interceptor.attach(HT_Get8BPPFormatPalette, {onLeave: function (args) {send("HT_Get8BPPFormatPalette");}});

var HT_Get8BPPMaskPalette = Module.findExportByName("gdi32.dll", "HT_Get8BPPMaskPalette")
Interceptor.attach(HT_Get8BPPMaskPalette, {onLeave: function (args) {send("HT_Get8BPPMaskPalette");}});

var InternalDeleteDC = Module.findExportByName("gdi32.dll", "InternalDeleteDC")
Interceptor.attach(InternalDeleteDC, {onLeave: function (args) {send("InternalDeleteDC");}});

var InternalDeleteObject = Module.findExportByName("gdi32.dll", "InternalDeleteObject")
Interceptor.attach(InternalDeleteObject, {onLeave: function (args) {send("InternalDeleteObject");}});

var IntersectClipRect = Module.findExportByName("gdi32.dll", "IntersectClipRect")
Interceptor.attach(IntersectClipRect, {onLeave: function (args) {send("IntersectClipRect");}});

var InvertRgn = Module.findExportByName("gdi32.dll", "InvertRgn")
Interceptor.attach(InvertRgn, {onLeave: function (args) {send("InvertRgn");}});

var IsValidEnhMetaRecord = Module.findExportByName("gdi32.dll", "IsValidEnhMetaRecord")
Interceptor.attach(IsValidEnhMetaRecord, {onLeave: function (args) {send("IsValidEnhMetaRecord");}});

var IsValidEnhMetaRecordOffExt = Module.findExportByName("gdi32.dll", "IsValidEnhMetaRecordOffExt")
Interceptor.attach(IsValidEnhMetaRecordOffExt, {onLeave: function (args) {send("IsValidEnhMetaRecordOffExt");}});

var LPtoDP = Module.findExportByName("gdi32.dll", "LPtoDP")
Interceptor.attach(LPtoDP, {onLeave: function (args) {send("LPtoDP");}});

var LineDDA = Module.findExportByName("gdi32.dll", "LineDDA")
Interceptor.attach(LineDDA, {onLeave: function (args) {send("LineDDA");}});

var LineTo = Module.findExportByName("gdi32.dll", "LineTo")
Interceptor.attach(LineTo, {onLeave: function (args) {send("LineTo");}});

var LpkDrawTextEx = Module.findExportByName("gdi32.dll", "LpkDrawTextEx")
Interceptor.attach(LpkDrawTextEx, {onLeave: function (args) {send("LpkDrawTextEx");}});

var LpkEditControl = Module.findExportByName("gdi32.dll", "LpkEditControl")
Interceptor.attach(LpkEditControl, {onLeave: function (args) {send("LpkEditControl");}});

var LpkExtTextOut = Module.findExportByName("gdi32.dll", "LpkExtTextOut")
Interceptor.attach(LpkExtTextOut, {onLeave: function (args) {send("LpkExtTextOut");}});

var LpkGetCharacterPlacement = Module.findExportByName("gdi32.dll", "LpkGetCharacterPlacement")
Interceptor.attach(LpkGetCharacterPlacement, {onLeave: function (args) {send("LpkGetCharacterPlacement");}});

var LpkGetEditControl = Module.findExportByName("gdi32.dll", "LpkGetEditControl")
Interceptor.attach(LpkGetEditControl, {onLeave: function (args) {send("LpkGetEditControl");}});

var LpkGetTextExtentExPoint = Module.findExportByName("gdi32.dll", "LpkGetTextExtentExPoint")
Interceptor.attach(LpkGetTextExtentExPoint, {onLeave: function (args) {send("LpkGetTextExtentExPoint");}});

var LpkInitialize = Module.findExportByName("gdi32.dll", "LpkInitialize")
Interceptor.attach(LpkInitialize, {onLeave: function (args) {send("LpkInitialize");}});

var LpkPSMTextOut = Module.findExportByName("gdi32.dll", "LpkPSMTextOut")
Interceptor.attach(LpkPSMTextOut, {onLeave: function (args) {send("LpkPSMTextOut");}});

var LpkPresent = Module.findExportByName("gdi32.dll", "LpkPresent")
Interceptor.attach(LpkPresent, {onLeave: function (args) {send("LpkPresent");}});

var LpkTabbedTextOut = Module.findExportByName("gdi32.dll", "LpkTabbedTextOut")
Interceptor.attach(LpkTabbedTextOut, {onLeave: function (args) {send("LpkTabbedTextOut");}});

var LpkUseGDIWidthCache = Module.findExportByName("gdi32.dll", "LpkUseGDIWidthCache")
Interceptor.attach(LpkUseGDIWidthCache, {onLeave: function (args) {send("LpkUseGDIWidthCache");}});

var LpkpEditControlSize = Module.findExportByName("gdi32.dll", "LpkpEditControlSize")
Interceptor.attach(LpkpEditControlSize, {onLeave: function (args) {send("LpkpEditControlSize");}});

var LpkpInitializeEditControl = Module.findExportByName("gdi32.dll", "LpkpInitializeEditControl")
Interceptor.attach(LpkpInitializeEditControl, {onLeave: function (args) {send("LpkpInitializeEditControl");}});

var MaskBlt = Module.findExportByName("gdi32.dll", "MaskBlt")
Interceptor.attach(MaskBlt, {onLeave: function (args) {send("MaskBlt");}});

var MirrorRgn = Module.findExportByName("gdi32.dll", "MirrorRgn")
Interceptor.attach(MirrorRgn, {onLeave: function (args) {send("MirrorRgn");}});

var ModerncoreCreateICW = Module.findExportByName("gdi32.dll", "ModerncoreCreateICW")
Interceptor.attach(ModerncoreCreateICW, {onLeave: function (args) {send("ModerncoreCreateICW");}});

var ModerncoreDeleteDC = Module.findExportByName("gdi32.dll", "ModerncoreDeleteDC")
Interceptor.attach(ModerncoreDeleteDC, {onLeave: function (args) {send("ModerncoreDeleteDC");}});

var ModerncoreGdiInit = Module.findExportByName("gdi32.dll", "ModerncoreGdiInit")
Interceptor.attach(ModerncoreGdiInit, {onLeave: function (args) {send("ModerncoreGdiInit");}});

var ModifyWorldTransform = Module.findExportByName("gdi32.dll", "ModifyWorldTransform")
Interceptor.attach(ModifyWorldTransform, {onLeave: function (args) {send("ModifyWorldTransform");}});

var MoveToEx = Module.findExportByName("gdi32.dll", "MoveToEx")
Interceptor.attach(MoveToEx, {onLeave: function (args) {send("MoveToEx");}});

var NamedEscape = Module.findExportByName("gdi32.dll", "NamedEscape")
Interceptor.attach(NamedEscape, {onLeave: function (args) {send("NamedEscape");}});

var OffsetClipRgn = Module.findExportByName("gdi32.dll", "OffsetClipRgn")
Interceptor.attach(OffsetClipRgn, {onLeave: function (args) {send("OffsetClipRgn");}});

var OffsetRgn = Module.findExportByName("gdi32.dll", "OffsetRgn")
Interceptor.attach(OffsetRgn, {onLeave: function (args) {send("OffsetRgn");}});

var OffsetViewportOrgEx = Module.findExportByName("gdi32.dll", "OffsetViewportOrgEx")
Interceptor.attach(OffsetViewportOrgEx, {onLeave: function (args) {send("OffsetViewportOrgEx");}});

var OffsetWindowOrgEx = Module.findExportByName("gdi32.dll", "OffsetWindowOrgEx")
Interceptor.attach(OffsetWindowOrgEx, {onLeave: function (args) {send("OffsetWindowOrgEx");}});

var PATHOBJ_bEnum = Module.findExportByName("gdi32.dll", "PATHOBJ_bEnum")
Interceptor.attach(PATHOBJ_bEnum, {onLeave: function (args) {send("PATHOBJ_bEnum");}});

var PATHOBJ_bEnumClipLines = Module.findExportByName("gdi32.dll", "PATHOBJ_bEnumClipLines")
Interceptor.attach(PATHOBJ_bEnumClipLines, {onLeave: function (args) {send("PATHOBJ_bEnumClipLines");}});

var PATHOBJ_vEnumStart = Module.findExportByName("gdi32.dll", "PATHOBJ_vEnumStart")
Interceptor.attach(PATHOBJ_vEnumStart, {onLeave: function (args) {send("PATHOBJ_vEnumStart");}});

var PATHOBJ_vEnumStartClipLines = Module.findExportByName("gdi32.dll", "PATHOBJ_vEnumStartClipLines")
Interceptor.attach(PATHOBJ_vEnumStartClipLines, {onLeave: function (args) {send("PATHOBJ_vEnumStartClipLines");}});

var PATHOBJ_vGetBounds = Module.findExportByName("gdi32.dll", "PATHOBJ_vGetBounds")
Interceptor.attach(PATHOBJ_vGetBounds, {onLeave: function (args) {send("PATHOBJ_vGetBounds");}});

var PaintRgn = Module.findExportByName("gdi32.dll", "PaintRgn")
Interceptor.attach(PaintRgn, {onLeave: function (args) {send("PaintRgn");}});

var PatBlt = Module.findExportByName("gdi32.dll", "PatBlt")
Interceptor.attach(PatBlt, {onLeave: function (args) {send("PatBlt");}});

var PathToRegion = Module.findExportByName("gdi32.dll", "PathToRegion")
Interceptor.attach(PathToRegion, {onLeave: function (args) {send("PathToRegion");}});

var Pie = Module.findExportByName("gdi32.dll", "Pie")
Interceptor.attach(Pie, {onLeave: function (args) {send("Pie");}});

var PlayEnhMetaFile = Module.findExportByName("gdi32.dll", "PlayEnhMetaFile")
Interceptor.attach(PlayEnhMetaFile, {onLeave: function (args) {send("PlayEnhMetaFile");}});

var PlayEnhMetaFileRecord = Module.findExportByName("gdi32.dll", "PlayEnhMetaFileRecord")
Interceptor.attach(PlayEnhMetaFileRecord, {onLeave: function (args) {send("PlayEnhMetaFileRecord");}});

var PlayMetaFile = Module.findExportByName("gdi32.dll", "PlayMetaFile")
Interceptor.attach(PlayMetaFile, {onLeave: function (args) {send("PlayMetaFile");}});

var PlayMetaFileRecord = Module.findExportByName("gdi32.dll", "PlayMetaFileRecord")
Interceptor.attach(PlayMetaFileRecord, {onLeave: function (args) {send("PlayMetaFileRecord");}});

var PlgBlt = Module.findExportByName("gdi32.dll", "PlgBlt")
Interceptor.attach(PlgBlt, {onLeave: function (args) {send("PlgBlt");}});

var PolyBezier = Module.findExportByName("gdi32.dll", "PolyBezier")
Interceptor.attach(PolyBezier, {onLeave: function (args) {send("PolyBezier");}});

var PolyBezierTo = Module.findExportByName("gdi32.dll", "PolyBezierTo")
Interceptor.attach(PolyBezierTo, {onLeave: function (args) {send("PolyBezierTo");}});

var PolyDraw = Module.findExportByName("gdi32.dll", "PolyDraw")
Interceptor.attach(PolyDraw, {onLeave: function (args) {send("PolyDraw");}});

var PolyPatBlt = Module.findExportByName("gdi32.dll", "PolyPatBlt")
Interceptor.attach(PolyPatBlt, {onLeave: function (args) {send("PolyPatBlt");}});

var PolyPolygon = Module.findExportByName("gdi32.dll", "PolyPolygon")
Interceptor.attach(PolyPolygon, {onLeave: function (args) {send("PolyPolygon");}});

var PolyPolyline = Module.findExportByName("gdi32.dll", "PolyPolyline")
Interceptor.attach(PolyPolyline, {onLeave: function (args) {send("PolyPolyline");}});

var PolyTextOutA = Module.findExportByName("gdi32.dll", "PolyTextOutA")
Interceptor.attach(PolyTextOutA, {onLeave: function (args) {send("PolyTextOutA");}});

var PolyTextOutW = Module.findExportByName("gdi32.dll", "PolyTextOutW")
Interceptor.attach(PolyTextOutW, {onLeave: function (args) {send("PolyTextOutW");}});

var Polygon = Module.findExportByName("gdi32.dll", "Polygon")
Interceptor.attach(Polygon, {onLeave: function (args) {send("Polygon");}});

var Polyline = Module.findExportByName("gdi32.dll", "Polyline")
Interceptor.attach(Polyline, {onLeave: function (args) {send("Polyline");}});

var PolylineTo = Module.findExportByName("gdi32.dll", "PolylineTo")
Interceptor.attach(PolylineTo, {onLeave: function (args) {send("PolylineTo");}});

var PtInRegion = Module.findExportByName("gdi32.dll", "PtInRegion")
Interceptor.attach(PtInRegion, {onLeave: function (args) {send("PtInRegion");}});

var PtVisible = Module.findExportByName("gdi32.dll", "PtVisible")
Interceptor.attach(PtVisible, {onLeave: function (args) {send("PtVisible");}});

var QueryFontAssocStatus = Module.findExportByName("gdi32.dll", "QueryFontAssocStatus")
Interceptor.attach(QueryFontAssocStatus, {onLeave: function (args) {send("QueryFontAssocStatus");}});

var RealizePalette = Module.findExportByName("gdi32.dll", "RealizePalette")
Interceptor.attach(RealizePalette, {onLeave: function (args) {send("RealizePalette");}});

var RectInRegion = Module.findExportByName("gdi32.dll", "RectInRegion")
Interceptor.attach(RectInRegion, {onLeave: function (args) {send("RectInRegion");}});

var RectVisible = Module.findExportByName("gdi32.dll", "RectVisible")
Interceptor.attach(RectVisible, {onLeave: function (args) {send("RectVisible");}});

var Rectangle = Module.findExportByName("gdi32.dll", "Rectangle")
Interceptor.attach(Rectangle, {onLeave: function (args) {send("Rectangle");}});

var RemoveFontMemResourceEx = Module.findExportByName("gdi32.dll", "RemoveFontMemResourceEx")
Interceptor.attach(RemoveFontMemResourceEx, {onLeave: function (args) {send("RemoveFontMemResourceEx");}});

var RemoveFontResourceA = Module.findExportByName("gdi32.dll", "RemoveFontResourceA")
Interceptor.attach(RemoveFontResourceA, {onLeave: function (args) {send("RemoveFontResourceA");}});

var RemoveFontResourceExA = Module.findExportByName("gdi32.dll", "RemoveFontResourceExA")
Interceptor.attach(RemoveFontResourceExA, {onLeave: function (args) {send("RemoveFontResourceExA");}});

var RemoveFontResourceExW = Module.findExportByName("gdi32.dll", "RemoveFontResourceExW")
Interceptor.attach(RemoveFontResourceExW, {onLeave: function (args) {send("RemoveFontResourceExW");}});

var RemoveFontResourceTracking = Module.findExportByName("gdi32.dll", "RemoveFontResourceTracking")
Interceptor.attach(RemoveFontResourceTracking, {onLeave: function (args) {send("RemoveFontResourceTracking");}});

var RemoveFontResourceW = Module.findExportByName("gdi32.dll", "RemoveFontResourceW")
Interceptor.attach(RemoveFontResourceW, {onLeave: function (args) {send("RemoveFontResourceW");}});

var ResetDCA = Module.findExportByName("gdi32.dll", "ResetDCA")
Interceptor.attach(ResetDCA, {onLeave: function (args) {send("ResetDCA");}});

var ResetDCW = Module.findExportByName("gdi32.dll", "ResetDCW")
Interceptor.attach(ResetDCW, {onLeave: function (args) {send("ResetDCW");}});

var ResizePalette = Module.findExportByName("gdi32.dll", "ResizePalette")
Interceptor.attach(ResizePalette, {onLeave: function (args) {send("ResizePalette");}});

var RestoreDC = Module.findExportByName("gdi32.dll", "RestoreDC")
Interceptor.attach(RestoreDC, {onLeave: function (args) {send("RestoreDC");}});

var RoundRect = Module.findExportByName("gdi32.dll", "RoundRect")
Interceptor.attach(RoundRect, {onLeave: function (args) {send("RoundRect");}});

var STROBJ_bEnum = Module.findExportByName("gdi32.dll", "STROBJ_bEnum")
Interceptor.attach(STROBJ_bEnum, {onLeave: function (args) {send("STROBJ_bEnum");}});

var STROBJ_bEnumPositionsOnly = Module.findExportByName("gdi32.dll", "STROBJ_bEnumPositionsOnly")
Interceptor.attach(STROBJ_bEnumPositionsOnly, {onLeave: function (args) {send("STROBJ_bEnumPositionsOnly");}});

var STROBJ_bGetAdvanceWidths = Module.findExportByName("gdi32.dll", "STROBJ_bGetAdvanceWidths")
Interceptor.attach(STROBJ_bGetAdvanceWidths, {onLeave: function (args) {send("STROBJ_bGetAdvanceWidths");}});

var STROBJ_dwGetCodePage = Module.findExportByName("gdi32.dll", "STROBJ_dwGetCodePage")
Interceptor.attach(STROBJ_dwGetCodePage, {onLeave: function (args) {send("STROBJ_dwGetCodePage");}});

var STROBJ_vEnumStart = Module.findExportByName("gdi32.dll", "STROBJ_vEnumStart")
Interceptor.attach(STROBJ_vEnumStart, {onLeave: function (args) {send("STROBJ_vEnumStart");}});

var SaveDC = Module.findExportByName("gdi32.dll", "SaveDC")
Interceptor.attach(SaveDC, {onLeave: function (args) {send("SaveDC");}});

var ScaleRgn = Module.findExportByName("gdi32.dll", "ScaleRgn")
Interceptor.attach(ScaleRgn, {onLeave: function (args) {send("ScaleRgn");}});

var ScaleValues = Module.findExportByName("gdi32.dll", "ScaleValues")
Interceptor.attach(ScaleValues, {onLeave: function (args) {send("ScaleValues");}});

var ScaleViewportExtEx = Module.findExportByName("gdi32.dll", "ScaleViewportExtEx")
Interceptor.attach(ScaleViewportExtEx, {onLeave: function (args) {send("ScaleViewportExtEx");}});

var ScaleWindowExtEx = Module.findExportByName("gdi32.dll", "ScaleWindowExtEx")
Interceptor.attach(ScaleWindowExtEx, {onLeave: function (args) {send("ScaleWindowExtEx");}});

var ScriptApplyDigitSubstitution = Module.findExportByName("gdi32.dll", "ScriptApplyDigitSubstitution")
Interceptor.attach(ScriptApplyDigitSubstitution, {onLeave: function (args) {send("ScriptApplyDigitSubstitution");}});

var ScriptApplyLogicalWidth = Module.findExportByName("gdi32.dll", "ScriptApplyLogicalWidth")
Interceptor.attach(ScriptApplyLogicalWidth, {onLeave: function (args) {send("ScriptApplyLogicalWidth");}});

var ScriptBreak = Module.findExportByName("gdi32.dll", "ScriptBreak")
Interceptor.attach(ScriptBreak, {onLeave: function (args) {send("ScriptBreak");}});

var ScriptCPtoX = Module.findExportByName("gdi32.dll", "ScriptCPtoX")
Interceptor.attach(ScriptCPtoX, {onLeave: function (args) {send("ScriptCPtoX");}});

var ScriptCacheGetHeight = Module.findExportByName("gdi32.dll", "ScriptCacheGetHeight")
Interceptor.attach(ScriptCacheGetHeight, {onLeave: function (args) {send("ScriptCacheGetHeight");}});

var ScriptFreeCache = Module.findExportByName("gdi32.dll", "ScriptFreeCache")
Interceptor.attach(ScriptFreeCache, {onLeave: function (args) {send("ScriptFreeCache");}});

var ScriptGetCMap = Module.findExportByName("gdi32.dll", "ScriptGetCMap")
Interceptor.attach(ScriptGetCMap, {onLeave: function (args) {send("ScriptGetCMap");}});

var ScriptGetFontAlternateGlyphs = Module.findExportByName("gdi32.dll", "ScriptGetFontAlternateGlyphs")
Interceptor.attach(ScriptGetFontAlternateGlyphs, {onLeave: function (args) {send("ScriptGetFontAlternateGlyphs");}});

var ScriptGetFontFeatureTags = Module.findExportByName("gdi32.dll", "ScriptGetFontFeatureTags")
Interceptor.attach(ScriptGetFontFeatureTags, {onLeave: function (args) {send("ScriptGetFontFeatureTags");}});

var ScriptGetFontLanguageTags = Module.findExportByName("gdi32.dll", "ScriptGetFontLanguageTags")
Interceptor.attach(ScriptGetFontLanguageTags, {onLeave: function (args) {send("ScriptGetFontLanguageTags");}});

var ScriptGetFontProperties = Module.findExportByName("gdi32.dll", "ScriptGetFontProperties")
Interceptor.attach(ScriptGetFontProperties, {onLeave: function (args) {send("ScriptGetFontProperties");}});

var ScriptGetFontScriptTags = Module.findExportByName("gdi32.dll", "ScriptGetFontScriptTags")
Interceptor.attach(ScriptGetFontScriptTags, {onLeave: function (args) {send("ScriptGetFontScriptTags");}});

var ScriptGetGlyphABCWidth = Module.findExportByName("gdi32.dll", "ScriptGetGlyphABCWidth")
Interceptor.attach(ScriptGetGlyphABCWidth, {onLeave: function (args) {send("ScriptGetGlyphABCWidth");}});

var ScriptGetLogicalWidths = Module.findExportByName("gdi32.dll", "ScriptGetLogicalWidths")
Interceptor.attach(ScriptGetLogicalWidths, {onLeave: function (args) {send("ScriptGetLogicalWidths");}});

var ScriptGetProperties = Module.findExportByName("gdi32.dll", "ScriptGetProperties")
Interceptor.attach(ScriptGetProperties, {onLeave: function (args) {send("ScriptGetProperties");}});

var ScriptIsComplex = Module.findExportByName("gdi32.dll", "ScriptIsComplex")
Interceptor.attach(ScriptIsComplex, {onLeave: function (args) {send("ScriptIsComplex");}});

var ScriptItemize = Module.findExportByName("gdi32.dll", "ScriptItemize")
Interceptor.attach(ScriptItemize, {onLeave: function (args) {send("ScriptItemize");}});

var ScriptItemizeOpenType = Module.findExportByName("gdi32.dll", "ScriptItemizeOpenType")
Interceptor.attach(ScriptItemizeOpenType, {onLeave: function (args) {send("ScriptItemizeOpenType");}});

var ScriptJustify = Module.findExportByName("gdi32.dll", "ScriptJustify")
Interceptor.attach(ScriptJustify, {onLeave: function (args) {send("ScriptJustify");}});

var ScriptLayout = Module.findExportByName("gdi32.dll", "ScriptLayout")
Interceptor.attach(ScriptLayout, {onLeave: function (args) {send("ScriptLayout");}});

var ScriptPlace = Module.findExportByName("gdi32.dll", "ScriptPlace")
Interceptor.attach(ScriptPlace, {onLeave: function (args) {send("ScriptPlace");}});

var ScriptPlaceOpenType = Module.findExportByName("gdi32.dll", "ScriptPlaceOpenType")
Interceptor.attach(ScriptPlaceOpenType, {onLeave: function (args) {send("ScriptPlaceOpenType");}});

var ScriptPositionSingleGlyph = Module.findExportByName("gdi32.dll", "ScriptPositionSingleGlyph")
Interceptor.attach(ScriptPositionSingleGlyph, {onLeave: function (args) {send("ScriptPositionSingleGlyph");}});

var ScriptRecordDigitSubstitution = Module.findExportByName("gdi32.dll", "ScriptRecordDigitSubstitution")
Interceptor.attach(ScriptRecordDigitSubstitution, {onLeave: function (args) {send("ScriptRecordDigitSubstitution");}});

var ScriptShape = Module.findExportByName("gdi32.dll", "ScriptShape")
Interceptor.attach(ScriptShape, {onLeave: function (args) {send("ScriptShape");}});

var ScriptShapeOpenType = Module.findExportByName("gdi32.dll", "ScriptShapeOpenType")
Interceptor.attach(ScriptShapeOpenType, {onLeave: function (args) {send("ScriptShapeOpenType");}});

var ScriptStringAnalyse = Module.findExportByName("gdi32.dll", "ScriptStringAnalyse")
Interceptor.attach(ScriptStringAnalyse, {onLeave: function (args) {send("ScriptStringAnalyse");}});

var ScriptStringCPtoX = Module.findExportByName("gdi32.dll", "ScriptStringCPtoX")
Interceptor.attach(ScriptStringCPtoX, {onLeave: function (args) {send("ScriptStringCPtoX");}});

var ScriptStringFree = Module.findExportByName("gdi32.dll", "ScriptStringFree")
Interceptor.attach(ScriptStringFree, {onLeave: function (args) {send("ScriptStringFree");}});

var ScriptStringGetLogicalWidths = Module.findExportByName("gdi32.dll", "ScriptStringGetLogicalWidths")
Interceptor.attach(ScriptStringGetLogicalWidths, {onLeave: function (args) {send("ScriptStringGetLogicalWidths");}});

var ScriptStringGetOrder = Module.findExportByName("gdi32.dll", "ScriptStringGetOrder")
Interceptor.attach(ScriptStringGetOrder, {onLeave: function (args) {send("ScriptStringGetOrder");}});

var ScriptStringOut = Module.findExportByName("gdi32.dll", "ScriptStringOut")
Interceptor.attach(ScriptStringOut, {onLeave: function (args) {send("ScriptStringOut");}});

var ScriptStringValidate = Module.findExportByName("gdi32.dll", "ScriptStringValidate")
Interceptor.attach(ScriptStringValidate, {onLeave: function (args) {send("ScriptStringValidate");}});

var ScriptStringXtoCP = Module.findExportByName("gdi32.dll", "ScriptStringXtoCP")
Interceptor.attach(ScriptStringXtoCP, {onLeave: function (args) {send("ScriptStringXtoCP");}});

var ScriptString_pLogAttr = Module.findExportByName("gdi32.dll", "ScriptString_pLogAttr")
Interceptor.attach(ScriptString_pLogAttr, {onLeave: function (args) {send("ScriptString_pLogAttr");}});

var ScriptString_pSize = Module.findExportByName("gdi32.dll", "ScriptString_pSize")
Interceptor.attach(ScriptString_pSize, {onLeave: function (args) {send("ScriptString_pSize");}});

var ScriptString_pcOutChars = Module.findExportByName("gdi32.dll", "ScriptString_pcOutChars")
Interceptor.attach(ScriptString_pcOutChars, {onLeave: function (args) {send("ScriptString_pcOutChars");}});

var ScriptSubstituteSingleGlyph = Module.findExportByName("gdi32.dll", "ScriptSubstituteSingleGlyph")
Interceptor.attach(ScriptSubstituteSingleGlyph, {onLeave: function (args) {send("ScriptSubstituteSingleGlyph");}});

var ScriptTextOut = Module.findExportByName("gdi32.dll", "ScriptTextOut")
Interceptor.attach(ScriptTextOut, {onLeave: function (args) {send("ScriptTextOut");}});

var ScriptXtoCP = Module.findExportByName("gdi32.dll", "ScriptXtoCP")
Interceptor.attach(ScriptXtoCP, {onLeave: function (args) {send("ScriptXtoCP");}});

var SelectBrushLocal = Module.findExportByName("gdi32.dll", "SelectBrushLocal")
Interceptor.attach(SelectBrushLocal, {onLeave: function (args) {send("SelectBrushLocal");}});

var SelectClipPath = Module.findExportByName("gdi32.dll", "SelectClipPath")
Interceptor.attach(SelectClipPath, {onLeave: function (args) {send("SelectClipPath");}});

var SelectClipRgn = Module.findExportByName("gdi32.dll", "SelectClipRgn")
Interceptor.attach(SelectClipRgn, {onLeave: function (args) {send("SelectClipRgn");}});

var SelectFontLocal = Module.findExportByName("gdi32.dll", "SelectFontLocal")
Interceptor.attach(SelectFontLocal, {onLeave: function (args) {send("SelectFontLocal");}});

var SelectObject = Module.findExportByName("gdi32.dll", "SelectObject")
Interceptor.attach(SelectObject, {onLeave: function (args) {send("SelectObject");}});

var SelectPalette = Module.findExportByName("gdi32.dll", "SelectPalette")
Interceptor.attach(SelectPalette, {onLeave: function (args) {send("SelectPalette");}});

var SetAbortProc = Module.findExportByName("gdi32.dll", "SetAbortProc")
Interceptor.attach(SetAbortProc, {onLeave: function (args) {send("SetAbortProc");}});

var SetArcDirection = Module.findExportByName("gdi32.dll", "SetArcDirection")
Interceptor.attach(SetArcDirection, {onLeave: function (args) {send("SetArcDirection");}});

var SetBitmapAttributes = Module.findExportByName("gdi32.dll", "SetBitmapAttributes")
Interceptor.attach(SetBitmapAttributes, {onLeave: function (args) {send("SetBitmapAttributes");}});

var SetBitmapBits = Module.findExportByName("gdi32.dll", "SetBitmapBits")
Interceptor.attach(SetBitmapBits, {onLeave: function (args) {send("SetBitmapBits");}});

var SetBitmapDimensionEx = Module.findExportByName("gdi32.dll", "SetBitmapDimensionEx")
Interceptor.attach(SetBitmapDimensionEx, {onLeave: function (args) {send("SetBitmapDimensionEx");}});

var SetBkColor = Module.findExportByName("gdi32.dll", "SetBkColor")
Interceptor.attach(SetBkColor, {onLeave: function (args) {send("SetBkColor");}});

var SetBkMode = Module.findExportByName("gdi32.dll", "SetBkMode")
Interceptor.attach(SetBkMode, {onLeave: function (args) {send("SetBkMode");}});

var SetBoundsRect = Module.findExportByName("gdi32.dll", "SetBoundsRect")
Interceptor.attach(SetBoundsRect, {onLeave: function (args) {send("SetBoundsRect");}});

var SetBrushAttributes = Module.findExportByName("gdi32.dll", "SetBrushAttributes")
Interceptor.attach(SetBrushAttributes, {onLeave: function (args) {send("SetBrushAttributes");}});

var SetBrushOrgEx = Module.findExportByName("gdi32.dll", "SetBrushOrgEx")
Interceptor.attach(SetBrushOrgEx, {onLeave: function (args) {send("SetBrushOrgEx");}});

var SetColorAdjustment = Module.findExportByName("gdi32.dll", "SetColorAdjustment")
Interceptor.attach(SetColorAdjustment, {onLeave: function (args) {send("SetColorAdjustment");}});

var SetColorSpace = Module.findExportByName("gdi32.dll", "SetColorSpace")
Interceptor.attach(SetColorSpace, {onLeave: function (args) {send("SetColorSpace");}});

var SetDCBrushColor = Module.findExportByName("gdi32.dll", "SetDCBrushColor")
Interceptor.attach(SetDCBrushColor, {onLeave: function (args) {send("SetDCBrushColor");}});

var SetDCPenColor = Module.findExportByName("gdi32.dll", "SetDCPenColor")
Interceptor.attach(SetDCPenColor, {onLeave: function (args) {send("SetDCPenColor");}});

var SetDIBColorTable = Module.findExportByName("gdi32.dll", "SetDIBColorTable")
Interceptor.attach(SetDIBColorTable, {onLeave: function (args) {send("SetDIBColorTable");}});

var SetDIBits = Module.findExportByName("gdi32.dll", "SetDIBits")
Interceptor.attach(SetDIBits, {onLeave: function (args) {send("SetDIBits");}});

var SetDIBitsToDevice = Module.findExportByName("gdi32.dll", "SetDIBitsToDevice")
Interceptor.attach(SetDIBitsToDevice, {onLeave: function (args) {send("SetDIBitsToDevice");}});

var SetDeviceGammaRamp = Module.findExportByName("gdi32.dll", "SetDeviceGammaRamp")
Interceptor.attach(SetDeviceGammaRamp, {onLeave: function (args) {send("SetDeviceGammaRamp");}});

var SetEnhMetaFileBits = Module.findExportByName("gdi32.dll", "SetEnhMetaFileBits")
Interceptor.attach(SetEnhMetaFileBits, {onLeave: function (args) {send("SetEnhMetaFileBits");}});

var SetFontEnumeration = Module.findExportByName("gdi32.dll", "SetFontEnumeration")
Interceptor.attach(SetFontEnumeration, {onLeave: function (args) {send("SetFontEnumeration");}});

var SetGraphicsMode = Module.findExportByName("gdi32.dll", "SetGraphicsMode")
Interceptor.attach(SetGraphicsMode, {onLeave: function (args) {send("SetGraphicsMode");}});

var SetICMMode = Module.findExportByName("gdi32.dll", "SetICMMode")
Interceptor.attach(SetICMMode, {onLeave: function (args) {send("SetICMMode");}});

var SetICMProfileA = Module.findExportByName("gdi32.dll", "SetICMProfileA")
Interceptor.attach(SetICMProfileA, {onLeave: function (args) {send("SetICMProfileA");}});

var SetICMProfileW = Module.findExportByName("gdi32.dll", "SetICMProfileW")
Interceptor.attach(SetICMProfileW, {onLeave: function (args) {send("SetICMProfileW");}});

var SetLayout = Module.findExportByName("gdi32.dll", "SetLayout")
Interceptor.attach(SetLayout, {onLeave: function (args) {send("SetLayout");}});

var SetLayoutWidth = Module.findExportByName("gdi32.dll", "SetLayoutWidth")
Interceptor.attach(SetLayoutWidth, {onLeave: function (args) {send("SetLayoutWidth");}});

var SetMagicColors = Module.findExportByName("gdi32.dll", "SetMagicColors")
Interceptor.attach(SetMagicColors, {onLeave: function (args) {send("SetMagicColors");}});

var SetMapMode = Module.findExportByName("gdi32.dll", "SetMapMode")
Interceptor.attach(SetMapMode, {onLeave: function (args) {send("SetMapMode");}});

var SetMapperFlags = Module.findExportByName("gdi32.dll", "SetMapperFlags")
Interceptor.attach(SetMapperFlags, {onLeave: function (args) {send("SetMapperFlags");}});

var SetMetaFileBitsEx = Module.findExportByName("gdi32.dll", "SetMetaFileBitsEx")
Interceptor.attach(SetMetaFileBitsEx, {onLeave: function (args) {send("SetMetaFileBitsEx");}});

var SetMetaRgn = Module.findExportByName("gdi32.dll", "SetMetaRgn")
Interceptor.attach(SetMetaRgn, {onLeave: function (args) {send("SetMetaRgn");}});

var SetMiterLimit = Module.findExportByName("gdi32.dll", "SetMiterLimit")
Interceptor.attach(SetMiterLimit, {onLeave: function (args) {send("SetMiterLimit");}});

var SetOPMSigningKeyAndSequenceNumbers = Module.findExportByName("gdi32.dll", "SetOPMSigningKeyAndSequenceNumbers")
Interceptor.attach(SetOPMSigningKeyAndSequenceNumbers, {onLeave: function (args) {send("SetOPMSigningKeyAndSequenceNumbers");}});

var SetPaletteEntries = Module.findExportByName("gdi32.dll", "SetPaletteEntries")
Interceptor.attach(SetPaletteEntries, {onLeave: function (args) {send("SetPaletteEntries");}});

var SetPixel = Module.findExportByName("gdi32.dll", "SetPixel")
Interceptor.attach(SetPixel, {onLeave: function (args) {send("SetPixel");}});

var SetPixelFormat = Module.findExportByName("gdi32.dll", "SetPixelFormat")
Interceptor.attach(SetPixelFormat, {onLeave: function (args) {send("SetPixelFormat");}});

var SetPixelV = Module.findExportByName("gdi32.dll", "SetPixelV")
Interceptor.attach(SetPixelV, {onLeave: function (args) {send("SetPixelV");}});

var SetPolyFillMode = Module.findExportByName("gdi32.dll", "SetPolyFillMode")
Interceptor.attach(SetPolyFillMode, {onLeave: function (args) {send("SetPolyFillMode");}});

var SetROP2 = Module.findExportByName("gdi32.dll", "SetROP2")
Interceptor.attach(SetROP2, {onLeave: function (args) {send("SetROP2");}});

var SetRectRgn = Module.findExportByName("gdi32.dll", "SetRectRgn")
Interceptor.attach(SetRectRgn, {onLeave: function (args) {send("SetRectRgn");}});

var SetRelAbs = Module.findExportByName("gdi32.dll", "SetRelAbs")
Interceptor.attach(SetRelAbs, {onLeave: function (args) {send("SetRelAbs");}});

var SetStretchBltMode = Module.findExportByName("gdi32.dll", "SetStretchBltMode")
Interceptor.attach(SetStretchBltMode, {onLeave: function (args) {send("SetStretchBltMode");}});

var SetSystemPaletteUse = Module.findExportByName("gdi32.dll", "SetSystemPaletteUse")
Interceptor.attach(SetSystemPaletteUse, {onLeave: function (args) {send("SetSystemPaletteUse");}});

var SetTextAlign = Module.findExportByName("gdi32.dll", "SetTextAlign")
Interceptor.attach(SetTextAlign, {onLeave: function (args) {send("SetTextAlign");}});

var SetTextCharacterExtra = Module.findExportByName("gdi32.dll", "SetTextCharacterExtra")
Interceptor.attach(SetTextCharacterExtra, {onLeave: function (args) {send("SetTextCharacterExtra");}});

var SetTextColor = Module.findExportByName("gdi32.dll", "SetTextColor")
Interceptor.attach(SetTextColor, {onLeave: function (args) {send("SetTextColor");}});

var SetTextJustification = Module.findExportByName("gdi32.dll", "SetTextJustification")
Interceptor.attach(SetTextJustification, {onLeave: function (args) {send("SetTextJustification");}});

var SetViewportExtEx = Module.findExportByName("gdi32.dll", "SetViewportExtEx")
Interceptor.attach(SetViewportExtEx, {onLeave: function (args) {send("SetViewportExtEx");}});

var SetViewportOrgEx = Module.findExportByName("gdi32.dll", "SetViewportOrgEx")
Interceptor.attach(SetViewportOrgEx, {onLeave: function (args) {send("SetViewportOrgEx");}});

var SetVirtualResolution = Module.findExportByName("gdi32.dll", "SetVirtualResolution")
Interceptor.attach(SetVirtualResolution, {onLeave: function (args) {send("SetVirtualResolution");}});

var SetWinMetaFileBits = Module.findExportByName("gdi32.dll", "SetWinMetaFileBits")
Interceptor.attach(SetWinMetaFileBits, {onLeave: function (args) {send("SetWinMetaFileBits");}});

var SetWindowExtEx = Module.findExportByName("gdi32.dll", "SetWindowExtEx")
Interceptor.attach(SetWindowExtEx, {onLeave: function (args) {send("SetWindowExtEx");}});

var SetWindowOrgEx = Module.findExportByName("gdi32.dll", "SetWindowOrgEx")
Interceptor.attach(SetWindowOrgEx, {onLeave: function (args) {send("SetWindowOrgEx");}});

var SetWorldTransform = Module.findExportByName("gdi32.dll", "SetWorldTransform")
Interceptor.attach(SetWorldTransform, {onLeave: function (args) {send("SetWorldTransform");}});

var StartDocA = Module.findExportByName("gdi32.dll", "StartDocA")
Interceptor.attach(StartDocA, {onLeave: function (args) {send("StartDocA");}});

var StartDocW = Module.findExportByName("gdi32.dll", "StartDocW")
Interceptor.attach(StartDocW, {onLeave: function (args) {send("StartDocW");}});

var StartFormPage = Module.findExportByName("gdi32.dll", "StartFormPage")
Interceptor.attach(StartFormPage, {onLeave: function (args) {send("StartFormPage");}});

var StartPage = Module.findExportByName("gdi32.dll", "StartPage")
Interceptor.attach(StartPage, {onLeave: function (args) {send("StartPage");}});

var StretchBlt = Module.findExportByName("gdi32.dll", "StretchBlt")
Interceptor.attach(StretchBlt, {onLeave: function (args) {send("StretchBlt");}});

var StretchDIBits = Module.findExportByName("gdi32.dll", "StretchDIBits")
Interceptor.attach(StretchDIBits, {onLeave: function (args) {send("StretchDIBits");}});

var StrokeAndFillPath = Module.findExportByName("gdi32.dll", "StrokeAndFillPath")
Interceptor.attach(StrokeAndFillPath, {onLeave: function (args) {send("StrokeAndFillPath");}});

var StrokePath = Module.findExportByName("gdi32.dll", "StrokePath")
Interceptor.attach(StrokePath, {onLeave: function (args) {send("StrokePath");}});

var SwapBuffers = Module.findExportByName("gdi32.dll", "SwapBuffers")
Interceptor.attach(SwapBuffers, {onLeave: function (args) {send("SwapBuffers");}});

var TextOutA = Module.findExportByName("gdi32.dll", "TextOutA")
Interceptor.attach(TextOutA, {onLeave: function (args) {send("TextOutA");}});

var TextOutW = Module.findExportByName("gdi32.dll", "TextOutW")
Interceptor.attach(TextOutW, {onLeave: function (args) {send("TextOutW");}});

var TranslateCharsetInfo = Module.findExportByName("gdi32.dll", "TranslateCharsetInfo")
Interceptor.attach(TranslateCharsetInfo, {onLeave: function (args) {send("TranslateCharsetInfo");}});

var UnloadNetworkFonts = Module.findExportByName("gdi32.dll", "UnloadNetworkFonts")
Interceptor.attach(UnloadNetworkFonts, {onLeave: function (args) {send("UnloadNetworkFonts");}});

var UnrealizeObject = Module.findExportByName("gdi32.dll", "UnrealizeObject")
Interceptor.attach(UnrealizeObject, {onLeave: function (args) {send("UnrealizeObject");}});

var UpdateColors = Module.findExportByName("gdi32.dll", "UpdateColors")
Interceptor.attach(UpdateColors, {onLeave: function (args) {send("UpdateColors");}});

var UpdateICMRegKeyA = Module.findExportByName("gdi32.dll", "UpdateICMRegKeyA")
Interceptor.attach(UpdateICMRegKeyA, {onLeave: function (args) {send("UpdateICMRegKeyA");}});

var UpdateICMRegKeyW = Module.findExportByName("gdi32.dll", "UpdateICMRegKeyW")
Interceptor.attach(UpdateICMRegKeyW, {onLeave: function (args) {send("UpdateICMRegKeyW");}});

var UspAllocCache = Module.findExportByName("gdi32.dll", "UspAllocCache")
Interceptor.attach(UspAllocCache, {onLeave: function (args) {send("UspAllocCache");}});

var UspAllocTemp = Module.findExportByName("gdi32.dll", "UspAllocTemp")
Interceptor.attach(UspAllocTemp, {onLeave: function (args) {send("UspAllocTemp");}});

var UspFreeMem = Module.findExportByName("gdi32.dll", "UspFreeMem")
Interceptor.attach(UspFreeMem, {onLeave: function (args) {send("UspFreeMem");}});

var WidenPath = Module.findExportByName("gdi32.dll", "WidenPath")
Interceptor.attach(WidenPath, {onLeave: function (args) {send("WidenPath");}});

var XFORMOBJ_bApplyXform = Module.findExportByName("gdi32.dll", "XFORMOBJ_bApplyXform")
Interceptor.attach(XFORMOBJ_bApplyXform, {onLeave: function (args) {send("XFORMOBJ_bApplyXform");}});

var XFORMOBJ_iGetXform = Module.findExportByName("gdi32.dll", "XFORMOBJ_iGetXform")
Interceptor.attach(XFORMOBJ_iGetXform, {onLeave: function (args) {send("XFORMOBJ_iGetXform");}});

var XLATEOBJ_cGetPalette = Module.findExportByName("gdi32.dll", "XLATEOBJ_cGetPalette")
Interceptor.attach(XLATEOBJ_cGetPalette, {onLeave: function (args) {send("XLATEOBJ_cGetPalette");}});

var XLATEOBJ_hGetColorTransform = Module.findExportByName("gdi32.dll", "XLATEOBJ_hGetColorTransform")
Interceptor.attach(XLATEOBJ_hGetColorTransform, {onLeave: function (args) {send("XLATEOBJ_hGetColorTransform");}});

var XLATEOBJ_iXlate = Module.findExportByName("gdi32.dll", "XLATEOBJ_iXlate")
Interceptor.attach(XLATEOBJ_iXlate, {onLeave: function (args) {send("XLATEOBJ_iXlate");}});

var XLATEOBJ_piVector = Module.findExportByName("gdi32.dll", "XLATEOBJ_piVector")
Interceptor.attach(XLATEOBJ_piVector, {onLeave: function (args) {send("XLATEOBJ_piVector");}});

var bCreateDCW = Module.findExportByName("gdi32.dll", "bCreateDCW")
Interceptor.attach(bCreateDCW, {onLeave: function (args) {send("bCreateDCW");}});

var bDeleteLDC = Module.findExportByName("gdi32.dll", "bDeleteLDC")
Interceptor.attach(bDeleteLDC, {onLeave: function (args) {send("bDeleteLDC");}});

var bInitSystemAndFontsDirectoriesW = Module.findExportByName("gdi32.dll", "bInitSystemAndFontsDirectoriesW")
Interceptor.attach(bInitSystemAndFontsDirectoriesW, {onLeave: function (args) {send("bInitSystemAndFontsDirectoriesW");}});

var bMakePathNameW = Module.findExportByName("gdi32.dll", "bMakePathNameW")
Interceptor.attach(bMakePathNameW, {onLeave: function (args) {send("bMakePathNameW");}});

var cGetTTFFromFOT = Module.findExportByName("gdi32.dll", "cGetTTFFromFOT")
Interceptor.attach(cGetTTFFromFOT, {onLeave: function (args) {send("cGetTTFFromFOT");}});

var fpClosePrinter = Module.findExportByName("gdi32.dll", "fpClosePrinter")
Interceptor.attach(fpClosePrinter, {onLeave: function (args) {send("fpClosePrinter");}});

var ftsWordBreak = Module.findExportByName("gdi32.dll", "ftsWordBreak")
Interceptor.attach(ftsWordBreak, {onLeave: function (args) {send("ftsWordBreak");}});

var gCookie = Module.findExportByName("gdi32.dll", "gCookie")
Interceptor.attach(gCookie, {onLeave: function (args) {send("gCookie");}});

var gMaxGdiHandleCount = Module.findExportByName("gdi32.dll", "gMaxGdiHandleCount")
Interceptor.attach(gMaxGdiHandleCount, {onLeave: function (args) {send("gMaxGdiHandleCount");}});

var gW32PID = Module.findExportByName("gdi32.dll", "gW32PID")
Interceptor.attach(gW32PID, {onLeave: function (args) {send("gW32PID");}});

var g_systemCallFilterId = Module.findExportByName("gdi32.dll", "g_systemCallFilterId")
Interceptor.attach(g_systemCallFilterId, {onLeave: function (args) {send("g_systemCallFilterId");}});

var gdiPlaySpoolStream = Module.findExportByName("gdi32.dll", "gdiPlaySpoolStream")
Interceptor.attach(gdiPlaySpoolStream, {onLeave: function (args) {send("gdiPlaySpoolStream");}});

var ghICM = Module.findExportByName("gdi32.dll", "ghICM")
Interceptor.attach(ghICM, {onLeave: function (args) {send("ghICM");}});

var hGetPEBHandle = Module.findExportByName("gdi32.dll", "hGetPEBHandle")
Interceptor.attach(hGetPEBHandle, {onLeave: function (args) {send("hGetPEBHandle");}});

var pGdiDevCaps = Module.findExportByName("gdi32.dll", "pGdiDevCaps")
Interceptor.attach(pGdiDevCaps, {onLeave: function (args) {send("pGdiDevCaps");}});

var pGdiSharedHandleTable = Module.findExportByName("gdi32.dll", "pGdiSharedHandleTable")
Interceptor.attach(pGdiSharedHandleTable, {onLeave: function (args) {send("pGdiSharedHandleTable");}});

var pGdiSharedMemory = Module.findExportByName("gdi32.dll", "pGdiSharedMemory")
Interceptor.attach(pGdiSharedMemory, {onLeave: function (args) {send("pGdiSharedMemory");}});

var pldcGet = Module.findExportByName("gdi32.dll", "pldcGet")
Interceptor.attach(pldcGet, {onLeave: function (args) {send("pldcGet");}});

var vSetPldc = Module.findExportByName("gdi32.dll", "vSetPldc")
Interceptor.attach(vSetPldc, {onLeave: function (args) {send("vSetPldc");}});

