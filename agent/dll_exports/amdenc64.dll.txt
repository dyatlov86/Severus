var ECASWConfigureH264HardwareSpecificParameters = Module.findExportByName("amdenc64.dll", "ECASWConfigureH264HardwareSpecificParameters")
Interceptor.attach(ECASWConfigureH264HardwareSpecificParameters, {onLeave: function (args) {send("ECASWConfigureH264HardwareSpecificParameters");}});

var ECASWConfigureHevcHardwareSpecificParameters = Module.findExportByName("amdenc64.dll", "ECASWConfigureHevcHardwareSpecificParameters")
Interceptor.attach(ECASWConfigureHevcHardwareSpecificParameters, {onLeave: function (args) {send("ECASWConfigureHevcHardwareSpecificParameters");}});

var ECASWConfigureMotionEstimationParameters = Module.findExportByName("amdenc64.dll", "ECASWConfigureMotionEstimationParameters")
Interceptor.attach(ECASWConfigureMotionEstimationParameters, {onLeave: function (args) {send("ECASWConfigureMotionEstimationParameters");}});

var ECASWConfigureRDOParameters = Module.findExportByName("amdenc64.dll", "ECASWConfigureRDOParameters")
Interceptor.attach(ECASWConfigureRDOParameters, {onLeave: function (args) {send("ECASWConfigureRDOParameters");}});

var ECASWCreateProcessor = Module.findExportByName("amdenc64.dll", "ECASWCreateProcessor")
Interceptor.attach(ECASWCreateProcessor, {onLeave: function (args) {send("ECASWCreateProcessor");}});

var ECASWCreateService = Module.findExportByName("amdenc64.dll", "ECASWCreateService")
Interceptor.attach(ECASWCreateService, {onLeave: function (args) {send("ECASWCreateService");}});

var ECASWDestroyProcessor = Module.findExportByName("amdenc64.dll", "ECASWDestroyProcessor")
Interceptor.attach(ECASWDestroyProcessor, {onLeave: function (args) {send("ECASWDestroyProcessor");}});

var ECASWDestroyService = Module.findExportByName("amdenc64.dll", "ECASWDestroyService")
Interceptor.attach(ECASWDestroyService, {onLeave: function (args) {send("ECASWDestroyService");}});

var ECASWExchangeVersion = Module.findExportByName("amdenc64.dll", "ECASWExchangeVersion")
Interceptor.attach(ECASWExchangeVersion, {onLeave: function (args) {send("ECASWExchangeVersion");}});

var ECASWGetNextOutput = Module.findExportByName("amdenc64.dll", "ECASWGetNextOutput")
Interceptor.attach(ECASWGetNextOutput, {onLeave: function (args) {send("ECASWGetNextOutput");}});

var ECASWGetOutputBufferFormat = Module.findExportByName("amdenc64.dll", "ECASWGetOutputBufferFormat")
Interceptor.attach(ECASWGetOutputBufferFormat, {onLeave: function (args) {send("ECASWGetOutputBufferFormat");}});

var ECASWGetProcessorInstruction = Module.findExportByName("amdenc64.dll", "ECASWGetProcessorInstruction")
Interceptor.attach(ECASWGetProcessorInstruction, {onLeave: function (args) {send("ECASWGetProcessorInstruction");}});

var ECASWQueryCaps = Module.findExportByName("amdenc64.dll", "ECASWQueryCaps")
Interceptor.attach(ECASWQueryCaps, {onLeave: function (args) {send("ECASWQueryCaps");}});

var ECASWRecordProcessorInstruction = Module.findExportByName("amdenc64.dll", "ECASWRecordProcessorInstruction")
Interceptor.attach(ECASWRecordProcessorInstruction, {onLeave: function (args) {send("ECASWRecordProcessorInstruction");}});

var ECASWSetSpeedQualityPreset = Module.findExportByName("amdenc64.dll", "ECASWSetSpeedQualityPreset")
Interceptor.attach(ECASWSetSpeedQualityPreset, {onLeave: function (args) {send("ECASWSetSpeedQualityPreset");}});

var ECAV1UVEConfigColorFormats = Module.findExportByName("amdenc64.dll", "ECAV1UVEConfigColorFormats")
Interceptor.attach(ECAV1UVEConfigColorFormats, {onLeave: function (args) {send("ECAV1UVEConfigColorFormats");}});

var ECAV1UVEConfigureCDF = Module.findExportByName("amdenc64.dll", "ECAV1UVEConfigureCDF")
Interceptor.attach(ECAV1UVEConfigureCDF, {onLeave: function (args) {send("ECAV1UVEConfigureCDF");}});

var ECAV1UVEConfigureColorDescription = Module.findExportByName("amdenc64.dll", "ECAV1UVEConfigureColorDescription")
Interceptor.attach(ECAV1UVEConfigureColorDescription, {onLeave: function (args) {send("ECAV1UVEConfigureColorDescription");}});

var ECAV1UVEConfigureEncodeLatency = Module.findExportByName("amdenc64.dll", "ECAV1UVEConfigureEncodeLatency")
Interceptor.attach(ECAV1UVEConfigureEncodeLatency, {onLeave: function (args) {send("ECAV1UVEConfigureEncodeLatency");}});

var ECAV1UVEConfigureGOP = Module.findExportByName("amdenc64.dll", "ECAV1UVEConfigureGOP")
Interceptor.attach(ECAV1UVEConfigureGOP, {onLeave: function (args) {send("ECAV1UVEConfigureGOP");}});

var ECAV1UVEConfigureIntraRefresh = Module.findExportByName("amdenc64.dll", "ECAV1UVEConfigureIntraRefresh")
Interceptor.attach(ECAV1UVEConfigureIntraRefresh, {onLeave: function (args) {send("ECAV1UVEConfigureIntraRefresh");}});

var ECAV1UVEConfigureMetadata = Module.findExportByName("amdenc64.dll", "ECAV1UVEConfigureMetadata")
Interceptor.attach(ECAV1UVEConfigureMetadata, {onLeave: function (args) {send("ECAV1UVEConfigureMetadata");}});

var ECAV1UVEConfigureRateControlPerFrame = Module.findExportByName("amdenc64.dll", "ECAV1UVEConfigureRateControlPerFrame")
Interceptor.attach(ECAV1UVEConfigureRateControlPerFrame, {onLeave: function (args) {send("ECAV1UVEConfigureRateControlPerFrame");}});

var ECAV1UVEConfigureRateControlPerLayer = Module.findExportByName("amdenc64.dll", "ECAV1UVEConfigureRateControlPerLayer")
Interceptor.attach(ECAV1UVEConfigureRateControlPerLayer, {onLeave: function (args) {send("ECAV1UVEConfigureRateControlPerLayer");}});

var ECAV1UVEConfigureScreenContentTools = Module.findExportByName("amdenc64.dll", "ECAV1UVEConfigureScreenContentTools")
Interceptor.attach(ECAV1UVEConfigureScreenContentTools, {onLeave: function (args) {send("ECAV1UVEConfigureScreenContentTools");}});

var ECAV1UVEConfigureSpecMiscInst = Module.findExportByName("amdenc64.dll", "ECAV1UVEConfigureSpecMiscInst")
Interceptor.attach(ECAV1UVEConfigureSpecMiscInst, {onLeave: function (args) {send("ECAV1UVEConfigureSpecMiscInst");}});

var ECAV1UVEConfigureTemporalLayers = Module.findExportByName("amdenc64.dll", "ECAV1UVEConfigureTemporalLayers")
Interceptor.attach(ECAV1UVEConfigureTemporalLayers, {onLeave: function (args) {send("ECAV1UVEConfigureTemporalLayers");}});

var ECAV1UVEConfigureTimingInfo = Module.findExportByName("amdenc64.dll", "ECAV1UVEConfigureTimingInfo")
Interceptor.attach(ECAV1UVEConfigureTimingInfo, {onLeave: function (args) {send("ECAV1UVEConfigureTimingInfo");}});

var ECAV1UVECreateEncoder = Module.findExportByName("amdenc64.dll", "ECAV1UVECreateEncoder")
Interceptor.attach(ECAV1UVECreateEncoder, {onLeave: function (args) {send("ECAV1UVECreateEncoder");}});

var ECAV1UVECreateService = Module.findExportByName("amdenc64.dll", "ECAV1UVECreateService")
Interceptor.attach(ECAV1UVECreateService, {onLeave: function (args) {send("ECAV1UVECreateService");}});

var ECAV1UVEDestroyEncoder = Module.findExportByName("amdenc64.dll", "ECAV1UVEDestroyEncoder")
Interceptor.attach(ECAV1UVEDestroyEncoder, {onLeave: function (args) {send("ECAV1UVEDestroyEncoder");}});

var ECAV1UVEDestroyService = Module.findExportByName("amdenc64.dll", "ECAV1UVEDestroyService")
Interceptor.attach(ECAV1UVEDestroyService, {onLeave: function (args) {send("ECAV1UVEDestroyService");}});

var ECAV1UVEDrain = Module.findExportByName("amdenc64.dll", "ECAV1UVEDrain")
Interceptor.attach(ECAV1UVEDrain, {onLeave: function (args) {send("ECAV1UVEDrain");}});

var ECAV1UVEEnableAdditionalFeedbackInst = Module.findExportByName("amdenc64.dll", "ECAV1UVEEnableAdditionalFeedbackInst")
Interceptor.attach(ECAV1UVEEnableAdditionalFeedbackInst, {onLeave: function (args) {send("ECAV1UVEEnableAdditionalFeedbackInst");}});

var ECAV1UVEExchangeVersion = Module.findExportByName("amdenc64.dll", "ECAV1UVEExchangeVersion")
Interceptor.attach(ECAV1UVEExchangeVersion, {onLeave: function (args) {send("ECAV1UVEExchangeVersion");}});

var ECAV1UVEFlush = Module.findExportByName("amdenc64.dll", "ECAV1UVEFlush")
Interceptor.attach(ECAV1UVEFlush, {onLeave: function (args) {send("ECAV1UVEFlush");}});

var ECAV1UVEGetCdfDefaultTablesData = Module.findExportByName("amdenc64.dll", "ECAV1UVEGetCdfDefaultTablesData")
Interceptor.attach(ECAV1UVEGetCdfDefaultTablesData, {onLeave: function (args) {send("ECAV1UVEGetCdfDefaultTablesData");}});

var ECAV1UVEGetEncodeInstruction = Module.findExportByName("amdenc64.dll", "ECAV1UVEGetEncodeInstruction")
Interceptor.attach(ECAV1UVEGetEncodeInstruction, {onLeave: function (args) {send("ECAV1UVEGetEncodeInstruction");}});

var ECAV1UVEGetNextOutput = Module.findExportByName("amdenc64.dll", "ECAV1UVEGetNextOutput")
Interceptor.attach(ECAV1UVEGetNextOutput, {onLeave: function (args) {send("ECAV1UVEGetNextOutput");}});

var ECAV1UVEGetResourceInfo = Module.findExportByName("amdenc64.dll", "ECAV1UVEGetResourceInfo")
Interceptor.attach(ECAV1UVEGetResourceInfo, {onLeave: function (args) {send("ECAV1UVEGetResourceInfo");}});

var ECAV1UVEGetSequenceHeader = Module.findExportByName("amdenc64.dll", "ECAV1UVEGetSequenceHeader")
Interceptor.attach(ECAV1UVEGetSequenceHeader, {onLeave: function (args) {send("ECAV1UVEGetSequenceHeader");}});

var ECAV1UVEInitializeFeedbackBuffer = Module.findExportByName("amdenc64.dll", "ECAV1UVEInitializeFeedbackBuffer")
Interceptor.attach(ECAV1UVEInitializeFeedbackBuffer, {onLeave: function (args) {send("ECAV1UVEInitializeFeedbackBuffer");}});

var ECAV1UVEQueryCaps = Module.findExportByName("amdenc64.dll", "ECAV1UVEQueryCaps")
Interceptor.attach(ECAV1UVEQueryCaps, {onLeave: function (args) {send("ECAV1UVEQueryCaps");}});

var ECAV1UVEQueryMaxNumLongTermReferences = Module.findExportByName("amdenc64.dll", "ECAV1UVEQueryMaxNumLongTermReferences")
Interceptor.attach(ECAV1UVEQueryMaxNumLongTermReferences, {onLeave: function (args) {send("ECAV1UVEQueryMaxNumLongTermReferences");}});

var ECAV1UVEQueryNumTilesRange = Module.findExportByName("amdenc64.dll", "ECAV1UVEQueryNumTilesRange")
Interceptor.attach(ECAV1UVEQueryNumTilesRange, {onLeave: function (args) {send("ECAV1UVEQueryNumTilesRange");}});

var ECAV1UVEReadFeedback = Module.findExportByName("amdenc64.dll", "ECAV1UVEReadFeedback")
Interceptor.attach(ECAV1UVEReadFeedback, {onLeave: function (args) {send("ECAV1UVEReadFeedback");}});

var ECAV1UVEReadFeedbackWriteIndex = Module.findExportByName("amdenc64.dll", "ECAV1UVEReadFeedbackWriteIndex")
Interceptor.attach(ECAV1UVEReadFeedbackWriteIndex, {onLeave: function (args) {send("ECAV1UVEReadFeedbackWriteIndex");}});

var ECAV1UVERecordEncodeInstruction = Module.findExportByName("amdenc64.dll", "ECAV1UVERecordEncodeInstruction")
Interceptor.attach(ECAV1UVERecordEncodeInstruction, {onLeave: function (args) {send("ECAV1UVERecordEncodeInstruction");}});

var ECAV1UVESetSpeedQualityPreset = Module.findExportByName("amdenc64.dll", "ECAV1UVESetSpeedQualityPreset")
Interceptor.attach(ECAV1UVESetSpeedQualityPreset, {onLeave: function (args) {send("ECAV1UVESetSpeedQualityPreset");}});

var ECH264ConfigureMotionEstimationParameters = Module.findExportByName("amdenc64.dll", "ECH264ConfigureMotionEstimationParameters")
Interceptor.attach(ECH264ConfigureMotionEstimationParameters, {onLeave: function (args) {send("ECH264ConfigureMotionEstimationParameters");}});

var ECH264LLEConfigRateQualityControlPerLayer = Module.findExportByName("amdenc64.dll", "ECH264LLEConfigRateQualityControlPerLayer")
Interceptor.attach(ECH264LLEConfigRateQualityControlPerLayer, {onLeave: function (args) {send("ECH264LLEConfigRateQualityControlPerLayer");}});

var ECH264LLEConfigRateQualityControlPerSession = Module.findExportByName("amdenc64.dll", "ECH264LLEConfigRateQualityControlPerSession")
Interceptor.attach(ECH264LLEConfigRateQualityControlPerSession, {onLeave: function (args) {send("ECH264LLEConfigRateQualityControlPerSession");}});

var ECH264LLECreateEncodeContextBuffer = Module.findExportByName("amdenc64.dll", "ECH264LLECreateEncodeContextBuffer")
Interceptor.attach(ECH264LLECreateEncodeContextBuffer, {onLeave: function (args) {send("ECH264LLECreateEncodeContextBuffer");}});

var ECH264LLECreateEncoder = Module.findExportByName("amdenc64.dll", "ECH264LLECreateEncoder")
Interceptor.attach(ECH264LLECreateEncoder, {onLeave: function (args) {send("ECH264LLECreateEncoder");}});

var ECH264LLECreateHeaderEncoder = Module.findExportByName("amdenc64.dll", "ECH264LLECreateHeaderEncoder")
Interceptor.attach(ECH264LLECreateHeaderEncoder, {onLeave: function (args) {send("ECH264LLECreateHeaderEncoder");}});

var ECH264LLECreateRateQualityControlContext = Module.findExportByName("amdenc64.dll", "ECH264LLECreateRateQualityControlContext")
Interceptor.attach(ECH264LLECreateRateQualityControlContext, {onLeave: function (args) {send("ECH264LLECreateRateQualityControlContext");}});

var ECH264LLECreateService = Module.findExportByName("amdenc64.dll", "ECH264LLECreateService")
Interceptor.attach(ECH264LLECreateService, {onLeave: function (args) {send("ECH264LLECreateService");}});

var ECH264LLECreateSessionContext = Module.findExportByName("amdenc64.dll", "ECH264LLECreateSessionContext")
Interceptor.attach(ECH264LLECreateSessionContext, {onLeave: function (args) {send("ECH264LLECreateSessionContext");}});

var ECH264LLEDestroyEncodeContextBuffer = Module.findExportByName("amdenc64.dll", "ECH264LLEDestroyEncodeContextBuffer")
Interceptor.attach(ECH264LLEDestroyEncodeContextBuffer, {onLeave: function (args) {send("ECH264LLEDestroyEncodeContextBuffer");}});

var ECH264LLEDestroyEncoder = Module.findExportByName("amdenc64.dll", "ECH264LLEDestroyEncoder")
Interceptor.attach(ECH264LLEDestroyEncoder, {onLeave: function (args) {send("ECH264LLEDestroyEncoder");}});

var ECH264LLEDestroyHeaderEncoder = Module.findExportByName("amdenc64.dll", "ECH264LLEDestroyHeaderEncoder")
Interceptor.attach(ECH264LLEDestroyHeaderEncoder, {onLeave: function (args) {send("ECH264LLEDestroyHeaderEncoder");}});

var ECH264LLEDestroyRateQualityControlContext = Module.findExportByName("amdenc64.dll", "ECH264LLEDestroyRateQualityControlContext")
Interceptor.attach(ECH264LLEDestroyRateQualityControlContext, {onLeave: function (args) {send("ECH264LLEDestroyRateQualityControlContext");}});

var ECH264LLEDestroyService = Module.findExportByName("amdenc64.dll", "ECH264LLEDestroyService")
Interceptor.attach(ECH264LLEDestroyService, {onLeave: function (args) {send("ECH264LLEDestroyService");}});

var ECH264LLEDestroySessionContext = Module.findExportByName("amdenc64.dll", "ECH264LLEDestroySessionContext")
Interceptor.attach(ECH264LLEDestroySessionContext, {onLeave: function (args) {send("ECH264LLEDestroySessionContext");}});

var ECH264LLEExchangeVersion = Module.findExportByName("amdenc64.dll", "ECH264LLEExchangeVersion")
Interceptor.attach(ECH264LLEExchangeVersion, {onLeave: function (args) {send("ECH264LLEExchangeVersion");}});

var ECH264LLEQueryCaps = Module.findExportByName("amdenc64.dll", "ECH264LLEQueryCaps")
Interceptor.attach(ECH264LLEQueryCaps, {onLeave: function (args) {send("ECH264LLEQueryCaps");}});

var ECH264LLERecordEncodeInstruction = Module.findExportByName("amdenc64.dll", "ECH264LLERecordEncodeInstruction")
Interceptor.attach(ECH264LLERecordEncodeInstruction, {onLeave: function (args) {send("ECH264LLERecordEncodeInstruction");}});

var ECH264LLERecordParseQueryInstruction = Module.findExportByName("amdenc64.dll", "ECH264LLERecordParseQueryInstruction")
Interceptor.attach(ECH264LLERecordParseQueryInstruction, {onLeave: function (args) {send("ECH264LLERecordParseQueryInstruction");}});

var ECH264UVEConfigColorFormats = Module.findExportByName("amdenc64.dll", "ECH264UVEConfigColorFormats")
Interceptor.attach(ECH264UVEConfigColorFormats, {onLeave: function (args) {send("ECH264UVEConfigColorFormats");}});

var ECH264UVEConfigureBPicture = Module.findExportByName("amdenc64.dll", "ECH264UVEConfigureBPicture")
Interceptor.attach(ECH264UVEConfigureBPicture, {onLeave: function (args) {send("ECH264UVEConfigureBPicture");}});

var ECH264UVEConfigureEFC = Module.findExportByName("amdenc64.dll", "ECH264UVEConfigureEFC")
Interceptor.attach(ECH264UVEConfigureEFC, {onLeave: function (args) {send("ECH264UVEConfigureEFC");}});

var ECH264UVEConfigureEncodeLatency = Module.findExportByName("amdenc64.dll", "ECH264UVEConfigureEncodeLatency")
Interceptor.attach(ECH264UVEConfigureEncodeLatency, {onLeave: function (args) {send("ECH264UVEConfigureEncodeLatency");}});

var ECH264UVEConfigureGOP = Module.findExportByName("amdenc64.dll", "ECH264UVEConfigureGOP")
Interceptor.attach(ECH264UVEConfigureGOP, {onLeave: function (args) {send("ECH264UVEConfigureGOP");}});

var ECH264UVEConfigureHardwareSpecificParameters = Module.findExportByName("amdenc64.dll", "ECH264UVEConfigureHardwareSpecificParameters")
Interceptor.attach(ECH264UVEConfigureHardwareSpecificParameters, {onLeave: function (args) {send("ECH264UVEConfigureHardwareSpecificParameters");}});

var ECH264UVEConfigureIntraRefresh = Module.findExportByName("amdenc64.dll", "ECH264UVEConfigureIntraRefresh")
Interceptor.attach(ECH264UVEConfigureIntraRefresh, {onLeave: function (args) {send("ECH264UVEConfigureIntraRefresh");}});

var ECH264UVEConfigureRDOParameters = Module.findExportByName("amdenc64.dll", "ECH264UVEConfigureRDOParameters")
Interceptor.attach(ECH264UVEConfigureRDOParameters, {onLeave: function (args) {send("ECH264UVEConfigureRDOParameters");}});

var ECH264UVEConfigureRateControlPerLayer = Module.findExportByName("amdenc64.dll", "ECH264UVEConfigureRateControlPerLayer")
Interceptor.attach(ECH264UVEConfigureRateControlPerLayer, {onLeave: function (args) {send("ECH264UVEConfigureRateControlPerLayer");}});

var ECH264UVEConfigureRateControlPerPicture = Module.findExportByName("amdenc64.dll", "ECH264UVEConfigureRateControlPerPicture")
Interceptor.attach(ECH264UVEConfigureRateControlPerPicture, {onLeave: function (args) {send("ECH264UVEConfigureRateControlPerPicture");}});

var ECH264UVEConfigureSlices = Module.findExportByName("amdenc64.dll", "ECH264UVEConfigureSlices")
Interceptor.attach(ECH264UVEConfigureSlices, {onLeave: function (args) {send("ECH264UVEConfigureSlices");}});

var ECH264UVEConfigureTemporalLayers = Module.findExportByName("amdenc64.dll", "ECH264UVEConfigureTemporalLayers")
Interceptor.attach(ECH264UVEConfigureTemporalLayers, {onLeave: function (args) {send("ECH264UVEConfigureTemporalLayers");}});

var ECH264UVEConfigureVUI = Module.findExportByName("amdenc64.dll", "ECH264UVEConfigureVUI")
Interceptor.attach(ECH264UVEConfigureVUI, {onLeave: function (args) {send("ECH264UVEConfigureVUI");}});

var ECH264UVECreateEncoder = Module.findExportByName("amdenc64.dll", "ECH264UVECreateEncoder")
Interceptor.attach(ECH264UVECreateEncoder, {onLeave: function (args) {send("ECH264UVECreateEncoder");}});

var ECH264UVECreateService = Module.findExportByName("amdenc64.dll", "ECH264UVECreateService")
Interceptor.attach(ECH264UVECreateService, {onLeave: function (args) {send("ECH264UVECreateService");}});

var ECH264UVEDestroyEncoder = Module.findExportByName("amdenc64.dll", "ECH264UVEDestroyEncoder")
Interceptor.attach(ECH264UVEDestroyEncoder, {onLeave: function (args) {send("ECH264UVEDestroyEncoder");}});

var ECH264UVEDestroyService = Module.findExportByName("amdenc64.dll", "ECH264UVEDestroyService")
Interceptor.attach(ECH264UVEDestroyService, {onLeave: function (args) {send("ECH264UVEDestroyService");}});

var ECH264UVEDrain = Module.findExportByName("amdenc64.dll", "ECH264UVEDrain")
Interceptor.attach(ECH264UVEDrain, {onLeave: function (args) {send("ECH264UVEDrain");}});

var ECH264UVEEnableAdditionalFeedbackInst = Module.findExportByName("amdenc64.dll", "ECH264UVEEnableAdditionalFeedbackInst")
Interceptor.attach(ECH264UVEEnableAdditionalFeedbackInst, {onLeave: function (args) {send("ECH264UVEEnableAdditionalFeedbackInst");}});

var ECH264UVEExchangeVersion = Module.findExportByName("amdenc64.dll", "ECH264UVEExchangeVersion")
Interceptor.attach(ECH264UVEExchangeVersion, {onLeave: function (args) {send("ECH264UVEExchangeVersion");}});

var ECH264UVEFlush = Module.findExportByName("amdenc64.dll", "ECH264UVEFlush")
Interceptor.attach(ECH264UVEFlush, {onLeave: function (args) {send("ECH264UVEFlush");}});

var ECH264UVEGetEncodeInstruction = Module.findExportByName("amdenc64.dll", "ECH264UVEGetEncodeInstruction")
Interceptor.attach(ECH264UVEGetEncodeInstruction, {onLeave: function (args) {send("ECH264UVEGetEncodeInstruction");}});

var ECH264UVEGetNextOutput = Module.findExportByName("amdenc64.dll", "ECH264UVEGetNextOutput")
Interceptor.attach(ECH264UVEGetNextOutput, {onLeave: function (args) {send("ECH264UVEGetNextOutput");}});

var ECH264UVEGetPPS = Module.findExportByName("amdenc64.dll", "ECH264UVEGetPPS")
Interceptor.attach(ECH264UVEGetPPS, {onLeave: function (args) {send("ECH264UVEGetPPS");}});

var ECH264UVEGetResourceInfo = Module.findExportByName("amdenc64.dll", "ECH264UVEGetResourceInfo")
Interceptor.attach(ECH264UVEGetResourceInfo, {onLeave: function (args) {send("ECH264UVEGetResourceInfo");}});

var ECH264UVEGetSPS = Module.findExportByName("amdenc64.dll", "ECH264UVEGetSPS")
Interceptor.attach(ECH264UVEGetSPS, {onLeave: function (args) {send("ECH264UVEGetSPS");}});

var ECH264UVEInitializeFeedbackBuffer = Module.findExportByName("amdenc64.dll", "ECH264UVEInitializeFeedbackBuffer")
Interceptor.attach(ECH264UVEInitializeFeedbackBuffer, {onLeave: function (args) {send("ECH264UVEInitializeFeedbackBuffer");}});

var ECH264UVEQueryCaps = Module.findExportByName("amdenc64.dll", "ECH264UVEQueryCaps")
Interceptor.attach(ECH264UVEQueryCaps, {onLeave: function (args) {send("ECH264UVEQueryCaps");}});

var ECH264UVEQueryMinimumNumberOfReferences = Module.findExportByName("amdenc64.dll", "ECH264UVEQueryMinimumNumberOfReferences")
Interceptor.attach(ECH264UVEQueryMinimumNumberOfReferences, {onLeave: function (args) {send("ECH264UVEQueryMinimumNumberOfReferences");}});

var ECH264UVEReadFeedback = Module.findExportByName("amdenc64.dll", "ECH264UVEReadFeedback")
Interceptor.attach(ECH264UVEReadFeedback, {onLeave: function (args) {send("ECH264UVEReadFeedback");}});

var ECH264UVEReadFeedbackWriteIndex = Module.findExportByName("amdenc64.dll", "ECH264UVEReadFeedbackWriteIndex")
Interceptor.attach(ECH264UVEReadFeedbackWriteIndex, {onLeave: function (args) {send("ECH264UVEReadFeedbackWriteIndex");}});

var ECH264UVERecordEncodeInstruction = Module.findExportByName("amdenc64.dll", "ECH264UVERecordEncodeInstruction")
Interceptor.attach(ECH264UVERecordEncodeInstruction, {onLeave: function (args) {send("ECH264UVERecordEncodeInstruction");}});

var ECH264UVESetEFCTable = Module.findExportByName("amdenc64.dll", "ECH264UVESetEFCTable")
Interceptor.attach(ECH264UVESetEFCTable, {onLeave: function (args) {send("ECH264UVESetEFCTable");}});

var ECH264UVESetSpeedQualityPreset = Module.findExportByName("amdenc64.dll", "ECH264UVESetSpeedQualityPreset")
Interceptor.attach(ECH264UVESetSpeedQualityPreset, {onLeave: function (args) {send("ECH264UVESetSpeedQualityPreset");}});

var ECHASWGetResourceInfo = Module.findExportByName("amdenc64.dll", "ECHASWGetResourceInfo")
Interceptor.attach(ECHASWGetResourceInfo, {onLeave: function (args) {send("ECHASWGetResourceInfo");}});

var ECHEVCLLEConfigRateQualityControlPerLayer = Module.findExportByName("amdenc64.dll", "ECHEVCLLEConfigRateQualityControlPerLayer")
Interceptor.attach(ECHEVCLLEConfigRateQualityControlPerLayer, {onLeave: function (args) {send("ECHEVCLLEConfigRateQualityControlPerLayer");}});

var ECHEVCLLEConfigRateQualityControlPerSession = Module.findExportByName("amdenc64.dll", "ECHEVCLLEConfigRateQualityControlPerSession")
Interceptor.attach(ECHEVCLLEConfigRateQualityControlPerSession, {onLeave: function (args) {send("ECHEVCLLEConfigRateQualityControlPerSession");}});

var ECHEVCLLECreateEncodeContextBuffer = Module.findExportByName("amdenc64.dll", "ECHEVCLLECreateEncodeContextBuffer")
Interceptor.attach(ECHEVCLLECreateEncodeContextBuffer, {onLeave: function (args) {send("ECHEVCLLECreateEncodeContextBuffer");}});

var ECHEVCLLECreateEncoder = Module.findExportByName("amdenc64.dll", "ECHEVCLLECreateEncoder")
Interceptor.attach(ECHEVCLLECreateEncoder, {onLeave: function (args) {send("ECHEVCLLECreateEncoder");}});

var ECHEVCLLECreateHeaderEncoder = Module.findExportByName("amdenc64.dll", "ECHEVCLLECreateHeaderEncoder")
Interceptor.attach(ECHEVCLLECreateHeaderEncoder, {onLeave: function (args) {send("ECHEVCLLECreateHeaderEncoder");}});

var ECHEVCLLECreateRateQualityControlContext = Module.findExportByName("amdenc64.dll", "ECHEVCLLECreateRateQualityControlContext")
Interceptor.attach(ECHEVCLLECreateRateQualityControlContext, {onLeave: function (args) {send("ECHEVCLLECreateRateQualityControlContext");}});

var ECHEVCLLECreateService = Module.findExportByName("amdenc64.dll", "ECHEVCLLECreateService")
Interceptor.attach(ECHEVCLLECreateService, {onLeave: function (args) {send("ECHEVCLLECreateService");}});

var ECHEVCLLECreateSessionContext = Module.findExportByName("amdenc64.dll", "ECHEVCLLECreateSessionContext")
Interceptor.attach(ECHEVCLLECreateSessionContext, {onLeave: function (args) {send("ECHEVCLLECreateSessionContext");}});

var ECHEVCLLEDestroyEncodeContextBuffer = Module.findExportByName("amdenc64.dll", "ECHEVCLLEDestroyEncodeContextBuffer")
Interceptor.attach(ECHEVCLLEDestroyEncodeContextBuffer, {onLeave: function (args) {send("ECHEVCLLEDestroyEncodeContextBuffer");}});

var ECHEVCLLEDestroyEncoder = Module.findExportByName("amdenc64.dll", "ECHEVCLLEDestroyEncoder")
Interceptor.attach(ECHEVCLLEDestroyEncoder, {onLeave: function (args) {send("ECHEVCLLEDestroyEncoder");}});

var ECHEVCLLEDestroyHeaderEncoder = Module.findExportByName("amdenc64.dll", "ECHEVCLLEDestroyHeaderEncoder")
Interceptor.attach(ECHEVCLLEDestroyHeaderEncoder, {onLeave: function (args) {send("ECHEVCLLEDestroyHeaderEncoder");}});

var ECHEVCLLEDestroyRateQualityControlContext = Module.findExportByName("amdenc64.dll", "ECHEVCLLEDestroyRateQualityControlContext")
Interceptor.attach(ECHEVCLLEDestroyRateQualityControlContext, {onLeave: function (args) {send("ECHEVCLLEDestroyRateQualityControlContext");}});

var ECHEVCLLEDestroyService = Module.findExportByName("amdenc64.dll", "ECHEVCLLEDestroyService")
Interceptor.attach(ECHEVCLLEDestroyService, {onLeave: function (args) {send("ECHEVCLLEDestroyService");}});

var ECHEVCLLEDestroySessionContext = Module.findExportByName("amdenc64.dll", "ECHEVCLLEDestroySessionContext")
Interceptor.attach(ECHEVCLLEDestroySessionContext, {onLeave: function (args) {send("ECHEVCLLEDestroySessionContext");}});

var ECHEVCLLEExchangeVersion = Module.findExportByName("amdenc64.dll", "ECHEVCLLEExchangeVersion")
Interceptor.attach(ECHEVCLLEExchangeVersion, {onLeave: function (args) {send("ECHEVCLLEExchangeVersion");}});

var ECHEVCLLEQueryCaps = Module.findExportByName("amdenc64.dll", "ECHEVCLLEQueryCaps")
Interceptor.attach(ECHEVCLLEQueryCaps, {onLeave: function (args) {send("ECHEVCLLEQueryCaps");}});

var ECHEVCLLERecordEncodeInstruction = Module.findExportByName("amdenc64.dll", "ECHEVCLLERecordEncodeInstruction")
Interceptor.attach(ECHEVCLLERecordEncodeInstruction, {onLeave: function (args) {send("ECHEVCLLERecordEncodeInstruction");}});

var ECHEVCLLERecordParseQueryInstruction = Module.findExportByName("amdenc64.dll", "ECHEVCLLERecordParseQueryInstruction")
Interceptor.attach(ECHEVCLLERecordParseQueryInstruction, {onLeave: function (args) {send("ECHEVCLLERecordParseQueryInstruction");}});

var ECHEVCUVEConfigColorFormats = Module.findExportByName("amdenc64.dll", "ECHEVCUVEConfigColorFormats")
Interceptor.attach(ECHEVCUVEConfigColorFormats, {onLeave: function (args) {send("ECHEVCUVEConfigColorFormats");}});

var ECHEVCUVEConfigureEFC = Module.findExportByName("amdenc64.dll", "ECHEVCUVEConfigureEFC")
Interceptor.attach(ECHEVCUVEConfigureEFC, {onLeave: function (args) {send("ECHEVCUVEConfigureEFC");}});

var ECHEVCUVEConfigureEncodeLatency = Module.findExportByName("amdenc64.dll", "ECHEVCUVEConfigureEncodeLatency")
Interceptor.attach(ECHEVCUVEConfigureEncodeLatency, {onLeave: function (args) {send("ECHEVCUVEConfigureEncodeLatency");}});

var ECHEVCUVEConfigureGOP = Module.findExportByName("amdenc64.dll", "ECHEVCUVEConfigureGOP")
Interceptor.attach(ECHEVCUVEConfigureGOP, {onLeave: function (args) {send("ECHEVCUVEConfigureGOP");}});

var ECHEVCUVEConfigureHardwareSpecificParameters = Module.findExportByName("amdenc64.dll", "ECHEVCUVEConfigureHardwareSpecificParameters")
Interceptor.attach(ECHEVCUVEConfigureHardwareSpecificParameters, {onLeave: function (args) {send("ECHEVCUVEConfigureHardwareSpecificParameters");}});

var ECHEVCUVEConfigureIntraRefresh = Module.findExportByName("amdenc64.dll", "ECHEVCUVEConfigureIntraRefresh")
Interceptor.attach(ECHEVCUVEConfigureIntraRefresh, {onLeave: function (args) {send("ECHEVCUVEConfigureIntraRefresh");}});

var ECHEVCUVEConfigureRateControlPerLayer = Module.findExportByName("amdenc64.dll", "ECHEVCUVEConfigureRateControlPerLayer")
Interceptor.attach(ECHEVCUVEConfigureRateControlPerLayer, {onLeave: function (args) {send("ECHEVCUVEConfigureRateControlPerLayer");}});

var ECHEVCUVEConfigureRateControlPerPicture = Module.findExportByName("amdenc64.dll", "ECHEVCUVEConfigureRateControlPerPicture")
Interceptor.attach(ECHEVCUVEConfigureRateControlPerPicture, {onLeave: function (args) {send("ECHEVCUVEConfigureRateControlPerPicture");}});

var ECHEVCUVEConfigureSEI = Module.findExportByName("amdenc64.dll", "ECHEVCUVEConfigureSEI")
Interceptor.attach(ECHEVCUVEConfigureSEI, {onLeave: function (args) {send("ECHEVCUVEConfigureSEI");}});

var ECHEVCUVEConfigureSlices = Module.findExportByName("amdenc64.dll", "ECHEVCUVEConfigureSlices")
Interceptor.attach(ECHEVCUVEConfigureSlices, {onLeave: function (args) {send("ECHEVCUVEConfigureSlices");}});

var ECHEVCUVEConfigureTemporalLayers = Module.findExportByName("amdenc64.dll", "ECHEVCUVEConfigureTemporalLayers")
Interceptor.attach(ECHEVCUVEConfigureTemporalLayers, {onLeave: function (args) {send("ECHEVCUVEConfigureTemporalLayers");}});

var ECHEVCUVEConfigureVUI = Module.findExportByName("amdenc64.dll", "ECHEVCUVEConfigureVUI")
Interceptor.attach(ECHEVCUVEConfigureVUI, {onLeave: function (args) {send("ECHEVCUVEConfigureVUI");}});

var ECHEVCUVECreateEncoder = Module.findExportByName("amdenc64.dll", "ECHEVCUVECreateEncoder")
Interceptor.attach(ECHEVCUVECreateEncoder, {onLeave: function (args) {send("ECHEVCUVECreateEncoder");}});

var ECHEVCUVECreateService = Module.findExportByName("amdenc64.dll", "ECHEVCUVECreateService")
Interceptor.attach(ECHEVCUVECreateService, {onLeave: function (args) {send("ECHEVCUVECreateService");}});

var ECHEVCUVEDestroyEncoder = Module.findExportByName("amdenc64.dll", "ECHEVCUVEDestroyEncoder")
Interceptor.attach(ECHEVCUVEDestroyEncoder, {onLeave: function (args) {send("ECHEVCUVEDestroyEncoder");}});

var ECHEVCUVEDestroyService = Module.findExportByName("amdenc64.dll", "ECHEVCUVEDestroyService")
Interceptor.attach(ECHEVCUVEDestroyService, {onLeave: function (args) {send("ECHEVCUVEDestroyService");}});

var ECHEVCUVEDrain = Module.findExportByName("amdenc64.dll", "ECHEVCUVEDrain")
Interceptor.attach(ECHEVCUVEDrain, {onLeave: function (args) {send("ECHEVCUVEDrain");}});

var ECHEVCUVEEnableAdditionalFeedbackInst = Module.findExportByName("amdenc64.dll", "ECHEVCUVEEnableAdditionalFeedbackInst")
Interceptor.attach(ECHEVCUVEEnableAdditionalFeedbackInst, {onLeave: function (args) {send("ECHEVCUVEEnableAdditionalFeedbackInst");}});

var ECHEVCUVEExchangeVersion = Module.findExportByName("amdenc64.dll", "ECHEVCUVEExchangeVersion")
Interceptor.attach(ECHEVCUVEExchangeVersion, {onLeave: function (args) {send("ECHEVCUVEExchangeVersion");}});

var ECHEVCUVEFlush = Module.findExportByName("amdenc64.dll", "ECHEVCUVEFlush")
Interceptor.attach(ECHEVCUVEFlush, {onLeave: function (args) {send("ECHEVCUVEFlush");}});

var ECHEVCUVEGetEncodeInstruction = Module.findExportByName("amdenc64.dll", "ECHEVCUVEGetEncodeInstruction")
Interceptor.attach(ECHEVCUVEGetEncodeInstruction, {onLeave: function (args) {send("ECHEVCUVEGetEncodeInstruction");}});

var ECHEVCUVEGetNextOutput = Module.findExportByName("amdenc64.dll", "ECHEVCUVEGetNextOutput")
Interceptor.attach(ECHEVCUVEGetNextOutput, {onLeave: function (args) {send("ECHEVCUVEGetNextOutput");}});

var ECHEVCUVEGetPPS = Module.findExportByName("amdenc64.dll", "ECHEVCUVEGetPPS")
Interceptor.attach(ECHEVCUVEGetPPS, {onLeave: function (args) {send("ECHEVCUVEGetPPS");}});

var ECHEVCUVEGetResourceInfo = Module.findExportByName("amdenc64.dll", "ECHEVCUVEGetResourceInfo")
Interceptor.attach(ECHEVCUVEGetResourceInfo, {onLeave: function (args) {send("ECHEVCUVEGetResourceInfo");}});

var ECHEVCUVEGetSPS = Module.findExportByName("amdenc64.dll", "ECHEVCUVEGetSPS")
Interceptor.attach(ECHEVCUVEGetSPS, {onLeave: function (args) {send("ECHEVCUVEGetSPS");}});

var ECHEVCUVEGetVPS = Module.findExportByName("amdenc64.dll", "ECHEVCUVEGetVPS")
Interceptor.attach(ECHEVCUVEGetVPS, {onLeave: function (args) {send("ECHEVCUVEGetVPS");}});

var ECHEVCUVEInitializeFeedbackBuffer = Module.findExportByName("amdenc64.dll", "ECHEVCUVEInitializeFeedbackBuffer")
Interceptor.attach(ECHEVCUVEInitializeFeedbackBuffer, {onLeave: function (args) {send("ECHEVCUVEInitializeFeedbackBuffer");}});

var ECHEVCUVEQueryCaps = Module.findExportByName("amdenc64.dll", "ECHEVCUVEQueryCaps")
Interceptor.attach(ECHEVCUVEQueryCaps, {onLeave: function (args) {send("ECHEVCUVEQueryCaps");}});

var ECHEVCUVEQueryMinimumNumberOfReferences = Module.findExportByName("amdenc64.dll", "ECHEVCUVEQueryMinimumNumberOfReferences")
Interceptor.attach(ECHEVCUVEQueryMinimumNumberOfReferences, {onLeave: function (args) {send("ECHEVCUVEQueryMinimumNumberOfReferences");}});

var ECHEVCUVEReadFeedback = Module.findExportByName("amdenc64.dll", "ECHEVCUVEReadFeedback")
Interceptor.attach(ECHEVCUVEReadFeedback, {onLeave: function (args) {send("ECHEVCUVEReadFeedback");}});

var ECHEVCUVEReadFeedbackWriteIndex = Module.findExportByName("amdenc64.dll", "ECHEVCUVEReadFeedbackWriteIndex")
Interceptor.attach(ECHEVCUVEReadFeedbackWriteIndex, {onLeave: function (args) {send("ECHEVCUVEReadFeedbackWriteIndex");}});

var ECHEVCUVERecordEncodeInstruction = Module.findExportByName("amdenc64.dll", "ECHEVCUVERecordEncodeInstruction")
Interceptor.attach(ECHEVCUVERecordEncodeInstruction, {onLeave: function (args) {send("ECHEVCUVERecordEncodeInstruction");}});

var ECHEVCUVESetEFCTable = Module.findExportByName("amdenc64.dll", "ECHEVCUVESetEFCTable")
Interceptor.attach(ECHEVCUVESetEFCTable, {onLeave: function (args) {send("ECHEVCUVESetEFCTable");}});

var ECHEVCUVESetSpeedQualityPreset = Module.findExportByName("amdenc64.dll", "ECHEVCUVESetSpeedQualityPreset")
Interceptor.attach(ECHEVCUVESetSpeedQualityPreset, {onLeave: function (args) {send("ECHEVCUVESetSpeedQualityPreset");}});

var ECLibInitialize = Module.findExportByName("amdenc64.dll", "ECLibInitialize")
Interceptor.attach(ECLibInitialize, {onLeave: function (args) {send("ECLibInitialize");}});

var ECLibInitializeEx = Module.findExportByName("amdenc64.dll", "ECLibInitializeEx")
Interceptor.attach(ECLibInitializeEx, {onLeave: function (args) {send("ECLibInitializeEx");}});

var VCAbsoluteToNormalized = Module.findExportByName("amdenc64.dll", "VCAbsoluteToNormalized")
Interceptor.attach(VCAbsoluteToNormalized, {onLeave: function (args) {send("VCAbsoluteToNormalized");}});

var VCCreateVideoCore = Module.findExportByName("amdenc64.dll", "VCCreateVideoCore")
Interceptor.attach(VCCreateVideoCore, {onLeave: function (args) {send("VCCreateVideoCore");}});

var VCDestroyVideoCore = Module.findExportByName("amdenc64.dll", "VCDestroyVideoCore")
Interceptor.attach(VCDestroyVideoCore, {onLeave: function (args) {send("VCDestroyVideoCore");}});

var VCExchangeVersion = Module.findExportByName("amdenc64.dll", "VCExchangeVersion")
Interceptor.attach(VCExchangeVersion, {onLeave: function (args) {send("VCExchangeVersion");}});

var VCGetVideoCaps = Module.findExportByName("amdenc64.dll", "VCGetVideoCaps")
Interceptor.attach(VCGetVideoCaps, {onLeave: function (args) {send("VCGetVideoCaps");}});

var VCGetVideoOpList = Module.findExportByName("amdenc64.dll", "VCGetVideoOpList")
Interceptor.attach(VCGetVideoOpList, {onLeave: function (args) {send("VCGetVideoOpList");}});

var VCLibInitialize = Module.findExportByName("amdenc64.dll", "VCLibInitialize")
Interceptor.attach(VCLibInitialize, {onLeave: function (args) {send("VCLibInitialize");}});

var VCNormalizedToAbsolute = Module.findExportByName("amdenc64.dll", "VCNormalizedToAbsolute")
Interceptor.attach(VCNormalizedToAbsolute, {onLeave: function (args) {send("VCNormalizedToAbsolute");}});

