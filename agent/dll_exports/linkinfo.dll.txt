var CompareLinkInfoReferents = Module.findExportByName("linkinfo.dll", "CompareLinkInfoReferents")
Interceptor.attach(CompareLinkInfoReferents, {onLeave: function (args) {send("CompareLinkInfoReferents");}});

var CompareLinkInfoVolumes = Module.findExportByName("linkinfo.dll", "CompareLinkInfoVolumes")
Interceptor.attach(CompareLinkInfoVolumes, {onLeave: function (args) {send("CompareLinkInfoVolumes");}});

var CreateLinkInfo = Module.findExportByName("linkinfo.dll", "CreateLinkInfo")
Interceptor.attach(CreateLinkInfo, {onLeave: function (args) {send("CreateLinkInfo");}});

var CreateLinkInfoA = Module.findExportByName("linkinfo.dll", "CreateLinkInfoA")
Interceptor.attach(CreateLinkInfoA, {onLeave: function (args) {send("CreateLinkInfoA");}});

var CreateLinkInfoW = Module.findExportByName("linkinfo.dll", "CreateLinkInfoW")
Interceptor.attach(CreateLinkInfoW, {onLeave: function (args) {send("CreateLinkInfoW");}});

var DestroyLinkInfo = Module.findExportByName("linkinfo.dll", "DestroyLinkInfo")
Interceptor.attach(DestroyLinkInfo, {onLeave: function (args) {send("DestroyLinkInfo");}});

var DisconnectLinkInfo = Module.findExportByName("linkinfo.dll", "DisconnectLinkInfo")
Interceptor.attach(DisconnectLinkInfo, {onLeave: function (args) {send("DisconnectLinkInfo");}});

var GetCanonicalPathInfo = Module.findExportByName("linkinfo.dll", "GetCanonicalPathInfo")
Interceptor.attach(GetCanonicalPathInfo, {onLeave: function (args) {send("GetCanonicalPathInfo");}});

var GetCanonicalPathInfoA = Module.findExportByName("linkinfo.dll", "GetCanonicalPathInfoA")
Interceptor.attach(GetCanonicalPathInfoA, {onLeave: function (args) {send("GetCanonicalPathInfoA");}});

var GetCanonicalPathInfoW = Module.findExportByName("linkinfo.dll", "GetCanonicalPathInfoW")
Interceptor.attach(GetCanonicalPathInfoW, {onLeave: function (args) {send("GetCanonicalPathInfoW");}});

var GetLinkInfoData = Module.findExportByName("linkinfo.dll", "GetLinkInfoData")
Interceptor.attach(GetLinkInfoData, {onLeave: function (args) {send("GetLinkInfoData");}});

var IsValidLinkInfo = Module.findExportByName("linkinfo.dll", "IsValidLinkInfo")
Interceptor.attach(IsValidLinkInfo, {onLeave: function (args) {send("IsValidLinkInfo");}});

var ResolveLinkInfo = Module.findExportByName("linkinfo.dll", "ResolveLinkInfo")
Interceptor.attach(ResolveLinkInfo, {onLeave: function (args) {send("ResolveLinkInfo");}});

var ResolveLinkInfoA = Module.findExportByName("linkinfo.dll", "ResolveLinkInfoA")
Interceptor.attach(ResolveLinkInfoA, {onLeave: function (args) {send("ResolveLinkInfoA");}});

var ResolveLinkInfoW = Module.findExportByName("linkinfo.dll", "ResolveLinkInfoW")
Interceptor.attach(ResolveLinkInfoW, {onLeave: function (args) {send("ResolveLinkInfoW");}});

