var HcsAddResourceToOperation = Module.findExportByName("computecore.dll", "HcsAddResourceToOperation")
Interceptor.attach(HcsAddResourceToOperation, {onLeave: function (args) {send("HcsAddResourceToOperation");}});

var HcsCancelOperation = Module.findExportByName("computecore.dll", "HcsCancelOperation")
Interceptor.attach(HcsCancelOperation, {onLeave: function (args) {send("HcsCancelOperation");}});

var HcsCloseComputeSystem = Module.findExportByName("computecore.dll", "HcsCloseComputeSystem")
Interceptor.attach(HcsCloseComputeSystem, {onLeave: function (args) {send("HcsCloseComputeSystem");}});

var HcsCloseOperation = Module.findExportByName("computecore.dll", "HcsCloseOperation")
Interceptor.attach(HcsCloseOperation, {onLeave: function (args) {send("HcsCloseOperation");}});

var HcsCloseProcess = Module.findExportByName("computecore.dll", "HcsCloseProcess")
Interceptor.attach(HcsCloseProcess, {onLeave: function (args) {send("HcsCloseProcess");}});

var HcsCrashComputeSystem = Module.findExportByName("computecore.dll", "HcsCrashComputeSystem")
Interceptor.attach(HcsCrashComputeSystem, {onLeave: function (args) {send("HcsCrashComputeSystem");}});

var HcsCreateComputeSystem = Module.findExportByName("computecore.dll", "HcsCreateComputeSystem")
Interceptor.attach(HcsCreateComputeSystem, {onLeave: function (args) {send("HcsCreateComputeSystem");}});

var HcsCreateComputeSystemInNamespace = Module.findExportByName("computecore.dll", "HcsCreateComputeSystemInNamespace")
Interceptor.attach(HcsCreateComputeSystemInNamespace, {onLeave: function (args) {send("HcsCreateComputeSystemInNamespace");}});

var HcsCreateEmptyGuestStateFile = Module.findExportByName("computecore.dll", "HcsCreateEmptyGuestStateFile")
Interceptor.attach(HcsCreateEmptyGuestStateFile, {onLeave: function (args) {send("HcsCreateEmptyGuestStateFile");}});

var HcsCreateEmptyRuntimeStateFile = Module.findExportByName("computecore.dll", "HcsCreateEmptyRuntimeStateFile")
Interceptor.attach(HcsCreateEmptyRuntimeStateFile, {onLeave: function (args) {send("HcsCreateEmptyRuntimeStateFile");}});

var HcsCreateOperation = Module.findExportByName("computecore.dll", "HcsCreateOperation")
Interceptor.attach(HcsCreateOperation, {onLeave: function (args) {send("HcsCreateOperation");}});

var HcsCreateOperationWithNotifications = Module.findExportByName("computecore.dll", "HcsCreateOperationWithNotifications")
Interceptor.attach(HcsCreateOperationWithNotifications, {onLeave: function (args) {send("HcsCreateOperationWithNotifications");}});

var HcsCreateProcess = Module.findExportByName("computecore.dll", "HcsCreateProcess")
Interceptor.attach(HcsCreateProcess, {onLeave: function (args) {send("HcsCreateProcess");}});

var HcsEnumerateComputeSystems = Module.findExportByName("computecore.dll", "HcsEnumerateComputeSystems")
Interceptor.attach(HcsEnumerateComputeSystems, {onLeave: function (args) {send("HcsEnumerateComputeSystems");}});

var HcsEnumerateComputeSystemsInNamespace = Module.findExportByName("computecore.dll", "HcsEnumerateComputeSystemsInNamespace")
Interceptor.attach(HcsEnumerateComputeSystemsInNamespace, {onLeave: function (args) {send("HcsEnumerateComputeSystemsInNamespace");}});

var HcsEnumerateVmWorkerProcesses = Module.findExportByName("computecore.dll", "HcsEnumerateVmWorkerProcesses")
Interceptor.attach(HcsEnumerateVmWorkerProcesses, {onLeave: function (args) {send("HcsEnumerateVmWorkerProcesses");}});

var HcsFindVmWorkerProcesses = Module.findExportByName("computecore.dll", "HcsFindVmWorkerProcesses")
Interceptor.attach(HcsFindVmWorkerProcesses, {onLeave: function (args) {send("HcsFindVmWorkerProcesses");}});

var HcsGetComputeSystemFromOperation = Module.findExportByName("computecore.dll", "HcsGetComputeSystemFromOperation")
Interceptor.attach(HcsGetComputeSystemFromOperation, {onLeave: function (args) {send("HcsGetComputeSystemFromOperation");}});

var HcsGetComputeSystemProperties = Module.findExportByName("computecore.dll", "HcsGetComputeSystemProperties")
Interceptor.attach(HcsGetComputeSystemProperties, {onLeave: function (args) {send("HcsGetComputeSystemProperties");}});

var HcsGetOperationContext = Module.findExportByName("computecore.dll", "HcsGetOperationContext")
Interceptor.attach(HcsGetOperationContext, {onLeave: function (args) {send("HcsGetOperationContext");}});

var HcsGetOperationId = Module.findExportByName("computecore.dll", "HcsGetOperationId")
Interceptor.attach(HcsGetOperationId, {onLeave: function (args) {send("HcsGetOperationId");}});

var HcsGetOperationResult = Module.findExportByName("computecore.dll", "HcsGetOperationResult")
Interceptor.attach(HcsGetOperationResult, {onLeave: function (args) {send("HcsGetOperationResult");}});

var HcsGetOperationResultAndProcessInfo = Module.findExportByName("computecore.dll", "HcsGetOperationResultAndProcessInfo")
Interceptor.attach(HcsGetOperationResultAndProcessInfo, {onLeave: function (args) {send("HcsGetOperationResultAndProcessInfo");}});

var HcsGetOperationType = Module.findExportByName("computecore.dll", "HcsGetOperationType")
Interceptor.attach(HcsGetOperationType, {onLeave: function (args) {send("HcsGetOperationType");}});

var HcsGetProcessFromOperation = Module.findExportByName("computecore.dll", "HcsGetProcessFromOperation")
Interceptor.attach(HcsGetProcessFromOperation, {onLeave: function (args) {send("HcsGetProcessFromOperation");}});

var HcsGetProcessInfo = Module.findExportByName("computecore.dll", "HcsGetProcessInfo")
Interceptor.attach(HcsGetProcessInfo, {onLeave: function (args) {send("HcsGetProcessInfo");}});

var HcsGetProcessProperties = Module.findExportByName("computecore.dll", "HcsGetProcessProperties")
Interceptor.attach(HcsGetProcessProperties, {onLeave: function (args) {send("HcsGetProcessProperties");}});

var HcsGetProcessorCompatibilityFromSavedState = Module.findExportByName("computecore.dll", "HcsGetProcessorCompatibilityFromSavedState")
Interceptor.attach(HcsGetProcessorCompatibilityFromSavedState, {onLeave: function (args) {send("HcsGetProcessorCompatibilityFromSavedState");}});

var HcsGetServiceProperties = Module.findExportByName("computecore.dll", "HcsGetServiceProperties")
Interceptor.attach(HcsGetServiceProperties, {onLeave: function (args) {send("HcsGetServiceProperties");}});

var HcsGetWorkerProcessJob = Module.findExportByName("computecore.dll", "HcsGetWorkerProcessJob")
Interceptor.attach(HcsGetWorkerProcessJob, {onLeave: function (args) {send("HcsGetWorkerProcessJob");}});

var HcsGrantVmAccess = Module.findExportByName("computecore.dll", "HcsGrantVmAccess")
Interceptor.attach(HcsGrantVmAccess, {onLeave: function (args) {send("HcsGrantVmAccess");}});

var HcsGrantVmGroupAccess = Module.findExportByName("computecore.dll", "HcsGrantVmGroupAccess")
Interceptor.attach(HcsGrantVmGroupAccess, {onLeave: function (args) {send("HcsGrantVmGroupAccess");}});

var HcsModifyComputeSystem = Module.findExportByName("computecore.dll", "HcsModifyComputeSystem")
Interceptor.attach(HcsModifyComputeSystem, {onLeave: function (args) {send("HcsModifyComputeSystem");}});

var HcsModifyProcess = Module.findExportByName("computecore.dll", "HcsModifyProcess")
Interceptor.attach(HcsModifyProcess, {onLeave: function (args) {send("HcsModifyProcess");}});

var HcsModifyServiceSettings = Module.findExportByName("computecore.dll", "HcsModifyServiceSettings")
Interceptor.attach(HcsModifyServiceSettings, {onLeave: function (args) {send("HcsModifyServiceSettings");}});

var HcsOpenComputeSystem = Module.findExportByName("computecore.dll", "HcsOpenComputeSystem")
Interceptor.attach(HcsOpenComputeSystem, {onLeave: function (args) {send("HcsOpenComputeSystem");}});

var HcsOpenComputeSystemInNamespace = Module.findExportByName("computecore.dll", "HcsOpenComputeSystemInNamespace")
Interceptor.attach(HcsOpenComputeSystemInNamespace, {onLeave: function (args) {send("HcsOpenComputeSystemInNamespace");}});

var HcsOpenProcess = Module.findExportByName("computecore.dll", "HcsOpenProcess")
Interceptor.attach(HcsOpenProcess, {onLeave: function (args) {send("HcsOpenProcess");}});

var HcsPauseComputeSystem = Module.findExportByName("computecore.dll", "HcsPauseComputeSystem")
Interceptor.attach(HcsPauseComputeSystem, {onLeave: function (args) {send("HcsPauseComputeSystem");}});

var HcsResumeComputeSystem = Module.findExportByName("computecore.dll", "HcsResumeComputeSystem")
Interceptor.attach(HcsResumeComputeSystem, {onLeave: function (args) {send("HcsResumeComputeSystem");}});

var HcsRevokeVmAccess = Module.findExportByName("computecore.dll", "HcsRevokeVmAccess")
Interceptor.attach(HcsRevokeVmAccess, {onLeave: function (args) {send("HcsRevokeVmAccess");}});

var HcsRevokeVmGroupAccess = Module.findExportByName("computecore.dll", "HcsRevokeVmGroupAccess")
Interceptor.attach(HcsRevokeVmGroupAccess, {onLeave: function (args) {send("HcsRevokeVmGroupAccess");}});

var HcsSaveComputeSystem = Module.findExportByName("computecore.dll", "HcsSaveComputeSystem")
Interceptor.attach(HcsSaveComputeSystem, {onLeave: function (args) {send("HcsSaveComputeSystem");}});

var HcsSetComputeSystemCallback = Module.findExportByName("computecore.dll", "HcsSetComputeSystemCallback")
Interceptor.attach(HcsSetComputeSystemCallback, {onLeave: function (args) {send("HcsSetComputeSystemCallback");}});

var HcsSetOperationCallback = Module.findExportByName("computecore.dll", "HcsSetOperationCallback")
Interceptor.attach(HcsSetOperationCallback, {onLeave: function (args) {send("HcsSetOperationCallback");}});

var HcsSetOperationContext = Module.findExportByName("computecore.dll", "HcsSetOperationContext")
Interceptor.attach(HcsSetOperationContext, {onLeave: function (args) {send("HcsSetOperationContext");}});

var HcsSetProcessCallback = Module.findExportByName("computecore.dll", "HcsSetProcessCallback")
Interceptor.attach(HcsSetProcessCallback, {onLeave: function (args) {send("HcsSetProcessCallback");}});

var HcsShutDownComputeSystem = Module.findExportByName("computecore.dll", "HcsShutDownComputeSystem")
Interceptor.attach(HcsShutDownComputeSystem, {onLeave: function (args) {send("HcsShutDownComputeSystem");}});

var HcsSignalProcess = Module.findExportByName("computecore.dll", "HcsSignalProcess")
Interceptor.attach(HcsSignalProcess, {onLeave: function (args) {send("HcsSignalProcess");}});

var HcsStartComputeSystem = Module.findExportByName("computecore.dll", "HcsStartComputeSystem")
Interceptor.attach(HcsStartComputeSystem, {onLeave: function (args) {send("HcsStartComputeSystem");}});

var HcsStartVmWorkerProcess = Module.findExportByName("computecore.dll", "HcsStartVmWorkerProcess")
Interceptor.attach(HcsStartVmWorkerProcess, {onLeave: function (args) {send("HcsStartVmWorkerProcess");}});

var HcsSubmitWerReport = Module.findExportByName("computecore.dll", "HcsSubmitWerReport")
Interceptor.attach(HcsSubmitWerReport, {onLeave: function (args) {send("HcsSubmitWerReport");}});

var HcsTerminateComputeSystem = Module.findExportByName("computecore.dll", "HcsTerminateComputeSystem")
Interceptor.attach(HcsTerminateComputeSystem, {onLeave: function (args) {send("HcsTerminateComputeSystem");}});

var HcsTerminateProcess = Module.findExportByName("computecore.dll", "HcsTerminateProcess")
Interceptor.attach(HcsTerminateProcess, {onLeave: function (args) {send("HcsTerminateProcess");}});

var HcsWaitForComputeSystemExit = Module.findExportByName("computecore.dll", "HcsWaitForComputeSystemExit")
Interceptor.attach(HcsWaitForComputeSystemExit, {onLeave: function (args) {send("HcsWaitForComputeSystemExit");}});

var HcsWaitForOperationResult = Module.findExportByName("computecore.dll", "HcsWaitForOperationResult")
Interceptor.attach(HcsWaitForOperationResult, {onLeave: function (args) {send("HcsWaitForOperationResult");}});

var HcsWaitForOperationResultAndProcessInfo = Module.findExportByName("computecore.dll", "HcsWaitForOperationResultAndProcessInfo")
Interceptor.attach(HcsWaitForOperationResultAndProcessInfo, {onLeave: function (args) {send("HcsWaitForOperationResultAndProcessInfo");}});

var HcsWaitForProcessExit = Module.findExportByName("computecore.dll", "HcsWaitForProcessExit")
Interceptor.attach(HcsWaitForProcessExit, {onLeave: function (args) {send("HcsWaitForProcessExit");}});

