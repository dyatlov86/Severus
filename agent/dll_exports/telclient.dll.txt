var ??0MetricsLogSplitter@telemetry_client@@QEAA@AEBV01@@Z = Module.findExportByName("telclient.dll", "??0MetricsLogSplitter@telemetry_client@@QEAA@AEBV01@@Z")
Interceptor.attach(??0MetricsLogSplitter@telemetry_client@@QEAA@AEBV01@@Z, {onLeave: function (args) {send("??0MetricsLogSplitter@telemetry_client@@QEAA@AEBV01@@Z");}});

var ??0MetricsLogSplitter@telemetry_client@@QEAA@XZ = Module.findExportByName("telclient.dll", "??0MetricsLogSplitter@telemetry_client@@QEAA@XZ")
Interceptor.attach(??0MetricsLogSplitter@telemetry_client@@QEAA@XZ, {onLeave: function (args) {send("??0MetricsLogSplitter@telemetry_client@@QEAA@XZ");}});

var ??0TelemetryClientDecoder@telemetry_client@@QEAA@AEBV01@@Z = Module.findExportByName("telclient.dll", "??0TelemetryClientDecoder@telemetry_client@@QEAA@AEBV01@@Z")
Interceptor.attach(??0TelemetryClientDecoder@telemetry_client@@QEAA@AEBV01@@Z, {onLeave: function (args) {send("??0TelemetryClientDecoder@telemetry_client@@QEAA@AEBV01@@Z");}});

var ??0TelemetryClientDecoder@telemetry_client@@QEAA@XZ = Module.findExportByName("telclient.dll", "??0TelemetryClientDecoder@telemetry_client@@QEAA@XZ")
Interceptor.attach(??0TelemetryClientDecoder@telemetry_client@@QEAA@XZ, {onLeave: function (args) {send("??0TelemetryClientDecoder@telemetry_client@@QEAA@XZ");}});

var ??1MetricsLogSplitter@telemetry_client@@UEAA@XZ = Module.findExportByName("telclient.dll", "??1MetricsLogSplitter@telemetry_client@@UEAA@XZ")
Interceptor.attach(??1MetricsLogSplitter@telemetry_client@@UEAA@XZ, {onLeave: function (args) {send("??1MetricsLogSplitter@telemetry_client@@UEAA@XZ");}});

var ??1TelemetryClientDecoder@telemetry_client@@UEAA@XZ = Module.findExportByName("telclient.dll", "??1TelemetryClientDecoder@telemetry_client@@UEAA@XZ")
Interceptor.attach(??1TelemetryClientDecoder@telemetry_client@@UEAA@XZ, {onLeave: function (args) {send("??1TelemetryClientDecoder@telemetry_client@@UEAA@XZ");}});

var ??4MetricsLogSplitter@telemetry_client@@QEAAAEAV01@AEBV01@@Z = Module.findExportByName("telclient.dll", "??4MetricsLogSplitter@telemetry_client@@QEAAAEAV01@AEBV01@@Z")
Interceptor.attach(??4MetricsLogSplitter@telemetry_client@@QEAAAEAV01@AEBV01@@Z, {onLeave: function (args) {send("??4MetricsLogSplitter@telemetry_client@@QEAAAEAV01@AEBV01@@Z");}});

var ??4TelemetryClientDecoder@telemetry_client@@QEAAAEAV01@AEBV01@@Z = Module.findExportByName("telclient.dll", "??4TelemetryClientDecoder@telemetry_client@@QEAAAEAV01@AEBV01@@Z")
Interceptor.attach(??4TelemetryClientDecoder@telemetry_client@@QEAAAEAV01@AEBV01@@Z, {onLeave: function (args) {send("??4TelemetryClientDecoder@telemetry_client@@QEAAAEAV01@AEBV01@@Z");}});

var ??_7MetricsLogSplitter@telemetry_client@@6B@ = Module.findExportByName("telclient.dll", "??_7MetricsLogSplitter@telemetry_client@@6B@")
Interceptor.attach(??_7MetricsLogSplitter@telemetry_client@@6B@, {onLeave: function (args) {send("??_7MetricsLogSplitter@telemetry_client@@6B@");}});

var ??_7TelemetryClientDecoder@telemetry_client@@6B@ = Module.findExportByName("telclient.dll", "??_7TelemetryClientDecoder@telemetry_client@@6B@")
Interceptor.attach(??_7TelemetryClientDecoder@telemetry_client@@6B@, {onLeave: function (args) {send("??_7TelemetryClientDecoder@telemetry_client@@6B@");}});

var ?AllocDecodedPayload@TelemetryClientDecoder@telemetry_client@@KA?AV?$unique_ptr@UDecodedPayload@telemetry_client@@P6AXPEBU12@@Z@__Cr@std@@XZ = Module.findExportByName("telclient.dll", "?AllocDecodedPayload@TelemetryClientDecoder@telemetry_client@@KA?AV?$unique_ptr@UDecodedPayload@telemetry_client@@P6AXPEBU12@@Z@__Cr@std@@XZ")
Interceptor.attach(?AllocDecodedPayload@TelemetryClientDecoder@telemetry_client@@KA?AV?$unique_ptr@UDecodedPayload@telemetry_client@@P6AXPEBU12@@Z@__Cr@std@@XZ, {onLeave: function (args) {send("?AllocDecodedPayload@TelemetryClientDecoder@telemetry_client@@KA?AV?$unique_ptr@UDecodedPayload@telemetry_client@@P6AXPEBU12@@Z@__Cr@std@@XZ");}});

var ?AllocLogsContainer@MetricsLogSplitter@telemetry_client@@KA?AV?$unique_ptr@V?$vector@ULogInfo@telemetry_client@@V?$allocator@ULogInfo@telemetry_client@@@__Cr@std@@@__Cr@std@@P6AXPEBV123@@Z@__Cr@std@@XZ = Module.findExportByName("telclient.dll", "?AllocLogsContainer@MetricsLogSplitter@telemetry_client@@KA?AV?$unique_ptr@V?$vector@ULogInfo@telemetry_client@@V?$allocator@ULogInfo@telemetry_client@@@__Cr@std@@@__Cr@std@@P6AXPEBV123@@Z@__Cr@std@@XZ")
Interceptor.attach(?AllocLogsContainer@MetricsLogSplitter@telemetry_client@@KA?AV?$unique_ptr@V?$vector@ULogInfo@telemetry_client@@V?$allocator@ULogInfo@telemetry_client@@@__Cr@std@@@__Cr@std@@P6AXPEBV123@@Z@__Cr@std@@XZ, {onLeave: function (args) {send("?AllocLogsContainer@MetricsLogSplitter@telemetry_client@@KA?AV?$unique_ptr@V?$vector@ULogInfo@telemetry_client@@V?$allocator@ULogInfo@telemetry_client@@@__Cr@std@@@__Cr@std@@P6AXPEBV123@@Z@__Cr@std@@XZ");}});

var CreateSplitter = Module.findExportByName("telclient.dll", "CreateSplitter")
Interceptor.attach(CreateSplitter, {onLeave: function (args) {send("CreateSplitter");}});

var CreateTelemetryClientDecoder = Module.findExportByName("telclient.dll", "CreateTelemetryClientDecoder")
Interceptor.attach(CreateTelemetryClientDecoder, {onLeave: function (args) {send("CreateTelemetryClientDecoder");}});

var DecodePayload = Module.findExportByName("telclient.dll", "DecodePayload")
Interceptor.attach(DecodePayload, {onLeave: function (args) {send("DecodePayload");}});

var DecodeUkmPayload = Module.findExportByName("telclient.dll", "DecodeUkmPayload")
Interceptor.attach(DecodeUkmPayload, {onLeave: function (args) {send("DecodeUkmPayload");}});

var DecodeUmaPayload = Module.findExportByName("telclient.dll", "DecodeUmaPayload")
Interceptor.attach(DecodeUmaPayload, {onLeave: function (args) {send("DecodeUmaPayload");}});

var FreeLogs = Module.findExportByName("telclient.dll", "FreeLogs")
Interceptor.attach(FreeLogs, {onLeave: function (args) {send("FreeLogs");}});

var FreePayload = Module.findExportByName("telclient.dll", "FreePayload")
Interceptor.attach(FreePayload, {onLeave: function (args) {send("FreePayload");}});

var FreeSplitter = Module.findExportByName("telclient.dll", "FreeSplitter")
Interceptor.attach(FreeSplitter, {onLeave: function (args) {send("FreeSplitter");}});

var FreeTelemetryClientDecoder = Module.findExportByName("telclient.dll", "FreeTelemetryClientDecoder")
Interceptor.attach(FreeTelemetryClientDecoder, {onLeave: function (args) {send("FreeTelemetryClientDecoder");}});

var FreeTelemetryClientDecoderPayload = Module.findExportByName("telclient.dll", "FreeTelemetryClientDecoderPayload")
Interceptor.attach(FreeTelemetryClientDecoderPayload, {onLeave: function (args) {send("FreeTelemetryClientDecoderPayload");}});

var GetHandleVerifier = Module.findExportByName("telclient.dll", "GetHandleVerifier")
Interceptor.attach(GetHandleVerifier, {onLeave: function (args) {send("GetHandleVerifier");}});

var OQS_CPU_has_extension = Module.findExportByName("telclient.dll", "OQS_CPU_has_extension")
Interceptor.attach(OQS_CPU_has_extension, {onLeave: function (args) {send("OQS_CPU_has_extension");}});

var OQS_KEM_alg_count = Module.findExportByName("telclient.dll", "OQS_KEM_alg_count")
Interceptor.attach(OQS_KEM_alg_count, {onLeave: function (args) {send("OQS_KEM_alg_count");}});

var OQS_KEM_alg_identifier = Module.findExportByName("telclient.dll", "OQS_KEM_alg_identifier")
Interceptor.attach(OQS_KEM_alg_identifier, {onLeave: function (args) {send("OQS_KEM_alg_identifier");}});

var OQS_KEM_alg_is_enabled = Module.findExportByName("telclient.dll", "OQS_KEM_alg_is_enabled")
Interceptor.attach(OQS_KEM_alg_is_enabled, {onLeave: function (args) {send("OQS_KEM_alg_is_enabled");}});

var OQS_KEM_decaps = Module.findExportByName("telclient.dll", "OQS_KEM_decaps")
Interceptor.attach(OQS_KEM_decaps, {onLeave: function (args) {send("OQS_KEM_decaps");}});

var OQS_KEM_encaps = Module.findExportByName("telclient.dll", "OQS_KEM_encaps")
Interceptor.attach(OQS_KEM_encaps, {onLeave: function (args) {send("OQS_KEM_encaps");}});

var OQS_KEM_free = Module.findExportByName("telclient.dll", "OQS_KEM_free")
Interceptor.attach(OQS_KEM_free, {onLeave: function (args) {send("OQS_KEM_free");}});

var OQS_KEM_keypair = Module.findExportByName("telclient.dll", "OQS_KEM_keypair")
Interceptor.attach(OQS_KEM_keypair, {onLeave: function (args) {send("OQS_KEM_keypair");}});

var OQS_KEM_kyber_768_decaps = Module.findExportByName("telclient.dll", "OQS_KEM_kyber_768_decaps")
Interceptor.attach(OQS_KEM_kyber_768_decaps, {onLeave: function (args) {send("OQS_KEM_kyber_768_decaps");}});

var OQS_KEM_kyber_768_encaps = Module.findExportByName("telclient.dll", "OQS_KEM_kyber_768_encaps")
Interceptor.attach(OQS_KEM_kyber_768_encaps, {onLeave: function (args) {send("OQS_KEM_kyber_768_encaps");}});

var OQS_KEM_kyber_768_keypair = Module.findExportByName("telclient.dll", "OQS_KEM_kyber_768_keypair")
Interceptor.attach(OQS_KEM_kyber_768_keypair, {onLeave: function (args) {send("OQS_KEM_kyber_768_keypair");}});

var OQS_KEM_new = Module.findExportByName("telclient.dll", "OQS_KEM_new")
Interceptor.attach(OQS_KEM_new, {onLeave: function (args) {send("OQS_KEM_new");}});

var OQS_MEM_cleanse = Module.findExportByName("telclient.dll", "OQS_MEM_cleanse")
Interceptor.attach(OQS_MEM_cleanse, {onLeave: function (args) {send("OQS_MEM_cleanse");}});

var OQS_MEM_insecure_free = Module.findExportByName("telclient.dll", "OQS_MEM_insecure_free")
Interceptor.attach(OQS_MEM_insecure_free, {onLeave: function (args) {send("OQS_MEM_insecure_free");}});

var OQS_MEM_secure_bcmp = Module.findExportByName("telclient.dll", "OQS_MEM_secure_bcmp")
Interceptor.attach(OQS_MEM_secure_bcmp, {onLeave: function (args) {send("OQS_MEM_secure_bcmp");}});

var OQS_MEM_secure_free = Module.findExportByName("telclient.dll", "OQS_MEM_secure_free")
Interceptor.attach(OQS_MEM_secure_free, {onLeave: function (args) {send("OQS_MEM_secure_free");}});

var OQS_SIG_alg_count = Module.findExportByName("telclient.dll", "OQS_SIG_alg_count")
Interceptor.attach(OQS_SIG_alg_count, {onLeave: function (args) {send("OQS_SIG_alg_count");}});

var OQS_SIG_alg_identifier = Module.findExportByName("telclient.dll", "OQS_SIG_alg_identifier")
Interceptor.attach(OQS_SIG_alg_identifier, {onLeave: function (args) {send("OQS_SIG_alg_identifier");}});

var OQS_SIG_alg_is_enabled = Module.findExportByName("telclient.dll", "OQS_SIG_alg_is_enabled")
Interceptor.attach(OQS_SIG_alg_is_enabled, {onLeave: function (args) {send("OQS_SIG_alg_is_enabled");}});

var OQS_SIG_free = Module.findExportByName("telclient.dll", "OQS_SIG_free")
Interceptor.attach(OQS_SIG_free, {onLeave: function (args) {send("OQS_SIG_free");}});

var OQS_SIG_keypair = Module.findExportByName("telclient.dll", "OQS_SIG_keypair")
Interceptor.attach(OQS_SIG_keypair, {onLeave: function (args) {send("OQS_SIG_keypair");}});

var OQS_SIG_new = Module.findExportByName("telclient.dll", "OQS_SIG_new")
Interceptor.attach(OQS_SIG_new, {onLeave: function (args) {send("OQS_SIG_new");}});

var OQS_SIG_sign = Module.findExportByName("telclient.dll", "OQS_SIG_sign")
Interceptor.attach(OQS_SIG_sign, {onLeave: function (args) {send("OQS_SIG_sign");}});

var OQS_SIG_verify = Module.findExportByName("telclient.dll", "OQS_SIG_verify")
Interceptor.attach(OQS_SIG_verify, {onLeave: function (args) {send("OQS_SIG_verify");}});

var OQS_init = Module.findExportByName("telclient.dll", "OQS_init")
Interceptor.attach(OQS_init, {onLeave: function (args) {send("OQS_init");}});

var OQS_randombytes = Module.findExportByName("telclient.dll", "OQS_randombytes")
Interceptor.attach(OQS_randombytes, {onLeave: function (args) {send("OQS_randombytes");}});

var OQS_randombytes_custom_algorithm = Module.findExportByName("telclient.dll", "OQS_randombytes_custom_algorithm")
Interceptor.attach(OQS_randombytes_custom_algorithm, {onLeave: function (args) {send("OQS_randombytes_custom_algorithm");}});

var OQS_randombytes_nist_kat_init_256bit = Module.findExportByName("telclient.dll", "OQS_randombytes_nist_kat_init_256bit")
Interceptor.attach(OQS_randombytes_nist_kat_init_256bit, {onLeave: function (args) {send("OQS_randombytes_nist_kat_init_256bit");}});

var OQS_randombytes_switch_algorithm = Module.findExportByName("telclient.dll", "OQS_randombytes_switch_algorithm")
Interceptor.attach(OQS_randombytes_switch_algorithm, {onLeave: function (args) {send("OQS_randombytes_switch_algorithm");}});

var OQS_version = Module.findExportByName("telclient.dll", "OQS_version")
Interceptor.attach(OQS_version, {onLeave: function (args) {send("OQS_version");}});

