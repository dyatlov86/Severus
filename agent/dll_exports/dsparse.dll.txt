var DsCrackSpn2A = Module.findExportByName("dsparse.dll", "DsCrackSpn2A")
Interceptor.attach(DsCrackSpn2A, {onLeave: function (args) {send("DsCrackSpn2A");}});

var DsCrackSpn2W = Module.findExportByName("dsparse.dll", "DsCrackSpn2W")
Interceptor.attach(DsCrackSpn2W, {onLeave: function (args) {send("DsCrackSpn2W");}});

var DsCrackSpn3W = Module.findExportByName("dsparse.dll", "DsCrackSpn3W")
Interceptor.attach(DsCrackSpn3W, {onLeave: function (args) {send("DsCrackSpn3W");}});

var DsCrackSpn4W = Module.findExportByName("dsparse.dll", "DsCrackSpn4W")
Interceptor.attach(DsCrackSpn4W, {onLeave: function (args) {send("DsCrackSpn4W");}});

var DsCrackSpnA = Module.findExportByName("dsparse.dll", "DsCrackSpnA")
Interceptor.attach(DsCrackSpnA, {onLeave: function (args) {send("DsCrackSpnA");}});

var DsCrackSpnW = Module.findExportByName("dsparse.dll", "DsCrackSpnW")
Interceptor.attach(DsCrackSpnW, {onLeave: function (args) {send("DsCrackSpnW");}});

var DsCrackUnquotedMangledRdnA = Module.findExportByName("dsparse.dll", "DsCrackUnquotedMangledRdnA")
Interceptor.attach(DsCrackUnquotedMangledRdnA, {onLeave: function (args) {send("DsCrackUnquotedMangledRdnA");}});

var DsCrackUnquotedMangledRdnW = Module.findExportByName("dsparse.dll", "DsCrackUnquotedMangledRdnW")
Interceptor.attach(DsCrackUnquotedMangledRdnW, {onLeave: function (args) {send("DsCrackUnquotedMangledRdnW");}});

var DsGetRdnW = Module.findExportByName("dsparse.dll", "DsGetRdnW")
Interceptor.attach(DsGetRdnW, {onLeave: function (args) {send("DsGetRdnW");}});

var DsIsMangledDnA = Module.findExportByName("dsparse.dll", "DsIsMangledDnA")
Interceptor.attach(DsIsMangledDnA, {onLeave: function (args) {send("DsIsMangledDnA");}});

var DsIsMangledDnW = Module.findExportByName("dsparse.dll", "DsIsMangledDnW")
Interceptor.attach(DsIsMangledDnW, {onLeave: function (args) {send("DsIsMangledDnW");}});

var DsIsMangledRdnValueA = Module.findExportByName("dsparse.dll", "DsIsMangledRdnValueA")
Interceptor.attach(DsIsMangledRdnValueA, {onLeave: function (args) {send("DsIsMangledRdnValueA");}});

var DsIsMangledRdnValueW = Module.findExportByName("dsparse.dll", "DsIsMangledRdnValueW")
Interceptor.attach(DsIsMangledRdnValueW, {onLeave: function (args) {send("DsIsMangledRdnValueW");}});

var DsMakeSpn2W = Module.findExportByName("dsparse.dll", "DsMakeSpn2W")
Interceptor.attach(DsMakeSpn2W, {onLeave: function (args) {send("DsMakeSpn2W");}});

var DsMakeSpnA = Module.findExportByName("dsparse.dll", "DsMakeSpnA")
Interceptor.attach(DsMakeSpnA, {onLeave: function (args) {send("DsMakeSpnA");}});

var DsMakeSpnW = Module.findExportByName("dsparse.dll", "DsMakeSpnW")
Interceptor.attach(DsMakeSpnW, {onLeave: function (args) {send("DsMakeSpnW");}});

var DsQuoteRdnValueA = Module.findExportByName("dsparse.dll", "DsQuoteRdnValueA")
Interceptor.attach(DsQuoteRdnValueA, {onLeave: function (args) {send("DsQuoteRdnValueA");}});

var DsQuoteRdnValueW = Module.findExportByName("dsparse.dll", "DsQuoteRdnValueW")
Interceptor.attach(DsQuoteRdnValueW, {onLeave: function (args) {send("DsQuoteRdnValueW");}});

var DsUnquoteRdnValueA = Module.findExportByName("dsparse.dll", "DsUnquoteRdnValueA")
Interceptor.attach(DsUnquoteRdnValueA, {onLeave: function (args) {send("DsUnquoteRdnValueA");}});

var DsUnquoteRdnValueW = Module.findExportByName("dsparse.dll", "DsUnquoteRdnValueW")
Interceptor.attach(DsUnquoteRdnValueW, {onLeave: function (args) {send("DsUnquoteRdnValueW");}});

