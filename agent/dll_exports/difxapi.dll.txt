var DIFXAPISetLogCallbackA = Module.findExportByName("difxapi.dll", "DIFXAPISetLogCallbackA")
Interceptor.attach(DIFXAPISetLogCallbackA, {onLeave: function (args) {send("DIFXAPISetLogCallbackA");}});

var DIFXAPISetLogCallbackW = Module.findExportByName("difxapi.dll", "DIFXAPISetLogCallbackW")
Interceptor.attach(DIFXAPISetLogCallbackW, {onLeave: function (args) {send("DIFXAPISetLogCallbackW");}});

var DriverPackageGetPathA = Module.findExportByName("difxapi.dll", "DriverPackageGetPathA")
Interceptor.attach(DriverPackageGetPathA, {onLeave: function (args) {send("DriverPackageGetPathA");}});

var DriverPackageGetPathW = Module.findExportByName("difxapi.dll", "DriverPackageGetPathW")
Interceptor.attach(DriverPackageGetPathW, {onLeave: function (args) {send("DriverPackageGetPathW");}});

var DriverPackageInstallA = Module.findExportByName("difxapi.dll", "DriverPackageInstallA")
Interceptor.attach(DriverPackageInstallA, {onLeave: function (args) {send("DriverPackageInstallA");}});

var DriverPackageInstallW = Module.findExportByName("difxapi.dll", "DriverPackageInstallW")
Interceptor.attach(DriverPackageInstallW, {onLeave: function (args) {send("DriverPackageInstallW");}});

var DriverPackagePreinstallA = Module.findExportByName("difxapi.dll", "DriverPackagePreinstallA")
Interceptor.attach(DriverPackagePreinstallA, {onLeave: function (args) {send("DriverPackagePreinstallA");}});

var DriverPackagePreinstallW = Module.findExportByName("difxapi.dll", "DriverPackagePreinstallW")
Interceptor.attach(DriverPackagePreinstallW, {onLeave: function (args) {send("DriverPackagePreinstallW");}});

var DriverPackageUninstallA = Module.findExportByName("difxapi.dll", "DriverPackageUninstallA")
Interceptor.attach(DriverPackageUninstallA, {onLeave: function (args) {send("DriverPackageUninstallA");}});

var DriverPackageUninstallW = Module.findExportByName("difxapi.dll", "DriverPackageUninstallW")
Interceptor.attach(DriverPackageUninstallW, {onLeave: function (args) {send("DriverPackageUninstallW");}});

var SetDifxLogCallbackA = Module.findExportByName("difxapi.dll", "SetDifxLogCallbackA")
Interceptor.attach(SetDifxLogCallbackA, {onLeave: function (args) {send("SetDifxLogCallbackA");}});

var SetDifxLogCallbackW = Module.findExportByName("difxapi.dll", "SetDifxLogCallbackW")
Interceptor.attach(SetDifxLogCallbackW, {onLeave: function (args) {send("SetDifxLogCallbackW");}});

