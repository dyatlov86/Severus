var ??0CRDPCache@@QEAA@XZ = Module.findExportByName("rdpbase.dll", "??0CRDPCache@@QEAA@XZ")
Interceptor.attach(??0CRDPCache@@QEAA@XZ, {onLeave: function (args) {send("??0CRDPCache@@QEAA@XZ");}});

var ??0CRDPENCONResolver@@QEAA@XZ = Module.findExportByName("rdpbase.dll", "??0CRDPENCONResolver@@QEAA@XZ")
Interceptor.attach(??0CRDPENCONResolver@@QEAA@XZ, {onLeave: function (args) {send("??0CRDPENCONResolver@@QEAA@XZ");}});

var ??0NSCodecDecompressor@@QEAA@_N@Z = Module.findExportByName("rdpbase.dll", "??0NSCodecDecompressor@@QEAA@_N@Z")
Interceptor.attach(??0NSCodecDecompressor@@QEAA@_N@Z, {onLeave: function (args) {send("??0NSCodecDecompressor@@QEAA@_N@Z");}});

var ??0PipeETWEvents@@QEAA@XZ = Module.findExportByName("rdpbase.dll", "??0PipeETWEvents@@QEAA@XZ")
Interceptor.attach(??0PipeETWEvents@@QEAA@XZ, {onLeave: function (args) {send("??0PipeETWEvents@@QEAA@XZ");}});

var ??0RdpEncodeBuffer@@QEAA@PEAVITSObjectPool@@@Z = Module.findExportByName("rdpbase.dll", "??0RdpEncodeBuffer@@QEAA@PEAVITSObjectPool@@@Z")
Interceptor.attach(??0RdpEncodeBuffer@@QEAA@PEAVITSObjectPool@@@Z, {onLeave: function (args) {send("??0RdpEncodeBuffer@@QEAA@PEAVITSObjectPool@@@Z");}});

var ??0RdpGfxProtocolBaseDecoder@@IEAA@XZ = Module.findExportByName("rdpbase.dll", "??0RdpGfxProtocolBaseDecoder@@IEAA@XZ")
Interceptor.attach(??0RdpGfxProtocolBaseDecoder@@IEAA@XZ, {onLeave: function (args) {send("??0RdpGfxProtocolBaseDecoder@@IEAA@XZ");}});

var ??0SSECBCHash2@@QEAA@XZ = Module.findExportByName("rdpbase.dll", "??0SSECBCHash2@@QEAA@XZ")
Interceptor.attach(??0SSECBCHash2@@QEAA@XZ, {onLeave: function (args) {send("??0SSECBCHash2@@QEAA@XZ");}});

var ??1CRDPCache@@UEAA@XZ = Module.findExportByName("rdpbase.dll", "??1CRDPCache@@UEAA@XZ")
Interceptor.attach(??1CRDPCache@@UEAA@XZ, {onLeave: function (args) {send("??1CRDPCache@@UEAA@XZ");}});

var ??1CRDPENCONResolver@@QEAA@XZ = Module.findExportByName("rdpbase.dll", "??1CRDPENCONResolver@@QEAA@XZ")
Interceptor.attach(??1CRDPENCONResolver@@QEAA@XZ, {onLeave: function (args) {send("??1CRDPENCONResolver@@QEAA@XZ");}});

var ??1Evict@@QEAA@XZ = Module.findExportByName("rdpbase.dll", "??1Evict@@QEAA@XZ")
Interceptor.attach(??1Evict@@QEAA@XZ, {onLeave: function (args) {send("??1Evict@@QEAA@XZ");}});

var ??1RdpGfxProtocolBaseDecoder@@IEAA@XZ = Module.findExportByName("rdpbase.dll", "??1RdpGfxProtocolBaseDecoder@@IEAA@XZ")
Interceptor.attach(??1RdpGfxProtocolBaseDecoder@@IEAA@XZ, {onLeave: function (args) {send("??1RdpGfxProtocolBaseDecoder@@IEAA@XZ");}});

var ?AddConnection@CRDPENCONResolver@@QEAAJPEAGKH@Z = Module.findExportByName("rdpbase.dll", "?AddConnection@CRDPENCONResolver@@QEAAJPEAGKH@Z")
Interceptor.attach(?AddConnection@CRDPENCONResolver@@QEAAJPEAGKH@Z, {onLeave: function (args) {send("?AddConnection@CRDPENCONResolver@@QEAAJPEAGKH@Z");}});

var ?AddPortMapping@CRDPENCConnectorStringSerializer@@UEAAJPEAGK@Z = Module.findExportByName("rdpbase.dll", "?AddPortMapping@CRDPENCConnectorStringSerializer@@UEAAJPEAGK@Z")
Interceptor.attach(?AddPortMapping@CRDPENCConnectorStringSerializer@@UEAAJPEAGK@Z, {onLeave: function (args) {send("?AddPortMapping@CRDPENCConnectorStringSerializer@@UEAAJPEAGK@Z");}});

var ?AlphaCompressor__CreateInstance@@YAJPEAPEAUIRdpImageCompressor@@@Z = Module.findExportByName("rdpbase.dll", "?AlphaCompressor__CreateInstance@@YAJPEAPEAUIRdpImageCompressor@@@Z")
Interceptor.attach(?AlphaCompressor__CreateInstance@@YAJPEAPEAUIRdpImageCompressor@@@Z, {onLeave: function (args) {send("?AlphaCompressor__CreateInstance@@YAJPEAPEAUIRdpImageCompressor@@@Z");}});

var ?ClearCache@CRDPCache@@UEAAJXZ = Module.findExportByName("rdpbase.dll", "?ClearCache@CRDPCache@@UEAAJXZ")
Interceptor.attach(?ClearCache@CRDPCache@@UEAAJXZ, {onLeave: function (args) {send("?ClearCache@CRDPCache@@UEAAJXZ");}});

var ?Compress@NSCodecCompressor@@QEAA_NAEBVPixelMap@@_NPEAEIAEAI@Z = Module.findExportByName("rdpbase.dll", "?Compress@NSCodecCompressor@@QEAA_NAEBVPixelMap@@_NPEAEIAEAI@Z")
Interceptor.attach(?Compress@NSCodecCompressor@@QEAA_NAEBVPixelMap@@_NPEAEIAEAI@Z, {onLeave: function (args) {send("?Compress@NSCodecCompressor@@QEAA_NAEBVPixelMap@@_NPEAEIAEAI@Z");}});

var ?CompressRdp8__CreateInstance@@YAJPEAPEAVIRdpPipeCompress@@I@Z = Module.findExportByName("rdpbase.dll", "?CompressRdp8__CreateInstance@@YAJPEAPEAVIRdpPipeCompress@@I@Z")
Interceptor.attach(?CompressRdp8__CreateInstance@@YAJPEAPEAVIRdpPipeCompress@@I@Z, {onLeave: function (args) {send("?CompressRdp8__CreateInstance@@YAJPEAPEAVIRdpPipeCompress@@I@Z");}});

var ?CreateInstance@CRDPENCONPort@@SAJPEAUaddrinfo@@HPEAXPEAPEAV1@@Z = Module.findExportByName("rdpbase.dll", "?CreateInstance@CRDPENCONPort@@SAJPEAUaddrinfo@@HPEAXPEAPEAV1@@Z")
Interceptor.attach(?CreateInstance@CRDPENCONPort@@SAJPEAUaddrinfo@@HPEAXPEAPEAV1@@Z, {onLeave: function (args) {send("?CreateInstance@CRDPENCONPort@@SAJPEAUaddrinfo@@HPEAXPEAPEAV1@@Z");}});

var ?CreateInstance@CRdpGfxCapsSet@@SAJPEAXKPEAPEAUIRdpGfxCapsSet@@@Z = Module.findExportByName("rdpbase.dll", "?CreateInstance@CRdpGfxCapsSet@@SAJPEAXKPEAPEAUIRdpGfxCapsSet@@@Z")
Interceptor.attach(?CreateInstance@CRdpGfxCapsSet@@SAJPEAXKPEAPEAUIRdpGfxCapsSet@@@Z, {onLeave: function (args) {send("?CreateInstance@CRdpGfxCapsSet@@SAJPEAXKPEAPEAUIRdpGfxCapsSet@@@Z");}});

var ?CreateInstance@Evict@@SAJKKKKKPEAPEAV1@@Z = Module.findExportByName("rdpbase.dll", "?CreateInstance@Evict@@SAJKKKKKPEAPEAV1@@Z")
Interceptor.attach(?CreateInstance@Evict@@SAJKKKKKPEAPEAV1@@Z, {onLeave: function (args) {send("?CreateInstance@Evict@@SAJKKKKKPEAPEAV1@@Z");}});

var ?CreateInstance@HashTable@@SAJKKPEAPEAUIHashBucket@@@Z = Module.findExportByName("rdpbase.dll", "?CreateInstance@HashTable@@SAJKKPEAPEAUIHashBucket@@@Z")
Interceptor.attach(?CreateInstance@HashTable@@SAJKKPEAPEAUIHashBucket@@@Z, {onLeave: function (args) {send("?CreateInstance@HashTable@@SAJKKPEAPEAUIHashBucket@@@Z");}});

var ?CreateInstance@NSCodecCompressor@@SA_N_N00EAEAV?$TCntPtr@VNSCodecCompressor@@@@@Z = Module.findExportByName("rdpbase.dll", "?CreateInstance@NSCodecCompressor@@SA_N_N00EAEAV?$TCntPtr@VNSCodecCompressor@@@@@Z")
Interceptor.attach(?CreateInstance@NSCodecCompressor@@SA_N_N00EAEAV?$TCntPtr@VNSCodecCompressor@@@@@Z, {onLeave: function (args) {send("?CreateInstance@NSCodecCompressor@@SA_N_N00EAEAV?$TCntPtr@VNSCodecCompressor@@@@@Z");}});

var ?CreateInstance@PlanarCompressor@@SAJGGEHHHPEAPEAUIRdpImageCompressor@@@Z = Module.findExportByName("rdpbase.dll", "?CreateInstance@PlanarCompressor@@SAJGGEHHHPEAPEAUIRdpImageCompressor@@@Z")
Interceptor.attach(?CreateInstance@PlanarCompressor@@SAJGGEHHHPEAPEAUIRdpImageCompressor@@@Z, {onLeave: function (args) {send("?CreateInstance@PlanarCompressor@@SAJGGEHHHPEAPEAUIRdpImageCompressor@@@Z");}});

var ?CreateInstance@RdpEncodeBuffer@@SAJPEAVRdpEncodeBufferPool@@KPEAPEAV1@@Z = Module.findExportByName("rdpbase.dll", "?CreateInstance@RdpEncodeBuffer@@SAJPEAVRdpEncodeBufferPool@@KPEAPEAV1@@Z")
Interceptor.attach(?CreateInstance@RdpEncodeBuffer@@SAJPEAVRdpEncodeBufferPool@@KPEAPEAV1@@Z, {onLeave: function (args) {send("?CreateInstance@RdpEncodeBuffer@@SAJPEAVRdpEncodeBufferPool@@KPEAPEAV1@@Z");}});

var ?Decompress@NSCodecDecompressor@@QEAA_NPEBEIAEAVPixelMap@@@Z = Module.findExportByName("rdpbase.dll", "?Decompress@NSCodecDecompressor@@QEAA_NPEBEIAEAVPixelMap@@@Z")
Interceptor.attach(?Decompress@NSCodecDecompressor@@QEAA_NPEBEIAEAVPixelMap@@@Z, {onLeave: function (args) {send("?Decompress@NSCodecDecompressor@@QEAA_NPEBEIAEAVPixelMap@@@Z");}});

var ?DecompressRdp8__CreateInstance@@YAJPEAPEAVIRdpPipeDecompress@@@Z = Module.findExportByName("rdpbase.dll", "?DecompressRdp8__CreateInstance@@YAJPEAPEAVIRdpPipeDecompress@@@Z")
Interceptor.attach(?DecompressRdp8__CreateInstance@@YAJPEAPEAVIRdpPipeDecompress@@@Z, {onLeave: function (args) {send("?DecompressRdp8__CreateInstance@@YAJPEAPEAVIRdpPipeDecompress@@@Z");}});

var ?Enable@PipeETWEvents@@UEAAJKK@Z = Module.findExportByName("rdpbase.dll", "?Enable@PipeETWEvents@@UEAAJKK@Z")
Interceptor.attach(?Enable@PipeETWEvents@@UEAAJKK@Z, {onLeave: function (args) {send("?Enable@PipeETWEvents@@UEAAJKK@Z");}});

var ?EvictEntry@Evict@@QEAAPEAU_SCORE_ENTRY@@XZ = Module.findExportByName("rdpbase.dll", "?EvictEntry@Evict@@QEAAPEAU_SCORE_ENTRY@@XZ")
Interceptor.attach(?EvictEntry@Evict@@QEAAPEAU_SCORE_ENTRY@@XZ, {onLeave: function (args) {send("?EvictEntry@Evict@@QEAAPEAU_SCORE_ENTRY@@XZ");}});

var ?FakeSleep@PipelineClock@@QEAAX_K@Z = Module.findExportByName("rdpbase.dll", "?FakeSleep@PipelineClock@@QEAAX_K@Z")
Interceptor.attach(?FakeSleep@PipelineClock@@QEAAX_K@Z, {onLeave: function (args) {send("?FakeSleep@PipelineClock@@QEAAX_K@Z");}});

var ?GetFreeEntry@Evict@@QEAAPEAU_SCORE_ENTRY@@XZ = Module.findExportByName("rdpbase.dll", "?GetFreeEntry@Evict@@QEAAPEAU_SCORE_ENTRY@@XZ")
Interceptor.attach(?GetFreeEntry@Evict@@QEAAPEAU_SCORE_ENTRY@@XZ, {onLeave: function (args) {send("?GetFreeEntry@Evict@@QEAAPEAU_SCORE_ENTRY@@XZ");}});

var ?GetInstance@PipelineClock@@SAAEAV1@XZ = Module.findExportByName("rdpbase.dll", "?GetInstance@PipelineClock@@SAAEAV1@XZ")
Interceptor.attach(?GetInstance@PipelineClock@@SAAEAV1@XZ, {onLeave: function (args) {send("?GetInstance@PipelineClock@@SAAEAV1@XZ");}});

var ?GetMillisecondCount64@PipelineClock@@QEAA_KXZ = Module.findExportByName("rdpbase.dll", "?GetMillisecondCount64@PipelineClock@@QEAA_KXZ")
Interceptor.attach(?GetMillisecondCount64@PipelineClock@@QEAA_KXZ, {onLeave: function (args) {send("?GetMillisecondCount64@PipelineClock@@QEAA_KXZ");}});

var ?GetMillisecondCount@PipelineClock@@QEAAIXZ = Module.findExportByName("rdpbase.dll", "?GetMillisecondCount@PipelineClock@@QEAAIXZ")
Interceptor.attach(?GetMillisecondCount@PipelineClock@@QEAAIXZ, {onLeave: function (args) {send("?GetMillisecondCount@PipelineClock@@QEAAIXZ");}});

var ?GetNext@CRDPENCONIPHelper@@QEAAPEAU_SOCKET_ADDRESS@@XZ = Module.findExportByName("rdpbase.dll", "?GetNext@CRDPENCONIPHelper@@QEAAPEAU_SOCKET_ADDRESS@@XZ")
Interceptor.attach(?GetNext@CRDPENCONIPHelper@@QEAAPEAU_SOCKET_ADDRESS@@XZ, {onLeave: function (args) {send("?GetNext@CRDPENCONIPHelper@@QEAAPEAU_SOCKET_ADDRESS@@XZ");}});

var ?GetNext@CRDPENCONResolver@@QEAAHPEAPEAUsockaddr@@PEA_K@Z = Module.findExportByName("rdpbase.dll", "?GetNext@CRDPENCONResolver@@QEAAHPEAPEAUsockaddr@@PEA_K@Z")
Interceptor.attach(?GetNext@CRDPENCONResolver@@QEAAHPEAPEAUsockaddr@@PEA_K@Z, {onLeave: function (args) {send("?GetNext@CRDPENCONResolver@@QEAAHPEAPEAUsockaddr@@PEA_K@Z");}});

var ?GetPortMapping@CRDPENCConnectorStringDeserializer@@QEAAJKPEAPEAGPEAK@Z = Module.findExportByName("rdpbase.dll", "?GetPortMapping@CRDPENCConnectorStringDeserializer@@QEAAJKPEAPEAGPEAK@Z")
Interceptor.attach(?GetPortMapping@CRDPENCConnectorStringDeserializer@@QEAAJKPEAPEAGPEAK@Z, {onLeave: function (args) {send("?GetPortMapping@CRDPENCConnectorStringDeserializer@@QEAAJKPEAPEAGPEAK@Z");}});

var ?GetTickCount@PipelineClock@@QEAAIXZ = Module.findExportByName("rdpbase.dll", "?GetTickCount@PipelineClock@@QEAAIXZ")
Interceptor.attach(?GetTickCount@PipelineClock@@QEAAIXZ, {onLeave: function (args) {send("?GetTickCount@PipelineClock@@QEAAIXZ");}});

var ?GetTimeHNS@PipelineClock@@QEAA_JXZ = Module.findExportByName("rdpbase.dll", "?GetTimeHNS@PipelineClock@@QEAA_JXZ")
Interceptor.attach(?GetTimeHNS@PipelineClock@@QEAA_JXZ, {onLeave: function (args) {send("?GetTimeHNS@PipelineClock@@QEAA_JXZ");}});

var ?HintCoconet__CreateInstance@@YAJPEAPEAVIRdpPipeCompressHintProvider@@@Z = Module.findExportByName("rdpbase.dll", "?HintCoconet__CreateInstance@@YAJPEAPEAVIRdpPipeCompressHintProvider@@@Z")
Interceptor.attach(?HintCoconet__CreateInstance@@YAJPEAPEAVIRdpPipeCompressHintProvider@@@Z, {onLeave: function (args) {send("?HintCoconet__CreateInstance@@YAJPEAPEAVIRdpPipeCompressHintProvider@@@Z");}});

var ?Initialize@CRDPENCONIPHelper@@QEAAJKHPEAG@Z = Module.findExportByName("rdpbase.dll", "?Initialize@CRDPENCONIPHelper@@QEAAJKHPEAG@Z")
Interceptor.attach(?Initialize@CRDPENCONIPHelper@@QEAAJKHPEAG@Z, {onLeave: function (args) {send("?Initialize@CRDPENCONIPHelper@@QEAAJKHPEAG@Z");}});

var ?Initialize@PipeETWEvents@@UEAAJPEAUIUnknown@@@Z = Module.findExportByName("rdpbase.dll", "?Initialize@PipeETWEvents@@UEAAJPEAUIUnknown@@@Z")
Interceptor.attach(?Initialize@PipeETWEvents@@UEAAJPEAUIUnknown@@@Z, {onLeave: function (args) {send("?Initialize@PipeETWEvents@@UEAAJPEAUIUnknown@@@Z");}});

var ?InitializeInstance@CRDPENCConnectorStringSerializer@@UEAAJXZ = Module.findExportByName("rdpbase.dll", "?InitializeInstance@CRDPENCConnectorStringSerializer@@UEAAJXZ")
Interceptor.attach(?InitializeInstance@CRDPENCConnectorStringSerializer@@UEAAJXZ, {onLeave: function (args) {send("?InitializeInstance@CRDPENCConnectorStringSerializer@@UEAAJXZ");}});

var ?InsertEntry@Evict@@QEAAXPEAU_SCORE_ENTRY@@K@Z = Module.findExportByName("rdpbase.dll", "?InsertEntry@Evict@@QEAAXPEAU_SCORE_ENTRY@@K@Z")
Interceptor.attach(?InsertEntry@Evict@@QEAAXPEAU_SCORE_ENTRY@@K@Z, {onLeave: function (args) {send("?InsertEntry@Evict@@QEAAXPEAU_SCORE_ENTRY@@K@Z");}});

var ?IsSupportedVersion@CRdpGfxCaps@@SAHK@Z = Module.findExportByName("rdpbase.dll", "?IsSupportedVersion@CRdpGfxCaps@@SAHK@Z")
Interceptor.attach(?IsSupportedVersion@CRdpGfxCaps@@SAHK@Z, {onLeave: function (args) {send("?IsSupportedVersion@CRdpGfxCaps@@SAHK@Z");}});

var ?IsTestMode@PipelineClock@@QEAA_NXZ = Module.findExportByName("rdpbase.dll", "?IsTestMode@PipelineClock@@QEAA_NXZ")
Interceptor.attach(?IsTestMode@PipelineClock@@QEAA_NXZ, {onLeave: function (args) {send("?IsTestMode@PipelineClock@@QEAA_NXZ");}});

var ?NSRunLengthDecode@@YAKPEBEKPEAEK@Z = Module.findExportByName("rdpbase.dll", "?NSRunLengthDecode@@YAKPEBEKPEAEK@Z")
Interceptor.attach(?NSRunLengthDecode@@YAKPEBEKPEAEK@Z, {onLeave: function (args) {send("?NSRunLengthDecode@@YAKPEBEKPEAEK@Z");}});

var ?PAL_System_Win32_IsRunningInAppContainer@@YAHXZ = Module.findExportByName("rdpbase.dll", "?PAL_System_Win32_IsRunningInAppContainer@@YAHXZ")
Interceptor.attach(?PAL_System_Win32_IsRunningInAppContainer@@YAHXZ, {onLeave: function (args) {send("?PAL_System_Win32_IsRunningInAppContainer@@YAHXZ");}});

var ?ParkEntry@Evict@@QEAAXPEAU_SCORE_ENTRY@@@Z = Module.findExportByName("rdpbase.dll", "?ParkEntry@Evict@@QEAAXPEAU_SCORE_ENTRY@@@Z")
Interceptor.attach(?ParkEntry@Evict@@QEAAXPEAU_SCORE_ENTRY@@@Z, {onLeave: function (args) {send("?ParkEntry@Evict@@QEAAXPEAU_SCORE_ENTRY@@@Z");}});

var ?ProcessAlignedData_AVX@SSECBCHash2@@AEAAXPEBIIII@Z = Module.findExportByName("rdpbase.dll", "?ProcessAlignedData_AVX@SSECBCHash2@@AEAAXPEBIIII@Z")
Interceptor.attach(?ProcessAlignedData_AVX@SSECBCHash2@@AEAAXPEBIIII@Z, {onLeave: function (args) {send("?ProcessAlignedData_AVX@SSECBCHash2@@AEAAXPEBIIII@Z");}});

var ?ProcessAlignedData_SSE2@SSECBCHash2@@AEAAXPEBIIII@Z = Module.findExportByName("rdpbase.dll", "?ProcessAlignedData_SSE2@SSECBCHash2@@AEAAXPEBIIII@Z")
Interceptor.attach(?ProcessAlignedData_SSE2@SSECBCHash2@@AEAAXPEBIIII@Z, {onLeave: function (args) {send("?ProcessAlignedData_SSE2@SSECBCHash2@@AEAAXPEBIIII@Z");}});

var ?ProcessAlignedData_SSE41@SSECBCHash2@@AEAAXPEBIIII@Z = Module.findExportByName("rdpbase.dll", "?ProcessAlignedData_SSE41@SSECBCHash2@@AEAAXPEBIIII@Z")
Interceptor.attach(?ProcessAlignedData_SSE41@SSECBCHash2@@AEAAXPEBIIII@Z, {onLeave: function (args) {send("?ProcessAlignedData_SSE41@SSECBCHash2@@AEAAXPEBIIII@Z");}});

var ?ProcessUnalignedData_REG@SSECBCHash2@@AEAAXPEBIIII@Z = Module.findExportByName("rdpbase.dll", "?ProcessUnalignedData_REG@SSECBCHash2@@AEAAXPEBIIII@Z")
Interceptor.attach(?ProcessUnalignedData_REG@SSECBCHash2@@AEAAXPEBIIII@Z, {onLeave: function (args) {send("?ProcessUnalignedData_REG@SSECBCHash2@@AEAAXPEBIIII@Z");}});

var ?PromoteEntry@Evict@@QEAAXKK@Z = Module.findExportByName("rdpbase.dll", "?PromoteEntry@Evict@@QEAAXKK@Z")
Interceptor.attach(?PromoteEntry@Evict@@QEAAXKK@Z, {onLeave: function (args) {send("?PromoteEntry@Evict@@QEAAXKK@Z");}});

var ?RdpGfxProtocolServerEncoder_CreateInstance@@YAJPEAVIRdpEncoderIO@@PEAPEAVIRdpPipeProtocolEncoderEx@@@Z = Module.findExportByName("rdpbase.dll", "?RdpGfxProtocolServerEncoder_CreateInstance@@YAJPEAVIRdpEncoderIO@@PEAPEAVIRdpPipeProtocolEncoderEx@@@Z")
Interceptor.attach(?RdpGfxProtocolServerEncoder_CreateInstance@@YAJPEAVIRdpEncoderIO@@PEAPEAVIRdpPipeProtocolEncoderEx@@@Z, {onLeave: function (args) {send("?RdpGfxProtocolServerEncoder_CreateInstance@@YAJPEAVIRdpEncoderIO@@PEAPEAVIRdpPipeProtocolEncoderEx@@@Z");}});

var ?RdpPerfLoggerStaticInitialize@@YAXXZ = Module.findExportByName("rdpbase.dll", "?RdpPerfLoggerStaticInitialize@@YAXXZ")
Interceptor.attach(?RdpPerfLoggerStaticInitialize@@YAXXZ, {onLeave: function (args) {send("?RdpPerfLoggerStaticInitialize@@YAXXZ");}});

var ?RdpPerfLoggerStaticTerminate@@YAXXZ = Module.findExportByName("rdpbase.dll", "?RdpPerfLoggerStaticTerminate@@YAXXZ")
Interceptor.attach(?RdpPerfLoggerStaticTerminate@@YAXXZ, {onLeave: function (args) {send("?RdpPerfLoggerStaticTerminate@@YAXXZ");}});

var ?Reset@CRDPCache@@UEAAJI@Z = Module.findExportByName("rdpbase.dll", "?Reset@CRDPCache@@UEAAJI@Z")
Interceptor.attach(?Reset@CRDPCache@@UEAAJI@Z, {onLeave: function (args) {send("?Reset@CRDPCache@@UEAAJI@Z");}});

var ?SearchCache@CRDPCache@@UEAAJIIPEAPEAUIUnknown@@PEAI@Z = Module.findExportByName("rdpbase.dll", "?SearchCache@CRDPCache@@UEAAJIIPEAPEAUIUnknown@@PEAI@Z")
Interceptor.attach(?SearchCache@CRDPCache@@UEAAJIIPEAPEAUIUnknown@@PEAI@Z, {onLeave: function (args) {send("?SearchCache@CRDPCache@@UEAAJIIPEAPEAUIUnknown@@PEAI@Z");}});

var ?SetCacheEntry@CRDPCache@@UEAAJIIPEAUIUnknown@@PEAI@Z = Module.findExportByName("rdpbase.dll", "?SetCacheEntry@CRDPCache@@UEAAJIIPEAUIUnknown@@PEAI@Z")
Interceptor.attach(?SetCacheEntry@CRDPCache@@UEAAJIIPEAUIUnknown@@PEAI@Z, {onLeave: function (args) {send("?SetCacheEntry@CRDPCache@@UEAAJIIPEAUIUnknown@@PEAI@Z");}});

var ?SetConnectorId@CRDPENCConnectorStringSerializer@@UEAAJK@Z = Module.findExportByName("rdpbase.dll", "?SetConnectorId@CRDPENCConnectorStringSerializer@@UEAAJK@Z")
Interceptor.attach(?SetConnectorId@CRDPENCConnectorStringSerializer@@UEAAJK@Z, {onLeave: function (args) {send("?SetConnectorId@CRDPENCConnectorStringSerializer@@UEAAJK@Z");}});

var ?SetDecodeBuffer@RdpGfxProtocolBaseDecoder@@IEAAXPEBEI@Z = Module.findExportByName("rdpbase.dll", "?SetDecodeBuffer@RdpGfxProtocolBaseDecoder@@IEAAXPEBEI@Z")
Interceptor.attach(?SetDecodeBuffer@RdpGfxProtocolBaseDecoder@@IEAAXPEBEI@Z, {onLeave: function (args) {send("?SetDecodeBuffer@RdpGfxProtocolBaseDecoder@@IEAAXPEBEI@Z");}});

var ?SetSessionId@CRDPENCConnectorStringSerializer@@UEAAJI@Z = Module.findExportByName("rdpbase.dll", "?SetSessionId@CRDPENCConnectorStringSerializer@@UEAAJI@Z")
Interceptor.attach(?SetSessionId@CRDPENCConnectorStringSerializer@@UEAAJI@Z, {onLeave: function (args) {send("?SetSessionId@CRDPENCConnectorStringSerializer@@UEAAJI@Z");}});

var ?SortAddresses@CRDPENCONResolver@@QEAAJXZ = Module.findExportByName("rdpbase.dll", "?SortAddresses@CRDPENCONResolver@@QEAAJXZ")
Interceptor.attach(?SortAddresses@CRDPENCONResolver@@QEAAJXZ, {onLeave: function (args) {send("?SortAddresses@CRDPENCONResolver@@QEAAJXZ");}});

var ?StartEnum@CRDPENCONIPHelper@@QEAAHXZ = Module.findExportByName("rdpbase.dll", "?StartEnum@CRDPENCONIPHelper@@QEAAHXZ")
Interceptor.attach(?StartEnum@CRDPENCONIPHelper@@QEAAHXZ, {onLeave: function (args) {send("?StartEnum@CRDPENCONIPHelper@@QEAAHXZ");}});

var ?StartEnum@CRDPENCONResolver@@QEAAIXZ = Module.findExportByName("rdpbase.dll", "?StartEnum@CRDPENCONResolver@@QEAAIXZ")
Interceptor.attach(?StartEnum@CRDPENCONResolver@@QEAAIXZ, {onLeave: function (args) {send("?StartEnum@CRDPENCONResolver@@QEAAIXZ");}});

var ?Terminate@CRDPENCONIPHelper@@QEAAJXZ = Module.findExportByName("rdpbase.dll", "?Terminate@CRDPENCONIPHelper@@QEAAJXZ")
Interceptor.attach(?Terminate@CRDPENCONIPHelper@@QEAAJXZ, {onLeave: function (args) {send("?Terminate@CRDPENCONIPHelper@@QEAAJXZ");}});

var ?UnevictEntry@Evict@@QEAAXPEAU_SCORE_ENTRY@@@Z = Module.findExportByName("rdpbase.dll", "?UnevictEntry@Evict@@QEAAXPEAU_SCORE_ENTRY@@@Z")
Interceptor.attach(?UnevictEntry@Evict@@QEAAXPEAU_SCORE_ENTRY@@@Z, {onLeave: function (args) {send("?UnevictEntry@Evict@@QEAAXPEAU_SCORE_ENTRY@@@Z");}});

var ?UpdateKeys@SSECBCHash2@@AEBAXXZ = Module.findExportByName("rdpbase.dll", "?UpdateKeys@SSECBCHash2@@AEBAXXZ")
Interceptor.attach(?UpdateKeys@SSECBCHash2@@AEBAXXZ, {onLeave: function (args) {send("?UpdateKeys@SSECBCHash2@@AEBAXXZ");}});

var ?XMLDeserialize@CRDPENCConnectorStringDeserializer@@QEAAJPEAG@Z = Module.findExportByName("rdpbase.dll", "?XMLDeserialize@CRDPENCConnectorStringDeserializer@@QEAAJPEAG@Z")
Interceptor.attach(?XMLDeserialize@CRDPENCConnectorStringDeserializer@@QEAAJPEAG@Z, {onLeave: function (args) {send("?XMLDeserialize@CRDPENCConnectorStringDeserializer@@QEAAJPEAG@Z");}});

var ?XMLSerialize@CRDPENCConnectorStringSerializer@@UEAAJPEAPEAG@Z = Module.findExportByName("rdpbase.dll", "?XMLSerialize@CRDPENCConnectorStringSerializer@@UEAAJPEAPEAG@Z")
Interceptor.attach(?XMLSerialize@CRDPENCConnectorStringSerializer@@UEAAJPEAPEAG@Z, {onLeave: function (args) {send("?XMLSerialize@CRDPENCConnectorStringSerializer@@UEAAJPEAPEAG@Z");}});

var ?XObjectId_RdpXHttpSession_CreateObject@@YA?AW4_XResult32@@PEAURdpXInterface@@IW4_XInterfaceId32@@PEAPEAX@Z = Module.findExportByName("rdpbase.dll", "?XObjectId_RdpXHttpSession_CreateObject@@YA?AW4_XResult32@@PEAURdpXInterface@@IW4_XInterfaceId32@@PEAPEAX@Z")
Interceptor.attach(?XObjectId_RdpXHttpSession_CreateObject@@YA?AW4_XResult32@@PEAURdpXInterface@@IW4_XInterfaceId32@@PEAPEAX@Z, {onLeave: function (args) {send("?XObjectId_RdpXHttpSession_CreateObject@@YA?AW4_XResult32@@PEAURdpXInterface@@IW4_XInterfaceId32@@PEAPEAX@Z");}});

var ?XObjectId_RdpXInterfaceUriComponents_CreateObject@@YA?AW4_XResult32@@PEAURdpXInterface@@IW4_XInterfaceId32@@PEAPEAX@Z = Module.findExportByName("rdpbase.dll", "?XObjectId_RdpXInterfaceUriComponents_CreateObject@@YA?AW4_XResult32@@PEAURdpXInterface@@IW4_XInterfaceId32@@PEAPEAX@Z")
Interceptor.attach(?XObjectId_RdpXInterfaceUriComponents_CreateObject@@YA?AW4_XResult32@@PEAURdpXInterface@@IW4_XInterfaceId32@@PEAPEAX@Z, {onLeave: function (args) {send("?XObjectId_RdpXInterfaceUriComponents_CreateObject@@YA?AW4_XResult32@@PEAURdpXInterface@@IW4_XInterfaceId32@@PEAPEAX@Z");}});

var ?XObjectId_RdpXSecFilterServer_CreateObject@@YA?AW4_XResult32@@PEAURdpXInterface@@IW4_XInterfaceId32@@PEAPEAX@Z = Module.findExportByName("rdpbase.dll", "?XObjectId_RdpXSecFilterServer_CreateObject@@YA?AW4_XResult32@@PEAURdpXInterface@@IW4_XInterfaceId32@@PEAPEAX@Z")
Interceptor.attach(?XObjectId_RdpXSecFilterServer_CreateObject@@YA?AW4_XResult32@@PEAURdpXInterface@@IW4_XInterfaceId32@@PEAPEAX@Z, {onLeave: function (args) {send("?XObjectId_RdpXSecFilterServer_CreateObject@@YA?AW4_XResult32@@PEAURdpXInterface@@IW4_XInterfaceId32@@PEAPEAX@Z");}});

var ApplyLuminanceFilter = Module.findExportByName("rdpbase.dll", "ApplyLuminanceFilter")
Interceptor.attach(ApplyLuminanceFilter, {onLeave: function (args) {send("ApplyLuminanceFilter");}});

var ApplySobelFilterOnLum = Module.findExportByName("rdpbase.dll", "ApplySobelFilterOnLum")
Interceptor.attach(ApplySobelFilterOnLum, {onLeave: function (args) {send("ApplySobelFilterOnLum");}});

var BitmapCombinePlanes = Module.findExportByName("rdpbase.dll", "BitmapCombinePlanes")
Interceptor.attach(BitmapCombinePlanes, {onLeave: function (args) {send("BitmapCombinePlanes");}});

var CAPAPI_AddCapSet = Module.findExportByName("rdpbase.dll", "CAPAPI_AddCapSet")
Interceptor.attach(CAPAPI_AddCapSet, {onLeave: function (args) {send("CAPAPI_AddCapSet");}});

var CAPAPI_GetCapSet = Module.findExportByName("rdpbase.dll", "CAPAPI_GetCapSet")
Interceptor.attach(CAPAPI_GetCapSet, {onLeave: function (args) {send("CAPAPI_GetCapSet");}});

var CAPAPI_InitializeCombinedCaps = Module.findExportByName("rdpbase.dll", "CAPAPI_InitializeCombinedCaps")
Interceptor.attach(CAPAPI_InitializeCombinedCaps, {onLeave: function (args) {send("CAPAPI_InitializeCombinedCaps");}});

var CAPAPI_MergeCombinedCaps = Module.findExportByName("rdpbase.dll", "CAPAPI_MergeCombinedCaps")
Interceptor.attach(CAPAPI_MergeCombinedCaps, {onLeave: function (args) {send("CAPAPI_MergeCombinedCaps");}});

var CRDPBitmapRecorder_CreateInstance = Module.findExportByName("rdpbase.dll", "CRDPBitmapRecorder_CreateInstance")
Interceptor.attach(CRDPBitmapRecorder_CreateInstance, {onLeave: function (args) {send("CRDPBitmapRecorder_CreateInstance");}});

var CRDPCacCodecEncoder_CreateInstance = Module.findExportByName("rdpbase.dll", "CRDPCacCodecEncoder_CreateInstance")
Interceptor.attach(CRDPCacCodecEncoder_CreateInstance, {onLeave: function (args) {send("CRDPCacCodecEncoder_CreateInstance");}});

var CRDPCacCodec_CreateInstance = Module.findExportByName("rdpbase.dll", "CRDPCacCodec_CreateInstance")
Interceptor.attach(CRDPCacCodec_CreateInstance, {onLeave: function (args) {send("CRDPCacCodec_CreateInstance");}});

var CRDPCacVideoCodecForHardwareClient_CreateInstance = Module.findExportByName("rdpbase.dll", "CRDPCacVideoCodecForHardwareClient_CreateInstance")
Interceptor.attach(CRDPCacVideoCodecForHardwareClient_CreateInstance, {onLeave: function (args) {send("CRDPCacVideoCodecForHardwareClient_CreateInstance");}});

var CRDPCacVideoCodec_CreateInstance = Module.findExportByName("rdpbase.dll", "CRDPCacVideoCodec_CreateInstance")
Interceptor.attach(CRDPCacVideoCodec_CreateInstance, {onLeave: function (args) {send("CRDPCacVideoCodec_CreateInstance");}});

var CRDPCaps_CreateInstance = Module.findExportByName("rdpbase.dll", "CRDPCaps_CreateInstance")
Interceptor.attach(CRDPCaps_CreateInstance, {onLeave: function (args) {send("CRDPCaps_CreateInstance");}});

var CRDPENCGfxEncoder_CreateInstance = Module.findExportByName("rdpbase.dll", "CRDPENCGfxEncoder_CreateInstance")
Interceptor.attach(CRDPENCGfxEncoder_CreateInstance, {onLeave: function (args) {send("CRDPENCGfxEncoder_CreateInstance");}});

var CRDPNsCodec_CreateInstance = Module.findExportByName("rdpbase.dll", "CRDPNsCodec_CreateInstance")
Interceptor.attach(CRDPNsCodec_CreateInstance, {onLeave: function (args) {send("CRDPNsCodec_CreateInstance");}});

var CRDPPlanarCompressor_CreateInstance = Module.findExportByName("rdpbase.dll", "CRDPPlanarCompressor_CreateInstance")
Interceptor.attach(CRDPPlanarCompressor_CreateInstance, {onLeave: function (args) {send("CRDPPlanarCompressor_CreateInstance");}});

var CRdpFIPSEncryption_CreateInstance = Module.findExportByName("rdpbase.dll", "CRdpFIPSEncryption_CreateInstance")
Interceptor.attach(CRdpFIPSEncryption_CreateInstance, {onLeave: function (args) {send("CRdpFIPSEncryption_CreateInstance");}});

var DecryptData = Module.findExportByName("rdpbase.dll", "DecryptData")
Interceptor.attach(DecryptData, {onLeave: function (args) {send("DecryptData");}});

var DecryptDataEx = Module.findExportByName("rdpbase.dll", "DecryptDataEx")
Interceptor.attach(DecryptDataEx, {onLeave: function (args) {send("DecryptDataEx");}});

var DrawBox = Module.findExportByName("rdpbase.dll", "DrawBox")
Interceptor.attach(DrawBox, {onLeave: function (args) {send("DrawBox");}});

var DrawHLine = Module.findExportByName("rdpbase.dll", "DrawHLine")
Interceptor.attach(DrawHLine, {onLeave: function (args) {send("DrawHLine");}});

var DrawIconToPixelMap = Module.findExportByName("rdpbase.dll", "DrawIconToPixelMap")
Interceptor.attach(DrawIconToPixelMap, {onLeave: function (args) {send("DrawIconToPixelMap");}});

var DrawVLine = Module.findExportByName("rdpbase.dll", "DrawVLine")
Interceptor.attach(DrawVLine, {onLeave: function (args) {send("DrawVLine");}});

var EncryptClientRandom = Module.findExportByName("rdpbase.dll", "EncryptClientRandom")
Interceptor.attach(EncryptClientRandom, {onLeave: function (args) {send("EncryptClientRandom");}});

var EncryptData = Module.findExportByName("rdpbase.dll", "EncryptData")
Interceptor.attach(EncryptData, {onLeave: function (args) {send("EncryptData");}});

var ExpandRectForSSE = Module.findExportByName("rdpbase.dll", "ExpandRectForSSE")
Interceptor.attach(ExpandRectForSSE, {onLeave: function (args) {send("ExpandRectForSSE");}});

var GetSupportedSSELevel_SSE = Module.findExportByName("rdpbase.dll", "GetSupportedSSELevel_SSE")
Interceptor.attach(GetSupportedSSELevel_SSE, {onLeave: function (args) {send("GetSupportedSSELevel_SSE");}});

var GridBA_CreateInstance = Module.findExportByName("rdpbase.dll", "GridBA_CreateInstance")
Interceptor.attach(GridBA_CreateInstance, {onLeave: function (args) {send("GridBA_CreateInstance");}});

var ICETransportContext_CreateInstance = Module.findExportByName("rdpbase.dll", "ICETransportContext_CreateInstance")
Interceptor.attach(ICETransportContext_CreateInstance, {onLeave: function (args) {send("ICETransportContext_CreateInstance");}});

var MakeSessionKeys = Module.findExportByName("rdpbase.dll", "MakeSessionKeys")
Interceptor.attach(MakeSessionKeys, {onLeave: function (args) {send("MakeSessionKeys");}});

var MemCopyAligned_SSE = Module.findExportByName("rdpbase.dll", "MemCopyAligned_SSE")
Interceptor.attach(MemCopyAligned_SSE, {onLeave: function (args) {send("MemCopyAligned_SSE");}});

var MemEqual = Module.findExportByName("rdpbase.dll", "MemEqual")
Interceptor.attach(MemEqual, {onLeave: function (args) {send("MemEqual");}});

var MemMoveReverseAligned_SSE = Module.findExportByName("rdpbase.dll", "MemMoveReverseAligned_SSE")
Interceptor.attach(MemMoveReverseAligned_SSE, {onLeave: function (args) {send("MemMoveReverseAligned_SSE");}});

var PAL_System_AtomicCompareAndExchange = Module.findExportByName("rdpbase.dll", "PAL_System_AtomicCompareAndExchange")
Interceptor.attach(PAL_System_AtomicCompareAndExchange, {onLeave: function (args) {send("PAL_System_AtomicCompareAndExchange");}});

var PAL_System_AtomicCompareAndExchangePointer = Module.findExportByName("rdpbase.dll", "PAL_System_AtomicCompareAndExchangePointer")
Interceptor.attach(PAL_System_AtomicCompareAndExchangePointer, {onLeave: function (args) {send("PAL_System_AtomicCompareAndExchangePointer");}});

var PAL_System_AtomicDecrement = Module.findExportByName("rdpbase.dll", "PAL_System_AtomicDecrement")
Interceptor.attach(PAL_System_AtomicDecrement, {onLeave: function (args) {send("PAL_System_AtomicDecrement");}});

var PAL_System_AtomicExchange = Module.findExportByName("rdpbase.dll", "PAL_System_AtomicExchange")
Interceptor.attach(PAL_System_AtomicExchange, {onLeave: function (args) {send("PAL_System_AtomicExchange");}});

var PAL_System_AtomicExchangeAdd = Module.findExportByName("rdpbase.dll", "PAL_System_AtomicExchangeAdd")
Interceptor.attach(PAL_System_AtomicExchangeAdd, {onLeave: function (args) {send("PAL_System_AtomicExchangeAdd");}});

var PAL_System_AtomicExchangePointer = Module.findExportByName("rdpbase.dll", "PAL_System_AtomicExchangePointer")
Interceptor.attach(PAL_System_AtomicExchangePointer, {onLeave: function (args) {send("PAL_System_AtomicExchangePointer");}});

var PAL_System_AtomicIncrement = Module.findExportByName("rdpbase.dll", "PAL_System_AtomicIncrement")
Interceptor.attach(PAL_System_AtomicIncrement, {onLeave: function (args) {send("PAL_System_AtomicIncrement");}});

var PAL_System_Beep = Module.findExportByName("rdpbase.dll", "PAL_System_Beep")
Interceptor.attach(PAL_System_Beep, {onLeave: function (args) {send("PAL_System_Beep");}});

var PAL_System_CondAlloc = Module.findExportByName("rdpbase.dll", "PAL_System_CondAlloc")
Interceptor.attach(PAL_System_CondAlloc, {onLeave: function (args) {send("PAL_System_CondAlloc");}});

var PAL_System_CondReset = Module.findExportByName("rdpbase.dll", "PAL_System_CondReset")
Interceptor.attach(PAL_System_CondReset, {onLeave: function (args) {send("PAL_System_CondReset");}});

var PAL_System_CondSignal = Module.findExportByName("rdpbase.dll", "PAL_System_CondSignal")
Interceptor.attach(PAL_System_CondSignal, {onLeave: function (args) {send("PAL_System_CondSignal");}});

var PAL_System_CondWait = Module.findExportByName("rdpbase.dll", "PAL_System_CondWait")
Interceptor.attach(PAL_System_CondWait, {onLeave: function (args) {send("PAL_System_CondWait");}});

var PAL_System_ConvertToAndFromWideChar = Module.findExportByName("rdpbase.dll", "PAL_System_ConvertToAndFromWideChar")
Interceptor.attach(PAL_System_ConvertToAndFromWideChar, {onLeave: function (args) {send("PAL_System_ConvertToAndFromWideChar");}});

var PAL_System_CreateGuid = Module.findExportByName("rdpbase.dll", "PAL_System_CreateGuid")
Interceptor.attach(PAL_System_CreateGuid, {onLeave: function (args) {send("PAL_System_CreateGuid");}});

var PAL_System_CredProtect = Module.findExportByName("rdpbase.dll", "PAL_System_CredProtect")
Interceptor.attach(PAL_System_CredProtect, {onLeave: function (args) {send("PAL_System_CredProtect");}});

var PAL_System_CredUnprotect = Module.findExportByName("rdpbase.dll", "PAL_System_CredUnprotect")
Interceptor.attach(PAL_System_CredUnprotect, {onLeave: function (args) {send("PAL_System_CredUnprotect");}});

var PAL_System_CritSecEnter = Module.findExportByName("rdpbase.dll", "PAL_System_CritSecEnter")
Interceptor.attach(PAL_System_CritSecEnter, {onLeave: function (args) {send("PAL_System_CritSecEnter");}});

var PAL_System_CritSecInit = Module.findExportByName("rdpbase.dll", "PAL_System_CritSecInit")
Interceptor.attach(PAL_System_CritSecInit, {onLeave: function (args) {send("PAL_System_CritSecInit");}});

var PAL_System_CritSecIsLockedByCurrentThread = Module.findExportByName("rdpbase.dll", "PAL_System_CritSecIsLockedByCurrentThread")
Interceptor.attach(PAL_System_CritSecIsLockedByCurrentThread, {onLeave: function (args) {send("PAL_System_CritSecIsLockedByCurrentThread");}});

var PAL_System_CritSecLeave = Module.findExportByName("rdpbase.dll", "PAL_System_CritSecLeave")
Interceptor.attach(PAL_System_CritSecLeave, {onLeave: function (args) {send("PAL_System_CritSecLeave");}});

var PAL_System_CritSecTerminate = Module.findExportByName("rdpbase.dll", "PAL_System_CritSecTerminate")
Interceptor.attach(PAL_System_CritSecTerminate, {onLeave: function (args) {send("PAL_System_CritSecTerminate");}});

var PAL_System_CritSecTryEnter = Module.findExportByName("rdpbase.dll", "PAL_System_CritSecTryEnter")
Interceptor.attach(PAL_System_CritSecTryEnter, {onLeave: function (args) {send("PAL_System_CritSecTryEnter");}});

var PAL_System_CryptDecryptLegacy = Module.findExportByName("rdpbase.dll", "PAL_System_CryptDecryptLegacy")
Interceptor.attach(PAL_System_CryptDecryptLegacy, {onLeave: function (args) {send("PAL_System_CryptDecryptLegacy");}});

var PAL_System_CryptEncrypt = Module.findExportByName("rdpbase.dll", "PAL_System_CryptEncrypt")
Interceptor.attach(PAL_System_CryptEncrypt, {onLeave: function (args) {send("PAL_System_CryptEncrypt");}});

var PAL_System_CryptFree = Module.findExportByName("rdpbase.dll", "PAL_System_CryptFree")
Interceptor.attach(PAL_System_CryptFree, {onLeave: function (args) {send("PAL_System_CryptFree");}});

var PAL_System_CryptZeroMemory = Module.findExportByName("rdpbase.dll", "PAL_System_CryptZeroMemory")
Interceptor.attach(PAL_System_CryptZeroMemory, {onLeave: function (args) {send("PAL_System_CryptZeroMemory");}});

var PAL_System_DebugBreak = Module.findExportByName("rdpbase.dll", "PAL_System_DebugBreak")
Interceptor.attach(PAL_System_DebugBreak, {onLeave: function (args) {send("PAL_System_DebugBreak");}});

var PAL_System_DebugOutput = Module.findExportByName("rdpbase.dll", "PAL_System_DebugOutput")
Interceptor.attach(PAL_System_DebugOutput, {onLeave: function (args) {send("PAL_System_DebugOutput");}});

var PAL_System_GetComputerName = Module.findExportByName("rdpbase.dll", "PAL_System_GetComputerName")
Interceptor.attach(PAL_System_GetComputerName, {onLeave: function (args) {send("PAL_System_GetComputerName");}});

var PAL_System_GetFIPSAlgorithmEnabled = Module.findExportByName("rdpbase.dll", "PAL_System_GetFIPSAlgorithmEnabled")
Interceptor.attach(PAL_System_GetFIPSAlgorithmEnabled, {onLeave: function (args) {send("PAL_System_GetFIPSAlgorithmEnabled");}});

var PAL_System_GetLocalSessionId = Module.findExportByName("rdpbase.dll", "PAL_System_GetLocalSessionId")
Interceptor.attach(PAL_System_GetLocalSessionId, {onLeave: function (args) {send("PAL_System_GetLocalSessionId");}});

var PAL_System_GetModuleFilename = Module.findExportByName("rdpbase.dll", "PAL_System_GetModuleFilename")
Interceptor.attach(PAL_System_GetModuleFilename, {onLeave: function (args) {send("PAL_System_GetModuleFilename");}});

var PAL_System_GetNetworkStatus = Module.findExportByName("rdpbase.dll", "PAL_System_GetNetworkStatus")
Interceptor.attach(PAL_System_GetNetworkStatus, {onLeave: function (args) {send("PAL_System_GetNetworkStatus");}});

var PAL_System_GetNumberOfProcessors = Module.findExportByName("rdpbase.dll", "PAL_System_GetNumberOfProcessors")
Interceptor.attach(PAL_System_GetNumberOfProcessors, {onLeave: function (args) {send("PAL_System_GetNumberOfProcessors");}});

var PAL_System_GetWindowsProductId = Module.findExportByName("rdpbase.dll", "PAL_System_GetWindowsProductId")
Interceptor.attach(PAL_System_GetWindowsProductId, {onLeave: function (args) {send("PAL_System_GetWindowsProductId");}});

var PAL_System_HandleFree = Module.findExportByName("rdpbase.dll", "PAL_System_HandleFree")
Interceptor.attach(PAL_System_HandleFree, {onLeave: function (args) {send("PAL_System_HandleFree");}});

var PAL_System_MemAlloc = Module.findExportByName("rdpbase.dll", "PAL_System_MemAlloc")
Interceptor.attach(PAL_System_MemAlloc, {onLeave: function (args) {send("PAL_System_MemAlloc");}});

var PAL_System_MemFree = Module.findExportByName("rdpbase.dll", "PAL_System_MemFree")
Interceptor.attach(PAL_System_MemFree, {onLeave: function (args) {send("PAL_System_MemFree");}});

var PAL_System_NetworkMonitorInit = Module.findExportByName("rdpbase.dll", "PAL_System_NetworkMonitorInit")
Interceptor.attach(PAL_System_NetworkMonitorInit, {onLeave: function (args) {send("PAL_System_NetworkMonitorInit");}});

var PAL_System_NetworkMonitorNotification = Module.findExportByName("rdpbase.dll", "PAL_System_NetworkMonitorNotification")
Interceptor.attach(PAL_System_NetworkMonitorNotification, {onLeave: function (args) {send("PAL_System_NetworkMonitorNotification");}});

var PAL_System_NetworkMonitorTerminate = Module.findExportByName("rdpbase.dll", "PAL_System_NetworkMonitorTerminate")
Interceptor.attach(PAL_System_NetworkMonitorTerminate, {onLeave: function (args) {send("PAL_System_NetworkMonitorTerminate");}});

var PAL_System_SecureZeroMemory = Module.findExportByName("rdpbase.dll", "PAL_System_SecureZeroMemory")
Interceptor.attach(PAL_System_SecureZeroMemory, {onLeave: function (args) {send("PAL_System_SecureZeroMemory");}});

var PAL_System_SemaphoreAcquire = Module.findExportByName("rdpbase.dll", "PAL_System_SemaphoreAcquire")
Interceptor.attach(PAL_System_SemaphoreAcquire, {onLeave: function (args) {send("PAL_System_SemaphoreAcquire");}});

var PAL_System_SemaphoreAlloc = Module.findExportByName("rdpbase.dll", "PAL_System_SemaphoreAlloc")
Interceptor.attach(PAL_System_SemaphoreAlloc, {onLeave: function (args) {send("PAL_System_SemaphoreAlloc");}});

var PAL_System_SemaphoreRelease = Module.findExportByName("rdpbase.dll", "PAL_System_SemaphoreRelease")
Interceptor.attach(PAL_System_SemaphoreRelease, {onLeave: function (args) {send("PAL_System_SemaphoreRelease");}});

var PAL_System_SingleCondWait = Module.findExportByName("rdpbase.dll", "PAL_System_SingleCondWait")
Interceptor.attach(PAL_System_SingleCondWait, {onLeave: function (args) {send("PAL_System_SingleCondWait");}});

var PAL_System_Sleep = Module.findExportByName("rdpbase.dll", "PAL_System_Sleep")
Interceptor.attach(PAL_System_Sleep, {onLeave: function (args) {send("PAL_System_Sleep");}});

var PAL_System_SwitchToThread = Module.findExportByName("rdpbase.dll", "PAL_System_SwitchToThread")
Interceptor.attach(PAL_System_SwitchToThread, {onLeave: function (args) {send("PAL_System_SwitchToThread");}});

var PAL_System_ThreadGetId = Module.findExportByName("rdpbase.dll", "PAL_System_ThreadGetId")
Interceptor.attach(PAL_System_ThreadGetId, {onLeave: function (args) {send("PAL_System_ThreadGetId");}});

var PAL_System_TimeGetCurrent = Module.findExportByName("rdpbase.dll", "PAL_System_TimeGetCurrent")
Interceptor.attach(PAL_System_TimeGetCurrent, {onLeave: function (args) {send("PAL_System_TimeGetCurrent");}});

var PAL_System_TimeGetDynamicTimeZoneInformation = Module.findExportByName("rdpbase.dll", "PAL_System_TimeGetDynamicTimeZoneInformation")
Interceptor.attach(PAL_System_TimeGetDynamicTimeZoneInformation, {onLeave: function (args) {send("PAL_System_TimeGetDynamicTimeZoneInformation");}});

var PAL_System_TimeGetTickCount = Module.findExportByName("rdpbase.dll", "PAL_System_TimeGetTickCount")
Interceptor.attach(PAL_System_TimeGetTickCount, {onLeave: function (args) {send("PAL_System_TimeGetTickCount");}});

var PAL_System_TimeGetTickCount64 = Module.findExportByName("rdpbase.dll", "PAL_System_TimeGetTickCount64")
Interceptor.attach(PAL_System_TimeGetTickCount64, {onLeave: function (args) {send("PAL_System_TimeGetTickCount64");}});

var PAL_System_TimeGetTimeZoneInformation = Module.findExportByName("rdpbase.dll", "PAL_System_TimeGetTimeZoneInformation")
Interceptor.attach(PAL_System_TimeGetTimeZoneInformation, {onLeave: function (args) {send("PAL_System_TimeGetTimeZoneInformation");}});

var PAL_System_TimerCancel = Module.findExportByName("rdpbase.dll", "PAL_System_TimerCancel")
Interceptor.attach(PAL_System_TimerCancel, {onLeave: function (args) {send("PAL_System_TimerCancel");}});

var PAL_System_TimerDelete = Module.findExportByName("rdpbase.dll", "PAL_System_TimerDelete")
Interceptor.attach(PAL_System_TimerDelete, {onLeave: function (args) {send("PAL_System_TimerDelete");}});

var PAL_System_TimerInit = Module.findExportByName("rdpbase.dll", "PAL_System_TimerInit")
Interceptor.attach(PAL_System_TimerInit, {onLeave: function (args) {send("PAL_System_TimerInit");}});

var PAL_System_TimerIsSet = Module.findExportByName("rdpbase.dll", "PAL_System_TimerIsSet")
Interceptor.attach(PAL_System_TimerIsSet, {onLeave: function (args) {send("PAL_System_TimerIsSet");}});

var PAL_System_TimerSet = Module.findExportByName("rdpbase.dll", "PAL_System_TimerSet")
Interceptor.attach(PAL_System_TimerSet, {onLeave: function (args) {send("PAL_System_TimerSet");}});

var PAL_System_WideCharToUnicode16 = Module.findExportByName("rdpbase.dll", "PAL_System_WideCharToUnicode16")
Interceptor.attach(PAL_System_WideCharToUnicode16, {onLeave: function (args) {send("PAL_System_WideCharToUnicode16");}});

var RDPAPI_GetGenericCounter = Module.findExportByName("rdpbase.dll", "RDPAPI_GetGenericCounter")
Interceptor.attach(RDPAPI_GetGenericCounter, {onLeave: function (args) {send("RDPAPI_GetGenericCounter");}});

var RDPAPI_GetGlobalObject = Module.findExportByName("rdpbase.dll", "RDPAPI_GetGlobalObject")
Interceptor.attach(RDPAPI_GetGlobalObject, {onLeave: function (args) {send("RDPAPI_GetGlobalObject");}});

var RDPAPI_GetLongCounter = Module.findExportByName("rdpbase.dll", "RDPAPI_GetLongCounter")
Interceptor.attach(RDPAPI_GetLongCounter, {onLeave: function (args) {send("RDPAPI_GetLongCounter");}});

var RDPBASE_CreateInstance = Module.findExportByName("rdpbase.dll", "RDPBASE_CreateInstance")
Interceptor.attach(RDPBASE_CreateInstance, {onLeave: function (args) {send("RDPBASE_CreateInstance");}});

var RDPCompress = Module.findExportByName("rdpbase.dll", "RDPCompress")
Interceptor.attach(RDPCompress, {onLeave: function (args) {send("RDPCompress");}});

var RDPCompressEx = Module.findExportByName("rdpbase.dll", "RDPCompressEx")
Interceptor.attach(RDPCompressEx, {onLeave: function (args) {send("RDPCompressEx");}});

var RDPCompress_GetContextSize = Module.findExportByName("rdpbase.dll", "RDPCompress_GetContextSize")
Interceptor.attach(RDPCompress_GetContextSize, {onLeave: function (args) {send("RDPCompress_GetContextSize");}});

var RDPCompress_InitRecvContext = Module.findExportByName("rdpbase.dll", "RDPCompress_InitRecvContext")
Interceptor.attach(RDPCompress_InitRecvContext, {onLeave: function (args) {send("RDPCompress_InitRecvContext");}});

var RDPCompress_InitSendContext = Module.findExportByName("rdpbase.dll", "RDPCompress_InitSendContext")
Interceptor.attach(RDPCompress_InitSendContext, {onLeave: function (args) {send("RDPCompress_InitSendContext");}});

var RDPDeCompress_GetContextSize = Module.findExportByName("rdpbase.dll", "RDPDeCompress_GetContextSize")
Interceptor.attach(RDPDeCompress_GetContextSize, {onLeave: function (args) {send("RDPDeCompress_GetContextSize");}});

var RDPDecompress = Module.findExportByName("rdpbase.dll", "RDPDecompress")
Interceptor.attach(RDPDecompress, {onLeave: function (args) {send("RDPDecompress");}});

var RDPENCDirectConnector_CreateInstance = Module.findExportByName("rdpbase.dll", "RDPENCDirectConnector_CreateInstance")
Interceptor.attach(RDPENCDirectConnector_CreateInstance, {onLeave: function (args) {send("RDPENCDirectConnector_CreateInstance");}});

var RDPENCGDIHLP_FlipBitmapBits = Module.findExportByName("rdpbase.dll", "RDPENCGDIHLP_FlipBitmapBits")
Interceptor.attach(RDPENCGDIHLP_FlipBitmapBits, {onLeave: function (args) {send("RDPENCGDIHLP_FlipBitmapBits");}});

var RDPENCGDIHLP_FlipBitmapBitsInPlace = Module.findExportByName("rdpbase.dll", "RDPENCGDIHLP_FlipBitmapBitsInPlace")
Interceptor.attach(RDPENCGDIHLP_FlipBitmapBitsInPlace, {onLeave: function (args) {send("RDPENCGDIHLP_FlipBitmapBitsInPlace");}});

var RDPENCGDIHLP_ValidatePointerParams = Module.findExportByName("rdpbase.dll", "RDPENCGDIHLP_ValidatePointerParams")
Interceptor.attach(RDPENCGDIHLP_ValidatePointerParams, {onLeave: function (args) {send("RDPENCGDIHLP_ValidatePointerParams");}});

var RDPENCHLPREG_ReadValueDWORD = Module.findExportByName("rdpbase.dll", "RDPENCHLPREG_ReadValueDWORD")
Interceptor.attach(RDPENCHLPREG_ReadValueDWORD, {onLeave: function (args) {send("RDPENCHLPREG_ReadValueDWORD");}});

var RDPENCHLPWSErr2Hr = Module.findExportByName("rdpbase.dll", "RDPENCHLPWSErr2Hr")
Interceptor.attach(RDPENCHLPWSErr2Hr, {onLeave: function (args) {send("RDPENCHLPWSErr2Hr");}});

var RDPENCHLPWS_GetIPFromAddr = Module.findExportByName("rdpbase.dll", "RDPENCHLPWS_GetIPFromAddr")
Interceptor.attach(RDPENCHLPWS_GetIPFromAddr, {onLeave: function (args) {send("RDPENCHLPWS_GetIPFromAddr");}});

var RDPENCHLPWS_GetPortFromAddr = Module.findExportByName("rdpbase.dll", "RDPENCHLPWS_GetPortFromAddr")
Interceptor.attach(RDPENCHLPWS_GetPortFromAddr, {onLeave: function (args) {send("RDPENCHLPWS_GetPortFromAddr");}});

var RDPENCHLP_GetInputDesktopName = Module.findExportByName("rdpbase.dll", "RDPENCHLP_GetInputDesktopName")
Interceptor.attach(RDPENCHLP_GetInputDesktopName, {onLeave: function (args) {send("RDPENCHLP_GetInputDesktopName");}});

var RDPENCHLP_IsGreaterThanOrEqWin8 = Module.findExportByName("rdpbase.dll", "RDPENCHLP_IsGreaterThanOrEqWin8")
Interceptor.attach(RDPENCHLP_IsGreaterThanOrEqWin8, {onLeave: function (args) {send("RDPENCHLP_IsGreaterThanOrEqWin8");}});

var RDPENCHLP_IsSessionActive = Module.findExportByName("rdpbase.dll", "RDPENCHLP_IsSessionActive")
Interceptor.attach(RDPENCHLP_IsSessionActive, {onLeave: function (args) {send("RDPENCHLP_IsSessionActive");}});

var RDPENCHLP_IsSessionRemote = Module.findExportByName("rdpbase.dll", "RDPENCHLP_IsSessionRemote")
Interceptor.attach(RDPENCHLP_IsSessionRemote, {onLeave: function (args) {send("RDPENCHLP_IsSessionRemote");}});

var RDPENCHLP_TraceWindowInfo = Module.findExportByName("rdpbase.dll", "RDPENCHLP_TraceWindowInfo")
Interceptor.attach(RDPENCHLP_TraceWindowInfo, {onLeave: function (args) {send("RDPENCHLP_TraceWindowInfo");}});

var RDPENCORE_AddGlobalObject = Module.findExportByName("rdpbase.dll", "RDPENCORE_AddGlobalObject")
Interceptor.attach(RDPENCORE_AddGlobalObject, {onLeave: function (args) {send("RDPENCORE_AddGlobalObject");}});

var RDPServerStackDiagnostics_GetSymbolicNameFromCode = Module.findExportByName("rdpbase.dll", "RDPServerStackDiagnostics_GetSymbolicNameFromCode")
Interceptor.attach(RDPServerStackDiagnostics_GetSymbolicNameFromCode, {onLeave: function (args) {send("RDPServerStackDiagnostics_GetSymbolicNameFromCode");}});

var RDPServerStackDiagnostics_LogCheckpoint = Module.findExportByName("rdpbase.dll", "RDPServerStackDiagnostics_LogCheckpoint")
Interceptor.attach(RDPServerStackDiagnostics_LogCheckpoint, {onLeave: function (args) {send("RDPServerStackDiagnostics_LogCheckpoint");}});

var RDPServerStackDiagnostics_LogConnectionQOEScore = Module.findExportByName("rdpbase.dll", "RDPServerStackDiagnostics_LogConnectionQOEScore")
Interceptor.attach(RDPServerStackDiagnostics_LogConnectionQOEScore, {onLeave: function (args) {send("RDPServerStackDiagnostics_LogConnectionQOEScore");}});

var RDPServerStackDiagnostics_LogContext = Module.findExportByName("rdpbase.dll", "RDPServerStackDiagnostics_LogContext")
Interceptor.attach(RDPServerStackDiagnostics_LogContext, {onLeave: function (args) {send("RDPServerStackDiagnostics_LogContext");}});

var RDPServerStackDiagnostics_LogDisconnect = Module.findExportByName("rdpbase.dll", "RDPServerStackDiagnostics_LogDisconnect")
Interceptor.attach(RDPServerStackDiagnostics_LogDisconnect, {onLeave: function (args) {send("RDPServerStackDiagnostics_LogDisconnect");}});

var RDPServerStackDiagnostics_LogFailure = Module.findExportByName("rdpbase.dll", "RDPServerStackDiagnostics_LogFailure")
Interceptor.attach(RDPServerStackDiagnostics_LogFailure, {onLeave: function (args) {send("RDPServerStackDiagnostics_LogFailure");}});

var RDPServerStackDiagnostics_LogShortpathCheckpoint = Module.findExportByName("rdpbase.dll", "RDPServerStackDiagnostics_LogShortpathCheckpoint")
Interceptor.attach(RDPServerStackDiagnostics_LogShortpathCheckpoint, {onLeave: function (args) {send("RDPServerStackDiagnostics_LogShortpathCheckpoint");}});

var RDPServerStackDiagnostics_Register = Module.findExportByName("rdpbase.dll", "RDPServerStackDiagnostics_Register")
Interceptor.attach(RDPServerStackDiagnostics_Register, {onLeave: function (args) {send("RDPServerStackDiagnostics_Register");}});

var RDPServerStackDiagnostics_Unregister = Module.findExportByName("rdpbase.dll", "RDPServerStackDiagnostics_Unregister")
Interceptor.attach(RDPServerStackDiagnostics_Unregister, {onLeave: function (args) {send("RDPServerStackDiagnostics_Unregister");}});

var RDPWSStreamConnector_CreateInstance = Module.findExportByName("rdpbase.dll", "RDPWSStreamConnector_CreateInstance")
Interceptor.attach(RDPWSStreamConnector_CreateInstance, {onLeave: function (args) {send("RDPWSStreamConnector_CreateInstance");}});

var RDP_HMACMD5Final = Module.findExportByName("rdpbase.dll", "RDP_HMACMD5Final")
Interceptor.attach(RDP_HMACMD5Final, {onLeave: function (args) {send("RDP_HMACMD5Final");}});

var RDP_HMACMD5Init = Module.findExportByName("rdpbase.dll", "RDP_HMACMD5Init")
Interceptor.attach(RDP_HMACMD5Init, {onLeave: function (args) {send("RDP_HMACMD5Init");}});

var RDP_HMACMD5Update = Module.findExportByName("rdpbase.dll", "RDP_HMACMD5Update")
Interceptor.attach(RDP_HMACMD5Update, {onLeave: function (args) {send("RDP_HMACMD5Update");}});

var RDP_MD5Final = Module.findExportByName("rdpbase.dll", "RDP_MD5Final")
Interceptor.attach(RDP_MD5Final, {onLeave: function (args) {send("RDP_MD5Final");}});

var RDP_MD5Init = Module.findExportByName("rdpbase.dll", "RDP_MD5Init")
Interceptor.attach(RDP_MD5Init, {onLeave: function (args) {send("RDP_MD5Init");}});

var RDP_MD5Update = Module.findExportByName("rdpbase.dll", "RDP_MD5Update")
Interceptor.attach(RDP_MD5Update, {onLeave: function (args) {send("RDP_MD5Update");}});

var RDP_RC4 = Module.findExportByName("rdpbase.dll", "RDP_RC4")
Interceptor.attach(RDP_RC4, {onLeave: function (args) {send("RDP_RC4");}});

var RDP_RC4AllocKey = Module.findExportByName("rdpbase.dll", "RDP_RC4AllocKey")
Interceptor.attach(RDP_RC4AllocKey, {onLeave: function (args) {send("RDP_RC4AllocKey");}});

var RDP_RC4FreeKey = Module.findExportByName("rdpbase.dll", "RDP_RC4FreeKey")
Interceptor.attach(RDP_RC4FreeKey, {onLeave: function (args) {send("RDP_RC4FreeKey");}});

var RDP_RC4SetKey = Module.findExportByName("rdpbase.dll", "RDP_RC4SetKey")
Interceptor.attach(RDP_RC4SetKey, {onLeave: function (args) {send("RDP_RC4SetKey");}});

var RDP_RC4ZeroKey = Module.findExportByName("rdpbase.dll", "RDP_RC4ZeroKey")
Interceptor.attach(RDP_RC4ZeroKey, {onLeave: function (args) {send("RDP_RC4ZeroKey");}});

var RDP_RsaBCryptDecryptPrivate = Module.findExportByName("rdpbase.dll", "RDP_RsaBCryptDecryptPrivate")
Interceptor.attach(RDP_RsaBCryptDecryptPrivate, {onLeave: function (args) {send("RDP_RsaBCryptDecryptPrivate");}});

var RDP_RsaBCryptGenerateRsaKeyPair = Module.findExportByName("rdpbase.dll", "RDP_RsaBCryptGenerateRsaKeyPair")
Interceptor.attach(RDP_RsaBCryptGenerateRsaKeyPair, {onLeave: function (args) {send("RDP_RsaBCryptGenerateRsaKeyPair");}});

var RDP_RsaBCryptPubKeyToBSafePubKey = Module.findExportByName("rdpbase.dll", "RDP_RsaBCryptPubKeyToBSafePubKey")
Interceptor.attach(RDP_RsaBCryptPubKeyToBSafePubKey, {onLeave: function (args) {send("RDP_RsaBCryptPubKeyToBSafePubKey");}});

var RDP_RsaBSafeEncPublic = Module.findExportByName("rdpbase.dll", "RDP_RsaBSafeEncPublic")
Interceptor.attach(RDP_RsaBSafeEncPublic, {onLeave: function (args) {send("RDP_RsaBSafeEncPublic");}});

var RDP_RsaGetPublicKeyDataLength = Module.findExportByName("rdpbase.dll", "RDP_RsaGetPublicKeyDataLength")
Interceptor.attach(RDP_RsaGetPublicKeyDataLength, {onLeave: function (args) {send("RDP_RsaGetPublicKeyDataLength");}});

var RDP_RsaGetPublicKeyLength = Module.findExportByName("rdpbase.dll", "RDP_RsaGetPublicKeyLength")
Interceptor.attach(RDP_RsaGetPublicKeyLength, {onLeave: function (args) {send("RDP_RsaGetPublicKeyLength");}});

var RDP_SHAFinal = Module.findExportByName("rdpbase.dll", "RDP_SHAFinal")
Interceptor.attach(RDP_SHAFinal, {onLeave: function (args) {send("RDP_SHAFinal");}});

var RDP_SHAInit = Module.findExportByName("rdpbase.dll", "RDP_SHAInit")
Interceptor.attach(RDP_SHAInit, {onLeave: function (args) {send("RDP_SHAInit");}});

var RDP_SHAUpdate = Module.findExportByName("rdpbase.dll", "RDP_SHAUpdate")
Interceptor.attach(RDP_SHAUpdate, {onLeave: function (args) {send("RDP_SHAUpdate");}});

var RdpIntersectRect = Module.findExportByName("rdpbase.dll", "RdpIntersectRect")
Interceptor.attach(RdpIntersectRect, {onLeave: function (args) {send("RdpIntersectRect");}});

var RdpTiledSurface_CreateInstance = Module.findExportByName("rdpbase.dll", "RdpTiledSurface_CreateInstance")
Interceptor.attach(RdpTiledSurface_CreateInstance, {onLeave: function (args) {send("RdpTiledSurface_CreateInstance");}});

var RdpUnionRect = Module.findExportByName("rdpbase.dll", "RdpUnionRect")
Interceptor.attach(RdpUnionRect, {onLeave: function (args) {send("RdpUnionRect");}});

var RdpX_AtomicDecrement32 = Module.findExportByName("rdpbase.dll", "RdpX_AtomicDecrement32")
Interceptor.attach(RdpX_AtomicDecrement32, {onLeave: function (args) {send("RdpX_AtomicDecrement32");}});

var RdpX_AtomicIncrement32 = Module.findExportByName("rdpbase.dll", "RdpX_AtomicIncrement32")
Interceptor.attach(RdpX_AtomicIncrement32, {onLeave: function (args) {send("RdpX_AtomicIncrement32");}});

var RdpX_DateTime_GetHighResolutionTimeSinceReboot = Module.findExportByName("rdpbase.dll", "RdpX_DateTime_GetHighResolutionTimeSinceReboot")
Interceptor.attach(RdpX_DateTime_GetHighResolutionTimeSinceReboot, {onLeave: function (args) {send("RdpX_DateTime_GetHighResolutionTimeSinceReboot");}});

var RdpX_DebugBreak = Module.findExportByName("rdpbase.dll", "RdpX_DebugBreak")
Interceptor.attach(RdpX_DebugBreak, {onLeave: function (args) {send("RdpX_DebugBreak");}});

var RdpX_GetActivityIdPrefix = Module.findExportByName("rdpbase.dll", "RdpX_GetActivityIdPrefix")
Interceptor.attach(RdpX_GetActivityIdPrefix, {onLeave: function (args) {send("RdpX_GetActivityIdPrefix");}});

var RdpX_Threading_CreateCriticalSection = Module.findExportByName("rdpbase.dll", "RdpX_Threading_CreateCriticalSection")
Interceptor.attach(RdpX_Threading_CreateCriticalSection, {onLeave: function (args) {send("RdpX_Threading_CreateCriticalSection");}});

var RgnlibBA_CreateInstance = Module.findExportByName("rdpbase.dll", "RgnlibBA_CreateInstance")
Interceptor.attach(RgnlibBA_CreateInstance, {onLeave: function (args) {send("RgnlibBA_CreateInstance");}});

var SaveImageToFile = Module.findExportByName("rdpbase.dll", "SaveImageToFile")
Interceptor.attach(SaveImageToFile, {onLeave: function (args) {send("SaveImageToFile");}});

var SubtractRects = Module.findExportByName("rdpbase.dll", "SubtractRects")
Interceptor.attach(SubtractRects, {onLeave: function (args) {send("SubtractRects");}});

var TRC_TraceBufferW = Module.findExportByName("rdpbase.dll", "TRC_TraceBufferW")
Interceptor.attach(TRC_TraceBufferW, {onLeave: function (args) {send("TRC_TraceBufferW");}});

var TSAlloc = Module.findExportByName("rdpbase.dll", "TSAlloc")
Interceptor.attach(TSAlloc, {onLeave: function (args) {send("TSAlloc");}});

var TSCreateBaseServices = Module.findExportByName("rdpbase.dll", "TSCreateBaseServices")
Interceptor.attach(TSCreateBaseServices, {onLeave: function (args) {send("TSCreateBaseServices");}});

var TSCreateCoreEvents = Module.findExportByName("rdpbase.dll", "TSCreateCoreEvents")
Interceptor.attach(TSCreateCoreEvents, {onLeave: function (args) {send("TSCreateCoreEvents");}});

var TSCreatePlatform = Module.findExportByName("rdpbase.dll", "TSCreatePlatform")
Interceptor.attach(TSCreatePlatform, {onLeave: function (args) {send("TSCreatePlatform");}});

var TSDbgAssertThread = Module.findExportByName("rdpbase.dll", "TSDbgAssertThread")
Interceptor.attach(TSDbgAssertThread, {onLeave: function (args) {send("TSDbgAssertThread");}});

var TSFree = Module.findExportByName("rdpbase.dll", "TSFree")
Interceptor.attach(TSFree, {onLeave: function (args) {send("TSFree");}});

var TSRNG_GenerateRandomBits = Module.findExportByName("rdpbase.dll", "TSRNG_GenerateRandomBits")
Interceptor.attach(TSRNG_GenerateRandomBits, {onLeave: function (args) {send("TSRNG_GenerateRandomBits");}});

var TsAddRectsToRegion = Module.findExportByName("rdpbase.dll", "TsAddRectsToRegion")
Interceptor.attach(TsAddRectsToRegion, {onLeave: function (args) {send("TsAddRectsToRegion");}});

var TsCreateRegion = Module.findExportByName("rdpbase.dll", "TsCreateRegion")
Interceptor.attach(TsCreateRegion, {onLeave: function (args) {send("TsCreateRegion");}});

var TsDestroyRegion = Module.findExportByName("rdpbase.dll", "TsDestroyRegion")
Interceptor.attach(TsDestroyRegion, {onLeave: function (args) {send("TsDestroyRegion");}});

var TsGetRegionBoundingBox = Module.findExportByName("rdpbase.dll", "TsGetRegionBoundingBox")
Interceptor.attach(TsGetRegionBoundingBox, {onLeave: function (args) {send("TsGetRegionBoundingBox");}});

var TsGetRegionRectCount = Module.findExportByName("rdpbase.dll", "TsGetRegionRectCount")
Interceptor.attach(TsGetRegionRectCount, {onLeave: function (args) {send("TsGetRegionRectCount");}});

var TsGetRegionRects = Module.findExportByName("rdpbase.dll", "TsGetRegionRects")
Interceptor.attach(TsGetRegionRects, {onLeave: function (args) {send("TsGetRegionRects");}});

var TsSetRegionFromRects = Module.findExportByName("rdpbase.dll", "TsSetRegionFromRects")
Interceptor.attach(TsSetRegionFromRects, {onLeave: function (args) {send("TsSetRegionFromRects");}});

var UnpackServerCert = Module.findExportByName("rdpbase.dll", "UnpackServerCert")
Interceptor.attach(UnpackServerCert, {onLeave: function (args) {send("UnpackServerCert");}});

var UpdateSessionKey = Module.findExportByName("rdpbase.dll", "UpdateSessionKey")
Interceptor.attach(UpdateSessionKey, {onLeave: function (args) {send("UpdateSessionKey");}});

var ValidateServerCert = Module.findExportByName("rdpbase.dll", "ValidateServerCert")
Interceptor.attach(ValidateServerCert, {onLeave: function (args) {send("ValidateServerCert");}});

