var ActivatorUpdateForIsRouterChanges = Module.findExportByName("clbcatq.dll", "ActivatorUpdateForIsRouterChanges")
Interceptor.attach(ActivatorUpdateForIsRouterChanges, {onLeave: function (args) {send("ActivatorUpdateForIsRouterChanges");}});

var CLSIDFromStringByBitness = Module.findExportByName("clbcatq.dll", "CLSIDFromStringByBitness")
Interceptor.attach(CLSIDFromStringByBitness, {onLeave: function (args) {send("CLSIDFromStringByBitness");}});

var CheckMemoryGates = Module.findExportByName("clbcatq.dll", "CheckMemoryGates")
Interceptor.attach(CheckMemoryGates, {onLeave: function (args) {send("CheckMemoryGates");}});

var CoRegCleanup = Module.findExportByName("clbcatq.dll", "CoRegCleanup")
Interceptor.attach(CoRegCleanup, {onLeave: function (args) {send("CoRegCleanup");}});

var ComPlusEnablePartitions = Module.findExportByName("clbcatq.dll", "ComPlusEnablePartitions")
Interceptor.attach(ComPlusEnablePartitions, {onLeave: function (args) {send("ComPlusEnablePartitions");}});

var ComPlusEnableRemoteAccess = Module.findExportByName("clbcatq.dll", "ComPlusEnableRemoteAccess")
Interceptor.attach(ComPlusEnableRemoteAccess, {onLeave: function (args) {send("ComPlusEnableRemoteAccess");}});

var ComPlusMigrate = Module.findExportByName("clbcatq.dll", "ComPlusMigrate")
Interceptor.attach(ComPlusMigrate, {onLeave: function (args) {send("ComPlusMigrate");}});

var ComPlusPartitionsEnabled = Module.findExportByName("clbcatq.dll", "ComPlusPartitionsEnabled")
Interceptor.attach(ComPlusPartitionsEnabled, {onLeave: function (args) {send("ComPlusPartitionsEnabled");}});

var ComPlusRemoteAccessEnabled = Module.findExportByName("clbcatq.dll", "ComPlusRemoteAccessEnabled")
Interceptor.attach(ComPlusRemoteAccessEnabled, {onLeave: function (args) {send("ComPlusRemoteAccessEnabled");}});

var CreateComponentLibraryEx = Module.findExportByName("clbcatq.dll", "CreateComponentLibraryEx")
Interceptor.attach(CreateComponentLibraryEx, {onLeave: function (args) {send("CreateComponentLibraryEx");}});

var DeleteAllActivatorsForClsid = Module.findExportByName("clbcatq.dll", "DeleteAllActivatorsForClsid")
Interceptor.attach(DeleteAllActivatorsForClsid, {onLeave: function (args) {send("DeleteAllActivatorsForClsid");}});

var DllCanUnloadNow = Module.findExportByName("clbcatq.dll", "DllCanUnloadNow")
Interceptor.attach(DllCanUnloadNow, {onLeave: function (args) {send("DllCanUnloadNow");}});

var DllGetClassObject = Module.findExportByName("clbcatq.dll", "DllGetClassObject")
Interceptor.attach(DllGetClassObject, {onLeave: function (args) {send("DllGetClassObject");}});

var DllRegisterServer = Module.findExportByName("clbcatq.dll", "DllRegisterServer")
Interceptor.attach(DllRegisterServer, {onLeave: function (args) {send("DllRegisterServer");}});

var DllUnregisterServer = Module.findExportByName("clbcatq.dll", "DllUnregisterServer")
Interceptor.attach(DllUnregisterServer, {onLeave: function (args) {send("DllUnregisterServer");}});

var DowngradeAPL = Module.findExportByName("clbcatq.dll", "DowngradeAPL")
Interceptor.attach(DowngradeAPL, {onLeave: function (args) {send("DowngradeAPL");}});

var GetCatalogObject = Module.findExportByName("clbcatq.dll", "GetCatalogObject")
Interceptor.attach(GetCatalogObject, {onLeave: function (args) {send("GetCatalogObject");}});

var GetCatalogObject2 = Module.findExportByName("clbcatq.dll", "GetCatalogObject2")
Interceptor.attach(GetCatalogObject2, {onLeave: function (args) {send("GetCatalogObject2");}});

var GetComputerObject = Module.findExportByName("clbcatq.dll", "GetComputerObject")
Interceptor.attach(GetComputerObject, {onLeave: function (args) {send("GetComputerObject");}});

var GetGlobalBabyJITEnabled = Module.findExportByName("clbcatq.dll", "GetGlobalBabyJITEnabled")
Interceptor.attach(GetGlobalBabyJITEnabled, {onLeave: function (args) {send("GetGlobalBabyJITEnabled");}});

var GetSimpleTableDispenser = Module.findExportByName("clbcatq.dll", "GetSimpleTableDispenser")
Interceptor.attach(GetSimpleTableDispenser, {onLeave: function (args) {send("GetSimpleTableDispenser");}});

var InprocServer32FromString = Module.findExportByName("clbcatq.dll", "InprocServer32FromString")
Interceptor.attach(InprocServer32FromString, {onLeave: function (args) {send("InprocServer32FromString");}});

var OpenComponentLibraryEx = Module.findExportByName("clbcatq.dll", "OpenComponentLibraryEx")
Interceptor.attach(OpenComponentLibraryEx, {onLeave: function (args) {send("OpenComponentLibraryEx");}});

var OpenComponentLibraryOnMemEx = Module.findExportByName("clbcatq.dll", "OpenComponentLibraryOnMemEx")
Interceptor.attach(OpenComponentLibraryOnMemEx, {onLeave: function (args) {send("OpenComponentLibraryOnMemEx");}});

var OpenComponentLibraryOnStreamEx = Module.findExportByName("clbcatq.dll", "OpenComponentLibraryOnStreamEx")
Interceptor.attach(OpenComponentLibraryOnStreamEx, {onLeave: function (args) {send("OpenComponentLibraryOnStreamEx");}});

var ServerGetApplicationType = Module.findExportByName("clbcatq.dll", "ServerGetApplicationType")
Interceptor.attach(ServerGetApplicationType, {onLeave: function (args) {send("ServerGetApplicationType");}});

var SetSetupOpen = Module.findExportByName("clbcatq.dll", "SetSetupOpen")
Interceptor.attach(SetSetupOpen, {onLeave: function (args) {send("SetSetupOpen");}});

var SetSetupSave = Module.findExportByName("clbcatq.dll", "SetSetupSave")
Interceptor.attach(SetSetupSave, {onLeave: function (args) {send("SetSetupSave");}});

var SetupOpen = Module.findExportByName("clbcatq.dll", "SetupOpen")
Interceptor.attach(SetupOpen, {onLeave: function (args) {send("SetupOpen");}});

var SetupSave = Module.findExportByName("clbcatq.dll", "SetupSave")
Interceptor.attach(SetupSave, {onLeave: function (args) {send("SetupSave");}});

var UpdateFromAppChange = Module.findExportByName("clbcatq.dll", "UpdateFromAppChange")
Interceptor.attach(UpdateFromAppChange, {onLeave: function (args) {send("UpdateFromAppChange");}});

var UpdateFromComponentChange = Module.findExportByName("clbcatq.dll", "UpdateFromComponentChange")
Interceptor.attach(UpdateFromComponentChange, {onLeave: function (args) {send("UpdateFromComponentChange");}});

