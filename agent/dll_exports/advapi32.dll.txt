var A_SHAFinal = Module.findExportByName("advapi32.dll", "A_SHAFinal")
Interceptor.attach(A_SHAFinal, {onLeave: function (args) {send("A_SHAFinal");}});

var A_SHAInit = Module.findExportByName("advapi32.dll", "A_SHAInit")
Interceptor.attach(A_SHAInit, {onLeave: function (args) {send("A_SHAInit");}});

var A_SHAUpdate = Module.findExportByName("advapi32.dll", "A_SHAUpdate")
Interceptor.attach(A_SHAUpdate, {onLeave: function (args) {send("A_SHAUpdate");}});

var AbortSystemShutdownA = Module.findExportByName("advapi32.dll", "AbortSystemShutdownA")
Interceptor.attach(AbortSystemShutdownA, {onLeave: function (args) {send("AbortSystemShutdownA");}});

var AbortSystemShutdownW = Module.findExportByName("advapi32.dll", "AbortSystemShutdownW")
Interceptor.attach(AbortSystemShutdownW, {onLeave: function (args) {send("AbortSystemShutdownW");}});

var AccessCheck = Module.findExportByName("advapi32.dll", "AccessCheck")
Interceptor.attach(AccessCheck, {onLeave: function (args) {send("AccessCheck");}});

var AccessCheckAndAuditAlarmA = Module.findExportByName("advapi32.dll", "AccessCheckAndAuditAlarmA")
Interceptor.attach(AccessCheckAndAuditAlarmA, {onLeave: function (args) {send("AccessCheckAndAuditAlarmA");}});

var AccessCheckAndAuditAlarmW = Module.findExportByName("advapi32.dll", "AccessCheckAndAuditAlarmW")
Interceptor.attach(AccessCheckAndAuditAlarmW, {onLeave: function (args) {send("AccessCheckAndAuditAlarmW");}});

var AccessCheckByType = Module.findExportByName("advapi32.dll", "AccessCheckByType")
Interceptor.attach(AccessCheckByType, {onLeave: function (args) {send("AccessCheckByType");}});

var AccessCheckByTypeAndAuditAlarmA = Module.findExportByName("advapi32.dll", "AccessCheckByTypeAndAuditAlarmA")
Interceptor.attach(AccessCheckByTypeAndAuditAlarmA, {onLeave: function (args) {send("AccessCheckByTypeAndAuditAlarmA");}});

var AccessCheckByTypeAndAuditAlarmW = Module.findExportByName("advapi32.dll", "AccessCheckByTypeAndAuditAlarmW")
Interceptor.attach(AccessCheckByTypeAndAuditAlarmW, {onLeave: function (args) {send("AccessCheckByTypeAndAuditAlarmW");}});

var AccessCheckByTypeResultList = Module.findExportByName("advapi32.dll", "AccessCheckByTypeResultList")
Interceptor.attach(AccessCheckByTypeResultList, {onLeave: function (args) {send("AccessCheckByTypeResultList");}});

var AccessCheckByTypeResultListAndAuditAlarmA = Module.findExportByName("advapi32.dll", "AccessCheckByTypeResultListAndAuditAlarmA")
Interceptor.attach(AccessCheckByTypeResultListAndAuditAlarmA, {onLeave: function (args) {send("AccessCheckByTypeResultListAndAuditAlarmA");}});

var AccessCheckByTypeResultListAndAuditAlarmByHandleA = Module.findExportByName("advapi32.dll", "AccessCheckByTypeResultListAndAuditAlarmByHandleA")
Interceptor.attach(AccessCheckByTypeResultListAndAuditAlarmByHandleA, {onLeave: function (args) {send("AccessCheckByTypeResultListAndAuditAlarmByHandleA");}});

var AccessCheckByTypeResultListAndAuditAlarmByHandleW = Module.findExportByName("advapi32.dll", "AccessCheckByTypeResultListAndAuditAlarmByHandleW")
Interceptor.attach(AccessCheckByTypeResultListAndAuditAlarmByHandleW, {onLeave: function (args) {send("AccessCheckByTypeResultListAndAuditAlarmByHandleW");}});

var AccessCheckByTypeResultListAndAuditAlarmW = Module.findExportByName("advapi32.dll", "AccessCheckByTypeResultListAndAuditAlarmW")
Interceptor.attach(AccessCheckByTypeResultListAndAuditAlarmW, {onLeave: function (args) {send("AccessCheckByTypeResultListAndAuditAlarmW");}});

var AddAccessAllowedAce = Module.findExportByName("advapi32.dll", "AddAccessAllowedAce")
Interceptor.attach(AddAccessAllowedAce, {onLeave: function (args) {send("AddAccessAllowedAce");}});

var AddAccessAllowedAceEx = Module.findExportByName("advapi32.dll", "AddAccessAllowedAceEx")
Interceptor.attach(AddAccessAllowedAceEx, {onLeave: function (args) {send("AddAccessAllowedAceEx");}});

var AddAccessAllowedObjectAce = Module.findExportByName("advapi32.dll", "AddAccessAllowedObjectAce")
Interceptor.attach(AddAccessAllowedObjectAce, {onLeave: function (args) {send("AddAccessAllowedObjectAce");}});

var AddAccessDeniedAce = Module.findExportByName("advapi32.dll", "AddAccessDeniedAce")
Interceptor.attach(AddAccessDeniedAce, {onLeave: function (args) {send("AddAccessDeniedAce");}});

var AddAccessDeniedAceEx = Module.findExportByName("advapi32.dll", "AddAccessDeniedAceEx")
Interceptor.attach(AddAccessDeniedAceEx, {onLeave: function (args) {send("AddAccessDeniedAceEx");}});

var AddAccessDeniedObjectAce = Module.findExportByName("advapi32.dll", "AddAccessDeniedObjectAce")
Interceptor.attach(AddAccessDeniedObjectAce, {onLeave: function (args) {send("AddAccessDeniedObjectAce");}});

var AddAce = Module.findExportByName("advapi32.dll", "AddAce")
Interceptor.attach(AddAce, {onLeave: function (args) {send("AddAce");}});

var AddAuditAccessAce = Module.findExportByName("advapi32.dll", "AddAuditAccessAce")
Interceptor.attach(AddAuditAccessAce, {onLeave: function (args) {send("AddAuditAccessAce");}});

var AddAuditAccessAceEx = Module.findExportByName("advapi32.dll", "AddAuditAccessAceEx")
Interceptor.attach(AddAuditAccessAceEx, {onLeave: function (args) {send("AddAuditAccessAceEx");}});

var AddAuditAccessObjectAce = Module.findExportByName("advapi32.dll", "AddAuditAccessObjectAce")
Interceptor.attach(AddAuditAccessObjectAce, {onLeave: function (args) {send("AddAuditAccessObjectAce");}});

var AddConditionalAce = Module.findExportByName("advapi32.dll", "AddConditionalAce")
Interceptor.attach(AddConditionalAce, {onLeave: function (args) {send("AddConditionalAce");}});

var AddMandatoryAce = Module.findExportByName("advapi32.dll", "AddMandatoryAce")
Interceptor.attach(AddMandatoryAce, {onLeave: function (args) {send("AddMandatoryAce");}});

var AddUsersToEncryptedFile = Module.findExportByName("advapi32.dll", "AddUsersToEncryptedFile")
Interceptor.attach(AddUsersToEncryptedFile, {onLeave: function (args) {send("AddUsersToEncryptedFile");}});

var AddUsersToEncryptedFileEx = Module.findExportByName("advapi32.dll", "AddUsersToEncryptedFileEx")
Interceptor.attach(AddUsersToEncryptedFileEx, {onLeave: function (args) {send("AddUsersToEncryptedFileEx");}});

var AdjustTokenGroups = Module.findExportByName("advapi32.dll", "AdjustTokenGroups")
Interceptor.attach(AdjustTokenGroups, {onLeave: function (args) {send("AdjustTokenGroups");}});

var AdjustTokenPrivileges = Module.findExportByName("advapi32.dll", "AdjustTokenPrivileges")
Interceptor.attach(AdjustTokenPrivileges, {onLeave: function (args) {send("AdjustTokenPrivileges");}});

var AllocateAndInitializeSid = Module.findExportByName("advapi32.dll", "AllocateAndInitializeSid")
Interceptor.attach(AllocateAndInitializeSid, {onLeave: function (args) {send("AllocateAndInitializeSid");}});

var AllocateLocallyUniqueId = Module.findExportByName("advapi32.dll", "AllocateLocallyUniqueId")
Interceptor.attach(AllocateLocallyUniqueId, {onLeave: function (args) {send("AllocateLocallyUniqueId");}});

var AreAllAccessesGranted = Module.findExportByName("advapi32.dll", "AreAllAccessesGranted")
Interceptor.attach(AreAllAccessesGranted, {onLeave: function (args) {send("AreAllAccessesGranted");}});

var AreAnyAccessesGranted = Module.findExportByName("advapi32.dll", "AreAnyAccessesGranted")
Interceptor.attach(AreAnyAccessesGranted, {onLeave: function (args) {send("AreAnyAccessesGranted");}});

var AuditComputeEffectivePolicyBySid = Module.findExportByName("advapi32.dll", "AuditComputeEffectivePolicyBySid")
Interceptor.attach(AuditComputeEffectivePolicyBySid, {onLeave: function (args) {send("AuditComputeEffectivePolicyBySid");}});

var AuditComputeEffectivePolicyByToken = Module.findExportByName("advapi32.dll", "AuditComputeEffectivePolicyByToken")
Interceptor.attach(AuditComputeEffectivePolicyByToken, {onLeave: function (args) {send("AuditComputeEffectivePolicyByToken");}});

var AuditEnumerateCategories = Module.findExportByName("advapi32.dll", "AuditEnumerateCategories")
Interceptor.attach(AuditEnumerateCategories, {onLeave: function (args) {send("AuditEnumerateCategories");}});

var AuditEnumeratePerUserPolicy = Module.findExportByName("advapi32.dll", "AuditEnumeratePerUserPolicy")
Interceptor.attach(AuditEnumeratePerUserPolicy, {onLeave: function (args) {send("AuditEnumeratePerUserPolicy");}});

var AuditEnumerateSubCategories = Module.findExportByName("advapi32.dll", "AuditEnumerateSubCategories")
Interceptor.attach(AuditEnumerateSubCategories, {onLeave: function (args) {send("AuditEnumerateSubCategories");}});

var AuditFree = Module.findExportByName("advapi32.dll", "AuditFree")
Interceptor.attach(AuditFree, {onLeave: function (args) {send("AuditFree");}});

var AuditLookupCategoryGuidFromCategoryId = Module.findExportByName("advapi32.dll", "AuditLookupCategoryGuidFromCategoryId")
Interceptor.attach(AuditLookupCategoryGuidFromCategoryId, {onLeave: function (args) {send("AuditLookupCategoryGuidFromCategoryId");}});

var AuditLookupCategoryIdFromCategoryGuid = Module.findExportByName("advapi32.dll", "AuditLookupCategoryIdFromCategoryGuid")
Interceptor.attach(AuditLookupCategoryIdFromCategoryGuid, {onLeave: function (args) {send("AuditLookupCategoryIdFromCategoryGuid");}});

var AuditLookupCategoryNameA = Module.findExportByName("advapi32.dll", "AuditLookupCategoryNameA")
Interceptor.attach(AuditLookupCategoryNameA, {onLeave: function (args) {send("AuditLookupCategoryNameA");}});

var AuditLookupCategoryNameW = Module.findExportByName("advapi32.dll", "AuditLookupCategoryNameW")
Interceptor.attach(AuditLookupCategoryNameW, {onLeave: function (args) {send("AuditLookupCategoryNameW");}});

var AuditLookupSubCategoryNameA = Module.findExportByName("advapi32.dll", "AuditLookupSubCategoryNameA")
Interceptor.attach(AuditLookupSubCategoryNameA, {onLeave: function (args) {send("AuditLookupSubCategoryNameA");}});

var AuditLookupSubCategoryNameW = Module.findExportByName("advapi32.dll", "AuditLookupSubCategoryNameW")
Interceptor.attach(AuditLookupSubCategoryNameW, {onLeave: function (args) {send("AuditLookupSubCategoryNameW");}});

var AuditQueryGlobalSaclA = Module.findExportByName("advapi32.dll", "AuditQueryGlobalSaclA")
Interceptor.attach(AuditQueryGlobalSaclA, {onLeave: function (args) {send("AuditQueryGlobalSaclA");}});

var AuditQueryGlobalSaclW = Module.findExportByName("advapi32.dll", "AuditQueryGlobalSaclW")
Interceptor.attach(AuditQueryGlobalSaclW, {onLeave: function (args) {send("AuditQueryGlobalSaclW");}});

var AuditQueryPerUserPolicy = Module.findExportByName("advapi32.dll", "AuditQueryPerUserPolicy")
Interceptor.attach(AuditQueryPerUserPolicy, {onLeave: function (args) {send("AuditQueryPerUserPolicy");}});

var AuditQuerySecurity = Module.findExportByName("advapi32.dll", "AuditQuerySecurity")
Interceptor.attach(AuditQuerySecurity, {onLeave: function (args) {send("AuditQuerySecurity");}});

var AuditQuerySystemPolicy = Module.findExportByName("advapi32.dll", "AuditQuerySystemPolicy")
Interceptor.attach(AuditQuerySystemPolicy, {onLeave: function (args) {send("AuditQuerySystemPolicy");}});

var AuditSetGlobalSaclA = Module.findExportByName("advapi32.dll", "AuditSetGlobalSaclA")
Interceptor.attach(AuditSetGlobalSaclA, {onLeave: function (args) {send("AuditSetGlobalSaclA");}});

var AuditSetGlobalSaclW = Module.findExportByName("advapi32.dll", "AuditSetGlobalSaclW")
Interceptor.attach(AuditSetGlobalSaclW, {onLeave: function (args) {send("AuditSetGlobalSaclW");}});

var AuditSetPerUserPolicy = Module.findExportByName("advapi32.dll", "AuditSetPerUserPolicy")
Interceptor.attach(AuditSetPerUserPolicy, {onLeave: function (args) {send("AuditSetPerUserPolicy");}});

var AuditSetSecurity = Module.findExportByName("advapi32.dll", "AuditSetSecurity")
Interceptor.attach(AuditSetSecurity, {onLeave: function (args) {send("AuditSetSecurity");}});

var AuditSetSystemPolicy = Module.findExportByName("advapi32.dll", "AuditSetSystemPolicy")
Interceptor.attach(AuditSetSystemPolicy, {onLeave: function (args) {send("AuditSetSystemPolicy");}});

var BackupEventLogA = Module.findExportByName("advapi32.dll", "BackupEventLogA")
Interceptor.attach(BackupEventLogA, {onLeave: function (args) {send("BackupEventLogA");}});

var BackupEventLogW = Module.findExportByName("advapi32.dll", "BackupEventLogW")
Interceptor.attach(BackupEventLogW, {onLeave: function (args) {send("BackupEventLogW");}});

var BaseRegCloseKey = Module.findExportByName("advapi32.dll", "BaseRegCloseKey")
Interceptor.attach(BaseRegCloseKey, {onLeave: function (args) {send("BaseRegCloseKey");}});

var BaseRegCreateKey = Module.findExportByName("advapi32.dll", "BaseRegCreateKey")
Interceptor.attach(BaseRegCreateKey, {onLeave: function (args) {send("BaseRegCreateKey");}});

var BaseRegDeleteKeyEx = Module.findExportByName("advapi32.dll", "BaseRegDeleteKeyEx")
Interceptor.attach(BaseRegDeleteKeyEx, {onLeave: function (args) {send("BaseRegDeleteKeyEx");}});

var BaseRegDeleteValue = Module.findExportByName("advapi32.dll", "BaseRegDeleteValue")
Interceptor.attach(BaseRegDeleteValue, {onLeave: function (args) {send("BaseRegDeleteValue");}});

var BaseRegFlushKey = Module.findExportByName("advapi32.dll", "BaseRegFlushKey")
Interceptor.attach(BaseRegFlushKey, {onLeave: function (args) {send("BaseRegFlushKey");}});

var BaseRegGetVersion = Module.findExportByName("advapi32.dll", "BaseRegGetVersion")
Interceptor.attach(BaseRegGetVersion, {onLeave: function (args) {send("BaseRegGetVersion");}});

var BaseRegLoadKey = Module.findExportByName("advapi32.dll", "BaseRegLoadKey")
Interceptor.attach(BaseRegLoadKey, {onLeave: function (args) {send("BaseRegLoadKey");}});

var BaseRegOpenKey = Module.findExportByName("advapi32.dll", "BaseRegOpenKey")
Interceptor.attach(BaseRegOpenKey, {onLeave: function (args) {send("BaseRegOpenKey");}});

var BaseRegRestoreKey = Module.findExportByName("advapi32.dll", "BaseRegRestoreKey")
Interceptor.attach(BaseRegRestoreKey, {onLeave: function (args) {send("BaseRegRestoreKey");}});

var BaseRegSaveKeyEx = Module.findExportByName("advapi32.dll", "BaseRegSaveKeyEx")
Interceptor.attach(BaseRegSaveKeyEx, {onLeave: function (args) {send("BaseRegSaveKeyEx");}});

var BaseRegSetKeySecurity = Module.findExportByName("advapi32.dll", "BaseRegSetKeySecurity")
Interceptor.attach(BaseRegSetKeySecurity, {onLeave: function (args) {send("BaseRegSetKeySecurity");}});

var BaseRegSetValue = Module.findExportByName("advapi32.dll", "BaseRegSetValue")
Interceptor.attach(BaseRegSetValue, {onLeave: function (args) {send("BaseRegSetValue");}});

var BaseRegUnLoadKey = Module.findExportByName("advapi32.dll", "BaseRegUnLoadKey")
Interceptor.attach(BaseRegUnLoadKey, {onLeave: function (args) {send("BaseRegUnLoadKey");}});

var BuildExplicitAccessWithNameA = Module.findExportByName("advapi32.dll", "BuildExplicitAccessWithNameA")
Interceptor.attach(BuildExplicitAccessWithNameA, {onLeave: function (args) {send("BuildExplicitAccessWithNameA");}});

var BuildExplicitAccessWithNameW = Module.findExportByName("advapi32.dll", "BuildExplicitAccessWithNameW")
Interceptor.attach(BuildExplicitAccessWithNameW, {onLeave: function (args) {send("BuildExplicitAccessWithNameW");}});

var BuildImpersonateExplicitAccessWithNameA = Module.findExportByName("advapi32.dll", "BuildImpersonateExplicitAccessWithNameA")
Interceptor.attach(BuildImpersonateExplicitAccessWithNameA, {onLeave: function (args) {send("BuildImpersonateExplicitAccessWithNameA");}});

var BuildImpersonateExplicitAccessWithNameW = Module.findExportByName("advapi32.dll", "BuildImpersonateExplicitAccessWithNameW")
Interceptor.attach(BuildImpersonateExplicitAccessWithNameW, {onLeave: function (args) {send("BuildImpersonateExplicitAccessWithNameW");}});

var BuildImpersonateTrusteeA = Module.findExportByName("advapi32.dll", "BuildImpersonateTrusteeA")
Interceptor.attach(BuildImpersonateTrusteeA, {onLeave: function (args) {send("BuildImpersonateTrusteeA");}});

var BuildImpersonateTrusteeW = Module.findExportByName("advapi32.dll", "BuildImpersonateTrusteeW")
Interceptor.attach(BuildImpersonateTrusteeW, {onLeave: function (args) {send("BuildImpersonateTrusteeW");}});

var BuildSecurityDescriptorA = Module.findExportByName("advapi32.dll", "BuildSecurityDescriptorA")
Interceptor.attach(BuildSecurityDescriptorA, {onLeave: function (args) {send("BuildSecurityDescriptorA");}});

var BuildSecurityDescriptorW = Module.findExportByName("advapi32.dll", "BuildSecurityDescriptorW")
Interceptor.attach(BuildSecurityDescriptorW, {onLeave: function (args) {send("BuildSecurityDescriptorW");}});

var BuildTrusteeWithNameA = Module.findExportByName("advapi32.dll", "BuildTrusteeWithNameA")
Interceptor.attach(BuildTrusteeWithNameA, {onLeave: function (args) {send("BuildTrusteeWithNameA");}});

var BuildTrusteeWithNameW = Module.findExportByName("advapi32.dll", "BuildTrusteeWithNameW")
Interceptor.attach(BuildTrusteeWithNameW, {onLeave: function (args) {send("BuildTrusteeWithNameW");}});

var BuildTrusteeWithObjectsAndNameA = Module.findExportByName("advapi32.dll", "BuildTrusteeWithObjectsAndNameA")
Interceptor.attach(BuildTrusteeWithObjectsAndNameA, {onLeave: function (args) {send("BuildTrusteeWithObjectsAndNameA");}});

var BuildTrusteeWithObjectsAndNameW = Module.findExportByName("advapi32.dll", "BuildTrusteeWithObjectsAndNameW")
Interceptor.attach(BuildTrusteeWithObjectsAndNameW, {onLeave: function (args) {send("BuildTrusteeWithObjectsAndNameW");}});

var BuildTrusteeWithObjectsAndSidA = Module.findExportByName("advapi32.dll", "BuildTrusteeWithObjectsAndSidA")
Interceptor.attach(BuildTrusteeWithObjectsAndSidA, {onLeave: function (args) {send("BuildTrusteeWithObjectsAndSidA");}});

var BuildTrusteeWithObjectsAndSidW = Module.findExportByName("advapi32.dll", "BuildTrusteeWithObjectsAndSidW")
Interceptor.attach(BuildTrusteeWithObjectsAndSidW, {onLeave: function (args) {send("BuildTrusteeWithObjectsAndSidW");}});

var BuildTrusteeWithSidA = Module.findExportByName("advapi32.dll", "BuildTrusteeWithSidA")
Interceptor.attach(BuildTrusteeWithSidA, {onLeave: function (args) {send("BuildTrusteeWithSidA");}});

var BuildTrusteeWithSidW = Module.findExportByName("advapi32.dll", "BuildTrusteeWithSidW")
Interceptor.attach(BuildTrusteeWithSidW, {onLeave: function (args) {send("BuildTrusteeWithSidW");}});

var CancelOverlappedAccess = Module.findExportByName("advapi32.dll", "CancelOverlappedAccess")
Interceptor.attach(CancelOverlappedAccess, {onLeave: function (args) {send("CancelOverlappedAccess");}});

var ChangeServiceConfig2A = Module.findExportByName("advapi32.dll", "ChangeServiceConfig2A")
Interceptor.attach(ChangeServiceConfig2A, {onLeave: function (args) {send("ChangeServiceConfig2A");}});

var ChangeServiceConfig2W = Module.findExportByName("advapi32.dll", "ChangeServiceConfig2W")
Interceptor.attach(ChangeServiceConfig2W, {onLeave: function (args) {send("ChangeServiceConfig2W");}});

var ChangeServiceConfigA = Module.findExportByName("advapi32.dll", "ChangeServiceConfigA")
Interceptor.attach(ChangeServiceConfigA, {onLeave: function (args) {send("ChangeServiceConfigA");}});

var ChangeServiceConfigW = Module.findExportByName("advapi32.dll", "ChangeServiceConfigW")
Interceptor.attach(ChangeServiceConfigW, {onLeave: function (args) {send("ChangeServiceConfigW");}});

var CheckForHiberboot = Module.findExportByName("advapi32.dll", "CheckForHiberboot")
Interceptor.attach(CheckForHiberboot, {onLeave: function (args) {send("CheckForHiberboot");}});

var CheckTokenMembership = Module.findExportByName("advapi32.dll", "CheckTokenMembership")
Interceptor.attach(CheckTokenMembership, {onLeave: function (args) {send("CheckTokenMembership");}});

var ClearEventLogA = Module.findExportByName("advapi32.dll", "ClearEventLogA")
Interceptor.attach(ClearEventLogA, {onLeave: function (args) {send("ClearEventLogA");}});

var ClearEventLogW = Module.findExportByName("advapi32.dll", "ClearEventLogW")
Interceptor.attach(ClearEventLogW, {onLeave: function (args) {send("ClearEventLogW");}});

var CloseCodeAuthzLevel = Module.findExportByName("advapi32.dll", "CloseCodeAuthzLevel")
Interceptor.attach(CloseCodeAuthzLevel, {onLeave: function (args) {send("CloseCodeAuthzLevel");}});

var CloseEncryptedFileRaw = Module.findExportByName("advapi32.dll", "CloseEncryptedFileRaw")
Interceptor.attach(CloseEncryptedFileRaw, {onLeave: function (args) {send("CloseEncryptedFileRaw");}});

var CloseEventLog = Module.findExportByName("advapi32.dll", "CloseEventLog")
Interceptor.attach(CloseEventLog, {onLeave: function (args) {send("CloseEventLog");}});

var CloseServiceHandle = Module.findExportByName("advapi32.dll", "CloseServiceHandle")
Interceptor.attach(CloseServiceHandle, {onLeave: function (args) {send("CloseServiceHandle");}});

var CloseThreadWaitChainSession = Module.findExportByName("advapi32.dll", "CloseThreadWaitChainSession")
Interceptor.attach(CloseThreadWaitChainSession, {onLeave: function (args) {send("CloseThreadWaitChainSession");}});

var CloseTrace = Module.findExportByName("advapi32.dll", "CloseTrace")
Interceptor.attach(CloseTrace, {onLeave: function (args) {send("CloseTrace");}});

var CommandLineFromMsiDescriptor = Module.findExportByName("advapi32.dll", "CommandLineFromMsiDescriptor")
Interceptor.attach(CommandLineFromMsiDescriptor, {onLeave: function (args) {send("CommandLineFromMsiDescriptor");}});

var ComputeAccessTokenFromCodeAuthzLevel = Module.findExportByName("advapi32.dll", "ComputeAccessTokenFromCodeAuthzLevel")
Interceptor.attach(ComputeAccessTokenFromCodeAuthzLevel, {onLeave: function (args) {send("ComputeAccessTokenFromCodeAuthzLevel");}});

var ControlService = Module.findExportByName("advapi32.dll", "ControlService")
Interceptor.attach(ControlService, {onLeave: function (args) {send("ControlService");}});

var ControlServiceExA = Module.findExportByName("advapi32.dll", "ControlServiceExA")
Interceptor.attach(ControlServiceExA, {onLeave: function (args) {send("ControlServiceExA");}});

var ControlServiceExW = Module.findExportByName("advapi32.dll", "ControlServiceExW")
Interceptor.attach(ControlServiceExW, {onLeave: function (args) {send("ControlServiceExW");}});

var ControlTraceA = Module.findExportByName("advapi32.dll", "ControlTraceA")
Interceptor.attach(ControlTraceA, {onLeave: function (args) {send("ControlTraceA");}});

var ControlTraceW = Module.findExportByName("advapi32.dll", "ControlTraceW")
Interceptor.attach(ControlTraceW, {onLeave: function (args) {send("ControlTraceW");}});

var ConvertAccessToSecurityDescriptorA = Module.findExportByName("advapi32.dll", "ConvertAccessToSecurityDescriptorA")
Interceptor.attach(ConvertAccessToSecurityDescriptorA, {onLeave: function (args) {send("ConvertAccessToSecurityDescriptorA");}});

var ConvertAccessToSecurityDescriptorW = Module.findExportByName("advapi32.dll", "ConvertAccessToSecurityDescriptorW")
Interceptor.attach(ConvertAccessToSecurityDescriptorW, {onLeave: function (args) {send("ConvertAccessToSecurityDescriptorW");}});

var ConvertSDToStringSDDomainW = Module.findExportByName("advapi32.dll", "ConvertSDToStringSDDomainW")
Interceptor.attach(ConvertSDToStringSDDomainW, {onLeave: function (args) {send("ConvertSDToStringSDDomainW");}});

var ConvertSDToStringSDRootDomainA = Module.findExportByName("advapi32.dll", "ConvertSDToStringSDRootDomainA")
Interceptor.attach(ConvertSDToStringSDRootDomainA, {onLeave: function (args) {send("ConvertSDToStringSDRootDomainA");}});

var ConvertSDToStringSDRootDomainW = Module.findExportByName("advapi32.dll", "ConvertSDToStringSDRootDomainW")
Interceptor.attach(ConvertSDToStringSDRootDomainW, {onLeave: function (args) {send("ConvertSDToStringSDRootDomainW");}});

var ConvertSecurityDescriptorToAccessA = Module.findExportByName("advapi32.dll", "ConvertSecurityDescriptorToAccessA")
Interceptor.attach(ConvertSecurityDescriptorToAccessA, {onLeave: function (args) {send("ConvertSecurityDescriptorToAccessA");}});

var ConvertSecurityDescriptorToAccessNamedA = Module.findExportByName("advapi32.dll", "ConvertSecurityDescriptorToAccessNamedA")
Interceptor.attach(ConvertSecurityDescriptorToAccessNamedA, {onLeave: function (args) {send("ConvertSecurityDescriptorToAccessNamedA");}});

var ConvertSecurityDescriptorToAccessNamedW = Module.findExportByName("advapi32.dll", "ConvertSecurityDescriptorToAccessNamedW")
Interceptor.attach(ConvertSecurityDescriptorToAccessNamedW, {onLeave: function (args) {send("ConvertSecurityDescriptorToAccessNamedW");}});

var ConvertSecurityDescriptorToAccessW = Module.findExportByName("advapi32.dll", "ConvertSecurityDescriptorToAccessW")
Interceptor.attach(ConvertSecurityDescriptorToAccessW, {onLeave: function (args) {send("ConvertSecurityDescriptorToAccessW");}});

var ConvertSecurityDescriptorToStringSecurityDescriptorA = Module.findExportByName("advapi32.dll", "ConvertSecurityDescriptorToStringSecurityDescriptorA")
Interceptor.attach(ConvertSecurityDescriptorToStringSecurityDescriptorA, {onLeave: function (args) {send("ConvertSecurityDescriptorToStringSecurityDescriptorA");}});

var ConvertSecurityDescriptorToStringSecurityDescriptorW = Module.findExportByName("advapi32.dll", "ConvertSecurityDescriptorToStringSecurityDescriptorW")
Interceptor.attach(ConvertSecurityDescriptorToStringSecurityDescriptorW, {onLeave: function (args) {send("ConvertSecurityDescriptorToStringSecurityDescriptorW");}});

var ConvertSidToStringSidA = Module.findExportByName("advapi32.dll", "ConvertSidToStringSidA")
Interceptor.attach(ConvertSidToStringSidA, {onLeave: function (args) {send("ConvertSidToStringSidA");}});

var ConvertSidToStringSidW = Module.findExportByName("advapi32.dll", "ConvertSidToStringSidW")
Interceptor.attach(ConvertSidToStringSidW, {onLeave: function (args) {send("ConvertSidToStringSidW");}});

var ConvertStringSDToSDDomainA = Module.findExportByName("advapi32.dll", "ConvertStringSDToSDDomainA")
Interceptor.attach(ConvertStringSDToSDDomainA, {onLeave: function (args) {send("ConvertStringSDToSDDomainA");}});

var ConvertStringSDToSDDomainW = Module.findExportByName("advapi32.dll", "ConvertStringSDToSDDomainW")
Interceptor.attach(ConvertStringSDToSDDomainW, {onLeave: function (args) {send("ConvertStringSDToSDDomainW");}});

var ConvertStringSDToSDRootDomainA = Module.findExportByName("advapi32.dll", "ConvertStringSDToSDRootDomainA")
Interceptor.attach(ConvertStringSDToSDRootDomainA, {onLeave: function (args) {send("ConvertStringSDToSDRootDomainA");}});

var ConvertStringSDToSDRootDomainW = Module.findExportByName("advapi32.dll", "ConvertStringSDToSDRootDomainW")
Interceptor.attach(ConvertStringSDToSDRootDomainW, {onLeave: function (args) {send("ConvertStringSDToSDRootDomainW");}});

var ConvertStringSecurityDescriptorToSecurityDescriptorA = Module.findExportByName("advapi32.dll", "ConvertStringSecurityDescriptorToSecurityDescriptorA")
Interceptor.attach(ConvertStringSecurityDescriptorToSecurityDescriptorA, {onLeave: function (args) {send("ConvertStringSecurityDescriptorToSecurityDescriptorA");}});

var ConvertStringSecurityDescriptorToSecurityDescriptorW = Module.findExportByName("advapi32.dll", "ConvertStringSecurityDescriptorToSecurityDescriptorW")
Interceptor.attach(ConvertStringSecurityDescriptorToSecurityDescriptorW, {onLeave: function (args) {send("ConvertStringSecurityDescriptorToSecurityDescriptorW");}});

var ConvertStringSidToSidA = Module.findExportByName("advapi32.dll", "ConvertStringSidToSidA")
Interceptor.attach(ConvertStringSidToSidA, {onLeave: function (args) {send("ConvertStringSidToSidA");}});

var ConvertStringSidToSidW = Module.findExportByName("advapi32.dll", "ConvertStringSidToSidW")
Interceptor.attach(ConvertStringSidToSidW, {onLeave: function (args) {send("ConvertStringSidToSidW");}});

var ConvertToAutoInheritPrivateObjectSecurity = Module.findExportByName("advapi32.dll", "ConvertToAutoInheritPrivateObjectSecurity")
Interceptor.attach(ConvertToAutoInheritPrivateObjectSecurity, {onLeave: function (args) {send("ConvertToAutoInheritPrivateObjectSecurity");}});

var CopySid = Module.findExportByName("advapi32.dll", "CopySid")
Interceptor.attach(CopySid, {onLeave: function (args) {send("CopySid");}});

var CreateCodeAuthzLevel = Module.findExportByName("advapi32.dll", "CreateCodeAuthzLevel")
Interceptor.attach(CreateCodeAuthzLevel, {onLeave: function (args) {send("CreateCodeAuthzLevel");}});

var CreatePrivateObjectSecurity = Module.findExportByName("advapi32.dll", "CreatePrivateObjectSecurity")
Interceptor.attach(CreatePrivateObjectSecurity, {onLeave: function (args) {send("CreatePrivateObjectSecurity");}});

var CreatePrivateObjectSecurityEx = Module.findExportByName("advapi32.dll", "CreatePrivateObjectSecurityEx")
Interceptor.attach(CreatePrivateObjectSecurityEx, {onLeave: function (args) {send("CreatePrivateObjectSecurityEx");}});

var CreatePrivateObjectSecurityWithMultipleInheritance = Module.findExportByName("advapi32.dll", "CreatePrivateObjectSecurityWithMultipleInheritance")
Interceptor.attach(CreatePrivateObjectSecurityWithMultipleInheritance, {onLeave: function (args) {send("CreatePrivateObjectSecurityWithMultipleInheritance");}});

var CreateProcessAsUserA = Module.findExportByName("advapi32.dll", "CreateProcessAsUserA")
Interceptor.attach(CreateProcessAsUserA, {onLeave: function (args) {send("CreateProcessAsUserA");}});

var CreateProcessAsUserW = Module.findExportByName("advapi32.dll", "CreateProcessAsUserW")
Interceptor.attach(CreateProcessAsUserW, {onLeave: function (args) {send("CreateProcessAsUserW");}});

var CreateProcessWithLogonW = Module.findExportByName("advapi32.dll", "CreateProcessWithLogonW")
Interceptor.attach(CreateProcessWithLogonW, {onLeave: function (args) {send("CreateProcessWithLogonW");}});

var CreateProcessWithTokenW = Module.findExportByName("advapi32.dll", "CreateProcessWithTokenW")
Interceptor.attach(CreateProcessWithTokenW, {onLeave: function (args) {send("CreateProcessWithTokenW");}});

var CreateRestrictedToken = Module.findExportByName("advapi32.dll", "CreateRestrictedToken")
Interceptor.attach(CreateRestrictedToken, {onLeave: function (args) {send("CreateRestrictedToken");}});

var CreateServiceA = Module.findExportByName("advapi32.dll", "CreateServiceA")
Interceptor.attach(CreateServiceA, {onLeave: function (args) {send("CreateServiceA");}});

var CreateServiceEx = Module.findExportByName("advapi32.dll", "CreateServiceEx")
Interceptor.attach(CreateServiceEx, {onLeave: function (args) {send("CreateServiceEx");}});

var CreateServiceW = Module.findExportByName("advapi32.dll", "CreateServiceW")
Interceptor.attach(CreateServiceW, {onLeave: function (args) {send("CreateServiceW");}});

var CreateTraceInstanceId = Module.findExportByName("advapi32.dll", "CreateTraceInstanceId")
Interceptor.attach(CreateTraceInstanceId, {onLeave: function (args) {send("CreateTraceInstanceId");}});

var CreateWellKnownSid = Module.findExportByName("advapi32.dll", "CreateWellKnownSid")
Interceptor.attach(CreateWellKnownSid, {onLeave: function (args) {send("CreateWellKnownSid");}});

var CredBackupCredentials = Module.findExportByName("advapi32.dll", "CredBackupCredentials")
Interceptor.attach(CredBackupCredentials, {onLeave: function (args) {send("CredBackupCredentials");}});

var CredDeleteA = Module.findExportByName("advapi32.dll", "CredDeleteA")
Interceptor.attach(CredDeleteA, {onLeave: function (args) {send("CredDeleteA");}});

var CredDeleteW = Module.findExportByName("advapi32.dll", "CredDeleteW")
Interceptor.attach(CredDeleteW, {onLeave: function (args) {send("CredDeleteW");}});

var CredEncryptAndMarshalBinaryBlob = Module.findExportByName("advapi32.dll", "CredEncryptAndMarshalBinaryBlob")
Interceptor.attach(CredEncryptAndMarshalBinaryBlob, {onLeave: function (args) {send("CredEncryptAndMarshalBinaryBlob");}});

var CredEnumerateA = Module.findExportByName("advapi32.dll", "CredEnumerateA")
Interceptor.attach(CredEnumerateA, {onLeave: function (args) {send("CredEnumerateA");}});

var CredEnumerateW = Module.findExportByName("advapi32.dll", "CredEnumerateW")
Interceptor.attach(CredEnumerateW, {onLeave: function (args) {send("CredEnumerateW");}});

var CredFindBestCredentialA = Module.findExportByName("advapi32.dll", "CredFindBestCredentialA")
Interceptor.attach(CredFindBestCredentialA, {onLeave: function (args) {send("CredFindBestCredentialA");}});

var CredFindBestCredentialW = Module.findExportByName("advapi32.dll", "CredFindBestCredentialW")
Interceptor.attach(CredFindBestCredentialW, {onLeave: function (args) {send("CredFindBestCredentialW");}});

var CredFree = Module.findExportByName("advapi32.dll", "CredFree")
Interceptor.attach(CredFree, {onLeave: function (args) {send("CredFree");}});

var CredGetSessionTypes = Module.findExportByName("advapi32.dll", "CredGetSessionTypes")
Interceptor.attach(CredGetSessionTypes, {onLeave: function (args) {send("CredGetSessionTypes");}});

var CredGetTargetInfoA = Module.findExportByName("advapi32.dll", "CredGetTargetInfoA")
Interceptor.attach(CredGetTargetInfoA, {onLeave: function (args) {send("CredGetTargetInfoA");}});

var CredGetTargetInfoW = Module.findExportByName("advapi32.dll", "CredGetTargetInfoW")
Interceptor.attach(CredGetTargetInfoW, {onLeave: function (args) {send("CredGetTargetInfoW");}});

var CredIsMarshaledCredentialA = Module.findExportByName("advapi32.dll", "CredIsMarshaledCredentialA")
Interceptor.attach(CredIsMarshaledCredentialA, {onLeave: function (args) {send("CredIsMarshaledCredentialA");}});

var CredIsMarshaledCredentialW = Module.findExportByName("advapi32.dll", "CredIsMarshaledCredentialW")
Interceptor.attach(CredIsMarshaledCredentialW, {onLeave: function (args) {send("CredIsMarshaledCredentialW");}});

var CredIsProtectedA = Module.findExportByName("advapi32.dll", "CredIsProtectedA")
Interceptor.attach(CredIsProtectedA, {onLeave: function (args) {send("CredIsProtectedA");}});

var CredIsProtectedW = Module.findExportByName("advapi32.dll", "CredIsProtectedW")
Interceptor.attach(CredIsProtectedW, {onLeave: function (args) {send("CredIsProtectedW");}});

var CredMarshalCredentialA = Module.findExportByName("advapi32.dll", "CredMarshalCredentialA")
Interceptor.attach(CredMarshalCredentialA, {onLeave: function (args) {send("CredMarshalCredentialA");}});

var CredMarshalCredentialW = Module.findExportByName("advapi32.dll", "CredMarshalCredentialW")
Interceptor.attach(CredMarshalCredentialW, {onLeave: function (args) {send("CredMarshalCredentialW");}});

var CredProfileLoaded = Module.findExportByName("advapi32.dll", "CredProfileLoaded")
Interceptor.attach(CredProfileLoaded, {onLeave: function (args) {send("CredProfileLoaded");}});

var CredProfileLoadedEx = Module.findExportByName("advapi32.dll", "CredProfileLoadedEx")
Interceptor.attach(CredProfileLoadedEx, {onLeave: function (args) {send("CredProfileLoadedEx");}});

var CredProfileUnloaded = Module.findExportByName("advapi32.dll", "CredProfileUnloaded")
Interceptor.attach(CredProfileUnloaded, {onLeave: function (args) {send("CredProfileUnloaded");}});

var CredProtectA = Module.findExportByName("advapi32.dll", "CredProtectA")
Interceptor.attach(CredProtectA, {onLeave: function (args) {send("CredProtectA");}});

var CredProtectW = Module.findExportByName("advapi32.dll", "CredProtectW")
Interceptor.attach(CredProtectW, {onLeave: function (args) {send("CredProtectW");}});

var CredReadA = Module.findExportByName("advapi32.dll", "CredReadA")
Interceptor.attach(CredReadA, {onLeave: function (args) {send("CredReadA");}});

var CredReadByTokenHandle = Module.findExportByName("advapi32.dll", "CredReadByTokenHandle")
Interceptor.attach(CredReadByTokenHandle, {onLeave: function (args) {send("CredReadByTokenHandle");}});

var CredReadDomainCredentialsA = Module.findExportByName("advapi32.dll", "CredReadDomainCredentialsA")
Interceptor.attach(CredReadDomainCredentialsA, {onLeave: function (args) {send("CredReadDomainCredentialsA");}});

var CredReadDomainCredentialsW = Module.findExportByName("advapi32.dll", "CredReadDomainCredentialsW")
Interceptor.attach(CredReadDomainCredentialsW, {onLeave: function (args) {send("CredReadDomainCredentialsW");}});

var CredReadW = Module.findExportByName("advapi32.dll", "CredReadW")
Interceptor.attach(CredReadW, {onLeave: function (args) {send("CredReadW");}});

var CredRenameA = Module.findExportByName("advapi32.dll", "CredRenameA")
Interceptor.attach(CredRenameA, {onLeave: function (args) {send("CredRenameA");}});

var CredRenameW = Module.findExportByName("advapi32.dll", "CredRenameW")
Interceptor.attach(CredRenameW, {onLeave: function (args) {send("CredRenameW");}});

var CredRestoreCredentials = Module.findExportByName("advapi32.dll", "CredRestoreCredentials")
Interceptor.attach(CredRestoreCredentials, {onLeave: function (args) {send("CredRestoreCredentials");}});

var CredUnmarshalCredentialA = Module.findExportByName("advapi32.dll", "CredUnmarshalCredentialA")
Interceptor.attach(CredUnmarshalCredentialA, {onLeave: function (args) {send("CredUnmarshalCredentialA");}});

var CredUnmarshalCredentialW = Module.findExportByName("advapi32.dll", "CredUnmarshalCredentialW")
Interceptor.attach(CredUnmarshalCredentialW, {onLeave: function (args) {send("CredUnmarshalCredentialW");}});

var CredUnprotectA = Module.findExportByName("advapi32.dll", "CredUnprotectA")
Interceptor.attach(CredUnprotectA, {onLeave: function (args) {send("CredUnprotectA");}});

var CredUnprotectW = Module.findExportByName("advapi32.dll", "CredUnprotectW")
Interceptor.attach(CredUnprotectW, {onLeave: function (args) {send("CredUnprotectW");}});

var CredWriteA = Module.findExportByName("advapi32.dll", "CredWriteA")
Interceptor.attach(CredWriteA, {onLeave: function (args) {send("CredWriteA");}});

var CredWriteDomainCredentialsA = Module.findExportByName("advapi32.dll", "CredWriteDomainCredentialsA")
Interceptor.attach(CredWriteDomainCredentialsA, {onLeave: function (args) {send("CredWriteDomainCredentialsA");}});

var CredWriteDomainCredentialsW = Module.findExportByName("advapi32.dll", "CredWriteDomainCredentialsW")
Interceptor.attach(CredWriteDomainCredentialsW, {onLeave: function (args) {send("CredWriteDomainCredentialsW");}});

var CredWriteW = Module.findExportByName("advapi32.dll", "CredWriteW")
Interceptor.attach(CredWriteW, {onLeave: function (args) {send("CredWriteW");}});

var CredpConvertCredential = Module.findExportByName("advapi32.dll", "CredpConvertCredential")
Interceptor.attach(CredpConvertCredential, {onLeave: function (args) {send("CredpConvertCredential");}});

var CredpConvertOneCredentialSize = Module.findExportByName("advapi32.dll", "CredpConvertOneCredentialSize")
Interceptor.attach(CredpConvertOneCredentialSize, {onLeave: function (args) {send("CredpConvertOneCredentialSize");}});

var CredpConvertTargetInfo = Module.findExportByName("advapi32.dll", "CredpConvertTargetInfo")
Interceptor.attach(CredpConvertTargetInfo, {onLeave: function (args) {send("CredpConvertTargetInfo");}});

var CredpDecodeCredential = Module.findExportByName("advapi32.dll", "CredpDecodeCredential")
Interceptor.attach(CredpDecodeCredential, {onLeave: function (args) {send("CredpDecodeCredential");}});

var CredpEncodeCredential = Module.findExportByName("advapi32.dll", "CredpEncodeCredential")
Interceptor.attach(CredpEncodeCredential, {onLeave: function (args) {send("CredpEncodeCredential");}});

var CredpEncodeSecret = Module.findExportByName("advapi32.dll", "CredpEncodeSecret")
Interceptor.attach(CredpEncodeSecret, {onLeave: function (args) {send("CredpEncodeSecret");}});

var CryptAcquireContextA = Module.findExportByName("advapi32.dll", "CryptAcquireContextA")
Interceptor.attach(CryptAcquireContextA, {onLeave: function (args) {send("CryptAcquireContextA");}});

var CryptAcquireContextW = Module.findExportByName("advapi32.dll", "CryptAcquireContextW")
Interceptor.attach(CryptAcquireContextW, {onLeave: function (args) {send("CryptAcquireContextW");}});

var CryptContextAddRef = Module.findExportByName("advapi32.dll", "CryptContextAddRef")
Interceptor.attach(CryptContextAddRef, {onLeave: function (args) {send("CryptContextAddRef");}});

var CryptCreateHash = Module.findExportByName("advapi32.dll", "CryptCreateHash")
Interceptor.attach(CryptCreateHash, {onLeave: function (args) {send("CryptCreateHash");}});

var CryptDecrypt = Module.findExportByName("advapi32.dll", "CryptDecrypt")
Interceptor.attach(CryptDecrypt, {onLeave: function (args) {send("CryptDecrypt");}});

var CryptDeriveKey = Module.findExportByName("advapi32.dll", "CryptDeriveKey")
Interceptor.attach(CryptDeriveKey, {onLeave: function (args) {send("CryptDeriveKey");}});

var CryptDestroyHash = Module.findExportByName("advapi32.dll", "CryptDestroyHash")
Interceptor.attach(CryptDestroyHash, {onLeave: function (args) {send("CryptDestroyHash");}});

var CryptDestroyKey = Module.findExportByName("advapi32.dll", "CryptDestroyKey")
Interceptor.attach(CryptDestroyKey, {onLeave: function (args) {send("CryptDestroyKey");}});

var CryptDuplicateHash = Module.findExportByName("advapi32.dll", "CryptDuplicateHash")
Interceptor.attach(CryptDuplicateHash, {onLeave: function (args) {send("CryptDuplicateHash");}});

var CryptDuplicateKey = Module.findExportByName("advapi32.dll", "CryptDuplicateKey")
Interceptor.attach(CryptDuplicateKey, {onLeave: function (args) {send("CryptDuplicateKey");}});

var CryptEncrypt = Module.findExportByName("advapi32.dll", "CryptEncrypt")
Interceptor.attach(CryptEncrypt, {onLeave: function (args) {send("CryptEncrypt");}});

var CryptEnumProviderTypesA = Module.findExportByName("advapi32.dll", "CryptEnumProviderTypesA")
Interceptor.attach(CryptEnumProviderTypesA, {onLeave: function (args) {send("CryptEnumProviderTypesA");}});

var CryptEnumProviderTypesW = Module.findExportByName("advapi32.dll", "CryptEnumProviderTypesW")
Interceptor.attach(CryptEnumProviderTypesW, {onLeave: function (args) {send("CryptEnumProviderTypesW");}});

var CryptEnumProvidersA = Module.findExportByName("advapi32.dll", "CryptEnumProvidersA")
Interceptor.attach(CryptEnumProvidersA, {onLeave: function (args) {send("CryptEnumProvidersA");}});

var CryptEnumProvidersW = Module.findExportByName("advapi32.dll", "CryptEnumProvidersW")
Interceptor.attach(CryptEnumProvidersW, {onLeave: function (args) {send("CryptEnumProvidersW");}});

var CryptExportKey = Module.findExportByName("advapi32.dll", "CryptExportKey")
Interceptor.attach(CryptExportKey, {onLeave: function (args) {send("CryptExportKey");}});

var CryptGenKey = Module.findExportByName("advapi32.dll", "CryptGenKey")
Interceptor.attach(CryptGenKey, {onLeave: function (args) {send("CryptGenKey");}});

var CryptGenRandom = Module.findExportByName("advapi32.dll", "CryptGenRandom")
Interceptor.attach(CryptGenRandom, {onLeave: function (args) {send("CryptGenRandom");}});

var CryptGetDefaultProviderA = Module.findExportByName("advapi32.dll", "CryptGetDefaultProviderA")
Interceptor.attach(CryptGetDefaultProviderA, {onLeave: function (args) {send("CryptGetDefaultProviderA");}});

var CryptGetDefaultProviderW = Module.findExportByName("advapi32.dll", "CryptGetDefaultProviderW")
Interceptor.attach(CryptGetDefaultProviderW, {onLeave: function (args) {send("CryptGetDefaultProviderW");}});

var CryptGetHashParam = Module.findExportByName("advapi32.dll", "CryptGetHashParam")
Interceptor.attach(CryptGetHashParam, {onLeave: function (args) {send("CryptGetHashParam");}});

var CryptGetKeyParam = Module.findExportByName("advapi32.dll", "CryptGetKeyParam")
Interceptor.attach(CryptGetKeyParam, {onLeave: function (args) {send("CryptGetKeyParam");}});

var CryptGetProvParam = Module.findExportByName("advapi32.dll", "CryptGetProvParam")
Interceptor.attach(CryptGetProvParam, {onLeave: function (args) {send("CryptGetProvParam");}});

var CryptGetUserKey = Module.findExportByName("advapi32.dll", "CryptGetUserKey")
Interceptor.attach(CryptGetUserKey, {onLeave: function (args) {send("CryptGetUserKey");}});

var CryptHashData = Module.findExportByName("advapi32.dll", "CryptHashData")
Interceptor.attach(CryptHashData, {onLeave: function (args) {send("CryptHashData");}});

var CryptHashSessionKey = Module.findExportByName("advapi32.dll", "CryptHashSessionKey")
Interceptor.attach(CryptHashSessionKey, {onLeave: function (args) {send("CryptHashSessionKey");}});

var CryptImportKey = Module.findExportByName("advapi32.dll", "CryptImportKey")
Interceptor.attach(CryptImportKey, {onLeave: function (args) {send("CryptImportKey");}});

var CryptReleaseContext = Module.findExportByName("advapi32.dll", "CryptReleaseContext")
Interceptor.attach(CryptReleaseContext, {onLeave: function (args) {send("CryptReleaseContext");}});

var CryptSetHashParam = Module.findExportByName("advapi32.dll", "CryptSetHashParam")
Interceptor.attach(CryptSetHashParam, {onLeave: function (args) {send("CryptSetHashParam");}});

var CryptSetKeyParam = Module.findExportByName("advapi32.dll", "CryptSetKeyParam")
Interceptor.attach(CryptSetKeyParam, {onLeave: function (args) {send("CryptSetKeyParam");}});

var CryptSetProvParam = Module.findExportByName("advapi32.dll", "CryptSetProvParam")
Interceptor.attach(CryptSetProvParam, {onLeave: function (args) {send("CryptSetProvParam");}});

var CryptSetProviderA = Module.findExportByName("advapi32.dll", "CryptSetProviderA")
Interceptor.attach(CryptSetProviderA, {onLeave: function (args) {send("CryptSetProviderA");}});

var CryptSetProviderExA = Module.findExportByName("advapi32.dll", "CryptSetProviderExA")
Interceptor.attach(CryptSetProviderExA, {onLeave: function (args) {send("CryptSetProviderExA");}});

var CryptSetProviderExW = Module.findExportByName("advapi32.dll", "CryptSetProviderExW")
Interceptor.attach(CryptSetProviderExW, {onLeave: function (args) {send("CryptSetProviderExW");}});

var CryptSetProviderW = Module.findExportByName("advapi32.dll", "CryptSetProviderW")
Interceptor.attach(CryptSetProviderW, {onLeave: function (args) {send("CryptSetProviderW");}});

var CryptSignHashA = Module.findExportByName("advapi32.dll", "CryptSignHashA")
Interceptor.attach(CryptSignHashA, {onLeave: function (args) {send("CryptSignHashA");}});

var CryptSignHashW = Module.findExportByName("advapi32.dll", "CryptSignHashW")
Interceptor.attach(CryptSignHashW, {onLeave: function (args) {send("CryptSignHashW");}});

var CryptVerifySignatureA = Module.findExportByName("advapi32.dll", "CryptVerifySignatureA")
Interceptor.attach(CryptVerifySignatureA, {onLeave: function (args) {send("CryptVerifySignatureA");}});

var CryptVerifySignatureW = Module.findExportByName("advapi32.dll", "CryptVerifySignatureW")
Interceptor.attach(CryptVerifySignatureW, {onLeave: function (args) {send("CryptVerifySignatureW");}});

var CveEventWrite = Module.findExportByName("advapi32.dll", "CveEventWrite")
Interceptor.attach(CveEventWrite, {onLeave: function (args) {send("CveEventWrite");}});

var DecryptFileA = Module.findExportByName("advapi32.dll", "DecryptFileA")
Interceptor.attach(DecryptFileA, {onLeave: function (args) {send("DecryptFileA");}});

var DecryptFileW = Module.findExportByName("advapi32.dll", "DecryptFileW")
Interceptor.attach(DecryptFileW, {onLeave: function (args) {send("DecryptFileW");}});

var DeleteAce = Module.findExportByName("advapi32.dll", "DeleteAce")
Interceptor.attach(DeleteAce, {onLeave: function (args) {send("DeleteAce");}});

var DeleteService = Module.findExportByName("advapi32.dll", "DeleteService")
Interceptor.attach(DeleteService, {onLeave: function (args) {send("DeleteService");}});

var DeregisterEventSource = Module.findExportByName("advapi32.dll", "DeregisterEventSource")
Interceptor.attach(DeregisterEventSource, {onLeave: function (args) {send("DeregisterEventSource");}});

var DestroyPrivateObjectSecurity = Module.findExportByName("advapi32.dll", "DestroyPrivateObjectSecurity")
Interceptor.attach(DestroyPrivateObjectSecurity, {onLeave: function (args) {send("DestroyPrivateObjectSecurity");}});

var DuplicateEncryptionInfoFile = Module.findExportByName("advapi32.dll", "DuplicateEncryptionInfoFile")
Interceptor.attach(DuplicateEncryptionInfoFile, {onLeave: function (args) {send("DuplicateEncryptionInfoFile");}});

var DuplicateToken = Module.findExportByName("advapi32.dll", "DuplicateToken")
Interceptor.attach(DuplicateToken, {onLeave: function (args) {send("DuplicateToken");}});

var DuplicateTokenEx = Module.findExportByName("advapi32.dll", "DuplicateTokenEx")
Interceptor.attach(DuplicateTokenEx, {onLeave: function (args) {send("DuplicateTokenEx");}});

var EnableTrace = Module.findExportByName("advapi32.dll", "EnableTrace")
Interceptor.attach(EnableTrace, {onLeave: function (args) {send("EnableTrace");}});

var EnableTraceEx = Module.findExportByName("advapi32.dll", "EnableTraceEx")
Interceptor.attach(EnableTraceEx, {onLeave: function (args) {send("EnableTraceEx");}});

var EnableTraceEx2 = Module.findExportByName("advapi32.dll", "EnableTraceEx2")
Interceptor.attach(EnableTraceEx2, {onLeave: function (args) {send("EnableTraceEx2");}});

var EncryptFileA = Module.findExportByName("advapi32.dll", "EncryptFileA")
Interceptor.attach(EncryptFileA, {onLeave: function (args) {send("EncryptFileA");}});

var EncryptFileW = Module.findExportByName("advapi32.dll", "EncryptFileW")
Interceptor.attach(EncryptFileW, {onLeave: function (args) {send("EncryptFileW");}});

var EncryptedFileKeyInfo = Module.findExportByName("advapi32.dll", "EncryptedFileKeyInfo")
Interceptor.attach(EncryptedFileKeyInfo, {onLeave: function (args) {send("EncryptedFileKeyInfo");}});

var EncryptionDisable = Module.findExportByName("advapi32.dll", "EncryptionDisable")
Interceptor.attach(EncryptionDisable, {onLeave: function (args) {send("EncryptionDisable");}});

var EnumDependentServicesA = Module.findExportByName("advapi32.dll", "EnumDependentServicesA")
Interceptor.attach(EnumDependentServicesA, {onLeave: function (args) {send("EnumDependentServicesA");}});

var EnumDependentServicesW = Module.findExportByName("advapi32.dll", "EnumDependentServicesW")
Interceptor.attach(EnumDependentServicesW, {onLeave: function (args) {send("EnumDependentServicesW");}});

var EnumDynamicTimeZoneInformation = Module.findExportByName("advapi32.dll", "EnumDynamicTimeZoneInformation")
Interceptor.attach(EnumDynamicTimeZoneInformation, {onLeave: function (args) {send("EnumDynamicTimeZoneInformation");}});

var EnumServiceGroupW = Module.findExportByName("advapi32.dll", "EnumServiceGroupW")
Interceptor.attach(EnumServiceGroupW, {onLeave: function (args) {send("EnumServiceGroupW");}});

var EnumServicesStatusA = Module.findExportByName("advapi32.dll", "EnumServicesStatusA")
Interceptor.attach(EnumServicesStatusA, {onLeave: function (args) {send("EnumServicesStatusA");}});

var EnumServicesStatusExA = Module.findExportByName("advapi32.dll", "EnumServicesStatusExA")
Interceptor.attach(EnumServicesStatusExA, {onLeave: function (args) {send("EnumServicesStatusExA");}});

var EnumServicesStatusExW = Module.findExportByName("advapi32.dll", "EnumServicesStatusExW")
Interceptor.attach(EnumServicesStatusExW, {onLeave: function (args) {send("EnumServicesStatusExW");}});

var EnumServicesStatusW = Module.findExportByName("advapi32.dll", "EnumServicesStatusW")
Interceptor.attach(EnumServicesStatusW, {onLeave: function (args) {send("EnumServicesStatusW");}});

var EnumerateTraceGuids = Module.findExportByName("advapi32.dll", "EnumerateTraceGuids")
Interceptor.attach(EnumerateTraceGuids, {onLeave: function (args) {send("EnumerateTraceGuids");}});

var EnumerateTraceGuidsEx = Module.findExportByName("advapi32.dll", "EnumerateTraceGuidsEx")
Interceptor.attach(EnumerateTraceGuidsEx, {onLeave: function (args) {send("EnumerateTraceGuidsEx");}});

var EqualDomainSid = Module.findExportByName("advapi32.dll", "EqualDomainSid")
Interceptor.attach(EqualDomainSid, {onLeave: function (args) {send("EqualDomainSid");}});

var EqualPrefixSid = Module.findExportByName("advapi32.dll", "EqualPrefixSid")
Interceptor.attach(EqualPrefixSid, {onLeave: function (args) {send("EqualPrefixSid");}});

var EqualSid = Module.findExportByName("advapi32.dll", "EqualSid")
Interceptor.attach(EqualSid, {onLeave: function (args) {send("EqualSid");}});

var EventAccessControl = Module.findExportByName("advapi32.dll", "EventAccessControl")
Interceptor.attach(EventAccessControl, {onLeave: function (args) {send("EventAccessControl");}});

var EventAccessQuery = Module.findExportByName("advapi32.dll", "EventAccessQuery")
Interceptor.attach(EventAccessQuery, {onLeave: function (args) {send("EventAccessQuery");}});

var EventAccessRemove = Module.findExportByName("advapi32.dll", "EventAccessRemove")
Interceptor.attach(EventAccessRemove, {onLeave: function (args) {send("EventAccessRemove");}});

var EventActivityIdControl = Module.findExportByName("advapi32.dll", "EventActivityIdControl")
Interceptor.attach(EventActivityIdControl, {onLeave: function (args) {send("EventActivityIdControl");}});

var EventEnabled = Module.findExportByName("advapi32.dll", "EventEnabled")
Interceptor.attach(EventEnabled, {onLeave: function (args) {send("EventEnabled");}});

var EventProviderEnabled = Module.findExportByName("advapi32.dll", "EventProviderEnabled")
Interceptor.attach(EventProviderEnabled, {onLeave: function (args) {send("EventProviderEnabled");}});

var EventRegister = Module.findExportByName("advapi32.dll", "EventRegister")
Interceptor.attach(EventRegister, {onLeave: function (args) {send("EventRegister");}});

var EventSetInformation = Module.findExportByName("advapi32.dll", "EventSetInformation")
Interceptor.attach(EventSetInformation, {onLeave: function (args) {send("EventSetInformation");}});

var EventUnregister = Module.findExportByName("advapi32.dll", "EventUnregister")
Interceptor.attach(EventUnregister, {onLeave: function (args) {send("EventUnregister");}});

var EventWrite = Module.findExportByName("advapi32.dll", "EventWrite")
Interceptor.attach(EventWrite, {onLeave: function (args) {send("EventWrite");}});

var EventWriteEndScenario = Module.findExportByName("advapi32.dll", "EventWriteEndScenario")
Interceptor.attach(EventWriteEndScenario, {onLeave: function (args) {send("EventWriteEndScenario");}});

var EventWriteEx = Module.findExportByName("advapi32.dll", "EventWriteEx")
Interceptor.attach(EventWriteEx, {onLeave: function (args) {send("EventWriteEx");}});

var EventWriteStartScenario = Module.findExportByName("advapi32.dll", "EventWriteStartScenario")
Interceptor.attach(EventWriteStartScenario, {onLeave: function (args) {send("EventWriteStartScenario");}});

var EventWriteString = Module.findExportByName("advapi32.dll", "EventWriteString")
Interceptor.attach(EventWriteString, {onLeave: function (args) {send("EventWriteString");}});

var EventWriteTransfer = Module.findExportByName("advapi32.dll", "EventWriteTransfer")
Interceptor.attach(EventWriteTransfer, {onLeave: function (args) {send("EventWriteTransfer");}});

var FileEncryptionStatusA = Module.findExportByName("advapi32.dll", "FileEncryptionStatusA")
Interceptor.attach(FileEncryptionStatusA, {onLeave: function (args) {send("FileEncryptionStatusA");}});

var FileEncryptionStatusW = Module.findExportByName("advapi32.dll", "FileEncryptionStatusW")
Interceptor.attach(FileEncryptionStatusW, {onLeave: function (args) {send("FileEncryptionStatusW");}});

var FindFirstFreeAce = Module.findExportByName("advapi32.dll", "FindFirstFreeAce")
Interceptor.attach(FindFirstFreeAce, {onLeave: function (args) {send("FindFirstFreeAce");}});

var FlushEfsCache = Module.findExportByName("advapi32.dll", "FlushEfsCache")
Interceptor.attach(FlushEfsCache, {onLeave: function (args) {send("FlushEfsCache");}});

var FlushTraceA = Module.findExportByName("advapi32.dll", "FlushTraceA")
Interceptor.attach(FlushTraceA, {onLeave: function (args) {send("FlushTraceA");}});

var FlushTraceW = Module.findExportByName("advapi32.dll", "FlushTraceW")
Interceptor.attach(FlushTraceW, {onLeave: function (args) {send("FlushTraceW");}});

var FreeEncryptedFileKeyInfo = Module.findExportByName("advapi32.dll", "FreeEncryptedFileKeyInfo")
Interceptor.attach(FreeEncryptedFileKeyInfo, {onLeave: function (args) {send("FreeEncryptedFileKeyInfo");}});

var FreeEncryptedFileMetadata = Module.findExportByName("advapi32.dll", "FreeEncryptedFileMetadata")
Interceptor.attach(FreeEncryptedFileMetadata, {onLeave: function (args) {send("FreeEncryptedFileMetadata");}});

var FreeEncryptionCertificateHashList = Module.findExportByName("advapi32.dll", "FreeEncryptionCertificateHashList")
Interceptor.attach(FreeEncryptionCertificateHashList, {onLeave: function (args) {send("FreeEncryptionCertificateHashList");}});

var FreeInheritedFromArray = Module.findExportByName("advapi32.dll", "FreeInheritedFromArray")
Interceptor.attach(FreeInheritedFromArray, {onLeave: function (args) {send("FreeInheritedFromArray");}});

var FreeSid = Module.findExportByName("advapi32.dll", "FreeSid")
Interceptor.attach(FreeSid, {onLeave: function (args) {send("FreeSid");}});

var GetAccessPermissionsForObjectA = Module.findExportByName("advapi32.dll", "GetAccessPermissionsForObjectA")
Interceptor.attach(GetAccessPermissionsForObjectA, {onLeave: function (args) {send("GetAccessPermissionsForObjectA");}});

var GetAccessPermissionsForObjectW = Module.findExportByName("advapi32.dll", "GetAccessPermissionsForObjectW")
Interceptor.attach(GetAccessPermissionsForObjectW, {onLeave: function (args) {send("GetAccessPermissionsForObjectW");}});

var GetAce = Module.findExportByName("advapi32.dll", "GetAce")
Interceptor.attach(GetAce, {onLeave: function (args) {send("GetAce");}});

var GetAclInformation = Module.findExportByName("advapi32.dll", "GetAclInformation")
Interceptor.attach(GetAclInformation, {onLeave: function (args) {send("GetAclInformation");}});

var GetAuditedPermissionsFromAclA = Module.findExportByName("advapi32.dll", "GetAuditedPermissionsFromAclA")
Interceptor.attach(GetAuditedPermissionsFromAclA, {onLeave: function (args) {send("GetAuditedPermissionsFromAclA");}});

var GetAuditedPermissionsFromAclW = Module.findExportByName("advapi32.dll", "GetAuditedPermissionsFromAclW")
Interceptor.attach(GetAuditedPermissionsFromAclW, {onLeave: function (args) {send("GetAuditedPermissionsFromAclW");}});

var GetCurrentHwProfileA = Module.findExportByName("advapi32.dll", "GetCurrentHwProfileA")
Interceptor.attach(GetCurrentHwProfileA, {onLeave: function (args) {send("GetCurrentHwProfileA");}});

var GetCurrentHwProfileW = Module.findExportByName("advapi32.dll", "GetCurrentHwProfileW")
Interceptor.attach(GetCurrentHwProfileW, {onLeave: function (args) {send("GetCurrentHwProfileW");}});

var GetDynamicTimeZoneInformationEffectiveYears = Module.findExportByName("advapi32.dll", "GetDynamicTimeZoneInformationEffectiveYears")
Interceptor.attach(GetDynamicTimeZoneInformationEffectiveYears, {onLeave: function (args) {send("GetDynamicTimeZoneInformationEffectiveYears");}});

var GetEffectiveRightsFromAclA = Module.findExportByName("advapi32.dll", "GetEffectiveRightsFromAclA")
Interceptor.attach(GetEffectiveRightsFromAclA, {onLeave: function (args) {send("GetEffectiveRightsFromAclA");}});

var GetEffectiveRightsFromAclW = Module.findExportByName("advapi32.dll", "GetEffectiveRightsFromAclW")
Interceptor.attach(GetEffectiveRightsFromAclW, {onLeave: function (args) {send("GetEffectiveRightsFromAclW");}});

var GetEncryptedFileMetadata = Module.findExportByName("advapi32.dll", "GetEncryptedFileMetadata")
Interceptor.attach(GetEncryptedFileMetadata, {onLeave: function (args) {send("GetEncryptedFileMetadata");}});

var GetEventLogInformation = Module.findExportByName("advapi32.dll", "GetEventLogInformation")
Interceptor.attach(GetEventLogInformation, {onLeave: function (args) {send("GetEventLogInformation");}});

var GetExplicitEntriesFromAclA = Module.findExportByName("advapi32.dll", "GetExplicitEntriesFromAclA")
Interceptor.attach(GetExplicitEntriesFromAclA, {onLeave: function (args) {send("GetExplicitEntriesFromAclA");}});

var GetExplicitEntriesFromAclW = Module.findExportByName("advapi32.dll", "GetExplicitEntriesFromAclW")
Interceptor.attach(GetExplicitEntriesFromAclW, {onLeave: function (args) {send("GetExplicitEntriesFromAclW");}});

var GetFileSecurityA = Module.findExportByName("advapi32.dll", "GetFileSecurityA")
Interceptor.attach(GetFileSecurityA, {onLeave: function (args) {send("GetFileSecurityA");}});

var GetFileSecurityW = Module.findExportByName("advapi32.dll", "GetFileSecurityW")
Interceptor.attach(GetFileSecurityW, {onLeave: function (args) {send("GetFileSecurityW");}});

var GetInformationCodeAuthzLevelW = Module.findExportByName("advapi32.dll", "GetInformationCodeAuthzLevelW")
Interceptor.attach(GetInformationCodeAuthzLevelW, {onLeave: function (args) {send("GetInformationCodeAuthzLevelW");}});

var GetInformationCodeAuthzPolicyW = Module.findExportByName("advapi32.dll", "GetInformationCodeAuthzPolicyW")
Interceptor.attach(GetInformationCodeAuthzPolicyW, {onLeave: function (args) {send("GetInformationCodeAuthzPolicyW");}});

var GetInheritanceSourceA = Module.findExportByName("advapi32.dll", "GetInheritanceSourceA")
Interceptor.attach(GetInheritanceSourceA, {onLeave: function (args) {send("GetInheritanceSourceA");}});

var GetInheritanceSourceW = Module.findExportByName("advapi32.dll", "GetInheritanceSourceW")
Interceptor.attach(GetInheritanceSourceW, {onLeave: function (args) {send("GetInheritanceSourceW");}});

var GetKernelObjectSecurity = Module.findExportByName("advapi32.dll", "GetKernelObjectSecurity")
Interceptor.attach(GetKernelObjectSecurity, {onLeave: function (args) {send("GetKernelObjectSecurity");}});

var GetLengthSid = Module.findExportByName("advapi32.dll", "GetLengthSid")
Interceptor.attach(GetLengthSid, {onLeave: function (args) {send("GetLengthSid");}});

var GetLocalManagedApplicationData = Module.findExportByName("advapi32.dll", "GetLocalManagedApplicationData")
Interceptor.attach(GetLocalManagedApplicationData, {onLeave: function (args) {send("GetLocalManagedApplicationData");}});

var GetLocalManagedApplications = Module.findExportByName("advapi32.dll", "GetLocalManagedApplications")
Interceptor.attach(GetLocalManagedApplications, {onLeave: function (args) {send("GetLocalManagedApplications");}});

var GetManagedApplicationCategories = Module.findExportByName("advapi32.dll", "GetManagedApplicationCategories")
Interceptor.attach(GetManagedApplicationCategories, {onLeave: function (args) {send("GetManagedApplicationCategories");}});

var GetManagedApplications = Module.findExportByName("advapi32.dll", "GetManagedApplications")
Interceptor.attach(GetManagedApplications, {onLeave: function (args) {send("GetManagedApplications");}});

var GetMultipleTrusteeA = Module.findExportByName("advapi32.dll", "GetMultipleTrusteeA")
Interceptor.attach(GetMultipleTrusteeA, {onLeave: function (args) {send("GetMultipleTrusteeA");}});

var GetMultipleTrusteeOperationA = Module.findExportByName("advapi32.dll", "GetMultipleTrusteeOperationA")
Interceptor.attach(GetMultipleTrusteeOperationA, {onLeave: function (args) {send("GetMultipleTrusteeOperationA");}});

var GetMultipleTrusteeOperationW = Module.findExportByName("advapi32.dll", "GetMultipleTrusteeOperationW")
Interceptor.attach(GetMultipleTrusteeOperationW, {onLeave: function (args) {send("GetMultipleTrusteeOperationW");}});

var GetMultipleTrusteeW = Module.findExportByName("advapi32.dll", "GetMultipleTrusteeW")
Interceptor.attach(GetMultipleTrusteeW, {onLeave: function (args) {send("GetMultipleTrusteeW");}});

var GetNamedSecurityInfoA = Module.findExportByName("advapi32.dll", "GetNamedSecurityInfoA")
Interceptor.attach(GetNamedSecurityInfoA, {onLeave: function (args) {send("GetNamedSecurityInfoA");}});

var GetNamedSecurityInfoExA = Module.findExportByName("advapi32.dll", "GetNamedSecurityInfoExA")
Interceptor.attach(GetNamedSecurityInfoExA, {onLeave: function (args) {send("GetNamedSecurityInfoExA");}});

var GetNamedSecurityInfoExW = Module.findExportByName("advapi32.dll", "GetNamedSecurityInfoExW")
Interceptor.attach(GetNamedSecurityInfoExW, {onLeave: function (args) {send("GetNamedSecurityInfoExW");}});

var GetNamedSecurityInfoW = Module.findExportByName("advapi32.dll", "GetNamedSecurityInfoW")
Interceptor.attach(GetNamedSecurityInfoW, {onLeave: function (args) {send("GetNamedSecurityInfoW");}});

var GetNumberOfEventLogRecords = Module.findExportByName("advapi32.dll", "GetNumberOfEventLogRecords")
Interceptor.attach(GetNumberOfEventLogRecords, {onLeave: function (args) {send("GetNumberOfEventLogRecords");}});

var GetOldestEventLogRecord = Module.findExportByName("advapi32.dll", "GetOldestEventLogRecord")
Interceptor.attach(GetOldestEventLogRecord, {onLeave: function (args) {send("GetOldestEventLogRecord");}});

var GetOverlappedAccessResults = Module.findExportByName("advapi32.dll", "GetOverlappedAccessResults")
Interceptor.attach(GetOverlappedAccessResults, {onLeave: function (args) {send("GetOverlappedAccessResults");}});

var GetPrivateObjectSecurity = Module.findExportByName("advapi32.dll", "GetPrivateObjectSecurity")
Interceptor.attach(GetPrivateObjectSecurity, {onLeave: function (args) {send("GetPrivateObjectSecurity");}});

var GetSecurityDescriptorControl = Module.findExportByName("advapi32.dll", "GetSecurityDescriptorControl")
Interceptor.attach(GetSecurityDescriptorControl, {onLeave: function (args) {send("GetSecurityDescriptorControl");}});

var GetSecurityDescriptorDacl = Module.findExportByName("advapi32.dll", "GetSecurityDescriptorDacl")
Interceptor.attach(GetSecurityDescriptorDacl, {onLeave: function (args) {send("GetSecurityDescriptorDacl");}});

var GetSecurityDescriptorGroup = Module.findExportByName("advapi32.dll", "GetSecurityDescriptorGroup")
Interceptor.attach(GetSecurityDescriptorGroup, {onLeave: function (args) {send("GetSecurityDescriptorGroup");}});

var GetSecurityDescriptorLength = Module.findExportByName("advapi32.dll", "GetSecurityDescriptorLength")
Interceptor.attach(GetSecurityDescriptorLength, {onLeave: function (args) {send("GetSecurityDescriptorLength");}});

var GetSecurityDescriptorOwner = Module.findExportByName("advapi32.dll", "GetSecurityDescriptorOwner")
Interceptor.attach(GetSecurityDescriptorOwner, {onLeave: function (args) {send("GetSecurityDescriptorOwner");}});

var GetSecurityDescriptorRMControl = Module.findExportByName("advapi32.dll", "GetSecurityDescriptorRMControl")
Interceptor.attach(GetSecurityDescriptorRMControl, {onLeave: function (args) {send("GetSecurityDescriptorRMControl");}});

var GetSecurityDescriptorSacl = Module.findExportByName("advapi32.dll", "GetSecurityDescriptorSacl")
Interceptor.attach(GetSecurityDescriptorSacl, {onLeave: function (args) {send("GetSecurityDescriptorSacl");}});

var GetSecurityInfo = Module.findExportByName("advapi32.dll", "GetSecurityInfo")
Interceptor.attach(GetSecurityInfo, {onLeave: function (args) {send("GetSecurityInfo");}});

var GetSecurityInfoExA = Module.findExportByName("advapi32.dll", "GetSecurityInfoExA")
Interceptor.attach(GetSecurityInfoExA, {onLeave: function (args) {send("GetSecurityInfoExA");}});

var GetSecurityInfoExW = Module.findExportByName("advapi32.dll", "GetSecurityInfoExW")
Interceptor.attach(GetSecurityInfoExW, {onLeave: function (args) {send("GetSecurityInfoExW");}});

var GetServiceDisplayNameA = Module.findExportByName("advapi32.dll", "GetServiceDisplayNameA")
Interceptor.attach(GetServiceDisplayNameA, {onLeave: function (args) {send("GetServiceDisplayNameA");}});

var GetServiceDisplayNameW = Module.findExportByName("advapi32.dll", "GetServiceDisplayNameW")
Interceptor.attach(GetServiceDisplayNameW, {onLeave: function (args) {send("GetServiceDisplayNameW");}});

var GetServiceKeyNameA = Module.findExportByName("advapi32.dll", "GetServiceKeyNameA")
Interceptor.attach(GetServiceKeyNameA, {onLeave: function (args) {send("GetServiceKeyNameA");}});

var GetServiceKeyNameW = Module.findExportByName("advapi32.dll", "GetServiceKeyNameW")
Interceptor.attach(GetServiceKeyNameW, {onLeave: function (args) {send("GetServiceKeyNameW");}});

var GetSidIdentifierAuthority = Module.findExportByName("advapi32.dll", "GetSidIdentifierAuthority")
Interceptor.attach(GetSidIdentifierAuthority, {onLeave: function (args) {send("GetSidIdentifierAuthority");}});

var GetSidLengthRequired = Module.findExportByName("advapi32.dll", "GetSidLengthRequired")
Interceptor.attach(GetSidLengthRequired, {onLeave: function (args) {send("GetSidLengthRequired");}});

var GetSidSubAuthority = Module.findExportByName("advapi32.dll", "GetSidSubAuthority")
Interceptor.attach(GetSidSubAuthority, {onLeave: function (args) {send("GetSidSubAuthority");}});

var GetSidSubAuthorityCount = Module.findExportByName("advapi32.dll", "GetSidSubAuthorityCount")
Interceptor.attach(GetSidSubAuthorityCount, {onLeave: function (args) {send("GetSidSubAuthorityCount");}});

var GetStringConditionFromBinary = Module.findExportByName("advapi32.dll", "GetStringConditionFromBinary")
Interceptor.attach(GetStringConditionFromBinary, {onLeave: function (args) {send("GetStringConditionFromBinary");}});

var GetThreadWaitChain = Module.findExportByName("advapi32.dll", "GetThreadWaitChain")
Interceptor.attach(GetThreadWaitChain, {onLeave: function (args) {send("GetThreadWaitChain");}});

var GetTokenInformation = Module.findExportByName("advapi32.dll", "GetTokenInformation")
Interceptor.attach(GetTokenInformation, {onLeave: function (args) {send("GetTokenInformation");}});

var GetTraceEnableFlags = Module.findExportByName("advapi32.dll", "GetTraceEnableFlags")
Interceptor.attach(GetTraceEnableFlags, {onLeave: function (args) {send("GetTraceEnableFlags");}});

var GetTraceEnableLevel = Module.findExportByName("advapi32.dll", "GetTraceEnableLevel")
Interceptor.attach(GetTraceEnableLevel, {onLeave: function (args) {send("GetTraceEnableLevel");}});

var GetTraceLoggerHandle = Module.findExportByName("advapi32.dll", "GetTraceLoggerHandle")
Interceptor.attach(GetTraceLoggerHandle, {onLeave: function (args) {send("GetTraceLoggerHandle");}});

var GetTrusteeFormA = Module.findExportByName("advapi32.dll", "GetTrusteeFormA")
Interceptor.attach(GetTrusteeFormA, {onLeave: function (args) {send("GetTrusteeFormA");}});

var GetTrusteeFormW = Module.findExportByName("advapi32.dll", "GetTrusteeFormW")
Interceptor.attach(GetTrusteeFormW, {onLeave: function (args) {send("GetTrusteeFormW");}});

var GetTrusteeNameA = Module.findExportByName("advapi32.dll", "GetTrusteeNameA")
Interceptor.attach(GetTrusteeNameA, {onLeave: function (args) {send("GetTrusteeNameA");}});

var GetTrusteeNameW = Module.findExportByName("advapi32.dll", "GetTrusteeNameW")
Interceptor.attach(GetTrusteeNameW, {onLeave: function (args) {send("GetTrusteeNameW");}});

var GetTrusteeTypeA = Module.findExportByName("advapi32.dll", "GetTrusteeTypeA")
Interceptor.attach(GetTrusteeTypeA, {onLeave: function (args) {send("GetTrusteeTypeA");}});

var GetTrusteeTypeW = Module.findExportByName("advapi32.dll", "GetTrusteeTypeW")
Interceptor.attach(GetTrusteeTypeW, {onLeave: function (args) {send("GetTrusteeTypeW");}});

var GetUserNameA = Module.findExportByName("advapi32.dll", "GetUserNameA")
Interceptor.attach(GetUserNameA, {onLeave: function (args) {send("GetUserNameA");}});

var GetUserNameW = Module.findExportByName("advapi32.dll", "GetUserNameW")
Interceptor.attach(GetUserNameW, {onLeave: function (args) {send("GetUserNameW");}});

var GetWindowsAccountDomainSid = Module.findExportByName("advapi32.dll", "GetWindowsAccountDomainSid")
Interceptor.attach(GetWindowsAccountDomainSid, {onLeave: function (args) {send("GetWindowsAccountDomainSid");}});

var I_QueryTagInformation = Module.findExportByName("advapi32.dll", "I_QueryTagInformation")
Interceptor.attach(I_QueryTagInformation, {onLeave: function (args) {send("I_QueryTagInformation");}});

var I_ScGetCurrentGroupStateW = Module.findExportByName("advapi32.dll", "I_ScGetCurrentGroupStateW")
Interceptor.attach(I_ScGetCurrentGroupStateW, {onLeave: function (args) {send("I_ScGetCurrentGroupStateW");}});

var I_ScIsSecurityProcess = Module.findExportByName("advapi32.dll", "I_ScIsSecurityProcess")
Interceptor.attach(I_ScIsSecurityProcess, {onLeave: function (args) {send("I_ScIsSecurityProcess");}});

var I_ScPnPGetServiceName = Module.findExportByName("advapi32.dll", "I_ScPnPGetServiceName")
Interceptor.attach(I_ScPnPGetServiceName, {onLeave: function (args) {send("I_ScPnPGetServiceName");}});

var I_ScQueryServiceConfig = Module.findExportByName("advapi32.dll", "I_ScQueryServiceConfig")
Interceptor.attach(I_ScQueryServiceConfig, {onLeave: function (args) {send("I_ScQueryServiceConfig");}});

var I_ScRegisterPreshutdownRestart = Module.findExportByName("advapi32.dll", "I_ScRegisterPreshutdownRestart")
Interceptor.attach(I_ScRegisterPreshutdownRestart, {onLeave: function (args) {send("I_ScRegisterPreshutdownRestart");}});

var I_ScReparseServiceDatabase = Module.findExportByName("advapi32.dll", "I_ScReparseServiceDatabase")
Interceptor.attach(I_ScReparseServiceDatabase, {onLeave: function (args) {send("I_ScReparseServiceDatabase");}});

var I_ScSendPnPMessage = Module.findExportByName("advapi32.dll", "I_ScSendPnPMessage")
Interceptor.attach(I_ScSendPnPMessage, {onLeave: function (args) {send("I_ScSendPnPMessage");}});

var I_ScSendTSMessage = Module.findExportByName("advapi32.dll", "I_ScSendTSMessage")
Interceptor.attach(I_ScSendTSMessage, {onLeave: function (args) {send("I_ScSendTSMessage");}});

var I_ScSetServiceBitsA = Module.findExportByName("advapi32.dll", "I_ScSetServiceBitsA")
Interceptor.attach(I_ScSetServiceBitsA, {onLeave: function (args) {send("I_ScSetServiceBitsA");}});

var I_ScSetServiceBitsW = Module.findExportByName("advapi32.dll", "I_ScSetServiceBitsW")
Interceptor.attach(I_ScSetServiceBitsW, {onLeave: function (args) {send("I_ScSetServiceBitsW");}});

var I_ScValidatePnPService = Module.findExportByName("advapi32.dll", "I_ScValidatePnPService")
Interceptor.attach(I_ScValidatePnPService, {onLeave: function (args) {send("I_ScValidatePnPService");}});

var IdentifyCodeAuthzLevelW = Module.findExportByName("advapi32.dll", "IdentifyCodeAuthzLevelW")
Interceptor.attach(IdentifyCodeAuthzLevelW, {onLeave: function (args) {send("IdentifyCodeAuthzLevelW");}});

var ImpersonateAnonymousToken = Module.findExportByName("advapi32.dll", "ImpersonateAnonymousToken")
Interceptor.attach(ImpersonateAnonymousToken, {onLeave: function (args) {send("ImpersonateAnonymousToken");}});

var ImpersonateLoggedOnUser = Module.findExportByName("advapi32.dll", "ImpersonateLoggedOnUser")
Interceptor.attach(ImpersonateLoggedOnUser, {onLeave: function (args) {send("ImpersonateLoggedOnUser");}});

var ImpersonateNamedPipeClient = Module.findExportByName("advapi32.dll", "ImpersonateNamedPipeClient")
Interceptor.attach(ImpersonateNamedPipeClient, {onLeave: function (args) {send("ImpersonateNamedPipeClient");}});

var ImpersonateSelf = Module.findExportByName("advapi32.dll", "ImpersonateSelf")
Interceptor.attach(ImpersonateSelf, {onLeave: function (args) {send("ImpersonateSelf");}});

var InitializeAcl = Module.findExportByName("advapi32.dll", "InitializeAcl")
Interceptor.attach(InitializeAcl, {onLeave: function (args) {send("InitializeAcl");}});

var InitializeSecurityDescriptor = Module.findExportByName("advapi32.dll", "InitializeSecurityDescriptor")
Interceptor.attach(InitializeSecurityDescriptor, {onLeave: function (args) {send("InitializeSecurityDescriptor");}});

var InitializeSid = Module.findExportByName("advapi32.dll", "InitializeSid")
Interceptor.attach(InitializeSid, {onLeave: function (args) {send("InitializeSid");}});

var InitiateShutdownA = Module.findExportByName("advapi32.dll", "InitiateShutdownA")
Interceptor.attach(InitiateShutdownA, {onLeave: function (args) {send("InitiateShutdownA");}});

var InitiateShutdownW = Module.findExportByName("advapi32.dll", "InitiateShutdownW")
Interceptor.attach(InitiateShutdownW, {onLeave: function (args) {send("InitiateShutdownW");}});

var InitiateSystemShutdownA = Module.findExportByName("advapi32.dll", "InitiateSystemShutdownA")
Interceptor.attach(InitiateSystemShutdownA, {onLeave: function (args) {send("InitiateSystemShutdownA");}});

var InitiateSystemShutdownExA = Module.findExportByName("advapi32.dll", "InitiateSystemShutdownExA")
Interceptor.attach(InitiateSystemShutdownExA, {onLeave: function (args) {send("InitiateSystemShutdownExA");}});

var InitiateSystemShutdownExW = Module.findExportByName("advapi32.dll", "InitiateSystemShutdownExW")
Interceptor.attach(InitiateSystemShutdownExW, {onLeave: function (args) {send("InitiateSystemShutdownExW");}});

var InitiateSystemShutdownW = Module.findExportByName("advapi32.dll", "InitiateSystemShutdownW")
Interceptor.attach(InitiateSystemShutdownW, {onLeave: function (args) {send("InitiateSystemShutdownW");}});

var InstallApplication = Module.findExportByName("advapi32.dll", "InstallApplication")
Interceptor.attach(InstallApplication, {onLeave: function (args) {send("InstallApplication");}});

var IsTextUnicode = Module.findExportByName("advapi32.dll", "IsTextUnicode")
Interceptor.attach(IsTextUnicode, {onLeave: function (args) {send("IsTextUnicode");}});

var IsTokenRestricted = Module.findExportByName("advapi32.dll", "IsTokenRestricted")
Interceptor.attach(IsTokenRestricted, {onLeave: function (args) {send("IsTokenRestricted");}});

var IsTokenUntrusted = Module.findExportByName("advapi32.dll", "IsTokenUntrusted")
Interceptor.attach(IsTokenUntrusted, {onLeave: function (args) {send("IsTokenUntrusted");}});

var IsValidAcl = Module.findExportByName("advapi32.dll", "IsValidAcl")
Interceptor.attach(IsValidAcl, {onLeave: function (args) {send("IsValidAcl");}});

var IsValidRelativeSecurityDescriptor = Module.findExportByName("advapi32.dll", "IsValidRelativeSecurityDescriptor")
Interceptor.attach(IsValidRelativeSecurityDescriptor, {onLeave: function (args) {send("IsValidRelativeSecurityDescriptor");}});

var IsValidSecurityDescriptor = Module.findExportByName("advapi32.dll", "IsValidSecurityDescriptor")
Interceptor.attach(IsValidSecurityDescriptor, {onLeave: function (args) {send("IsValidSecurityDescriptor");}});

var IsValidSid = Module.findExportByName("advapi32.dll", "IsValidSid")
Interceptor.attach(IsValidSid, {onLeave: function (args) {send("IsValidSid");}});

var IsWellKnownSid = Module.findExportByName("advapi32.dll", "IsWellKnownSid")
Interceptor.attach(IsWellKnownSid, {onLeave: function (args) {send("IsWellKnownSid");}});

var LockServiceDatabase = Module.findExportByName("advapi32.dll", "LockServiceDatabase")
Interceptor.attach(LockServiceDatabase, {onLeave: function (args) {send("LockServiceDatabase");}});

var LogonUserA = Module.findExportByName("advapi32.dll", "LogonUserA")
Interceptor.attach(LogonUserA, {onLeave: function (args) {send("LogonUserA");}});

var LogonUserExA = Module.findExportByName("advapi32.dll", "LogonUserExA")
Interceptor.attach(LogonUserExA, {onLeave: function (args) {send("LogonUserExA");}});

var LogonUserExExW = Module.findExportByName("advapi32.dll", "LogonUserExExW")
Interceptor.attach(LogonUserExExW, {onLeave: function (args) {send("LogonUserExExW");}});

var LogonUserExW = Module.findExportByName("advapi32.dll", "LogonUserExW")
Interceptor.attach(LogonUserExW, {onLeave: function (args) {send("LogonUserExW");}});

var LogonUserW = Module.findExportByName("advapi32.dll", "LogonUserW")
Interceptor.attach(LogonUserW, {onLeave: function (args) {send("LogonUserW");}});

var LookupAccountNameA = Module.findExportByName("advapi32.dll", "LookupAccountNameA")
Interceptor.attach(LookupAccountNameA, {onLeave: function (args) {send("LookupAccountNameA");}});

var LookupAccountNameW = Module.findExportByName("advapi32.dll", "LookupAccountNameW")
Interceptor.attach(LookupAccountNameW, {onLeave: function (args) {send("LookupAccountNameW");}});

var LookupAccountSidA = Module.findExportByName("advapi32.dll", "LookupAccountSidA")
Interceptor.attach(LookupAccountSidA, {onLeave: function (args) {send("LookupAccountSidA");}});

var LookupAccountSidW = Module.findExportByName("advapi32.dll", "LookupAccountSidW")
Interceptor.attach(LookupAccountSidW, {onLeave: function (args) {send("LookupAccountSidW");}});

var LookupPrivilegeDisplayNameA = Module.findExportByName("advapi32.dll", "LookupPrivilegeDisplayNameA")
Interceptor.attach(LookupPrivilegeDisplayNameA, {onLeave: function (args) {send("LookupPrivilegeDisplayNameA");}});

var LookupPrivilegeDisplayNameW = Module.findExportByName("advapi32.dll", "LookupPrivilegeDisplayNameW")
Interceptor.attach(LookupPrivilegeDisplayNameW, {onLeave: function (args) {send("LookupPrivilegeDisplayNameW");}});

var LookupPrivilegeNameA = Module.findExportByName("advapi32.dll", "LookupPrivilegeNameA")
Interceptor.attach(LookupPrivilegeNameA, {onLeave: function (args) {send("LookupPrivilegeNameA");}});

var LookupPrivilegeNameW = Module.findExportByName("advapi32.dll", "LookupPrivilegeNameW")
Interceptor.attach(LookupPrivilegeNameW, {onLeave: function (args) {send("LookupPrivilegeNameW");}});

var LookupPrivilegeValueA = Module.findExportByName("advapi32.dll", "LookupPrivilegeValueA")
Interceptor.attach(LookupPrivilegeValueA, {onLeave: function (args) {send("LookupPrivilegeValueA");}});

var LookupPrivilegeValueW = Module.findExportByName("advapi32.dll", "LookupPrivilegeValueW")
Interceptor.attach(LookupPrivilegeValueW, {onLeave: function (args) {send("LookupPrivilegeValueW");}});

var LookupSecurityDescriptorPartsA = Module.findExportByName("advapi32.dll", "LookupSecurityDescriptorPartsA")
Interceptor.attach(LookupSecurityDescriptorPartsA, {onLeave: function (args) {send("LookupSecurityDescriptorPartsA");}});

var LookupSecurityDescriptorPartsW = Module.findExportByName("advapi32.dll", "LookupSecurityDescriptorPartsW")
Interceptor.attach(LookupSecurityDescriptorPartsW, {onLeave: function (args) {send("LookupSecurityDescriptorPartsW");}});

var LsaAddAccountRights = Module.findExportByName("advapi32.dll", "LsaAddAccountRights")
Interceptor.attach(LsaAddAccountRights, {onLeave: function (args) {send("LsaAddAccountRights");}});

var LsaAddPrivilegesToAccount = Module.findExportByName("advapi32.dll", "LsaAddPrivilegesToAccount")
Interceptor.attach(LsaAddPrivilegesToAccount, {onLeave: function (args) {send("LsaAddPrivilegesToAccount");}});

var LsaClearAuditLog = Module.findExportByName("advapi32.dll", "LsaClearAuditLog")
Interceptor.attach(LsaClearAuditLog, {onLeave: function (args) {send("LsaClearAuditLog");}});

var LsaClose = Module.findExportByName("advapi32.dll", "LsaClose")
Interceptor.attach(LsaClose, {onLeave: function (args) {send("LsaClose");}});

var LsaConfigureAutoLogonCredentials = Module.findExportByName("advapi32.dll", "LsaConfigureAutoLogonCredentials")
Interceptor.attach(LsaConfigureAutoLogonCredentials, {onLeave: function (args) {send("LsaConfigureAutoLogonCredentials");}});

var LsaCreateAccount = Module.findExportByName("advapi32.dll", "LsaCreateAccount")
Interceptor.attach(LsaCreateAccount, {onLeave: function (args) {send("LsaCreateAccount");}});

var LsaCreateSecret = Module.findExportByName("advapi32.dll", "LsaCreateSecret")
Interceptor.attach(LsaCreateSecret, {onLeave: function (args) {send("LsaCreateSecret");}});

var LsaCreateTrustedDomain = Module.findExportByName("advapi32.dll", "LsaCreateTrustedDomain")
Interceptor.attach(LsaCreateTrustedDomain, {onLeave: function (args) {send("LsaCreateTrustedDomain");}});

var LsaCreateTrustedDomainEx = Module.findExportByName("advapi32.dll", "LsaCreateTrustedDomainEx")
Interceptor.attach(LsaCreateTrustedDomainEx, {onLeave: function (args) {send("LsaCreateTrustedDomainEx");}});

var LsaDelete = Module.findExportByName("advapi32.dll", "LsaDelete")
Interceptor.attach(LsaDelete, {onLeave: function (args) {send("LsaDelete");}});

var LsaDeleteTrustedDomain = Module.findExportByName("advapi32.dll", "LsaDeleteTrustedDomain")
Interceptor.attach(LsaDeleteTrustedDomain, {onLeave: function (args) {send("LsaDeleteTrustedDomain");}});

var LsaDisableUserArso = Module.findExportByName("advapi32.dll", "LsaDisableUserArso")
Interceptor.attach(LsaDisableUserArso, {onLeave: function (args) {send("LsaDisableUserArso");}});

var LsaEnableUserArso = Module.findExportByName("advapi32.dll", "LsaEnableUserArso")
Interceptor.attach(LsaEnableUserArso, {onLeave: function (args) {send("LsaEnableUserArso");}});

var LsaEnumerateAccountRights = Module.findExportByName("advapi32.dll", "LsaEnumerateAccountRights")
Interceptor.attach(LsaEnumerateAccountRights, {onLeave: function (args) {send("LsaEnumerateAccountRights");}});

var LsaEnumerateAccounts = Module.findExportByName("advapi32.dll", "LsaEnumerateAccounts")
Interceptor.attach(LsaEnumerateAccounts, {onLeave: function (args) {send("LsaEnumerateAccounts");}});

var LsaEnumerateAccountsWithUserRight = Module.findExportByName("advapi32.dll", "LsaEnumerateAccountsWithUserRight")
Interceptor.attach(LsaEnumerateAccountsWithUserRight, {onLeave: function (args) {send("LsaEnumerateAccountsWithUserRight");}});

var LsaEnumeratePrivileges = Module.findExportByName("advapi32.dll", "LsaEnumeratePrivileges")
Interceptor.attach(LsaEnumeratePrivileges, {onLeave: function (args) {send("LsaEnumeratePrivileges");}});

var LsaEnumeratePrivilegesOfAccount = Module.findExportByName("advapi32.dll", "LsaEnumeratePrivilegesOfAccount")
Interceptor.attach(LsaEnumeratePrivilegesOfAccount, {onLeave: function (args) {send("LsaEnumeratePrivilegesOfAccount");}});

var LsaEnumerateTrustedDomains = Module.findExportByName("advapi32.dll", "LsaEnumerateTrustedDomains")
Interceptor.attach(LsaEnumerateTrustedDomains, {onLeave: function (args) {send("LsaEnumerateTrustedDomains");}});

var LsaEnumerateTrustedDomainsEx = Module.findExportByName("advapi32.dll", "LsaEnumerateTrustedDomainsEx")
Interceptor.attach(LsaEnumerateTrustedDomainsEx, {onLeave: function (args) {send("LsaEnumerateTrustedDomainsEx");}});

var LsaFreeMemory = Module.findExportByName("advapi32.dll", "LsaFreeMemory")
Interceptor.attach(LsaFreeMemory, {onLeave: function (args) {send("LsaFreeMemory");}});

var LsaGetAppliedCAPIDs = Module.findExportByName("advapi32.dll", "LsaGetAppliedCAPIDs")
Interceptor.attach(LsaGetAppliedCAPIDs, {onLeave: function (args) {send("LsaGetAppliedCAPIDs");}});

var LsaGetDeviceRegistrationInfo = Module.findExportByName("advapi32.dll", "LsaGetDeviceRegistrationInfo")
Interceptor.attach(LsaGetDeviceRegistrationInfo, {onLeave: function (args) {send("LsaGetDeviceRegistrationInfo");}});

var LsaGetQuotasForAccount = Module.findExportByName("advapi32.dll", "LsaGetQuotasForAccount")
Interceptor.attach(LsaGetQuotasForAccount, {onLeave: function (args) {send("LsaGetQuotasForAccount");}});

var LsaGetRemoteUserName = Module.findExportByName("advapi32.dll", "LsaGetRemoteUserName")
Interceptor.attach(LsaGetRemoteUserName, {onLeave: function (args) {send("LsaGetRemoteUserName");}});

var LsaGetSystemAccessAccount = Module.findExportByName("advapi32.dll", "LsaGetSystemAccessAccount")
Interceptor.attach(LsaGetSystemAccessAccount, {onLeave: function (args) {send("LsaGetSystemAccessAccount");}});

var LsaGetUserName = Module.findExportByName("advapi32.dll", "LsaGetUserName")
Interceptor.attach(LsaGetUserName, {onLeave: function (args) {send("LsaGetUserName");}});

var LsaICLookupNames = Module.findExportByName("advapi32.dll", "LsaICLookupNames")
Interceptor.attach(LsaICLookupNames, {onLeave: function (args) {send("LsaICLookupNames");}});

var LsaICLookupNamesWithCreds = Module.findExportByName("advapi32.dll", "LsaICLookupNamesWithCreds")
Interceptor.attach(LsaICLookupNamesWithCreds, {onLeave: function (args) {send("LsaICLookupNamesWithCreds");}});

var LsaICLookupSids = Module.findExportByName("advapi32.dll", "LsaICLookupSids")
Interceptor.attach(LsaICLookupSids, {onLeave: function (args) {send("LsaICLookupSids");}});

var LsaICLookupSidsWithCreds = Module.findExportByName("advapi32.dll", "LsaICLookupSidsWithCreds")
Interceptor.attach(LsaICLookupSidsWithCreds, {onLeave: function (args) {send("LsaICLookupSidsWithCreds");}});

var LsaInvokeTrustScanner = Module.findExportByName("advapi32.dll", "LsaInvokeTrustScanner")
Interceptor.attach(LsaInvokeTrustScanner, {onLeave: function (args) {send("LsaInvokeTrustScanner");}});

var LsaIsUserArsoAllowed = Module.findExportByName("advapi32.dll", "LsaIsUserArsoAllowed")
Interceptor.attach(LsaIsUserArsoAllowed, {onLeave: function (args) {send("LsaIsUserArsoAllowed");}});

var LsaIsUserArsoEnabled = Module.findExportByName("advapi32.dll", "LsaIsUserArsoEnabled")
Interceptor.attach(LsaIsUserArsoEnabled, {onLeave: function (args) {send("LsaIsUserArsoEnabled");}});

var LsaLookupNames = Module.findExportByName("advapi32.dll", "LsaLookupNames")
Interceptor.attach(LsaLookupNames, {onLeave: function (args) {send("LsaLookupNames");}});

var LsaLookupNames2 = Module.findExportByName("advapi32.dll", "LsaLookupNames2")
Interceptor.attach(LsaLookupNames2, {onLeave: function (args) {send("LsaLookupNames2");}});

var LsaLookupPrivilegeDisplayName = Module.findExportByName("advapi32.dll", "LsaLookupPrivilegeDisplayName")
Interceptor.attach(LsaLookupPrivilegeDisplayName, {onLeave: function (args) {send("LsaLookupPrivilegeDisplayName");}});

var LsaLookupPrivilegeName = Module.findExportByName("advapi32.dll", "LsaLookupPrivilegeName")
Interceptor.attach(LsaLookupPrivilegeName, {onLeave: function (args) {send("LsaLookupPrivilegeName");}});

var LsaLookupPrivilegeValue = Module.findExportByName("advapi32.dll", "LsaLookupPrivilegeValue")
Interceptor.attach(LsaLookupPrivilegeValue, {onLeave: function (args) {send("LsaLookupPrivilegeValue");}});

var LsaLookupSids = Module.findExportByName("advapi32.dll", "LsaLookupSids")
Interceptor.attach(LsaLookupSids, {onLeave: function (args) {send("LsaLookupSids");}});

var LsaLookupSids2 = Module.findExportByName("advapi32.dll", "LsaLookupSids2")
Interceptor.attach(LsaLookupSids2, {onLeave: function (args) {send("LsaLookupSids2");}});

var LsaManageSidNameMapping = Module.findExportByName("advapi32.dll", "LsaManageSidNameMapping")
Interceptor.attach(LsaManageSidNameMapping, {onLeave: function (args) {send("LsaManageSidNameMapping");}});

var LsaNtStatusToWinError = Module.findExportByName("advapi32.dll", "LsaNtStatusToWinError")
Interceptor.attach(LsaNtStatusToWinError, {onLeave: function (args) {send("LsaNtStatusToWinError");}});

var LsaOpenAccount = Module.findExportByName("advapi32.dll", "LsaOpenAccount")
Interceptor.attach(LsaOpenAccount, {onLeave: function (args) {send("LsaOpenAccount");}});

var LsaOpenPolicy = Module.findExportByName("advapi32.dll", "LsaOpenPolicy")
Interceptor.attach(LsaOpenPolicy, {onLeave: function (args) {send("LsaOpenPolicy");}});

var LsaOpenPolicySce = Module.findExportByName("advapi32.dll", "LsaOpenPolicySce")
Interceptor.attach(LsaOpenPolicySce, {onLeave: function (args) {send("LsaOpenPolicySce");}});

var LsaOpenSecret = Module.findExportByName("advapi32.dll", "LsaOpenSecret")
Interceptor.attach(LsaOpenSecret, {onLeave: function (args) {send("LsaOpenSecret");}});

var LsaOpenTrustedDomain = Module.findExportByName("advapi32.dll", "LsaOpenTrustedDomain")
Interceptor.attach(LsaOpenTrustedDomain, {onLeave: function (args) {send("LsaOpenTrustedDomain");}});

var LsaOpenTrustedDomainByName = Module.findExportByName("advapi32.dll", "LsaOpenTrustedDomainByName")
Interceptor.attach(LsaOpenTrustedDomainByName, {onLeave: function (args) {send("LsaOpenTrustedDomainByName");}});

var LsaProfileDeleted = Module.findExportByName("advapi32.dll", "LsaProfileDeleted")
Interceptor.attach(LsaProfileDeleted, {onLeave: function (args) {send("LsaProfileDeleted");}});

var LsaQueryCAPs = Module.findExportByName("advapi32.dll", "LsaQueryCAPs")
Interceptor.attach(LsaQueryCAPs, {onLeave: function (args) {send("LsaQueryCAPs");}});

var LsaQueryDomainInformationPolicy = Module.findExportByName("advapi32.dll", "LsaQueryDomainInformationPolicy")
Interceptor.attach(LsaQueryDomainInformationPolicy, {onLeave: function (args) {send("LsaQueryDomainInformationPolicy");}});

var LsaQueryForestTrustInformation = Module.findExportByName("advapi32.dll", "LsaQueryForestTrustInformation")
Interceptor.attach(LsaQueryForestTrustInformation, {onLeave: function (args) {send("LsaQueryForestTrustInformation");}});

var LsaQueryForestTrustInformation2 = Module.findExportByName("advapi32.dll", "LsaQueryForestTrustInformation2")
Interceptor.attach(LsaQueryForestTrustInformation2, {onLeave: function (args) {send("LsaQueryForestTrustInformation2");}});

var LsaQueryInfoTrustedDomain = Module.findExportByName("advapi32.dll", "LsaQueryInfoTrustedDomain")
Interceptor.attach(LsaQueryInfoTrustedDomain, {onLeave: function (args) {send("LsaQueryInfoTrustedDomain");}});

var LsaQueryInformationPolicy = Module.findExportByName("advapi32.dll", "LsaQueryInformationPolicy")
Interceptor.attach(LsaQueryInformationPolicy, {onLeave: function (args) {send("LsaQueryInformationPolicy");}});

var LsaQuerySecret = Module.findExportByName("advapi32.dll", "LsaQuerySecret")
Interceptor.attach(LsaQuerySecret, {onLeave: function (args) {send("LsaQuerySecret");}});

var LsaQuerySecurityObject = Module.findExportByName("advapi32.dll", "LsaQuerySecurityObject")
Interceptor.attach(LsaQuerySecurityObject, {onLeave: function (args) {send("LsaQuerySecurityObject");}});

var LsaQueryTrustedDomainInfo = Module.findExportByName("advapi32.dll", "LsaQueryTrustedDomainInfo")
Interceptor.attach(LsaQueryTrustedDomainInfo, {onLeave: function (args) {send("LsaQueryTrustedDomainInfo");}});

var LsaQueryTrustedDomainInfoByName = Module.findExportByName("advapi32.dll", "LsaQueryTrustedDomainInfoByName")
Interceptor.attach(LsaQueryTrustedDomainInfoByName, {onLeave: function (args) {send("LsaQueryTrustedDomainInfoByName");}});

var LsaRemoveAccountRights = Module.findExportByName("advapi32.dll", "LsaRemoveAccountRights")
Interceptor.attach(LsaRemoveAccountRights, {onLeave: function (args) {send("LsaRemoveAccountRights");}});

var LsaRemovePrivilegesFromAccount = Module.findExportByName("advapi32.dll", "LsaRemovePrivilegesFromAccount")
Interceptor.attach(LsaRemovePrivilegesFromAccount, {onLeave: function (args) {send("LsaRemovePrivilegesFromAccount");}});

var LsaRetrievePrivateData = Module.findExportByName("advapi32.dll", "LsaRetrievePrivateData")
Interceptor.attach(LsaRetrievePrivateData, {onLeave: function (args) {send("LsaRetrievePrivateData");}});

var LsaSetCAPs = Module.findExportByName("advapi32.dll", "LsaSetCAPs")
Interceptor.attach(LsaSetCAPs, {onLeave: function (args) {send("LsaSetCAPs");}});

var LsaSetDomainInformationPolicy = Module.findExportByName("advapi32.dll", "LsaSetDomainInformationPolicy")
Interceptor.attach(LsaSetDomainInformationPolicy, {onLeave: function (args) {send("LsaSetDomainInformationPolicy");}});

var LsaSetForestTrustInformation = Module.findExportByName("advapi32.dll", "LsaSetForestTrustInformation")
Interceptor.attach(LsaSetForestTrustInformation, {onLeave: function (args) {send("LsaSetForestTrustInformation");}});

var LsaSetForestTrustInformation2 = Module.findExportByName("advapi32.dll", "LsaSetForestTrustInformation2")
Interceptor.attach(LsaSetForestTrustInformation2, {onLeave: function (args) {send("LsaSetForestTrustInformation2");}});

var LsaSetInformationPolicy = Module.findExportByName("advapi32.dll", "LsaSetInformationPolicy")
Interceptor.attach(LsaSetInformationPolicy, {onLeave: function (args) {send("LsaSetInformationPolicy");}});

var LsaSetInformationTrustedDomain = Module.findExportByName("advapi32.dll", "LsaSetInformationTrustedDomain")
Interceptor.attach(LsaSetInformationTrustedDomain, {onLeave: function (args) {send("LsaSetInformationTrustedDomain");}});

var LsaSetQuotasForAccount = Module.findExportByName("advapi32.dll", "LsaSetQuotasForAccount")
Interceptor.attach(LsaSetQuotasForAccount, {onLeave: function (args) {send("LsaSetQuotasForAccount");}});

var LsaSetSecret = Module.findExportByName("advapi32.dll", "LsaSetSecret")
Interceptor.attach(LsaSetSecret, {onLeave: function (args) {send("LsaSetSecret");}});

var LsaSetSecurityObject = Module.findExportByName("advapi32.dll", "LsaSetSecurityObject")
Interceptor.attach(LsaSetSecurityObject, {onLeave: function (args) {send("LsaSetSecurityObject");}});

var LsaSetSystemAccessAccount = Module.findExportByName("advapi32.dll", "LsaSetSystemAccessAccount")
Interceptor.attach(LsaSetSystemAccessAccount, {onLeave: function (args) {send("LsaSetSystemAccessAccount");}});

var LsaSetTrustedDomainInfoByName = Module.findExportByName("advapi32.dll", "LsaSetTrustedDomainInfoByName")
Interceptor.attach(LsaSetTrustedDomainInfoByName, {onLeave: function (args) {send("LsaSetTrustedDomainInfoByName");}});

var LsaSetTrustedDomainInformation = Module.findExportByName("advapi32.dll", "LsaSetTrustedDomainInformation")
Interceptor.attach(LsaSetTrustedDomainInformation, {onLeave: function (args) {send("LsaSetTrustedDomainInformation");}});

var LsaStorePrivateData = Module.findExportByName("advapi32.dll", "LsaStorePrivateData")
Interceptor.attach(LsaStorePrivateData, {onLeave: function (args) {send("LsaStorePrivateData");}});

var LsaValidateProcUniqueLuid = Module.findExportByName("advapi32.dll", "LsaValidateProcUniqueLuid")
Interceptor.attach(LsaValidateProcUniqueLuid, {onLeave: function (args) {send("LsaValidateProcUniqueLuid");}});

var MD4Final = Module.findExportByName("advapi32.dll", "MD4Final")
Interceptor.attach(MD4Final, {onLeave: function (args) {send("MD4Final");}});

var MD4Init = Module.findExportByName("advapi32.dll", "MD4Init")
Interceptor.attach(MD4Init, {onLeave: function (args) {send("MD4Init");}});

var MD4Update = Module.findExportByName("advapi32.dll", "MD4Update")
Interceptor.attach(MD4Update, {onLeave: function (args) {send("MD4Update");}});

var MD5Final = Module.findExportByName("advapi32.dll", "MD5Final")
Interceptor.attach(MD5Final, {onLeave: function (args) {send("MD5Final");}});

var MD5Init = Module.findExportByName("advapi32.dll", "MD5Init")
Interceptor.attach(MD5Init, {onLeave: function (args) {send("MD5Init");}});

var MD5Update = Module.findExportByName("advapi32.dll", "MD5Update")
Interceptor.attach(MD5Update, {onLeave: function (args) {send("MD5Update");}});

var MIDL_user_free_Ext = Module.findExportByName("advapi32.dll", "MIDL_user_free_Ext")
Interceptor.attach(MIDL_user_free_Ext, {onLeave: function (args) {send("MIDL_user_free_Ext");}});

var MSChapSrvChangePassword = Module.findExportByName("advapi32.dll", "MSChapSrvChangePassword")
Interceptor.attach(MSChapSrvChangePassword, {onLeave: function (args) {send("MSChapSrvChangePassword");}});

var MSChapSrvChangePassword2 = Module.findExportByName("advapi32.dll", "MSChapSrvChangePassword2")
Interceptor.attach(MSChapSrvChangePassword2, {onLeave: function (args) {send("MSChapSrvChangePassword2");}});

var MakeAbsoluteSD = Module.findExportByName("advapi32.dll", "MakeAbsoluteSD")
Interceptor.attach(MakeAbsoluteSD, {onLeave: function (args) {send("MakeAbsoluteSD");}});

var MakeAbsoluteSD2 = Module.findExportByName("advapi32.dll", "MakeAbsoluteSD2")
Interceptor.attach(MakeAbsoluteSD2, {onLeave: function (args) {send("MakeAbsoluteSD2");}});

var MakeSelfRelativeSD = Module.findExportByName("advapi32.dll", "MakeSelfRelativeSD")
Interceptor.attach(MakeSelfRelativeSD, {onLeave: function (args) {send("MakeSelfRelativeSD");}});

var MapGenericMask = Module.findExportByName("advapi32.dll", "MapGenericMask")
Interceptor.attach(MapGenericMask, {onLeave: function (args) {send("MapGenericMask");}});

var NotifyBootConfigStatus = Module.findExportByName("advapi32.dll", "NotifyBootConfigStatus")
Interceptor.attach(NotifyBootConfigStatus, {onLeave: function (args) {send("NotifyBootConfigStatus");}});

var NotifyChangeEventLog = Module.findExportByName("advapi32.dll", "NotifyChangeEventLog")
Interceptor.attach(NotifyChangeEventLog, {onLeave: function (args) {send("NotifyChangeEventLog");}});

var NotifyServiceStatusChange = Module.findExportByName("advapi32.dll", "NotifyServiceStatusChange")
Interceptor.attach(NotifyServiceStatusChange, {onLeave: function (args) {send("NotifyServiceStatusChange");}});

var NotifyServiceStatusChangeA = Module.findExportByName("advapi32.dll", "NotifyServiceStatusChangeA")
Interceptor.attach(NotifyServiceStatusChangeA, {onLeave: function (args) {send("NotifyServiceStatusChangeA");}});

var NotifyServiceStatusChangeW = Module.findExportByName("advapi32.dll", "NotifyServiceStatusChangeW")
Interceptor.attach(NotifyServiceStatusChangeW, {onLeave: function (args) {send("NotifyServiceStatusChangeW");}});

var NpGetUserName = Module.findExportByName("advapi32.dll", "NpGetUserName")
Interceptor.attach(NpGetUserName, {onLeave: function (args) {send("NpGetUserName");}});

var ObjectCloseAuditAlarmA = Module.findExportByName("advapi32.dll", "ObjectCloseAuditAlarmA")
Interceptor.attach(ObjectCloseAuditAlarmA, {onLeave: function (args) {send("ObjectCloseAuditAlarmA");}});

var ObjectCloseAuditAlarmW = Module.findExportByName("advapi32.dll", "ObjectCloseAuditAlarmW")
Interceptor.attach(ObjectCloseAuditAlarmW, {onLeave: function (args) {send("ObjectCloseAuditAlarmW");}});

var ObjectDeleteAuditAlarmA = Module.findExportByName("advapi32.dll", "ObjectDeleteAuditAlarmA")
Interceptor.attach(ObjectDeleteAuditAlarmA, {onLeave: function (args) {send("ObjectDeleteAuditAlarmA");}});

var ObjectDeleteAuditAlarmW = Module.findExportByName("advapi32.dll", "ObjectDeleteAuditAlarmW")
Interceptor.attach(ObjectDeleteAuditAlarmW, {onLeave: function (args) {send("ObjectDeleteAuditAlarmW");}});

var ObjectOpenAuditAlarmA = Module.findExportByName("advapi32.dll", "ObjectOpenAuditAlarmA")
Interceptor.attach(ObjectOpenAuditAlarmA, {onLeave: function (args) {send("ObjectOpenAuditAlarmA");}});

var ObjectOpenAuditAlarmW = Module.findExportByName("advapi32.dll", "ObjectOpenAuditAlarmW")
Interceptor.attach(ObjectOpenAuditAlarmW, {onLeave: function (args) {send("ObjectOpenAuditAlarmW");}});

var ObjectPrivilegeAuditAlarmA = Module.findExportByName("advapi32.dll", "ObjectPrivilegeAuditAlarmA")
Interceptor.attach(ObjectPrivilegeAuditAlarmA, {onLeave: function (args) {send("ObjectPrivilegeAuditAlarmA");}});

var ObjectPrivilegeAuditAlarmW = Module.findExportByName("advapi32.dll", "ObjectPrivilegeAuditAlarmW")
Interceptor.attach(ObjectPrivilegeAuditAlarmW, {onLeave: function (args) {send("ObjectPrivilegeAuditAlarmW");}});

var OpenBackupEventLogA = Module.findExportByName("advapi32.dll", "OpenBackupEventLogA")
Interceptor.attach(OpenBackupEventLogA, {onLeave: function (args) {send("OpenBackupEventLogA");}});

var OpenBackupEventLogW = Module.findExportByName("advapi32.dll", "OpenBackupEventLogW")
Interceptor.attach(OpenBackupEventLogW, {onLeave: function (args) {send("OpenBackupEventLogW");}});

var OpenEncryptedFileRawA = Module.findExportByName("advapi32.dll", "OpenEncryptedFileRawA")
Interceptor.attach(OpenEncryptedFileRawA, {onLeave: function (args) {send("OpenEncryptedFileRawA");}});

var OpenEncryptedFileRawW = Module.findExportByName("advapi32.dll", "OpenEncryptedFileRawW")
Interceptor.attach(OpenEncryptedFileRawW, {onLeave: function (args) {send("OpenEncryptedFileRawW");}});

var OpenEventLogA = Module.findExportByName("advapi32.dll", "OpenEventLogA")
Interceptor.attach(OpenEventLogA, {onLeave: function (args) {send("OpenEventLogA");}});

var OpenEventLogW = Module.findExportByName("advapi32.dll", "OpenEventLogW")
Interceptor.attach(OpenEventLogW, {onLeave: function (args) {send("OpenEventLogW");}});

var OpenProcessToken = Module.findExportByName("advapi32.dll", "OpenProcessToken")
Interceptor.attach(OpenProcessToken, {onLeave: function (args) {send("OpenProcessToken");}});

var OpenSCManagerA = Module.findExportByName("advapi32.dll", "OpenSCManagerA")
Interceptor.attach(OpenSCManagerA, {onLeave: function (args) {send("OpenSCManagerA");}});

var OpenSCManagerW = Module.findExportByName("advapi32.dll", "OpenSCManagerW")
Interceptor.attach(OpenSCManagerW, {onLeave: function (args) {send("OpenSCManagerW");}});

var OpenServiceA = Module.findExportByName("advapi32.dll", "OpenServiceA")
Interceptor.attach(OpenServiceA, {onLeave: function (args) {send("OpenServiceA");}});

var OpenServiceW = Module.findExportByName("advapi32.dll", "OpenServiceW")
Interceptor.attach(OpenServiceW, {onLeave: function (args) {send("OpenServiceW");}});

var OpenThreadToken = Module.findExportByName("advapi32.dll", "OpenThreadToken")
Interceptor.attach(OpenThreadToken, {onLeave: function (args) {send("OpenThreadToken");}});

var OpenThreadWaitChainSession = Module.findExportByName("advapi32.dll", "OpenThreadWaitChainSession")
Interceptor.attach(OpenThreadWaitChainSession, {onLeave: function (args) {send("OpenThreadWaitChainSession");}});

var OpenTraceA = Module.findExportByName("advapi32.dll", "OpenTraceA")
Interceptor.attach(OpenTraceA, {onLeave: function (args) {send("OpenTraceA");}});

var OpenTraceW = Module.findExportByName("advapi32.dll", "OpenTraceW")
Interceptor.attach(OpenTraceW, {onLeave: function (args) {send("OpenTraceW");}});

var OperationEnd = Module.findExportByName("advapi32.dll", "OperationEnd")
Interceptor.attach(OperationEnd, {onLeave: function (args) {send("OperationEnd");}});

var OperationStart = Module.findExportByName("advapi32.dll", "OperationStart")
Interceptor.attach(OperationStart, {onLeave: function (args) {send("OperationStart");}});

var PerfAddCounters = Module.findExportByName("advapi32.dll", "PerfAddCounters")
Interceptor.attach(PerfAddCounters, {onLeave: function (args) {send("PerfAddCounters");}});

var PerfCloseQueryHandle = Module.findExportByName("advapi32.dll", "PerfCloseQueryHandle")
Interceptor.attach(PerfCloseQueryHandle, {onLeave: function (args) {send("PerfCloseQueryHandle");}});

var PerfCreateInstance = Module.findExportByName("advapi32.dll", "PerfCreateInstance")
Interceptor.attach(PerfCreateInstance, {onLeave: function (args) {send("PerfCreateInstance");}});

var PerfDecrementULongCounterValue = Module.findExportByName("advapi32.dll", "PerfDecrementULongCounterValue")
Interceptor.attach(PerfDecrementULongCounterValue, {onLeave: function (args) {send("PerfDecrementULongCounterValue");}});

var PerfDecrementULongLongCounterValue = Module.findExportByName("advapi32.dll", "PerfDecrementULongLongCounterValue")
Interceptor.attach(PerfDecrementULongLongCounterValue, {onLeave: function (args) {send("PerfDecrementULongLongCounterValue");}});

var PerfDeleteCounters = Module.findExportByName("advapi32.dll", "PerfDeleteCounters")
Interceptor.attach(PerfDeleteCounters, {onLeave: function (args) {send("PerfDeleteCounters");}});

var PerfDeleteInstance = Module.findExportByName("advapi32.dll", "PerfDeleteInstance")
Interceptor.attach(PerfDeleteInstance, {onLeave: function (args) {send("PerfDeleteInstance");}});

var PerfEnumerateCounterSet = Module.findExportByName("advapi32.dll", "PerfEnumerateCounterSet")
Interceptor.attach(PerfEnumerateCounterSet, {onLeave: function (args) {send("PerfEnumerateCounterSet");}});

var PerfEnumerateCounterSetInstances = Module.findExportByName("advapi32.dll", "PerfEnumerateCounterSetInstances")
Interceptor.attach(PerfEnumerateCounterSetInstances, {onLeave: function (args) {send("PerfEnumerateCounterSetInstances");}});

var PerfIncrementULongCounterValue = Module.findExportByName("advapi32.dll", "PerfIncrementULongCounterValue")
Interceptor.attach(PerfIncrementULongCounterValue, {onLeave: function (args) {send("PerfIncrementULongCounterValue");}});

var PerfIncrementULongLongCounterValue = Module.findExportByName("advapi32.dll", "PerfIncrementULongLongCounterValue")
Interceptor.attach(PerfIncrementULongLongCounterValue, {onLeave: function (args) {send("PerfIncrementULongLongCounterValue");}});

var PerfOpenQueryHandle = Module.findExportByName("advapi32.dll", "PerfOpenQueryHandle")
Interceptor.attach(PerfOpenQueryHandle, {onLeave: function (args) {send("PerfOpenQueryHandle");}});

var PerfQueryCounterData = Module.findExportByName("advapi32.dll", "PerfQueryCounterData")
Interceptor.attach(PerfQueryCounterData, {onLeave: function (args) {send("PerfQueryCounterData");}});

var PerfQueryCounterInfo = Module.findExportByName("advapi32.dll", "PerfQueryCounterInfo")
Interceptor.attach(PerfQueryCounterInfo, {onLeave: function (args) {send("PerfQueryCounterInfo");}});

var PerfQueryCounterSetRegistrationInfo = Module.findExportByName("advapi32.dll", "PerfQueryCounterSetRegistrationInfo")
Interceptor.attach(PerfQueryCounterSetRegistrationInfo, {onLeave: function (args) {send("PerfQueryCounterSetRegistrationInfo");}});

var PerfQueryInstance = Module.findExportByName("advapi32.dll", "PerfQueryInstance")
Interceptor.attach(PerfQueryInstance, {onLeave: function (args) {send("PerfQueryInstance");}});

var PerfRegCloseKey = Module.findExportByName("advapi32.dll", "PerfRegCloseKey")
Interceptor.attach(PerfRegCloseKey, {onLeave: function (args) {send("PerfRegCloseKey");}});

var PerfRegEnumKey = Module.findExportByName("advapi32.dll", "PerfRegEnumKey")
Interceptor.attach(PerfRegEnumKey, {onLeave: function (args) {send("PerfRegEnumKey");}});

var PerfRegEnumValue = Module.findExportByName("advapi32.dll", "PerfRegEnumValue")
Interceptor.attach(PerfRegEnumValue, {onLeave: function (args) {send("PerfRegEnumValue");}});

var PerfRegQueryInfoKey = Module.findExportByName("advapi32.dll", "PerfRegQueryInfoKey")
Interceptor.attach(PerfRegQueryInfoKey, {onLeave: function (args) {send("PerfRegQueryInfoKey");}});

var PerfRegQueryValue = Module.findExportByName("advapi32.dll", "PerfRegQueryValue")
Interceptor.attach(PerfRegQueryValue, {onLeave: function (args) {send("PerfRegQueryValue");}});

var PerfRegSetValue = Module.findExportByName("advapi32.dll", "PerfRegSetValue")
Interceptor.attach(PerfRegSetValue, {onLeave: function (args) {send("PerfRegSetValue");}});

var PerfSetCounterRefValue = Module.findExportByName("advapi32.dll", "PerfSetCounterRefValue")
Interceptor.attach(PerfSetCounterRefValue, {onLeave: function (args) {send("PerfSetCounterRefValue");}});

var PerfSetCounterSetInfo = Module.findExportByName("advapi32.dll", "PerfSetCounterSetInfo")
Interceptor.attach(PerfSetCounterSetInfo, {onLeave: function (args) {send("PerfSetCounterSetInfo");}});

var PerfSetULongCounterValue = Module.findExportByName("advapi32.dll", "PerfSetULongCounterValue")
Interceptor.attach(PerfSetULongCounterValue, {onLeave: function (args) {send("PerfSetULongCounterValue");}});

var PerfSetULongLongCounterValue = Module.findExportByName("advapi32.dll", "PerfSetULongLongCounterValue")
Interceptor.attach(PerfSetULongLongCounterValue, {onLeave: function (args) {send("PerfSetULongLongCounterValue");}});

var PerfStartProvider = Module.findExportByName("advapi32.dll", "PerfStartProvider")
Interceptor.attach(PerfStartProvider, {onLeave: function (args) {send("PerfStartProvider");}});

var PerfStartProviderEx = Module.findExportByName("advapi32.dll", "PerfStartProviderEx")
Interceptor.attach(PerfStartProviderEx, {onLeave: function (args) {send("PerfStartProviderEx");}});

var PerfStopProvider = Module.findExportByName("advapi32.dll", "PerfStopProvider")
Interceptor.attach(PerfStopProvider, {onLeave: function (args) {send("PerfStopProvider");}});

var PrivilegeCheck = Module.findExportByName("advapi32.dll", "PrivilegeCheck")
Interceptor.attach(PrivilegeCheck, {onLeave: function (args) {send("PrivilegeCheck");}});

var PrivilegedServiceAuditAlarmA = Module.findExportByName("advapi32.dll", "PrivilegedServiceAuditAlarmA")
Interceptor.attach(PrivilegedServiceAuditAlarmA, {onLeave: function (args) {send("PrivilegedServiceAuditAlarmA");}});

var PrivilegedServiceAuditAlarmW = Module.findExportByName("advapi32.dll", "PrivilegedServiceAuditAlarmW")
Interceptor.attach(PrivilegedServiceAuditAlarmW, {onLeave: function (args) {send("PrivilegedServiceAuditAlarmW");}});

var ProcessIdleTasks = Module.findExportByName("advapi32.dll", "ProcessIdleTasks")
Interceptor.attach(ProcessIdleTasks, {onLeave: function (args) {send("ProcessIdleTasks");}});

var ProcessIdleTasksW = Module.findExportByName("advapi32.dll", "ProcessIdleTasksW")
Interceptor.attach(ProcessIdleTasksW, {onLeave: function (args) {send("ProcessIdleTasksW");}});

var ProcessTrace = Module.findExportByName("advapi32.dll", "ProcessTrace")
Interceptor.attach(ProcessTrace, {onLeave: function (args) {send("ProcessTrace");}});

var QueryAllTracesA = Module.findExportByName("advapi32.dll", "QueryAllTracesA")
Interceptor.attach(QueryAllTracesA, {onLeave: function (args) {send("QueryAllTracesA");}});

var QueryAllTracesW = Module.findExportByName("advapi32.dll", "QueryAllTracesW")
Interceptor.attach(QueryAllTracesW, {onLeave: function (args) {send("QueryAllTracesW");}});

var QueryLocalUserServiceName = Module.findExportByName("advapi32.dll", "QueryLocalUserServiceName")
Interceptor.attach(QueryLocalUserServiceName, {onLeave: function (args) {send("QueryLocalUserServiceName");}});

var QueryRecoveryAgentsOnEncryptedFile = Module.findExportByName("advapi32.dll", "QueryRecoveryAgentsOnEncryptedFile")
Interceptor.attach(QueryRecoveryAgentsOnEncryptedFile, {onLeave: function (args) {send("QueryRecoveryAgentsOnEncryptedFile");}});

var QuerySecurityAccessMask = Module.findExportByName("advapi32.dll", "QuerySecurityAccessMask")
Interceptor.attach(QuerySecurityAccessMask, {onLeave: function (args) {send("QuerySecurityAccessMask");}});

var QueryServiceConfig2A = Module.findExportByName("advapi32.dll", "QueryServiceConfig2A")
Interceptor.attach(QueryServiceConfig2A, {onLeave: function (args) {send("QueryServiceConfig2A");}});

var QueryServiceConfig2W = Module.findExportByName("advapi32.dll", "QueryServiceConfig2W")
Interceptor.attach(QueryServiceConfig2W, {onLeave: function (args) {send("QueryServiceConfig2W");}});

var QueryServiceConfigA = Module.findExportByName("advapi32.dll", "QueryServiceConfigA")
Interceptor.attach(QueryServiceConfigA, {onLeave: function (args) {send("QueryServiceConfigA");}});

var QueryServiceConfigW = Module.findExportByName("advapi32.dll", "QueryServiceConfigW")
Interceptor.attach(QueryServiceConfigW, {onLeave: function (args) {send("QueryServiceConfigW");}});

var QueryServiceDynamicInformation = Module.findExportByName("advapi32.dll", "QueryServiceDynamicInformation")
Interceptor.attach(QueryServiceDynamicInformation, {onLeave: function (args) {send("QueryServiceDynamicInformation");}});

var QueryServiceLockStatusA = Module.findExportByName("advapi32.dll", "QueryServiceLockStatusA")
Interceptor.attach(QueryServiceLockStatusA, {onLeave: function (args) {send("QueryServiceLockStatusA");}});

var QueryServiceLockStatusW = Module.findExportByName("advapi32.dll", "QueryServiceLockStatusW")
Interceptor.attach(QueryServiceLockStatusW, {onLeave: function (args) {send("QueryServiceLockStatusW");}});

var QueryServiceObjectSecurity = Module.findExportByName("advapi32.dll", "QueryServiceObjectSecurity")
Interceptor.attach(QueryServiceObjectSecurity, {onLeave: function (args) {send("QueryServiceObjectSecurity");}});

var QueryServiceStatus = Module.findExportByName("advapi32.dll", "QueryServiceStatus")
Interceptor.attach(QueryServiceStatus, {onLeave: function (args) {send("QueryServiceStatus");}});

var QueryServiceStatusEx = Module.findExportByName("advapi32.dll", "QueryServiceStatusEx")
Interceptor.attach(QueryServiceStatusEx, {onLeave: function (args) {send("QueryServiceStatusEx");}});

var QueryTraceA = Module.findExportByName("advapi32.dll", "QueryTraceA")
Interceptor.attach(QueryTraceA, {onLeave: function (args) {send("QueryTraceA");}});

var QueryTraceProcessingHandle = Module.findExportByName("advapi32.dll", "QueryTraceProcessingHandle")
Interceptor.attach(QueryTraceProcessingHandle, {onLeave: function (args) {send("QueryTraceProcessingHandle");}});

var QueryTraceW = Module.findExportByName("advapi32.dll", "QueryTraceW")
Interceptor.attach(QueryTraceW, {onLeave: function (args) {send("QueryTraceW");}});

var QueryUserServiceName = Module.findExportByName("advapi32.dll", "QueryUserServiceName")
Interceptor.attach(QueryUserServiceName, {onLeave: function (args) {send("QueryUserServiceName");}});

var QueryUserServiceNameForContext = Module.findExportByName("advapi32.dll", "QueryUserServiceNameForContext")
Interceptor.attach(QueryUserServiceNameForContext, {onLeave: function (args) {send("QueryUserServiceNameForContext");}});

var QueryUsersOnEncryptedFile = Module.findExportByName("advapi32.dll", "QueryUsersOnEncryptedFile")
Interceptor.attach(QueryUsersOnEncryptedFile, {onLeave: function (args) {send("QueryUsersOnEncryptedFile");}});

var ReadEncryptedFileRaw = Module.findExportByName("advapi32.dll", "ReadEncryptedFileRaw")
Interceptor.attach(ReadEncryptedFileRaw, {onLeave: function (args) {send("ReadEncryptedFileRaw");}});

var ReadEventLogA = Module.findExportByName("advapi32.dll", "ReadEventLogA")
Interceptor.attach(ReadEventLogA, {onLeave: function (args) {send("ReadEventLogA");}});

var ReadEventLogW = Module.findExportByName("advapi32.dll", "ReadEventLogW")
Interceptor.attach(ReadEventLogW, {onLeave: function (args) {send("ReadEventLogW");}});

var RegCloseKey = Module.findExportByName("advapi32.dll", "RegCloseKey")
Interceptor.attach(RegCloseKey, {onLeave: function (args) {send("RegCloseKey");}});

var RegConnectRegistryA = Module.findExportByName("advapi32.dll", "RegConnectRegistryA")
Interceptor.attach(RegConnectRegistryA, {onLeave: function (args) {send("RegConnectRegistryA");}});

var RegConnectRegistryExA = Module.findExportByName("advapi32.dll", "RegConnectRegistryExA")
Interceptor.attach(RegConnectRegistryExA, {onLeave: function (args) {send("RegConnectRegistryExA");}});

var RegConnectRegistryExW = Module.findExportByName("advapi32.dll", "RegConnectRegistryExW")
Interceptor.attach(RegConnectRegistryExW, {onLeave: function (args) {send("RegConnectRegistryExW");}});

var RegConnectRegistryW = Module.findExportByName("advapi32.dll", "RegConnectRegistryW")
Interceptor.attach(RegConnectRegistryW, {onLeave: function (args) {send("RegConnectRegistryW");}});

var RegCopyTreeA = Module.findExportByName("advapi32.dll", "RegCopyTreeA")
Interceptor.attach(RegCopyTreeA, {onLeave: function (args) {send("RegCopyTreeA");}});

var RegCopyTreeW = Module.findExportByName("advapi32.dll", "RegCopyTreeW")
Interceptor.attach(RegCopyTreeW, {onLeave: function (args) {send("RegCopyTreeW");}});

var RegCreateKeyA = Module.findExportByName("advapi32.dll", "RegCreateKeyA")
Interceptor.attach(RegCreateKeyA, {onLeave: function (args) {send("RegCreateKeyA");}});

var RegCreateKeyExA = Module.findExportByName("advapi32.dll", "RegCreateKeyExA")
Interceptor.attach(RegCreateKeyExA, {onLeave: function (args) {send("RegCreateKeyExA");}});

var RegCreateKeyExW = Module.findExportByName("advapi32.dll", "RegCreateKeyExW")
Interceptor.attach(RegCreateKeyExW, {onLeave: function (args) {send("RegCreateKeyExW");}});

var RegCreateKeyTransactedA = Module.findExportByName("advapi32.dll", "RegCreateKeyTransactedA")
Interceptor.attach(RegCreateKeyTransactedA, {onLeave: function (args) {send("RegCreateKeyTransactedA");}});

var RegCreateKeyTransactedW = Module.findExportByName("advapi32.dll", "RegCreateKeyTransactedW")
Interceptor.attach(RegCreateKeyTransactedW, {onLeave: function (args) {send("RegCreateKeyTransactedW");}});

var RegCreateKeyW = Module.findExportByName("advapi32.dll", "RegCreateKeyW")
Interceptor.attach(RegCreateKeyW, {onLeave: function (args) {send("RegCreateKeyW");}});

var RegDeleteKeyA = Module.findExportByName("advapi32.dll", "RegDeleteKeyA")
Interceptor.attach(RegDeleteKeyA, {onLeave: function (args) {send("RegDeleteKeyA");}});

var RegDeleteKeyExA = Module.findExportByName("advapi32.dll", "RegDeleteKeyExA")
Interceptor.attach(RegDeleteKeyExA, {onLeave: function (args) {send("RegDeleteKeyExA");}});

var RegDeleteKeyExW = Module.findExportByName("advapi32.dll", "RegDeleteKeyExW")
Interceptor.attach(RegDeleteKeyExW, {onLeave: function (args) {send("RegDeleteKeyExW");}});

var RegDeleteKeyTransactedA = Module.findExportByName("advapi32.dll", "RegDeleteKeyTransactedA")
Interceptor.attach(RegDeleteKeyTransactedA, {onLeave: function (args) {send("RegDeleteKeyTransactedA");}});

var RegDeleteKeyTransactedW = Module.findExportByName("advapi32.dll", "RegDeleteKeyTransactedW")
Interceptor.attach(RegDeleteKeyTransactedW, {onLeave: function (args) {send("RegDeleteKeyTransactedW");}});

var RegDeleteKeyValueA = Module.findExportByName("advapi32.dll", "RegDeleteKeyValueA")
Interceptor.attach(RegDeleteKeyValueA, {onLeave: function (args) {send("RegDeleteKeyValueA");}});

var RegDeleteKeyValueW = Module.findExportByName("advapi32.dll", "RegDeleteKeyValueW")
Interceptor.attach(RegDeleteKeyValueW, {onLeave: function (args) {send("RegDeleteKeyValueW");}});

var RegDeleteKeyW = Module.findExportByName("advapi32.dll", "RegDeleteKeyW")
Interceptor.attach(RegDeleteKeyW, {onLeave: function (args) {send("RegDeleteKeyW");}});

var RegDeleteTreeA = Module.findExportByName("advapi32.dll", "RegDeleteTreeA")
Interceptor.attach(RegDeleteTreeA, {onLeave: function (args) {send("RegDeleteTreeA");}});

var RegDeleteTreeW = Module.findExportByName("advapi32.dll", "RegDeleteTreeW")
Interceptor.attach(RegDeleteTreeW, {onLeave: function (args) {send("RegDeleteTreeW");}});

var RegDeleteValueA = Module.findExportByName("advapi32.dll", "RegDeleteValueA")
Interceptor.attach(RegDeleteValueA, {onLeave: function (args) {send("RegDeleteValueA");}});

var RegDeleteValueW = Module.findExportByName("advapi32.dll", "RegDeleteValueW")
Interceptor.attach(RegDeleteValueW, {onLeave: function (args) {send("RegDeleteValueW");}});

var RegDisablePredefinedCache = Module.findExportByName("advapi32.dll", "RegDisablePredefinedCache")
Interceptor.attach(RegDisablePredefinedCache, {onLeave: function (args) {send("RegDisablePredefinedCache");}});

var RegDisablePredefinedCacheEx = Module.findExportByName("advapi32.dll", "RegDisablePredefinedCacheEx")
Interceptor.attach(RegDisablePredefinedCacheEx, {onLeave: function (args) {send("RegDisablePredefinedCacheEx");}});

var RegDisableReflectionKey = Module.findExportByName("advapi32.dll", "RegDisableReflectionKey")
Interceptor.attach(RegDisableReflectionKey, {onLeave: function (args) {send("RegDisableReflectionKey");}});

var RegEnableReflectionKey = Module.findExportByName("advapi32.dll", "RegEnableReflectionKey")
Interceptor.attach(RegEnableReflectionKey, {onLeave: function (args) {send("RegEnableReflectionKey");}});

var RegEnumKeyA = Module.findExportByName("advapi32.dll", "RegEnumKeyA")
Interceptor.attach(RegEnumKeyA, {onLeave: function (args) {send("RegEnumKeyA");}});

var RegEnumKeyExA = Module.findExportByName("advapi32.dll", "RegEnumKeyExA")
Interceptor.attach(RegEnumKeyExA, {onLeave: function (args) {send("RegEnumKeyExA");}});

var RegEnumKeyExW = Module.findExportByName("advapi32.dll", "RegEnumKeyExW")
Interceptor.attach(RegEnumKeyExW, {onLeave: function (args) {send("RegEnumKeyExW");}});

var RegEnumKeyW = Module.findExportByName("advapi32.dll", "RegEnumKeyW")
Interceptor.attach(RegEnumKeyW, {onLeave: function (args) {send("RegEnumKeyW");}});

var RegEnumValueA = Module.findExportByName("advapi32.dll", "RegEnumValueA")
Interceptor.attach(RegEnumValueA, {onLeave: function (args) {send("RegEnumValueA");}});

var RegEnumValueW = Module.findExportByName("advapi32.dll", "RegEnumValueW")
Interceptor.attach(RegEnumValueW, {onLeave: function (args) {send("RegEnumValueW");}});

var RegFlushKey = Module.findExportByName("advapi32.dll", "RegFlushKey")
Interceptor.attach(RegFlushKey, {onLeave: function (args) {send("RegFlushKey");}});

var RegGetKeySecurity = Module.findExportByName("advapi32.dll", "RegGetKeySecurity")
Interceptor.attach(RegGetKeySecurity, {onLeave: function (args) {send("RegGetKeySecurity");}});

var RegGetValueA = Module.findExportByName("advapi32.dll", "RegGetValueA")
Interceptor.attach(RegGetValueA, {onLeave: function (args) {send("RegGetValueA");}});

var RegGetValueW = Module.findExportByName("advapi32.dll", "RegGetValueW")
Interceptor.attach(RegGetValueW, {onLeave: function (args) {send("RegGetValueW");}});

var RegLoadAppKeyA = Module.findExportByName("advapi32.dll", "RegLoadAppKeyA")
Interceptor.attach(RegLoadAppKeyA, {onLeave: function (args) {send("RegLoadAppKeyA");}});

var RegLoadAppKeyW = Module.findExportByName("advapi32.dll", "RegLoadAppKeyW")
Interceptor.attach(RegLoadAppKeyW, {onLeave: function (args) {send("RegLoadAppKeyW");}});

var RegLoadKeyA = Module.findExportByName("advapi32.dll", "RegLoadKeyA")
Interceptor.attach(RegLoadKeyA, {onLeave: function (args) {send("RegLoadKeyA");}});

var RegLoadKeyW = Module.findExportByName("advapi32.dll", "RegLoadKeyW")
Interceptor.attach(RegLoadKeyW, {onLeave: function (args) {send("RegLoadKeyW");}});

var RegLoadMUIStringA = Module.findExportByName("advapi32.dll", "RegLoadMUIStringA")
Interceptor.attach(RegLoadMUIStringA, {onLeave: function (args) {send("RegLoadMUIStringA");}});

var RegLoadMUIStringW = Module.findExportByName("advapi32.dll", "RegLoadMUIStringW")
Interceptor.attach(RegLoadMUIStringW, {onLeave: function (args) {send("RegLoadMUIStringW");}});

var RegNotifyChangeKeyValue = Module.findExportByName("advapi32.dll", "RegNotifyChangeKeyValue")
Interceptor.attach(RegNotifyChangeKeyValue, {onLeave: function (args) {send("RegNotifyChangeKeyValue");}});

var RegOpenCurrentUser = Module.findExportByName("advapi32.dll", "RegOpenCurrentUser")
Interceptor.attach(RegOpenCurrentUser, {onLeave: function (args) {send("RegOpenCurrentUser");}});

var RegOpenKeyA = Module.findExportByName("advapi32.dll", "RegOpenKeyA")
Interceptor.attach(RegOpenKeyA, {onLeave: function (args) {send("RegOpenKeyA");}});

var RegOpenKeyExA = Module.findExportByName("advapi32.dll", "RegOpenKeyExA")
Interceptor.attach(RegOpenKeyExA, {onLeave: function (args) {send("RegOpenKeyExA");}});

var RegOpenKeyExW = Module.findExportByName("advapi32.dll", "RegOpenKeyExW")
Interceptor.attach(RegOpenKeyExW, {onLeave: function (args) {send("RegOpenKeyExW");}});

var RegOpenKeyTransactedA = Module.findExportByName("advapi32.dll", "RegOpenKeyTransactedA")
Interceptor.attach(RegOpenKeyTransactedA, {onLeave: function (args) {send("RegOpenKeyTransactedA");}});

var RegOpenKeyTransactedW = Module.findExportByName("advapi32.dll", "RegOpenKeyTransactedW")
Interceptor.attach(RegOpenKeyTransactedW, {onLeave: function (args) {send("RegOpenKeyTransactedW");}});

var RegOpenKeyW = Module.findExportByName("advapi32.dll", "RegOpenKeyW")
Interceptor.attach(RegOpenKeyW, {onLeave: function (args) {send("RegOpenKeyW");}});

var RegOpenUserClassesRoot = Module.findExportByName("advapi32.dll", "RegOpenUserClassesRoot")
Interceptor.attach(RegOpenUserClassesRoot, {onLeave: function (args) {send("RegOpenUserClassesRoot");}});

var RegOverridePredefKey = Module.findExportByName("advapi32.dll", "RegOverridePredefKey")
Interceptor.attach(RegOverridePredefKey, {onLeave: function (args) {send("RegOverridePredefKey");}});

var RegQueryInfoKeyA = Module.findExportByName("advapi32.dll", "RegQueryInfoKeyA")
Interceptor.attach(RegQueryInfoKeyA, {onLeave: function (args) {send("RegQueryInfoKeyA");}});

var RegQueryInfoKeyW = Module.findExportByName("advapi32.dll", "RegQueryInfoKeyW")
Interceptor.attach(RegQueryInfoKeyW, {onLeave: function (args) {send("RegQueryInfoKeyW");}});

var RegQueryMultipleValuesA = Module.findExportByName("advapi32.dll", "RegQueryMultipleValuesA")
Interceptor.attach(RegQueryMultipleValuesA, {onLeave: function (args) {send("RegQueryMultipleValuesA");}});

var RegQueryMultipleValuesW = Module.findExportByName("advapi32.dll", "RegQueryMultipleValuesW")
Interceptor.attach(RegQueryMultipleValuesW, {onLeave: function (args) {send("RegQueryMultipleValuesW");}});

var RegQueryReflectionKey = Module.findExportByName("advapi32.dll", "RegQueryReflectionKey")
Interceptor.attach(RegQueryReflectionKey, {onLeave: function (args) {send("RegQueryReflectionKey");}});

var RegQueryValueA = Module.findExportByName("advapi32.dll", "RegQueryValueA")
Interceptor.attach(RegQueryValueA, {onLeave: function (args) {send("RegQueryValueA");}});

var RegQueryValueExA = Module.findExportByName("advapi32.dll", "RegQueryValueExA")
Interceptor.attach(RegQueryValueExA, {onLeave: function (args) {send("RegQueryValueExA");}});

var RegQueryValueExW = Module.findExportByName("advapi32.dll", "RegQueryValueExW")
Interceptor.attach(RegQueryValueExW, {onLeave: function (args) {send("RegQueryValueExW");}});

var RegQueryValueW = Module.findExportByName("advapi32.dll", "RegQueryValueW")
Interceptor.attach(RegQueryValueW, {onLeave: function (args) {send("RegQueryValueW");}});

var RegRenameKey = Module.findExportByName("advapi32.dll", "RegRenameKey")
Interceptor.attach(RegRenameKey, {onLeave: function (args) {send("RegRenameKey");}});

var RegReplaceKeyA = Module.findExportByName("advapi32.dll", "RegReplaceKeyA")
Interceptor.attach(RegReplaceKeyA, {onLeave: function (args) {send("RegReplaceKeyA");}});

var RegReplaceKeyW = Module.findExportByName("advapi32.dll", "RegReplaceKeyW")
Interceptor.attach(RegReplaceKeyW, {onLeave: function (args) {send("RegReplaceKeyW");}});

var RegRestoreKeyA = Module.findExportByName("advapi32.dll", "RegRestoreKeyA")
Interceptor.attach(RegRestoreKeyA, {onLeave: function (args) {send("RegRestoreKeyA");}});

var RegRestoreKeyW = Module.findExportByName("advapi32.dll", "RegRestoreKeyW")
Interceptor.attach(RegRestoreKeyW, {onLeave: function (args) {send("RegRestoreKeyW");}});

var RegSaveKeyA = Module.findExportByName("advapi32.dll", "RegSaveKeyA")
Interceptor.attach(RegSaveKeyA, {onLeave: function (args) {send("RegSaveKeyA");}});

var RegSaveKeyExA = Module.findExportByName("advapi32.dll", "RegSaveKeyExA")
Interceptor.attach(RegSaveKeyExA, {onLeave: function (args) {send("RegSaveKeyExA");}});

var RegSaveKeyExW = Module.findExportByName("advapi32.dll", "RegSaveKeyExW")
Interceptor.attach(RegSaveKeyExW, {onLeave: function (args) {send("RegSaveKeyExW");}});

var RegSaveKeyW = Module.findExportByName("advapi32.dll", "RegSaveKeyW")
Interceptor.attach(RegSaveKeyW, {onLeave: function (args) {send("RegSaveKeyW");}});

var RegSetKeySecurity = Module.findExportByName("advapi32.dll", "RegSetKeySecurity")
Interceptor.attach(RegSetKeySecurity, {onLeave: function (args) {send("RegSetKeySecurity");}});

var RegSetKeyValueA = Module.findExportByName("advapi32.dll", "RegSetKeyValueA")
Interceptor.attach(RegSetKeyValueA, {onLeave: function (args) {send("RegSetKeyValueA");}});

var RegSetKeyValueW = Module.findExportByName("advapi32.dll", "RegSetKeyValueW")
Interceptor.attach(RegSetKeyValueW, {onLeave: function (args) {send("RegSetKeyValueW");}});

var RegSetValueA = Module.findExportByName("advapi32.dll", "RegSetValueA")
Interceptor.attach(RegSetValueA, {onLeave: function (args) {send("RegSetValueA");}});

var RegSetValueExA = Module.findExportByName("advapi32.dll", "RegSetValueExA")
Interceptor.attach(RegSetValueExA, {onLeave: function (args) {send("RegSetValueExA");}});

var RegSetValueExW = Module.findExportByName("advapi32.dll", "RegSetValueExW")
Interceptor.attach(RegSetValueExW, {onLeave: function (args) {send("RegSetValueExW");}});

var RegSetValueW = Module.findExportByName("advapi32.dll", "RegSetValueW")
Interceptor.attach(RegSetValueW, {onLeave: function (args) {send("RegSetValueW");}});

var RegUnLoadKeyA = Module.findExportByName("advapi32.dll", "RegUnLoadKeyA")
Interceptor.attach(RegUnLoadKeyA, {onLeave: function (args) {send("RegUnLoadKeyA");}});

var RegUnLoadKeyW = Module.findExportByName("advapi32.dll", "RegUnLoadKeyW")
Interceptor.attach(RegUnLoadKeyW, {onLeave: function (args) {send("RegUnLoadKeyW");}});

var RegisterEventSourceA = Module.findExportByName("advapi32.dll", "RegisterEventSourceA")
Interceptor.attach(RegisterEventSourceA, {onLeave: function (args) {send("RegisterEventSourceA");}});

var RegisterEventSourceW = Module.findExportByName("advapi32.dll", "RegisterEventSourceW")
Interceptor.attach(RegisterEventSourceW, {onLeave: function (args) {send("RegisterEventSourceW");}});

var RegisterIdleTask = Module.findExportByName("advapi32.dll", "RegisterIdleTask")
Interceptor.attach(RegisterIdleTask, {onLeave: function (args) {send("RegisterIdleTask");}});

var RegisterServiceCtrlHandlerA = Module.findExportByName("advapi32.dll", "RegisterServiceCtrlHandlerA")
Interceptor.attach(RegisterServiceCtrlHandlerA, {onLeave: function (args) {send("RegisterServiceCtrlHandlerA");}});

var RegisterServiceCtrlHandlerExA = Module.findExportByName("advapi32.dll", "RegisterServiceCtrlHandlerExA")
Interceptor.attach(RegisterServiceCtrlHandlerExA, {onLeave: function (args) {send("RegisterServiceCtrlHandlerExA");}});

var RegisterServiceCtrlHandlerExW = Module.findExportByName("advapi32.dll", "RegisterServiceCtrlHandlerExW")
Interceptor.attach(RegisterServiceCtrlHandlerExW, {onLeave: function (args) {send("RegisterServiceCtrlHandlerExW");}});

var RegisterServiceCtrlHandlerW = Module.findExportByName("advapi32.dll", "RegisterServiceCtrlHandlerW")
Interceptor.attach(RegisterServiceCtrlHandlerW, {onLeave: function (args) {send("RegisterServiceCtrlHandlerW");}});

var RegisterTraceGuidsA = Module.findExportByName("advapi32.dll", "RegisterTraceGuidsA")
Interceptor.attach(RegisterTraceGuidsA, {onLeave: function (args) {send("RegisterTraceGuidsA");}});

var RegisterTraceGuidsW = Module.findExportByName("advapi32.dll", "RegisterTraceGuidsW")
Interceptor.attach(RegisterTraceGuidsW, {onLeave: function (args) {send("RegisterTraceGuidsW");}});

var RegisterWaitChainCOMCallback = Module.findExportByName("advapi32.dll", "RegisterWaitChainCOMCallback")
Interceptor.attach(RegisterWaitChainCOMCallback, {onLeave: function (args) {send("RegisterWaitChainCOMCallback");}});

var RemoteRegEnumKeyWrapper = Module.findExportByName("advapi32.dll", "RemoteRegEnumKeyWrapper")
Interceptor.attach(RemoteRegEnumKeyWrapper, {onLeave: function (args) {send("RemoteRegEnumKeyWrapper");}});

var RemoteRegEnumValueWrapper = Module.findExportByName("advapi32.dll", "RemoteRegEnumValueWrapper")
Interceptor.attach(RemoteRegEnumValueWrapper, {onLeave: function (args) {send("RemoteRegEnumValueWrapper");}});

var RemoteRegQueryInfoKeyWrapper = Module.findExportByName("advapi32.dll", "RemoteRegQueryInfoKeyWrapper")
Interceptor.attach(RemoteRegQueryInfoKeyWrapper, {onLeave: function (args) {send("RemoteRegQueryInfoKeyWrapper");}});

var RemoteRegQueryMultipleValues2Wrapper = Module.findExportByName("advapi32.dll", "RemoteRegQueryMultipleValues2Wrapper")
Interceptor.attach(RemoteRegQueryMultipleValues2Wrapper, {onLeave: function (args) {send("RemoteRegQueryMultipleValues2Wrapper");}});

var RemoteRegQueryMultipleValuesWrapper = Module.findExportByName("advapi32.dll", "RemoteRegQueryMultipleValuesWrapper")
Interceptor.attach(RemoteRegQueryMultipleValuesWrapper, {onLeave: function (args) {send("RemoteRegQueryMultipleValuesWrapper");}});

var RemoteRegQueryValueWrapper = Module.findExportByName("advapi32.dll", "RemoteRegQueryValueWrapper")
Interceptor.attach(RemoteRegQueryValueWrapper, {onLeave: function (args) {send("RemoteRegQueryValueWrapper");}});

var RemoveTraceCallback = Module.findExportByName("advapi32.dll", "RemoveTraceCallback")
Interceptor.attach(RemoveTraceCallback, {onLeave: function (args) {send("RemoveTraceCallback");}});

var RemoveUsersFromEncryptedFile = Module.findExportByName("advapi32.dll", "RemoveUsersFromEncryptedFile")
Interceptor.attach(RemoveUsersFromEncryptedFile, {onLeave: function (args) {send("RemoveUsersFromEncryptedFile");}});

var ReportEventA = Module.findExportByName("advapi32.dll", "ReportEventA")
Interceptor.attach(ReportEventA, {onLeave: function (args) {send("ReportEventA");}});

var ReportEventW = Module.findExportByName("advapi32.dll", "ReportEventW")
Interceptor.attach(ReportEventW, {onLeave: function (args) {send("ReportEventW");}});

var RevertToSelf = Module.findExportByName("advapi32.dll", "RevertToSelf")
Interceptor.attach(RevertToSelf, {onLeave: function (args) {send("RevertToSelf");}});

var SafeBaseRegGetKeySecurity = Module.findExportByName("advapi32.dll", "SafeBaseRegGetKeySecurity")
Interceptor.attach(SafeBaseRegGetKeySecurity, {onLeave: function (args) {send("SafeBaseRegGetKeySecurity");}});

var SaferCloseLevel = Module.findExportByName("advapi32.dll", "SaferCloseLevel")
Interceptor.attach(SaferCloseLevel, {onLeave: function (args) {send("SaferCloseLevel");}});

var SaferComputeTokenFromLevel = Module.findExportByName("advapi32.dll", "SaferComputeTokenFromLevel")
Interceptor.attach(SaferComputeTokenFromLevel, {onLeave: function (args) {send("SaferComputeTokenFromLevel");}});

var SaferCreateLevel = Module.findExportByName("advapi32.dll", "SaferCreateLevel")
Interceptor.attach(SaferCreateLevel, {onLeave: function (args) {send("SaferCreateLevel");}});

var SaferGetLevelInformation = Module.findExportByName("advapi32.dll", "SaferGetLevelInformation")
Interceptor.attach(SaferGetLevelInformation, {onLeave: function (args) {send("SaferGetLevelInformation");}});

var SaferGetPolicyInformation = Module.findExportByName("advapi32.dll", "SaferGetPolicyInformation")
Interceptor.attach(SaferGetPolicyInformation, {onLeave: function (args) {send("SaferGetPolicyInformation");}});

var SaferIdentifyLevel = Module.findExportByName("advapi32.dll", "SaferIdentifyLevel")
Interceptor.attach(SaferIdentifyLevel, {onLeave: function (args) {send("SaferIdentifyLevel");}});

var SaferRecordEventLogEntry = Module.findExportByName("advapi32.dll", "SaferRecordEventLogEntry")
Interceptor.attach(SaferRecordEventLogEntry, {onLeave: function (args) {send("SaferRecordEventLogEntry");}});

var SaferSetLevelInformation = Module.findExportByName("advapi32.dll", "SaferSetLevelInformation")
Interceptor.attach(SaferSetLevelInformation, {onLeave: function (args) {send("SaferSetLevelInformation");}});

var SaferSetPolicyInformation = Module.findExportByName("advapi32.dll", "SaferSetPolicyInformation")
Interceptor.attach(SaferSetPolicyInformation, {onLeave: function (args) {send("SaferSetPolicyInformation");}});

var SaferiChangeRegistryScope = Module.findExportByName("advapi32.dll", "SaferiChangeRegistryScope")
Interceptor.attach(SaferiChangeRegistryScope, {onLeave: function (args) {send("SaferiChangeRegistryScope");}});

var SaferiCompareTokenLevels = Module.findExportByName("advapi32.dll", "SaferiCompareTokenLevels")
Interceptor.attach(SaferiCompareTokenLevels, {onLeave: function (args) {send("SaferiCompareTokenLevels");}});

var SaferiIsDllAllowed = Module.findExportByName("advapi32.dll", "SaferiIsDllAllowed")
Interceptor.attach(SaferiIsDllAllowed, {onLeave: function (args) {send("SaferiIsDllAllowed");}});

var SaferiIsExecutableFileType = Module.findExportByName("advapi32.dll", "SaferiIsExecutableFileType")
Interceptor.attach(SaferiIsExecutableFileType, {onLeave: function (args) {send("SaferiIsExecutableFileType");}});

var SaferiPopulateDefaultsInRegistry = Module.findExportByName("advapi32.dll", "SaferiPopulateDefaultsInRegistry")
Interceptor.attach(SaferiPopulateDefaultsInRegistry, {onLeave: function (args) {send("SaferiPopulateDefaultsInRegistry");}});

var SaferiRecordEventLogEntry = Module.findExportByName("advapi32.dll", "SaferiRecordEventLogEntry")
Interceptor.attach(SaferiRecordEventLogEntry, {onLeave: function (args) {send("SaferiRecordEventLogEntry");}});

var SaferiSearchMatchingHashRules = Module.findExportByName("advapi32.dll", "SaferiSearchMatchingHashRules")
Interceptor.attach(SaferiSearchMatchingHashRules, {onLeave: function (args) {send("SaferiSearchMatchingHashRules");}});

var SetAclInformation = Module.findExportByName("advapi32.dll", "SetAclInformation")
Interceptor.attach(SetAclInformation, {onLeave: function (args) {send("SetAclInformation");}});

var SetEncryptedFileMetadata = Module.findExportByName("advapi32.dll", "SetEncryptedFileMetadata")
Interceptor.attach(SetEncryptedFileMetadata, {onLeave: function (args) {send("SetEncryptedFileMetadata");}});

var SetEntriesInAccessListA = Module.findExportByName("advapi32.dll", "SetEntriesInAccessListA")
Interceptor.attach(SetEntriesInAccessListA, {onLeave: function (args) {send("SetEntriesInAccessListA");}});

var SetEntriesInAccessListW = Module.findExportByName("advapi32.dll", "SetEntriesInAccessListW")
Interceptor.attach(SetEntriesInAccessListW, {onLeave: function (args) {send("SetEntriesInAccessListW");}});

var SetEntriesInAclA = Module.findExportByName("advapi32.dll", "SetEntriesInAclA")
Interceptor.attach(SetEntriesInAclA, {onLeave: function (args) {send("SetEntriesInAclA");}});

var SetEntriesInAclW = Module.findExportByName("advapi32.dll", "SetEntriesInAclW")
Interceptor.attach(SetEntriesInAclW, {onLeave: function (args) {send("SetEntriesInAclW");}});

var SetEntriesInAuditListA = Module.findExportByName("advapi32.dll", "SetEntriesInAuditListA")
Interceptor.attach(SetEntriesInAuditListA, {onLeave: function (args) {send("SetEntriesInAuditListA");}});

var SetEntriesInAuditListW = Module.findExportByName("advapi32.dll", "SetEntriesInAuditListW")
Interceptor.attach(SetEntriesInAuditListW, {onLeave: function (args) {send("SetEntriesInAuditListW");}});

var SetFileSecurityA = Module.findExportByName("advapi32.dll", "SetFileSecurityA")
Interceptor.attach(SetFileSecurityA, {onLeave: function (args) {send("SetFileSecurityA");}});

var SetFileSecurityW = Module.findExportByName("advapi32.dll", "SetFileSecurityW")
Interceptor.attach(SetFileSecurityW, {onLeave: function (args) {send("SetFileSecurityW");}});

var SetInformationCodeAuthzLevelW = Module.findExportByName("advapi32.dll", "SetInformationCodeAuthzLevelW")
Interceptor.attach(SetInformationCodeAuthzLevelW, {onLeave: function (args) {send("SetInformationCodeAuthzLevelW");}});

var SetInformationCodeAuthzPolicyW = Module.findExportByName("advapi32.dll", "SetInformationCodeAuthzPolicyW")
Interceptor.attach(SetInformationCodeAuthzPolicyW, {onLeave: function (args) {send("SetInformationCodeAuthzPolicyW");}});

var SetKernelObjectSecurity = Module.findExportByName("advapi32.dll", "SetKernelObjectSecurity")
Interceptor.attach(SetKernelObjectSecurity, {onLeave: function (args) {send("SetKernelObjectSecurity");}});

var SetNamedSecurityInfoA = Module.findExportByName("advapi32.dll", "SetNamedSecurityInfoA")
Interceptor.attach(SetNamedSecurityInfoA, {onLeave: function (args) {send("SetNamedSecurityInfoA");}});

var SetNamedSecurityInfoExA = Module.findExportByName("advapi32.dll", "SetNamedSecurityInfoExA")
Interceptor.attach(SetNamedSecurityInfoExA, {onLeave: function (args) {send("SetNamedSecurityInfoExA");}});

var SetNamedSecurityInfoExW = Module.findExportByName("advapi32.dll", "SetNamedSecurityInfoExW")
Interceptor.attach(SetNamedSecurityInfoExW, {onLeave: function (args) {send("SetNamedSecurityInfoExW");}});

var SetNamedSecurityInfoW = Module.findExportByName("advapi32.dll", "SetNamedSecurityInfoW")
Interceptor.attach(SetNamedSecurityInfoW, {onLeave: function (args) {send("SetNamedSecurityInfoW");}});

var SetPrivateObjectSecurity = Module.findExportByName("advapi32.dll", "SetPrivateObjectSecurity")
Interceptor.attach(SetPrivateObjectSecurity, {onLeave: function (args) {send("SetPrivateObjectSecurity");}});

var SetPrivateObjectSecurityEx = Module.findExportByName("advapi32.dll", "SetPrivateObjectSecurityEx")
Interceptor.attach(SetPrivateObjectSecurityEx, {onLeave: function (args) {send("SetPrivateObjectSecurityEx");}});

var SetSecurityAccessMask = Module.findExportByName("advapi32.dll", "SetSecurityAccessMask")
Interceptor.attach(SetSecurityAccessMask, {onLeave: function (args) {send("SetSecurityAccessMask");}});

var SetSecurityDescriptorControl = Module.findExportByName("advapi32.dll", "SetSecurityDescriptorControl")
Interceptor.attach(SetSecurityDescriptorControl, {onLeave: function (args) {send("SetSecurityDescriptorControl");}});

var SetSecurityDescriptorDacl = Module.findExportByName("advapi32.dll", "SetSecurityDescriptorDacl")
Interceptor.attach(SetSecurityDescriptorDacl, {onLeave: function (args) {send("SetSecurityDescriptorDacl");}});

var SetSecurityDescriptorGroup = Module.findExportByName("advapi32.dll", "SetSecurityDescriptorGroup")
Interceptor.attach(SetSecurityDescriptorGroup, {onLeave: function (args) {send("SetSecurityDescriptorGroup");}});

var SetSecurityDescriptorOwner = Module.findExportByName("advapi32.dll", "SetSecurityDescriptorOwner")
Interceptor.attach(SetSecurityDescriptorOwner, {onLeave: function (args) {send("SetSecurityDescriptorOwner");}});

var SetSecurityDescriptorRMControl = Module.findExportByName("advapi32.dll", "SetSecurityDescriptorRMControl")
Interceptor.attach(SetSecurityDescriptorRMControl, {onLeave: function (args) {send("SetSecurityDescriptorRMControl");}});

var SetSecurityDescriptorSacl = Module.findExportByName("advapi32.dll", "SetSecurityDescriptorSacl")
Interceptor.attach(SetSecurityDescriptorSacl, {onLeave: function (args) {send("SetSecurityDescriptorSacl");}});

var SetSecurityInfo = Module.findExportByName("advapi32.dll", "SetSecurityInfo")
Interceptor.attach(SetSecurityInfo, {onLeave: function (args) {send("SetSecurityInfo");}});

var SetSecurityInfoExA = Module.findExportByName("advapi32.dll", "SetSecurityInfoExA")
Interceptor.attach(SetSecurityInfoExA, {onLeave: function (args) {send("SetSecurityInfoExA");}});

var SetSecurityInfoExW = Module.findExportByName("advapi32.dll", "SetSecurityInfoExW")
Interceptor.attach(SetSecurityInfoExW, {onLeave: function (args) {send("SetSecurityInfoExW");}});

var SetServiceBits = Module.findExportByName("advapi32.dll", "SetServiceBits")
Interceptor.attach(SetServiceBits, {onLeave: function (args) {send("SetServiceBits");}});

var SetServiceObjectSecurity = Module.findExportByName("advapi32.dll", "SetServiceObjectSecurity")
Interceptor.attach(SetServiceObjectSecurity, {onLeave: function (args) {send("SetServiceObjectSecurity");}});

var SetServiceStatus = Module.findExportByName("advapi32.dll", "SetServiceStatus")
Interceptor.attach(SetServiceStatus, {onLeave: function (args) {send("SetServiceStatus");}});

var SetThreadToken = Module.findExportByName("advapi32.dll", "SetThreadToken")
Interceptor.attach(SetThreadToken, {onLeave: function (args) {send("SetThreadToken");}});

var SetTokenInformation = Module.findExportByName("advapi32.dll", "SetTokenInformation")
Interceptor.attach(SetTokenInformation, {onLeave: function (args) {send("SetTokenInformation");}});

var SetTraceCallback = Module.findExportByName("advapi32.dll", "SetTraceCallback")
Interceptor.attach(SetTraceCallback, {onLeave: function (args) {send("SetTraceCallback");}});

var SetUserFileEncryptionKey = Module.findExportByName("advapi32.dll", "SetUserFileEncryptionKey")
Interceptor.attach(SetUserFileEncryptionKey, {onLeave: function (args) {send("SetUserFileEncryptionKey");}});

var SetUserFileEncryptionKeyEx = Module.findExportByName("advapi32.dll", "SetUserFileEncryptionKeyEx")
Interceptor.attach(SetUserFileEncryptionKeyEx, {onLeave: function (args) {send("SetUserFileEncryptionKeyEx");}});

var StartServiceA = Module.findExportByName("advapi32.dll", "StartServiceA")
Interceptor.attach(StartServiceA, {onLeave: function (args) {send("StartServiceA");}});

var StartServiceCtrlDispatcherA = Module.findExportByName("advapi32.dll", "StartServiceCtrlDispatcherA")
Interceptor.attach(StartServiceCtrlDispatcherA, {onLeave: function (args) {send("StartServiceCtrlDispatcherA");}});

var StartServiceCtrlDispatcherW = Module.findExportByName("advapi32.dll", "StartServiceCtrlDispatcherW")
Interceptor.attach(StartServiceCtrlDispatcherW, {onLeave: function (args) {send("StartServiceCtrlDispatcherW");}});

var StartServiceW = Module.findExportByName("advapi32.dll", "StartServiceW")
Interceptor.attach(StartServiceW, {onLeave: function (args) {send("StartServiceW");}});

var StartTraceA = Module.findExportByName("advapi32.dll", "StartTraceA")
Interceptor.attach(StartTraceA, {onLeave: function (args) {send("StartTraceA");}});

var StartTraceW = Module.findExportByName("advapi32.dll", "StartTraceW")
Interceptor.attach(StartTraceW, {onLeave: function (args) {send("StartTraceW");}});

var StopTraceA = Module.findExportByName("advapi32.dll", "StopTraceA")
Interceptor.attach(StopTraceA, {onLeave: function (args) {send("StopTraceA");}});

var StopTraceW = Module.findExportByName("advapi32.dll", "StopTraceW")
Interceptor.attach(StopTraceW, {onLeave: function (args) {send("StopTraceW");}});

var SystemFunction001 = Module.findExportByName("advapi32.dll", "SystemFunction001")
Interceptor.attach(SystemFunction001, {onLeave: function (args) {send("SystemFunction001");}});

var SystemFunction002 = Module.findExportByName("advapi32.dll", "SystemFunction002")
Interceptor.attach(SystemFunction002, {onLeave: function (args) {send("SystemFunction002");}});

var SystemFunction003 = Module.findExportByName("advapi32.dll", "SystemFunction003")
Interceptor.attach(SystemFunction003, {onLeave: function (args) {send("SystemFunction003");}});

var SystemFunction004 = Module.findExportByName("advapi32.dll", "SystemFunction004")
Interceptor.attach(SystemFunction004, {onLeave: function (args) {send("SystemFunction004");}});

var SystemFunction005 = Module.findExportByName("advapi32.dll", "SystemFunction005")
Interceptor.attach(SystemFunction005, {onLeave: function (args) {send("SystemFunction005");}});

var SystemFunction006 = Module.findExportByName("advapi32.dll", "SystemFunction006")
Interceptor.attach(SystemFunction006, {onLeave: function (args) {send("SystemFunction006");}});

var SystemFunction007 = Module.findExportByName("advapi32.dll", "SystemFunction007")
Interceptor.attach(SystemFunction007, {onLeave: function (args) {send("SystemFunction007");}});

var SystemFunction008 = Module.findExportByName("advapi32.dll", "SystemFunction008")
Interceptor.attach(SystemFunction008, {onLeave: function (args) {send("SystemFunction008");}});

var SystemFunction009 = Module.findExportByName("advapi32.dll", "SystemFunction009")
Interceptor.attach(SystemFunction009, {onLeave: function (args) {send("SystemFunction009");}});

var SystemFunction010 = Module.findExportByName("advapi32.dll", "SystemFunction010")
Interceptor.attach(SystemFunction010, {onLeave: function (args) {send("SystemFunction010");}});

var SystemFunction011 = Module.findExportByName("advapi32.dll", "SystemFunction011")
Interceptor.attach(SystemFunction011, {onLeave: function (args) {send("SystemFunction011");}});

var SystemFunction012 = Module.findExportByName("advapi32.dll", "SystemFunction012")
Interceptor.attach(SystemFunction012, {onLeave: function (args) {send("SystemFunction012");}});

var SystemFunction013 = Module.findExportByName("advapi32.dll", "SystemFunction013")
Interceptor.attach(SystemFunction013, {onLeave: function (args) {send("SystemFunction013");}});

var SystemFunction014 = Module.findExportByName("advapi32.dll", "SystemFunction014")
Interceptor.attach(SystemFunction014, {onLeave: function (args) {send("SystemFunction014");}});

var SystemFunction015 = Module.findExportByName("advapi32.dll", "SystemFunction015")
Interceptor.attach(SystemFunction015, {onLeave: function (args) {send("SystemFunction015");}});

var SystemFunction016 = Module.findExportByName("advapi32.dll", "SystemFunction016")
Interceptor.attach(SystemFunction016, {onLeave: function (args) {send("SystemFunction016");}});

var SystemFunction017 = Module.findExportByName("advapi32.dll", "SystemFunction017")
Interceptor.attach(SystemFunction017, {onLeave: function (args) {send("SystemFunction017");}});

var SystemFunction018 = Module.findExportByName("advapi32.dll", "SystemFunction018")
Interceptor.attach(SystemFunction018, {onLeave: function (args) {send("SystemFunction018");}});

var SystemFunction019 = Module.findExportByName("advapi32.dll", "SystemFunction019")
Interceptor.attach(SystemFunction019, {onLeave: function (args) {send("SystemFunction019");}});

var SystemFunction020 = Module.findExportByName("advapi32.dll", "SystemFunction020")
Interceptor.attach(SystemFunction020, {onLeave: function (args) {send("SystemFunction020");}});

var SystemFunction021 = Module.findExportByName("advapi32.dll", "SystemFunction021")
Interceptor.attach(SystemFunction021, {onLeave: function (args) {send("SystemFunction021");}});

var SystemFunction022 = Module.findExportByName("advapi32.dll", "SystemFunction022")
Interceptor.attach(SystemFunction022, {onLeave: function (args) {send("SystemFunction022");}});

var SystemFunction023 = Module.findExportByName("advapi32.dll", "SystemFunction023")
Interceptor.attach(SystemFunction023, {onLeave: function (args) {send("SystemFunction023");}});

var SystemFunction024 = Module.findExportByName("advapi32.dll", "SystemFunction024")
Interceptor.attach(SystemFunction024, {onLeave: function (args) {send("SystemFunction024");}});

var SystemFunction025 = Module.findExportByName("advapi32.dll", "SystemFunction025")
Interceptor.attach(SystemFunction025, {onLeave: function (args) {send("SystemFunction025");}});

var SystemFunction026 = Module.findExportByName("advapi32.dll", "SystemFunction026")
Interceptor.attach(SystemFunction026, {onLeave: function (args) {send("SystemFunction026");}});

var SystemFunction027 = Module.findExportByName("advapi32.dll", "SystemFunction027")
Interceptor.attach(SystemFunction027, {onLeave: function (args) {send("SystemFunction027");}});

var SystemFunction028 = Module.findExportByName("advapi32.dll", "SystemFunction028")
Interceptor.attach(SystemFunction028, {onLeave: function (args) {send("SystemFunction028");}});

var SystemFunction029 = Module.findExportByName("advapi32.dll", "SystemFunction029")
Interceptor.attach(SystemFunction029, {onLeave: function (args) {send("SystemFunction029");}});

var SystemFunction030 = Module.findExportByName("advapi32.dll", "SystemFunction030")
Interceptor.attach(SystemFunction030, {onLeave: function (args) {send("SystemFunction030");}});

var SystemFunction031 = Module.findExportByName("advapi32.dll", "SystemFunction031")
Interceptor.attach(SystemFunction031, {onLeave: function (args) {send("SystemFunction031");}});

var SystemFunction032 = Module.findExportByName("advapi32.dll", "SystemFunction032")
Interceptor.attach(SystemFunction032, {onLeave: function (args) {send("SystemFunction032");}});

var SystemFunction033 = Module.findExportByName("advapi32.dll", "SystemFunction033")
Interceptor.attach(SystemFunction033, {onLeave: function (args) {send("SystemFunction033");}});

var SystemFunction034 = Module.findExportByName("advapi32.dll", "SystemFunction034")
Interceptor.attach(SystemFunction034, {onLeave: function (args) {send("SystemFunction034");}});

var SystemFunction035 = Module.findExportByName("advapi32.dll", "SystemFunction035")
Interceptor.attach(SystemFunction035, {onLeave: function (args) {send("SystemFunction035");}});

var SystemFunction036 = Module.findExportByName("advapi32.dll", "SystemFunction036")
Interceptor.attach(SystemFunction036, {onLeave: function (args) {send("SystemFunction036");}});

var SystemFunction040 = Module.findExportByName("advapi32.dll", "SystemFunction040")
Interceptor.attach(SystemFunction040, {onLeave: function (args) {send("SystemFunction040");}});

var SystemFunction041 = Module.findExportByName("advapi32.dll", "SystemFunction041")
Interceptor.attach(SystemFunction041, {onLeave: function (args) {send("SystemFunction041");}});

var TraceEvent = Module.findExportByName("advapi32.dll", "TraceEvent")
Interceptor.attach(TraceEvent, {onLeave: function (args) {send("TraceEvent");}});

var TraceEventInstance = Module.findExportByName("advapi32.dll", "TraceEventInstance")
Interceptor.attach(TraceEventInstance, {onLeave: function (args) {send("TraceEventInstance");}});

var TraceMessage = Module.findExportByName("advapi32.dll", "TraceMessage")
Interceptor.attach(TraceMessage, {onLeave: function (args) {send("TraceMessage");}});

var TraceMessageVa = Module.findExportByName("advapi32.dll", "TraceMessageVa")
Interceptor.attach(TraceMessageVa, {onLeave: function (args) {send("TraceMessageVa");}});

var TraceQueryInformation = Module.findExportByName("advapi32.dll", "TraceQueryInformation")
Interceptor.attach(TraceQueryInformation, {onLeave: function (args) {send("TraceQueryInformation");}});

var TraceSetInformation = Module.findExportByName("advapi32.dll", "TraceSetInformation")
Interceptor.attach(TraceSetInformation, {onLeave: function (args) {send("TraceSetInformation");}});

var TreeResetNamedSecurityInfoA = Module.findExportByName("advapi32.dll", "TreeResetNamedSecurityInfoA")
Interceptor.attach(TreeResetNamedSecurityInfoA, {onLeave: function (args) {send("TreeResetNamedSecurityInfoA");}});

var TreeResetNamedSecurityInfoW = Module.findExportByName("advapi32.dll", "TreeResetNamedSecurityInfoW")
Interceptor.attach(TreeResetNamedSecurityInfoW, {onLeave: function (args) {send("TreeResetNamedSecurityInfoW");}});

var TreeSetNamedSecurityInfoA = Module.findExportByName("advapi32.dll", "TreeSetNamedSecurityInfoA")
Interceptor.attach(TreeSetNamedSecurityInfoA, {onLeave: function (args) {send("TreeSetNamedSecurityInfoA");}});

var TreeSetNamedSecurityInfoW = Module.findExportByName("advapi32.dll", "TreeSetNamedSecurityInfoW")
Interceptor.attach(TreeSetNamedSecurityInfoW, {onLeave: function (args) {send("TreeSetNamedSecurityInfoW");}});

var TrusteeAccessToObjectA = Module.findExportByName("advapi32.dll", "TrusteeAccessToObjectA")
Interceptor.attach(TrusteeAccessToObjectA, {onLeave: function (args) {send("TrusteeAccessToObjectA");}});

var TrusteeAccessToObjectW = Module.findExportByName("advapi32.dll", "TrusteeAccessToObjectW")
Interceptor.attach(TrusteeAccessToObjectW, {onLeave: function (args) {send("TrusteeAccessToObjectW");}});

var UninstallApplication = Module.findExportByName("advapi32.dll", "UninstallApplication")
Interceptor.attach(UninstallApplication, {onLeave: function (args) {send("UninstallApplication");}});

var UnlockServiceDatabase = Module.findExportByName("advapi32.dll", "UnlockServiceDatabase")
Interceptor.attach(UnlockServiceDatabase, {onLeave: function (args) {send("UnlockServiceDatabase");}});

var UnregisterIdleTask = Module.findExportByName("advapi32.dll", "UnregisterIdleTask")
Interceptor.attach(UnregisterIdleTask, {onLeave: function (args) {send("UnregisterIdleTask");}});

var UnregisterTraceGuids = Module.findExportByName("advapi32.dll", "UnregisterTraceGuids")
Interceptor.attach(UnregisterTraceGuids, {onLeave: function (args) {send("UnregisterTraceGuids");}});

var UpdateTraceA = Module.findExportByName("advapi32.dll", "UpdateTraceA")
Interceptor.attach(UpdateTraceA, {onLeave: function (args) {send("UpdateTraceA");}});

var UpdateTraceW = Module.findExportByName("advapi32.dll", "UpdateTraceW")
Interceptor.attach(UpdateTraceW, {onLeave: function (args) {send("UpdateTraceW");}});

var UsePinForEncryptedFilesA = Module.findExportByName("advapi32.dll", "UsePinForEncryptedFilesA")
Interceptor.attach(UsePinForEncryptedFilesA, {onLeave: function (args) {send("UsePinForEncryptedFilesA");}});

var UsePinForEncryptedFilesW = Module.findExportByName("advapi32.dll", "UsePinForEncryptedFilesW")
Interceptor.attach(UsePinForEncryptedFilesW, {onLeave: function (args) {send("UsePinForEncryptedFilesW");}});

var WaitServiceState = Module.findExportByName("advapi32.dll", "WaitServiceState")
Interceptor.attach(WaitServiceState, {onLeave: function (args) {send("WaitServiceState");}});

var WmiCloseBlock = Module.findExportByName("advapi32.dll", "WmiCloseBlock")
Interceptor.attach(WmiCloseBlock, {onLeave: function (args) {send("WmiCloseBlock");}});

var WmiDevInstToInstanceNameA = Module.findExportByName("advapi32.dll", "WmiDevInstToInstanceNameA")
Interceptor.attach(WmiDevInstToInstanceNameA, {onLeave: function (args) {send("WmiDevInstToInstanceNameA");}});

var WmiDevInstToInstanceNameW = Module.findExportByName("advapi32.dll", "WmiDevInstToInstanceNameW")
Interceptor.attach(WmiDevInstToInstanceNameW, {onLeave: function (args) {send("WmiDevInstToInstanceNameW");}});

var WmiEnumerateGuids = Module.findExportByName("advapi32.dll", "WmiEnumerateGuids")
Interceptor.attach(WmiEnumerateGuids, {onLeave: function (args) {send("WmiEnumerateGuids");}});

var WmiExecuteMethodA = Module.findExportByName("advapi32.dll", "WmiExecuteMethodA")
Interceptor.attach(WmiExecuteMethodA, {onLeave: function (args) {send("WmiExecuteMethodA");}});

var WmiExecuteMethodW = Module.findExportByName("advapi32.dll", "WmiExecuteMethodW")
Interceptor.attach(WmiExecuteMethodW, {onLeave: function (args) {send("WmiExecuteMethodW");}});

var WmiFileHandleToInstanceNameA = Module.findExportByName("advapi32.dll", "WmiFileHandleToInstanceNameA")
Interceptor.attach(WmiFileHandleToInstanceNameA, {onLeave: function (args) {send("WmiFileHandleToInstanceNameA");}});

var WmiFileHandleToInstanceNameW = Module.findExportByName("advapi32.dll", "WmiFileHandleToInstanceNameW")
Interceptor.attach(WmiFileHandleToInstanceNameW, {onLeave: function (args) {send("WmiFileHandleToInstanceNameW");}});

var WmiFreeBuffer = Module.findExportByName("advapi32.dll", "WmiFreeBuffer")
Interceptor.attach(WmiFreeBuffer, {onLeave: function (args) {send("WmiFreeBuffer");}});

var WmiMofEnumerateResourcesA = Module.findExportByName("advapi32.dll", "WmiMofEnumerateResourcesA")
Interceptor.attach(WmiMofEnumerateResourcesA, {onLeave: function (args) {send("WmiMofEnumerateResourcesA");}});

var WmiMofEnumerateResourcesW = Module.findExportByName("advapi32.dll", "WmiMofEnumerateResourcesW")
Interceptor.attach(WmiMofEnumerateResourcesW, {onLeave: function (args) {send("WmiMofEnumerateResourcesW");}});

var WmiNotificationRegistrationA = Module.findExportByName("advapi32.dll", "WmiNotificationRegistrationA")
Interceptor.attach(WmiNotificationRegistrationA, {onLeave: function (args) {send("WmiNotificationRegistrationA");}});

var WmiNotificationRegistrationW = Module.findExportByName("advapi32.dll", "WmiNotificationRegistrationW")
Interceptor.attach(WmiNotificationRegistrationW, {onLeave: function (args) {send("WmiNotificationRegistrationW");}});

var WmiOpenBlock = Module.findExportByName("advapi32.dll", "WmiOpenBlock")
Interceptor.attach(WmiOpenBlock, {onLeave: function (args) {send("WmiOpenBlock");}});

var WmiQueryAllDataA = Module.findExportByName("advapi32.dll", "WmiQueryAllDataA")
Interceptor.attach(WmiQueryAllDataA, {onLeave: function (args) {send("WmiQueryAllDataA");}});

var WmiQueryAllDataMultipleA = Module.findExportByName("advapi32.dll", "WmiQueryAllDataMultipleA")
Interceptor.attach(WmiQueryAllDataMultipleA, {onLeave: function (args) {send("WmiQueryAllDataMultipleA");}});

var WmiQueryAllDataMultipleW = Module.findExportByName("advapi32.dll", "WmiQueryAllDataMultipleW")
Interceptor.attach(WmiQueryAllDataMultipleW, {onLeave: function (args) {send("WmiQueryAllDataMultipleW");}});

var WmiQueryAllDataW = Module.findExportByName("advapi32.dll", "WmiQueryAllDataW")
Interceptor.attach(WmiQueryAllDataW, {onLeave: function (args) {send("WmiQueryAllDataW");}});

var WmiQueryGuidInformation = Module.findExportByName("advapi32.dll", "WmiQueryGuidInformation")
Interceptor.attach(WmiQueryGuidInformation, {onLeave: function (args) {send("WmiQueryGuidInformation");}});

var WmiQuerySingleInstanceA = Module.findExportByName("advapi32.dll", "WmiQuerySingleInstanceA")
Interceptor.attach(WmiQuerySingleInstanceA, {onLeave: function (args) {send("WmiQuerySingleInstanceA");}});

var WmiQuerySingleInstanceMultipleA = Module.findExportByName("advapi32.dll", "WmiQuerySingleInstanceMultipleA")
Interceptor.attach(WmiQuerySingleInstanceMultipleA, {onLeave: function (args) {send("WmiQuerySingleInstanceMultipleA");}});

var WmiQuerySingleInstanceMultipleW = Module.findExportByName("advapi32.dll", "WmiQuerySingleInstanceMultipleW")
Interceptor.attach(WmiQuerySingleInstanceMultipleW, {onLeave: function (args) {send("WmiQuerySingleInstanceMultipleW");}});

var WmiQuerySingleInstanceW = Module.findExportByName("advapi32.dll", "WmiQuerySingleInstanceW")
Interceptor.attach(WmiQuerySingleInstanceW, {onLeave: function (args) {send("WmiQuerySingleInstanceW");}});

var WmiReceiveNotificationsA = Module.findExportByName("advapi32.dll", "WmiReceiveNotificationsA")
Interceptor.attach(WmiReceiveNotificationsA, {onLeave: function (args) {send("WmiReceiveNotificationsA");}});

var WmiReceiveNotificationsW = Module.findExportByName("advapi32.dll", "WmiReceiveNotificationsW")
Interceptor.attach(WmiReceiveNotificationsW, {onLeave: function (args) {send("WmiReceiveNotificationsW");}});

var WmiSetSingleInstanceA = Module.findExportByName("advapi32.dll", "WmiSetSingleInstanceA")
Interceptor.attach(WmiSetSingleInstanceA, {onLeave: function (args) {send("WmiSetSingleInstanceA");}});

var WmiSetSingleInstanceW = Module.findExportByName("advapi32.dll", "WmiSetSingleInstanceW")
Interceptor.attach(WmiSetSingleInstanceW, {onLeave: function (args) {send("WmiSetSingleInstanceW");}});

var WmiSetSingleItemA = Module.findExportByName("advapi32.dll", "WmiSetSingleItemA")
Interceptor.attach(WmiSetSingleItemA, {onLeave: function (args) {send("WmiSetSingleItemA");}});

var WmiSetSingleItemW = Module.findExportByName("advapi32.dll", "WmiSetSingleItemW")
Interceptor.attach(WmiSetSingleItemW, {onLeave: function (args) {send("WmiSetSingleItemW");}});

var WriteEncryptedFileRaw = Module.findExportByName("advapi32.dll", "WriteEncryptedFileRaw")
Interceptor.attach(WriteEncryptedFileRaw, {onLeave: function (args) {send("WriteEncryptedFileRaw");}});

