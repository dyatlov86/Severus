var DhcpAddFilterV4 = Module.findExportByName("dhcpsapi.dll", "DhcpAddFilterV4")
Interceptor.attach(DhcpAddFilterV4, {onLeave: function (args) {send("DhcpAddFilterV4");}});

var DhcpAddMScopeElement = Module.findExportByName("dhcpsapi.dll", "DhcpAddMScopeElement")
Interceptor.attach(DhcpAddMScopeElement, {onLeave: function (args) {send("DhcpAddMScopeElement");}});

var DhcpAddSecurityGroup = Module.findExportByName("dhcpsapi.dll", "DhcpAddSecurityGroup")
Interceptor.attach(DhcpAddSecurityGroup, {onLeave: function (args) {send("DhcpAddSecurityGroup");}});

var DhcpAddServer = Module.findExportByName("dhcpsapi.dll", "DhcpAddServer")
Interceptor.attach(DhcpAddServer, {onLeave: function (args) {send("DhcpAddServer");}});

var DhcpAddSubnetElement = Module.findExportByName("dhcpsapi.dll", "DhcpAddSubnetElement")
Interceptor.attach(DhcpAddSubnetElement, {onLeave: function (args) {send("DhcpAddSubnetElement");}});

var DhcpAddSubnetElementV4 = Module.findExportByName("dhcpsapi.dll", "DhcpAddSubnetElementV4")
Interceptor.attach(DhcpAddSubnetElementV4, {onLeave: function (args) {send("DhcpAddSubnetElementV4");}});

var DhcpAddSubnetElementV5 = Module.findExportByName("dhcpsapi.dll", "DhcpAddSubnetElementV5")
Interceptor.attach(DhcpAddSubnetElementV5, {onLeave: function (args) {send("DhcpAddSubnetElementV5");}});

var DhcpAddSubnetElementV6 = Module.findExportByName("dhcpsapi.dll", "DhcpAddSubnetElementV6")
Interceptor.attach(DhcpAddSubnetElementV6, {onLeave: function (args) {send("DhcpAddSubnetElementV6");}});

var DhcpAuditLogGetParams = Module.findExportByName("dhcpsapi.dll", "DhcpAuditLogGetParams")
Interceptor.attach(DhcpAuditLogGetParams, {onLeave: function (args) {send("DhcpAuditLogGetParams");}});

var DhcpAuditLogSetParams = Module.findExportByName("dhcpsapi.dll", "DhcpAuditLogSetParams")
Interceptor.attach(DhcpAuditLogSetParams, {onLeave: function (args) {send("DhcpAuditLogSetParams");}});

var DhcpCreateClass = Module.findExportByName("dhcpsapi.dll", "DhcpCreateClass")
Interceptor.attach(DhcpCreateClass, {onLeave: function (args) {send("DhcpCreateClass");}});

var DhcpCreateClassV6 = Module.findExportByName("dhcpsapi.dll", "DhcpCreateClassV6")
Interceptor.attach(DhcpCreateClassV6, {onLeave: function (args) {send("DhcpCreateClassV6");}});

var DhcpCreateClientInfo = Module.findExportByName("dhcpsapi.dll", "DhcpCreateClientInfo")
Interceptor.attach(DhcpCreateClientInfo, {onLeave: function (args) {send("DhcpCreateClientInfo");}});

var DhcpCreateClientInfoV4 = Module.findExportByName("dhcpsapi.dll", "DhcpCreateClientInfoV4")
Interceptor.attach(DhcpCreateClientInfoV4, {onLeave: function (args) {send("DhcpCreateClientInfoV4");}});

var DhcpCreateClientInfoVQ = Module.findExportByName("dhcpsapi.dll", "DhcpCreateClientInfoVQ")
Interceptor.attach(DhcpCreateClientInfoVQ, {onLeave: function (args) {send("DhcpCreateClientInfoVQ");}});

var DhcpCreateOption = Module.findExportByName("dhcpsapi.dll", "DhcpCreateOption")
Interceptor.attach(DhcpCreateOption, {onLeave: function (args) {send("DhcpCreateOption");}});

var DhcpCreateOptionV5 = Module.findExportByName("dhcpsapi.dll", "DhcpCreateOptionV5")
Interceptor.attach(DhcpCreateOptionV5, {onLeave: function (args) {send("DhcpCreateOptionV5");}});

var DhcpCreateOptionV6 = Module.findExportByName("dhcpsapi.dll", "DhcpCreateOptionV6")
Interceptor.attach(DhcpCreateOptionV6, {onLeave: function (args) {send("DhcpCreateOptionV6");}});

var DhcpCreateSubnet = Module.findExportByName("dhcpsapi.dll", "DhcpCreateSubnet")
Interceptor.attach(DhcpCreateSubnet, {onLeave: function (args) {send("DhcpCreateSubnet");}});

var DhcpCreateSubnetV6 = Module.findExportByName("dhcpsapi.dll", "DhcpCreateSubnetV6")
Interceptor.attach(DhcpCreateSubnetV6, {onLeave: function (args) {send("DhcpCreateSubnetV6");}});

var DhcpCreateSubnetVQ = Module.findExportByName("dhcpsapi.dll", "DhcpCreateSubnetVQ")
Interceptor.attach(DhcpCreateSubnetVQ, {onLeave: function (args) {send("DhcpCreateSubnetVQ");}});

var DhcpDeleteClass = Module.findExportByName("dhcpsapi.dll", "DhcpDeleteClass")
Interceptor.attach(DhcpDeleteClass, {onLeave: function (args) {send("DhcpDeleteClass");}});

var DhcpDeleteClassV6 = Module.findExportByName("dhcpsapi.dll", "DhcpDeleteClassV6")
Interceptor.attach(DhcpDeleteClassV6, {onLeave: function (args) {send("DhcpDeleteClassV6");}});

var DhcpDeleteClientInfo = Module.findExportByName("dhcpsapi.dll", "DhcpDeleteClientInfo")
Interceptor.attach(DhcpDeleteClientInfo, {onLeave: function (args) {send("DhcpDeleteClientInfo");}});

var DhcpDeleteClientInfoV6 = Module.findExportByName("dhcpsapi.dll", "DhcpDeleteClientInfoV6")
Interceptor.attach(DhcpDeleteClientInfoV6, {onLeave: function (args) {send("DhcpDeleteClientInfoV6");}});

var DhcpDeleteFilterV4 = Module.findExportByName("dhcpsapi.dll", "DhcpDeleteFilterV4")
Interceptor.attach(DhcpDeleteFilterV4, {onLeave: function (args) {send("DhcpDeleteFilterV4");}});

var DhcpDeleteMClientInfo = Module.findExportByName("dhcpsapi.dll", "DhcpDeleteMClientInfo")
Interceptor.attach(DhcpDeleteMClientInfo, {onLeave: function (args) {send("DhcpDeleteMClientInfo");}});

var DhcpDeleteMScope = Module.findExportByName("dhcpsapi.dll", "DhcpDeleteMScope")
Interceptor.attach(DhcpDeleteMScope, {onLeave: function (args) {send("DhcpDeleteMScope");}});

var DhcpDeleteServer = Module.findExportByName("dhcpsapi.dll", "DhcpDeleteServer")
Interceptor.attach(DhcpDeleteServer, {onLeave: function (args) {send("DhcpDeleteServer");}});

var DhcpDeleteSubnet = Module.findExportByName("dhcpsapi.dll", "DhcpDeleteSubnet")
Interceptor.attach(DhcpDeleteSubnet, {onLeave: function (args) {send("DhcpDeleteSubnet");}});

var DhcpDeleteSubnetV6 = Module.findExportByName("dhcpsapi.dll", "DhcpDeleteSubnetV6")
Interceptor.attach(DhcpDeleteSubnetV6, {onLeave: function (args) {send("DhcpDeleteSubnetV6");}});

var DhcpDeleteSuperScopeV4 = Module.findExportByName("dhcpsapi.dll", "DhcpDeleteSuperScopeV4")
Interceptor.attach(DhcpDeleteSuperScopeV4, {onLeave: function (args) {send("DhcpDeleteSuperScopeV4");}});

var DhcpDsCleanup = Module.findExportByName("dhcpsapi.dll", "DhcpDsCleanup")
Interceptor.attach(DhcpDsCleanup, {onLeave: function (args) {send("DhcpDsCleanup");}});

var DhcpDsClearHostServerEntries = Module.findExportByName("dhcpsapi.dll", "DhcpDsClearHostServerEntries")
Interceptor.attach(DhcpDsClearHostServerEntries, {onLeave: function (args) {send("DhcpDsClearHostServerEntries");}});

var DhcpDsInit = Module.findExportByName("dhcpsapi.dll", "DhcpDsInit")
Interceptor.attach(DhcpDsInit, {onLeave: function (args) {send("DhcpDsInit");}});

var DhcpEnumClasses = Module.findExportByName("dhcpsapi.dll", "DhcpEnumClasses")
Interceptor.attach(DhcpEnumClasses, {onLeave: function (args) {send("DhcpEnumClasses");}});

var DhcpEnumClassesV6 = Module.findExportByName("dhcpsapi.dll", "DhcpEnumClassesV6")
Interceptor.attach(DhcpEnumClassesV6, {onLeave: function (args) {send("DhcpEnumClassesV6");}});

var DhcpEnumFilterV4 = Module.findExportByName("dhcpsapi.dll", "DhcpEnumFilterV4")
Interceptor.attach(DhcpEnumFilterV4, {onLeave: function (args) {send("DhcpEnumFilterV4");}});

var DhcpEnumMScopeClients = Module.findExportByName("dhcpsapi.dll", "DhcpEnumMScopeClients")
Interceptor.attach(DhcpEnumMScopeClients, {onLeave: function (args) {send("DhcpEnumMScopeClients");}});

var DhcpEnumMScopeElements = Module.findExportByName("dhcpsapi.dll", "DhcpEnumMScopeElements")
Interceptor.attach(DhcpEnumMScopeElements, {onLeave: function (args) {send("DhcpEnumMScopeElements");}});

var DhcpEnumMScopes = Module.findExportByName("dhcpsapi.dll", "DhcpEnumMScopes")
Interceptor.attach(DhcpEnumMScopes, {onLeave: function (args) {send("DhcpEnumMScopes");}});

var DhcpEnumOptionValues = Module.findExportByName("dhcpsapi.dll", "DhcpEnumOptionValues")
Interceptor.attach(DhcpEnumOptionValues, {onLeave: function (args) {send("DhcpEnumOptionValues");}});

var DhcpEnumOptionValuesV5 = Module.findExportByName("dhcpsapi.dll", "DhcpEnumOptionValuesV5")
Interceptor.attach(DhcpEnumOptionValuesV5, {onLeave: function (args) {send("DhcpEnumOptionValuesV5");}});

var DhcpEnumOptionValuesV6 = Module.findExportByName("dhcpsapi.dll", "DhcpEnumOptionValuesV6")
Interceptor.attach(DhcpEnumOptionValuesV6, {onLeave: function (args) {send("DhcpEnumOptionValuesV6");}});

var DhcpEnumOptions = Module.findExportByName("dhcpsapi.dll", "DhcpEnumOptions")
Interceptor.attach(DhcpEnumOptions, {onLeave: function (args) {send("DhcpEnumOptions");}});

var DhcpEnumOptionsV5 = Module.findExportByName("dhcpsapi.dll", "DhcpEnumOptionsV5")
Interceptor.attach(DhcpEnumOptionsV5, {onLeave: function (args) {send("DhcpEnumOptionsV5");}});

var DhcpEnumOptionsV6 = Module.findExportByName("dhcpsapi.dll", "DhcpEnumOptionsV6")
Interceptor.attach(DhcpEnumOptionsV6, {onLeave: function (args) {send("DhcpEnumOptionsV6");}});

var DhcpEnumServers = Module.findExportByName("dhcpsapi.dll", "DhcpEnumServers")
Interceptor.attach(DhcpEnumServers, {onLeave: function (args) {send("DhcpEnumServers");}});

var DhcpEnumSubnetClients = Module.findExportByName("dhcpsapi.dll", "DhcpEnumSubnetClients")
Interceptor.attach(DhcpEnumSubnetClients, {onLeave: function (args) {send("DhcpEnumSubnetClients");}});

var DhcpEnumSubnetClientsFilterStatusInfo = Module.findExportByName("dhcpsapi.dll", "DhcpEnumSubnetClientsFilterStatusInfo")
Interceptor.attach(DhcpEnumSubnetClientsFilterStatusInfo, {onLeave: function (args) {send("DhcpEnumSubnetClientsFilterStatusInfo");}});

var DhcpEnumSubnetClientsV4 = Module.findExportByName("dhcpsapi.dll", "DhcpEnumSubnetClientsV4")
Interceptor.attach(DhcpEnumSubnetClientsV4, {onLeave: function (args) {send("DhcpEnumSubnetClientsV4");}});

var DhcpEnumSubnetClientsV5 = Module.findExportByName("dhcpsapi.dll", "DhcpEnumSubnetClientsV5")
Interceptor.attach(DhcpEnumSubnetClientsV5, {onLeave: function (args) {send("DhcpEnumSubnetClientsV5");}});

var DhcpEnumSubnetClientsV6 = Module.findExportByName("dhcpsapi.dll", "DhcpEnumSubnetClientsV6")
Interceptor.attach(DhcpEnumSubnetClientsV6, {onLeave: function (args) {send("DhcpEnumSubnetClientsV6");}});

var DhcpEnumSubnetClientsVQ = Module.findExportByName("dhcpsapi.dll", "DhcpEnumSubnetClientsVQ")
Interceptor.attach(DhcpEnumSubnetClientsVQ, {onLeave: function (args) {send("DhcpEnumSubnetClientsVQ");}});

var DhcpEnumSubnetElements = Module.findExportByName("dhcpsapi.dll", "DhcpEnumSubnetElements")
Interceptor.attach(DhcpEnumSubnetElements, {onLeave: function (args) {send("DhcpEnumSubnetElements");}});

var DhcpEnumSubnetElementsV4 = Module.findExportByName("dhcpsapi.dll", "DhcpEnumSubnetElementsV4")
Interceptor.attach(DhcpEnumSubnetElementsV4, {onLeave: function (args) {send("DhcpEnumSubnetElementsV4");}});

var DhcpEnumSubnetElementsV5 = Module.findExportByName("dhcpsapi.dll", "DhcpEnumSubnetElementsV5")
Interceptor.attach(DhcpEnumSubnetElementsV5, {onLeave: function (args) {send("DhcpEnumSubnetElementsV5");}});

var DhcpEnumSubnetElementsV6 = Module.findExportByName("dhcpsapi.dll", "DhcpEnumSubnetElementsV6")
Interceptor.attach(DhcpEnumSubnetElementsV6, {onLeave: function (args) {send("DhcpEnumSubnetElementsV6");}});

var DhcpEnumSubnets = Module.findExportByName("dhcpsapi.dll", "DhcpEnumSubnets")
Interceptor.attach(DhcpEnumSubnets, {onLeave: function (args) {send("DhcpEnumSubnets");}});

var DhcpEnumSubnetsV6 = Module.findExportByName("dhcpsapi.dll", "DhcpEnumSubnetsV6")
Interceptor.attach(DhcpEnumSubnetsV6, {onLeave: function (args) {send("DhcpEnumSubnetsV6");}});

var DhcpGetAllOptionValues = Module.findExportByName("dhcpsapi.dll", "DhcpGetAllOptionValues")
Interceptor.attach(DhcpGetAllOptionValues, {onLeave: function (args) {send("DhcpGetAllOptionValues");}});

var DhcpGetAllOptionValuesV6 = Module.findExportByName("dhcpsapi.dll", "DhcpGetAllOptionValuesV6")
Interceptor.attach(DhcpGetAllOptionValuesV6, {onLeave: function (args) {send("DhcpGetAllOptionValuesV6");}});

var DhcpGetAllOptions = Module.findExportByName("dhcpsapi.dll", "DhcpGetAllOptions")
Interceptor.attach(DhcpGetAllOptions, {onLeave: function (args) {send("DhcpGetAllOptions");}});

var DhcpGetAllOptionsV6 = Module.findExportByName("dhcpsapi.dll", "DhcpGetAllOptionsV6")
Interceptor.attach(DhcpGetAllOptionsV6, {onLeave: function (args) {send("DhcpGetAllOptionsV6");}});

var DhcpGetClassInfo = Module.findExportByName("dhcpsapi.dll", "DhcpGetClassInfo")
Interceptor.attach(DhcpGetClassInfo, {onLeave: function (args) {send("DhcpGetClassInfo");}});

var DhcpGetClientInfo = Module.findExportByName("dhcpsapi.dll", "DhcpGetClientInfo")
Interceptor.attach(DhcpGetClientInfo, {onLeave: function (args) {send("DhcpGetClientInfo");}});

var DhcpGetClientInfoV4 = Module.findExportByName("dhcpsapi.dll", "DhcpGetClientInfoV4")
Interceptor.attach(DhcpGetClientInfoV4, {onLeave: function (args) {send("DhcpGetClientInfoV4");}});

var DhcpGetClientInfoV6 = Module.findExportByName("dhcpsapi.dll", "DhcpGetClientInfoV6")
Interceptor.attach(DhcpGetClientInfoV6, {onLeave: function (args) {send("DhcpGetClientInfoV6");}});

var DhcpGetClientInfoVQ = Module.findExportByName("dhcpsapi.dll", "DhcpGetClientInfoVQ")
Interceptor.attach(DhcpGetClientInfoVQ, {onLeave: function (args) {send("DhcpGetClientInfoVQ");}});

var DhcpGetClientOptions = Module.findExportByName("dhcpsapi.dll", "DhcpGetClientOptions")
Interceptor.attach(DhcpGetClientOptions, {onLeave: function (args) {send("DhcpGetClientOptions");}});

var DhcpGetFilterV4 = Module.findExportByName("dhcpsapi.dll", "DhcpGetFilterV4")
Interceptor.attach(DhcpGetFilterV4, {onLeave: function (args) {send("DhcpGetFilterV4");}});

var DhcpGetMCastMibInfo = Module.findExportByName("dhcpsapi.dll", "DhcpGetMCastMibInfo")
Interceptor.attach(DhcpGetMCastMibInfo, {onLeave: function (args) {send("DhcpGetMCastMibInfo");}});

var DhcpGetMScopeInfo = Module.findExportByName("dhcpsapi.dll", "DhcpGetMScopeInfo")
Interceptor.attach(DhcpGetMScopeInfo, {onLeave: function (args) {send("DhcpGetMScopeInfo");}});

var DhcpGetMibInfo = Module.findExportByName("dhcpsapi.dll", "DhcpGetMibInfo")
Interceptor.attach(DhcpGetMibInfo, {onLeave: function (args) {send("DhcpGetMibInfo");}});

var DhcpGetMibInfoV5 = Module.findExportByName("dhcpsapi.dll", "DhcpGetMibInfoV5")
Interceptor.attach(DhcpGetMibInfoV5, {onLeave: function (args) {send("DhcpGetMibInfoV5");}});

var DhcpGetMibInfoV6 = Module.findExportByName("dhcpsapi.dll", "DhcpGetMibInfoV6")
Interceptor.attach(DhcpGetMibInfoV6, {onLeave: function (args) {send("DhcpGetMibInfoV6");}});

var DhcpGetMibInfoVQ = Module.findExportByName("dhcpsapi.dll", "DhcpGetMibInfoVQ")
Interceptor.attach(DhcpGetMibInfoVQ, {onLeave: function (args) {send("DhcpGetMibInfoVQ");}});

var DhcpGetOptionInfo = Module.findExportByName("dhcpsapi.dll", "DhcpGetOptionInfo")
Interceptor.attach(DhcpGetOptionInfo, {onLeave: function (args) {send("DhcpGetOptionInfo");}});

var DhcpGetOptionInfoV5 = Module.findExportByName("dhcpsapi.dll", "DhcpGetOptionInfoV5")
Interceptor.attach(DhcpGetOptionInfoV5, {onLeave: function (args) {send("DhcpGetOptionInfoV5");}});

var DhcpGetOptionInfoV6 = Module.findExportByName("dhcpsapi.dll", "DhcpGetOptionInfoV6")
Interceptor.attach(DhcpGetOptionInfoV6, {onLeave: function (args) {send("DhcpGetOptionInfoV6");}});

var DhcpGetOptionValue = Module.findExportByName("dhcpsapi.dll", "DhcpGetOptionValue")
Interceptor.attach(DhcpGetOptionValue, {onLeave: function (args) {send("DhcpGetOptionValue");}});

var DhcpGetOptionValueV5 = Module.findExportByName("dhcpsapi.dll", "DhcpGetOptionValueV5")
Interceptor.attach(DhcpGetOptionValueV5, {onLeave: function (args) {send("DhcpGetOptionValueV5");}});

var DhcpGetOptionValueV6 = Module.findExportByName("dhcpsapi.dll", "DhcpGetOptionValueV6")
Interceptor.attach(DhcpGetOptionValueV6, {onLeave: function (args) {send("DhcpGetOptionValueV6");}});

var DhcpGetServerBindingInfo = Module.findExportByName("dhcpsapi.dll", "DhcpGetServerBindingInfo")
Interceptor.attach(DhcpGetServerBindingInfo, {onLeave: function (args) {send("DhcpGetServerBindingInfo");}});

var DhcpGetServerBindingInfoV6 = Module.findExportByName("dhcpsapi.dll", "DhcpGetServerBindingInfoV6")
Interceptor.attach(DhcpGetServerBindingInfoV6, {onLeave: function (args) {send("DhcpGetServerBindingInfoV6");}});

var DhcpGetServerSpecificStrings = Module.findExportByName("dhcpsapi.dll", "DhcpGetServerSpecificStrings")
Interceptor.attach(DhcpGetServerSpecificStrings, {onLeave: function (args) {send("DhcpGetServerSpecificStrings");}});

var DhcpGetSubnetDelayOffer = Module.findExportByName("dhcpsapi.dll", "DhcpGetSubnetDelayOffer")
Interceptor.attach(DhcpGetSubnetDelayOffer, {onLeave: function (args) {send("DhcpGetSubnetDelayOffer");}});

var DhcpGetSubnetInfo = Module.findExportByName("dhcpsapi.dll", "DhcpGetSubnetInfo")
Interceptor.attach(DhcpGetSubnetInfo, {onLeave: function (args) {send("DhcpGetSubnetInfo");}});

var DhcpGetSubnetInfoV6 = Module.findExportByName("dhcpsapi.dll", "DhcpGetSubnetInfoV6")
Interceptor.attach(DhcpGetSubnetInfoV6, {onLeave: function (args) {send("DhcpGetSubnetInfoV6");}});

var DhcpGetSubnetInfoVQ = Module.findExportByName("dhcpsapi.dll", "DhcpGetSubnetInfoVQ")
Interceptor.attach(DhcpGetSubnetInfoVQ, {onLeave: function (args) {send("DhcpGetSubnetInfoVQ");}});

var DhcpGetSuperScopeInfoV4 = Module.findExportByName("dhcpsapi.dll", "DhcpGetSuperScopeInfoV4")
Interceptor.attach(DhcpGetSuperScopeInfoV4, {onLeave: function (args) {send("DhcpGetSuperScopeInfoV4");}});

var DhcpGetThreadOptions = Module.findExportByName("dhcpsapi.dll", "DhcpGetThreadOptions")
Interceptor.attach(DhcpGetThreadOptions, {onLeave: function (args) {send("DhcpGetThreadOptions");}});

var DhcpGetVersion = Module.findExportByName("dhcpsapi.dll", "DhcpGetVersion")
Interceptor.attach(DhcpGetVersion, {onLeave: function (args) {send("DhcpGetVersion");}});

var DhcpHlprAddV4PolicyCondition = Module.findExportByName("dhcpsapi.dll", "DhcpHlprAddV4PolicyCondition")
Interceptor.attach(DhcpHlprAddV4PolicyCondition, {onLeave: function (args) {send("DhcpHlprAddV4PolicyCondition");}});

var DhcpHlprAddV4PolicyExpr = Module.findExportByName("dhcpsapi.dll", "DhcpHlprAddV4PolicyExpr")
Interceptor.attach(DhcpHlprAddV4PolicyExpr, {onLeave: function (args) {send("DhcpHlprAddV4PolicyExpr");}});

var DhcpHlprAddV4PolicyRange = Module.findExportByName("dhcpsapi.dll", "DhcpHlprAddV4PolicyRange")
Interceptor.attach(DhcpHlprAddV4PolicyRange, {onLeave: function (args) {send("DhcpHlprAddV4PolicyRange");}});

var DhcpHlprCreateV4Policy = Module.findExportByName("dhcpsapi.dll", "DhcpHlprCreateV4Policy")
Interceptor.attach(DhcpHlprCreateV4Policy, {onLeave: function (args) {send("DhcpHlprCreateV4Policy");}});

var DhcpHlprCreateV4PolicyEx = Module.findExportByName("dhcpsapi.dll", "DhcpHlprCreateV4PolicyEx")
Interceptor.attach(DhcpHlprCreateV4PolicyEx, {onLeave: function (args) {send("DhcpHlprCreateV4PolicyEx");}});

var DhcpHlprFindV4DhcpProperty = Module.findExportByName("dhcpsapi.dll", "DhcpHlprFindV4DhcpProperty")
Interceptor.attach(DhcpHlprFindV4DhcpProperty, {onLeave: function (args) {send("DhcpHlprFindV4DhcpProperty");}});

var DhcpHlprFreeV4DhcpProperty = Module.findExportByName("dhcpsapi.dll", "DhcpHlprFreeV4DhcpProperty")
Interceptor.attach(DhcpHlprFreeV4DhcpProperty, {onLeave: function (args) {send("DhcpHlprFreeV4DhcpProperty");}});

var DhcpHlprFreeV4DhcpPropertyArray = Module.findExportByName("dhcpsapi.dll", "DhcpHlprFreeV4DhcpPropertyArray")
Interceptor.attach(DhcpHlprFreeV4DhcpPropertyArray, {onLeave: function (args) {send("DhcpHlprFreeV4DhcpPropertyArray");}});

var DhcpHlprFreeV4Policy = Module.findExportByName("dhcpsapi.dll", "DhcpHlprFreeV4Policy")
Interceptor.attach(DhcpHlprFreeV4Policy, {onLeave: function (args) {send("DhcpHlprFreeV4Policy");}});

var DhcpHlprFreeV4PolicyArray = Module.findExportByName("dhcpsapi.dll", "DhcpHlprFreeV4PolicyArray")
Interceptor.attach(DhcpHlprFreeV4PolicyArray, {onLeave: function (args) {send("DhcpHlprFreeV4PolicyArray");}});

var DhcpHlprFreeV4PolicyEx = Module.findExportByName("dhcpsapi.dll", "DhcpHlprFreeV4PolicyEx")
Interceptor.attach(DhcpHlprFreeV4PolicyEx, {onLeave: function (args) {send("DhcpHlprFreeV4PolicyEx");}});

var DhcpHlprFreeV4PolicyExArray = Module.findExportByName("dhcpsapi.dll", "DhcpHlprFreeV4PolicyExArray")
Interceptor.attach(DhcpHlprFreeV4PolicyExArray, {onLeave: function (args) {send("DhcpHlprFreeV4PolicyExArray");}});

var DhcpHlprIsV4PolicySingleUC = Module.findExportByName("dhcpsapi.dll", "DhcpHlprIsV4PolicySingleUC")
Interceptor.attach(DhcpHlprIsV4PolicySingleUC, {onLeave: function (args) {send("DhcpHlprIsV4PolicySingleUC");}});

var DhcpHlprIsV4PolicyValid = Module.findExportByName("dhcpsapi.dll", "DhcpHlprIsV4PolicyValid")
Interceptor.attach(DhcpHlprIsV4PolicyValid, {onLeave: function (args) {send("DhcpHlprIsV4PolicyValid");}});

var DhcpHlprIsV4PolicyWellFormed = Module.findExportByName("dhcpsapi.dll", "DhcpHlprIsV4PolicyWellFormed")
Interceptor.attach(DhcpHlprIsV4PolicyWellFormed, {onLeave: function (args) {send("DhcpHlprIsV4PolicyWellFormed");}});

var DhcpHlprModifyV4PolicyExpr = Module.findExportByName("dhcpsapi.dll", "DhcpHlprModifyV4PolicyExpr")
Interceptor.attach(DhcpHlprModifyV4PolicyExpr, {onLeave: function (args) {send("DhcpHlprModifyV4PolicyExpr");}});

var DhcpHlprResetV4PolicyExpr = Module.findExportByName("dhcpsapi.dll", "DhcpHlprResetV4PolicyExpr")
Interceptor.attach(DhcpHlprResetV4PolicyExpr, {onLeave: function (args) {send("DhcpHlprResetV4PolicyExpr");}});

var DhcpModifyClass = Module.findExportByName("dhcpsapi.dll", "DhcpModifyClass")
Interceptor.attach(DhcpModifyClass, {onLeave: function (args) {send("DhcpModifyClass");}});

var DhcpModifyClassV6 = Module.findExportByName("dhcpsapi.dll", "DhcpModifyClassV6")
Interceptor.attach(DhcpModifyClassV6, {onLeave: function (args) {send("DhcpModifyClassV6");}});

var DhcpRemoveMScopeElement = Module.findExportByName("dhcpsapi.dll", "DhcpRemoveMScopeElement")
Interceptor.attach(DhcpRemoveMScopeElement, {onLeave: function (args) {send("DhcpRemoveMScopeElement");}});

var DhcpRemoveOption = Module.findExportByName("dhcpsapi.dll", "DhcpRemoveOption")
Interceptor.attach(DhcpRemoveOption, {onLeave: function (args) {send("DhcpRemoveOption");}});

var DhcpRemoveOptionV5 = Module.findExportByName("dhcpsapi.dll", "DhcpRemoveOptionV5")
Interceptor.attach(DhcpRemoveOptionV5, {onLeave: function (args) {send("DhcpRemoveOptionV5");}});

var DhcpRemoveOptionV6 = Module.findExportByName("dhcpsapi.dll", "DhcpRemoveOptionV6")
Interceptor.attach(DhcpRemoveOptionV6, {onLeave: function (args) {send("DhcpRemoveOptionV6");}});

var DhcpRemoveOptionValue = Module.findExportByName("dhcpsapi.dll", "DhcpRemoveOptionValue")
Interceptor.attach(DhcpRemoveOptionValue, {onLeave: function (args) {send("DhcpRemoveOptionValue");}});

var DhcpRemoveOptionValueV5 = Module.findExportByName("dhcpsapi.dll", "DhcpRemoveOptionValueV5")
Interceptor.attach(DhcpRemoveOptionValueV5, {onLeave: function (args) {send("DhcpRemoveOptionValueV5");}});

var DhcpRemoveOptionValueV6 = Module.findExportByName("dhcpsapi.dll", "DhcpRemoveOptionValueV6")
Interceptor.attach(DhcpRemoveOptionValueV6, {onLeave: function (args) {send("DhcpRemoveOptionValueV6");}});

var DhcpRemoveSubnetElement = Module.findExportByName("dhcpsapi.dll", "DhcpRemoveSubnetElement")
Interceptor.attach(DhcpRemoveSubnetElement, {onLeave: function (args) {send("DhcpRemoveSubnetElement");}});

var DhcpRemoveSubnetElementV4 = Module.findExportByName("dhcpsapi.dll", "DhcpRemoveSubnetElementV4")
Interceptor.attach(DhcpRemoveSubnetElementV4, {onLeave: function (args) {send("DhcpRemoveSubnetElementV4");}});

var DhcpRemoveSubnetElementV5 = Module.findExportByName("dhcpsapi.dll", "DhcpRemoveSubnetElementV5")
Interceptor.attach(DhcpRemoveSubnetElementV5, {onLeave: function (args) {send("DhcpRemoveSubnetElementV5");}});

var DhcpRemoveSubnetElementV6 = Module.findExportByName("dhcpsapi.dll", "DhcpRemoveSubnetElementV6")
Interceptor.attach(DhcpRemoveSubnetElementV6, {onLeave: function (args) {send("DhcpRemoveSubnetElementV6");}});

var DhcpRpcFreeMemory = Module.findExportByName("dhcpsapi.dll", "DhcpRpcFreeMemory")
Interceptor.attach(DhcpRpcFreeMemory, {onLeave: function (args) {send("DhcpRpcFreeMemory");}});

var DhcpScanDatabase = Module.findExportByName("dhcpsapi.dll", "DhcpScanDatabase")
Interceptor.attach(DhcpScanDatabase, {onLeave: function (args) {send("DhcpScanDatabase");}});

var DhcpScanMDatabase = Module.findExportByName("dhcpsapi.dll", "DhcpScanMDatabase")
Interceptor.attach(DhcpScanMDatabase, {onLeave: function (args) {send("DhcpScanMDatabase");}});

var DhcpServerAuditlogParamsFree = Module.findExportByName("dhcpsapi.dll", "DhcpServerAuditlogParamsFree")
Interceptor.attach(DhcpServerAuditlogParamsFree, {onLeave: function (args) {send("DhcpServerAuditlogParamsFree");}});

var DhcpServerBackupDatabase = Module.findExportByName("dhcpsapi.dll", "DhcpServerBackupDatabase")
Interceptor.attach(DhcpServerBackupDatabase, {onLeave: function (args) {send("DhcpServerBackupDatabase");}});

var DhcpServerGetConfig = Module.findExportByName("dhcpsapi.dll", "DhcpServerGetConfig")
Interceptor.attach(DhcpServerGetConfig, {onLeave: function (args) {send("DhcpServerGetConfig");}});

var DhcpServerGetConfigV4 = Module.findExportByName("dhcpsapi.dll", "DhcpServerGetConfigV4")
Interceptor.attach(DhcpServerGetConfigV4, {onLeave: function (args) {send("DhcpServerGetConfigV4");}});

var DhcpServerGetConfigV6 = Module.findExportByName("dhcpsapi.dll", "DhcpServerGetConfigV6")
Interceptor.attach(DhcpServerGetConfigV6, {onLeave: function (args) {send("DhcpServerGetConfigV6");}});

var DhcpServerGetConfigVQ = Module.findExportByName("dhcpsapi.dll", "DhcpServerGetConfigVQ")
Interceptor.attach(DhcpServerGetConfigVQ, {onLeave: function (args) {send("DhcpServerGetConfigVQ");}});

var DhcpServerQueryAttribute = Module.findExportByName("dhcpsapi.dll", "DhcpServerQueryAttribute")
Interceptor.attach(DhcpServerQueryAttribute, {onLeave: function (args) {send("DhcpServerQueryAttribute");}});

var DhcpServerQueryAttributes = Module.findExportByName("dhcpsapi.dll", "DhcpServerQueryAttributes")
Interceptor.attach(DhcpServerQueryAttributes, {onLeave: function (args) {send("DhcpServerQueryAttributes");}});

var DhcpServerQueryDnsRegCredentials = Module.findExportByName("dhcpsapi.dll", "DhcpServerQueryDnsRegCredentials")
Interceptor.attach(DhcpServerQueryDnsRegCredentials, {onLeave: function (args) {send("DhcpServerQueryDnsRegCredentials");}});

var DhcpServerRedoAuthorization = Module.findExportByName("dhcpsapi.dll", "DhcpServerRedoAuthorization")
Interceptor.attach(DhcpServerRedoAuthorization, {onLeave: function (args) {send("DhcpServerRedoAuthorization");}});

var DhcpServerRestoreDatabase = Module.findExportByName("dhcpsapi.dll", "DhcpServerRestoreDatabase")
Interceptor.attach(DhcpServerRestoreDatabase, {onLeave: function (args) {send("DhcpServerRestoreDatabase");}});

var DhcpServerSetConfig = Module.findExportByName("dhcpsapi.dll", "DhcpServerSetConfig")
Interceptor.attach(DhcpServerSetConfig, {onLeave: function (args) {send("DhcpServerSetConfig");}});

var DhcpServerSetConfigV4 = Module.findExportByName("dhcpsapi.dll", "DhcpServerSetConfigV4")
Interceptor.attach(DhcpServerSetConfigV4, {onLeave: function (args) {send("DhcpServerSetConfigV4");}});

var DhcpServerSetConfigV6 = Module.findExportByName("dhcpsapi.dll", "DhcpServerSetConfigV6")
Interceptor.attach(DhcpServerSetConfigV6, {onLeave: function (args) {send("DhcpServerSetConfigV6");}});

var DhcpServerSetConfigVQ = Module.findExportByName("dhcpsapi.dll", "DhcpServerSetConfigVQ")
Interceptor.attach(DhcpServerSetConfigVQ, {onLeave: function (args) {send("DhcpServerSetConfigVQ");}});

var DhcpServerSetDnsRegCredentials = Module.findExportByName("dhcpsapi.dll", "DhcpServerSetDnsRegCredentials")
Interceptor.attach(DhcpServerSetDnsRegCredentials, {onLeave: function (args) {send("DhcpServerSetDnsRegCredentials");}});

var DhcpServerSetDnsRegCredentialsV5 = Module.findExportByName("dhcpsapi.dll", "DhcpServerSetDnsRegCredentialsV5")
Interceptor.attach(DhcpServerSetDnsRegCredentialsV5, {onLeave: function (args) {send("DhcpServerSetDnsRegCredentialsV5");}});

var DhcpSetClientInfo = Module.findExportByName("dhcpsapi.dll", "DhcpSetClientInfo")
Interceptor.attach(DhcpSetClientInfo, {onLeave: function (args) {send("DhcpSetClientInfo");}});

var DhcpSetClientInfoV4 = Module.findExportByName("dhcpsapi.dll", "DhcpSetClientInfoV4")
Interceptor.attach(DhcpSetClientInfoV4, {onLeave: function (args) {send("DhcpSetClientInfoV4");}});

var DhcpSetClientInfoV6 = Module.findExportByName("dhcpsapi.dll", "DhcpSetClientInfoV6")
Interceptor.attach(DhcpSetClientInfoV6, {onLeave: function (args) {send("DhcpSetClientInfoV6");}});

var DhcpSetClientInfoVQ = Module.findExportByName("dhcpsapi.dll", "DhcpSetClientInfoVQ")
Interceptor.attach(DhcpSetClientInfoVQ, {onLeave: function (args) {send("DhcpSetClientInfoVQ");}});

var DhcpSetFilterV4 = Module.findExportByName("dhcpsapi.dll", "DhcpSetFilterV4")
Interceptor.attach(DhcpSetFilterV4, {onLeave: function (args) {send("DhcpSetFilterV4");}});

var DhcpSetMScopeInfo = Module.findExportByName("dhcpsapi.dll", "DhcpSetMScopeInfo")
Interceptor.attach(DhcpSetMScopeInfo, {onLeave: function (args) {send("DhcpSetMScopeInfo");}});

var DhcpSetOptionInfo = Module.findExportByName("dhcpsapi.dll", "DhcpSetOptionInfo")
Interceptor.attach(DhcpSetOptionInfo, {onLeave: function (args) {send("DhcpSetOptionInfo");}});

var DhcpSetOptionInfoV5 = Module.findExportByName("dhcpsapi.dll", "DhcpSetOptionInfoV5")
Interceptor.attach(DhcpSetOptionInfoV5, {onLeave: function (args) {send("DhcpSetOptionInfoV5");}});

var DhcpSetOptionInfoV6 = Module.findExportByName("dhcpsapi.dll", "DhcpSetOptionInfoV6")
Interceptor.attach(DhcpSetOptionInfoV6, {onLeave: function (args) {send("DhcpSetOptionInfoV6");}});

var DhcpSetOptionValue = Module.findExportByName("dhcpsapi.dll", "DhcpSetOptionValue")
Interceptor.attach(DhcpSetOptionValue, {onLeave: function (args) {send("DhcpSetOptionValue");}});

var DhcpSetOptionValueV5 = Module.findExportByName("dhcpsapi.dll", "DhcpSetOptionValueV5")
Interceptor.attach(DhcpSetOptionValueV5, {onLeave: function (args) {send("DhcpSetOptionValueV5");}});

var DhcpSetOptionValueV6 = Module.findExportByName("dhcpsapi.dll", "DhcpSetOptionValueV6")
Interceptor.attach(DhcpSetOptionValueV6, {onLeave: function (args) {send("DhcpSetOptionValueV6");}});

var DhcpSetOptionValues = Module.findExportByName("dhcpsapi.dll", "DhcpSetOptionValues")
Interceptor.attach(DhcpSetOptionValues, {onLeave: function (args) {send("DhcpSetOptionValues");}});

var DhcpSetOptionValuesV5 = Module.findExportByName("dhcpsapi.dll", "DhcpSetOptionValuesV5")
Interceptor.attach(DhcpSetOptionValuesV5, {onLeave: function (args) {send("DhcpSetOptionValuesV5");}});

var DhcpSetServerBindingInfo = Module.findExportByName("dhcpsapi.dll", "DhcpSetServerBindingInfo")
Interceptor.attach(DhcpSetServerBindingInfo, {onLeave: function (args) {send("DhcpSetServerBindingInfo");}});

var DhcpSetServerBindingInfoV6 = Module.findExportByName("dhcpsapi.dll", "DhcpSetServerBindingInfoV6")
Interceptor.attach(DhcpSetServerBindingInfoV6, {onLeave: function (args) {send("DhcpSetServerBindingInfoV6");}});

var DhcpSetSubnetDelayOffer = Module.findExportByName("dhcpsapi.dll", "DhcpSetSubnetDelayOffer")
Interceptor.attach(DhcpSetSubnetDelayOffer, {onLeave: function (args) {send("DhcpSetSubnetDelayOffer");}});

var DhcpSetSubnetInfo = Module.findExportByName("dhcpsapi.dll", "DhcpSetSubnetInfo")
Interceptor.attach(DhcpSetSubnetInfo, {onLeave: function (args) {send("DhcpSetSubnetInfo");}});

var DhcpSetSubnetInfoV6 = Module.findExportByName("dhcpsapi.dll", "DhcpSetSubnetInfoV6")
Interceptor.attach(DhcpSetSubnetInfoV6, {onLeave: function (args) {send("DhcpSetSubnetInfoV6");}});

var DhcpSetSubnetInfoVQ = Module.findExportByName("dhcpsapi.dll", "DhcpSetSubnetInfoVQ")
Interceptor.attach(DhcpSetSubnetInfoVQ, {onLeave: function (args) {send("DhcpSetSubnetInfoVQ");}});

var DhcpSetSuperScopeV4 = Module.findExportByName("dhcpsapi.dll", "DhcpSetSuperScopeV4")
Interceptor.attach(DhcpSetSuperScopeV4, {onLeave: function (args) {send("DhcpSetSuperScopeV4");}});

var DhcpSetThreadOptions = Module.findExportByName("dhcpsapi.dll", "DhcpSetThreadOptions")
Interceptor.attach(DhcpSetThreadOptions, {onLeave: function (args) {send("DhcpSetThreadOptions");}});

var DhcpV4AddPolicyRange = Module.findExportByName("dhcpsapi.dll", "DhcpV4AddPolicyRange")
Interceptor.attach(DhcpV4AddPolicyRange, {onLeave: function (args) {send("DhcpV4AddPolicyRange");}});

var DhcpV4CreateClientInfo = Module.findExportByName("dhcpsapi.dll", "DhcpV4CreateClientInfo")
Interceptor.attach(DhcpV4CreateClientInfo, {onLeave: function (args) {send("DhcpV4CreateClientInfo");}});

var DhcpV4CreateClientInfoEx = Module.findExportByName("dhcpsapi.dll", "DhcpV4CreateClientInfoEx")
Interceptor.attach(DhcpV4CreateClientInfoEx, {onLeave: function (args) {send("DhcpV4CreateClientInfoEx");}});

var DhcpV4CreatePolicy = Module.findExportByName("dhcpsapi.dll", "DhcpV4CreatePolicy")
Interceptor.attach(DhcpV4CreatePolicy, {onLeave: function (args) {send("DhcpV4CreatePolicy");}});

var DhcpV4CreatePolicyEx = Module.findExportByName("dhcpsapi.dll", "DhcpV4CreatePolicyEx")
Interceptor.attach(DhcpV4CreatePolicyEx, {onLeave: function (args) {send("DhcpV4CreatePolicyEx");}});

var DhcpV4DeletePolicy = Module.findExportByName("dhcpsapi.dll", "DhcpV4DeletePolicy")
Interceptor.attach(DhcpV4DeletePolicy, {onLeave: function (args) {send("DhcpV4DeletePolicy");}});

var DhcpV4EnumPolicies = Module.findExportByName("dhcpsapi.dll", "DhcpV4EnumPolicies")
Interceptor.attach(DhcpV4EnumPolicies, {onLeave: function (args) {send("DhcpV4EnumPolicies");}});

var DhcpV4EnumPoliciesEx = Module.findExportByName("dhcpsapi.dll", "DhcpV4EnumPoliciesEx")
Interceptor.attach(DhcpV4EnumPoliciesEx, {onLeave: function (args) {send("DhcpV4EnumPoliciesEx");}});

var DhcpV4EnumSubnetClients = Module.findExportByName("dhcpsapi.dll", "DhcpV4EnumSubnetClients")
Interceptor.attach(DhcpV4EnumSubnetClients, {onLeave: function (args) {send("DhcpV4EnumSubnetClients");}});

var DhcpV4EnumSubnetClientsEx = Module.findExportByName("dhcpsapi.dll", "DhcpV4EnumSubnetClientsEx")
Interceptor.attach(DhcpV4EnumSubnetClientsEx, {onLeave: function (args) {send("DhcpV4EnumSubnetClientsEx");}});

var DhcpV4EnumSubnetReservations = Module.findExportByName("dhcpsapi.dll", "DhcpV4EnumSubnetReservations")
Interceptor.attach(DhcpV4EnumSubnetReservations, {onLeave: function (args) {send("DhcpV4EnumSubnetReservations");}});

var DhcpV4FailoverAddScopeToRelationship = Module.findExportByName("dhcpsapi.dll", "DhcpV4FailoverAddScopeToRelationship")
Interceptor.attach(DhcpV4FailoverAddScopeToRelationship, {onLeave: function (args) {send("DhcpV4FailoverAddScopeToRelationship");}});

var DhcpV4FailoverCreateRelationship = Module.findExportByName("dhcpsapi.dll", "DhcpV4FailoverCreateRelationship")
Interceptor.attach(DhcpV4FailoverCreateRelationship, {onLeave: function (args) {send("DhcpV4FailoverCreateRelationship");}});

var DhcpV4FailoverDeleteRelationship = Module.findExportByName("dhcpsapi.dll", "DhcpV4FailoverDeleteRelationship")
Interceptor.attach(DhcpV4FailoverDeleteRelationship, {onLeave: function (args) {send("DhcpV4FailoverDeleteRelationship");}});

var DhcpV4FailoverDeleteScopeFromRelationship = Module.findExportByName("dhcpsapi.dll", "DhcpV4FailoverDeleteScopeFromRelationship")
Interceptor.attach(DhcpV4FailoverDeleteScopeFromRelationship, {onLeave: function (args) {send("DhcpV4FailoverDeleteScopeFromRelationship");}});

var DhcpV4FailoverEnumRelationship = Module.findExportByName("dhcpsapi.dll", "DhcpV4FailoverEnumRelationship")
Interceptor.attach(DhcpV4FailoverEnumRelationship, {onLeave: function (args) {send("DhcpV4FailoverEnumRelationship");}});

var DhcpV4FailoverGetAddressStatus = Module.findExportByName("dhcpsapi.dll", "DhcpV4FailoverGetAddressStatus")
Interceptor.attach(DhcpV4FailoverGetAddressStatus, {onLeave: function (args) {send("DhcpV4FailoverGetAddressStatus");}});

var DhcpV4FailoverGetClientInfo = Module.findExportByName("dhcpsapi.dll", "DhcpV4FailoverGetClientInfo")
Interceptor.attach(DhcpV4FailoverGetClientInfo, {onLeave: function (args) {send("DhcpV4FailoverGetClientInfo");}});

var DhcpV4FailoverGetRelationship = Module.findExportByName("dhcpsapi.dll", "DhcpV4FailoverGetRelationship")
Interceptor.attach(DhcpV4FailoverGetRelationship, {onLeave: function (args) {send("DhcpV4FailoverGetRelationship");}});

var DhcpV4FailoverGetScopeRelationship = Module.findExportByName("dhcpsapi.dll", "DhcpV4FailoverGetScopeRelationship")
Interceptor.attach(DhcpV4FailoverGetScopeRelationship, {onLeave: function (args) {send("DhcpV4FailoverGetScopeRelationship");}});

var DhcpV4FailoverGetScopeStatistics = Module.findExportByName("dhcpsapi.dll", "DhcpV4FailoverGetScopeStatistics")
Interceptor.attach(DhcpV4FailoverGetScopeStatistics, {onLeave: function (args) {send("DhcpV4FailoverGetScopeStatistics");}});

var DhcpV4FailoverGetSystemTime = Module.findExportByName("dhcpsapi.dll", "DhcpV4FailoverGetSystemTime")
Interceptor.attach(DhcpV4FailoverGetSystemTime, {onLeave: function (args) {send("DhcpV4FailoverGetSystemTime");}});

var DhcpV4FailoverSetRelationship = Module.findExportByName("dhcpsapi.dll", "DhcpV4FailoverSetRelationship")
Interceptor.attach(DhcpV4FailoverSetRelationship, {onLeave: function (args) {send("DhcpV4FailoverSetRelationship");}});

var DhcpV4FailoverTriggerAddrAllocation = Module.findExportByName("dhcpsapi.dll", "DhcpV4FailoverTriggerAddrAllocation")
Interceptor.attach(DhcpV4FailoverTriggerAddrAllocation, {onLeave: function (args) {send("DhcpV4FailoverTriggerAddrAllocation");}});

var DhcpV4GetAllOptionValues = Module.findExportByName("dhcpsapi.dll", "DhcpV4GetAllOptionValues")
Interceptor.attach(DhcpV4GetAllOptionValues, {onLeave: function (args) {send("DhcpV4GetAllOptionValues");}});

var DhcpV4GetClientInfo = Module.findExportByName("dhcpsapi.dll", "DhcpV4GetClientInfo")
Interceptor.attach(DhcpV4GetClientInfo, {onLeave: function (args) {send("DhcpV4GetClientInfo");}});

var DhcpV4GetClientInfoEx = Module.findExportByName("dhcpsapi.dll", "DhcpV4GetClientInfoEx")
Interceptor.attach(DhcpV4GetClientInfoEx, {onLeave: function (args) {send("DhcpV4GetClientInfoEx");}});

var DhcpV4GetFreeIPAddress = Module.findExportByName("dhcpsapi.dll", "DhcpV4GetFreeIPAddress")
Interceptor.attach(DhcpV4GetFreeIPAddress, {onLeave: function (args) {send("DhcpV4GetFreeIPAddress");}});

var DhcpV4GetOptionValue = Module.findExportByName("dhcpsapi.dll", "DhcpV4GetOptionValue")
Interceptor.attach(DhcpV4GetOptionValue, {onLeave: function (args) {send("DhcpV4GetOptionValue");}});

var DhcpV4GetPolicy = Module.findExportByName("dhcpsapi.dll", "DhcpV4GetPolicy")
Interceptor.attach(DhcpV4GetPolicy, {onLeave: function (args) {send("DhcpV4GetPolicy");}});

var DhcpV4GetPolicyEx = Module.findExportByName("dhcpsapi.dll", "DhcpV4GetPolicyEx")
Interceptor.attach(DhcpV4GetPolicyEx, {onLeave: function (args) {send("DhcpV4GetPolicyEx");}});

var DhcpV4QueryPolicyEnforcement = Module.findExportByName("dhcpsapi.dll", "DhcpV4QueryPolicyEnforcement")
Interceptor.attach(DhcpV4QueryPolicyEnforcement, {onLeave: function (args) {send("DhcpV4QueryPolicyEnforcement");}});

var DhcpV4RemoveOptionValue = Module.findExportByName("dhcpsapi.dll", "DhcpV4RemoveOptionValue")
Interceptor.attach(DhcpV4RemoveOptionValue, {onLeave: function (args) {send("DhcpV4RemoveOptionValue");}});

var DhcpV4RemovePolicyRange = Module.findExportByName("dhcpsapi.dll", "DhcpV4RemovePolicyRange")
Interceptor.attach(DhcpV4RemovePolicyRange, {onLeave: function (args) {send("DhcpV4RemovePolicyRange");}});

var DhcpV4SetOptionValue = Module.findExportByName("dhcpsapi.dll", "DhcpV4SetOptionValue")
Interceptor.attach(DhcpV4SetOptionValue, {onLeave: function (args) {send("DhcpV4SetOptionValue");}});

var DhcpV4SetOptionValues = Module.findExportByName("dhcpsapi.dll", "DhcpV4SetOptionValues")
Interceptor.attach(DhcpV4SetOptionValues, {onLeave: function (args) {send("DhcpV4SetOptionValues");}});

var DhcpV4SetPolicy = Module.findExportByName("dhcpsapi.dll", "DhcpV4SetPolicy")
Interceptor.attach(DhcpV4SetPolicy, {onLeave: function (args) {send("DhcpV4SetPolicy");}});

var DhcpV4SetPolicyEnforcement = Module.findExportByName("dhcpsapi.dll", "DhcpV4SetPolicyEnforcement")
Interceptor.attach(DhcpV4SetPolicyEnforcement, {onLeave: function (args) {send("DhcpV4SetPolicyEnforcement");}});

var DhcpV4SetPolicyEx = Module.findExportByName("dhcpsapi.dll", "DhcpV4SetPolicyEx")
Interceptor.attach(DhcpV4SetPolicyEx, {onLeave: function (args) {send("DhcpV4SetPolicyEx");}});

var DhcpV6CreateClientInfo = Module.findExportByName("dhcpsapi.dll", "DhcpV6CreateClientInfo")
Interceptor.attach(DhcpV6CreateClientInfo, {onLeave: function (args) {send("DhcpV6CreateClientInfo");}});

var DhcpV6GetFreeIPAddress = Module.findExportByName("dhcpsapi.dll", "DhcpV6GetFreeIPAddress")
Interceptor.attach(DhcpV6GetFreeIPAddress, {onLeave: function (args) {send("DhcpV6GetFreeIPAddress");}});

var DhcpV6GetStatelessStatistics = Module.findExportByName("dhcpsapi.dll", "DhcpV6GetStatelessStatistics")
Interceptor.attach(DhcpV6GetStatelessStatistics, {onLeave: function (args) {send("DhcpV6GetStatelessStatistics");}});

var DhcpV6GetStatelessStoreParams = Module.findExportByName("dhcpsapi.dll", "DhcpV6GetStatelessStoreParams")
Interceptor.attach(DhcpV6GetStatelessStoreParams, {onLeave: function (args) {send("DhcpV6GetStatelessStoreParams");}});

var DhcpV6SetStatelessStoreParams = Module.findExportByName("dhcpsapi.dll", "DhcpV6SetStatelessStoreParams")
Interceptor.attach(DhcpV6SetStatelessStoreParams, {onLeave: function (args) {send("DhcpV6SetStatelessStoreParams");}});

