var AppendPropVariant = Module.findExportByName("mfcore.dll", "AppendPropVariant")
Interceptor.attach(AppendPropVariant, {onLeave: function (args) {send("AppendPropVariant");}});

var ConvertPropVariant = Module.findExportByName("mfcore.dll", "ConvertPropVariant")
Interceptor.attach(ConvertPropVariant, {onLeave: function (args) {send("ConvertPropVariant");}});

var CopyPropertyStore = Module.findExportByName("mfcore.dll", "CopyPropertyStore")
Interceptor.attach(CopyPropertyStore, {onLeave: function (args) {send("CopyPropertyStore");}});

var CreateNamedPropertyStore = Module.findExportByName("mfcore.dll", "CreateNamedPropertyStore")
Interceptor.attach(CreateNamedPropertyStore, {onLeave: function (args) {send("CreateNamedPropertyStore");}});

var DllCanUnloadNow = Module.findExportByName("mfcore.dll", "DllCanUnloadNow")
Interceptor.attach(DllCanUnloadNow, {onLeave: function (args) {send("DllCanUnloadNow");}});

var DllGetActivationFactory = Module.findExportByName("mfcore.dll", "DllGetActivationFactory")
Interceptor.attach(DllGetActivationFactory, {onLeave: function (args) {send("DllGetActivationFactory");}});

var DllGetClassObject = Module.findExportByName("mfcore.dll", "DllGetClassObject")
Interceptor.attach(DllGetClassObject, {onLeave: function (args) {send("DllGetClassObject");}});

var DllRegisterServer = Module.findExportByName("mfcore.dll", "DllRegisterServer")
Interceptor.attach(DllRegisterServer, {onLeave: function (args) {send("DllRegisterServer");}});

var DllUnregisterServer = Module.findExportByName("mfcore.dll", "DllUnregisterServer")
Interceptor.attach(DllUnregisterServer, {onLeave: function (args) {send("DllUnregisterServer");}});

var ExtractPropVariant = Module.findExportByName("mfcore.dll", "ExtractPropVariant")
Interceptor.attach(ExtractPropVariant, {onLeave: function (args) {send("ExtractPropVariant");}});

var MFCopyMFMetadata = Module.findExportByName("mfcore.dll", "MFCopyMFMetadata")
Interceptor.attach(MFCopyMFMetadata, {onLeave: function (args) {send("MFCopyMFMetadata");}});

var MFCopyPropertyStore = Module.findExportByName("mfcore.dll", "MFCopyPropertyStore")
Interceptor.attach(MFCopyPropertyStore, {onLeave: function (args) {send("MFCopyPropertyStore");}});

var MFCopyStreamMetadata = Module.findExportByName("mfcore.dll", "MFCopyStreamMetadata")
Interceptor.attach(MFCopyStreamMetadata, {onLeave: function (args) {send("MFCopyStreamMetadata");}});

var MFCreateAggregateSource = Module.findExportByName("mfcore.dll", "MFCreateAggregateSource")
Interceptor.attach(MFCreateAggregateSource, {onLeave: function (args) {send("MFCreateAggregateSource");}});

var MFCreateAppSourceProxy = Module.findExportByName("mfcore.dll", "MFCreateAppSourceProxy")
Interceptor.attach(MFCreateAppSourceProxy, {onLeave: function (args) {send("MFCreateAppSourceProxy");}});

var MFCreateAudioRenderer = Module.findExportByName("mfcore.dll", "MFCreateAudioRenderer")
Interceptor.attach(MFCreateAudioRenderer, {onLeave: function (args) {send("MFCreateAudioRenderer");}});

var MFCreateAudioRendererActivate = Module.findExportByName("mfcore.dll", "MFCreateAudioRendererActivate")
Interceptor.attach(MFCreateAudioRendererActivate, {onLeave: function (args) {send("MFCreateAudioRendererActivate");}});

var MFCreateDeviceSource = Module.findExportByName("mfcore.dll", "MFCreateDeviceSource")
Interceptor.attach(MFCreateDeviceSource, {onLeave: function (args) {send("MFCreateDeviceSource");}});

var MFCreateDeviceSourceActivate = Module.findExportByName("mfcore.dll", "MFCreateDeviceSourceActivate")
Interceptor.attach(MFCreateDeviceSourceActivate, {onLeave: function (args) {send("MFCreateDeviceSourceActivate");}});

var MFCreateEncryptedMediaExtensionsStoreActivate = Module.findExportByName("mfcore.dll", "MFCreateEncryptedMediaExtensionsStoreActivate")
Interceptor.attach(MFCreateEncryptedMediaExtensionsStoreActivate, {onLeave: function (args) {send("MFCreateEncryptedMediaExtensionsStoreActivate");}});

var MFCreateExtendedCameraIntrinsicModel = Module.findExportByName("mfcore.dll", "MFCreateExtendedCameraIntrinsicModel")
Interceptor.attach(MFCreateExtendedCameraIntrinsicModel, {onLeave: function (args) {send("MFCreateExtendedCameraIntrinsicModel");}});

var MFCreateExtendedCameraIntrinsics = Module.findExportByName("mfcore.dll", "MFCreateExtendedCameraIntrinsics")
Interceptor.attach(MFCreateExtendedCameraIntrinsics, {onLeave: function (args) {send("MFCreateExtendedCameraIntrinsics");}});

var MFCreateFileSchemePlugin = Module.findExportByName("mfcore.dll", "MFCreateFileSchemePlugin")
Interceptor.attach(MFCreateFileSchemePlugin, {onLeave: function (args) {send("MFCreateFileSchemePlugin");}});

var MFCreateMFMetadataOnPropertyStore = Module.findExportByName("mfcore.dll", "MFCreateMFMetadataOnPropertyStore")
Interceptor.attach(MFCreateMFMetadataOnPropertyStore, {onLeave: function (args) {send("MFCreateMFMetadataOnPropertyStore");}});

var MFCreateMediaProcessor = Module.findExportByName("mfcore.dll", "MFCreateMediaProcessor")
Interceptor.attach(MFCreateMediaProcessor, {onLeave: function (args) {send("MFCreateMediaProcessor");}});

var MFCreateMediaSession = Module.findExportByName("mfcore.dll", "MFCreateMediaSession")
Interceptor.attach(MFCreateMediaSession, {onLeave: function (args) {send("MFCreateMediaSession");}});

var MFCreatePMPHost = Module.findExportByName("mfcore.dll", "MFCreatePMPHost")
Interceptor.attach(MFCreatePMPHost, {onLeave: function (args) {send("MFCreatePMPHost");}});

var MFCreatePMPMediaSession = Module.findExportByName("mfcore.dll", "MFCreatePMPMediaSession")
Interceptor.attach(MFCreatePMPMediaSession, {onLeave: function (args) {send("MFCreatePMPMediaSession");}});

var MFCreatePMPServer = Module.findExportByName("mfcore.dll", "MFCreatePMPServer")
Interceptor.attach(MFCreatePMPServer, {onLeave: function (args) {send("MFCreatePMPServer");}});

var MFCreatePresentationClock = Module.findExportByName("mfcore.dll", "MFCreatePresentationClock")
Interceptor.attach(MFCreatePresentationClock, {onLeave: function (args) {send("MFCreatePresentationClock");}});

var MFCreatePresentationClockAsyncTimeSource = Module.findExportByName("mfcore.dll", "MFCreatePresentationClockAsyncTimeSource")
Interceptor.attach(MFCreatePresentationClockAsyncTimeSource, {onLeave: function (args) {send("MFCreatePresentationClockAsyncTimeSource");}});

var MFCreateSampleCopierMFT = Module.findExportByName("mfcore.dll", "MFCreateSampleCopierMFT")
Interceptor.attach(MFCreateSampleCopierMFT, {onLeave: function (args) {send("MFCreateSampleCopierMFT");}});

var MFCreateSampleGrabberSinkActivate = Module.findExportByName("mfcore.dll", "MFCreateSampleGrabberSinkActivate")
Interceptor.attach(MFCreateSampleGrabberSinkActivate, {onLeave: function (args) {send("MFCreateSampleGrabberSinkActivate");}});

var MFCreateSequencerSegmentOffset = Module.findExportByName("mfcore.dll", "MFCreateSequencerSegmentOffset")
Interceptor.attach(MFCreateSequencerSegmentOffset, {onLeave: function (args) {send("MFCreateSequencerSegmentOffset");}});

var MFCreateSequencerSource = Module.findExportByName("mfcore.dll", "MFCreateSequencerSource")
Interceptor.attach(MFCreateSequencerSource, {onLeave: function (args) {send("MFCreateSequencerSource");}});

var MFCreateSequencerSourceRemoteStream = Module.findExportByName("mfcore.dll", "MFCreateSequencerSourceRemoteStream")
Interceptor.attach(MFCreateSequencerSourceRemoteStream, {onLeave: function (args) {send("MFCreateSequencerSourceRemoteStream");}});

var MFCreateSimpleTypeHandler = Module.findExportByName("mfcore.dll", "MFCreateSimpleTypeHandler")
Interceptor.attach(MFCreateSimpleTypeHandler, {onLeave: function (args) {send("MFCreateSimpleTypeHandler");}});

var MFCreateSoundEventSchemePlugin = Module.findExportByName("mfcore.dll", "MFCreateSoundEventSchemePlugin")
Interceptor.attach(MFCreateSoundEventSchemePlugin, {onLeave: function (args) {send("MFCreateSoundEventSchemePlugin");}});

var MFCreateStandardQualityManager = Module.findExportByName("mfcore.dll", "MFCreateStandardQualityManager")
Interceptor.attach(MFCreateStandardQualityManager, {onLeave: function (args) {send("MFCreateStandardQualityManager");}});

var MFCreateTopoLoader = Module.findExportByName("mfcore.dll", "MFCreateTopoLoader")
Interceptor.attach(MFCreateTopoLoader, {onLeave: function (args) {send("MFCreateTopoLoader");}});

var MFCreateTopology = Module.findExportByName("mfcore.dll", "MFCreateTopology")
Interceptor.attach(MFCreateTopology, {onLeave: function (args) {send("MFCreateTopology");}});

var MFCreateTopologyNode = Module.findExportByName("mfcore.dll", "MFCreateTopologyNode")
Interceptor.attach(MFCreateTopologyNode, {onLeave: function (args) {send("MFCreateTopologyNode");}});

var MFCreateTransformWrapper = Module.findExportByName("mfcore.dll", "MFCreateTransformWrapper")
Interceptor.attach(MFCreateTransformWrapper, {onLeave: function (args) {send("MFCreateTransformWrapper");}});

var MFCreateWMAEncoderActivate = Module.findExportByName("mfcore.dll", "MFCreateWMAEncoderActivate")
Interceptor.attach(MFCreateWMAEncoderActivate, {onLeave: function (args) {send("MFCreateWMAEncoderActivate");}});

var MFCreateWMVEncoderActivate = Module.findExportByName("mfcore.dll", "MFCreateWMVEncoderActivate")
Interceptor.attach(MFCreateWMVEncoderActivate, {onLeave: function (args) {send("MFCreateWMVEncoderActivate");}});

var MFEnumDeviceSources = Module.findExportByName("mfcore.dll", "MFEnumDeviceSources")
Interceptor.attach(MFEnumDeviceSources, {onLeave: function (args) {send("MFEnumDeviceSources");}});

var MFGetMultipleServiceProviders = Module.findExportByName("mfcore.dll", "MFGetMultipleServiceProviders")
Interceptor.attach(MFGetMultipleServiceProviders, {onLeave: function (args) {send("MFGetMultipleServiceProviders");}});

var MFGetService = Module.findExportByName("mfcore.dll", "MFGetService")
Interceptor.attach(MFGetService, {onLeave: function (args) {send("MFGetService");}});

var MFGetTopoNodeCurrentType = Module.findExportByName("mfcore.dll", "MFGetTopoNodeCurrentType")
Interceptor.attach(MFGetTopoNodeCurrentType, {onLeave: function (args) {send("MFGetTopoNodeCurrentType");}});

var MFReadSequencerSegmentOffset = Module.findExportByName("mfcore.dll", "MFReadSequencerSegmentOffset")
Interceptor.attach(MFReadSequencerSegmentOffset, {onLeave: function (args) {send("MFReadSequencerSegmentOffset");}});

var MFRequireProtectedEnvironment = Module.findExportByName("mfcore.dll", "MFRequireProtectedEnvironment")
Interceptor.attach(MFRequireProtectedEnvironment, {onLeave: function (args) {send("MFRequireProtectedEnvironment");}});

var MFShutdownObject = Module.findExportByName("mfcore.dll", "MFShutdownObject")
Interceptor.attach(MFShutdownObject, {onLeave: function (args) {send("MFShutdownObject");}});

var MergePropertyStore = Module.findExportByName("mfcore.dll", "MergePropertyStore")
Interceptor.attach(MergePropertyStore, {onLeave: function (args) {send("MergePropertyStore");}});

