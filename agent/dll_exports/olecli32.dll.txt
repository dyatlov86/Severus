var BmChangeData = Module.findExportByName("olecli32.dll", "BmChangeData")
Interceptor.attach(BmChangeData, {onLeave: function (args) {send("BmChangeData");}});

var BmClone = Module.findExportByName("olecli32.dll", "BmClone")
Interceptor.attach(BmClone, {onLeave: function (args) {send("BmClone");}});

var BmCopy = Module.findExportByName("olecli32.dll", "BmCopy")
Interceptor.attach(BmCopy, {onLeave: function (args) {send("BmCopy");}});

var BmDraw = Module.findExportByName("olecli32.dll", "BmDraw")
Interceptor.attach(BmDraw, {onLeave: function (args) {send("BmDraw");}});

var BmEnumFormat = Module.findExportByName("olecli32.dll", "BmEnumFormat")
Interceptor.attach(BmEnumFormat, {onLeave: function (args) {send("BmEnumFormat");}});

var BmEqual = Module.findExportByName("olecli32.dll", "BmEqual")
Interceptor.attach(BmEqual, {onLeave: function (args) {send("BmEqual");}});

var BmGetData = Module.findExportByName("olecli32.dll", "BmGetData")
Interceptor.attach(BmGetData, {onLeave: function (args) {send("BmGetData");}});

var BmQueryBounds = Module.findExportByName("olecli32.dll", "BmQueryBounds")
Interceptor.attach(BmQueryBounds, {onLeave: function (args) {send("BmQueryBounds");}});

var BmRelease = Module.findExportByName("olecli32.dll", "BmRelease")
Interceptor.attach(BmRelease, {onLeave: function (args) {send("BmRelease");}});

var BmSaveToStream = Module.findExportByName("olecli32.dll", "BmSaveToStream")
Interceptor.attach(BmSaveToStream, {onLeave: function (args) {send("BmSaveToStream");}});

var CheckNetDrive = Module.findExportByName("olecli32.dll", "CheckNetDrive")
Interceptor.attach(CheckNetDrive, {onLeave: function (args) {send("CheckNetDrive");}});

var ConnectDlgProc = Module.findExportByName("olecli32.dll", "ConnectDlgProc")
Interceptor.attach(ConnectDlgProc, {onLeave: function (args) {send("ConnectDlgProc");}});

var DefCreate = Module.findExportByName("olecli32.dll", "DefCreate")
Interceptor.attach(DefCreate, {onLeave: function (args) {send("DefCreate");}});

var DefCreateFromClip = Module.findExportByName("olecli32.dll", "DefCreateFromClip")
Interceptor.attach(DefCreateFromClip, {onLeave: function (args) {send("DefCreateFromClip");}});

var DefCreateFromFile = Module.findExportByName("olecli32.dll", "DefCreateFromFile")
Interceptor.attach(DefCreateFromFile, {onLeave: function (args) {send("DefCreateFromFile");}});

var DefCreateFromTemplate = Module.findExportByName("olecli32.dll", "DefCreateFromTemplate")
Interceptor.attach(DefCreateFromTemplate, {onLeave: function (args) {send("DefCreateFromTemplate");}});

var DefCreateInvisible = Module.findExportByName("olecli32.dll", "DefCreateInvisible")
Interceptor.attach(DefCreateInvisible, {onLeave: function (args) {send("DefCreateInvisible");}});

var DefCreateLinkFromClip = Module.findExportByName("olecli32.dll", "DefCreateLinkFromClip")
Interceptor.attach(DefCreateLinkFromClip, {onLeave: function (args) {send("DefCreateLinkFromClip");}});

var DefCreateLinkFromFile = Module.findExportByName("olecli32.dll", "DefCreateLinkFromFile")
Interceptor.attach(DefCreateLinkFromFile, {onLeave: function (args) {send("DefCreateLinkFromFile");}});

var DefLoadFromStream = Module.findExportByName("olecli32.dll", "DefLoadFromStream")
Interceptor.attach(DefLoadFromStream, {onLeave: function (args) {send("DefLoadFromStream");}});

var DibChangeData = Module.findExportByName("olecli32.dll", "DibChangeData")
Interceptor.attach(DibChangeData, {onLeave: function (args) {send("DibChangeData");}});

var DibClone = Module.findExportByName("olecli32.dll", "DibClone")
Interceptor.attach(DibClone, {onLeave: function (args) {send("DibClone");}});

var DibCopy = Module.findExportByName("olecli32.dll", "DibCopy")
Interceptor.attach(DibCopy, {onLeave: function (args) {send("DibCopy");}});

var DibDraw = Module.findExportByName("olecli32.dll", "DibDraw")
Interceptor.attach(DibDraw, {onLeave: function (args) {send("DibDraw");}});

var DibEnumFormat = Module.findExportByName("olecli32.dll", "DibEnumFormat")
Interceptor.attach(DibEnumFormat, {onLeave: function (args) {send("DibEnumFormat");}});

var DibEqual = Module.findExportByName("olecli32.dll", "DibEqual")
Interceptor.attach(DibEqual, {onLeave: function (args) {send("DibEqual");}});

var DibGetData = Module.findExportByName("olecli32.dll", "DibGetData")
Interceptor.attach(DibGetData, {onLeave: function (args) {send("DibGetData");}});

var DibQueryBounds = Module.findExportByName("olecli32.dll", "DibQueryBounds")
Interceptor.attach(DibQueryBounds, {onLeave: function (args) {send("DibQueryBounds");}});

var DibRelease = Module.findExportByName("olecli32.dll", "DibRelease")
Interceptor.attach(DibRelease, {onLeave: function (args) {send("DibRelease");}});

var DibSaveToStream = Module.findExportByName("olecli32.dll", "DibSaveToStream")
Interceptor.attach(DibSaveToStream, {onLeave: function (args) {send("DibSaveToStream");}});

var DocWndProc = Module.findExportByName("olecli32.dll", "DocWndProc")
Interceptor.attach(DocWndProc, {onLeave: function (args) {send("DocWndProc");}});

var ErrActivate = Module.findExportByName("olecli32.dll", "ErrActivate")
Interceptor.attach(ErrActivate, {onLeave: function (args) {send("ErrActivate");}});

var ErrClose = Module.findExportByName("olecli32.dll", "ErrClose")
Interceptor.attach(ErrClose, {onLeave: function (args) {send("ErrClose");}});

var ErrCopyFromLink = Module.findExportByName("olecli32.dll", "ErrCopyFromLink")
Interceptor.attach(ErrCopyFromLink, {onLeave: function (args) {send("ErrCopyFromLink");}});

var ErrExecute = Module.findExportByName("olecli32.dll", "ErrExecute")
Interceptor.attach(ErrExecute, {onLeave: function (args) {send("ErrExecute");}});

var ErrGetUpdateOptions = Module.findExportByName("olecli32.dll", "ErrGetUpdateOptions")
Interceptor.attach(ErrGetUpdateOptions, {onLeave: function (args) {send("ErrGetUpdateOptions");}});

var ErrObjectConvert = Module.findExportByName("olecli32.dll", "ErrObjectConvert")
Interceptor.attach(ErrObjectConvert, {onLeave: function (args) {send("ErrObjectConvert");}});

var ErrObjectLong = Module.findExportByName("olecli32.dll", "ErrObjectLong")
Interceptor.attach(ErrObjectLong, {onLeave: function (args) {send("ErrObjectLong");}});

var ErrQueryOpen = Module.findExportByName("olecli32.dll", "ErrQueryOpen")
Interceptor.attach(ErrQueryOpen, {onLeave: function (args) {send("ErrQueryOpen");}});

var ErrQueryOutOfDate = Module.findExportByName("olecli32.dll", "ErrQueryOutOfDate")
Interceptor.attach(ErrQueryOutOfDate, {onLeave: function (args) {send("ErrQueryOutOfDate");}});

var ErrQueryProtocol = Module.findExportByName("olecli32.dll", "ErrQueryProtocol")
Interceptor.attach(ErrQueryProtocol, {onLeave: function (args) {send("ErrQueryProtocol");}});

var ErrReconnect = Module.findExportByName("olecli32.dll", "ErrReconnect")
Interceptor.attach(ErrReconnect, {onLeave: function (args) {send("ErrReconnect");}});

var ErrSetBounds = Module.findExportByName("olecli32.dll", "ErrSetBounds")
Interceptor.attach(ErrSetBounds, {onLeave: function (args) {send("ErrSetBounds");}});

var ErrSetData = Module.findExportByName("olecli32.dll", "ErrSetData")
Interceptor.attach(ErrSetData, {onLeave: function (args) {send("ErrSetData");}});

var ErrSetHostNames = Module.findExportByName("olecli32.dll", "ErrSetHostNames")
Interceptor.attach(ErrSetHostNames, {onLeave: function (args) {send("ErrSetHostNames");}});

var ErrSetTargetDevice = Module.findExportByName("olecli32.dll", "ErrSetTargetDevice")
Interceptor.attach(ErrSetTargetDevice, {onLeave: function (args) {send("ErrSetTargetDevice");}});

var ErrSetUpdateOptions = Module.findExportByName("olecli32.dll", "ErrSetUpdateOptions")
Interceptor.attach(ErrSetUpdateOptions, {onLeave: function (args) {send("ErrSetUpdateOptions");}});

var ErrShow = Module.findExportByName("olecli32.dll", "ErrShow")
Interceptor.attach(ErrShow, {onLeave: function (args) {send("ErrShow");}});

var ErrUpdate = Module.findExportByName("olecli32.dll", "ErrUpdate")
Interceptor.attach(ErrUpdate, {onLeave: function (args) {send("ErrUpdate");}});

var GenChangeData = Module.findExportByName("olecli32.dll", "GenChangeData")
Interceptor.attach(GenChangeData, {onLeave: function (args) {send("GenChangeData");}});

var GenClone = Module.findExportByName("olecli32.dll", "GenClone")
Interceptor.attach(GenClone, {onLeave: function (args) {send("GenClone");}});

var GenCopy = Module.findExportByName("olecli32.dll", "GenCopy")
Interceptor.attach(GenCopy, {onLeave: function (args) {send("GenCopy");}});

var GenDraw = Module.findExportByName("olecli32.dll", "GenDraw")
Interceptor.attach(GenDraw, {onLeave: function (args) {send("GenDraw");}});

var GenEnumFormat = Module.findExportByName("olecli32.dll", "GenEnumFormat")
Interceptor.attach(GenEnumFormat, {onLeave: function (args) {send("GenEnumFormat");}});

var GenEqual = Module.findExportByName("olecli32.dll", "GenEqual")
Interceptor.attach(GenEqual, {onLeave: function (args) {send("GenEqual");}});

var GenGetData = Module.findExportByName("olecli32.dll", "GenGetData")
Interceptor.attach(GenGetData, {onLeave: function (args) {send("GenGetData");}});

var GenQueryBounds = Module.findExportByName("olecli32.dll", "GenQueryBounds")
Interceptor.attach(GenQueryBounds, {onLeave: function (args) {send("GenQueryBounds");}});

var GenRelease = Module.findExportByName("olecli32.dll", "GenRelease")
Interceptor.attach(GenRelease, {onLeave: function (args) {send("GenRelease");}});

var GenSaveToStream = Module.findExportByName("olecli32.dll", "GenSaveToStream")
Interceptor.attach(GenSaveToStream, {onLeave: function (args) {send("GenSaveToStream");}});

var GenSetData = Module.findExportByName("olecli32.dll", "GenSetData")
Interceptor.attach(GenSetData, {onLeave: function (args) {send("GenSetData");}});

var GetTaskVisibleWindow = Module.findExportByName("olecli32.dll", "GetTaskVisibleWindow")
Interceptor.attach(GetTaskVisibleWindow, {onLeave: function (args) {send("GetTaskVisibleWindow");}});

var LeActivate = Module.findExportByName("olecli32.dll", "LeActivate")
Interceptor.attach(LeActivate, {onLeave: function (args) {send("LeActivate");}});

var LeChangeData = Module.findExportByName("olecli32.dll", "LeChangeData")
Interceptor.attach(LeChangeData, {onLeave: function (args) {send("LeChangeData");}});

var LeClone = Module.findExportByName("olecli32.dll", "LeClone")
Interceptor.attach(LeClone, {onLeave: function (args) {send("LeClone");}});

var LeClose = Module.findExportByName("olecli32.dll", "LeClose")
Interceptor.attach(LeClose, {onLeave: function (args) {send("LeClose");}});

var LeCopy = Module.findExportByName("olecli32.dll", "LeCopy")
Interceptor.attach(LeCopy, {onLeave: function (args) {send("LeCopy");}});

var LeCopyFromLink = Module.findExportByName("olecli32.dll", "LeCopyFromLink")
Interceptor.attach(LeCopyFromLink, {onLeave: function (args) {send("LeCopyFromLink");}});

var LeCreateInvisible = Module.findExportByName("olecli32.dll", "LeCreateInvisible")
Interceptor.attach(LeCreateInvisible, {onLeave: function (args) {send("LeCreateInvisible");}});

var LeDraw = Module.findExportByName("olecli32.dll", "LeDraw")
Interceptor.attach(LeDraw, {onLeave: function (args) {send("LeDraw");}});

var LeEnumFormat = Module.findExportByName("olecli32.dll", "LeEnumFormat")
Interceptor.attach(LeEnumFormat, {onLeave: function (args) {send("LeEnumFormat");}});

var LeEqual = Module.findExportByName("olecli32.dll", "LeEqual")
Interceptor.attach(LeEqual, {onLeave: function (args) {send("LeEqual");}});

var LeExecute = Module.findExportByName("olecli32.dll", "LeExecute")
Interceptor.attach(LeExecute, {onLeave: function (args) {send("LeExecute");}});

var LeGetData = Module.findExportByName("olecli32.dll", "LeGetData")
Interceptor.attach(LeGetData, {onLeave: function (args) {send("LeGetData");}});

var LeGetUpdateOptions = Module.findExportByName("olecli32.dll", "LeGetUpdateOptions")
Interceptor.attach(LeGetUpdateOptions, {onLeave: function (args) {send("LeGetUpdateOptions");}});

var LeObjectConvert = Module.findExportByName("olecli32.dll", "LeObjectConvert")
Interceptor.attach(LeObjectConvert, {onLeave: function (args) {send("LeObjectConvert");}});

var LeObjectLong = Module.findExportByName("olecli32.dll", "LeObjectLong")
Interceptor.attach(LeObjectLong, {onLeave: function (args) {send("LeObjectLong");}});

var LeQueryBounds = Module.findExportByName("olecli32.dll", "LeQueryBounds")
Interceptor.attach(LeQueryBounds, {onLeave: function (args) {send("LeQueryBounds");}});

var LeQueryOpen = Module.findExportByName("olecli32.dll", "LeQueryOpen")
Interceptor.attach(LeQueryOpen, {onLeave: function (args) {send("LeQueryOpen");}});

var LeQueryOutOfDate = Module.findExportByName("olecli32.dll", "LeQueryOutOfDate")
Interceptor.attach(LeQueryOutOfDate, {onLeave: function (args) {send("LeQueryOutOfDate");}});

var LeQueryProtocol = Module.findExportByName("olecli32.dll", "LeQueryProtocol")
Interceptor.attach(LeQueryProtocol, {onLeave: function (args) {send("LeQueryProtocol");}});

var LeQueryType = Module.findExportByName("olecli32.dll", "LeQueryType")
Interceptor.attach(LeQueryType, {onLeave: function (args) {send("LeQueryType");}});

var LeReconnect = Module.findExportByName("olecli32.dll", "LeReconnect")
Interceptor.attach(LeReconnect, {onLeave: function (args) {send("LeReconnect");}});

var LeRelease = Module.findExportByName("olecli32.dll", "LeRelease")
Interceptor.attach(LeRelease, {onLeave: function (args) {send("LeRelease");}});

var LeSaveToStream = Module.findExportByName("olecli32.dll", "LeSaveToStream")
Interceptor.attach(LeSaveToStream, {onLeave: function (args) {send("LeSaveToStream");}});

var LeSetBounds = Module.findExportByName("olecli32.dll", "LeSetBounds")
Interceptor.attach(LeSetBounds, {onLeave: function (args) {send("LeSetBounds");}});

var LeSetData = Module.findExportByName("olecli32.dll", "LeSetData")
Interceptor.attach(LeSetData, {onLeave: function (args) {send("LeSetData");}});

var LeSetHostNames = Module.findExportByName("olecli32.dll", "LeSetHostNames")
Interceptor.attach(LeSetHostNames, {onLeave: function (args) {send("LeSetHostNames");}});

var LeSetTargetDevice = Module.findExportByName("olecli32.dll", "LeSetTargetDevice")
Interceptor.attach(LeSetTargetDevice, {onLeave: function (args) {send("LeSetTargetDevice");}});

var LeSetUpdateOptions = Module.findExportByName("olecli32.dll", "LeSetUpdateOptions")
Interceptor.attach(LeSetUpdateOptions, {onLeave: function (args) {send("LeSetUpdateOptions");}});

var LeShow = Module.findExportByName("olecli32.dll", "LeShow")
Interceptor.attach(LeShow, {onLeave: function (args) {send("LeShow");}});

var LeUpdate = Module.findExportByName("olecli32.dll", "LeUpdate")
Interceptor.attach(LeUpdate, {onLeave: function (args) {send("LeUpdate");}});

var MfCallbackFunc = Module.findExportByName("olecli32.dll", "MfCallbackFunc")
Interceptor.attach(MfCallbackFunc, {onLeave: function (args) {send("MfCallbackFunc");}});

var MfChangeData = Module.findExportByName("olecli32.dll", "MfChangeData")
Interceptor.attach(MfChangeData, {onLeave: function (args) {send("MfChangeData");}});

var MfClone = Module.findExportByName("olecli32.dll", "MfClone")
Interceptor.attach(MfClone, {onLeave: function (args) {send("MfClone");}});

var MfCopy = Module.findExportByName("olecli32.dll", "MfCopy")
Interceptor.attach(MfCopy, {onLeave: function (args) {send("MfCopy");}});

var MfDraw = Module.findExportByName("olecli32.dll", "MfDraw")
Interceptor.attach(MfDraw, {onLeave: function (args) {send("MfDraw");}});

var MfEnumFormat = Module.findExportByName("olecli32.dll", "MfEnumFormat")
Interceptor.attach(MfEnumFormat, {onLeave: function (args) {send("MfEnumFormat");}});

var MfEqual = Module.findExportByName("olecli32.dll", "MfEqual")
Interceptor.attach(MfEqual, {onLeave: function (args) {send("MfEqual");}});

var MfGetData = Module.findExportByName("olecli32.dll", "MfGetData")
Interceptor.attach(MfGetData, {onLeave: function (args) {send("MfGetData");}});

var MfQueryBounds = Module.findExportByName("olecli32.dll", "MfQueryBounds")
Interceptor.attach(MfQueryBounds, {onLeave: function (args) {send("MfQueryBounds");}});

var MfRelease = Module.findExportByName("olecli32.dll", "MfRelease")
Interceptor.attach(MfRelease, {onLeave: function (args) {send("MfRelease");}});

var MfSaveToStream = Module.findExportByName("olecli32.dll", "MfSaveToStream")
Interceptor.attach(MfSaveToStream, {onLeave: function (args) {send("MfSaveToStream");}});

var ObjQueryName = Module.findExportByName("olecli32.dll", "ObjQueryName")
Interceptor.attach(ObjQueryName, {onLeave: function (args) {send("ObjQueryName");}});

var ObjQuerySize = Module.findExportByName("olecli32.dll", "ObjQuerySize")
Interceptor.attach(ObjQuerySize, {onLeave: function (args) {send("ObjQuerySize");}});

var ObjQueryType = Module.findExportByName("olecli32.dll", "ObjQueryType")
Interceptor.attach(ObjQueryType, {onLeave: function (args) {send("ObjQueryType");}});

var ObjRename = Module.findExportByName("olecli32.dll", "ObjRename")
Interceptor.attach(ObjRename, {onLeave: function (args) {send("ObjRename");}});

var OleActivate = Module.findExportByName("olecli32.dll", "OleActivate")
Interceptor.attach(OleActivate, {onLeave: function (args) {send("OleActivate");}});

var OleClone = Module.findExportByName("olecli32.dll", "OleClone")
Interceptor.attach(OleClone, {onLeave: function (args) {send("OleClone");}});

var OleClose = Module.findExportByName("olecli32.dll", "OleClose")
Interceptor.attach(OleClose, {onLeave: function (args) {send("OleClose");}});

var OleCopyFromLink = Module.findExportByName("olecli32.dll", "OleCopyFromLink")
Interceptor.attach(OleCopyFromLink, {onLeave: function (args) {send("OleCopyFromLink");}});

var OleCopyToClipboard = Module.findExportByName("olecli32.dll", "OleCopyToClipboard")
Interceptor.attach(OleCopyToClipboard, {onLeave: function (args) {send("OleCopyToClipboard");}});

var OleCreate = Module.findExportByName("olecli32.dll", "OleCreate")
Interceptor.attach(OleCreate, {onLeave: function (args) {send("OleCreate");}});

var OleCreateFromClip = Module.findExportByName("olecli32.dll", "OleCreateFromClip")
Interceptor.attach(OleCreateFromClip, {onLeave: function (args) {send("OleCreateFromClip");}});

var OleCreateFromFile = Module.findExportByName("olecli32.dll", "OleCreateFromFile")
Interceptor.attach(OleCreateFromFile, {onLeave: function (args) {send("OleCreateFromFile");}});

var OleCreateFromTemplate = Module.findExportByName("olecli32.dll", "OleCreateFromTemplate")
Interceptor.attach(OleCreateFromTemplate, {onLeave: function (args) {send("OleCreateFromTemplate");}});

var OleCreateInvisible = Module.findExportByName("olecli32.dll", "OleCreateInvisible")
Interceptor.attach(OleCreateInvisible, {onLeave: function (args) {send("OleCreateInvisible");}});

var OleCreateLinkFromClip = Module.findExportByName("olecli32.dll", "OleCreateLinkFromClip")
Interceptor.attach(OleCreateLinkFromClip, {onLeave: function (args) {send("OleCreateLinkFromClip");}});

var OleCreateLinkFromFile = Module.findExportByName("olecli32.dll", "OleCreateLinkFromFile")
Interceptor.attach(OleCreateLinkFromFile, {onLeave: function (args) {send("OleCreateLinkFromFile");}});

var OleDelete = Module.findExportByName("olecli32.dll", "OleDelete")
Interceptor.attach(OleDelete, {onLeave: function (args) {send("OleDelete");}});

var OleDraw = Module.findExportByName("olecli32.dll", "OleDraw")
Interceptor.attach(OleDraw, {onLeave: function (args) {send("OleDraw");}});

var OleEnumFormats = Module.findExportByName("olecli32.dll", "OleEnumFormats")
Interceptor.attach(OleEnumFormats, {onLeave: function (args) {send("OleEnumFormats");}});

var OleEnumObjects = Module.findExportByName("olecli32.dll", "OleEnumObjects")
Interceptor.attach(OleEnumObjects, {onLeave: function (args) {send("OleEnumObjects");}});

var OleEqual = Module.findExportByName("olecli32.dll", "OleEqual")
Interceptor.attach(OleEqual, {onLeave: function (args) {send("OleEqual");}});

var OleExecute = Module.findExportByName("olecli32.dll", "OleExecute")
Interceptor.attach(OleExecute, {onLeave: function (args) {send("OleExecute");}});

var OleGetData = Module.findExportByName("olecli32.dll", "OleGetData")
Interceptor.attach(OleGetData, {onLeave: function (args) {send("OleGetData");}});

var OleGetLinkUpdateOptions = Module.findExportByName("olecli32.dll", "OleGetLinkUpdateOptions")
Interceptor.attach(OleGetLinkUpdateOptions, {onLeave: function (args) {send("OleGetLinkUpdateOptions");}});

var OleIsDcMeta = Module.findExportByName("olecli32.dll", "OleIsDcMeta")
Interceptor.attach(OleIsDcMeta, {onLeave: function (args) {send("OleIsDcMeta");}});

var OleLoadFromStream = Module.findExportByName("olecli32.dll", "OleLoadFromStream")
Interceptor.attach(OleLoadFromStream, {onLeave: function (args) {send("OleLoadFromStream");}});

var OleLockServer = Module.findExportByName("olecli32.dll", "OleLockServer")
Interceptor.attach(OleLockServer, {onLeave: function (args) {send("OleLockServer");}});

var OleObjectConvert = Module.findExportByName("olecli32.dll", "OleObjectConvert")
Interceptor.attach(OleObjectConvert, {onLeave: function (args) {send("OleObjectConvert");}});

var OleQueryBounds = Module.findExportByName("olecli32.dll", "OleQueryBounds")
Interceptor.attach(OleQueryBounds, {onLeave: function (args) {send("OleQueryBounds");}});

var OleQueryClientVersion = Module.findExportByName("olecli32.dll", "OleQueryClientVersion")
Interceptor.attach(OleQueryClientVersion, {onLeave: function (args) {send("OleQueryClientVersion");}});

var OleQueryCreateFromClip = Module.findExportByName("olecli32.dll", "OleQueryCreateFromClip")
Interceptor.attach(OleQueryCreateFromClip, {onLeave: function (args) {send("OleQueryCreateFromClip");}});

var OleQueryLinkFromClip = Module.findExportByName("olecli32.dll", "OleQueryLinkFromClip")
Interceptor.attach(OleQueryLinkFromClip, {onLeave: function (args) {send("OleQueryLinkFromClip");}});

var OleQueryName = Module.findExportByName("olecli32.dll", "OleQueryName")
Interceptor.attach(OleQueryName, {onLeave: function (args) {send("OleQueryName");}});

var OleQueryOpen = Module.findExportByName("olecli32.dll", "OleQueryOpen")
Interceptor.attach(OleQueryOpen, {onLeave: function (args) {send("OleQueryOpen");}});

var OleQueryOutOfDate = Module.findExportByName("olecli32.dll", "OleQueryOutOfDate")
Interceptor.attach(OleQueryOutOfDate, {onLeave: function (args) {send("OleQueryOutOfDate");}});

var OleQueryProtocol = Module.findExportByName("olecli32.dll", "OleQueryProtocol")
Interceptor.attach(OleQueryProtocol, {onLeave: function (args) {send("OleQueryProtocol");}});

var OleQueryReleaseError = Module.findExportByName("olecli32.dll", "OleQueryReleaseError")
Interceptor.attach(OleQueryReleaseError, {onLeave: function (args) {send("OleQueryReleaseError");}});

var OleQueryReleaseMethod = Module.findExportByName("olecli32.dll", "OleQueryReleaseMethod")
Interceptor.attach(OleQueryReleaseMethod, {onLeave: function (args) {send("OleQueryReleaseMethod");}});

var OleQueryReleaseStatus = Module.findExportByName("olecli32.dll", "OleQueryReleaseStatus")
Interceptor.attach(OleQueryReleaseStatus, {onLeave: function (args) {send("OleQueryReleaseStatus");}});

var OleQuerySize = Module.findExportByName("olecli32.dll", "OleQuerySize")
Interceptor.attach(OleQuerySize, {onLeave: function (args) {send("OleQuerySize");}});

var OleQueryType = Module.findExportByName("olecli32.dll", "OleQueryType")
Interceptor.attach(OleQueryType, {onLeave: function (args) {send("OleQueryType");}});

var OleReconnect = Module.findExportByName("olecli32.dll", "OleReconnect")
Interceptor.attach(OleReconnect, {onLeave: function (args) {send("OleReconnect");}});

var OleRegisterClientDoc = Module.findExportByName("olecli32.dll", "OleRegisterClientDoc")
Interceptor.attach(OleRegisterClientDoc, {onLeave: function (args) {send("OleRegisterClientDoc");}});

var OleRelease = Module.findExportByName("olecli32.dll", "OleRelease")
Interceptor.attach(OleRelease, {onLeave: function (args) {send("OleRelease");}});

var OleRename = Module.findExportByName("olecli32.dll", "OleRename")
Interceptor.attach(OleRename, {onLeave: function (args) {send("OleRename");}});

var OleRenameClientDoc = Module.findExportByName("olecli32.dll", "OleRenameClientDoc")
Interceptor.attach(OleRenameClientDoc, {onLeave: function (args) {send("OleRenameClientDoc");}});

var OleRequestData = Module.findExportByName("olecli32.dll", "OleRequestData")
Interceptor.attach(OleRequestData, {onLeave: function (args) {send("OleRequestData");}});

var OleRevertClientDoc = Module.findExportByName("olecli32.dll", "OleRevertClientDoc")
Interceptor.attach(OleRevertClientDoc, {onLeave: function (args) {send("OleRevertClientDoc");}});

var OleRevokeClientDoc = Module.findExportByName("olecli32.dll", "OleRevokeClientDoc")
Interceptor.attach(OleRevokeClientDoc, {onLeave: function (args) {send("OleRevokeClientDoc");}});

var OleSaveToStream = Module.findExportByName("olecli32.dll", "OleSaveToStream")
Interceptor.attach(OleSaveToStream, {onLeave: function (args) {send("OleSaveToStream");}});

var OleSavedClientDoc = Module.findExportByName("olecli32.dll", "OleSavedClientDoc")
Interceptor.attach(OleSavedClientDoc, {onLeave: function (args) {send("OleSavedClientDoc");}});

var OleSetBounds = Module.findExportByName("olecli32.dll", "OleSetBounds")
Interceptor.attach(OleSetBounds, {onLeave: function (args) {send("OleSetBounds");}});

var OleSetColorScheme = Module.findExportByName("olecli32.dll", "OleSetColorScheme")
Interceptor.attach(OleSetColorScheme, {onLeave: function (args) {send("OleSetColorScheme");}});

var OleSetData = Module.findExportByName("olecli32.dll", "OleSetData")
Interceptor.attach(OleSetData, {onLeave: function (args) {send("OleSetData");}});

var OleSetHostNames = Module.findExportByName("olecli32.dll", "OleSetHostNames")
Interceptor.attach(OleSetHostNames, {onLeave: function (args) {send("OleSetHostNames");}});

var OleSetLinkUpdateOptions = Module.findExportByName("olecli32.dll", "OleSetLinkUpdateOptions")
Interceptor.attach(OleSetLinkUpdateOptions, {onLeave: function (args) {send("OleSetLinkUpdateOptions");}});

var OleSetTargetDevice = Module.findExportByName("olecli32.dll", "OleSetTargetDevice")
Interceptor.attach(OleSetTargetDevice, {onLeave: function (args) {send("OleSetTargetDevice");}});

var OleUnlockServer = Module.findExportByName("olecli32.dll", "OleUnlockServer")
Interceptor.attach(OleUnlockServer, {onLeave: function (args) {send("OleUnlockServer");}});

var OleUpdate = Module.findExportByName("olecli32.dll", "OleUpdate")
Interceptor.attach(OleUpdate, {onLeave: function (args) {send("OleUpdate");}});

var PbCopyToClipboard = Module.findExportByName("olecli32.dll", "PbCopyToClipboard")
Interceptor.attach(PbCopyToClipboard, {onLeave: function (args) {send("PbCopyToClipboard");}});

var PbCreate = Module.findExportByName("olecli32.dll", "PbCreate")
Interceptor.attach(PbCreate, {onLeave: function (args) {send("PbCreate");}});

var PbCreateFromClip = Module.findExportByName("olecli32.dll", "PbCreateFromClip")
Interceptor.attach(PbCreateFromClip, {onLeave: function (args) {send("PbCreateFromClip");}});

var PbCreateFromFile = Module.findExportByName("olecli32.dll", "PbCreateFromFile")
Interceptor.attach(PbCreateFromFile, {onLeave: function (args) {send("PbCreateFromFile");}});

var PbCreateFromTemplate = Module.findExportByName("olecli32.dll", "PbCreateFromTemplate")
Interceptor.attach(PbCreateFromTemplate, {onLeave: function (args) {send("PbCreateFromTemplate");}});

var PbCreateInvisible = Module.findExportByName("olecli32.dll", "PbCreateInvisible")
Interceptor.attach(PbCreateInvisible, {onLeave: function (args) {send("PbCreateInvisible");}});

var PbCreateLinkFromClip = Module.findExportByName("olecli32.dll", "PbCreateLinkFromClip")
Interceptor.attach(PbCreateLinkFromClip, {onLeave: function (args) {send("PbCreateLinkFromClip");}});

var PbCreateLinkFromFile = Module.findExportByName("olecli32.dll", "PbCreateLinkFromFile")
Interceptor.attach(PbCreateLinkFromFile, {onLeave: function (args) {send("PbCreateLinkFromFile");}});

var PbDraw = Module.findExportByName("olecli32.dll", "PbDraw")
Interceptor.attach(PbDraw, {onLeave: function (args) {send("PbDraw");}});

var PbEnumFormats = Module.findExportByName("olecli32.dll", "PbEnumFormats")
Interceptor.attach(PbEnumFormats, {onLeave: function (args) {send("PbEnumFormats");}});

var PbGetData = Module.findExportByName("olecli32.dll", "PbGetData")
Interceptor.attach(PbGetData, {onLeave: function (args) {send("PbGetData");}});

var PbLoadFromStream = Module.findExportByName("olecli32.dll", "PbLoadFromStream")
Interceptor.attach(PbLoadFromStream, {onLeave: function (args) {send("PbLoadFromStream");}});

var PbQueryBounds = Module.findExportByName("olecli32.dll", "PbQueryBounds")
Interceptor.attach(PbQueryBounds, {onLeave: function (args) {send("PbQueryBounds");}});

var SetNetName = Module.findExportByName("olecli32.dll", "SetNetName")
Interceptor.attach(SetNetName, {onLeave: function (args) {send("SetNetName");}});

var SetNextNetDrive = Module.findExportByName("olecli32.dll", "SetNextNetDrive")
Interceptor.attach(SetNextNetDrive, {onLeave: function (args) {send("SetNextNetDrive");}});

var SrvrWndProc = Module.findExportByName("olecli32.dll", "SrvrWndProc")
Interceptor.attach(SrvrWndProc, {onLeave: function (args) {send("SrvrWndProc");}});

var WEP = Module.findExportByName("olecli32.dll", "WEP")
Interceptor.attach(WEP, {onLeave: function (args) {send("WEP");}});

