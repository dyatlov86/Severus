var RtlDeleteElementGenericTable2 = Module.findExportByName("samsrv.dll", "RtlDeleteElementGenericTable2")
Interceptor.attach(RtlDeleteElementGenericTable2, {onLeave: function (args) {send("RtlDeleteElementGenericTable2");}});

var RtlInitializeGenericTable2 = Module.findExportByName("samsrv.dll", "RtlInitializeGenericTable2")
Interceptor.attach(RtlInitializeGenericTable2, {onLeave: function (args) {send("RtlInitializeGenericTable2");}});

var RtlInsertElementGenericTable2 = Module.findExportByName("samsrv.dll", "RtlInsertElementGenericTable2")
Interceptor.attach(RtlInsertElementGenericTable2, {onLeave: function (args) {send("RtlInsertElementGenericTable2");}});

var RtlLookupElementGenericTable2 = Module.findExportByName("samsrv.dll", "RtlLookupElementGenericTable2")
Interceptor.attach(RtlLookupElementGenericTable2, {onLeave: function (args) {send("RtlLookupElementGenericTable2");}});

var SAM_MIDL_user_allocate = Module.findExportByName("samsrv.dll", "SAM_MIDL_user_allocate")
Interceptor.attach(SAM_MIDL_user_allocate, {onLeave: function (args) {send("SAM_MIDL_user_allocate");}});

var SAM_MIDL_user_free = Module.findExportByName("samsrv.dll", "SAM_MIDL_user_free")
Interceptor.attach(SAM_MIDL_user_free, {onLeave: function (args) {send("SAM_MIDL_user_free");}});

var SamDsExtAlloc = Module.findExportByName("samsrv.dll", "SamDsExtAlloc")
Interceptor.attach(SamDsExtAlloc, {onLeave: function (args) {send("SamDsExtAlloc");}});

var SamDsExtFree = Module.findExportByName("samsrv.dll", "SamDsExtFree")
Interceptor.attach(SamDsExtFree, {onLeave: function (args) {send("SamDsExtFree");}});

var SamIAccountRestrictions = Module.findExportByName("samsrv.dll", "SamIAccountRestrictions")
Interceptor.attach(SamIAccountRestrictions, {onLeave: function (args) {send("SamIAccountRestrictions");}});

var SamIAddDSNameToAlias = Module.findExportByName("samsrv.dll", "SamIAddDSNameToAlias")
Interceptor.attach(SamIAddDSNameToAlias, {onLeave: function (args) {send("SamIAddDSNameToAlias");}});

var SamIChangePasswordForeignUser = Module.findExportByName("samsrv.dll", "SamIChangePasswordForeignUser")
Interceptor.attach(SamIChangePasswordForeignUser, {onLeave: function (args) {send("SamIChangePasswordForeignUser");}});

var SamIClaimIsValid = Module.findExportByName("samsrv.dll", "SamIClaimIsValid")
Interceptor.attach(SamIClaimIsValid, {onLeave: function (args) {send("SamIClaimIsValid");}});

var SamIConnect = Module.findExportByName("samsrv.dll", "SamIConnect")
Interceptor.attach(SamIConnect, {onLeave: function (args) {send("SamIConnect");}});

var SamIConvertSecurityAttributesToClaimsBlob = Module.findExportByName("samsrv.dll", "SamIConvertSecurityAttributesToClaimsBlob")
Interceptor.attach(SamIConvertSecurityAttributesToClaimsBlob, {onLeave: function (args) {send("SamIConvertSecurityAttributesToClaimsBlob");}});

var SamICopyCurrentDomainAccountSettings = Module.findExportByName("samsrv.dll", "SamICopyCurrentDomainAccountSettings")
Interceptor.attach(SamICopyCurrentDomainAccountSettings, {onLeave: function (args) {send("SamICopyCurrentDomainAccountSettings");}});

var SamICreateKrbTgt = Module.findExportByName("samsrv.dll", "SamICreateKrbTgt")
Interceptor.attach(SamICreateKrbTgt, {onLeave: function (args) {send("SamICreateKrbTgt");}});

var SamIDecodeClaimsBlob = Module.findExportByName("samsrv.dll", "SamIDecodeClaimsBlob")
Interceptor.attach(SamIDecodeClaimsBlob, {onLeave: function (args) {send("SamIDecodeClaimsBlob");}});

var SamIDecodeClaimsBlobIntoClaimsSet = Module.findExportByName("samsrv.dll", "SamIDecodeClaimsBlobIntoClaimsSet")
Interceptor.attach(SamIDecodeClaimsBlobIntoClaimsSet, {onLeave: function (args) {send("SamIDecodeClaimsBlobIntoClaimsSet");}});

var SamIDecodeClaimsBlobToAuthz = Module.findExportByName("samsrv.dll", "SamIDecodeClaimsBlobToAuthz")
Interceptor.attach(SamIDecodeClaimsBlobToAuthz, {onLeave: function (args) {send("SamIDecodeClaimsBlobToAuthz");}});

var SamIDemote = Module.findExportByName("samsrv.dll", "SamIDemote")
Interceptor.attach(SamIDemote, {onLeave: function (args) {send("SamIDemote");}});

var SamIDemoteUndo = Module.findExportByName("samsrv.dll", "SamIDemoteUndo")
Interceptor.attach(SamIDemoteUndo, {onLeave: function (args) {send("SamIDemoteUndo");}});

var SamIDoFSMORoleChange = Module.findExportByName("samsrv.dll", "SamIDoFSMORoleChange")
Interceptor.attach(SamIDoFSMORoleChange, {onLeave: function (args) {send("SamIDoFSMORoleChange");}});

var SamIFreeAuthzSecurityAttributesInfo = Module.findExportByName("samsrv.dll", "SamIFreeAuthzSecurityAttributesInfo")
Interceptor.attach(SamIFreeAuthzSecurityAttributesInfo, {onLeave: function (args) {send("SamIFreeAuthzSecurityAttributesInfo");}});

var SamIFreeClaimsBlob = Module.findExportByName("samsrv.dll", "SamIFreeClaimsBlob")
Interceptor.attach(SamIFreeClaimsBlob, {onLeave: function (args) {send("SamIFreeClaimsBlob");}});

var SamIFreeDecodedClaimsSet = Module.findExportByName("samsrv.dll", "SamIFreeDecodedClaimsSet")
Interceptor.attach(SamIFreeDecodedClaimsSet, {onLeave: function (args) {send("SamIFreeDecodedClaimsSet");}});

var SamIFreeLookupNamesInfo = Module.findExportByName("samsrv.dll", "SamIFreeLookupNamesInfo")
Interceptor.attach(SamIFreeLookupNamesInfo, {onLeave: function (args) {send("SamIFreeLookupNamesInfo");}});

var SamIFreeLookupSidsInfo = Module.findExportByName("samsrv.dll", "SamIFreeLookupSidsInfo")
Interceptor.attach(SamIFreeLookupSidsInfo, {onLeave: function (args) {send("SamIFreeLookupSidsInfo");}});

var SamIFreeOidList = Module.findExportByName("samsrv.dll", "SamIFreeOidList")
Interceptor.attach(SamIFreeOidList, {onLeave: function (args) {send("SamIFreeOidList");}});

var SamIFreeRealmList = Module.findExportByName("samsrv.dll", "SamIFreeRealmList")
Interceptor.attach(SamIFreeRealmList, {onLeave: function (args) {send("SamIFreeRealmList");}});

var SamIFreeSecurityAttributesInfo = Module.findExportByName("samsrv.dll", "SamIFreeSecurityAttributesInfo")
Interceptor.attach(SamIFreeSecurityAttributesInfo, {onLeave: function (args) {send("SamIFreeSecurityAttributesInfo");}});

var SamIFreeSidAndAttributesList = Module.findExportByName("samsrv.dll", "SamIFreeSidAndAttributesList")
Interceptor.attach(SamIFreeSidAndAttributesList, {onLeave: function (args) {send("SamIFreeSidAndAttributesList");}});

var SamIFreeSidArray = Module.findExportByName("samsrv.dll", "SamIFreeSidArray")
Interceptor.attach(SamIFreeSidArray, {onLeave: function (args) {send("SamIFreeSidArray");}});

var SamIFreeVoid = Module.findExportByName("samsrv.dll", "SamIFreeVoid")
Interceptor.attach(SamIFreeVoid, {onLeave: function (args) {send("SamIFreeVoid");}});

var SamIFree_SAMPR_DISPLAY_INFO_BUFFER = Module.findExportByName("samsrv.dll", "SamIFree_SAMPR_DISPLAY_INFO_BUFFER")
Interceptor.attach(SamIFree_SAMPR_DISPLAY_INFO_BUFFER, {onLeave: function (args) {send("SamIFree_SAMPR_DISPLAY_INFO_BUFFER");}});

var SamIFree_SAMPR_DOMAIN_INFO_BUFFER = Module.findExportByName("samsrv.dll", "SamIFree_SAMPR_DOMAIN_INFO_BUFFER")
Interceptor.attach(SamIFree_SAMPR_DOMAIN_INFO_BUFFER, {onLeave: function (args) {send("SamIFree_SAMPR_DOMAIN_INFO_BUFFER");}});

var SamIFree_SAMPR_ENUMERATION_BUFFER = Module.findExportByName("samsrv.dll", "SamIFree_SAMPR_ENUMERATION_BUFFER")
Interceptor.attach(SamIFree_SAMPR_ENUMERATION_BUFFER, {onLeave: function (args) {send("SamIFree_SAMPR_ENUMERATION_BUFFER");}});

var SamIFree_SAMPR_GET_GROUPS_BUFFER = Module.findExportByName("samsrv.dll", "SamIFree_SAMPR_GET_GROUPS_BUFFER")
Interceptor.attach(SamIFree_SAMPR_GET_GROUPS_BUFFER, {onLeave: function (args) {send("SamIFree_SAMPR_GET_GROUPS_BUFFER");}});

var SamIFree_SAMPR_RETURNED_USTRING_ARRAY = Module.findExportByName("samsrv.dll", "SamIFree_SAMPR_RETURNED_USTRING_ARRAY")
Interceptor.attach(SamIFree_SAMPR_RETURNED_USTRING_ARRAY, {onLeave: function (args) {send("SamIFree_SAMPR_RETURNED_USTRING_ARRAY");}});

var SamIFree_SAMPR_ULONG_ARRAY = Module.findExportByName("samsrv.dll", "SamIFree_SAMPR_ULONG_ARRAY")
Interceptor.attach(SamIFree_SAMPR_ULONG_ARRAY, {onLeave: function (args) {send("SamIFree_SAMPR_ULONG_ARRAY");}});

var SamIFree_SAMPR_USER_INFO_BUFFER = Module.findExportByName("samsrv.dll", "SamIFree_SAMPR_USER_INFO_BUFFER")
Interceptor.attach(SamIFree_SAMPR_USER_INFO_BUFFER, {onLeave: function (args) {send("SamIFree_SAMPR_USER_INFO_BUFFER");}});

var SamIFree_UserInternal6Information = Module.findExportByName("samsrv.dll", "SamIFree_UserInternal6Information")
Interceptor.attach(SamIFree_UserInternal6Information, {onLeave: function (args) {send("SamIFree_UserInternal6Information");}});

var SamIGetAliasMembership = Module.findExportByName("samsrv.dll", "SamIGetAliasMembership")
Interceptor.attach(SamIGetAliasMembership, {onLeave: function (args) {send("SamIGetAliasMembership");}});

var SamIGetConfigurationOidList = Module.findExportByName("samsrv.dll", "SamIGetConfigurationOidList")
Interceptor.attach(SamIGetConfigurationOidList, {onLeave: function (args) {send("SamIGetConfigurationOidList");}});

var SamIGetDefaultAdministratorName = Module.findExportByName("samsrv.dll", "SamIGetDefaultAdministratorName")
Interceptor.attach(SamIGetDefaultAdministratorName, {onLeave: function (args) {send("SamIGetDefaultAdministratorName");}});

var SamIGetResourceGroupMembershipsTransitive = Module.findExportByName("samsrv.dll", "SamIGetResourceGroupMembershipsTransitive")
Interceptor.attach(SamIGetResourceGroupMembershipsTransitive, {onLeave: function (args) {send("SamIGetResourceGroupMembershipsTransitive");}});

var SamIGetResourceGroupMembershipsTransitive2 = Module.findExportByName("samsrv.dll", "SamIGetResourceGroupMembershipsTransitive2")
Interceptor.attach(SamIGetResourceGroupMembershipsTransitive2, {onLeave: function (args) {send("SamIGetResourceGroupMembershipsTransitive2");}});

var SamIGetUserLogonInformation = Module.findExportByName("samsrv.dll", "SamIGetUserLogonInformation")
Interceptor.attach(SamIGetUserLogonInformation, {onLeave: function (args) {send("SamIGetUserLogonInformation");}});

var SamIGetUserLogonInformation2 = Module.findExportByName("samsrv.dll", "SamIGetUserLogonInformation2")
Interceptor.attach(SamIGetUserLogonInformation2, {onLeave: function (args) {send("SamIGetUserLogonInformation2");}});

var SamIGetUserLogonInformation3 = Module.findExportByName("samsrv.dll", "SamIGetUserLogonInformation3")
Interceptor.attach(SamIGetUserLogonInformation3, {onLeave: function (args) {send("SamIGetUserLogonInformation3");}});

var SamIGetUserLogonInformationEx = Module.findExportByName("samsrv.dll", "SamIGetUserLogonInformationEx")
Interceptor.attach(SamIGetUserLogonInformationEx, {onLeave: function (args) {send("SamIGetUserLogonInformationEx");}});

var SamIHandleObjectUpdate = Module.findExportByName("samsrv.dll", "SamIHandleObjectUpdate")
Interceptor.attach(SamIHandleObjectUpdate, {onLeave: function (args) {send("SamIHandleObjectUpdate");}});

var SamIImpersonateNullSession = Module.findExportByName("samsrv.dll", "SamIImpersonateNullSession")
Interceptor.attach(SamIImpersonateNullSession, {onLeave: function (args) {send("SamIImpersonateNullSession");}});

var SamIInitialize = Module.findExportByName("samsrv.dll", "SamIInitialize")
Interceptor.attach(SamIInitialize, {onLeave: function (args) {send("SamIInitialize");}});

var SamIIsDownlevelDcUpgrade = Module.findExportByName("samsrv.dll", "SamIIsDownlevelDcUpgrade")
Interceptor.attach(SamIIsDownlevelDcUpgrade, {onLeave: function (args) {send("SamIIsDownlevelDcUpgrade");}});

var SamIIsExtendedSidMode = Module.findExportByName("samsrv.dll", "SamIIsExtendedSidMode")
Interceptor.attach(SamIIsExtendedSidMode, {onLeave: function (args) {send("SamIIsExtendedSidMode");}});

var SamIIsRebootAfterPromotion = Module.findExportByName("samsrv.dll", "SamIIsRebootAfterPromotion")
Interceptor.attach(SamIIsRebootAfterPromotion, {onLeave: function (args) {send("SamIIsRebootAfterPromotion");}});

var SamIIsSetupInProgress = Module.findExportByName("samsrv.dll", "SamIIsSetupInProgress")
Interceptor.attach(SamIIsSetupInProgress, {onLeave: function (args) {send("SamIIsSetupInProgress");}});

var SamILoadDownlevelDatabase = Module.findExportByName("samsrv.dll", "SamILoadDownlevelDatabase")
Interceptor.attach(SamILoadDownlevelDatabase, {onLeave: function (args) {send("SamILoadDownlevelDatabase");}});

var SamILookupNamesBySid = Module.findExportByName("samsrv.dll", "SamILookupNamesBySid")
Interceptor.attach(SamILookupNamesBySid, {onLeave: function (args) {send("SamILookupNamesBySid");}});

var SamILookupNamesInDomain = Module.findExportByName("samsrv.dll", "SamILookupNamesInDomain")
Interceptor.attach(SamILookupNamesInDomain, {onLeave: function (args) {send("SamILookupNamesInDomain");}});

var SamILookupSidsByName = Module.findExportByName("samsrv.dll", "SamILookupSidsByName")
Interceptor.attach(SamILookupSidsByName, {onLeave: function (args) {send("SamILookupSidsByName");}});

var SamILoopbackConnect = Module.findExportByName("samsrv.dll", "SamILoopbackConnect")
Interceptor.attach(SamILoopbackConnect, {onLeave: function (args) {send("SamILoopbackConnect");}});

var SamIMixedDomain = Module.findExportByName("samsrv.dll", "SamIMixedDomain")
Interceptor.attach(SamIMixedDomain, {onLeave: function (args) {send("SamIMixedDomain");}});

var SamIMixedDomain2 = Module.findExportByName("samsrv.dll", "SamIMixedDomain2")
Interceptor.attach(SamIMixedDomain2, {onLeave: function (args) {send("SamIMixedDomain2");}});

var SamINT4UpgradeInProgress = Module.findExportByName("samsrv.dll", "SamINT4UpgradeInProgress")
Interceptor.attach(SamINT4UpgradeInProgress, {onLeave: function (args) {send("SamINT4UpgradeInProgress");}});

var SamINetLogonPing = Module.findExportByName("samsrv.dll", "SamINetLogonPing")
Interceptor.attach(SamINetLogonPing, {onLeave: function (args) {send("SamINetLogonPing");}});

var SamINotifyRoleChange = Module.findExportByName("samsrv.dll", "SamINotifyRoleChange")
Interceptor.attach(SamINotifyRoleChange, {onLeave: function (args) {send("SamINotifyRoleChange");}});

var SamIOpenUserByAlternateId = Module.findExportByName("samsrv.dll", "SamIOpenUserByAlternateId")
Interceptor.attach(SamIOpenUserByAlternateId, {onLeave: function (args) {send("SamIOpenUserByAlternateId");}});

var SamIPromote = Module.findExportByName("samsrv.dll", "SamIPromote")
Interceptor.attach(SamIPromote, {onLeave: function (args) {send("SamIPromote");}});

var SamIPromoteUndo = Module.findExportByName("samsrv.dll", "SamIPromoteUndo")
Interceptor.attach(SamIPromoteUndo, {onLeave: function (args) {send("SamIPromoteUndo");}});

var SamIPurgeSecrets = Module.findExportByName("samsrv.dll", "SamIPurgeSecrets")
Interceptor.attach(SamIPurgeSecrets, {onLeave: function (args) {send("SamIPurgeSecrets");}});

var SamIQueryAccountSecretsCachability = Module.findExportByName("samsrv.dll", "SamIQueryAccountSecretsCachability")
Interceptor.attach(SamIQueryAccountSecretsCachability, {onLeave: function (args) {send("SamIQueryAccountSecretsCachability");}});

var SamIQueryCapabilities = Module.findExportByName("samsrv.dll", "SamIQueryCapabilities")
Interceptor.attach(SamIQueryCapabilities, {onLeave: function (args) {send("SamIQueryCapabilities");}});

var SamIQueryRealmList = Module.findExportByName("samsrv.dll", "SamIQueryRealmList")
Interceptor.attach(SamIQueryRealmList, {onLeave: function (args) {send("SamIQueryRealmList");}});

var SamIQueryServerRole = Module.findExportByName("samsrv.dll", "SamIQueryServerRole")
Interceptor.attach(SamIQueryServerRole, {onLeave: function (args) {send("SamIQueryServerRole");}});

var SamIQueryServerRole2 = Module.findExportByName("samsrv.dll", "SamIQueryServerRole2")
Interceptor.attach(SamIQueryServerRole2, {onLeave: function (args) {send("SamIQueryServerRole2");}});

var SamIRandomizeStoredPassword = Module.findExportByName("samsrv.dll", "SamIRandomizeStoredPassword")
Interceptor.attach(SamIRandomizeStoredPassword, {onLeave: function (args) {send("SamIRandomizeStoredPassword");}});

var SamIRandomizeStoredPasswordWithoutExpirationCheck = Module.findExportByName("samsrv.dll", "SamIRandomizeStoredPasswordWithoutExpirationCheck")
Interceptor.attach(SamIRandomizeStoredPasswordWithoutExpirationCheck, {onLeave: function (args) {send("SamIRandomizeStoredPasswordWithoutExpirationCheck");}});

var SamIRemoveDSNameFromAlias = Module.findExportByName("samsrv.dll", "SamIRemoveDSNameFromAlias")
Interceptor.attach(SamIRemoveDSNameFromAlias, {onLeave: function (args) {send("SamIRemoveDSNameFromAlias");}});

var SamIReplaceDownlevelDatabase = Module.findExportByName("samsrv.dll", "SamIReplaceDownlevelDatabase")
Interceptor.attach(SamIReplaceDownlevelDatabase, {onLeave: function (args) {send("SamIReplaceDownlevelDatabase");}});

var SamIReplicateAccountData = Module.findExportByName("samsrv.dll", "SamIReplicateAccountData")
Interceptor.attach(SamIReplicateAccountData, {onLeave: function (args) {send("SamIReplicateAccountData");}});

var SamIResetBadPwdCountOnPdc = Module.findExportByName("samsrv.dll", "SamIResetBadPwdCountOnPdc")
Interceptor.attach(SamIResetBadPwdCountOnPdc, {onLeave: function (args) {send("SamIResetBadPwdCountOnPdc");}});

var SamIRetrieveMultiplePrimaryCredentials = Module.findExportByName("samsrv.dll", "SamIRetrieveMultiplePrimaryCredentials")
Interceptor.attach(SamIRetrieveMultiplePrimaryCredentials, {onLeave: function (args) {send("SamIRetrieveMultiplePrimaryCredentials");}});

var SamIRetrieveNGCKeyCredential = Module.findExportByName("samsrv.dll", "SamIRetrieveNGCKeyCredential")
Interceptor.attach(SamIRetrieveNGCKeyCredential, {onLeave: function (args) {send("SamIRetrieveNGCKeyCredential");}});

var SamIRetrievePrimaryCredentials = Module.findExportByName("samsrv.dll", "SamIRetrievePrimaryCredentials")
Interceptor.attach(SamIRetrievePrimaryCredentials, {onLeave: function (args) {send("SamIRetrievePrimaryCredentials");}});

var SamIRevertNullSession = Module.findExportByName("samsrv.dll", "SamIRevertNullSession")
Interceptor.attach(SamIRevertNullSession, {onLeave: function (args) {send("SamIRevertNullSession");}});

var SamIScorePassword = Module.findExportByName("samsrv.dll", "SamIScorePassword")
Interceptor.attach(SamIScorePassword, {onLeave: function (args) {send("SamIScorePassword");}});

var SamISetAuditingInformation = Module.findExportByName("samsrv.dll", "SamISetAuditingInformation")
Interceptor.attach(SamISetAuditingInformation, {onLeave: function (args) {send("SamISetAuditingInformation");}});

var SamISetMachinePassword = Module.findExportByName("samsrv.dll", "SamISetMachinePassword")
Interceptor.attach(SamISetMachinePassword, {onLeave: function (args) {send("SamISetMachinePassword");}});

var SamISetPasswordForeignUser2 = Module.findExportByName("samsrv.dll", "SamISetPasswordForeignUser2")
Interceptor.attach(SamISetPasswordForeignUser2, {onLeave: function (args) {send("SamISetPasswordForeignUser2");}});

var SamISetPasswordForeignUser3 = Module.findExportByName("samsrv.dll", "SamISetPasswordForeignUser3")
Interceptor.attach(SamISetPasswordForeignUser3, {onLeave: function (args) {send("SamISetPasswordForeignUser3");}});

var SamISetPasswordInfoOnDc = Module.findExportByName("samsrv.dll", "SamISetPasswordInfoOnDc")
Interceptor.attach(SamISetPasswordInfoOnDc, {onLeave: function (args) {send("SamISetPasswordInfoOnDc");}});

var SamIStorePrimaryCredentials = Module.findExportByName("samsrv.dll", "SamIStorePrimaryCredentials")
Interceptor.attach(SamIStorePrimaryCredentials, {onLeave: function (args) {send("SamIStorePrimaryCredentials");}});

var SamITransformClaims = Module.findExportByName("samsrv.dll", "SamITransformClaims")
Interceptor.attach(SamITransformClaims, {onLeave: function (args) {send("SamITransformClaims");}});

var SamIUPNFromUserHandle = Module.findExportByName("samsrv.dll", "SamIUPNFromUserHandle")
Interceptor.attach(SamIUPNFromUserHandle, {onLeave: function (args) {send("SamIUPNFromUserHandle");}});

var SamIUnLoadDownlevelDatabase = Module.findExportByName("samsrv.dll", "SamIUnLoadDownlevelDatabase")
Interceptor.attach(SamIUnLoadDownlevelDatabase, {onLeave: function (args) {send("SamIUnLoadDownlevelDatabase");}});

var SamIUninitialize = Module.findExportByName("samsrv.dll", "SamIUninitialize")
Interceptor.attach(SamIUninitialize, {onLeave: function (args) {send("SamIUninitialize");}});

var SamIUpdateLogonStatistics = Module.findExportByName("samsrv.dll", "SamIUpdateLogonStatistics")
Interceptor.attach(SamIUpdateLogonStatistics, {onLeave: function (args) {send("SamIUpdateLogonStatistics");}});

var SamIValidateAccountName = Module.findExportByName("samsrv.dll", "SamIValidateAccountName")
Interceptor.attach(SamIValidateAccountName, {onLeave: function (args) {send("SamIValidateAccountName");}});

var SamIValidateNewAccountName = Module.findExportByName("samsrv.dll", "SamIValidateNewAccountName")
Interceptor.attach(SamIValidateNewAccountName, {onLeave: function (args) {send("SamIValidateNewAccountName");}});

var SampAccountControlToFlags = Module.findExportByName("samsrv.dll", "SampAccountControlToFlags")
Interceptor.attach(SampAccountControlToFlags, {onLeave: function (args) {send("SampAccountControlToFlags");}});

var SampAcquireReadLock = Module.findExportByName("samsrv.dll", "SampAcquireReadLock")
Interceptor.attach(SampAcquireReadLock, {onLeave: function (args) {send("SampAcquireReadLock");}});

var SampAcquireSamLockExclusive = Module.findExportByName("samsrv.dll", "SampAcquireSamLockExclusive")
Interceptor.attach(SampAcquireSamLockExclusive, {onLeave: function (args) {send("SampAcquireSamLockExclusive");}});

var SampAcquireWriteLock = Module.findExportByName("samsrv.dll", "SampAcquireWriteLock")
Interceptor.attach(SampAcquireWriteLock, {onLeave: function (args) {send("SampAcquireWriteLock");}});

var SampAddAccountToGroupMembers = Module.findExportByName("samsrv.dll", "SampAddAccountToGroupMembers")
Interceptor.attach(SampAddAccountToGroupMembers, {onLeave: function (args) {send("SampAddAccountToGroupMembers");}});

var SampAddAccountsAndApplyMemberships = Module.findExportByName("samsrv.dll", "SampAddAccountsAndApplyMemberships")
Interceptor.attach(SampAddAccountsAndApplyMemberships, {onLeave: function (args) {send("SampAddAccountsAndApplyMemberships");}});

var SampAddDeltaTime = Module.findExportByName("samsrv.dll", "SampAddDeltaTime")
Interceptor.attach(SampAddDeltaTime, {onLeave: function (args) {send("SampAddDeltaTime");}});

var SampAddNonLocalDomainRelativeMemberships = Module.findExportByName("samsrv.dll", "SampAddNonLocalDomainRelativeMemberships")
Interceptor.attach(SampAddNonLocalDomainRelativeMemberships, {onLeave: function (args) {send("SampAddNonLocalDomainRelativeMemberships");}});

var SampAddSameDomainMemberToGlobalOrUniversalGroup = Module.findExportByName("samsrv.dll", "SampAddSameDomainMemberToGlobalOrUniversalGroup")
Interceptor.attach(SampAddSameDomainMemberToGlobalOrUniversalGroup, {onLeave: function (args) {send("SampAddSameDomainMemberToGlobalOrUniversalGroup");}});

var SampAddUserToGroup = Module.findExportByName("samsrv.dll", "SampAddUserToGroup")
Interceptor.attach(SampAddUserToGroup, {onLeave: function (args) {send("SampAddUserToGroup");}});

var SampAlInvalidateAliasInformation = Module.findExportByName("samsrv.dll", "SampAlInvalidateAliasInformation")
Interceptor.attach(SampAlInvalidateAliasInformation, {onLeave: function (args) {send("SampAlInvalidateAliasInformation");}});

var SampAllocateNextCurrentRidFromIndex = Module.findExportByName("samsrv.dll", "SampAllocateNextCurrentRidFromIndex")
Interceptor.attach(SampAllocateNextCurrentRidFromIndex, {onLeave: function (args) {send("SampAllocateNextCurrentRidFromIndex");}});

var SampApplyDomainUpdatesForAllDomains = Module.findExportByName("samsrv.dll", "SampApplyDomainUpdatesForAllDomains")
Interceptor.attach(SampApplyDomainUpdatesForAllDomains, {onLeave: function (args) {send("SampApplyDomainUpdatesForAllDomains");}});

var SampAssignPrimaryGroup = Module.findExportByName("samsrv.dll", "SampAssignPrimaryGroup")
Interceptor.attach(SampAssignPrimaryGroup, {onLeave: function (args) {send("SampAssignPrimaryGroup");}});

var SampAuditAccountEnableDisableChange = Module.findExportByName("samsrv.dll", "SampAuditAccountEnableDisableChange")
Interceptor.attach(SampAuditAccountEnableDisableChange, {onLeave: function (args) {send("SampAuditAccountEnableDisableChange");}});

var SampAuditAccountNameChange = Module.findExportByName("samsrv.dll", "SampAuditAccountNameChange")
Interceptor.attach(SampAuditAccountNameChange, {onLeave: function (args) {send("SampAuditAccountNameChange");}});

var SampAuditAnyEvent = Module.findExportByName("samsrv.dll", "SampAuditAnyEvent")
Interceptor.attach(SampAuditAnyEvent, {onLeave: function (args) {send("SampAuditAnyEvent");}});

var SampAuditGroupTypeChange = Module.findExportByName("samsrv.dll", "SampAuditGroupTypeChange")
Interceptor.attach(SampAuditGroupTypeChange, {onLeave: function (args) {send("SampAuditGroupTypeChange");}});

var SampAuditSidHistory = Module.findExportByName("samsrv.dll", "SampAuditSidHistory")
Interceptor.attach(SampAuditSidHistory, {onLeave: function (args) {send("SampAuditSidHistory");}});

var SampBuildDsNameFromSid = Module.findExportByName("samsrv.dll", "SampBuildDsNameFromSid")
Interceptor.attach(SampBuildDsNameFromSid, {onLeave: function (args) {send("SampBuildDsNameFromSid");}});

var SampBuildSamProtection = Module.findExportByName("samsrv.dll", "SampBuildSamProtection")
Interceptor.attach(SampBuildSamProtection, {onLeave: function (args) {send("SampBuildSamProtection");}});

var SampCalculateLmAndNtOwfPasswords = Module.findExportByName("samsrv.dll", "SampCalculateLmAndNtOwfPasswords")
Interceptor.attach(SampCalculateLmAndNtOwfPasswords, {onLeave: function (args) {send("SampCalculateLmAndNtOwfPasswords");}});

var SampChangeAliasAccountName = Module.findExportByName("samsrv.dll", "SampChangeAliasAccountName")
Interceptor.attach(SampChangeAliasAccountName, {onLeave: function (args) {send("SampChangeAliasAccountName");}});

var SampChangeGroupAccountName = Module.findExportByName("samsrv.dll", "SampChangeGroupAccountName")
Interceptor.attach(SampChangeGroupAccountName, {onLeave: function (args) {send("SampChangeGroupAccountName");}});

var SampChangeUserAccountName = Module.findExportByName("samsrv.dll", "SampChangeUserAccountName")
Interceptor.attach(SampChangeUserAccountName, {onLeave: function (args) {send("SampChangeUserAccountName");}});

var SampCheckForAccountLockout = Module.findExportByName("samsrv.dll", "SampCheckForAccountLockout")
Interceptor.attach(SampCheckForAccountLockout, {onLeave: function (args) {send("SampCheckForAccountLockout");}});

var SampCheckGroupTypeBits = Module.findExportByName("samsrv.dll", "SampCheckGroupTypeBits")
Interceptor.attach(SampCheckGroupTypeBits, {onLeave: function (args) {send("SampCheckGroupTypeBits");}});

var SampCheckSidType = Module.findExportByName("samsrv.dll", "SampCheckSidType")
Interceptor.attach(SampCheckSidType, {onLeave: function (args) {send("SampCheckSidType");}});

var SampCommitBufferedWrites = Module.findExportByName("samsrv.dll", "SampCommitBufferedWrites")
Interceptor.attach(SampCommitBufferedWrites, {onLeave: function (args) {send("SampCommitBufferedWrites");}});

var SampCompareDisplayStrings = Module.findExportByName("samsrv.dll", "SampCompareDisplayStrings")
Interceptor.attach(SampCompareDisplayStrings, {onLeave: function (args) {send("SampCompareDisplayStrings");}});

var SampComputePasswordExpired = Module.findExportByName("samsrv.dll", "SampComputePasswordExpired")
Interceptor.attach(SampComputePasswordExpired, {onLeave: function (args) {send("SampComputePasswordExpired");}});

var SampConnect = Module.findExportByName("samsrv.dll", "SampConnect")
Interceptor.attach(SampConnect, {onLeave: function (args) {send("SampConnect");}});

var SampConvertUiListToApiList = Module.findExportByName("samsrv.dll", "SampConvertUiListToApiList")
Interceptor.attach(SampConvertUiListToApiList, {onLeave: function (args) {send("SampConvertUiListToApiList");}});

var SampCopyUserSupplementalCredentialsForDCPromo = Module.findExportByName("samsrv.dll", "SampCopyUserSupplementalCredentialsForDCPromo")
Interceptor.attach(SampCopyUserSupplementalCredentialsForDCPromo, {onLeave: function (args) {send("SampCopyUserSupplementalCredentialsForDCPromo");}});

var SampCreateAccountContext2 = Module.findExportByName("samsrv.dll", "SampCreateAccountContext2")
Interceptor.attach(SampCreateAccountContext2, {onLeave: function (args) {send("SampCreateAccountContext2");}});

var SampCreateAliasInDomain = Module.findExportByName("samsrv.dll", "SampCreateAliasInDomain")
Interceptor.attach(SampCreateAliasInDomain, {onLeave: function (args) {send("SampCreateAliasInDomain");}});

var SampCreateContextEx = Module.findExportByName("samsrv.dll", "SampCreateContextEx")
Interceptor.attach(SampCreateContextEx, {onLeave: function (args) {send("SampCreateContextEx");}});

var SampCreateDefaultUPN = Module.findExportByName("samsrv.dll", "SampCreateDefaultUPN")
Interceptor.attach(SampCreateDefaultUPN, {onLeave: function (args) {send("SampCreateDefaultUPN");}});

var SampCreateFullSid = Module.findExportByName("samsrv.dll", "SampCreateFullSid")
Interceptor.attach(SampCreateFullSid, {onLeave: function (args) {send("SampCreateFullSid");}});

var SampCreateGroupInDomain = Module.findExportByName("samsrv.dll", "SampCreateGroupInDomain")
Interceptor.attach(SampCreateGroupInDomain, {onLeave: function (args) {send("SampCreateGroupInDomain");}});

var SampCreateUserInDomain = Module.findExportByName("samsrv.dll", "SampCreateUserInDomain")
Interceptor.attach(SampCreateUserInDomain, {onLeave: function (args) {send("SampCreateUserInDomain");}});

var SampCurrentThreadOwnsLock = Module.findExportByName("samsrv.dll", "SampCurrentThreadOwnsLock")
Interceptor.attach(SampCurrentThreadOwnsLock, {onLeave: function (args) {send("SampCurrentThreadOwnsLock");}});

var SampDeReferenceContext = Module.findExportByName("samsrv.dll", "SampDeReferenceContext")
Interceptor.attach(SampDeReferenceContext, {onLeave: function (args) {send("SampDeReferenceContext");}});

var SampDecrementActiveThreads = Module.findExportByName("samsrv.dll", "SampDecrementActiveThreads")
Interceptor.attach(SampDecrementActiveThreads, {onLeave: function (args) {send("SampDecrementActiveThreads");}});

var SampDecryptCredentialData = Module.findExportByName("samsrv.dll", "SampDecryptCredentialData")
Interceptor.attach(SampDecryptCredentialData, {onLeave: function (args) {send("SampDecryptCredentialData");}});

var SampDeleteContext = Module.findExportByName("samsrv.dll", "SampDeleteContext")
Interceptor.attach(SampDeleteContext, {onLeave: function (args) {send("SampDeleteContext");}});

var SampDeleteDsDirsToDeleteKey = Module.findExportByName("samsrv.dll", "SampDeleteDsDirsToDeleteKey")
Interceptor.attach(SampDeleteDsDirsToDeleteKey, {onLeave: function (args) {send("SampDeleteDsDirsToDeleteKey");}});

var SampDeleteKeyForPostBootPromote = Module.findExportByName("samsrv.dll", "SampDeleteKeyForPostBootPromote")
Interceptor.attach(SampDeleteKeyForPostBootPromote, {onLeave: function (args) {send("SampDeleteKeyForPostBootPromote");}});

var SampDeltaChangeNotify = Module.findExportByName("samsrv.dll", "SampDeltaChangeNotify")
Interceptor.attach(SampDeltaChangeNotify, {onLeave: function (args) {send("SampDeltaChangeNotify");}});

var SampDsChangePasswordUser = Module.findExportByName("samsrv.dll", "SampDsChangePasswordUser")
Interceptor.attach(SampDsChangePasswordUser, {onLeave: function (args) {send("SampDsChangePasswordUser");}});

var SampDsConvertReadAttrBlock = Module.findExportByName("samsrv.dll", "SampDsConvertReadAttrBlock")
Interceptor.attach(SampDsConvertReadAttrBlock, {onLeave: function (args) {send("SampDsConvertReadAttrBlock");}});

var SampDsGetPrimaryDomainStart = Module.findExportByName("samsrv.dll", "SampDsGetPrimaryDomainStart")
Interceptor.attach(SampDsGetPrimaryDomainStart, {onLeave: function (args) {send("SampDsGetPrimaryDomainStart");}});

var SampDsInitializeSingleDomain = Module.findExportByName("samsrv.dll", "SampDsInitializeSingleDomain")
Interceptor.attach(SampDsInitializeSingleDomain, {onLeave: function (args) {send("SampDsInitializeSingleDomain");}});

var SampDsIsRunning = Module.findExportByName("samsrv.dll", "SampDsIsRunning")
Interceptor.attach(SampDsIsRunning, {onLeave: function (args) {send("SampDsIsRunning");}});

var SampDsMakeAttrBlock = Module.findExportByName("samsrv.dll", "SampDsMakeAttrBlock")
Interceptor.attach(SampDsMakeAttrBlock, {onLeave: function (args) {send("SampDsMakeAttrBlock");}});

var SampDsSetBuiltinDomainPolicy = Module.findExportByName("samsrv.dll", "SampDsSetBuiltinDomainPolicy")
Interceptor.attach(SampDsSetBuiltinDomainPolicy, {onLeave: function (args) {send("SampDsSetBuiltinDomainPolicy");}});

var SampDsSetDomainPolicy = Module.findExportByName("samsrv.dll", "SampDsSetDomainPolicy")
Interceptor.attach(SampDsSetDomainPolicy, {onLeave: function (args) {send("SampDsSetDomainPolicy");}});

var SampDsSetPasswordUser = Module.findExportByName("samsrv.dll", "SampDsSetPasswordUser")
Interceptor.attach(SampDsSetPasswordUser, {onLeave: function (args) {send("SampDsSetPasswordUser");}});

var SampDsUpdateContextAttributes = Module.findExportByName("samsrv.dll", "SampDsUpdateContextAttributes")
Interceptor.attach(SampDsUpdateContextAttributes, {onLeave: function (args) {send("SampDsUpdateContextAttributes");}});

var SampDuplicateGroupInfo = Module.findExportByName("samsrv.dll", "SampDuplicateGroupInfo")
Interceptor.attach(SampDuplicateGroupInfo, {onLeave: function (args) {send("SampDuplicateGroupInfo");}});

var SampDuplicateMachineInfo = Module.findExportByName("samsrv.dll", "SampDuplicateMachineInfo")
Interceptor.attach(SampDuplicateMachineInfo, {onLeave: function (args) {send("SampDuplicateMachineInfo");}});

var SampDuplicateOemGroupInfo = Module.findExportByName("samsrv.dll", "SampDuplicateOemGroupInfo")
Interceptor.attach(SampDuplicateOemGroupInfo, {onLeave: function (args) {send("SampDuplicateOemGroupInfo");}});

var SampDuplicateOemUserInfo = Module.findExportByName("samsrv.dll", "SampDuplicateOemUserInfo")
Interceptor.attach(SampDuplicateOemUserInfo, {onLeave: function (args) {send("SampDuplicateOemUserInfo");}});

var SampDuplicateUnicodeString = Module.findExportByName("samsrv.dll", "SampDuplicateUnicodeString")
Interceptor.attach(SampDuplicateUnicodeString, {onLeave: function (args) {send("SampDuplicateUnicodeString");}});

var SampDuplicateUserInfo = Module.findExportByName("samsrv.dll", "SampDuplicateUserInfo")
Interceptor.attach(SampDuplicateUserInfo, {onLeave: function (args) {send("SampDuplicateUserInfo");}});

var SampEncryptCredentialData = Module.findExportByName("samsrv.dll", "SampEncryptCredentialData")
Interceptor.attach(SampEncryptCredentialData, {onLeave: function (args) {send("SampEncryptCredentialData");}});

var SampExamineSid = Module.findExportByName("samsrv.dll", "SampExamineSid")
Interceptor.attach(SampExamineSid, {onLeave: function (args) {send("SampExamineSid");}});

var SampExtendDefinedDomains = Module.findExportByName("samsrv.dll", "SampExtendDefinedDomains")
Interceptor.attach(SampExtendDefinedDomains, {onLeave: function (args) {send("SampExtendDefinedDomains");}});

var SampFlagsToAccountControl = Module.findExportByName("samsrv.dll", "SampFlagsToAccountControl")
Interceptor.attach(SampFlagsToAccountControl, {onLeave: function (args) {send("SampFlagsToAccountControl");}});

var SampFlagsToAccountControlEx = Module.findExportByName("samsrv.dll", "SampFlagsToAccountControlEx")
Interceptor.attach(SampFlagsToAccountControlEx, {onLeave: function (args) {send("SampFlagsToAccountControlEx");}});

var SampFreeGroupInfo = Module.findExportByName("samsrv.dll", "SampFreeGroupInfo")
Interceptor.attach(SampFreeGroupInfo, {onLeave: function (args) {send("SampFreeGroupInfo");}});

var SampFreeMachineInfo = Module.findExportByName("samsrv.dll", "SampFreeMachineInfo")
Interceptor.attach(SampFreeMachineInfo, {onLeave: function (args) {send("SampFreeMachineInfo");}});

var SampFreeOemGroupInfo = Module.findExportByName("samsrv.dll", "SampFreeOemGroupInfo")
Interceptor.attach(SampFreeOemGroupInfo, {onLeave: function (args) {send("SampFreeOemGroupInfo");}});

var SampFreeOemUserInfo = Module.findExportByName("samsrv.dll", "SampFreeOemUserInfo")
Interceptor.attach(SampFreeOemUserInfo, {onLeave: function (args) {send("SampFreeOemUserInfo");}});

var SampFreeUnicodeString = Module.findExportByName("samsrv.dll", "SampFreeUnicodeString")
Interceptor.attach(SampFreeUnicodeString, {onLeave: function (args) {send("SampFreeUnicodeString");}});

var SampFreeUserInfo = Module.findExportByName("samsrv.dll", "SampFreeUserInfo")
Interceptor.attach(SampFreeUserInfo, {onLeave: function (args) {send("SampFreeUserInfo");}});

var SampGenerateRandomPassword = Module.findExportByName("samsrv.dll", "SampGenerateRandomPassword")
Interceptor.attach(SampGenerateRandomPassword, {onLeave: function (args) {send("SampGenerateRandomPassword");}});

var SampGetAccessAttribute = Module.findExportByName("samsrv.dll", "SampGetAccessAttribute")
Interceptor.attach(SampGetAccessAttribute, {onLeave: function (args) {send("SampGetAccessAttribute");}});

var SampGetAccountDomainInfo = Module.findExportByName("samsrv.dll", "SampGetAccountDomainInfo")
Interceptor.attach(SampGetAccountDomainInfo, {onLeave: function (args) {send("SampGetAccountDomainInfo");}});

var SampGetBehaviorVersion = Module.findExportByName("samsrv.dll", "SampGetBehaviorVersion")
Interceptor.attach(SampGetBehaviorVersion, {onLeave: function (args) {send("SampGetBehaviorVersion");}});

var SampGetCurrentOwnerAndPrimaryGroup = Module.findExportByName("samsrv.dll", "SampGetCurrentOwnerAndPrimaryGroup")
Interceptor.attach(SampGetCurrentOwnerAndPrimaryGroup, {onLeave: function (args) {send("SampGetCurrentOwnerAndPrimaryGroup");}});

var SampGetDisableOutboundRSO = Module.findExportByName("samsrv.dll", "SampGetDisableOutboundRSO")
Interceptor.attach(SampGetDisableOutboundRSO, {onLeave: function (args) {send("SampGetDisableOutboundRSO");}});

var SampGetDisableRSOOnPDCForward = Module.findExportByName("samsrv.dll", "SampGetDisableRSOOnPDCForward")
Interceptor.attach(SampGetDisableRSOOnPDCForward, {onLeave: function (args) {send("SampGetDisableRSOOnPDCForward");}});

var SampGetDisableResetBadPwdCountForward = Module.findExportByName("samsrv.dll", "SampGetDisableResetBadPwdCountForward")
Interceptor.attach(SampGetDisableResetBadPwdCountForward, {onLeave: function (args) {send("SampGetDisableResetBadPwdCountForward");}});

var SampGetDisableSingleObjectRepl = Module.findExportByName("samsrv.dll", "SampGetDisableSingleObjectRepl")
Interceptor.attach(SampGetDisableSingleObjectRepl, {onLeave: function (args) {send("SampGetDisableSingleObjectRepl");}});

var SampGetDnsDomainNameFromIndex = Module.findExportByName("samsrv.dll", "SampGetDnsDomainNameFromIndex")
Interceptor.attach(SampGetDnsDomainNameFromIndex, {onLeave: function (args) {send("SampGetDnsDomainNameFromIndex");}});

var SampGetDomainContextFromIndex = Module.findExportByName("samsrv.dll", "SampGetDomainContextFromIndex")
Interceptor.attach(SampGetDomainContextFromIndex, {onLeave: function (args) {send("SampGetDomainContextFromIndex");}});

var SampGetDomainObjectFromAccountContext = Module.findExportByName("samsrv.dll", "SampGetDomainObjectFromAccountContext")
Interceptor.attach(SampGetDomainObjectFromAccountContext, {onLeave: function (args) {send("SampGetDomainObjectFromAccountContext");}});

var SampGetDomainObjectFromIndex = Module.findExportByName("samsrv.dll", "SampGetDomainObjectFromIndex")
Interceptor.attach(SampGetDomainObjectFromIndex, {onLeave: function (args) {send("SampGetDomainObjectFromIndex");}});

var SampGetDomainServerRoleFromIndex = Module.findExportByName("samsrv.dll", "SampGetDomainServerRoleFromIndex")
Interceptor.attach(SampGetDomainServerRoleFromIndex, {onLeave: function (args) {send("SampGetDomainServerRoleFromIndex");}});

var SampGetDomainSidFromAccountContext = Module.findExportByName("samsrv.dll", "SampGetDomainSidFromAccountContext")
Interceptor.attach(SampGetDomainSidFromAccountContext, {onLeave: function (args) {send("SampGetDomainSidFromAccountContext");}});

var SampGetDomainSidFromIndex = Module.findExportByName("samsrv.dll", "SampGetDomainSidFromIndex")
Interceptor.attach(SampGetDomainSidFromIndex, {onLeave: function (args) {send("SampGetDomainSidFromIndex");}});

var SampGetDomainSidListForSam = Module.findExportByName("samsrv.dll", "SampGetDomainSidListForSam")
Interceptor.attach(SampGetDomainSidListForSam, {onLeave: function (args) {send("SampGetDomainSidListForSam");}});

var SampGetDomainUpgradeTasks = Module.findExportByName("samsrv.dll", "SampGetDomainUpgradeTasks")
Interceptor.attach(SampGetDomainUpgradeTasks, {onLeave: function (args) {send("SampGetDomainUpgradeTasks");}});

var SampGetDownLevelDomainControllersPresent = Module.findExportByName("samsrv.dll", "SampGetDownLevelDomainControllersPresent")
Interceptor.attach(SampGetDownLevelDomainControllersPresent, {onLeave: function (args) {send("SampGetDownLevelDomainControllersPresent");}});

var SampGetExtendedAttribute = Module.findExportByName("samsrv.dll", "SampGetExtendedAttribute")
Interceptor.attach(SampGetExtendedAttribute, {onLeave: function (args) {send("SampGetExtendedAttribute");}});

var SampGetExternalNameFromIndex = Module.findExportByName("samsrv.dll", "SampGetExternalNameFromIndex")
Interceptor.attach(SampGetExternalNameFromIndex, {onLeave: function (args) {send("SampGetExternalNameFromIndex");}});

var SampGetFixedAttributes = Module.findExportByName("samsrv.dll", "SampGetFixedAttributes")
Interceptor.attach(SampGetFixedAttributes, {onLeave: function (args) {send("SampGetFixedAttributes");}});

var SampGetHasNeverTime = Module.findExportByName("samsrv.dll", "SampGetHasNeverTime")
Interceptor.attach(SampGetHasNeverTime, {onLeave: function (args) {send("SampGetHasNeverTime");}});

var SampGetIgnoreGCFailures = Module.findExportByName("samsrv.dll", "SampGetIgnoreGCFailures")
Interceptor.attach(SampGetIgnoreGCFailures, {onLeave: function (args) {send("SampGetIgnoreGCFailures");}});

var SampGetLogLevel = Module.findExportByName("samsrv.dll", "SampGetLogLevel")
Interceptor.attach(SampGetLogLevel, {onLeave: function (args) {send("SampGetLogLevel");}});

var SampGetNT4UpgradeInProgress = Module.findExportByName("samsrv.dll", "SampGetNT4UpgradeInProgress")
Interceptor.attach(SampGetNT4UpgradeInProgress, {onLeave: function (args) {send("SampGetNT4UpgradeInProgress");}});

var SampGetNewAccountSecurityNt4 = Module.findExportByName("samsrv.dll", "SampGetNewAccountSecurityNt4")
Interceptor.attach(SampGetNewAccountSecurityNt4, {onLeave: function (args) {send("SampGetNewAccountSecurityNt4");}});

var SampGetNextUnmodifiedRidFromIndex = Module.findExportByName("samsrv.dll", "SampGetNextUnmodifiedRidFromIndex")
Interceptor.attach(SampGetNextUnmodifiedRidFromIndex, {onLeave: function (args) {send("SampGetNextUnmodifiedRidFromIndex");}});

var SampGetNoGcLogonEnforceKerberosIpCheck = Module.findExportByName("samsrv.dll", "SampGetNoGcLogonEnforceKerberosIpCheck")
Interceptor.attach(SampGetNoGcLogonEnforceKerberosIpCheck, {onLeave: function (args) {send("SampGetNoGcLogonEnforceKerberosIpCheck");}});

var SampGetNoGcLogonEnforceNTLMCheck = Module.findExportByName("samsrv.dll", "SampGetNoGcLogonEnforceNTLMCheck")
Interceptor.attach(SampGetNoGcLogonEnforceNTLMCheck, {onLeave: function (args) {send("SampGetNoGcLogonEnforceNTLMCheck");}});

var SampGetObjectSD = Module.findExportByName("samsrv.dll", "SampGetObjectSD")
Interceptor.attach(SampGetObjectSD, {onLeave: function (args) {send("SampGetObjectSD");}});

var SampGetObjectTypeNameFromIndex = Module.findExportByName("samsrv.dll", "SampGetObjectTypeNameFromIndex")
Interceptor.attach(SampGetObjectTypeNameFromIndex, {onLeave: function (args) {send("SampGetObjectTypeNameFromIndex");}});

var SampGetPasswordMustChangeWithUF_UAC = Module.findExportByName("samsrv.dll", "SampGetPasswordMustChangeWithUF_UAC")
Interceptor.attach(SampGetPasswordMustChangeWithUF_UAC, {onLeave: function (args) {send("SampGetPasswordMustChangeWithUF_UAC");}});

var SampGetReverseMembershipTransitive = Module.findExportByName("samsrv.dll", "SampGetReverseMembershipTransitive")
Interceptor.attach(SampGetReverseMembershipTransitive, {onLeave: function (args) {send("SampGetReverseMembershipTransitive");}});

var SampGetSamSubsystemName = Module.findExportByName("samsrv.dll", "SampGetSamSubsystemName")
Interceptor.attach(SampGetSamSubsystemName, {onLeave: function (args) {send("SampGetSamSubsystemName");}});

var SampGetSerialNumberDomain2 = Module.findExportByName("samsrv.dll", "SampGetSerialNumberDomain2")
Interceptor.attach(SampGetSerialNumberDomain2, {onLeave: function (args) {send("SampGetSerialNumberDomain2");}});

var SampGetServerObjectName = Module.findExportByName("samsrv.dll", "SampGetServerObjectName")
Interceptor.attach(SampGetServerObjectName, {onLeave: function (args) {send("SampGetServerObjectName");}});

var SampGetSidArrayAttribute = Module.findExportByName("samsrv.dll", "SampGetSidArrayAttribute")
Interceptor.attach(SampGetSidArrayAttribute, {onLeave: function (args) {send("SampGetSidArrayAttribute");}});

var SampGetSidAttribute = Module.findExportByName("samsrv.dll", "SampGetSidAttribute")
Interceptor.attach(SampGetSidAttribute, {onLeave: function (args) {send("SampGetSidAttribute");}});

var SampGetSuccessAccountAuditingEnabled = Module.findExportByName("samsrv.dll", "SampGetSuccessAccountAuditingEnabled")
Interceptor.attach(SampGetSuccessAccountAuditingEnabled, {onLeave: function (args) {send("SampGetSuccessAccountAuditingEnabled");}});

var SampGetUlongArrayAttribute = Module.findExportByName("samsrv.dll", "SampGetUlongArrayAttribute")
Interceptor.attach(SampGetUlongArrayAttribute, {onLeave: function (args) {send("SampGetUlongArrayAttribute");}});

var SampGetUnicodeStringAttribute = Module.findExportByName("samsrv.dll", "SampGetUnicodeStringAttribute")
Interceptor.attach(SampGetUnicodeStringAttribute, {onLeave: function (args) {send("SampGetUnicodeStringAttribute");}});

var SampGetUserAccountControlComputed = Module.findExportByName("samsrv.dll", "SampGetUserAccountControlComputed")
Interceptor.attach(SampGetUserAccountControlComputed, {onLeave: function (args) {send("SampGetUserAccountControlComputed");}});

var SampGetUserAccountSettings = Module.findExportByName("samsrv.dll", "SampGetUserAccountSettings")
Interceptor.attach(SampGetUserAccountSettings, {onLeave: function (args) {send("SampGetUserAccountSettings");}});

var SampGetWillNeverTime = Module.findExportByName("samsrv.dll", "SampGetWillNeverTime")
Interceptor.attach(SampGetWillNeverTime, {onLeave: function (args) {send("SampGetWillNeverTime");}});

var SampImpersonateClient = Module.findExportByName("samsrv.dll", "SampImpersonateClient")
Interceptor.attach(SampImpersonateClient, {onLeave: function (args) {send("SampImpersonateClient");}});

var SampIncreaseBadPwdCountLoopback = Module.findExportByName("samsrv.dll", "SampIncreaseBadPwdCountLoopback")
Interceptor.attach(SampIncreaseBadPwdCountLoopback, {onLeave: function (args) {send("SampIncreaseBadPwdCountLoopback");}});

var SampIncrementActiveThreads = Module.findExportByName("samsrv.dll", "SampIncrementActiveThreads")
Interceptor.attach(SampIncrementActiveThreads, {onLeave: function (args) {send("SampIncrementActiveThreads");}});

var SampIncrementNetlogonChangeLogSerialNumber = Module.findExportByName("samsrv.dll", "SampIncrementNetlogonChangeLogSerialNumber")
Interceptor.attach(SampIncrementNetlogonChangeLogSerialNumber, {onLeave: function (args) {send("SampIncrementNetlogonChangeLogSerialNumber");}});

var SampInvalidateDomainCache = Module.findExportByName("samsrv.dll", "SampInvalidateDomainCache")
Interceptor.attach(SampInvalidateDomainCache, {onLeave: function (args) {send("SampInvalidateDomainCache");}});

var SampIsAccountBuiltIn = Module.findExportByName("samsrv.dll", "SampIsAccountBuiltIn")
Interceptor.attach(SampIsAccountBuiltIn, {onLeave: function (args) {send("SampIsAccountBuiltIn");}});

var SampIsAuditingEnabled = Module.findExportByName("samsrv.dll", "SampIsAuditingEnabled")
Interceptor.attach(SampIsAuditingEnabled, {onLeave: function (args) {send("SampIsAuditingEnabled");}});

var SampIsBuiltinDomain = Module.findExportByName("samsrv.dll", "SampIsBuiltinDomain")
Interceptor.attach(SampIsBuiltinDomain, {onLeave: function (args) {send("SampIsBuiltinDomain");}});

var SampIsDomainHosted = Module.findExportByName("samsrv.dll", "SampIsDomainHosted")
Interceptor.attach(SampIsDomainHosted, {onLeave: function (args) {send("SampIsDomainHosted");}});

var SampIsInternetAccount = Module.findExportByName("samsrv.dll", "SampIsInternetAccount")
Interceptor.attach(SampIsInternetAccount, {onLeave: function (args) {send("SampIsInternetAccount");}});

var SampIsServiceRunning = Module.findExportByName("samsrv.dll", "SampIsServiceRunning")
Interceptor.attach(SampIsServiceRunning, {onLeave: function (args) {send("SampIsServiceRunning");}});

var SampIsSetupInProgress = Module.findExportByName("samsrv.dll", "SampIsSetupInProgress")
Interceptor.attach(SampIsSetupInProgress, {onLeave: function (args) {send("SampIsSetupInProgress");}});

var SampLogPrint = Module.findExportByName("samsrv.dll", "SampLogPrint")
Interceptor.attach(SampLogPrint, {onLeave: function (args) {send("SampLogPrint");}});

var SampLookupContext = Module.findExportByName("samsrv.dll", "SampLookupContext")
Interceptor.attach(SampLookupContext, {onLeave: function (args) {send("SampLookupContext");}});

var SampMarkPerAttributeInvalidFromWhichFields = Module.findExportByName("samsrv.dll", "SampMarkPerAttributeInvalidFromWhichFields")
Interceptor.attach(SampMarkPerAttributeInvalidFromWhichFields, {onLeave: function (args) {send("SampMarkPerAttributeInvalidFromWhichFields");}});

var SampNeedUserAccountSettingsDuringQuery = Module.findExportByName("samsrv.dll", "SampNeedUserAccountSettingsDuringQuery")
Interceptor.attach(SampNeedUserAccountSettingsDuringQuery, {onLeave: function (args) {send("SampNeedUserAccountSettingsDuringQuery");}});

var SampNetLogonNotificationRequired = Module.findExportByName("samsrv.dll", "SampNetLogonNotificationRequired")
Interceptor.attach(SampNetLogonNotificationRequired, {onLeave: function (args) {send("SampNetLogonNotificationRequired");}});

var SampNotifyAuditChange = Module.findExportByName("samsrv.dll", "SampNotifyAuditChange")
Interceptor.attach(SampNotifyAuditChange, {onLeave: function (args) {send("SampNotifyAuditChange");}});

var SampNotifyReplicatedInChange = Module.findExportByName("samsrv.dll", "SampNotifyReplicatedInChange")
Interceptor.attach(SampNotifyReplicatedInChange, {onLeave: function (args) {send("SampNotifyReplicatedInChange");}});

var SampPasswordChangeNotify = Module.findExportByName("samsrv.dll", "SampPasswordChangeNotify")
Interceptor.attach(SampPasswordChangeNotify, {onLeave: function (args) {send("SampPasswordChangeNotify");}});

var SampPasswordChangeNotifyWorker = Module.findExportByName("samsrv.dll", "SampPasswordChangeNotifyWorker")
Interceptor.attach(SampPasswordChangeNotifyWorker, {onLeave: function (args) {send("SampPasswordChangeNotifyWorker");}});

var SampPositionOfHighestBit = Module.findExportByName("samsrv.dll", "SampPositionOfHighestBit")
Interceptor.attach(SampPositionOfHighestBit, {onLeave: function (args) {send("SampPositionOfHighestBit");}});

var SampQueryCapabilities = Module.findExportByName("samsrv.dll", "SampQueryCapabilities")
Interceptor.attach(SampQueryCapabilities, {onLeave: function (args) {send("SampQueryCapabilities");}});

var SampQueryDSRMAccountName = Module.findExportByName("samsrv.dll", "SampQueryDSRMAccountName")
Interceptor.attach(SampQueryDSRMAccountName, {onLeave: function (args) {send("SampQueryDSRMAccountName");}});

var SampQueryInformationUserInternal = Module.findExportByName("samsrv.dll", "SampQueryInformationUserInternal")
Interceptor.attach(SampQueryInformationUserInternal, {onLeave: function (args) {send("SampQueryInformationUserInternal");}});

var SampQueryPolicyValue = Module.findExportByName("samsrv.dll", "SampQueryPolicyValue")
Interceptor.attach(SampQueryPolicyValue, {onLeave: function (args) {send("SampQueryPolicyValue");}});

var SampQueryUserSupplementalCredentialsRegistry = Module.findExportByName("samsrv.dll", "SampQueryUserSupplementalCredentialsRegistry")
Interceptor.attach(SampQueryUserSupplementalCredentialsRegistry, {onLeave: function (args) {send("SampQueryUserSupplementalCredentialsRegistry");}});

var SampReadExtendedAttributes = Module.findExportByName("samsrv.dll", "SampReadExtendedAttributes")
Interceptor.attach(SampReadExtendedAttributes, {onLeave: function (args) {send("SampReadExtendedAttributes");}});

var SampRecordSystemSchemaVerisonInRegistry = Module.findExportByName("samsrv.dll", "SampRecordSystemSchemaVerisonInRegistry")
Interceptor.attach(SampRecordSystemSchemaVerisonInRegistry, {onLeave: function (args) {send("SampRecordSystemSchemaVerisonInRegistry");}});

var SampReferenceContext = Module.findExportByName("samsrv.dll", "SampReferenceContext")
Interceptor.attach(SampReferenceContext, {onLeave: function (args) {send("SampReferenceContext");}});

var SampRegObjToDsObj = Module.findExportByName("samsrv.dll", "SampRegObjToDsObj")
Interceptor.attach(SampRegObjToDsObj, {onLeave: function (args) {send("SampRegObjToDsObj");}});

var SampReleaseReadLock = Module.findExportByName("samsrv.dll", "SampReleaseReadLock")
Interceptor.attach(SampReleaseReadLock, {onLeave: function (args) {send("SampReleaseReadLock");}});

var SampReleaseSamLockExclusive = Module.findExportByName("samsrv.dll", "SampReleaseSamLockExclusive")
Interceptor.attach(SampReleaseSamLockExclusive, {onLeave: function (args) {send("SampReleaseSamLockExclusive");}});

var SampReleaseWriteLock = Module.findExportByName("samsrv.dll", "SampReleaseWriteLock")
Interceptor.attach(SampReleaseWriteLock, {onLeave: function (args) {send("SampReleaseWriteLock");}});

var SampRemoveAccountFromGroupMembers = Module.findExportByName("samsrv.dll", "SampRemoveAccountFromGroupMembers")
Interceptor.attach(SampRemoveAccountFromGroupMembers, {onLeave: function (args) {send("SampRemoveAccountFromGroupMembers");}});

var SampRemoveSameDomainMemberFromGlobalOrUniversalGroup = Module.findExportByName("samsrv.dll", "SampRemoveSameDomainMemberFromGlobalOrUniversalGroup")
Interceptor.attach(SampRemoveSameDomainMemberFromGlobalOrUniversalGroup, {onLeave: function (args) {send("SampRemoveSameDomainMemberFromGlobalOrUniversalGroup");}});

var SampRemoveUserFromGroup = Module.findExportByName("samsrv.dll", "SampRemoveUserFromGroup")
Interceptor.attach(SampRemoveUserFromGroup, {onLeave: function (args) {send("SampRemoveUserFromGroup");}});

var SampRenameKrbtgtAccount = Module.findExportByName("samsrv.dll", "SampRenameKrbtgtAccount")
Interceptor.attach(SampRenameKrbtgtAccount, {onLeave: function (args) {send("SampRenameKrbtgtAccount");}});

var SampReplaceUserLogonHours = Module.findExportByName("samsrv.dll", "SampReplaceUserLogonHours")
Interceptor.attach(SampReplaceUserLogonHours, {onLeave: function (args) {send("SampReplaceUserLogonHours");}});

var SampReplaceUserV1aFixed = Module.findExportByName("samsrv.dll", "SampReplaceUserV1aFixed")
Interceptor.attach(SampReplaceUserV1aFixed, {onLeave: function (args) {send("SampReplaceUserV1aFixed");}});

var SampRetrieveGroupV1Fixed = Module.findExportByName("samsrv.dll", "SampRetrieveGroupV1Fixed")
Interceptor.attach(SampRetrieveGroupV1Fixed, {onLeave: function (args) {send("SampRetrieveGroupV1Fixed");}});

var SampRetrieveMultipleCredentials = Module.findExportByName("samsrv.dll", "SampRetrieveMultipleCredentials")
Interceptor.attach(SampRetrieveMultipleCredentials, {onLeave: function (args) {send("SampRetrieveMultipleCredentials");}});

var SampRetrieveUserPasswords = Module.findExportByName("samsrv.dll", "SampRetrieveUserPasswords")
Interceptor.attach(SampRetrieveUserPasswords, {onLeave: function (args) {send("SampRetrieveUserPasswords");}});

var SampRetrieveUserV1aFixed = Module.findExportByName("samsrv.dll", "SampRetrieveUserV1aFixed")
Interceptor.attach(SampRetrieveUserV1aFixed, {onLeave: function (args) {send("SampRetrieveUserV1aFixed");}});

var SampRevertToSelf = Module.findExportByName("samsrv.dll", "SampRevertToSelf")
Interceptor.attach(SampRevertToSelf, {onLeave: function (args) {send("SampRevertToSelf");}});

var SampRtlWellKnownPrivilegeCheck = Module.findExportByName("samsrv.dll", "SampRtlWellKnownPrivilegeCheck")
Interceptor.attach(SampRtlWellKnownPrivilegeCheck, {onLeave: function (args) {send("SampRtlWellKnownPrivilegeCheck");}});

var SampSetAccessAttribute = Module.findExportByName("samsrv.dll", "SampSetAccessAttribute")
Interceptor.attach(SampSetAccessAttribute, {onLeave: function (args) {send("SampSetAccessAttribute");}});

var SampSetAdminPassword = Module.findExportByName("samsrv.dll", "SampSetAdminPassword")
Interceptor.attach(SampSetAdminPassword, {onLeave: function (args) {send("SampSetAdminPassword");}});

var SampSetAttributeAccess = Module.findExportByName("samsrv.dll", "SampSetAttributeAccess")
Interceptor.attach(SampSetAttributeAccess, {onLeave: function (args) {send("SampSetAttributeAccess");}});

var SampSetCheckpointInfo = Module.findExportByName("samsrv.dll", "SampSetCheckpointInfo")
Interceptor.attach(SampSetCheckpointInfo, {onLeave: function (args) {send("SampSetCheckpointInfo");}});

var SampSetComputerObjectDsName = Module.findExportByName("samsrv.dll", "SampSetComputerObjectDsName")
Interceptor.attach(SampSetComputerObjectDsName, {onLeave: function (args) {send("SampSetComputerObjectDsName");}});

var SampSetDSRMPasswordWorker = Module.findExportByName("samsrv.dll", "SampSetDSRMPasswordWorker")
Interceptor.attach(SampSetDSRMPasswordWorker, {onLeave: function (args) {send("SampSetDSRMPasswordWorker");}});

var SampSetErrorInfo = Module.findExportByName("samsrv.dll", "SampSetErrorInfo")
Interceptor.attach(SampSetErrorInfo, {onLeave: function (args) {send("SampSetErrorInfo");}});

var SampSetExtendedAttributeAccess = Module.findExportByName("samsrv.dll", "SampSetExtendedAttributeAccess")
Interceptor.attach(SampSetExtendedAttributeAccess, {onLeave: function (args) {send("SampSetExtendedAttributeAccess");}});

var SampSetFixedAttributes = Module.findExportByName("samsrv.dll", "SampSetFixedAttributes")
Interceptor.attach(SampSetFixedAttributes, {onLeave: function (args) {send("SampSetFixedAttributes");}});

var SampSetGlobalDsSids = Module.findExportByName("samsrv.dll", "SampSetGlobalDsSids")
Interceptor.attach(SampSetGlobalDsSids, {onLeave: function (args) {send("SampSetGlobalDsSids");}});

var SampSetPassword = Module.findExportByName("samsrv.dll", "SampSetPassword")
Interceptor.attach(SampSetPassword, {onLeave: function (args) {send("SampSetPassword");}});

var SampSetPasswordInfoOnPdcByHandle = Module.findExportByName("samsrv.dll", "SampSetPasswordInfoOnPdcByHandle")
Interceptor.attach(SampSetPasswordInfoOnPdcByHandle, {onLeave: function (args) {send("SampSetPasswordInfoOnPdcByHandle");}});

var SampSetPasswordInfoOnPdcByIndex = Module.findExportByName("samsrv.dll", "SampSetPasswordInfoOnPdcByIndex")
Interceptor.attach(SampSetPasswordInfoOnPdcByIndex, {onLeave: function (args) {send("SampSetPasswordInfoOnPdcByIndex");}});

var SampSetSerialNumberDomain2 = Module.findExportByName("samsrv.dll", "SampSetSerialNumberDomain2")
Interceptor.attach(SampSetSerialNumberDomain2, {onLeave: function (args) {send("SampSetSerialNumberDomain2");}});

var SampSetTransactionDomain = Module.findExportByName("samsrv.dll", "SampSetTransactionDomain")
Interceptor.attach(SampSetTransactionDomain, {onLeave: function (args) {send("SampSetTransactionDomain");}});

var SampSetTransactionWithinDomain = Module.findExportByName("samsrv.dll", "SampSetTransactionWithinDomain")
Interceptor.attach(SampSetTransactionWithinDomain, {onLeave: function (args) {send("SampSetTransactionWithinDomain");}});

var SampSetUnicodeStringAttribute = Module.findExportByName("samsrv.dll", "SampSetUnicodeStringAttribute")
Interceptor.attach(SampSetUnicodeStringAttribute, {onLeave: function (args) {send("SampSetUnicodeStringAttribute");}});

var SampSetUserAccountControl = Module.findExportByName("samsrv.dll", "SampSetUserAccountControl")
Interceptor.attach(SampSetUserAccountControl, {onLeave: function (args) {send("SampSetUserAccountControl");}});

var SampSplitSid = Module.findExportByName("samsrv.dll", "SampSplitSid")
Interceptor.attach(SampSplitSid, {onLeave: function (args) {send("SampSplitSid");}});

var SampStoreObjectAttributes = Module.findExportByName("samsrv.dll", "SampStoreObjectAttributes")
Interceptor.attach(SampStoreObjectAttributes, {onLeave: function (args) {send("SampStoreObjectAttributes");}});

var SampStringFromGuid = Module.findExportByName("samsrv.dll", "SampStringFromGuid")
Interceptor.attach(SampStringFromGuid, {onLeave: function (args) {send("SampStringFromGuid");}});

var SampTraceEvent = Module.findExportByName("samsrv.dll", "SampTraceEvent")
Interceptor.attach(SampTraceEvent, {onLeave: function (args) {send("SampTraceEvent");}});

var SampUpdateAccountDisabledFlag = Module.findExportByName("samsrv.dll", "SampUpdateAccountDisabledFlag")
Interceptor.attach(SampUpdateAccountDisabledFlag, {onLeave: function (args) {send("SampUpdateAccountDisabledFlag");}});

var SampUpdateComputedUserAccountControlBits = Module.findExportByName("samsrv.dll", "SampUpdateComputedUserAccountControlBits")
Interceptor.attach(SampUpdateComputedUserAccountControlBits, {onLeave: function (args) {send("SampUpdateComputedUserAccountControlBits");}});

var SampUpdateMixedModeAndFindDomain = Module.findExportByName("samsrv.dll", "SampUpdateMixedModeAndFindDomain")
Interceptor.attach(SampUpdateMixedModeAndFindDomain, {onLeave: function (args) {send("SampUpdateMixedModeAndFindDomain");}});

var SampUpdatePerformanceCounters = Module.findExportByName("samsrv.dll", "SampUpdatePerformanceCounters")
Interceptor.attach(SampUpdatePerformanceCounters, {onLeave: function (args) {send("SampUpdatePerformanceCounters");}});

var SampUpgradeUserParmsActual = Module.findExportByName("samsrv.dll", "SampUpgradeUserParmsActual")
Interceptor.attach(SampUpgradeUserParmsActual, {onLeave: function (args) {send("SampUpgradeUserParmsActual");}});

var SampUsingDsData = Module.findExportByName("samsrv.dll", "SampUsingDsData")
Interceptor.attach(SampUsingDsData, {onLeave: function (args) {send("SampUsingDsData");}});

var SampValidateDomainCacheCallback = Module.findExportByName("samsrv.dll", "SampValidateDomainCacheCallback")
Interceptor.attach(SampValidateDomainCacheCallback, {onLeave: function (args) {send("SampValidateDomainCacheCallback");}});

var SampValidateDomainControllerCreation = Module.findExportByName("samsrv.dll", "SampValidateDomainControllerCreation")
Interceptor.attach(SampValidateDomainControllerCreation, {onLeave: function (args) {send("SampValidateDomainControllerCreation");}});

var SampValidatePwdSettingAttempt = Module.findExportByName("samsrv.dll", "SampValidatePwdSettingAttempt")
Interceptor.attach(SampValidatePwdSettingAttempt, {onLeave: function (args) {send("SampValidatePwdSettingAttempt");}});

var SampValidateRegAttributes = Module.findExportByName("samsrv.dll", "SampValidateRegAttributes")
Interceptor.attach(SampValidateRegAttributes, {onLeave: function (args) {send("SampValidateRegAttributes");}});

var SampWriteEventLog = Module.findExportByName("samsrv.dll", "SampWriteEventLog")
Interceptor.attach(SampWriteEventLog, {onLeave: function (args) {send("SampWriteEventLog");}});

var SampWriteGroupType = Module.findExportByName("samsrv.dll", "SampWriteGroupType")
Interceptor.attach(SampWriteGroupType, {onLeave: function (args) {send("SampWriteGroupType");}});

var SamrAddMemberToAlias = Module.findExportByName("samsrv.dll", "SamrAddMemberToAlias")
Interceptor.attach(SamrAddMemberToAlias, {onLeave: function (args) {send("SamrAddMemberToAlias");}});

var SamrAddMemberToGroup = Module.findExportByName("samsrv.dll", "SamrAddMemberToGroup")
Interceptor.attach(SamrAddMemberToGroup, {onLeave: function (args) {send("SamrAddMemberToGroup");}});

var SamrCloseHandle = Module.findExportByName("samsrv.dll", "SamrCloseHandle")
Interceptor.attach(SamrCloseHandle, {onLeave: function (args) {send("SamrCloseHandle");}});

var SamrCreateUser2InDomain = Module.findExportByName("samsrv.dll", "SamrCreateUser2InDomain")
Interceptor.attach(SamrCreateUser2InDomain, {onLeave: function (args) {send("SamrCreateUser2InDomain");}});

var SamrCreateUserInDomain = Module.findExportByName("samsrv.dll", "SamrCreateUserInDomain")
Interceptor.attach(SamrCreateUserInDomain, {onLeave: function (args) {send("SamrCreateUserInDomain");}});

var SamrDeleteAlias = Module.findExportByName("samsrv.dll", "SamrDeleteAlias")
Interceptor.attach(SamrDeleteAlias, {onLeave: function (args) {send("SamrDeleteAlias");}});

var SamrDeleteGroup = Module.findExportByName("samsrv.dll", "SamrDeleteGroup")
Interceptor.attach(SamrDeleteGroup, {onLeave: function (args) {send("SamrDeleteGroup");}});

var SamrDeleteUser = Module.findExportByName("samsrv.dll", "SamrDeleteUser")
Interceptor.attach(SamrDeleteUser, {onLeave: function (args) {send("SamrDeleteUser");}});

var SamrEnumerateDomainsInSamServer = Module.findExportByName("samsrv.dll", "SamrEnumerateDomainsInSamServer")
Interceptor.attach(SamrEnumerateDomainsInSamServer, {onLeave: function (args) {send("SamrEnumerateDomainsInSamServer");}});

var SamrEnumerateUsersInDomain = Module.findExportByName("samsrv.dll", "SamrEnumerateUsersInDomain")
Interceptor.attach(SamrEnumerateUsersInDomain, {onLeave: function (args) {send("SamrEnumerateUsersInDomain");}});

var SamrEnumerateUsersInDomain2 = Module.findExportByName("samsrv.dll", "SamrEnumerateUsersInDomain2")
Interceptor.attach(SamrEnumerateUsersInDomain2, {onLeave: function (args) {send("SamrEnumerateUsersInDomain2");}});

var SamrGetAliasMembership = Module.findExportByName("samsrv.dll", "SamrGetAliasMembership")
Interceptor.attach(SamrGetAliasMembership, {onLeave: function (args) {send("SamrGetAliasMembership");}});

var SamrGetGroupsForUser = Module.findExportByName("samsrv.dll", "SamrGetGroupsForUser")
Interceptor.attach(SamrGetGroupsForUser, {onLeave: function (args) {send("SamrGetGroupsForUser");}});

var SamrGetMembersInAlias = Module.findExportByName("samsrv.dll", "SamrGetMembersInAlias")
Interceptor.attach(SamrGetMembersInAlias, {onLeave: function (args) {send("SamrGetMembersInAlias");}});

var SamrLookupDomainInSamServer = Module.findExportByName("samsrv.dll", "SamrLookupDomainInSamServer")
Interceptor.attach(SamrLookupDomainInSamServer, {onLeave: function (args) {send("SamrLookupDomainInSamServer");}});

var SamrLookupIdsInDomain = Module.findExportByName("samsrv.dll", "SamrLookupIdsInDomain")
Interceptor.attach(SamrLookupIdsInDomain, {onLeave: function (args) {send("SamrLookupIdsInDomain");}});

var SamrLookupNamesInDomain = Module.findExportByName("samsrv.dll", "SamrLookupNamesInDomain")
Interceptor.attach(SamrLookupNamesInDomain, {onLeave: function (args) {send("SamrLookupNamesInDomain");}});

var SamrLookupNamesInDomain2 = Module.findExportByName("samsrv.dll", "SamrLookupNamesInDomain2")
Interceptor.attach(SamrLookupNamesInDomain2, {onLeave: function (args) {send("SamrLookupNamesInDomain2");}});

var SamrOpenAlias = Module.findExportByName("samsrv.dll", "SamrOpenAlias")
Interceptor.attach(SamrOpenAlias, {onLeave: function (args) {send("SamrOpenAlias");}});

var SamrOpenDomain = Module.findExportByName("samsrv.dll", "SamrOpenDomain")
Interceptor.attach(SamrOpenDomain, {onLeave: function (args) {send("SamrOpenDomain");}});

var SamrOpenGroup = Module.findExportByName("samsrv.dll", "SamrOpenGroup")
Interceptor.attach(SamrOpenGroup, {onLeave: function (args) {send("SamrOpenGroup");}});

var SamrOpenUser = Module.findExportByName("samsrv.dll", "SamrOpenUser")
Interceptor.attach(SamrOpenUser, {onLeave: function (args) {send("SamrOpenUser");}});

var SamrQueryDisplayInformation = Module.findExportByName("samsrv.dll", "SamrQueryDisplayInformation")
Interceptor.attach(SamrQueryDisplayInformation, {onLeave: function (args) {send("SamrQueryDisplayInformation");}});

var SamrQueryInformationDomain = Module.findExportByName("samsrv.dll", "SamrQueryInformationDomain")
Interceptor.attach(SamrQueryInformationDomain, {onLeave: function (args) {send("SamrQueryInformationDomain");}});

var SamrQueryInformationUser = Module.findExportByName("samsrv.dll", "SamrQueryInformationUser")
Interceptor.attach(SamrQueryInformationUser, {onLeave: function (args) {send("SamrQueryInformationUser");}});

var SamrQueryInformationUser2 = Module.findExportByName("samsrv.dll", "SamrQueryInformationUser2")
Interceptor.attach(SamrQueryInformationUser2, {onLeave: function (args) {send("SamrQueryInformationUser2");}});

var SamrQuerySecurityObject = Module.findExportByName("samsrv.dll", "SamrQuerySecurityObject")
Interceptor.attach(SamrQuerySecurityObject, {onLeave: function (args) {send("SamrQuerySecurityObject");}});

var SamrRemoveMemberFromAlias = Module.findExportByName("samsrv.dll", "SamrRemoveMemberFromAlias")
Interceptor.attach(SamrRemoveMemberFromAlias, {onLeave: function (args) {send("SamrRemoveMemberFromAlias");}});

var SamrRemoveMemberFromGroup = Module.findExportByName("samsrv.dll", "SamrRemoveMemberFromGroup")
Interceptor.attach(SamrRemoveMemberFromGroup, {onLeave: function (args) {send("SamrRemoveMemberFromGroup");}});

var SamrRidToSid = Module.findExportByName("samsrv.dll", "SamrRidToSid")
Interceptor.attach(SamrRidToSid, {onLeave: function (args) {send("SamrRidToSid");}});

var SamrSetInformationAlias = Module.findExportByName("samsrv.dll", "SamrSetInformationAlias")
Interceptor.attach(SamrSetInformationAlias, {onLeave: function (args) {send("SamrSetInformationAlias");}});

var SamrSetInformationGroup = Module.findExportByName("samsrv.dll", "SamrSetInformationGroup")
Interceptor.attach(SamrSetInformationGroup, {onLeave: function (args) {send("SamrSetInformationGroup");}});

var SamrSetInformationUser = Module.findExportByName("samsrv.dll", "SamrSetInformationUser")
Interceptor.attach(SamrSetInformationUser, {onLeave: function (args) {send("SamrSetInformationUser");}});

var SamrSetSecurityObject = Module.findExportByName("samsrv.dll", "SamrSetSecurityObject")
Interceptor.attach(SamrSetSecurityObject, {onLeave: function (args) {send("SamrSetSecurityObject");}});

var SamrValidatePassword = Module.findExportByName("samsrv.dll", "SamrValidatePassword")
Interceptor.attach(SamrValidatePassword, {onLeave: function (args) {send("SamrValidatePassword");}});

