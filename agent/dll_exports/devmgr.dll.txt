var DeviceAdvancedPropertiesA = Module.findExportByName("devmgr.dll", "DeviceAdvancedPropertiesA")
Interceptor.attach(DeviceAdvancedPropertiesA, {onLeave: function (args) {send("DeviceAdvancedPropertiesA");}});

var DeviceAdvancedPropertiesW = Module.findExportByName("devmgr.dll", "DeviceAdvancedPropertiesW")
Interceptor.attach(DeviceAdvancedPropertiesW, {onLeave: function (args) {send("DeviceAdvancedPropertiesW");}});

var DeviceCreateHardwarePage = Module.findExportByName("devmgr.dll", "DeviceCreateHardwarePage")
Interceptor.attach(DeviceCreateHardwarePage, {onLeave: function (args) {send("DeviceCreateHardwarePage");}});

var DeviceCreateHardwarePageCustom = Module.findExportByName("devmgr.dll", "DeviceCreateHardwarePageCustom")
Interceptor.attach(DeviceCreateHardwarePageCustom, {onLeave: function (args) {send("DeviceCreateHardwarePageCustom");}});

var DeviceCreateHardwarePageEx = Module.findExportByName("devmgr.dll", "DeviceCreateHardwarePageEx")
Interceptor.attach(DeviceCreateHardwarePageEx, {onLeave: function (args) {send("DeviceCreateHardwarePageEx");}});

var DeviceManager_ExecuteA = Module.findExportByName("devmgr.dll", "DeviceManager_ExecuteA")
Interceptor.attach(DeviceManager_ExecuteA, {onLeave: function (args) {send("DeviceManager_ExecuteA");}});

var DeviceManager_ExecuteW = Module.findExportByName("devmgr.dll", "DeviceManager_ExecuteW")
Interceptor.attach(DeviceManager_ExecuteW, {onLeave: function (args) {send("DeviceManager_ExecuteW");}});

var DeviceProblemTextA = Module.findExportByName("devmgr.dll", "DeviceProblemTextA")
Interceptor.attach(DeviceProblemTextA, {onLeave: function (args) {send("DeviceProblemTextA");}});

var DeviceProblemTextW = Module.findExportByName("devmgr.dll", "DeviceProblemTextW")
Interceptor.attach(DeviceProblemTextW, {onLeave: function (args) {send("DeviceProblemTextW");}});

var DeviceProblemWizardA = Module.findExportByName("devmgr.dll", "DeviceProblemWizardA")
Interceptor.attach(DeviceProblemWizardA, {onLeave: function (args) {send("DeviceProblemWizardA");}});

var DeviceProblemWizardW = Module.findExportByName("devmgr.dll", "DeviceProblemWizardW")
Interceptor.attach(DeviceProblemWizardW, {onLeave: function (args) {send("DeviceProblemWizardW");}});

var DeviceProblenWizard_RunDLLA = Module.findExportByName("devmgr.dll", "DeviceProblenWizard_RunDLLA")
Interceptor.attach(DeviceProblenWizard_RunDLLA, {onLeave: function (args) {send("DeviceProblenWizard_RunDLLA");}});

var DeviceProblenWizard_RunDLLW = Module.findExportByName("devmgr.dll", "DeviceProblenWizard_RunDLLW")
Interceptor.attach(DeviceProblenWizard_RunDLLW, {onLeave: function (args) {send("DeviceProblenWizard_RunDLLW");}});

var DevicePropertiesA = Module.findExportByName("devmgr.dll", "DevicePropertiesA")
Interceptor.attach(DevicePropertiesA, {onLeave: function (args) {send("DevicePropertiesA");}});

var DevicePropertiesExA = Module.findExportByName("devmgr.dll", "DevicePropertiesExA")
Interceptor.attach(DevicePropertiesExA, {onLeave: function (args) {send("DevicePropertiesExA");}});

var DevicePropertiesExW = Module.findExportByName("devmgr.dll", "DevicePropertiesExW")
Interceptor.attach(DevicePropertiesExW, {onLeave: function (args) {send("DevicePropertiesExW");}});

var DevicePropertiesW = Module.findExportByName("devmgr.dll", "DevicePropertiesW")
Interceptor.attach(DevicePropertiesW, {onLeave: function (args) {send("DevicePropertiesW");}});

var DeviceProperties_RunDLLA = Module.findExportByName("devmgr.dll", "DeviceProperties_RunDLLA")
Interceptor.attach(DeviceProperties_RunDLLA, {onLeave: function (args) {send("DeviceProperties_RunDLLA");}});

var DeviceProperties_RunDLLW = Module.findExportByName("devmgr.dll", "DeviceProperties_RunDLLW")
Interceptor.attach(DeviceProperties_RunDLLW, {onLeave: function (args) {send("DeviceProperties_RunDLLW");}});

var DllCanUnloadNow = Module.findExportByName("devmgr.dll", "DllCanUnloadNow")
Interceptor.attach(DllCanUnloadNow, {onLeave: function (args) {send("DllCanUnloadNow");}});

var DllGetClassObject = Module.findExportByName("devmgr.dll", "DllGetClassObject")
Interceptor.attach(DllGetClassObject, {onLeave: function (args) {send("DllGetClassObject");}});

var DllRegisterServer = Module.findExportByName("devmgr.dll", "DllRegisterServer")
Interceptor.attach(DllRegisterServer, {onLeave: function (args) {send("DllRegisterServer");}});

var DllUnregisterServer = Module.findExportByName("devmgr.dll", "DllUnregisterServer")
Interceptor.attach(DllUnregisterServer, {onLeave: function (args) {send("DllUnregisterServer");}});

