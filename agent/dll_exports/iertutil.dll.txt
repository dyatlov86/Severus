var CreateIUriBuilder = Module.findExportByName("iertutil.dll", "CreateIUriBuilder")
Interceptor.attach(CreateIUriBuilder, {onLeave: function (args) {send("CreateIUriBuilder");}});

var CreateStringHashN = Module.findExportByName("iertutil.dll", "CreateStringHashN")
Interceptor.attach(CreateStringHashN, {onLeave: function (args) {send("CreateStringHashN");}});

var CreateUri = Module.findExportByName("iertutil.dll", "CreateUri")
Interceptor.attach(CreateUri, {onLeave: function (args) {send("CreateUri");}});

var CreateUriFromMultiByteString = Module.findExportByName("iertutil.dll", "CreateUriFromMultiByteString")
Interceptor.attach(CreateUriFromMultiByteString, {onLeave: function (args) {send("CreateUriFromMultiByteString");}});

var CreateUriPriv = Module.findExportByName("iertutil.dll", "CreateUriPriv")
Interceptor.attach(CreateUriPriv, {onLeave: function (args) {send("CreateUriPriv");}});

var CreateUriWithFragment = Module.findExportByName("iertutil.dll", "CreateUriWithFragment")
Interceptor.attach(CreateUriWithFragment, {onLeave: function (args) {send("CreateUriWithFragment");}});

var DllCanUnloadNow = Module.findExportByName("iertutil.dll", "DllCanUnloadNow")
Interceptor.attach(DllCanUnloadNow, {onLeave: function (args) {send("DllCanUnloadNow");}});

var DllGetActivationFactory = Module.findExportByName("iertutil.dll", "DllGetActivationFactory")
Interceptor.attach(DllGetActivationFactory, {onLeave: function (args) {send("DllGetActivationFactory");}});

var DllGetClassObject = Module.findExportByName("iertutil.dll", "DllGetClassObject")
Interceptor.attach(DllGetClassObject, {onLeave: function (args) {send("DllGetClassObject");}});

var FastMimeGetFileExtension = Module.findExportByName("iertutil.dll", "FastMimeGetFileExtension")
Interceptor.attach(FastMimeGetFileExtension, {onLeave: function (args) {send("FastMimeGetFileExtension");}});

var FastMimeGetIsMimeFilterEnabled = Module.findExportByName("iertutil.dll", "FastMimeGetIsMimeFilterEnabled")
Interceptor.attach(FastMimeGetIsMimeFilterEnabled, {onLeave: function (args) {send("FastMimeGetIsMimeFilterEnabled");}});

var FastMimeLookupKnownType = Module.findExportByName("iertutil.dll", "FastMimeLookupKnownType")
Interceptor.attach(FastMimeLookupKnownType, {onLeave: function (args) {send("FastMimeLookupKnownType");}});

var FastMimeSetIsMimeFilterEnabled = Module.findExportByName("iertutil.dll", "FastMimeSetIsMimeFilterEnabled")
Interceptor.attach(FastMimeSetIsMimeFilterEnabled, {onLeave: function (args) {send("FastMimeSetIsMimeFilterEnabled");}});

var GetIDNSettingsForIE = Module.findExportByName("iertutil.dll", "GetIDNSettingsForIE")
Interceptor.attach(GetIDNSettingsForIE, {onLeave: function (args) {send("GetIDNSettingsForIE");}});

var GetIUriPriv = Module.findExportByName("iertutil.dll", "GetIUriPriv")
Interceptor.attach(GetIUriPriv, {onLeave: function (args) {send("GetIUriPriv");}});

var GetIUriPriv2 = Module.findExportByName("iertutil.dll", "GetIUriPriv2")
Interceptor.attach(GetIUriPriv2, {onLeave: function (args) {send("GetIUriPriv2");}});

var GetPortFromUrlScheme = Module.findExportByName("iertutil.dll", "GetPortFromUrlScheme")
Interceptor.attach(GetPortFromUrlScheme, {onLeave: function (args) {send("GetPortFromUrlScheme");}});

var GetPropertyFromName = Module.findExportByName("iertutil.dll", "GetPropertyFromName")
Interceptor.attach(GetPropertyFromName, {onLeave: function (args) {send("GetPropertyFromName");}});

var GetPropertyName = Module.findExportByName("iertutil.dll", "GetPropertyName")
Interceptor.attach(GetPropertyName, {onLeave: function (args) {send("GetPropertyName");}});

var IEGetFrameUtilExports = Module.findExportByName("iertutil.dll", "IEGetFrameUtilExports")
Interceptor.attach(IEGetFrameUtilExports, {onLeave: function (args) {send("IEGetFrameUtilExports");}});

var IEGetProcessModule = Module.findExportByName("iertutil.dll", "IEGetProcessModule")
Interceptor.attach(IEGetProcessModule, {onLeave: function (args) {send("IEGetProcessModule");}});

var IEGetTabWindowExports = Module.findExportByName("iertutil.dll", "IEGetTabWindowExports")
Interceptor.attach(IEGetTabWindowExports, {onLeave: function (args) {send("IEGetTabWindowExports");}});

var IUriBuilderInternalCreateDomain = Module.findExportByName("iertutil.dll", "IUriBuilderInternalCreateDomain")
Interceptor.attach(IUriBuilderInternalCreateDomain, {onLeave: function (args) {send("IUriBuilderInternalCreateDomain");}});

var ImpersonateUser = Module.findExportByName("iertutil.dll", "ImpersonateUser")
Interceptor.attach(ImpersonateUser, {onLeave: function (args) {send("ImpersonateUser");}});

var IntlPercentEncodeNormalize = Module.findExportByName("iertutil.dll", "IntlPercentEncodeNormalize")
Interceptor.attach(IntlPercentEncodeNormalize, {onLeave: function (args) {send("IntlPercentEncodeNormalize");}});

var IsDWORDProperty = Module.findExportByName("iertutil.dll", "IsDWORDProperty")
Interceptor.attach(IsDWORDProperty, {onLeave: function (args) {send("IsDWORDProperty");}});

var IsStringProperty = Module.findExportByName("iertutil.dll", "IsStringProperty")
Interceptor.attach(IsStringProperty, {onLeave: function (args) {send("IsStringProperty");}});

var OutOfProcessExceptionEventCallback = Module.findExportByName("iertutil.dll", "OutOfProcessExceptionEventCallback")
Interceptor.attach(OutOfProcessExceptionEventCallback, {onLeave: function (args) {send("OutOfProcessExceptionEventCallback");}});

var OutOfProcessExceptionEventDebuggerLaunchCallback = Module.findExportByName("iertutil.dll", "OutOfProcessExceptionEventDebuggerLaunchCallback")
Interceptor.attach(OutOfProcessExceptionEventDebuggerLaunchCallback, {onLeave: function (args) {send("OutOfProcessExceptionEventDebuggerLaunchCallback");}});

var OutOfProcessExceptionEventSignatureCallback = Module.findExportByName("iertutil.dll", "OutOfProcessExceptionEventSignatureCallback")
Interceptor.attach(OutOfProcessExceptionEventSignatureCallback, {onLeave: function (args) {send("OutOfProcessExceptionEventSignatureCallback");}});

var PrivateCoInternetCanonicalizeIUri = Module.findExportByName("iertutil.dll", "PrivateCoInternetCanonicalizeIUri")
Interceptor.attach(PrivateCoInternetCanonicalizeIUri, {onLeave: function (args) {send("PrivateCoInternetCanonicalizeIUri");}});

var PrivateCoInternetCombineIUri = Module.findExportByName("iertutil.dll", "PrivateCoInternetCombineIUri")
Interceptor.attach(PrivateCoInternetCombineIUri, {onLeave: function (args) {send("PrivateCoInternetCombineIUri");}});

var PrivateCoInternetParseIUri = Module.findExportByName("iertutil.dll", "PrivateCoInternetParseIUri")
Interceptor.attach(PrivateCoInternetParseIUri, {onLeave: function (args) {send("PrivateCoInternetParseIUri");}});

var ResetIDNLanguageData = Module.findExportByName("iertutil.dll", "ResetIDNLanguageData")
Interceptor.attach(ResetIDNLanguageData, {onLeave: function (args) {send("ResetIDNLanguageData");}});

var ResetIEExtensibility = Module.findExportByName("iertutil.dll", "ResetIEExtensibility")
Interceptor.attach(ResetIEExtensibility, {onLeave: function (args) {send("ResetIEExtensibility");}});

var ResetIERegistrySettings = Module.findExportByName("iertutil.dll", "ResetIERegistrySettings")
Interceptor.attach(ResetIERegistrySettings, {onLeave: function (args) {send("ResetIERegistrySettings");}});

var RetiredOrdinal = Module.findExportByName("iertutil.dll", "RetiredOrdinal")
Interceptor.attach(RetiredOrdinal, {onLeave: function (args) {send("RetiredOrdinal");}});

var RevertImpersonate = Module.findExportByName("iertutil.dll", "RevertImpersonate")
Interceptor.attach(RevertImpersonate, {onLeave: function (args) {send("RevertImpersonate");}});

var UriFromHostAndScheme = Module.findExportByName("iertutil.dll", "UriFromHostAndScheme")
Interceptor.attach(UriFromHostAndScheme, {onLeave: function (args) {send("UriFromHostAndScheme");}});

