var DiscoverManagementService = Module.findExportByName("mdmregistration.dll", "DiscoverManagementService")
Interceptor.attach(DiscoverManagementService, {onLeave: function (args) {send("DiscoverManagementService");}});

var DiscoverManagementServiceEx = Module.findExportByName("mdmregistration.dll", "DiscoverManagementServiceEx")
Interceptor.attach(DiscoverManagementServiceEx, {onLeave: function (args) {send("DiscoverManagementServiceEx");}});

var FindDiscoveryService = Module.findExportByName("mdmregistration.dll", "FindDiscoveryService")
Interceptor.attach(FindDiscoveryService, {onLeave: function (args) {send("FindDiscoveryService");}});

var GetDeviceManagementConfigInfo = Module.findExportByName("mdmregistration.dll", "GetDeviceManagementConfigInfo")
Interceptor.attach(GetDeviceManagementConfigInfo, {onLeave: function (args) {send("GetDeviceManagementConfigInfo");}});

var GetDeviceRegistrationInfo = Module.findExportByName("mdmregistration.dll", "GetDeviceRegistrationInfo")
Interceptor.attach(GetDeviceRegistrationInfo, {onLeave: function (args) {send("GetDeviceRegistrationInfo");}});

var GetManagementAppHyperlink = Module.findExportByName("mdmregistration.dll", "GetManagementAppHyperlink")
Interceptor.attach(GetManagementAppHyperlink, {onLeave: function (args) {send("GetManagementAppHyperlink");}});

var IsDeviceRegisteredWithManagement = Module.findExportByName("mdmregistration.dll", "IsDeviceRegisteredWithManagement")
Interceptor.attach(IsDeviceRegisteredWithManagement, {onLeave: function (args) {send("IsDeviceRegisteredWithManagement");}});

var IsManagementRegistrationAllowed = Module.findExportByName("mdmregistration.dll", "IsManagementRegistrationAllowed")
Interceptor.attach(IsManagementRegistrationAllowed, {onLeave: function (args) {send("IsManagementRegistrationAllowed");}});

var IsMdmUxWithoutAadAllowed = Module.findExportByName("mdmregistration.dll", "IsMdmUxWithoutAadAllowed")
Interceptor.attach(IsMdmUxWithoutAadAllowed, {onLeave: function (args) {send("IsMdmUxWithoutAadAllowed");}});

var RegisterDeviceWithManagement = Module.findExportByName("mdmregistration.dll", "RegisterDeviceWithManagement")
Interceptor.attach(RegisterDeviceWithManagement, {onLeave: function (args) {send("RegisterDeviceWithManagement");}});

var RegisterDeviceWithManagementUsingAADCredentials = Module.findExportByName("mdmregistration.dll", "RegisterDeviceWithManagementUsingAADCredentials")
Interceptor.attach(RegisterDeviceWithManagementUsingAADCredentials, {onLeave: function (args) {send("RegisterDeviceWithManagementUsingAADCredentials");}});

var RegisterDeviceWithManagementUsingAADDeviceCredentials = Module.findExportByName("mdmregistration.dll", "RegisterDeviceWithManagementUsingAADDeviceCredentials")
Interceptor.attach(RegisterDeviceWithManagementUsingAADDeviceCredentials, {onLeave: function (args) {send("RegisterDeviceWithManagementUsingAADDeviceCredentials");}});

var RegisterDeviceWithManagementUsingAADDeviceCredentials2 = Module.findExportByName("mdmregistration.dll", "RegisterDeviceWithManagementUsingAADDeviceCredentials2")
Interceptor.attach(RegisterDeviceWithManagementUsingAADDeviceCredentials2, {onLeave: function (args) {send("RegisterDeviceWithManagementUsingAADDeviceCredentials2");}});

var SetDeviceManagementConfigInfo = Module.findExportByName("mdmregistration.dll", "SetDeviceManagementConfigInfo")
Interceptor.attach(SetDeviceManagementConfigInfo, {onLeave: function (args) {send("SetDeviceManagementConfigInfo");}});

var SetManagedExternally = Module.findExportByName("mdmregistration.dll", "SetManagedExternally")
Interceptor.attach(SetManagedExternally, {onLeave: function (args) {send("SetManagedExternally");}});

var UnregisterDeviceWithManagement = Module.findExportByName("mdmregistration.dll", "UnregisterDeviceWithManagement")
Interceptor.attach(UnregisterDeviceWithManagement, {onLeave: function (args) {send("UnregisterDeviceWithManagement");}});

