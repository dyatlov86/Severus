var CreateAppContainerProfileWorker = Module.findExportByName("profext.dll", "CreateAppContainerProfileWorker")
Interceptor.attach(CreateAppContainerProfileWorker, {onLeave: function (args) {send("CreateAppContainerProfileWorker");}});

var CreateDirectoryJunctionsForSystemWorker = Module.findExportByName("profext.dll", "CreateDirectoryJunctionsForSystemWorker")
Interceptor.attach(CreateDirectoryJunctionsForSystemWorker, {onLeave: function (args) {send("CreateDirectoryJunctionsForSystemWorker");}});

var CreateDirectoryJunctionsForUserProfileWorker = Module.findExportByName("profext.dll", "CreateDirectoryJunctionsForUserProfileWorker")
Interceptor.attach(CreateDirectoryJunctionsForUserProfileWorker, {onLeave: function (args) {send("CreateDirectoryJunctionsForUserProfileWorker");}});

var CreateGroupExWorker = Module.findExportByName("profext.dll", "CreateGroupExWorker")
Interceptor.attach(CreateGroupExWorker, {onLeave: function (args) {send("CreateGroupExWorker");}});

var CreateLinkFileExWorker = Module.findExportByName("profext.dll", "CreateLinkFileExWorker")
Interceptor.attach(CreateLinkFileExWorker, {onLeave: function (args) {send("CreateLinkFileExWorker");}});

var DeleteAppContainerProfileWorker = Module.findExportByName("profext.dll", "DeleteAppContainerProfileWorker")
Interceptor.attach(DeleteAppContainerProfileWorker, {onLeave: function (args) {send("DeleteAppContainerProfileWorker");}});

var DeleteGroupWorker = Module.findExportByName("profext.dll", "DeleteGroupWorker")
Interceptor.attach(DeleteGroupWorker, {onLeave: function (args) {send("DeleteGroupWorker");}});

var DeleteLinkFileWorker = Module.findExportByName("profext.dll", "DeleteLinkFileWorker")
Interceptor.attach(DeleteLinkFileWorker, {onLeave: function (args) {send("DeleteLinkFileWorker");}});

var DeriveAppContainerSidFromAppContainerNameWorker = Module.findExportByName("profext.dll", "DeriveAppContainerSidFromAppContainerNameWorker")
Interceptor.attach(DeriveAppContainerSidFromAppContainerNameWorker, {onLeave: function (args) {send("DeriveAppContainerSidFromAppContainerNameWorker");}});

var DeriveRestrictedAppContainerSidFromAppContainerSidAndRestrictedNameWorker = Module.findExportByName("profext.dll", "DeriveRestrictedAppContainerSidFromAppContainerSidAndRestrictedNameWorker")
Interceptor.attach(DeriveRestrictedAppContainerSidFromAppContainerSidAndRestrictedNameWorker, {onLeave: function (args) {send("DeriveRestrictedAppContainerSidFromAppContainerSidAndRestrictedNameWorker");}});

var GetAppContainerFolderPathWorker = Module.findExportByName("profext.dll", "GetAppContainerFolderPathWorker")
Interceptor.attach(GetAppContainerFolderPathWorker, {onLeave: function (args) {send("GetAppContainerFolderPathWorker");}});

var GetAppContainerRegistryLocationWorker = Module.findExportByName("profext.dll", "GetAppContainerRegistryLocationWorker")
Interceptor.attach(GetAppContainerRegistryLocationWorker, {onLeave: function (args) {send("GetAppContainerRegistryLocationWorker");}});

var IsAppContainerProfilePresentWorker = Module.findExportByName("profext.dll", "IsAppContainerProfilePresentWorker")
Interceptor.attach(IsAppContainerProfilePresentWorker, {onLeave: function (args) {send("IsAppContainerProfilePresentWorker");}});

var LookupAppContainerDisplayNameWorker = Module.findExportByName("profext.dll", "LookupAppContainerDisplayNameWorker")
Interceptor.attach(LookupAppContainerDisplayNameWorker, {onLeave: function (args) {send("LookupAppContainerDisplayNameWorker");}});

var ProcessGroupPolicyCompletedExWorker = Module.findExportByName("profext.dll", "ProcessGroupPolicyCompletedExWorker")
Interceptor.attach(ProcessGroupPolicyCompletedExWorker, {onLeave: function (args) {send("ProcessGroupPolicyCompletedExWorker");}});

var ProcessGroupPolicyCompletedWorker = Module.findExportByName("profext.dll", "ProcessGroupPolicyCompletedWorker")
Interceptor.attach(ProcessGroupPolicyCompletedWorker, {onLeave: function (args) {send("ProcessGroupPolicyCompletedWorker");}});

var RsopAccessCheckByTypeWorker = Module.findExportByName("profext.dll", "RsopAccessCheckByTypeWorker")
Interceptor.attach(RsopAccessCheckByTypeWorker, {onLeave: function (args) {send("RsopAccessCheckByTypeWorker");}});

var RsopFileAccessCheckWorker = Module.findExportByName("profext.dll", "RsopFileAccessCheckWorker")
Interceptor.attach(RsopFileAccessCheckWorker, {onLeave: function (args) {send("RsopFileAccessCheckWorker");}});

var RsopResetPolicySettingStatusWorker = Module.findExportByName("profext.dll", "RsopResetPolicySettingStatusWorker")
Interceptor.attach(RsopResetPolicySettingStatusWorker, {onLeave: function (args) {send("RsopResetPolicySettingStatusWorker");}});

var RsopSetPolicySettingStatusWorker = Module.findExportByName("profext.dll", "RsopSetPolicySettingStatusWorker")
Interceptor.attach(RsopSetPolicySettingStatusWorker, {onLeave: function (args) {send("RsopSetPolicySettingStatusWorker");}});

var UpdateAppContainerProfileWorker = Module.findExportByName("profext.dll", "UpdateAppContainerProfileWorker")
Interceptor.attach(UpdateAppContainerProfileWorker, {onLeave: function (args) {send("UpdateAppContainerProfileWorker");}});

