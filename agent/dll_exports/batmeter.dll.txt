var BatMeterIconAnimationReset = Module.findExportByName("batmeter.dll", "BatMeterIconAnimationReset")
Interceptor.attach(BatMeterIconAnimationReset, {onLeave: function (args) {send("BatMeterIconAnimationReset");}});

var BatMeterIconThemeReset = Module.findExportByName("batmeter.dll", "BatMeterIconThemeReset")
Interceptor.attach(BatMeterIconThemeReset, {onLeave: function (args) {send("BatMeterIconThemeReset");}});

var BatMeterOnDeviceChange = Module.findExportByName("batmeter.dll", "BatMeterOnDeviceChange")
Interceptor.attach(BatMeterOnDeviceChange, {onLeave: function (args) {send("BatMeterOnDeviceChange");}});

var CleanupBatteryData = Module.findExportByName("batmeter.dll", "CleanupBatteryData")
Interceptor.attach(CleanupBatteryData, {onLeave: function (args) {send("CleanupBatteryData");}});

var CreateBatteryData = Module.findExportByName("batmeter.dll", "CreateBatteryData")
Interceptor.attach(CreateBatteryData, {onLeave: function (args) {send("CreateBatteryData");}});

var GetBatMeterIconAnimationState = Module.findExportByName("batmeter.dll", "GetBatMeterIconAnimationState")
Interceptor.attach(GetBatMeterIconAnimationState, {onLeave: function (args) {send("GetBatMeterIconAnimationState");}});

var GetBatMeterIconAnimationTimeDelay = Module.findExportByName("batmeter.dll", "GetBatMeterIconAnimationTimeDelay")
Interceptor.attach(GetBatMeterIconAnimationTimeDelay, {onLeave: function (args) {send("GetBatMeterIconAnimationTimeDelay");}});

var GetBatMeterIconAnimationUpdate = Module.findExportByName("batmeter.dll", "GetBatMeterIconAnimationUpdate")
Interceptor.attach(GetBatMeterIconAnimationUpdate, {onLeave: function (args) {send("GetBatMeterIconAnimationUpdate");}});

var GetBatteryCapacityInfo = Module.findExportByName("batmeter.dll", "GetBatteryCapacityInfo")
Interceptor.attach(GetBatteryCapacityInfo, {onLeave: function (args) {send("GetBatteryCapacityInfo");}});

var GetBatteryDetails = Module.findExportByName("batmeter.dll", "GetBatteryDetails")
Interceptor.attach(GetBatteryDetails, {onLeave: function (args) {send("GetBatteryDetails");}});

var GetBatteryImmersiveIcon = Module.findExportByName("batmeter.dll", "GetBatteryImmersiveIcon")
Interceptor.attach(GetBatteryImmersiveIcon, {onLeave: function (args) {send("GetBatteryImmersiveIcon");}});

var GetBatteryInfo = Module.findExportByName("batmeter.dll", "GetBatteryInfo")
Interceptor.attach(GetBatteryInfo, {onLeave: function (args) {send("GetBatteryInfo");}});

var GetBatteryStatusText = Module.findExportByName("batmeter.dll", "GetBatteryStatusText")
Interceptor.attach(GetBatteryStatusText, {onLeave: function (args) {send("GetBatteryStatusText");}});

var GetBatteryWorkingState = Module.findExportByName("batmeter.dll", "GetBatteryWorkingState")
Interceptor.attach(GetBatteryWorkingState, {onLeave: function (args) {send("GetBatteryWorkingState");}});

var IsBatteryBad = Module.findExportByName("batmeter.dll", "IsBatteryBad")
Interceptor.attach(IsBatteryBad, {onLeave: function (args) {send("IsBatteryBad");}});

var IsBatteryHealthWarningEnabled = Module.findExportByName("batmeter.dll", "IsBatteryHealthWarningEnabled")
Interceptor.attach(IsBatteryHealthWarningEnabled, {onLeave: function (args) {send("IsBatteryHealthWarningEnabled");}});

var IsBatteryLevelCritical = Module.findExportByName("batmeter.dll", "IsBatteryLevelCritical")
Interceptor.attach(IsBatteryLevelCritical, {onLeave: function (args) {send("IsBatteryLevelCritical");}});

var IsBatteryLevelLow = Module.findExportByName("batmeter.dll", "IsBatteryLevelLow")
Interceptor.attach(IsBatteryLevelLow, {onLeave: function (args) {send("IsBatteryLevelLow");}});

var IsBatteryLevelReserve = Module.findExportByName("batmeter.dll", "IsBatteryLevelReserve")
Interceptor.attach(IsBatteryLevelReserve, {onLeave: function (args) {send("IsBatteryLevelReserve");}});

var PowerCapabilities = Module.findExportByName("batmeter.dll", "PowerCapabilities")
Interceptor.attach(PowerCapabilities, {onLeave: function (args) {send("PowerCapabilities");}});

var QueryBatteryData = Module.findExportByName("batmeter.dll", "QueryBatteryData")
Interceptor.attach(QueryBatteryData, {onLeave: function (args) {send("QueryBatteryData");}});

var SetBatteryHealthWarningState = Module.findExportByName("batmeter.dll", "SetBatteryHealthWarningState")
Interceptor.attach(SetBatteryHealthWarningState, {onLeave: function (args) {send("SetBatteryHealthWarningState");}});

var SetBatteryLevel = Module.findExportByName("batmeter.dll", "SetBatteryLevel")
Interceptor.attach(SetBatteryLevel, {onLeave: function (args) {send("SetBatteryLevel");}});

var SetBatteryWorkingState = Module.findExportByName("batmeter.dll", "SetBatteryWorkingState")
Interceptor.attach(SetBatteryWorkingState, {onLeave: function (args) {send("SetBatteryWorkingState");}});

var SubscribeBatteryUpdateNotification = Module.findExportByName("batmeter.dll", "SubscribeBatteryUpdateNotification")
Interceptor.attach(SubscribeBatteryUpdateNotification, {onLeave: function (args) {send("SubscribeBatteryUpdateNotification");}});

var UnsubscribeBatteryUpdateNotification = Module.findExportByName("batmeter.dll", "UnsubscribeBatteryUpdateNotification")
Interceptor.attach(UnsubscribeBatteryUpdateNotification, {onLeave: function (args) {send("UnsubscribeBatteryUpdateNotification");}});

var UpdateBatteryData = Module.findExportByName("batmeter.dll", "UpdateBatteryData")
Interceptor.attach(UpdateBatteryData, {onLeave: function (args) {send("UpdateBatteryData");}});

var UpdateBatteryDataAsync = Module.findExportByName("batmeter.dll", "UpdateBatteryDataAsync")
Interceptor.attach(UpdateBatteryDataAsync, {onLeave: function (args) {send("UpdateBatteryDataAsync");}});

