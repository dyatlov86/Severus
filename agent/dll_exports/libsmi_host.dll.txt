var gpuvsmi_allocate_vf = Module.findExportByName("libsmi_host.dll", "gpuvsmi_allocate_vf")
Interceptor.attach(gpuvsmi_allocate_vf, {onLeave: function (args) {send("gpuvsmi_allocate_vf");}});

var gpuvsmi_clear_bad_page_info = Module.findExportByName("libsmi_host.dll", "gpuvsmi_clear_bad_page_info")
Interceptor.attach(gpuvsmi_clear_bad_page_info, {onLeave: function (args) {send("gpuvsmi_clear_bad_page_info");}});

var gpuvsmi_clear_vf_fb = Module.findExportByName("libsmi_host.dll", "gpuvsmi_clear_vf_fb")
Interceptor.attach(gpuvsmi_clear_vf_fb, {onLeave: function (args) {send("gpuvsmi_clear_vf_fb");}});

var gpuvsmi_clear_vf_fb_ex = Module.findExportByName("libsmi_host.dll", "gpuvsmi_clear_vf_fb_ex")
Interceptor.attach(gpuvsmi_clear_vf_fb_ex, {onLeave: function (args) {send("gpuvsmi_clear_vf_fb_ex");}});

var gpuvsmi_ecc_error_inject = Module.findExportByName("libsmi_host.dll", "gpuvsmi_ecc_error_inject")
Interceptor.attach(gpuvsmi_ecc_error_inject, {onLeave: function (args) {send("gpuvsmi_ecc_error_inject");}});

var gpuvsmi_event_create = Module.findExportByName("libsmi_host.dll", "gpuvsmi_event_create")
Interceptor.attach(gpuvsmi_event_create, {onLeave: function (args) {send("gpuvsmi_event_create");}});

var gpuvsmi_event_destroy = Module.findExportByName("libsmi_host.dll", "gpuvsmi_event_destroy")
Interceptor.attach(gpuvsmi_event_destroy, {onLeave: function (args) {send("gpuvsmi_event_destroy");}});

var gpuvsmi_event_read = Module.findExportByName("libsmi_host.dll", "gpuvsmi_event_read")
Interceptor.attach(gpuvsmi_event_read, {onLeave: function (args) {send("gpuvsmi_event_read");}});

var gpuvsmi_fini = Module.findExportByName("libsmi_host.dll", "gpuvsmi_fini")
Interceptor.attach(gpuvsmi_fini, {onLeave: function (args) {send("gpuvsmi_fini");}});

var gpuvsmi_free_vf = Module.findExportByName("libsmi_host.dll", "gpuvsmi_free_vf")
Interceptor.attach(gpuvsmi_free_vf, {onLeave: function (args) {send("gpuvsmi_free_vf");}});

var gpuvsmi_get_asic_info = Module.findExportByName("libsmi_host.dll", "gpuvsmi_get_asic_info")
Interceptor.attach(gpuvsmi_get_asic_info, {onLeave: function (args) {send("gpuvsmi_get_asic_info");}});

var gpuvsmi_get_bad_page_info = Module.findExportByName("libsmi_host.dll", "gpuvsmi_get_bad_page_info")
Interceptor.attach(gpuvsmi_get_bad_page_info, {onLeave: function (args) {send("gpuvsmi_get_bad_page_info");}});

var gpuvsmi_get_board_info = Module.findExportByName("libsmi_host.dll", "gpuvsmi_get_board_info")
Interceptor.attach(gpuvsmi_get_board_info, {onLeave: function (args) {send("gpuvsmi_get_board_info");}});

var gpuvsmi_get_bus_info = Module.findExportByName("libsmi_host.dll", "gpuvsmi_get_bus_info")
Interceptor.attach(gpuvsmi_get_bus_info, {onLeave: function (args) {send("gpuvsmi_get_bus_info");}});

var gpuvsmi_get_caps_info = Module.findExportByName("libsmi_host.dll", "gpuvsmi_get_caps_info")
Interceptor.attach(gpuvsmi_get_caps_info, {onLeave: function (args) {send("gpuvsmi_get_caps_info");}});

var gpuvsmi_get_clock_measure = Module.findExportByName("libsmi_host.dll", "gpuvsmi_get_clock_measure")
Interceptor.attach(gpuvsmi_get_clock_measure, {onLeave: function (args) {send("gpuvsmi_get_clock_measure");}});

var gpuvsmi_get_debug_option = Module.findExportByName("libsmi_host.dll", "gpuvsmi_get_debug_option")
Interceptor.attach(gpuvsmi_get_debug_option, {onLeave: function (args) {send("gpuvsmi_get_debug_option");}});

var gpuvsmi_get_device_bdf = Module.findExportByName("libsmi_host.dll", "gpuvsmi_get_device_bdf")
Interceptor.attach(gpuvsmi_get_device_bdf, {onLeave: function (args) {send("gpuvsmi_get_device_bdf");}});

var gpuvsmi_get_device_count = Module.findExportByName("libsmi_host.dll", "gpuvsmi_get_device_count")
Interceptor.attach(gpuvsmi_get_device_count, {onLeave: function (args) {send("gpuvsmi_get_device_count");}});

var gpuvsmi_get_device_handle = Module.findExportByName("libsmi_host.dll", "gpuvsmi_get_device_handle")
Interceptor.attach(gpuvsmi_get_device_handle, {onLeave: function (args) {send("gpuvsmi_get_device_handle");}});

var gpuvsmi_get_device_parent_handle = Module.findExportByName("libsmi_host.dll", "gpuvsmi_get_device_parent_handle")
Interceptor.attach(gpuvsmi_get_device_parent_handle, {onLeave: function (args) {send("gpuvsmi_get_device_parent_handle");}});

var gpuvsmi_get_device_uuid = Module.findExportByName("libsmi_host.dll", "gpuvsmi_get_device_uuid")
Interceptor.attach(gpuvsmi_get_device_uuid, {onLeave: function (args) {send("gpuvsmi_get_device_uuid");}});

var gpuvsmi_get_devices = Module.findExportByName("libsmi_host.dll", "gpuvsmi_get_devices")
Interceptor.attach(gpuvsmi_get_devices, {onLeave: function (args) {send("gpuvsmi_get_devices");}});

var gpuvsmi_get_dfc_ucode_table = Module.findExportByName("libsmi_host.dll", "gpuvsmi_get_dfc_ucode_table")
Interceptor.attach(gpuvsmi_get_dfc_ucode_table, {onLeave: function (args) {send("gpuvsmi_get_dfc_ucode_table");}});

var gpuvsmi_get_ecc_error_count = Module.findExportByName("libsmi_host.dll", "gpuvsmi_get_ecc_error_count")
Interceptor.attach(gpuvsmi_get_ecc_error_count, {onLeave: function (args) {send("gpuvsmi_get_ecc_error_count");}});

var gpuvsmi_get_fb_info = Module.findExportByName("libsmi_host.dll", "gpuvsmi_get_fb_info")
Interceptor.attach(gpuvsmi_get_fb_info, {onLeave: function (args) {send("gpuvsmi_get_fb_info");}});

var gpuvsmi_get_fb_regions_info = Module.findExportByName("libsmi_host.dll", "gpuvsmi_get_fb_regions_info")
Interceptor.attach(gpuvsmi_get_fb_regions_info, {onLeave: function (args) {send("gpuvsmi_get_fb_regions_info");}});

var gpuvsmi_get_frequency_target_num_supported_modes = Module.findExportByName("libsmi_host.dll", "gpuvsmi_get_frequency_target_num_supported_modes")
Interceptor.attach(gpuvsmi_get_frequency_target_num_supported_modes, {onLeave: function (args) {send("gpuvsmi_get_frequency_target_num_supported_modes");}});

var gpuvsmi_get_gpu_activity = Module.findExportByName("libsmi_host.dll", "gpuvsmi_get_gpu_activity")
Interceptor.attach(gpuvsmi_get_gpu_activity, {onLeave: function (args) {send("gpuvsmi_get_gpu_activity");}});

var gpuvsmi_get_guard_info = Module.findExportByName("libsmi_host.dll", "gpuvsmi_get_guard_info")
Interceptor.attach(gpuvsmi_get_guard_info, {onLeave: function (args) {send("gpuvsmi_get_guard_info");}});

var gpuvsmi_get_guest_data = Module.findExportByName("libsmi_host.dll", "gpuvsmi_get_guest_data")
Interceptor.attach(gpuvsmi_get_guest_data, {onLeave: function (args) {send("gpuvsmi_get_guest_data");}});

var gpuvsmi_get_host_driver_version = Module.findExportByName("libsmi_host.dll", "gpuvsmi_get_host_driver_version")
Interceptor.attach(gpuvsmi_get_host_driver_version, {onLeave: function (args) {send("gpuvsmi_get_host_driver_version");}});

var gpuvsmi_get_max_target_frequency_mode = Module.findExportByName("libsmi_host.dll", "gpuvsmi_get_max_target_frequency_mode")
Interceptor.attach(gpuvsmi_get_max_target_frequency_mode, {onLeave: function (args) {send("gpuvsmi_get_max_target_frequency_mode");}});

var gpuvsmi_get_num_available_slots = Module.findExportByName("libsmi_host.dll", "gpuvsmi_get_num_available_slots")
Interceptor.attach(gpuvsmi_get_num_available_slots, {onLeave: function (args) {send("gpuvsmi_get_num_available_slots");}});

var gpuvsmi_get_num_vf_enabled = Module.findExportByName("libsmi_host.dll", "gpuvsmi_get_num_vf_enabled")
Interceptor.attach(gpuvsmi_get_num_vf_enabled, {onLeave: function (args) {send("gpuvsmi_get_num_vf_enabled");}});

var gpuvsmi_get_num_vf_supported = Module.findExportByName("libsmi_host.dll", "gpuvsmi_get_num_vf_supported")
Interceptor.attach(gpuvsmi_get_num_vf_supported, {onLeave: function (args) {send("gpuvsmi_get_num_vf_supported");}});

var gpuvsmi_get_partition_profile_info = Module.findExportByName("libsmi_host.dll", "gpuvsmi_get_partition_profile_info")
Interceptor.attach(gpuvsmi_get_partition_profile_info, {onLeave: function (args) {send("gpuvsmi_get_partition_profile_info");}});

var gpuvsmi_get_pcie_link_status = Module.findExportByName("libsmi_host.dll", "gpuvsmi_get_pcie_link_status")
Interceptor.attach(gpuvsmi_get_pcie_link_status, {onLeave: function (args) {send("gpuvsmi_get_pcie_link_status");}});

var gpuvsmi_get_power_info = Module.findExportByName("libsmi_host.dll", "gpuvsmi_get_power_info")
Interceptor.attach(gpuvsmi_get_power_info, {onLeave: function (args) {send("gpuvsmi_get_power_info");}});

var gpuvsmi_get_power_limit = Module.findExportByName("libsmi_host.dll", "gpuvsmi_get_power_limit")
Interceptor.attach(gpuvsmi_get_power_limit, {onLeave: function (args) {send("gpuvsmi_get_power_limit");}});

var gpuvsmi_get_power_measure = Module.findExportByName("libsmi_host.dll", "gpuvsmi_get_power_measure")
Interceptor.attach(gpuvsmi_get_power_measure, {onLeave: function (args) {send("gpuvsmi_get_power_measure");}});

var gpuvsmi_get_ras_features_enabled = Module.findExportByName("libsmi_host.dll", "gpuvsmi_get_ras_features_enabled")
Interceptor.attach(gpuvsmi_get_ras_features_enabled, {onLeave: function (args) {send("gpuvsmi_get_ras_features_enabled");}});

var gpuvsmi_get_ras_features_supported = Module.findExportByName("libsmi_host.dll", "gpuvsmi_get_ras_features_supported")
Interceptor.attach(gpuvsmi_get_ras_features_supported, {onLeave: function (args) {send("gpuvsmi_get_ras_features_supported");}});

var gpuvsmi_get_remote_debug_data = Module.findExportByName("libsmi_host.dll", "gpuvsmi_get_remote_debug_data")
Interceptor.attach(gpuvsmi_get_remote_debug_data, {onLeave: function (args) {send("gpuvsmi_get_remote_debug_data");}});

var gpuvsmi_get_remote_debug_data_bdf = Module.findExportByName("libsmi_host.dll", "gpuvsmi_get_remote_debug_data_bdf")
Interceptor.attach(gpuvsmi_get_remote_debug_data_bdf, {onLeave: function (args) {send("gpuvsmi_get_remote_debug_data_bdf");}});

var gpuvsmi_get_sched_info = Module.findExportByName("libsmi_host.dll", "gpuvsmi_get_sched_info")
Interceptor.attach(gpuvsmi_get_sched_info, {onLeave: function (args) {send("gpuvsmi_get_sched_info");}});

var gpuvsmi_get_target_frequency_mode = Module.findExportByName("libsmi_host.dll", "gpuvsmi_get_target_frequency_mode")
Interceptor.attach(gpuvsmi_get_target_frequency_mode, {onLeave: function (args) {send("gpuvsmi_get_target_frequency_mode");}});

var gpuvsmi_get_thermal_limit = Module.findExportByName("libsmi_host.dll", "gpuvsmi_get_thermal_limit")
Interceptor.attach(gpuvsmi_get_thermal_limit, {onLeave: function (args) {send("gpuvsmi_get_thermal_limit");}});

var gpuvsmi_get_thermal_measure = Module.findExportByName("libsmi_host.dll", "gpuvsmi_get_thermal_measure")
Interceptor.attach(gpuvsmi_get_thermal_measure, {onLeave: function (args) {send("gpuvsmi_get_thermal_measure");}});

var gpuvsmi_get_ucode_error_records = Module.findExportByName("libsmi_host.dll", "gpuvsmi_get_ucode_error_records")
Interceptor.attach(gpuvsmi_get_ucode_error_records, {onLeave: function (args) {send("gpuvsmi_get_ucode_error_records");}});

var gpuvsmi_get_ucode_info = Module.findExportByName("libsmi_host.dll", "gpuvsmi_get_ucode_info")
Interceptor.attach(gpuvsmi_get_ucode_info, {onLeave: function (args) {send("gpuvsmi_get_ucode_info");}});

var gpuvsmi_get_vbios_hash = Module.findExportByName("libsmi_host.dll", "gpuvsmi_get_vbios_hash")
Interceptor.attach(gpuvsmi_get_vbios_hash, {onLeave: function (args) {send("gpuvsmi_get_vbios_hash");}});

var gpuvsmi_get_vbios_info = Module.findExportByName("libsmi_host.dll", "gpuvsmi_get_vbios_info")
Interceptor.attach(gpuvsmi_get_vbios_info, {onLeave: function (args) {send("gpuvsmi_get_vbios_info");}});

var gpuvsmi_get_vf_config = Module.findExportByName("libsmi_host.dll", "gpuvsmi_get_vf_config")
Interceptor.attach(gpuvsmi_get_vf_config, {onLeave: function (args) {send("gpuvsmi_get_vf_config");}});

var gpuvsmi_get_vf_handle_from_idx = Module.findExportByName("libsmi_host.dll", "gpuvsmi_get_vf_handle_from_idx")
Interceptor.attach(gpuvsmi_get_vf_handle_from_idx, {onLeave: function (args) {send("gpuvsmi_get_vf_handle_from_idx");}});

var gpuvsmi_get_vf_mm_config = Module.findExportByName("libsmi_host.dll", "gpuvsmi_get_vf_mm_config")
Interceptor.attach(gpuvsmi_get_vf_mm_config, {onLeave: function (args) {send("gpuvsmi_get_vf_mm_config");}});

var gpuvsmi_get_vf_partition_info = Module.findExportByName("libsmi_host.dll", "gpuvsmi_get_vf_partition_info")
Interceptor.attach(gpuvsmi_get_vf_partition_info, {onLeave: function (args) {send("gpuvsmi_get_vf_partition_info");}});

var gpuvsmi_get_vf_performance_info = Module.findExportByName("libsmi_host.dll", "gpuvsmi_get_vf_performance_info")
Interceptor.attach(gpuvsmi_get_vf_performance_info, {onLeave: function (args) {send("gpuvsmi_get_vf_performance_info");}});

var gpuvsmi_get_vf_ucode_info = Module.findExportByName("libsmi_host.dll", "gpuvsmi_get_vf_ucode_info")
Interceptor.attach(gpuvsmi_get_vf_ucode_info, {onLeave: function (args) {send("gpuvsmi_get_vf_ucode_info");}});

var gpuvsmi_gpu_clear_marc_aperture = Module.findExportByName("libsmi_host.dll", "gpuvsmi_gpu_clear_marc_aperture")
Interceptor.attach(gpuvsmi_gpu_clear_marc_aperture, {onLeave: function (args) {send("gpuvsmi_gpu_clear_marc_aperture");}});

var gpuvsmi_gpu_get_marc_aperture = Module.findExportByName("libsmi_host.dll", "gpuvsmi_gpu_get_marc_aperture")
Interceptor.attach(gpuvsmi_gpu_get_marc_aperture, {onLeave: function (args) {send("gpuvsmi_gpu_get_marc_aperture");}});

var gpuvsmi_gpu_get_marc_aperture_num = Module.findExportByName("libsmi_host.dll", "gpuvsmi_gpu_get_marc_aperture_num")
Interceptor.attach(gpuvsmi_gpu_get_marc_aperture_num, {onLeave: function (args) {send("gpuvsmi_gpu_get_marc_aperture_num");}});

var gpuvsmi_gpu_reset = Module.findExportByName("libsmi_host.dll", "gpuvsmi_gpu_reset")
Interceptor.attach(gpuvsmi_gpu_reset, {onLeave: function (args) {send("gpuvsmi_gpu_reset");}});

var gpuvsmi_gpu_set_marc_aperture = Module.findExportByName("libsmi_host.dll", "gpuvsmi_gpu_set_marc_aperture")
Interceptor.attach(gpuvsmi_gpu_set_marc_aperture, {onLeave: function (args) {send("gpuvsmi_gpu_set_marc_aperture");}});

var gpuvsmi_init = Module.findExportByName("libsmi_host.dll", "gpuvsmi_init")
Interceptor.attach(gpuvsmi_init, {onLeave: function (args) {send("gpuvsmi_init");}});

var gpuvsmi_insert_error_code = Module.findExportByName("libsmi_host.dll", "gpuvsmi_insert_error_code")
Interceptor.attach(gpuvsmi_insert_error_code, {onLeave: function (args) {send("gpuvsmi_insert_error_code");}});

var gpuvsmi_priv_mmsch_read_config = Module.findExportByName("libsmi_host.dll", "gpuvsmi_priv_mmsch_read_config")
Interceptor.attach(gpuvsmi_priv_mmsch_read_config, {onLeave: function (args) {send("gpuvsmi_priv_mmsch_read_config");}});

var gpuvsmi_priv_mmsch_write_config = Module.findExportByName("libsmi_host.dll", "gpuvsmi_priv_mmsch_write_config")
Interceptor.attach(gpuvsmi_priv_mmsch_write_config, {onLeave: function (args) {send("gpuvsmi_priv_mmsch_write_config");}});

var gpuvsmi_query_power_saving_mode = Module.findExportByName("libsmi_host.dll", "gpuvsmi_query_power_saving_mode")
Interceptor.attach(gpuvsmi_query_power_saving_mode, {onLeave: function (args) {send("gpuvsmi_query_power_saving_mode");}});

var gpuvsmi_query_power_saving_status = Module.findExportByName("libsmi_host.dll", "gpuvsmi_query_power_saving_status")
Interceptor.attach(gpuvsmi_query_power_saving_status, {onLeave: function (args) {send("gpuvsmi_query_power_saving_status");}});

var gpuvsmi_read_pci_config = Module.findExportByName("libsmi_host.dll", "gpuvsmi_read_pci_config")
Interceptor.attach(gpuvsmi_read_pci_config, {onLeave: function (args) {send("gpuvsmi_read_pci_config");}});

var gpuvsmi_reset_vf = Module.findExportByName("libsmi_host.dll", "gpuvsmi_reset_vf")
Interceptor.attach(gpuvsmi_reset_vf, {onLeave: function (args) {send("gpuvsmi_reset_vf");}});

var gpuvsmi_resume_vf = Module.findExportByName("libsmi_host.dll", "gpuvsmi_resume_vf")
Interceptor.attach(gpuvsmi_resume_vf, {onLeave: function (args) {send("gpuvsmi_resume_vf");}});

var gpuvsmi_set_debug_option = Module.findExportByName("libsmi_host.dll", "gpuvsmi_set_debug_option")
Interceptor.attach(gpuvsmi_set_debug_option, {onLeave: function (args) {send("gpuvsmi_set_debug_option");}});

var gpuvsmi_set_num_vf_enabled = Module.findExportByName("libsmi_host.dll", "gpuvsmi_set_num_vf_enabled")
Interceptor.attach(gpuvsmi_set_num_vf_enabled, {onLeave: function (args) {send("gpuvsmi_set_num_vf_enabled");}});

var gpuvsmi_set_pf_hang_mode = Module.findExportByName("libsmi_host.dll", "gpuvsmi_set_pf_hang_mode")
Interceptor.attach(gpuvsmi_set_pf_hang_mode, {onLeave: function (args) {send("gpuvsmi_set_pf_hang_mode");}});

var gpuvsmi_set_power_saving_sleep_state = Module.findExportByName("libsmi_host.dll", "gpuvsmi_set_power_saving_sleep_state")
Interceptor.attach(gpuvsmi_set_power_saving_sleep_state, {onLeave: function (args) {send("gpuvsmi_set_power_saving_sleep_state");}});

var gpuvsmi_set_target_frequency_mode = Module.findExportByName("libsmi_host.dll", "gpuvsmi_set_target_frequency_mode")
Interceptor.attach(gpuvsmi_set_target_frequency_mode, {onLeave: function (args) {send("gpuvsmi_set_target_frequency_mode");}});

var gpuvsmi_set_vf = Module.findExportByName("libsmi_host.dll", "gpuvsmi_set_vf")
Interceptor.attach(gpuvsmi_set_vf, {onLeave: function (args) {send("gpuvsmi_set_vf");}});

var gpuvsmi_stop_vf = Module.findExportByName("libsmi_host.dll", "gpuvsmi_stop_vf")
Interceptor.attach(gpuvsmi_stop_vf, {onLeave: function (args) {send("gpuvsmi_stop_vf");}});

var gpuvsmi_suspend_vf = Module.findExportByName("libsmi_host.dll", "gpuvsmi_suspend_vf")
Interceptor.attach(gpuvsmi_suspend_vf, {onLeave: function (args) {send("gpuvsmi_suspend_vf");}});

var gpuvsmi_turn_on_ecc_error_injection = Module.findExportByName("libsmi_host.dll", "gpuvsmi_turn_on_ecc_error_injection")
Interceptor.attach(gpuvsmi_turn_on_ecc_error_injection, {onLeave: function (args) {send("gpuvsmi_turn_on_ecc_error_injection");}});

var gpuvsmi_ucode_live_update = Module.findExportByName("libsmi_host.dll", "gpuvsmi_ucode_live_update")
Interceptor.attach(gpuvsmi_ucode_live_update, {onLeave: function (args) {send("gpuvsmi_ucode_live_update");}});

var gpuvsmi_write_pci_config = Module.findExportByName("libsmi_host.dll", "gpuvsmi_write_pci_config")
Interceptor.attach(gpuvsmi_write_pci_config, {onLeave: function (args) {send("gpuvsmi_write_pci_config");}});

