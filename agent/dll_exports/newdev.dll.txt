var DeviceInternetSettingUiW = Module.findExportByName("newdev.dll", "DeviceInternetSettingUiW")
Interceptor.attach(DeviceInternetSettingUiW, {onLeave: function (args) {send("DeviceInternetSettingUiW");}});

var DiInstallDevice = Module.findExportByName("newdev.dll", "DiInstallDevice")
Interceptor.attach(DiInstallDevice, {onLeave: function (args) {send("DiInstallDevice");}});

var DiInstallDriverA = Module.findExportByName("newdev.dll", "DiInstallDriverA")
Interceptor.attach(DiInstallDriverA, {onLeave: function (args) {send("DiInstallDriverA");}});

var DiInstallDriverW = Module.findExportByName("newdev.dll", "DiInstallDriverW")
Interceptor.attach(DiInstallDriverW, {onLeave: function (args) {send("DiInstallDriverW");}});

var DiRollbackDriver = Module.findExportByName("newdev.dll", "DiRollbackDriver")
Interceptor.attach(DiRollbackDriver, {onLeave: function (args) {send("DiRollbackDriver");}});

var DiShowUpdateDevice = Module.findExportByName("newdev.dll", "DiShowUpdateDevice")
Interceptor.attach(DiShowUpdateDevice, {onLeave: function (args) {send("DiShowUpdateDevice");}});

var DiShowUpdateDriver = Module.findExportByName("newdev.dll", "DiShowUpdateDriver")
Interceptor.attach(DiShowUpdateDriver, {onLeave: function (args) {send("DiShowUpdateDriver");}});

var DiUninstallDevice = Module.findExportByName("newdev.dll", "DiUninstallDevice")
Interceptor.attach(DiUninstallDevice, {onLeave: function (args) {send("DiUninstallDevice");}});

var DiUninstallDriverA = Module.findExportByName("newdev.dll", "DiUninstallDriverA")
Interceptor.attach(DiUninstallDriverA, {onLeave: function (args) {send("DiUninstallDriverA");}});

var DiUninstallDriverW = Module.findExportByName("newdev.dll", "DiUninstallDriverW")
Interceptor.attach(DiUninstallDriverW, {onLeave: function (args) {send("DiUninstallDriverW");}});

var GetInternetPolicies = Module.findExportByName("newdev.dll", "GetInternetPolicies")
Interceptor.attach(GetInternetPolicies, {onLeave: function (args) {send("GetInternetPolicies");}});

var InstallLegacyDeviceDriver = Module.findExportByName("newdev.dll", "InstallLegacyDeviceDriver")
Interceptor.attach(InstallLegacyDeviceDriver, {onLeave: function (args) {send("InstallLegacyDeviceDriver");}});

var InstallNewDevice = Module.findExportByName("newdev.dll", "InstallNewDevice")
Interceptor.attach(InstallNewDevice, {onLeave: function (args) {send("InstallNewDevice");}});

var InstallSelectedDriver = Module.findExportByName("newdev.dll", "InstallSelectedDriver")
Interceptor.attach(InstallSelectedDriver, {onLeave: function (args) {send("InstallSelectedDriver");}});

var InstallWindowsUpdateDriver = Module.findExportByName("newdev.dll", "InstallWindowsUpdateDriver")
Interceptor.attach(InstallWindowsUpdateDriver, {onLeave: function (args) {send("InstallWindowsUpdateDriver");}});

var InstallWindowsUpdateDriverEx = Module.findExportByName("newdev.dll", "InstallWindowsUpdateDriverEx")
Interceptor.attach(InstallWindowsUpdateDriverEx, {onLeave: function (args) {send("InstallWindowsUpdateDriverEx");}});

var InstallWindowsUpdateDrivers = Module.findExportByName("newdev.dll", "InstallWindowsUpdateDrivers")
Interceptor.attach(InstallWindowsUpdateDrivers, {onLeave: function (args) {send("InstallWindowsUpdateDrivers");}});

var QueryWindowsUpdateDriverStatus = Module.findExportByName("newdev.dll", "QueryWindowsUpdateDriverStatus")
Interceptor.attach(QueryWindowsUpdateDriverStatus, {onLeave: function (args) {send("QueryWindowsUpdateDriverStatus");}});

var SetDriverPackageRestorePoint = Module.findExportByName("newdev.dll", "SetDriverPackageRestorePoint")
Interceptor.attach(SetDriverPackageRestorePoint, {onLeave: function (args) {send("SetDriverPackageRestorePoint");}});

var SetInternetPolicies = Module.findExportByName("newdev.dll", "SetInternetPolicies")
Interceptor.attach(SetInternetPolicies, {onLeave: function (args) {send("SetInternetPolicies");}});

var UpdateDriverForPlugAndPlayDevicesA = Module.findExportByName("newdev.dll", "UpdateDriverForPlugAndPlayDevicesA")
Interceptor.attach(UpdateDriverForPlugAndPlayDevicesA, {onLeave: function (args) {send("UpdateDriverForPlugAndPlayDevicesA");}});

var UpdateDriverForPlugAndPlayDevicesW = Module.findExportByName("newdev.dll", "UpdateDriverForPlugAndPlayDevicesW")
Interceptor.attach(UpdateDriverForPlugAndPlayDevicesW, {onLeave: function (args) {send("UpdateDriverForPlugAndPlayDevicesW");}});

var pDiDoDeviceInstallAsAdmin = Module.findExportByName("newdev.dll", "pDiDoDeviceInstallAsAdmin")
Interceptor.attach(pDiDoDeviceInstallAsAdmin, {onLeave: function (args) {send("pDiDoDeviceInstallAsAdmin");}});

var pDiDoNullDriverInstall = Module.findExportByName("newdev.dll", "pDiDoNullDriverInstall")
Interceptor.attach(pDiDoNullDriverInstall, {onLeave: function (args) {send("pDiDoNullDriverInstall");}});

var pDiRunFinishInstallOperations = Module.findExportByName("newdev.dll", "pDiRunFinishInstallOperations")
Interceptor.attach(pDiRunFinishInstallOperations, {onLeave: function (args) {send("pDiRunFinishInstallOperations");}});

