var NetpAvoidNetlogonSpnSet = Module.findExportByName("joinutil.dll", "NetpAvoidNetlogonSpnSet")
Interceptor.attach(NetpAvoidNetlogonSpnSet, {onLeave: function (args) {send("NetpAvoidNetlogonSpnSet");}});

var NetpClearFullJoinState = Module.findExportByName("joinutil.dll", "NetpClearFullJoinState")
Interceptor.attach(NetpClearFullJoinState, {onLeave: function (args) {send("NetpClearFullJoinState");}});

var NetpCompatibilityMode = Module.findExportByName("joinutil.dll", "NetpCompatibilityMode")
Interceptor.attach(NetpCompatibilityMode, {onLeave: function (args) {send("NetpCompatibilityMode");}});

var NetpControlServices = Module.findExportByName("joinutil.dll", "NetpControlServices")
Interceptor.attach(NetpControlServices, {onLeave: function (args) {send("NetpControlServices");}});

var NetpDNSNameResolutionRequired = Module.findExportByName("joinutil.dll", "NetpDNSNameResolutionRequired")
Interceptor.attach(NetpDNSNameResolutionRequired, {onLeave: function (args) {send("NetpDNSNameResolutionRequired");}});

var NetpDoDomainJoinLicensingCheck = Module.findExportByName("joinutil.dll", "NetpDoDomainJoinLicensingCheck")
Interceptor.attach(NetpDoDomainJoinLicensingCheck, {onLeave: function (args) {send("NetpDoDomainJoinLicensingCheck");}});

var NetpFreeJoinStateContents = Module.findExportByName("joinutil.dll", "NetpFreeJoinStateContents")
Interceptor.attach(NetpFreeJoinStateContents, {onLeave: function (args) {send("NetpFreeJoinStateContents");}});

var NetpGenerateDefaultPassword = Module.findExportByName("joinutil.dll", "NetpGenerateDefaultPassword")
Interceptor.attach(NetpGenerateDefaultPassword, {onLeave: function (args) {send("NetpGenerateDefaultPassword");}});

var NetpGetLsaHandle = Module.findExportByName("joinutil.dll", "NetpGetLsaHandle")
Interceptor.attach(NetpGetLsaHandle, {onLeave: function (args) {send("NetpGetLsaHandle");}});

var NetpGetLsaMachineAccountInfo = Module.findExportByName("joinutil.dll", "NetpGetLsaMachineAccountInfo")
Interceptor.attach(NetpGetLsaMachineAccountInfo, {onLeave: function (args) {send("NetpGetLsaMachineAccountInfo");}});

var NetpGetLsaPrimaryDomain = Module.findExportByName("joinutil.dll", "NetpGetLsaPrimaryDomain")
Interceptor.attach(NetpGetLsaPrimaryDomain, {onLeave: function (args) {send("NetpGetLsaPrimaryDomain");}});

var NetpHandleJoinedStateInfo = Module.findExportByName("joinutil.dll", "NetpHandleJoinedStateInfo")
Interceptor.attach(NetpHandleJoinedStateInfo, {onLeave: function (args) {send("NetpHandleJoinedStateInfo");}});

var NetpLoadFullJoinState = Module.findExportByName("joinutil.dll", "NetpLoadFullJoinState")
Interceptor.attach(NetpLoadFullJoinState, {onLeave: function (args) {send("NetpLoadFullJoinState");}});

var NetpLoadParameters = Module.findExportByName("joinutil.dll", "NetpLoadParameters")
Interceptor.attach(NetpLoadParameters, {onLeave: function (args) {send("NetpLoadParameters");}});

var NetpLsaOpenSecret = Module.findExportByName("joinutil.dll", "NetpLsaOpenSecret")
Interceptor.attach(NetpLsaOpenSecret, {onLeave: function (args) {send("NetpLsaOpenSecret");}});

var NetpManageLocalGroups = Module.findExportByName("joinutil.dll", "NetpManageLocalGroups")
Interceptor.attach(NetpManageLocalGroups, {onLeave: function (args) {send("NetpManageLocalGroups");}});

var NetpManageMachineSecret = Module.findExportByName("joinutil.dll", "NetpManageMachineSecret")
Interceptor.attach(NetpManageMachineSecret, {onLeave: function (args) {send("NetpManageMachineSecret");}});

var NetpManageMachineSecret2 = Module.findExportByName("joinutil.dll", "NetpManageMachineSecret2")
Interceptor.attach(NetpManageMachineSecret2, {onLeave: function (args) {send("NetpManageMachineSecret2");}});

var NetpMarkLastFullJoinAttempt = Module.findExportByName("joinutil.dll", "NetpMarkLastFullJoinAttempt")
Interceptor.attach(NetpMarkLastFullJoinAttempt, {onLeave: function (args) {send("NetpMarkLastFullJoinAttempt");}});

var NetpQueryService = Module.findExportByName("joinutil.dll", "NetpQueryService")
Interceptor.attach(NetpQueryService, {onLeave: function (args) {send("NetpQueryService");}});

var NetpRemoveInitialDcRecord = Module.findExportByName("joinutil.dll", "NetpRemoveInitialDcRecord")
Interceptor.attach(NetpRemoveInitialDcRecord, {onLeave: function (args) {send("NetpRemoveInitialDcRecord");}});

var NetpSaveFullJoinStateInternal = Module.findExportByName("joinutil.dll", "NetpSaveFullJoinStateInternal")
Interceptor.attach(NetpSaveFullJoinStateInternal, {onLeave: function (args) {send("NetpSaveFullJoinStateInternal");}});

var NetpSetLsaHandle = Module.findExportByName("joinutil.dll", "NetpSetLsaHandle")
Interceptor.attach(NetpSetLsaHandle, {onLeave: function (args) {send("NetpSetLsaHandle");}});

var NetpSetLsaMachineAccountInfo = Module.findExportByName("joinutil.dll", "NetpSetLsaMachineAccountInfo")
Interceptor.attach(NetpSetLsaMachineAccountInfo, {onLeave: function (args) {send("NetpSetLsaMachineAccountInfo");}});

var NetpSetLsaPrimaryDomain = Module.findExportByName("joinutil.dll", "NetpSetLsaPrimaryDomain")
Interceptor.attach(NetpSetLsaPrimaryDomain, {onLeave: function (args) {send("NetpSetLsaPrimaryDomain");}});

var NetpSetWinlogonCAD = Module.findExportByName("joinutil.dll", "NetpSetWinlogonCAD")
Interceptor.attach(NetpSetWinlogonCAD, {onLeave: function (args) {send("NetpSetWinlogonCAD");}});

var NetpStopService = Module.findExportByName("joinutil.dll", "NetpStopService")
Interceptor.attach(NetpStopService, {onLeave: function (args) {send("NetpStopService");}});

var NetpStoreInitialDcRecord = Module.findExportByName("joinutil.dll", "NetpStoreInitialDcRecord")
Interceptor.attach(NetpStoreInitialDcRecord, {onLeave: function (args) {send("NetpStoreInitialDcRecord");}});

var NetpStoreInitialDcRecordEx = Module.findExportByName("joinutil.dll", "NetpStoreInitialDcRecordEx")
Interceptor.attach(NetpStoreInitialDcRecordEx, {onLeave: function (args) {send("NetpStoreInitialDcRecordEx");}});

var NetpUpdateW32timeConfig = Module.findExportByName("joinutil.dll", "NetpUpdateW32timeConfig")
Interceptor.attach(NetpUpdateW32timeConfig, {onLeave: function (args) {send("NetpUpdateW32timeConfig");}});

