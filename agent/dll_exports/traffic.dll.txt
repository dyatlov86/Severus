var TcAddFilter = Module.findExportByName("traffic.dll", "TcAddFilter")
Interceptor.attach(TcAddFilter, {onLeave: function (args) {send("TcAddFilter");}});

var TcAddFlow = Module.findExportByName("traffic.dll", "TcAddFlow")
Interceptor.attach(TcAddFlow, {onLeave: function (args) {send("TcAddFlow");}});

var TcCloseInterface = Module.findExportByName("traffic.dll", "TcCloseInterface")
Interceptor.attach(TcCloseInterface, {onLeave: function (args) {send("TcCloseInterface");}});

var TcDeleteFilter = Module.findExportByName("traffic.dll", "TcDeleteFilter")
Interceptor.attach(TcDeleteFilter, {onLeave: function (args) {send("TcDeleteFilter");}});

var TcDeleteFlow = Module.findExportByName("traffic.dll", "TcDeleteFlow")
Interceptor.attach(TcDeleteFlow, {onLeave: function (args) {send("TcDeleteFlow");}});

var TcDeregisterClient = Module.findExportByName("traffic.dll", "TcDeregisterClient")
Interceptor.attach(TcDeregisterClient, {onLeave: function (args) {send("TcDeregisterClient");}});

var TcEnumerateFlows = Module.findExportByName("traffic.dll", "TcEnumerateFlows")
Interceptor.attach(TcEnumerateFlows, {onLeave: function (args) {send("TcEnumerateFlows");}});

var TcEnumerateInterfaces = Module.findExportByName("traffic.dll", "TcEnumerateInterfaces")
Interceptor.attach(TcEnumerateInterfaces, {onLeave: function (args) {send("TcEnumerateInterfaces");}});

var TcGetFlowNameA = Module.findExportByName("traffic.dll", "TcGetFlowNameA")
Interceptor.attach(TcGetFlowNameA, {onLeave: function (args) {send("TcGetFlowNameA");}});

var TcGetFlowNameW = Module.findExportByName("traffic.dll", "TcGetFlowNameW")
Interceptor.attach(TcGetFlowNameW, {onLeave: function (args) {send("TcGetFlowNameW");}});

var TcGetInterfaceList = Module.findExportByName("traffic.dll", "TcGetInterfaceList")
Interceptor.attach(TcGetInterfaceList, {onLeave: function (args) {send("TcGetInterfaceList");}});

var TcModifyFlow = Module.findExportByName("traffic.dll", "TcModifyFlow")
Interceptor.attach(TcModifyFlow, {onLeave: function (args) {send("TcModifyFlow");}});

var TcOpenInterfaceA = Module.findExportByName("traffic.dll", "TcOpenInterfaceA")
Interceptor.attach(TcOpenInterfaceA, {onLeave: function (args) {send("TcOpenInterfaceA");}});

var TcOpenInterfaceW = Module.findExportByName("traffic.dll", "TcOpenInterfaceW")
Interceptor.attach(TcOpenInterfaceW, {onLeave: function (args) {send("TcOpenInterfaceW");}});

var TcQueryFlowA = Module.findExportByName("traffic.dll", "TcQueryFlowA")
Interceptor.attach(TcQueryFlowA, {onLeave: function (args) {send("TcQueryFlowA");}});

var TcQueryFlowW = Module.findExportByName("traffic.dll", "TcQueryFlowW")
Interceptor.attach(TcQueryFlowW, {onLeave: function (args) {send("TcQueryFlowW");}});

var TcQueryInterface = Module.findExportByName("traffic.dll", "TcQueryInterface")
Interceptor.attach(TcQueryInterface, {onLeave: function (args) {send("TcQueryInterface");}});

var TcRegisterClient = Module.findExportByName("traffic.dll", "TcRegisterClient")
Interceptor.attach(TcRegisterClient, {onLeave: function (args) {send("TcRegisterClient");}});

var TcSetFlowA = Module.findExportByName("traffic.dll", "TcSetFlowA")
Interceptor.attach(TcSetFlowA, {onLeave: function (args) {send("TcSetFlowA");}});

var TcSetFlowW = Module.findExportByName("traffic.dll", "TcSetFlowW")
Interceptor.attach(TcSetFlowW, {onLeave: function (args) {send("TcSetFlowW");}});

var TcSetInterface = Module.findExportByName("traffic.dll", "TcSetInterface")
Interceptor.attach(TcSetInterface, {onLeave: function (args) {send("TcSetInterface");}});

var TcSetSocketFlow = Module.findExportByName("traffic.dll", "TcSetSocketFlow")
Interceptor.attach(TcSetSocketFlow, {onLeave: function (args) {send("TcSetSocketFlow");}});

