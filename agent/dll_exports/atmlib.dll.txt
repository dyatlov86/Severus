var ATMAddFont = Module.findExportByName("atmlib.dll", "ATMAddFont")
Interceptor.attach(ATMAddFont, {onLeave: function (args) {send("ATMAddFont");}});

var ATMAddFontA = Module.findExportByName("atmlib.dll", "ATMAddFontA")
Interceptor.attach(ATMAddFontA, {onLeave: function (args) {send("ATMAddFontA");}});

var ATMAddFontEx = Module.findExportByName("atmlib.dll", "ATMAddFontEx")
Interceptor.attach(ATMAddFontEx, {onLeave: function (args) {send("ATMAddFontEx");}});

var ATMAddFontExA = Module.findExportByName("atmlib.dll", "ATMAddFontExA")
Interceptor.attach(ATMAddFontExA, {onLeave: function (args) {send("ATMAddFontExA");}});

var ATMAddFontExW = Module.findExportByName("atmlib.dll", "ATMAddFontExW")
Interceptor.attach(ATMAddFontExW, {onLeave: function (args) {send("ATMAddFontExW");}});

var ATMAddFontW = Module.findExportByName("atmlib.dll", "ATMAddFontW")
Interceptor.attach(ATMAddFontW, {onLeave: function (args) {send("ATMAddFontW");}});

var ATMBBoxBaseXYShowText = Module.findExportByName("atmlib.dll", "ATMBBoxBaseXYShowText")
Interceptor.attach(ATMBBoxBaseXYShowText, {onLeave: function (args) {send("ATMBBoxBaseXYShowText");}});

var ATMBBoxBaseXYShowTextA = Module.findExportByName("atmlib.dll", "ATMBBoxBaseXYShowTextA")
Interceptor.attach(ATMBBoxBaseXYShowTextA, {onLeave: function (args) {send("ATMBBoxBaseXYShowTextA");}});

var ATMBBoxBaseXYShowTextW = Module.findExportByName("atmlib.dll", "ATMBBoxBaseXYShowTextW")
Interceptor.attach(ATMBBoxBaseXYShowTextW, {onLeave: function (args) {send("ATMBBoxBaseXYShowTextW");}});

var ATMBeginFontChange = Module.findExportByName("atmlib.dll", "ATMBeginFontChange")
Interceptor.attach(ATMBeginFontChange, {onLeave: function (args) {send("ATMBeginFontChange");}});

var ATMClient = Module.findExportByName("atmlib.dll", "ATMClient")
Interceptor.attach(ATMClient, {onLeave: function (args) {send("ATMClient");}});

var ATMEndFontChange = Module.findExportByName("atmlib.dll", "ATMEndFontChange")
Interceptor.attach(ATMEndFontChange, {onLeave: function (args) {send("ATMEndFontChange");}});

var ATMEnumFonts = Module.findExportByName("atmlib.dll", "ATMEnumFonts")
Interceptor.attach(ATMEnumFonts, {onLeave: function (args) {send("ATMEnumFonts");}});

var ATMEnumFontsA = Module.findExportByName("atmlib.dll", "ATMEnumFontsA")
Interceptor.attach(ATMEnumFontsA, {onLeave: function (args) {send("ATMEnumFontsA");}});

var ATMEnumFontsW = Module.findExportByName("atmlib.dll", "ATMEnumFontsW")
Interceptor.attach(ATMEnumFontsW, {onLeave: function (args) {send("ATMEnumFontsW");}});

var ATMEnumMMFonts = Module.findExportByName("atmlib.dll", "ATMEnumMMFonts")
Interceptor.attach(ATMEnumMMFonts, {onLeave: function (args) {send("ATMEnumMMFonts");}});

var ATMEnumMMFontsA = Module.findExportByName("atmlib.dll", "ATMEnumMMFontsA")
Interceptor.attach(ATMEnumMMFontsA, {onLeave: function (args) {send("ATMEnumMMFontsA");}});

var ATMEnumMMFontsW = Module.findExportByName("atmlib.dll", "ATMEnumMMFontsW")
Interceptor.attach(ATMEnumMMFontsW, {onLeave: function (args) {send("ATMEnumMMFontsW");}});

var ATMFinish = Module.findExportByName("atmlib.dll", "ATMFinish")
Interceptor.attach(ATMFinish, {onLeave: function (args) {send("ATMFinish");}});

var ATMFontAvailable = Module.findExportByName("atmlib.dll", "ATMFontAvailable")
Interceptor.attach(ATMFontAvailable, {onLeave: function (args) {send("ATMFontAvailable");}});

var ATMFontAvailableA = Module.findExportByName("atmlib.dll", "ATMFontAvailableA")
Interceptor.attach(ATMFontAvailableA, {onLeave: function (args) {send("ATMFontAvailableA");}});

var ATMFontAvailableW = Module.findExportByName("atmlib.dll", "ATMFontAvailableW")
Interceptor.attach(ATMFontAvailableW, {onLeave: function (args) {send("ATMFontAvailableW");}});

var ATMFontSelected = Module.findExportByName("atmlib.dll", "ATMFontSelected")
Interceptor.attach(ATMFontSelected, {onLeave: function (args) {send("ATMFontSelected");}});

var ATMFontStatus = Module.findExportByName("atmlib.dll", "ATMFontStatus")
Interceptor.attach(ATMFontStatus, {onLeave: function (args) {send("ATMFontStatus");}});

var ATMFontStatusA = Module.findExportByName("atmlib.dll", "ATMFontStatusA")
Interceptor.attach(ATMFontStatusA, {onLeave: function (args) {send("ATMFontStatusA");}});

var ATMFontStatusW = Module.findExportByName("atmlib.dll", "ATMFontStatusW")
Interceptor.attach(ATMFontStatusW, {onLeave: function (args) {send("ATMFontStatusW");}});

var ATMForceFontChange = Module.findExportByName("atmlib.dll", "ATMForceFontChange")
Interceptor.attach(ATMForceFontChange, {onLeave: function (args) {send("ATMForceFontChange");}});

var ATMGetBuildStr = Module.findExportByName("atmlib.dll", "ATMGetBuildStr")
Interceptor.attach(ATMGetBuildStr, {onLeave: function (args) {send("ATMGetBuildStr");}});

var ATMGetBuildStrA = Module.findExportByName("atmlib.dll", "ATMGetBuildStrA")
Interceptor.attach(ATMGetBuildStrA, {onLeave: function (args) {send("ATMGetBuildStrA");}});

var ATMGetBuildStrW = Module.findExportByName("atmlib.dll", "ATMGetBuildStrW")
Interceptor.attach(ATMGetBuildStrW, {onLeave: function (args) {send("ATMGetBuildStrW");}});

var ATMGetFontBBox = Module.findExportByName("atmlib.dll", "ATMGetFontBBox")
Interceptor.attach(ATMGetFontBBox, {onLeave: function (args) {send("ATMGetFontBBox");}});

var ATMGetFontInfo = Module.findExportByName("atmlib.dll", "ATMGetFontInfo")
Interceptor.attach(ATMGetFontInfo, {onLeave: function (args) {send("ATMGetFontInfo");}});

var ATMGetFontInfoA = Module.findExportByName("atmlib.dll", "ATMGetFontInfoA")
Interceptor.attach(ATMGetFontInfoA, {onLeave: function (args) {send("ATMGetFontInfoA");}});

var ATMGetFontInfoW = Module.findExportByName("atmlib.dll", "ATMGetFontInfoW")
Interceptor.attach(ATMGetFontInfoW, {onLeave: function (args) {send("ATMGetFontInfoW");}});

var ATMGetFontPaths = Module.findExportByName("atmlib.dll", "ATMGetFontPaths")
Interceptor.attach(ATMGetFontPaths, {onLeave: function (args) {send("ATMGetFontPaths");}});

var ATMGetFontPathsA = Module.findExportByName("atmlib.dll", "ATMGetFontPathsA")
Interceptor.attach(ATMGetFontPathsA, {onLeave: function (args) {send("ATMGetFontPathsA");}});

var ATMGetFontPathsW = Module.findExportByName("atmlib.dll", "ATMGetFontPathsW")
Interceptor.attach(ATMGetFontPathsW, {onLeave: function (args) {send("ATMGetFontPathsW");}});

var ATMGetGlyphList = Module.findExportByName("atmlib.dll", "ATMGetGlyphList")
Interceptor.attach(ATMGetGlyphList, {onLeave: function (args) {send("ATMGetGlyphList");}});

var ATMGetGlyphListA = Module.findExportByName("atmlib.dll", "ATMGetGlyphListA")
Interceptor.attach(ATMGetGlyphListA, {onLeave: function (args) {send("ATMGetGlyphListA");}});

var ATMGetGlyphListW = Module.findExportByName("atmlib.dll", "ATMGetGlyphListW")
Interceptor.attach(ATMGetGlyphListW, {onLeave: function (args) {send("ATMGetGlyphListW");}});

var ATMGetMenuName = Module.findExportByName("atmlib.dll", "ATMGetMenuName")
Interceptor.attach(ATMGetMenuName, {onLeave: function (args) {send("ATMGetMenuName");}});

var ATMGetMenuNameA = Module.findExportByName("atmlib.dll", "ATMGetMenuNameA")
Interceptor.attach(ATMGetMenuNameA, {onLeave: function (args) {send("ATMGetMenuNameA");}});

var ATMGetMenuNameW = Module.findExportByName("atmlib.dll", "ATMGetMenuNameW")
Interceptor.attach(ATMGetMenuNameW, {onLeave: function (args) {send("ATMGetMenuNameW");}});

var ATMGetNtmFields = Module.findExportByName("atmlib.dll", "ATMGetNtmFields")
Interceptor.attach(ATMGetNtmFields, {onLeave: function (args) {send("ATMGetNtmFields");}});

var ATMGetNtmFieldsA = Module.findExportByName("atmlib.dll", "ATMGetNtmFieldsA")
Interceptor.attach(ATMGetNtmFieldsA, {onLeave: function (args) {send("ATMGetNtmFieldsA");}});

var ATMGetNtmFieldsW = Module.findExportByName("atmlib.dll", "ATMGetNtmFieldsW")
Interceptor.attach(ATMGetNtmFieldsW, {onLeave: function (args) {send("ATMGetNtmFieldsW");}});

var ATMGetOutline = Module.findExportByName("atmlib.dll", "ATMGetOutline")
Interceptor.attach(ATMGetOutline, {onLeave: function (args) {send("ATMGetOutline");}});

var ATMGetOutlineA = Module.findExportByName("atmlib.dll", "ATMGetOutlineA")
Interceptor.attach(ATMGetOutlineA, {onLeave: function (args) {send("ATMGetOutlineA");}});

var ATMGetOutlineW = Module.findExportByName("atmlib.dll", "ATMGetOutlineW")
Interceptor.attach(ATMGetOutlineW, {onLeave: function (args) {send("ATMGetOutlineW");}});

var ATMGetPostScriptName = Module.findExportByName("atmlib.dll", "ATMGetPostScriptName")
Interceptor.attach(ATMGetPostScriptName, {onLeave: function (args) {send("ATMGetPostScriptName");}});

var ATMGetPostScriptNameA = Module.findExportByName("atmlib.dll", "ATMGetPostScriptNameA")
Interceptor.attach(ATMGetPostScriptNameA, {onLeave: function (args) {send("ATMGetPostScriptNameA");}});

var ATMGetPostScriptNameW = Module.findExportByName("atmlib.dll", "ATMGetPostScriptNameW")
Interceptor.attach(ATMGetPostScriptNameW, {onLeave: function (args) {send("ATMGetPostScriptNameW");}});

var ATMGetVersion = Module.findExportByName("atmlib.dll", "ATMGetVersion")
Interceptor.attach(ATMGetVersion, {onLeave: function (args) {send("ATMGetVersion");}});

var ATMGetVersionEx = Module.findExportByName("atmlib.dll", "ATMGetVersionEx")
Interceptor.attach(ATMGetVersionEx, {onLeave: function (args) {send("ATMGetVersionEx");}});

var ATMGetVersionExA = Module.findExportByName("atmlib.dll", "ATMGetVersionExA")
Interceptor.attach(ATMGetVersionExA, {onLeave: function (args) {send("ATMGetVersionExA");}});

var ATMGetVersionExW = Module.findExportByName("atmlib.dll", "ATMGetVersionExW")
Interceptor.attach(ATMGetVersionExW, {onLeave: function (args) {send("ATMGetVersionExW");}});

var ATMInstallSubstFontA = Module.findExportByName("atmlib.dll", "ATMInstallSubstFontA")
Interceptor.attach(ATMInstallSubstFontA, {onLeave: function (args) {send("ATMInstallSubstFontA");}});

var ATMInstallSubstFontW = Module.findExportByName("atmlib.dll", "ATMInstallSubstFontW")
Interceptor.attach(ATMInstallSubstFontW, {onLeave: function (args) {send("ATMInstallSubstFontW");}});

var ATMMakePFM = Module.findExportByName("atmlib.dll", "ATMMakePFM")
Interceptor.attach(ATMMakePFM, {onLeave: function (args) {send("ATMMakePFM");}});

var ATMMakePFMA = Module.findExportByName("atmlib.dll", "ATMMakePFMA")
Interceptor.attach(ATMMakePFMA, {onLeave: function (args) {send("ATMMakePFMA");}});

var ATMMakePFMW = Module.findExportByName("atmlib.dll", "ATMMakePFMW")
Interceptor.attach(ATMMakePFMW, {onLeave: function (args) {send("ATMMakePFMW");}});

var ATMMakePSS = Module.findExportByName("atmlib.dll", "ATMMakePSS")
Interceptor.attach(ATMMakePSS, {onLeave: function (args) {send("ATMMakePSS");}});

var ATMMakePSSA = Module.findExportByName("atmlib.dll", "ATMMakePSSA")
Interceptor.attach(ATMMakePSSA, {onLeave: function (args) {send("ATMMakePSSA");}});

var ATMMakePSSW = Module.findExportByName("atmlib.dll", "ATMMakePSSW")
Interceptor.attach(ATMMakePSSW, {onLeave: function (args) {send("ATMMakePSSW");}});

var ATMProperlyLoaded = Module.findExportByName("atmlib.dll", "ATMProperlyLoaded")
Interceptor.attach(ATMProperlyLoaded, {onLeave: function (args) {send("ATMProperlyLoaded");}});

var ATMRemoveFont = Module.findExportByName("atmlib.dll", "ATMRemoveFont")
Interceptor.attach(ATMRemoveFont, {onLeave: function (args) {send("ATMRemoveFont");}});

var ATMRemoveFontA = Module.findExportByName("atmlib.dll", "ATMRemoveFontA")
Interceptor.attach(ATMRemoveFontA, {onLeave: function (args) {send("ATMRemoveFontA");}});

var ATMRemoveFontW = Module.findExportByName("atmlib.dll", "ATMRemoveFontW")
Interceptor.attach(ATMRemoveFontW, {onLeave: function (args) {send("ATMRemoveFontW");}});

var ATMRemoveSubstFontA = Module.findExportByName("atmlib.dll", "ATMRemoveSubstFontA")
Interceptor.attach(ATMRemoveSubstFontA, {onLeave: function (args) {send("ATMRemoveSubstFontA");}});

var ATMRemoveSubstFontW = Module.findExportByName("atmlib.dll", "ATMRemoveSubstFontW")
Interceptor.attach(ATMRemoveSubstFontW, {onLeave: function (args) {send("ATMRemoveSubstFontW");}});

var ATMSelectEncoding = Module.findExportByName("atmlib.dll", "ATMSelectEncoding")
Interceptor.attach(ATMSelectEncoding, {onLeave: function (args) {send("ATMSelectEncoding");}});

var ATMSelectObject = Module.findExportByName("atmlib.dll", "ATMSelectObject")
Interceptor.attach(ATMSelectObject, {onLeave: function (args) {send("ATMSelectObject");}});

var ATMSetFlags = Module.findExportByName("atmlib.dll", "ATMSetFlags")
Interceptor.attach(ATMSetFlags, {onLeave: function (args) {send("ATMSetFlags");}});

var ATMXYShowText = Module.findExportByName("atmlib.dll", "ATMXYShowText")
Interceptor.attach(ATMXYShowText, {onLeave: function (args) {send("ATMXYShowText");}});

var ATMXYShowTextA = Module.findExportByName("atmlib.dll", "ATMXYShowTextA")
Interceptor.attach(ATMXYShowTextA, {onLeave: function (args) {send("ATMXYShowTextA");}});

var ATMXYShowTextW = Module.findExportByName("atmlib.dll", "ATMXYShowTextW")
Interceptor.attach(ATMXYShowTextW, {onLeave: function (args) {send("ATMXYShowTextW");}});

