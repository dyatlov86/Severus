var gluBeginCurve = Module.findExportByName("glu32.dll", "gluBeginCurve")
Interceptor.attach(gluBeginCurve, {onLeave: function (args) {send("gluBeginCurve");}});

var gluBeginPolygon = Module.findExportByName("glu32.dll", "gluBeginPolygon")
Interceptor.attach(gluBeginPolygon, {onLeave: function (args) {send("gluBeginPolygon");}});

var gluBeginSurface = Module.findExportByName("glu32.dll", "gluBeginSurface")
Interceptor.attach(gluBeginSurface, {onLeave: function (args) {send("gluBeginSurface");}});

var gluBeginTrim = Module.findExportByName("glu32.dll", "gluBeginTrim")
Interceptor.attach(gluBeginTrim, {onLeave: function (args) {send("gluBeginTrim");}});

var gluBuild1DMipmaps = Module.findExportByName("glu32.dll", "gluBuild1DMipmaps")
Interceptor.attach(gluBuild1DMipmaps, {onLeave: function (args) {send("gluBuild1DMipmaps");}});

var gluBuild2DMipmaps = Module.findExportByName("glu32.dll", "gluBuild2DMipmaps")
Interceptor.attach(gluBuild2DMipmaps, {onLeave: function (args) {send("gluBuild2DMipmaps");}});

var gluCylinder = Module.findExportByName("glu32.dll", "gluCylinder")
Interceptor.attach(gluCylinder, {onLeave: function (args) {send("gluCylinder");}});

var gluDeleteNurbsRenderer = Module.findExportByName("glu32.dll", "gluDeleteNurbsRenderer")
Interceptor.attach(gluDeleteNurbsRenderer, {onLeave: function (args) {send("gluDeleteNurbsRenderer");}});

var gluDeleteQuadric = Module.findExportByName("glu32.dll", "gluDeleteQuadric")
Interceptor.attach(gluDeleteQuadric, {onLeave: function (args) {send("gluDeleteQuadric");}});

var gluDeleteTess = Module.findExportByName("glu32.dll", "gluDeleteTess")
Interceptor.attach(gluDeleteTess, {onLeave: function (args) {send("gluDeleteTess");}});

var gluDisk = Module.findExportByName("glu32.dll", "gluDisk")
Interceptor.attach(gluDisk, {onLeave: function (args) {send("gluDisk");}});

var gluEndCurve = Module.findExportByName("glu32.dll", "gluEndCurve")
Interceptor.attach(gluEndCurve, {onLeave: function (args) {send("gluEndCurve");}});

var gluEndPolygon = Module.findExportByName("glu32.dll", "gluEndPolygon")
Interceptor.attach(gluEndPolygon, {onLeave: function (args) {send("gluEndPolygon");}});

var gluEndSurface = Module.findExportByName("glu32.dll", "gluEndSurface")
Interceptor.attach(gluEndSurface, {onLeave: function (args) {send("gluEndSurface");}});

var gluEndTrim = Module.findExportByName("glu32.dll", "gluEndTrim")
Interceptor.attach(gluEndTrim, {onLeave: function (args) {send("gluEndTrim");}});

var gluErrorString = Module.findExportByName("glu32.dll", "gluErrorString")
Interceptor.attach(gluErrorString, {onLeave: function (args) {send("gluErrorString");}});

var gluErrorUnicodeStringEXT = Module.findExportByName("glu32.dll", "gluErrorUnicodeStringEXT")
Interceptor.attach(gluErrorUnicodeStringEXT, {onLeave: function (args) {send("gluErrorUnicodeStringEXT");}});

var gluGetNurbsProperty = Module.findExportByName("glu32.dll", "gluGetNurbsProperty")
Interceptor.attach(gluGetNurbsProperty, {onLeave: function (args) {send("gluGetNurbsProperty");}});

var gluGetString = Module.findExportByName("glu32.dll", "gluGetString")
Interceptor.attach(gluGetString, {onLeave: function (args) {send("gluGetString");}});

var gluGetTessProperty = Module.findExportByName("glu32.dll", "gluGetTessProperty")
Interceptor.attach(gluGetTessProperty, {onLeave: function (args) {send("gluGetTessProperty");}});

var gluLoadSamplingMatrices = Module.findExportByName("glu32.dll", "gluLoadSamplingMatrices")
Interceptor.attach(gluLoadSamplingMatrices, {onLeave: function (args) {send("gluLoadSamplingMatrices");}});

var gluLookAt = Module.findExportByName("glu32.dll", "gluLookAt")
Interceptor.attach(gluLookAt, {onLeave: function (args) {send("gluLookAt");}});

var gluNewNurbsRenderer = Module.findExportByName("glu32.dll", "gluNewNurbsRenderer")
Interceptor.attach(gluNewNurbsRenderer, {onLeave: function (args) {send("gluNewNurbsRenderer");}});

var gluNewQuadric = Module.findExportByName("glu32.dll", "gluNewQuadric")
Interceptor.attach(gluNewQuadric, {onLeave: function (args) {send("gluNewQuadric");}});

var gluNewTess = Module.findExportByName("glu32.dll", "gluNewTess")
Interceptor.attach(gluNewTess, {onLeave: function (args) {send("gluNewTess");}});

var gluNextContour = Module.findExportByName("glu32.dll", "gluNextContour")
Interceptor.attach(gluNextContour, {onLeave: function (args) {send("gluNextContour");}});

var gluNurbsCallback = Module.findExportByName("glu32.dll", "gluNurbsCallback")
Interceptor.attach(gluNurbsCallback, {onLeave: function (args) {send("gluNurbsCallback");}});

var gluNurbsCurve = Module.findExportByName("glu32.dll", "gluNurbsCurve")
Interceptor.attach(gluNurbsCurve, {onLeave: function (args) {send("gluNurbsCurve");}});

var gluNurbsProperty = Module.findExportByName("glu32.dll", "gluNurbsProperty")
Interceptor.attach(gluNurbsProperty, {onLeave: function (args) {send("gluNurbsProperty");}});

var gluNurbsSurface = Module.findExportByName("glu32.dll", "gluNurbsSurface")
Interceptor.attach(gluNurbsSurface, {onLeave: function (args) {send("gluNurbsSurface");}});

var gluOrtho2D = Module.findExportByName("glu32.dll", "gluOrtho2D")
Interceptor.attach(gluOrtho2D, {onLeave: function (args) {send("gluOrtho2D");}});

var gluPartialDisk = Module.findExportByName("glu32.dll", "gluPartialDisk")
Interceptor.attach(gluPartialDisk, {onLeave: function (args) {send("gluPartialDisk");}});

var gluPerspective = Module.findExportByName("glu32.dll", "gluPerspective")
Interceptor.attach(gluPerspective, {onLeave: function (args) {send("gluPerspective");}});

var gluPickMatrix = Module.findExportByName("glu32.dll", "gluPickMatrix")
Interceptor.attach(gluPickMatrix, {onLeave: function (args) {send("gluPickMatrix");}});

var gluProject = Module.findExportByName("glu32.dll", "gluProject")
Interceptor.attach(gluProject, {onLeave: function (args) {send("gluProject");}});

var gluPwlCurve = Module.findExportByName("glu32.dll", "gluPwlCurve")
Interceptor.attach(gluPwlCurve, {onLeave: function (args) {send("gluPwlCurve");}});

var gluQuadricCallback = Module.findExportByName("glu32.dll", "gluQuadricCallback")
Interceptor.attach(gluQuadricCallback, {onLeave: function (args) {send("gluQuadricCallback");}});

var gluQuadricDrawStyle = Module.findExportByName("glu32.dll", "gluQuadricDrawStyle")
Interceptor.attach(gluQuadricDrawStyle, {onLeave: function (args) {send("gluQuadricDrawStyle");}});

var gluQuadricNormals = Module.findExportByName("glu32.dll", "gluQuadricNormals")
Interceptor.attach(gluQuadricNormals, {onLeave: function (args) {send("gluQuadricNormals");}});

var gluQuadricOrientation = Module.findExportByName("glu32.dll", "gluQuadricOrientation")
Interceptor.attach(gluQuadricOrientation, {onLeave: function (args) {send("gluQuadricOrientation");}});

var gluQuadricTexture = Module.findExportByName("glu32.dll", "gluQuadricTexture")
Interceptor.attach(gluQuadricTexture, {onLeave: function (args) {send("gluQuadricTexture");}});

var gluScaleImage = Module.findExportByName("glu32.dll", "gluScaleImage")
Interceptor.attach(gluScaleImage, {onLeave: function (args) {send("gluScaleImage");}});

var gluSphere = Module.findExportByName("glu32.dll", "gluSphere")
Interceptor.attach(gluSphere, {onLeave: function (args) {send("gluSphere");}});

var gluTessBeginContour = Module.findExportByName("glu32.dll", "gluTessBeginContour")
Interceptor.attach(gluTessBeginContour, {onLeave: function (args) {send("gluTessBeginContour");}});

var gluTessBeginPolygon = Module.findExportByName("glu32.dll", "gluTessBeginPolygon")
Interceptor.attach(gluTessBeginPolygon, {onLeave: function (args) {send("gluTessBeginPolygon");}});

var gluTessCallback = Module.findExportByName("glu32.dll", "gluTessCallback")
Interceptor.attach(gluTessCallback, {onLeave: function (args) {send("gluTessCallback");}});

var gluTessEndContour = Module.findExportByName("glu32.dll", "gluTessEndContour")
Interceptor.attach(gluTessEndContour, {onLeave: function (args) {send("gluTessEndContour");}});

var gluTessEndPolygon = Module.findExportByName("glu32.dll", "gluTessEndPolygon")
Interceptor.attach(gluTessEndPolygon, {onLeave: function (args) {send("gluTessEndPolygon");}});

var gluTessNormal = Module.findExportByName("glu32.dll", "gluTessNormal")
Interceptor.attach(gluTessNormal, {onLeave: function (args) {send("gluTessNormal");}});

var gluTessProperty = Module.findExportByName("glu32.dll", "gluTessProperty")
Interceptor.attach(gluTessProperty, {onLeave: function (args) {send("gluTessProperty");}});

var gluTessVertex = Module.findExportByName("glu32.dll", "gluTessVertex")
Interceptor.attach(gluTessVertex, {onLeave: function (args) {send("gluTessVertex");}});

var gluUnProject = Module.findExportByName("glu32.dll", "gluUnProject")
Interceptor.attach(gluUnProject, {onLeave: function (args) {send("gluUnProject");}});

