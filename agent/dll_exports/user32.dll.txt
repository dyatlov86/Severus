var ActivateKeyboardLayout = Module.findExportByName("user32.dll", "ActivateKeyboardLayout")
Interceptor.attach(ActivateKeyboardLayout, {onLeave: function (args) {send("ActivateKeyboardLayout");}});

var AddClipboardFormatListener = Module.findExportByName("user32.dll", "AddClipboardFormatListener")
Interceptor.attach(AddClipboardFormatListener, {onLeave: function (args) {send("AddClipboardFormatListener");}});

var AddVisualIdentifier = Module.findExportByName("user32.dll", "AddVisualIdentifier")
Interceptor.attach(AddVisualIdentifier, {onLeave: function (args) {send("AddVisualIdentifier");}});

var AdjustWindowRect = Module.findExportByName("user32.dll", "AdjustWindowRect")
Interceptor.attach(AdjustWindowRect, {onLeave: function (args) {send("AdjustWindowRect");}});

var AdjustWindowRectEx = Module.findExportByName("user32.dll", "AdjustWindowRectEx")
Interceptor.attach(AdjustWindowRectEx, {onLeave: function (args) {send("AdjustWindowRectEx");}});

var AdjustWindowRectExForDpi = Module.findExportByName("user32.dll", "AdjustWindowRectExForDpi")
Interceptor.attach(AdjustWindowRectExForDpi, {onLeave: function (args) {send("AdjustWindowRectExForDpi");}});

var AlignRects = Module.findExportByName("user32.dll", "AlignRects")
Interceptor.attach(AlignRects, {onLeave: function (args) {send("AlignRects");}});

var AllowForegroundActivation = Module.findExportByName("user32.dll", "AllowForegroundActivation")
Interceptor.attach(AllowForegroundActivation, {onLeave: function (args) {send("AllowForegroundActivation");}});

var AllowSetForegroundWindow = Module.findExportByName("user32.dll", "AllowSetForegroundWindow")
Interceptor.attach(AllowSetForegroundWindow, {onLeave: function (args) {send("AllowSetForegroundWindow");}});

var AnimateWindow = Module.findExportByName("user32.dll", "AnimateWindow")
Interceptor.attach(AnimateWindow, {onLeave: function (args) {send("AnimateWindow");}});

var AnyPopup = Module.findExportByName("user32.dll", "AnyPopup")
Interceptor.attach(AnyPopup, {onLeave: function (args) {send("AnyPopup");}});

var AppendMenuA = Module.findExportByName("user32.dll", "AppendMenuA")
Interceptor.attach(AppendMenuA, {onLeave: function (args) {send("AppendMenuA");}});

var AppendMenuW = Module.findExportByName("user32.dll", "AppendMenuW")
Interceptor.attach(AppendMenuW, {onLeave: function (args) {send("AppendMenuW");}});

var AreDpiAwarenessContextsEqual = Module.findExportByName("user32.dll", "AreDpiAwarenessContextsEqual")
Interceptor.attach(AreDpiAwarenessContextsEqual, {onLeave: function (args) {send("AreDpiAwarenessContextsEqual");}});

var ArrangeIconicWindows = Module.findExportByName("user32.dll", "ArrangeIconicWindows")
Interceptor.attach(ArrangeIconicWindows, {onLeave: function (args) {send("ArrangeIconicWindows");}});

var AttachThreadInput = Module.findExportByName("user32.dll", "AttachThreadInput")
Interceptor.attach(AttachThreadInput, {onLeave: function (args) {send("AttachThreadInput");}});

var BeginDeferWindowPos = Module.findExportByName("user32.dll", "BeginDeferWindowPos")
Interceptor.attach(BeginDeferWindowPos, {onLeave: function (args) {send("BeginDeferWindowPos");}});

var BeginPaint = Module.findExportByName("user32.dll", "BeginPaint")
Interceptor.attach(BeginPaint, {onLeave: function (args) {send("BeginPaint");}});

var BlockInput = Module.findExportByName("user32.dll", "BlockInput")
Interceptor.attach(BlockInput, {onLeave: function (args) {send("BlockInput");}});

var BringWindowToTop = Module.findExportByName("user32.dll", "BringWindowToTop")
Interceptor.attach(BringWindowToTop, {onLeave: function (args) {send("BringWindowToTop");}});

var BroadcastSystemMessage = Module.findExportByName("user32.dll", "BroadcastSystemMessage")
Interceptor.attach(BroadcastSystemMessage, {onLeave: function (args) {send("BroadcastSystemMessage");}});

var BroadcastSystemMessageA = Module.findExportByName("user32.dll", "BroadcastSystemMessageA")
Interceptor.attach(BroadcastSystemMessageA, {onLeave: function (args) {send("BroadcastSystemMessageA");}});

var BroadcastSystemMessageExA = Module.findExportByName("user32.dll", "BroadcastSystemMessageExA")
Interceptor.attach(BroadcastSystemMessageExA, {onLeave: function (args) {send("BroadcastSystemMessageExA");}});

var BroadcastSystemMessageExW = Module.findExportByName("user32.dll", "BroadcastSystemMessageExW")
Interceptor.attach(BroadcastSystemMessageExW, {onLeave: function (args) {send("BroadcastSystemMessageExW");}});

var BroadcastSystemMessageW = Module.findExportByName("user32.dll", "BroadcastSystemMessageW")
Interceptor.attach(BroadcastSystemMessageW, {onLeave: function (args) {send("BroadcastSystemMessageW");}});

var BuildReasonArray = Module.findExportByName("user32.dll", "BuildReasonArray")
Interceptor.attach(BuildReasonArray, {onLeave: function (args) {send("BuildReasonArray");}});

var CalcMenuBar = Module.findExportByName("user32.dll", "CalcMenuBar")
Interceptor.attach(CalcMenuBar, {onLeave: function (args) {send("CalcMenuBar");}});

var CalculatePopupWindowPosition = Module.findExportByName("user32.dll", "CalculatePopupWindowPosition")
Interceptor.attach(CalculatePopupWindowPosition, {onLeave: function (args) {send("CalculatePopupWindowPosition");}});

var CallMsgFilter = Module.findExportByName("user32.dll", "CallMsgFilter")
Interceptor.attach(CallMsgFilter, {onLeave: function (args) {send("CallMsgFilter");}});

var CallMsgFilterA = Module.findExportByName("user32.dll", "CallMsgFilterA")
Interceptor.attach(CallMsgFilterA, {onLeave: function (args) {send("CallMsgFilterA");}});

var CallMsgFilterW = Module.findExportByName("user32.dll", "CallMsgFilterW")
Interceptor.attach(CallMsgFilterW, {onLeave: function (args) {send("CallMsgFilterW");}});

var CallNextHookEx = Module.findExportByName("user32.dll", "CallNextHookEx")
Interceptor.attach(CallNextHookEx, {onLeave: function (args) {send("CallNextHookEx");}});

var CallWindowProcA = Module.findExportByName("user32.dll", "CallWindowProcA")
Interceptor.attach(CallWindowProcA, {onLeave: function (args) {send("CallWindowProcA");}});

var CallWindowProcW = Module.findExportByName("user32.dll", "CallWindowProcW")
Interceptor.attach(CallWindowProcW, {onLeave: function (args) {send("CallWindowProcW");}});

var CancelShutdown = Module.findExportByName("user32.dll", "CancelShutdown")
Interceptor.attach(CancelShutdown, {onLeave: function (args) {send("CancelShutdown");}});

var CascadeChildWindows = Module.findExportByName("user32.dll", "CascadeChildWindows")
Interceptor.attach(CascadeChildWindows, {onLeave: function (args) {send("CascadeChildWindows");}});

var CascadeWindows = Module.findExportByName("user32.dll", "CascadeWindows")
Interceptor.attach(CascadeWindows, {onLeave: function (args) {send("CascadeWindows");}});

var ChangeClipboardChain = Module.findExportByName("user32.dll", "ChangeClipboardChain")
Interceptor.attach(ChangeClipboardChain, {onLeave: function (args) {send("ChangeClipboardChain");}});

var ChangeDisplaySettingsA = Module.findExportByName("user32.dll", "ChangeDisplaySettingsA")
Interceptor.attach(ChangeDisplaySettingsA, {onLeave: function (args) {send("ChangeDisplaySettingsA");}});

var ChangeDisplaySettingsExA = Module.findExportByName("user32.dll", "ChangeDisplaySettingsExA")
Interceptor.attach(ChangeDisplaySettingsExA, {onLeave: function (args) {send("ChangeDisplaySettingsExA");}});

var ChangeDisplaySettingsExW = Module.findExportByName("user32.dll", "ChangeDisplaySettingsExW")
Interceptor.attach(ChangeDisplaySettingsExW, {onLeave: function (args) {send("ChangeDisplaySettingsExW");}});

var ChangeDisplaySettingsW = Module.findExportByName("user32.dll", "ChangeDisplaySettingsW")
Interceptor.attach(ChangeDisplaySettingsW, {onLeave: function (args) {send("ChangeDisplaySettingsW");}});

var ChangeMenuA = Module.findExportByName("user32.dll", "ChangeMenuA")
Interceptor.attach(ChangeMenuA, {onLeave: function (args) {send("ChangeMenuA");}});

var ChangeMenuW = Module.findExportByName("user32.dll", "ChangeMenuW")
Interceptor.attach(ChangeMenuW, {onLeave: function (args) {send("ChangeMenuW");}});

var ChangeWindowMessageFilter = Module.findExportByName("user32.dll", "ChangeWindowMessageFilter")
Interceptor.attach(ChangeWindowMessageFilter, {onLeave: function (args) {send("ChangeWindowMessageFilter");}});

var ChangeWindowMessageFilterEx = Module.findExportByName("user32.dll", "ChangeWindowMessageFilterEx")
Interceptor.attach(ChangeWindowMessageFilterEx, {onLeave: function (args) {send("ChangeWindowMessageFilterEx");}});

var CharLowerA = Module.findExportByName("user32.dll", "CharLowerA")
Interceptor.attach(CharLowerA, {onLeave: function (args) {send("CharLowerA");}});

var CharLowerBuffA = Module.findExportByName("user32.dll", "CharLowerBuffA")
Interceptor.attach(CharLowerBuffA, {onLeave: function (args) {send("CharLowerBuffA");}});

var CharLowerBuffW = Module.findExportByName("user32.dll", "CharLowerBuffW")
Interceptor.attach(CharLowerBuffW, {onLeave: function (args) {send("CharLowerBuffW");}});

var CharLowerW = Module.findExportByName("user32.dll", "CharLowerW")
Interceptor.attach(CharLowerW, {onLeave: function (args) {send("CharLowerW");}});

var CharNextA = Module.findExportByName("user32.dll", "CharNextA")
Interceptor.attach(CharNextA, {onLeave: function (args) {send("CharNextA");}});

var CharNextExA = Module.findExportByName("user32.dll", "CharNextExA")
Interceptor.attach(CharNextExA, {onLeave: function (args) {send("CharNextExA");}});

var CharNextW = Module.findExportByName("user32.dll", "CharNextW")
Interceptor.attach(CharNextW, {onLeave: function (args) {send("CharNextW");}});

var CharPrevA = Module.findExportByName("user32.dll", "CharPrevA")
Interceptor.attach(CharPrevA, {onLeave: function (args) {send("CharPrevA");}});

var CharPrevExA = Module.findExportByName("user32.dll", "CharPrevExA")
Interceptor.attach(CharPrevExA, {onLeave: function (args) {send("CharPrevExA");}});

var CharPrevW = Module.findExportByName("user32.dll", "CharPrevW")
Interceptor.attach(CharPrevW, {onLeave: function (args) {send("CharPrevW");}});

var CharToOemA = Module.findExportByName("user32.dll", "CharToOemA")
Interceptor.attach(CharToOemA, {onLeave: function (args) {send("CharToOemA");}});

var CharToOemBuffA = Module.findExportByName("user32.dll", "CharToOemBuffA")
Interceptor.attach(CharToOemBuffA, {onLeave: function (args) {send("CharToOemBuffA");}});

var CharToOemBuffW = Module.findExportByName("user32.dll", "CharToOemBuffW")
Interceptor.attach(CharToOemBuffW, {onLeave: function (args) {send("CharToOemBuffW");}});

var CharToOemW = Module.findExportByName("user32.dll", "CharToOemW")
Interceptor.attach(CharToOemW, {onLeave: function (args) {send("CharToOemW");}});

var CharUpperA = Module.findExportByName("user32.dll", "CharUpperA")
Interceptor.attach(CharUpperA, {onLeave: function (args) {send("CharUpperA");}});

var CharUpperBuffA = Module.findExportByName("user32.dll", "CharUpperBuffA")
Interceptor.attach(CharUpperBuffA, {onLeave: function (args) {send("CharUpperBuffA");}});

var CharUpperBuffW = Module.findExportByName("user32.dll", "CharUpperBuffW")
Interceptor.attach(CharUpperBuffW, {onLeave: function (args) {send("CharUpperBuffW");}});

var CharUpperW = Module.findExportByName("user32.dll", "CharUpperW")
Interceptor.attach(CharUpperW, {onLeave: function (args) {send("CharUpperW");}});

var CheckBannedOneCoreTransformApi = Module.findExportByName("user32.dll", "CheckBannedOneCoreTransformApi")
Interceptor.attach(CheckBannedOneCoreTransformApi, {onLeave: function (args) {send("CheckBannedOneCoreTransformApi");}});

var CheckDBCSEnabledExt = Module.findExportByName("user32.dll", "CheckDBCSEnabledExt")
Interceptor.attach(CheckDBCSEnabledExt, {onLeave: function (args) {send("CheckDBCSEnabledExt");}});

var CheckDlgButton = Module.findExportByName("user32.dll", "CheckDlgButton")
Interceptor.attach(CheckDlgButton, {onLeave: function (args) {send("CheckDlgButton");}});

var CheckMenuItem = Module.findExportByName("user32.dll", "CheckMenuItem")
Interceptor.attach(CheckMenuItem, {onLeave: function (args) {send("CheckMenuItem");}});

var CheckMenuRadioItem = Module.findExportByName("user32.dll", "CheckMenuRadioItem")
Interceptor.attach(CheckMenuRadioItem, {onLeave: function (args) {send("CheckMenuRadioItem");}});

var CheckProcessForClipboardAccess = Module.findExportByName("user32.dll", "CheckProcessForClipboardAccess")
Interceptor.attach(CheckProcessForClipboardAccess, {onLeave: function (args) {send("CheckProcessForClipboardAccess");}});

var CheckProcessSession = Module.findExportByName("user32.dll", "CheckProcessSession")
Interceptor.attach(CheckProcessSession, {onLeave: function (args) {send("CheckProcessSession");}});

var CheckRadioButton = Module.findExportByName("user32.dll", "CheckRadioButton")
Interceptor.attach(CheckRadioButton, {onLeave: function (args) {send("CheckRadioButton");}});

var CheckWindowThreadDesktop = Module.findExportByName("user32.dll", "CheckWindowThreadDesktop")
Interceptor.attach(CheckWindowThreadDesktop, {onLeave: function (args) {send("CheckWindowThreadDesktop");}});

var ChildWindowFromPoint = Module.findExportByName("user32.dll", "ChildWindowFromPoint")
Interceptor.attach(ChildWindowFromPoint, {onLeave: function (args) {send("ChildWindowFromPoint");}});

var ChildWindowFromPointEx = Module.findExportByName("user32.dll", "ChildWindowFromPointEx")
Interceptor.attach(ChildWindowFromPointEx, {onLeave: function (args) {send("ChildWindowFromPointEx");}});

var CliImmSetHotKey = Module.findExportByName("user32.dll", "CliImmSetHotKey")
Interceptor.attach(CliImmSetHotKey, {onLeave: function (args) {send("CliImmSetHotKey");}});

var ClientThreadSetup = Module.findExportByName("user32.dll", "ClientThreadSetup")
Interceptor.attach(ClientThreadSetup, {onLeave: function (args) {send("ClientThreadSetup");}});

var ClientToScreen = Module.findExportByName("user32.dll", "ClientToScreen")
Interceptor.attach(ClientToScreen, {onLeave: function (args) {send("ClientToScreen");}});

var ClipCursor = Module.findExportByName("user32.dll", "ClipCursor")
Interceptor.attach(ClipCursor, {onLeave: function (args) {send("ClipCursor");}});

var CloseClipboard = Module.findExportByName("user32.dll", "CloseClipboard")
Interceptor.attach(CloseClipboard, {onLeave: function (args) {send("CloseClipboard");}});

var CloseDesktop = Module.findExportByName("user32.dll", "CloseDesktop")
Interceptor.attach(CloseDesktop, {onLeave: function (args) {send("CloseDesktop");}});

var CloseGestureInfoHandle = Module.findExportByName("user32.dll", "CloseGestureInfoHandle")
Interceptor.attach(CloseGestureInfoHandle, {onLeave: function (args) {send("CloseGestureInfoHandle");}});

var CloseTouchInputHandle = Module.findExportByName("user32.dll", "CloseTouchInputHandle")
Interceptor.attach(CloseTouchInputHandle, {onLeave: function (args) {send("CloseTouchInputHandle");}});

var CloseWindow = Module.findExportByName("user32.dll", "CloseWindow")
Interceptor.attach(CloseWindow, {onLeave: function (args) {send("CloseWindow");}});

var CloseWindowStation = Module.findExportByName("user32.dll", "CloseWindowStation")
Interceptor.attach(CloseWindowStation, {onLeave: function (args) {send("CloseWindowStation");}});

var ConsoleControl = Module.findExportByName("user32.dll", "ConsoleControl")
Interceptor.attach(ConsoleControl, {onLeave: function (args) {send("ConsoleControl");}});

var ControlMagnification = Module.findExportByName("user32.dll", "ControlMagnification")
Interceptor.attach(ControlMagnification, {onLeave: function (args) {send("ControlMagnification");}});

var CopyAcceleratorTableA = Module.findExportByName("user32.dll", "CopyAcceleratorTableA")
Interceptor.attach(CopyAcceleratorTableA, {onLeave: function (args) {send("CopyAcceleratorTableA");}});

var CopyAcceleratorTableW = Module.findExportByName("user32.dll", "CopyAcceleratorTableW")
Interceptor.attach(CopyAcceleratorTableW, {onLeave: function (args) {send("CopyAcceleratorTableW");}});

var CopyIcon = Module.findExportByName("user32.dll", "CopyIcon")
Interceptor.attach(CopyIcon, {onLeave: function (args) {send("CopyIcon");}});

var CopyImage = Module.findExportByName("user32.dll", "CopyImage")
Interceptor.attach(CopyImage, {onLeave: function (args) {send("CopyImage");}});

var CopyRect = Module.findExportByName("user32.dll", "CopyRect")
Interceptor.attach(CopyRect, {onLeave: function (args) {send("CopyRect");}});

var CountClipboardFormats = Module.findExportByName("user32.dll", "CountClipboardFormats")
Interceptor.attach(CountClipboardFormats, {onLeave: function (args) {send("CountClipboardFormats");}});

var CreateAcceleratorTableA = Module.findExportByName("user32.dll", "CreateAcceleratorTableA")
Interceptor.attach(CreateAcceleratorTableA, {onLeave: function (args) {send("CreateAcceleratorTableA");}});

var CreateAcceleratorTableW = Module.findExportByName("user32.dll", "CreateAcceleratorTableW")
Interceptor.attach(CreateAcceleratorTableW, {onLeave: function (args) {send("CreateAcceleratorTableW");}});

var CreateCaret = Module.findExportByName("user32.dll", "CreateCaret")
Interceptor.attach(CreateCaret, {onLeave: function (args) {send("CreateCaret");}});

var CreateCursor = Module.findExportByName("user32.dll", "CreateCursor")
Interceptor.attach(CreateCursor, {onLeave: function (args) {send("CreateCursor");}});

var CreateDCompositionHwndTarget = Module.findExportByName("user32.dll", "CreateDCompositionHwndTarget")
Interceptor.attach(CreateDCompositionHwndTarget, {onLeave: function (args) {send("CreateDCompositionHwndTarget");}});

var CreateDesktopA = Module.findExportByName("user32.dll", "CreateDesktopA")
Interceptor.attach(CreateDesktopA, {onLeave: function (args) {send("CreateDesktopA");}});

var CreateDesktopExA = Module.findExportByName("user32.dll", "CreateDesktopExA")
Interceptor.attach(CreateDesktopExA, {onLeave: function (args) {send("CreateDesktopExA");}});

var CreateDesktopExW = Module.findExportByName("user32.dll", "CreateDesktopExW")
Interceptor.attach(CreateDesktopExW, {onLeave: function (args) {send("CreateDesktopExW");}});

var CreateDesktopW = Module.findExportByName("user32.dll", "CreateDesktopW")
Interceptor.attach(CreateDesktopW, {onLeave: function (args) {send("CreateDesktopW");}});

var CreateDialogIndirectParamA = Module.findExportByName("user32.dll", "CreateDialogIndirectParamA")
Interceptor.attach(CreateDialogIndirectParamA, {onLeave: function (args) {send("CreateDialogIndirectParamA");}});

var CreateDialogIndirectParamAorW = Module.findExportByName("user32.dll", "CreateDialogIndirectParamAorW")
Interceptor.attach(CreateDialogIndirectParamAorW, {onLeave: function (args) {send("CreateDialogIndirectParamAorW");}});

var CreateDialogIndirectParamW = Module.findExportByName("user32.dll", "CreateDialogIndirectParamW")
Interceptor.attach(CreateDialogIndirectParamW, {onLeave: function (args) {send("CreateDialogIndirectParamW");}});

var CreateDialogParamA = Module.findExportByName("user32.dll", "CreateDialogParamA")
Interceptor.attach(CreateDialogParamA, {onLeave: function (args) {send("CreateDialogParamA");}});

var CreateDialogParamW = Module.findExportByName("user32.dll", "CreateDialogParamW")
Interceptor.attach(CreateDialogParamW, {onLeave: function (args) {send("CreateDialogParamW");}});

var CreateIcon = Module.findExportByName("user32.dll", "CreateIcon")
Interceptor.attach(CreateIcon, {onLeave: function (args) {send("CreateIcon");}});

var CreateIconFromResource = Module.findExportByName("user32.dll", "CreateIconFromResource")
Interceptor.attach(CreateIconFromResource, {onLeave: function (args) {send("CreateIconFromResource");}});

var CreateIconFromResourceEx = Module.findExportByName("user32.dll", "CreateIconFromResourceEx")
Interceptor.attach(CreateIconFromResourceEx, {onLeave: function (args) {send("CreateIconFromResourceEx");}});

var CreateIconIndirect = Module.findExportByName("user32.dll", "CreateIconIndirect")
Interceptor.attach(CreateIconIndirect, {onLeave: function (args) {send("CreateIconIndirect");}});

var CreateMDIWindowA = Module.findExportByName("user32.dll", "CreateMDIWindowA")
Interceptor.attach(CreateMDIWindowA, {onLeave: function (args) {send("CreateMDIWindowA");}});

var CreateMDIWindowW = Module.findExportByName("user32.dll", "CreateMDIWindowW")
Interceptor.attach(CreateMDIWindowW, {onLeave: function (args) {send("CreateMDIWindowW");}});

var CreateMenu = Module.findExportByName("user32.dll", "CreateMenu")
Interceptor.attach(CreateMenu, {onLeave: function (args) {send("CreateMenu");}});

var CreatePopupMenu = Module.findExportByName("user32.dll", "CreatePopupMenu")
Interceptor.attach(CreatePopupMenu, {onLeave: function (args) {send("CreatePopupMenu");}});

var CreateSyntheticPointerDevice = Module.findExportByName("user32.dll", "CreateSyntheticPointerDevice")
Interceptor.attach(CreateSyntheticPointerDevice, {onLeave: function (args) {send("CreateSyntheticPointerDevice");}});

var CreateSystemThreads = Module.findExportByName("user32.dll", "CreateSystemThreads")
Interceptor.attach(CreateSystemThreads, {onLeave: function (args) {send("CreateSystemThreads");}});

var CreateWindowExA = Module.findExportByName("user32.dll", "CreateWindowExA")
Interceptor.attach(CreateWindowExA, {onLeave: function (args) {send("CreateWindowExA");}});

var CreateWindowExW = Module.findExportByName("user32.dll", "CreateWindowExW")
Interceptor.attach(CreateWindowExW, {onLeave: function (args) {send("CreateWindowExW");}});

var CreateWindowInBand = Module.findExportByName("user32.dll", "CreateWindowInBand")
Interceptor.attach(CreateWindowInBand, {onLeave: function (args) {send("CreateWindowInBand");}});

var CreateWindowInBandEx = Module.findExportByName("user32.dll", "CreateWindowInBandEx")
Interceptor.attach(CreateWindowInBandEx, {onLeave: function (args) {send("CreateWindowInBandEx");}});

var CreateWindowIndirect = Module.findExportByName("user32.dll", "CreateWindowIndirect")
Interceptor.attach(CreateWindowIndirect, {onLeave: function (args) {send("CreateWindowIndirect");}});

var CreateWindowStationA = Module.findExportByName("user32.dll", "CreateWindowStationA")
Interceptor.attach(CreateWindowStationA, {onLeave: function (args) {send("CreateWindowStationA");}});

var CreateWindowStationW = Module.findExportByName("user32.dll", "CreateWindowStationW")
Interceptor.attach(CreateWindowStationW, {onLeave: function (args) {send("CreateWindowStationW");}});

var CsrBroadcastSystemMessageExW = Module.findExportByName("user32.dll", "CsrBroadcastSystemMessageExW")
Interceptor.attach(CsrBroadcastSystemMessageExW, {onLeave: function (args) {send("CsrBroadcastSystemMessageExW");}});

var CtxInitUser32 = Module.findExportByName("user32.dll", "CtxInitUser32")
Interceptor.attach(CtxInitUser32, {onLeave: function (args) {send("CtxInitUser32");}});

var DdeAbandonTransaction = Module.findExportByName("user32.dll", "DdeAbandonTransaction")
Interceptor.attach(DdeAbandonTransaction, {onLeave: function (args) {send("DdeAbandonTransaction");}});

var DdeAccessData = Module.findExportByName("user32.dll", "DdeAccessData")
Interceptor.attach(DdeAccessData, {onLeave: function (args) {send("DdeAccessData");}});

var DdeAddData = Module.findExportByName("user32.dll", "DdeAddData")
Interceptor.attach(DdeAddData, {onLeave: function (args) {send("DdeAddData");}});

var DdeClientTransaction = Module.findExportByName("user32.dll", "DdeClientTransaction")
Interceptor.attach(DdeClientTransaction, {onLeave: function (args) {send("DdeClientTransaction");}});

var DdeCmpStringHandles = Module.findExportByName("user32.dll", "DdeCmpStringHandles")
Interceptor.attach(DdeCmpStringHandles, {onLeave: function (args) {send("DdeCmpStringHandles");}});

var DdeConnect = Module.findExportByName("user32.dll", "DdeConnect")
Interceptor.attach(DdeConnect, {onLeave: function (args) {send("DdeConnect");}});

var DdeConnectList = Module.findExportByName("user32.dll", "DdeConnectList")
Interceptor.attach(DdeConnectList, {onLeave: function (args) {send("DdeConnectList");}});

var DdeCreateDataHandle = Module.findExportByName("user32.dll", "DdeCreateDataHandle")
Interceptor.attach(DdeCreateDataHandle, {onLeave: function (args) {send("DdeCreateDataHandle");}});

var DdeCreateStringHandleA = Module.findExportByName("user32.dll", "DdeCreateStringHandleA")
Interceptor.attach(DdeCreateStringHandleA, {onLeave: function (args) {send("DdeCreateStringHandleA");}});

var DdeCreateStringHandleW = Module.findExportByName("user32.dll", "DdeCreateStringHandleW")
Interceptor.attach(DdeCreateStringHandleW, {onLeave: function (args) {send("DdeCreateStringHandleW");}});

var DdeDisconnect = Module.findExportByName("user32.dll", "DdeDisconnect")
Interceptor.attach(DdeDisconnect, {onLeave: function (args) {send("DdeDisconnect");}});

var DdeDisconnectList = Module.findExportByName("user32.dll", "DdeDisconnectList")
Interceptor.attach(DdeDisconnectList, {onLeave: function (args) {send("DdeDisconnectList");}});

var DdeEnableCallback = Module.findExportByName("user32.dll", "DdeEnableCallback")
Interceptor.attach(DdeEnableCallback, {onLeave: function (args) {send("DdeEnableCallback");}});

var DdeFreeDataHandle = Module.findExportByName("user32.dll", "DdeFreeDataHandle")
Interceptor.attach(DdeFreeDataHandle, {onLeave: function (args) {send("DdeFreeDataHandle");}});

var DdeFreeStringHandle = Module.findExportByName("user32.dll", "DdeFreeStringHandle")
Interceptor.attach(DdeFreeStringHandle, {onLeave: function (args) {send("DdeFreeStringHandle");}});

var DdeGetData = Module.findExportByName("user32.dll", "DdeGetData")
Interceptor.attach(DdeGetData, {onLeave: function (args) {send("DdeGetData");}});

var DdeGetLastError = Module.findExportByName("user32.dll", "DdeGetLastError")
Interceptor.attach(DdeGetLastError, {onLeave: function (args) {send("DdeGetLastError");}});

var DdeGetQualityOfService = Module.findExportByName("user32.dll", "DdeGetQualityOfService")
Interceptor.attach(DdeGetQualityOfService, {onLeave: function (args) {send("DdeGetQualityOfService");}});

var DdeImpersonateClient = Module.findExportByName("user32.dll", "DdeImpersonateClient")
Interceptor.attach(DdeImpersonateClient, {onLeave: function (args) {send("DdeImpersonateClient");}});

var DdeInitializeA = Module.findExportByName("user32.dll", "DdeInitializeA")
Interceptor.attach(DdeInitializeA, {onLeave: function (args) {send("DdeInitializeA");}});

var DdeInitializeW = Module.findExportByName("user32.dll", "DdeInitializeW")
Interceptor.attach(DdeInitializeW, {onLeave: function (args) {send("DdeInitializeW");}});

var DdeKeepStringHandle = Module.findExportByName("user32.dll", "DdeKeepStringHandle")
Interceptor.attach(DdeKeepStringHandle, {onLeave: function (args) {send("DdeKeepStringHandle");}});

var DdeNameService = Module.findExportByName("user32.dll", "DdeNameService")
Interceptor.attach(DdeNameService, {onLeave: function (args) {send("DdeNameService");}});

var DdePostAdvise = Module.findExportByName("user32.dll", "DdePostAdvise")
Interceptor.attach(DdePostAdvise, {onLeave: function (args) {send("DdePostAdvise");}});

var DdeQueryConvInfo = Module.findExportByName("user32.dll", "DdeQueryConvInfo")
Interceptor.attach(DdeQueryConvInfo, {onLeave: function (args) {send("DdeQueryConvInfo");}});

var DdeQueryNextServer = Module.findExportByName("user32.dll", "DdeQueryNextServer")
Interceptor.attach(DdeQueryNextServer, {onLeave: function (args) {send("DdeQueryNextServer");}});

var DdeQueryStringA = Module.findExportByName("user32.dll", "DdeQueryStringA")
Interceptor.attach(DdeQueryStringA, {onLeave: function (args) {send("DdeQueryStringA");}});

var DdeQueryStringW = Module.findExportByName("user32.dll", "DdeQueryStringW")
Interceptor.attach(DdeQueryStringW, {onLeave: function (args) {send("DdeQueryStringW");}});

var DdeReconnect = Module.findExportByName("user32.dll", "DdeReconnect")
Interceptor.attach(DdeReconnect, {onLeave: function (args) {send("DdeReconnect");}});

var DdeSetQualityOfService = Module.findExportByName("user32.dll", "DdeSetQualityOfService")
Interceptor.attach(DdeSetQualityOfService, {onLeave: function (args) {send("DdeSetQualityOfService");}});

var DdeSetUserHandle = Module.findExportByName("user32.dll", "DdeSetUserHandle")
Interceptor.attach(DdeSetUserHandle, {onLeave: function (args) {send("DdeSetUserHandle");}});

var DdeUnaccessData = Module.findExportByName("user32.dll", "DdeUnaccessData")
Interceptor.attach(DdeUnaccessData, {onLeave: function (args) {send("DdeUnaccessData");}});

var DdeUninitialize = Module.findExportByName("user32.dll", "DdeUninitialize")
Interceptor.attach(DdeUninitialize, {onLeave: function (args) {send("DdeUninitialize");}});

var DefDlgProcA = Module.findExportByName("user32.dll", "DefDlgProcA")
Interceptor.attach(DefDlgProcA, {onLeave: function (args) {send("DefDlgProcA");}});

var DefDlgProcW = Module.findExportByName("user32.dll", "DefDlgProcW")
Interceptor.attach(DefDlgProcW, {onLeave: function (args) {send("DefDlgProcW");}});

var DefFrameProcA = Module.findExportByName("user32.dll", "DefFrameProcA")
Interceptor.attach(DefFrameProcA, {onLeave: function (args) {send("DefFrameProcA");}});

var DefFrameProcW = Module.findExportByName("user32.dll", "DefFrameProcW")
Interceptor.attach(DefFrameProcW, {onLeave: function (args) {send("DefFrameProcW");}});

var DefMDIChildProcA = Module.findExportByName("user32.dll", "DefMDIChildProcA")
Interceptor.attach(DefMDIChildProcA, {onLeave: function (args) {send("DefMDIChildProcA");}});

var DefMDIChildProcW = Module.findExportByName("user32.dll", "DefMDIChildProcW")
Interceptor.attach(DefMDIChildProcW, {onLeave: function (args) {send("DefMDIChildProcW");}});

var DefRawInputProc = Module.findExportByName("user32.dll", "DefRawInputProc")
Interceptor.attach(DefRawInputProc, {onLeave: function (args) {send("DefRawInputProc");}});

var DefWindowProcA = Module.findExportByName("user32.dll", "DefWindowProcA")
Interceptor.attach(DefWindowProcA, {onLeave: function (args) {send("DefWindowProcA");}});

var DefWindowProcW = Module.findExportByName("user32.dll", "DefWindowProcW")
Interceptor.attach(DefWindowProcW, {onLeave: function (args) {send("DefWindowProcW");}});

var DeferWindowPos = Module.findExportByName("user32.dll", "DeferWindowPos")
Interceptor.attach(DeferWindowPos, {onLeave: function (args) {send("DeferWindowPos");}});

var DeferWindowPosAndBand = Module.findExportByName("user32.dll", "DeferWindowPosAndBand")
Interceptor.attach(DeferWindowPosAndBand, {onLeave: function (args) {send("DeferWindowPosAndBand");}});

var DelegateInput = Module.findExportByName("user32.dll", "DelegateInput")
Interceptor.attach(DelegateInput, {onLeave: function (args) {send("DelegateInput");}});

var DeleteMenu = Module.findExportByName("user32.dll", "DeleteMenu")
Interceptor.attach(DeleteMenu, {onLeave: function (args) {send("DeleteMenu");}});

var DeregisterShellHookWindow = Module.findExportByName("user32.dll", "DeregisterShellHookWindow")
Interceptor.attach(DeregisterShellHookWindow, {onLeave: function (args) {send("DeregisterShellHookWindow");}});

var DestroyAcceleratorTable = Module.findExportByName("user32.dll", "DestroyAcceleratorTable")
Interceptor.attach(DestroyAcceleratorTable, {onLeave: function (args) {send("DestroyAcceleratorTable");}});

var DestroyCaret = Module.findExportByName("user32.dll", "DestroyCaret")
Interceptor.attach(DestroyCaret, {onLeave: function (args) {send("DestroyCaret");}});

var DestroyCursor = Module.findExportByName("user32.dll", "DestroyCursor")
Interceptor.attach(DestroyCursor, {onLeave: function (args) {send("DestroyCursor");}});

var DestroyDCompositionHwndTarget = Module.findExportByName("user32.dll", "DestroyDCompositionHwndTarget")
Interceptor.attach(DestroyDCompositionHwndTarget, {onLeave: function (args) {send("DestroyDCompositionHwndTarget");}});

var DestroyIcon = Module.findExportByName("user32.dll", "DestroyIcon")
Interceptor.attach(DestroyIcon, {onLeave: function (args) {send("DestroyIcon");}});

var DestroyMenu = Module.findExportByName("user32.dll", "DestroyMenu")
Interceptor.attach(DestroyMenu, {onLeave: function (args) {send("DestroyMenu");}});

var DestroyReasons = Module.findExportByName("user32.dll", "DestroyReasons")
Interceptor.attach(DestroyReasons, {onLeave: function (args) {send("DestroyReasons");}});

var DestroySyntheticPointerDevice = Module.findExportByName("user32.dll", "DestroySyntheticPointerDevice")
Interceptor.attach(DestroySyntheticPointerDevice, {onLeave: function (args) {send("DestroySyntheticPointerDevice");}});

var DestroyWindow = Module.findExportByName("user32.dll", "DestroyWindow")
Interceptor.attach(DestroyWindow, {onLeave: function (args) {send("DestroyWindow");}});

var DialogBoxIndirectParamA = Module.findExportByName("user32.dll", "DialogBoxIndirectParamA")
Interceptor.attach(DialogBoxIndirectParamA, {onLeave: function (args) {send("DialogBoxIndirectParamA");}});

var DialogBoxIndirectParamAorW = Module.findExportByName("user32.dll", "DialogBoxIndirectParamAorW")
Interceptor.attach(DialogBoxIndirectParamAorW, {onLeave: function (args) {send("DialogBoxIndirectParamAorW");}});

var DialogBoxIndirectParamW = Module.findExportByName("user32.dll", "DialogBoxIndirectParamW")
Interceptor.attach(DialogBoxIndirectParamW, {onLeave: function (args) {send("DialogBoxIndirectParamW");}});

var DialogBoxParamA = Module.findExportByName("user32.dll", "DialogBoxParamA")
Interceptor.attach(DialogBoxParamA, {onLeave: function (args) {send("DialogBoxParamA");}});

var DialogBoxParamW = Module.findExportByName("user32.dll", "DialogBoxParamW")
Interceptor.attach(DialogBoxParamW, {onLeave: function (args) {send("DialogBoxParamW");}});

var DisableProcessWindowsGhosting = Module.findExportByName("user32.dll", "DisableProcessWindowsGhosting")
Interceptor.attach(DisableProcessWindowsGhosting, {onLeave: function (args) {send("DisableProcessWindowsGhosting");}});

var DispatchMessageA = Module.findExportByName("user32.dll", "DispatchMessageA")
Interceptor.attach(DispatchMessageA, {onLeave: function (args) {send("DispatchMessageA");}});

var DispatchMessageW = Module.findExportByName("user32.dll", "DispatchMessageW")
Interceptor.attach(DispatchMessageW, {onLeave: function (args) {send("DispatchMessageW");}});

var DisplayConfigGetDeviceInfo = Module.findExportByName("user32.dll", "DisplayConfigGetDeviceInfo")
Interceptor.attach(DisplayConfigGetDeviceInfo, {onLeave: function (args) {send("DisplayConfigGetDeviceInfo");}});

var DisplayConfigSetDeviceInfo = Module.findExportByName("user32.dll", "DisplayConfigSetDeviceInfo")
Interceptor.attach(DisplayConfigSetDeviceInfo, {onLeave: function (args) {send("DisplayConfigSetDeviceInfo");}});

var DisplayExitWindowsWarnings = Module.findExportByName("user32.dll", "DisplayExitWindowsWarnings")
Interceptor.attach(DisplayExitWindowsWarnings, {onLeave: function (args) {send("DisplayExitWindowsWarnings");}});

var DlgDirListA = Module.findExportByName("user32.dll", "DlgDirListA")
Interceptor.attach(DlgDirListA, {onLeave: function (args) {send("DlgDirListA");}});

var DlgDirListComboBoxA = Module.findExportByName("user32.dll", "DlgDirListComboBoxA")
Interceptor.attach(DlgDirListComboBoxA, {onLeave: function (args) {send("DlgDirListComboBoxA");}});

var DlgDirListComboBoxW = Module.findExportByName("user32.dll", "DlgDirListComboBoxW")
Interceptor.attach(DlgDirListComboBoxW, {onLeave: function (args) {send("DlgDirListComboBoxW");}});

var DlgDirListW = Module.findExportByName("user32.dll", "DlgDirListW")
Interceptor.attach(DlgDirListW, {onLeave: function (args) {send("DlgDirListW");}});

var DlgDirSelectComboBoxExA = Module.findExportByName("user32.dll", "DlgDirSelectComboBoxExA")
Interceptor.attach(DlgDirSelectComboBoxExA, {onLeave: function (args) {send("DlgDirSelectComboBoxExA");}});

var DlgDirSelectComboBoxExW = Module.findExportByName("user32.dll", "DlgDirSelectComboBoxExW")
Interceptor.attach(DlgDirSelectComboBoxExW, {onLeave: function (args) {send("DlgDirSelectComboBoxExW");}});

var DlgDirSelectExA = Module.findExportByName("user32.dll", "DlgDirSelectExA")
Interceptor.attach(DlgDirSelectExA, {onLeave: function (args) {send("DlgDirSelectExA");}});

var DlgDirSelectExW = Module.findExportByName("user32.dll", "DlgDirSelectExW")
Interceptor.attach(DlgDirSelectExW, {onLeave: function (args) {send("DlgDirSelectExW");}});

var DoSoundConnect = Module.findExportByName("user32.dll", "DoSoundConnect")
Interceptor.attach(DoSoundConnect, {onLeave: function (args) {send("DoSoundConnect");}});

var DoSoundDisconnect = Module.findExportByName("user32.dll", "DoSoundDisconnect")
Interceptor.attach(DoSoundDisconnect, {onLeave: function (args) {send("DoSoundDisconnect");}});

var DragDetect = Module.findExportByName("user32.dll", "DragDetect")
Interceptor.attach(DragDetect, {onLeave: function (args) {send("DragDetect");}});

var DragObject = Module.findExportByName("user32.dll", "DragObject")
Interceptor.attach(DragObject, {onLeave: function (args) {send("DragObject");}});

var DrawAnimatedRects = Module.findExportByName("user32.dll", "DrawAnimatedRects")
Interceptor.attach(DrawAnimatedRects, {onLeave: function (args) {send("DrawAnimatedRects");}});

var DrawCaption = Module.findExportByName("user32.dll", "DrawCaption")
Interceptor.attach(DrawCaption, {onLeave: function (args) {send("DrawCaption");}});

var DrawCaptionTempA = Module.findExportByName("user32.dll", "DrawCaptionTempA")
Interceptor.attach(DrawCaptionTempA, {onLeave: function (args) {send("DrawCaptionTempA");}});

var DrawCaptionTempW = Module.findExportByName("user32.dll", "DrawCaptionTempW")
Interceptor.attach(DrawCaptionTempW, {onLeave: function (args) {send("DrawCaptionTempW");}});

var DrawEdge = Module.findExportByName("user32.dll", "DrawEdge")
Interceptor.attach(DrawEdge, {onLeave: function (args) {send("DrawEdge");}});

var DrawFocusRect = Module.findExportByName("user32.dll", "DrawFocusRect")
Interceptor.attach(DrawFocusRect, {onLeave: function (args) {send("DrawFocusRect");}});

var DrawFrame = Module.findExportByName("user32.dll", "DrawFrame")
Interceptor.attach(DrawFrame, {onLeave: function (args) {send("DrawFrame");}});

var DrawFrameControl = Module.findExportByName("user32.dll", "DrawFrameControl")
Interceptor.attach(DrawFrameControl, {onLeave: function (args) {send("DrawFrameControl");}});

var DrawIcon = Module.findExportByName("user32.dll", "DrawIcon")
Interceptor.attach(DrawIcon, {onLeave: function (args) {send("DrawIcon");}});

var DrawIconEx = Module.findExportByName("user32.dll", "DrawIconEx")
Interceptor.attach(DrawIconEx, {onLeave: function (args) {send("DrawIconEx");}});

var DrawMenuBar = Module.findExportByName("user32.dll", "DrawMenuBar")
Interceptor.attach(DrawMenuBar, {onLeave: function (args) {send("DrawMenuBar");}});

var DrawMenuBarTemp = Module.findExportByName("user32.dll", "DrawMenuBarTemp")
Interceptor.attach(DrawMenuBarTemp, {onLeave: function (args) {send("DrawMenuBarTemp");}});

var DrawStateA = Module.findExportByName("user32.dll", "DrawStateA")
Interceptor.attach(DrawStateA, {onLeave: function (args) {send("DrawStateA");}});

var DrawStateW = Module.findExportByName("user32.dll", "DrawStateW")
Interceptor.attach(DrawStateW, {onLeave: function (args) {send("DrawStateW");}});

var DrawTextA = Module.findExportByName("user32.dll", "DrawTextA")
Interceptor.attach(DrawTextA, {onLeave: function (args) {send("DrawTextA");}});

var DrawTextExA = Module.findExportByName("user32.dll", "DrawTextExA")
Interceptor.attach(DrawTextExA, {onLeave: function (args) {send("DrawTextExA");}});

var DrawTextExW = Module.findExportByName("user32.dll", "DrawTextExW")
Interceptor.attach(DrawTextExW, {onLeave: function (args) {send("DrawTextExW");}});

var DrawTextW = Module.findExportByName("user32.dll", "DrawTextW")
Interceptor.attach(DrawTextW, {onLeave: function (args) {send("DrawTextW");}});

var DwmGetDxRgn = Module.findExportByName("user32.dll", "DwmGetDxRgn")
Interceptor.attach(DwmGetDxRgn, {onLeave: function (args) {send("DwmGetDxRgn");}});

var DwmGetDxSharedSurface = Module.findExportByName("user32.dll", "DwmGetDxSharedSurface")
Interceptor.attach(DwmGetDxSharedSurface, {onLeave: function (args) {send("DwmGetDxSharedSurface");}});

var DwmGetRemoteSessionOcclusionEvent = Module.findExportByName("user32.dll", "DwmGetRemoteSessionOcclusionEvent")
Interceptor.attach(DwmGetRemoteSessionOcclusionEvent, {onLeave: function (args) {send("DwmGetRemoteSessionOcclusionEvent");}});

var DwmGetRemoteSessionOcclusionState = Module.findExportByName("user32.dll", "DwmGetRemoteSessionOcclusionState")
Interceptor.attach(DwmGetRemoteSessionOcclusionState, {onLeave: function (args) {send("DwmGetRemoteSessionOcclusionState");}});

var DwmKernelShutdown = Module.findExportByName("user32.dll", "DwmKernelShutdown")
Interceptor.attach(DwmKernelShutdown, {onLeave: function (args) {send("DwmKernelShutdown");}});

var DwmKernelStartup = Module.findExportByName("user32.dll", "DwmKernelStartup")
Interceptor.attach(DwmKernelStartup, {onLeave: function (args) {send("DwmKernelStartup");}});

var DwmLockScreenUpdates = Module.findExportByName("user32.dll", "DwmLockScreenUpdates")
Interceptor.attach(DwmLockScreenUpdates, {onLeave: function (args) {send("DwmLockScreenUpdates");}});

var DwmValidateWindow = Module.findExportByName("user32.dll", "DwmValidateWindow")
Interceptor.attach(DwmValidateWindow, {onLeave: function (args) {send("DwmValidateWindow");}});

var EditWndProc = Module.findExportByName("user32.dll", "EditWndProc")
Interceptor.attach(EditWndProc, {onLeave: function (args) {send("EditWndProc");}});

var EmptyClipboard = Module.findExportByName("user32.dll", "EmptyClipboard")
Interceptor.attach(EmptyClipboard, {onLeave: function (args) {send("EmptyClipboard");}});

var EnableMenuItem = Module.findExportByName("user32.dll", "EnableMenuItem")
Interceptor.attach(EnableMenuItem, {onLeave: function (args) {send("EnableMenuItem");}});

var EnableMouseInPointer = Module.findExportByName("user32.dll", "EnableMouseInPointer")
Interceptor.attach(EnableMouseInPointer, {onLeave: function (args) {send("EnableMouseInPointer");}});

var EnableNonClientDpiScaling = Module.findExportByName("user32.dll", "EnableNonClientDpiScaling")
Interceptor.attach(EnableNonClientDpiScaling, {onLeave: function (args) {send("EnableNonClientDpiScaling");}});

var EnableOneCoreTransformMode = Module.findExportByName("user32.dll", "EnableOneCoreTransformMode")
Interceptor.attach(EnableOneCoreTransformMode, {onLeave: function (args) {send("EnableOneCoreTransformMode");}});

var EnableScrollBar = Module.findExportByName("user32.dll", "EnableScrollBar")
Interceptor.attach(EnableScrollBar, {onLeave: function (args) {send("EnableScrollBar");}});

var EnableSessionForMMCSS = Module.findExportByName("user32.dll", "EnableSessionForMMCSS")
Interceptor.attach(EnableSessionForMMCSS, {onLeave: function (args) {send("EnableSessionForMMCSS");}});

var EnableWindow = Module.findExportByName("user32.dll", "EnableWindow")
Interceptor.attach(EnableWindow, {onLeave: function (args) {send("EnableWindow");}});

var EndDeferWindowPos = Module.findExportByName("user32.dll", "EndDeferWindowPos")
Interceptor.attach(EndDeferWindowPos, {onLeave: function (args) {send("EndDeferWindowPos");}});

var EndDeferWindowPosEx = Module.findExportByName("user32.dll", "EndDeferWindowPosEx")
Interceptor.attach(EndDeferWindowPosEx, {onLeave: function (args) {send("EndDeferWindowPosEx");}});

var EndDialog = Module.findExportByName("user32.dll", "EndDialog")
Interceptor.attach(EndDialog, {onLeave: function (args) {send("EndDialog");}});

var EndMenu = Module.findExportByName("user32.dll", "EndMenu")
Interceptor.attach(EndMenu, {onLeave: function (args) {send("EndMenu");}});

var EndPaint = Module.findExportByName("user32.dll", "EndPaint")
Interceptor.attach(EndPaint, {onLeave: function (args) {send("EndPaint");}});

var EndTask = Module.findExportByName("user32.dll", "EndTask")
Interceptor.attach(EndTask, {onLeave: function (args) {send("EndTask");}});

var EnterReaderModeHelper = Module.findExportByName("user32.dll", "EnterReaderModeHelper")
Interceptor.attach(EnterReaderModeHelper, {onLeave: function (args) {send("EnterReaderModeHelper");}});

var EnumChildWindows = Module.findExportByName("user32.dll", "EnumChildWindows")
Interceptor.attach(EnumChildWindows, {onLeave: function (args) {send("EnumChildWindows");}});

var EnumClipboardFormats = Module.findExportByName("user32.dll", "EnumClipboardFormats")
Interceptor.attach(EnumClipboardFormats, {onLeave: function (args) {send("EnumClipboardFormats");}});

var EnumDesktopWindows = Module.findExportByName("user32.dll", "EnumDesktopWindows")
Interceptor.attach(EnumDesktopWindows, {onLeave: function (args) {send("EnumDesktopWindows");}});

var EnumDesktopsA = Module.findExportByName("user32.dll", "EnumDesktopsA")
Interceptor.attach(EnumDesktopsA, {onLeave: function (args) {send("EnumDesktopsA");}});

var EnumDesktopsW = Module.findExportByName("user32.dll", "EnumDesktopsW")
Interceptor.attach(EnumDesktopsW, {onLeave: function (args) {send("EnumDesktopsW");}});

var EnumDisplayDevicesA = Module.findExportByName("user32.dll", "EnumDisplayDevicesA")
Interceptor.attach(EnumDisplayDevicesA, {onLeave: function (args) {send("EnumDisplayDevicesA");}});

var EnumDisplayDevicesW = Module.findExportByName("user32.dll", "EnumDisplayDevicesW")
Interceptor.attach(EnumDisplayDevicesW, {onLeave: function (args) {send("EnumDisplayDevicesW");}});

var EnumDisplayMonitors = Module.findExportByName("user32.dll", "EnumDisplayMonitors")
Interceptor.attach(EnumDisplayMonitors, {onLeave: function (args) {send("EnumDisplayMonitors");}});

var EnumDisplaySettingsA = Module.findExportByName("user32.dll", "EnumDisplaySettingsA")
Interceptor.attach(EnumDisplaySettingsA, {onLeave: function (args) {send("EnumDisplaySettingsA");}});

var EnumDisplaySettingsExA = Module.findExportByName("user32.dll", "EnumDisplaySettingsExA")
Interceptor.attach(EnumDisplaySettingsExA, {onLeave: function (args) {send("EnumDisplaySettingsExA");}});

var EnumDisplaySettingsExW = Module.findExportByName("user32.dll", "EnumDisplaySettingsExW")
Interceptor.attach(EnumDisplaySettingsExW, {onLeave: function (args) {send("EnumDisplaySettingsExW");}});

var EnumDisplaySettingsW = Module.findExportByName("user32.dll", "EnumDisplaySettingsW")
Interceptor.attach(EnumDisplaySettingsW, {onLeave: function (args) {send("EnumDisplaySettingsW");}});

var EnumPropsA = Module.findExportByName("user32.dll", "EnumPropsA")
Interceptor.attach(EnumPropsA, {onLeave: function (args) {send("EnumPropsA");}});

var EnumPropsExA = Module.findExportByName("user32.dll", "EnumPropsExA")
Interceptor.attach(EnumPropsExA, {onLeave: function (args) {send("EnumPropsExA");}});

var EnumPropsExW = Module.findExportByName("user32.dll", "EnumPropsExW")
Interceptor.attach(EnumPropsExW, {onLeave: function (args) {send("EnumPropsExW");}});

var EnumPropsW = Module.findExportByName("user32.dll", "EnumPropsW")
Interceptor.attach(EnumPropsW, {onLeave: function (args) {send("EnumPropsW");}});

var EnumThreadWindows = Module.findExportByName("user32.dll", "EnumThreadWindows")
Interceptor.attach(EnumThreadWindows, {onLeave: function (args) {send("EnumThreadWindows");}});

var EnumWindowStationsA = Module.findExportByName("user32.dll", "EnumWindowStationsA")
Interceptor.attach(EnumWindowStationsA, {onLeave: function (args) {send("EnumWindowStationsA");}});

var EnumWindowStationsW = Module.findExportByName("user32.dll", "EnumWindowStationsW")
Interceptor.attach(EnumWindowStationsW, {onLeave: function (args) {send("EnumWindowStationsW");}});

var EnumWindows = Module.findExportByName("user32.dll", "EnumWindows")
Interceptor.attach(EnumWindows, {onLeave: function (args) {send("EnumWindows");}});

var EqualRect = Module.findExportByName("user32.dll", "EqualRect")
Interceptor.attach(EqualRect, {onLeave: function (args) {send("EqualRect");}});

var EvaluateProximityToPolygon = Module.findExportByName("user32.dll", "EvaluateProximityToPolygon")
Interceptor.attach(EvaluateProximityToPolygon, {onLeave: function (args) {send("EvaluateProximityToPolygon");}});

var EvaluateProximityToRect = Module.findExportByName("user32.dll", "EvaluateProximityToRect")
Interceptor.attach(EvaluateProximityToRect, {onLeave: function (args) {send("EvaluateProximityToRect");}});

var ExcludeUpdateRgn = Module.findExportByName("user32.dll", "ExcludeUpdateRgn")
Interceptor.attach(ExcludeUpdateRgn, {onLeave: function (args) {send("ExcludeUpdateRgn");}});

var ExitWindowsEx = Module.findExportByName("user32.dll", "ExitWindowsEx")
Interceptor.attach(ExitWindowsEx, {onLeave: function (args) {send("ExitWindowsEx");}});

var FillRect = Module.findExportByName("user32.dll", "FillRect")
Interceptor.attach(FillRect, {onLeave: function (args) {send("FillRect");}});

var FindWindowA = Module.findExportByName("user32.dll", "FindWindowA")
Interceptor.attach(FindWindowA, {onLeave: function (args) {send("FindWindowA");}});

var FindWindowExA = Module.findExportByName("user32.dll", "FindWindowExA")
Interceptor.attach(FindWindowExA, {onLeave: function (args) {send("FindWindowExA");}});

var FindWindowExW = Module.findExportByName("user32.dll", "FindWindowExW")
Interceptor.attach(FindWindowExW, {onLeave: function (args) {send("FindWindowExW");}});

var FindWindowW = Module.findExportByName("user32.dll", "FindWindowW")
Interceptor.attach(FindWindowW, {onLeave: function (args) {send("FindWindowW");}});

var FlashWindow = Module.findExportByName("user32.dll", "FlashWindow")
Interceptor.attach(FlashWindow, {onLeave: function (args) {send("FlashWindow");}});

var FlashWindowEx = Module.findExportByName("user32.dll", "FlashWindowEx")
Interceptor.attach(FlashWindowEx, {onLeave: function (args) {send("FlashWindowEx");}});

var FrameRect = Module.findExportByName("user32.dll", "FrameRect")
Interceptor.attach(FrameRect, {onLeave: function (args) {send("FrameRect");}});

var FreeDDElParam = Module.findExportByName("user32.dll", "FreeDDElParam")
Interceptor.attach(FreeDDElParam, {onLeave: function (args) {send("FreeDDElParam");}});

var FrostCrashedWindow = Module.findExportByName("user32.dll", "FrostCrashedWindow")
Interceptor.attach(FrostCrashedWindow, {onLeave: function (args) {send("FrostCrashedWindow");}});

var GetActiveWindow = Module.findExportByName("user32.dll", "GetActiveWindow")
Interceptor.attach(GetActiveWindow, {onLeave: function (args) {send("GetActiveWindow");}});

var GetAltTabInfo = Module.findExportByName("user32.dll", "GetAltTabInfo")
Interceptor.attach(GetAltTabInfo, {onLeave: function (args) {send("GetAltTabInfo");}});

var GetAltTabInfoA = Module.findExportByName("user32.dll", "GetAltTabInfoA")
Interceptor.attach(GetAltTabInfoA, {onLeave: function (args) {send("GetAltTabInfoA");}});

var GetAltTabInfoW = Module.findExportByName("user32.dll", "GetAltTabInfoW")
Interceptor.attach(GetAltTabInfoW, {onLeave: function (args) {send("GetAltTabInfoW");}});

var GetAncestor = Module.findExportByName("user32.dll", "GetAncestor")
Interceptor.attach(GetAncestor, {onLeave: function (args) {send("GetAncestor");}});

var GetAppCompatFlags = Module.findExportByName("user32.dll", "GetAppCompatFlags")
Interceptor.attach(GetAppCompatFlags, {onLeave: function (args) {send("GetAppCompatFlags");}});

var GetAppCompatFlags2 = Module.findExportByName("user32.dll", "GetAppCompatFlags2")
Interceptor.attach(GetAppCompatFlags2, {onLeave: function (args) {send("GetAppCompatFlags2");}});

var GetAsyncKeyState = Module.findExportByName("user32.dll", "GetAsyncKeyState")
Interceptor.attach(GetAsyncKeyState, {onLeave: function (args) {send("GetAsyncKeyState");}});

var GetAutoRotationState = Module.findExportByName("user32.dll", "GetAutoRotationState")
Interceptor.attach(GetAutoRotationState, {onLeave: function (args) {send("GetAutoRotationState");}});

var GetAwarenessFromDpiAwarenessContext = Module.findExportByName("user32.dll", "GetAwarenessFromDpiAwarenessContext")
Interceptor.attach(GetAwarenessFromDpiAwarenessContext, {onLeave: function (args) {send("GetAwarenessFromDpiAwarenessContext");}});

var GetCIMSSM = Module.findExportByName("user32.dll", "GetCIMSSM")
Interceptor.attach(GetCIMSSM, {onLeave: function (args) {send("GetCIMSSM");}});

var GetCapture = Module.findExportByName("user32.dll", "GetCapture")
Interceptor.attach(GetCapture, {onLeave: function (args) {send("GetCapture");}});

var GetCaretBlinkTime = Module.findExportByName("user32.dll", "GetCaretBlinkTime")
Interceptor.attach(GetCaretBlinkTime, {onLeave: function (args) {send("GetCaretBlinkTime");}});

var GetCaretPos = Module.findExportByName("user32.dll", "GetCaretPos")
Interceptor.attach(GetCaretPos, {onLeave: function (args) {send("GetCaretPos");}});

var GetClassInfoA = Module.findExportByName("user32.dll", "GetClassInfoA")
Interceptor.attach(GetClassInfoA, {onLeave: function (args) {send("GetClassInfoA");}});

var GetClassInfoExA = Module.findExportByName("user32.dll", "GetClassInfoExA")
Interceptor.attach(GetClassInfoExA, {onLeave: function (args) {send("GetClassInfoExA");}});

var GetClassInfoExW = Module.findExportByName("user32.dll", "GetClassInfoExW")
Interceptor.attach(GetClassInfoExW, {onLeave: function (args) {send("GetClassInfoExW");}});

var GetClassInfoW = Module.findExportByName("user32.dll", "GetClassInfoW")
Interceptor.attach(GetClassInfoW, {onLeave: function (args) {send("GetClassInfoW");}});

var GetClassLongA = Module.findExportByName("user32.dll", "GetClassLongA")
Interceptor.attach(GetClassLongA, {onLeave: function (args) {send("GetClassLongA");}});

var GetClassLongPtrA = Module.findExportByName("user32.dll", "GetClassLongPtrA")
Interceptor.attach(GetClassLongPtrA, {onLeave: function (args) {send("GetClassLongPtrA");}});

var GetClassLongPtrW = Module.findExportByName("user32.dll", "GetClassLongPtrW")
Interceptor.attach(GetClassLongPtrW, {onLeave: function (args) {send("GetClassLongPtrW");}});

var GetClassLongW = Module.findExportByName("user32.dll", "GetClassLongW")
Interceptor.attach(GetClassLongW, {onLeave: function (args) {send("GetClassLongW");}});

var GetClassNameA = Module.findExportByName("user32.dll", "GetClassNameA")
Interceptor.attach(GetClassNameA, {onLeave: function (args) {send("GetClassNameA");}});

var GetClassNameW = Module.findExportByName("user32.dll", "GetClassNameW")
Interceptor.attach(GetClassNameW, {onLeave: function (args) {send("GetClassNameW");}});

var GetClassWord = Module.findExportByName("user32.dll", "GetClassWord")
Interceptor.attach(GetClassWord, {onLeave: function (args) {send("GetClassWord");}});

var GetClientRect = Module.findExportByName("user32.dll", "GetClientRect")
Interceptor.attach(GetClientRect, {onLeave: function (args) {send("GetClientRect");}});

var GetClipCursor = Module.findExportByName("user32.dll", "GetClipCursor")
Interceptor.attach(GetClipCursor, {onLeave: function (args) {send("GetClipCursor");}});

var GetClipboardAccessToken = Module.findExportByName("user32.dll", "GetClipboardAccessToken")
Interceptor.attach(GetClipboardAccessToken, {onLeave: function (args) {send("GetClipboardAccessToken");}});

var GetClipboardData = Module.findExportByName("user32.dll", "GetClipboardData")
Interceptor.attach(GetClipboardData, {onLeave: function (args) {send("GetClipboardData");}});

var GetClipboardFormatNameA = Module.findExportByName("user32.dll", "GetClipboardFormatNameA")
Interceptor.attach(GetClipboardFormatNameA, {onLeave: function (args) {send("GetClipboardFormatNameA");}});

var GetClipboardFormatNameW = Module.findExportByName("user32.dll", "GetClipboardFormatNameW")
Interceptor.attach(GetClipboardFormatNameW, {onLeave: function (args) {send("GetClipboardFormatNameW");}});

var GetClipboardMetadata = Module.findExportByName("user32.dll", "GetClipboardMetadata")
Interceptor.attach(GetClipboardMetadata, {onLeave: function (args) {send("GetClipboardMetadata");}});

var GetClipboardOwner = Module.findExportByName("user32.dll", "GetClipboardOwner")
Interceptor.attach(GetClipboardOwner, {onLeave: function (args) {send("GetClipboardOwner");}});

var GetClipboardSequenceNumber = Module.findExportByName("user32.dll", "GetClipboardSequenceNumber")
Interceptor.attach(GetClipboardSequenceNumber, {onLeave: function (args) {send("GetClipboardSequenceNumber");}});

var GetClipboardViewer = Module.findExportByName("user32.dll", "GetClipboardViewer")
Interceptor.attach(GetClipboardViewer, {onLeave: function (args) {send("GetClipboardViewer");}});

var GetComboBoxInfo = Module.findExportByName("user32.dll", "GetComboBoxInfo")
Interceptor.attach(GetComboBoxInfo, {onLeave: function (args) {send("GetComboBoxInfo");}});

var GetCurrentInputMessageSource = Module.findExportByName("user32.dll", "GetCurrentInputMessageSource")
Interceptor.attach(GetCurrentInputMessageSource, {onLeave: function (args) {send("GetCurrentInputMessageSource");}});

var GetCursor = Module.findExportByName("user32.dll", "GetCursor")
Interceptor.attach(GetCursor, {onLeave: function (args) {send("GetCursor");}});

var GetCursorFrameInfo = Module.findExportByName("user32.dll", "GetCursorFrameInfo")
Interceptor.attach(GetCursorFrameInfo, {onLeave: function (args) {send("GetCursorFrameInfo");}});

var GetCursorInfo = Module.findExportByName("user32.dll", "GetCursorInfo")
Interceptor.attach(GetCursorInfo, {onLeave: function (args) {send("GetCursorInfo");}});

var GetCursorPos = Module.findExportByName("user32.dll", "GetCursorPos")
Interceptor.attach(GetCursorPos, {onLeave: function (args) {send("GetCursorPos");}});

var GetDC = Module.findExportByName("user32.dll", "GetDC")
Interceptor.attach(GetDC, {onLeave: function (args) {send("GetDC");}});

var GetDCEx = Module.findExportByName("user32.dll", "GetDCEx")
Interceptor.attach(GetDCEx, {onLeave: function (args) {send("GetDCEx");}});

var GetDCompositionHwndBitmap = Module.findExportByName("user32.dll", "GetDCompositionHwndBitmap")
Interceptor.attach(GetDCompositionHwndBitmap, {onLeave: function (args) {send("GetDCompositionHwndBitmap");}});

var GetDesktopID = Module.findExportByName("user32.dll", "GetDesktopID")
Interceptor.attach(GetDesktopID, {onLeave: function (args) {send("GetDesktopID");}});

var GetDesktopWindow = Module.findExportByName("user32.dll", "GetDesktopWindow")
Interceptor.attach(GetDesktopWindow, {onLeave: function (args) {send("GetDesktopWindow");}});

var GetDialogBaseUnits = Module.findExportByName("user32.dll", "GetDialogBaseUnits")
Interceptor.attach(GetDialogBaseUnits, {onLeave: function (args) {send("GetDialogBaseUnits");}});

var GetDialogControlDpiChangeBehavior = Module.findExportByName("user32.dll", "GetDialogControlDpiChangeBehavior")
Interceptor.attach(GetDialogControlDpiChangeBehavior, {onLeave: function (args) {send("GetDialogControlDpiChangeBehavior");}});

var GetDialogDpiChangeBehavior = Module.findExportByName("user32.dll", "GetDialogDpiChangeBehavior")
Interceptor.attach(GetDialogDpiChangeBehavior, {onLeave: function (args) {send("GetDialogDpiChangeBehavior");}});

var GetDisplayAutoRotationPreferences = Module.findExportByName("user32.dll", "GetDisplayAutoRotationPreferences")
Interceptor.attach(GetDisplayAutoRotationPreferences, {onLeave: function (args) {send("GetDisplayAutoRotationPreferences");}});

var GetDisplayConfigBufferSizes = Module.findExportByName("user32.dll", "GetDisplayConfigBufferSizes")
Interceptor.attach(GetDisplayConfigBufferSizes, {onLeave: function (args) {send("GetDisplayConfigBufferSizes");}});

var GetDlgCtrlID = Module.findExportByName("user32.dll", "GetDlgCtrlID")
Interceptor.attach(GetDlgCtrlID, {onLeave: function (args) {send("GetDlgCtrlID");}});

var GetDlgItem = Module.findExportByName("user32.dll", "GetDlgItem")
Interceptor.attach(GetDlgItem, {onLeave: function (args) {send("GetDlgItem");}});

var GetDlgItemInt = Module.findExportByName("user32.dll", "GetDlgItemInt")
Interceptor.attach(GetDlgItemInt, {onLeave: function (args) {send("GetDlgItemInt");}});

var GetDlgItemTextA = Module.findExportByName("user32.dll", "GetDlgItemTextA")
Interceptor.attach(GetDlgItemTextA, {onLeave: function (args) {send("GetDlgItemTextA");}});

var GetDlgItemTextW = Module.findExportByName("user32.dll", "GetDlgItemTextW")
Interceptor.attach(GetDlgItemTextW, {onLeave: function (args) {send("GetDlgItemTextW");}});

var GetDoubleClickTime = Module.findExportByName("user32.dll", "GetDoubleClickTime")
Interceptor.attach(GetDoubleClickTime, {onLeave: function (args) {send("GetDoubleClickTime");}});

var GetDpiAwarenessContextForProcess = Module.findExportByName("user32.dll", "GetDpiAwarenessContextForProcess")
Interceptor.attach(GetDpiAwarenessContextForProcess, {onLeave: function (args) {send("GetDpiAwarenessContextForProcess");}});

var GetDpiForMonitorInternal = Module.findExportByName("user32.dll", "GetDpiForMonitorInternal")
Interceptor.attach(GetDpiForMonitorInternal, {onLeave: function (args) {send("GetDpiForMonitorInternal");}});

var GetDpiForSystem = Module.findExportByName("user32.dll", "GetDpiForSystem")
Interceptor.attach(GetDpiForSystem, {onLeave: function (args) {send("GetDpiForSystem");}});

var GetDpiForWindow = Module.findExportByName("user32.dll", "GetDpiForWindow")
Interceptor.attach(GetDpiForWindow, {onLeave: function (args) {send("GetDpiForWindow");}});

var GetDpiFromDpiAwarenessContext = Module.findExportByName("user32.dll", "GetDpiFromDpiAwarenessContext")
Interceptor.attach(GetDpiFromDpiAwarenessContext, {onLeave: function (args) {send("GetDpiFromDpiAwarenessContext");}});

var GetExtendedPointerDeviceProperty = Module.findExportByName("user32.dll", "GetExtendedPointerDeviceProperty")
Interceptor.attach(GetExtendedPointerDeviceProperty, {onLeave: function (args) {send("GetExtendedPointerDeviceProperty");}});

var GetFocus = Module.findExportByName("user32.dll", "GetFocus")
Interceptor.attach(GetFocus, {onLeave: function (args) {send("GetFocus");}});

var GetForegroundWindow = Module.findExportByName("user32.dll", "GetForegroundWindow")
Interceptor.attach(GetForegroundWindow, {onLeave: function (args) {send("GetForegroundWindow");}});

var GetGUIThreadInfo = Module.findExportByName("user32.dll", "GetGUIThreadInfo")
Interceptor.attach(GetGUIThreadInfo, {onLeave: function (args) {send("GetGUIThreadInfo");}});

var GetGestureConfig = Module.findExportByName("user32.dll", "GetGestureConfig")
Interceptor.attach(GetGestureConfig, {onLeave: function (args) {send("GetGestureConfig");}});

var GetGestureExtraArgs = Module.findExportByName("user32.dll", "GetGestureExtraArgs")
Interceptor.attach(GetGestureExtraArgs, {onLeave: function (args) {send("GetGestureExtraArgs");}});

var GetGestureInfo = Module.findExportByName("user32.dll", "GetGestureInfo")
Interceptor.attach(GetGestureInfo, {onLeave: function (args) {send("GetGestureInfo");}});

var GetGuiResources = Module.findExportByName("user32.dll", "GetGuiResources")
Interceptor.attach(GetGuiResources, {onLeave: function (args) {send("GetGuiResources");}});

var GetIconInfo = Module.findExportByName("user32.dll", "GetIconInfo")
Interceptor.attach(GetIconInfo, {onLeave: function (args) {send("GetIconInfo");}});

var GetIconInfoExA = Module.findExportByName("user32.dll", "GetIconInfoExA")
Interceptor.attach(GetIconInfoExA, {onLeave: function (args) {send("GetIconInfoExA");}});

var GetIconInfoExW = Module.findExportByName("user32.dll", "GetIconInfoExW")
Interceptor.attach(GetIconInfoExW, {onLeave: function (args) {send("GetIconInfoExW");}});

var GetInputDesktop = Module.findExportByName("user32.dll", "GetInputDesktop")
Interceptor.attach(GetInputDesktop, {onLeave: function (args) {send("GetInputDesktop");}});

var GetInputLocaleInfo = Module.findExportByName("user32.dll", "GetInputLocaleInfo")
Interceptor.attach(GetInputLocaleInfo, {onLeave: function (args) {send("GetInputLocaleInfo");}});

var GetInputState = Module.findExportByName("user32.dll", "GetInputState")
Interceptor.attach(GetInputState, {onLeave: function (args) {send("GetInputState");}});

var GetInternalWindowPos = Module.findExportByName("user32.dll", "GetInternalWindowPos")
Interceptor.attach(GetInternalWindowPos, {onLeave: function (args) {send("GetInternalWindowPos");}});

var GetKBCodePage = Module.findExportByName("user32.dll", "GetKBCodePage")
Interceptor.attach(GetKBCodePage, {onLeave: function (args) {send("GetKBCodePage");}});

var GetKeyNameTextA = Module.findExportByName("user32.dll", "GetKeyNameTextA")
Interceptor.attach(GetKeyNameTextA, {onLeave: function (args) {send("GetKeyNameTextA");}});

var GetKeyNameTextW = Module.findExportByName("user32.dll", "GetKeyNameTextW")
Interceptor.attach(GetKeyNameTextW, {onLeave: function (args) {send("GetKeyNameTextW");}});

var GetKeyState = Module.findExportByName("user32.dll", "GetKeyState")
Interceptor.attach(GetKeyState, {onLeave: function (args) {send("GetKeyState");}});

var GetKeyboardLayout = Module.findExportByName("user32.dll", "GetKeyboardLayout")
Interceptor.attach(GetKeyboardLayout, {onLeave: function (args) {send("GetKeyboardLayout");}});

var GetKeyboardLayoutList = Module.findExportByName("user32.dll", "GetKeyboardLayoutList")
Interceptor.attach(GetKeyboardLayoutList, {onLeave: function (args) {send("GetKeyboardLayoutList");}});

var GetKeyboardLayoutNameA = Module.findExportByName("user32.dll", "GetKeyboardLayoutNameA")
Interceptor.attach(GetKeyboardLayoutNameA, {onLeave: function (args) {send("GetKeyboardLayoutNameA");}});

var GetKeyboardLayoutNameW = Module.findExportByName("user32.dll", "GetKeyboardLayoutNameW")
Interceptor.attach(GetKeyboardLayoutNameW, {onLeave: function (args) {send("GetKeyboardLayoutNameW");}});

var GetKeyboardState = Module.findExportByName("user32.dll", "GetKeyboardState")
Interceptor.attach(GetKeyboardState, {onLeave: function (args) {send("GetKeyboardState");}});

var GetKeyboardType = Module.findExportByName("user32.dll", "GetKeyboardType")
Interceptor.attach(GetKeyboardType, {onLeave: function (args) {send("GetKeyboardType");}});

var GetLastActivePopup = Module.findExportByName("user32.dll", "GetLastActivePopup")
Interceptor.attach(GetLastActivePopup, {onLeave: function (args) {send("GetLastActivePopup");}});

var GetLastInputInfo = Module.findExportByName("user32.dll", "GetLastInputInfo")
Interceptor.attach(GetLastInputInfo, {onLeave: function (args) {send("GetLastInputInfo");}});

var GetLayeredWindowAttributes = Module.findExportByName("user32.dll", "GetLayeredWindowAttributes")
Interceptor.attach(GetLayeredWindowAttributes, {onLeave: function (args) {send("GetLayeredWindowAttributes");}});

var GetListBoxInfo = Module.findExportByName("user32.dll", "GetListBoxInfo")
Interceptor.attach(GetListBoxInfo, {onLeave: function (args) {send("GetListBoxInfo");}});

var GetMagnificationDesktopColorEffect = Module.findExportByName("user32.dll", "GetMagnificationDesktopColorEffect")
Interceptor.attach(GetMagnificationDesktopColorEffect, {onLeave: function (args) {send("GetMagnificationDesktopColorEffect");}});

var GetMagnificationDesktopMagnification = Module.findExportByName("user32.dll", "GetMagnificationDesktopMagnification")
Interceptor.attach(GetMagnificationDesktopMagnification, {onLeave: function (args) {send("GetMagnificationDesktopMagnification");}});

var GetMagnificationDesktopSamplingMode = Module.findExportByName("user32.dll", "GetMagnificationDesktopSamplingMode")
Interceptor.attach(GetMagnificationDesktopSamplingMode, {onLeave: function (args) {send("GetMagnificationDesktopSamplingMode");}});

var GetMagnificationLensCtxInformation = Module.findExportByName("user32.dll", "GetMagnificationLensCtxInformation")
Interceptor.attach(GetMagnificationLensCtxInformation, {onLeave: function (args) {send("GetMagnificationLensCtxInformation");}});

var GetMenu = Module.findExportByName("user32.dll", "GetMenu")
Interceptor.attach(GetMenu, {onLeave: function (args) {send("GetMenu");}});

var GetMenuBarInfo = Module.findExportByName("user32.dll", "GetMenuBarInfo")
Interceptor.attach(GetMenuBarInfo, {onLeave: function (args) {send("GetMenuBarInfo");}});

var GetMenuCheckMarkDimensions = Module.findExportByName("user32.dll", "GetMenuCheckMarkDimensions")
Interceptor.attach(GetMenuCheckMarkDimensions, {onLeave: function (args) {send("GetMenuCheckMarkDimensions");}});

var GetMenuContextHelpId = Module.findExportByName("user32.dll", "GetMenuContextHelpId")
Interceptor.attach(GetMenuContextHelpId, {onLeave: function (args) {send("GetMenuContextHelpId");}});

var GetMenuDefaultItem = Module.findExportByName("user32.dll", "GetMenuDefaultItem")
Interceptor.attach(GetMenuDefaultItem, {onLeave: function (args) {send("GetMenuDefaultItem");}});

var GetMenuInfo = Module.findExportByName("user32.dll", "GetMenuInfo")
Interceptor.attach(GetMenuInfo, {onLeave: function (args) {send("GetMenuInfo");}});

var GetMenuItemCount = Module.findExportByName("user32.dll", "GetMenuItemCount")
Interceptor.attach(GetMenuItemCount, {onLeave: function (args) {send("GetMenuItemCount");}});

var GetMenuItemID = Module.findExportByName("user32.dll", "GetMenuItemID")
Interceptor.attach(GetMenuItemID, {onLeave: function (args) {send("GetMenuItemID");}});

var GetMenuItemInfoA = Module.findExportByName("user32.dll", "GetMenuItemInfoA")
Interceptor.attach(GetMenuItemInfoA, {onLeave: function (args) {send("GetMenuItemInfoA");}});

var GetMenuItemInfoW = Module.findExportByName("user32.dll", "GetMenuItemInfoW")
Interceptor.attach(GetMenuItemInfoW, {onLeave: function (args) {send("GetMenuItemInfoW");}});

var GetMenuItemRect = Module.findExportByName("user32.dll", "GetMenuItemRect")
Interceptor.attach(GetMenuItemRect, {onLeave: function (args) {send("GetMenuItemRect");}});

var GetMenuState = Module.findExportByName("user32.dll", "GetMenuState")
Interceptor.attach(GetMenuState, {onLeave: function (args) {send("GetMenuState");}});

var GetMenuStringA = Module.findExportByName("user32.dll", "GetMenuStringA")
Interceptor.attach(GetMenuStringA, {onLeave: function (args) {send("GetMenuStringA");}});

var GetMenuStringW = Module.findExportByName("user32.dll", "GetMenuStringW")
Interceptor.attach(GetMenuStringW, {onLeave: function (args) {send("GetMenuStringW");}});

var GetMessageA = Module.findExportByName("user32.dll", "GetMessageA")
Interceptor.attach(GetMessageA, {onLeave: function (args) {send("GetMessageA");}});

var GetMessageExtraInfo = Module.findExportByName("user32.dll", "GetMessageExtraInfo")
Interceptor.attach(GetMessageExtraInfo, {onLeave: function (args) {send("GetMessageExtraInfo");}});

var GetMessagePos = Module.findExportByName("user32.dll", "GetMessagePos")
Interceptor.attach(GetMessagePos, {onLeave: function (args) {send("GetMessagePos");}});

var GetMessageTime = Module.findExportByName("user32.dll", "GetMessageTime")
Interceptor.attach(GetMessageTime, {onLeave: function (args) {send("GetMessageTime");}});

var GetMessageW = Module.findExportByName("user32.dll", "GetMessageW")
Interceptor.attach(GetMessageW, {onLeave: function (args) {send("GetMessageW");}});

var GetMonitorInfoA = Module.findExportByName("user32.dll", "GetMonitorInfoA")
Interceptor.attach(GetMonitorInfoA, {onLeave: function (args) {send("GetMonitorInfoA");}});

var GetMonitorInfoW = Module.findExportByName("user32.dll", "GetMonitorInfoW")
Interceptor.attach(GetMonitorInfoW, {onLeave: function (args) {send("GetMonitorInfoW");}});

var GetMouseMovePointsEx = Module.findExportByName("user32.dll", "GetMouseMovePointsEx")
Interceptor.attach(GetMouseMovePointsEx, {onLeave: function (args) {send("GetMouseMovePointsEx");}});

var GetNextDlgGroupItem = Module.findExportByName("user32.dll", "GetNextDlgGroupItem")
Interceptor.attach(GetNextDlgGroupItem, {onLeave: function (args) {send("GetNextDlgGroupItem");}});

var GetNextDlgTabItem = Module.findExportByName("user32.dll", "GetNextDlgTabItem")
Interceptor.attach(GetNextDlgTabItem, {onLeave: function (args) {send("GetNextDlgTabItem");}});

var GetOpenClipboardWindow = Module.findExportByName("user32.dll", "GetOpenClipboardWindow")
Interceptor.attach(GetOpenClipboardWindow, {onLeave: function (args) {send("GetOpenClipboardWindow");}});

var GetParent = Module.findExportByName("user32.dll", "GetParent")
Interceptor.attach(GetParent, {onLeave: function (args) {send("GetParent");}});

var GetPhysicalCursorPos = Module.findExportByName("user32.dll", "GetPhysicalCursorPos")
Interceptor.attach(GetPhysicalCursorPos, {onLeave: function (args) {send("GetPhysicalCursorPos");}});

var GetPointerCursorId = Module.findExportByName("user32.dll", "GetPointerCursorId")
Interceptor.attach(GetPointerCursorId, {onLeave: function (args) {send("GetPointerCursorId");}});

var GetPointerDevice = Module.findExportByName("user32.dll", "GetPointerDevice")
Interceptor.attach(GetPointerDevice, {onLeave: function (args) {send("GetPointerDevice");}});

var GetPointerDeviceCursors = Module.findExportByName("user32.dll", "GetPointerDeviceCursors")
Interceptor.attach(GetPointerDeviceCursors, {onLeave: function (args) {send("GetPointerDeviceCursors");}});

var GetPointerDeviceInputSpace = Module.findExportByName("user32.dll", "GetPointerDeviceInputSpace")
Interceptor.attach(GetPointerDeviceInputSpace, {onLeave: function (args) {send("GetPointerDeviceInputSpace");}});

var GetPointerDeviceOrientation = Module.findExportByName("user32.dll", "GetPointerDeviceOrientation")
Interceptor.attach(GetPointerDeviceOrientation, {onLeave: function (args) {send("GetPointerDeviceOrientation");}});

var GetPointerDeviceProperties = Module.findExportByName("user32.dll", "GetPointerDeviceProperties")
Interceptor.attach(GetPointerDeviceProperties, {onLeave: function (args) {send("GetPointerDeviceProperties");}});

var GetPointerDeviceRects = Module.findExportByName("user32.dll", "GetPointerDeviceRects")
Interceptor.attach(GetPointerDeviceRects, {onLeave: function (args) {send("GetPointerDeviceRects");}});

var GetPointerDevices = Module.findExportByName("user32.dll", "GetPointerDevices")
Interceptor.attach(GetPointerDevices, {onLeave: function (args) {send("GetPointerDevices");}});

var GetPointerFrameArrivalTimes = Module.findExportByName("user32.dll", "GetPointerFrameArrivalTimes")
Interceptor.attach(GetPointerFrameArrivalTimes, {onLeave: function (args) {send("GetPointerFrameArrivalTimes");}});

var GetPointerFrameInfo = Module.findExportByName("user32.dll", "GetPointerFrameInfo")
Interceptor.attach(GetPointerFrameInfo, {onLeave: function (args) {send("GetPointerFrameInfo");}});

var GetPointerFrameInfoHistory = Module.findExportByName("user32.dll", "GetPointerFrameInfoHistory")
Interceptor.attach(GetPointerFrameInfoHistory, {onLeave: function (args) {send("GetPointerFrameInfoHistory");}});

var GetPointerFramePenInfo = Module.findExportByName("user32.dll", "GetPointerFramePenInfo")
Interceptor.attach(GetPointerFramePenInfo, {onLeave: function (args) {send("GetPointerFramePenInfo");}});

var GetPointerFramePenInfoHistory = Module.findExportByName("user32.dll", "GetPointerFramePenInfoHistory")
Interceptor.attach(GetPointerFramePenInfoHistory, {onLeave: function (args) {send("GetPointerFramePenInfoHistory");}});

var GetPointerFrameTimes = Module.findExportByName("user32.dll", "GetPointerFrameTimes")
Interceptor.attach(GetPointerFrameTimes, {onLeave: function (args) {send("GetPointerFrameTimes");}});

var GetPointerFrameTouchInfo = Module.findExportByName("user32.dll", "GetPointerFrameTouchInfo")
Interceptor.attach(GetPointerFrameTouchInfo, {onLeave: function (args) {send("GetPointerFrameTouchInfo");}});

var GetPointerFrameTouchInfoHistory = Module.findExportByName("user32.dll", "GetPointerFrameTouchInfoHistory")
Interceptor.attach(GetPointerFrameTouchInfoHistory, {onLeave: function (args) {send("GetPointerFrameTouchInfoHistory");}});

var GetPointerInfo = Module.findExportByName("user32.dll", "GetPointerInfo")
Interceptor.attach(GetPointerInfo, {onLeave: function (args) {send("GetPointerInfo");}});

var GetPointerInfoHistory = Module.findExportByName("user32.dll", "GetPointerInfoHistory")
Interceptor.attach(GetPointerInfoHistory, {onLeave: function (args) {send("GetPointerInfoHistory");}});

var GetPointerInputTransform = Module.findExportByName("user32.dll", "GetPointerInputTransform")
Interceptor.attach(GetPointerInputTransform, {onLeave: function (args) {send("GetPointerInputTransform");}});

var GetPointerPenInfo = Module.findExportByName("user32.dll", "GetPointerPenInfo")
Interceptor.attach(GetPointerPenInfo, {onLeave: function (args) {send("GetPointerPenInfo");}});

var GetPointerPenInfoHistory = Module.findExportByName("user32.dll", "GetPointerPenInfoHistory")
Interceptor.attach(GetPointerPenInfoHistory, {onLeave: function (args) {send("GetPointerPenInfoHistory");}});

var GetPointerTouchInfo = Module.findExportByName("user32.dll", "GetPointerTouchInfo")
Interceptor.attach(GetPointerTouchInfo, {onLeave: function (args) {send("GetPointerTouchInfo");}});

var GetPointerTouchInfoHistory = Module.findExportByName("user32.dll", "GetPointerTouchInfoHistory")
Interceptor.attach(GetPointerTouchInfoHistory, {onLeave: function (args) {send("GetPointerTouchInfoHistory");}});

var GetPointerType = Module.findExportByName("user32.dll", "GetPointerType")
Interceptor.attach(GetPointerType, {onLeave: function (args) {send("GetPointerType");}});

var GetPriorityClipboardFormat = Module.findExportByName("user32.dll", "GetPriorityClipboardFormat")
Interceptor.attach(GetPriorityClipboardFormat, {onLeave: function (args) {send("GetPriorityClipboardFormat");}});

var GetProcessDefaultLayout = Module.findExportByName("user32.dll", "GetProcessDefaultLayout")
Interceptor.attach(GetProcessDefaultLayout, {onLeave: function (args) {send("GetProcessDefaultLayout");}});

var GetProcessDpiAwarenessInternal = Module.findExportByName("user32.dll", "GetProcessDpiAwarenessInternal")
Interceptor.attach(GetProcessDpiAwarenessInternal, {onLeave: function (args) {send("GetProcessDpiAwarenessInternal");}});

var GetProcessUIContextInformation = Module.findExportByName("user32.dll", "GetProcessUIContextInformation")
Interceptor.attach(GetProcessUIContextInformation, {onLeave: function (args) {send("GetProcessUIContextInformation");}});

var GetProcessWindowStation = Module.findExportByName("user32.dll", "GetProcessWindowStation")
Interceptor.attach(GetProcessWindowStation, {onLeave: function (args) {send("GetProcessWindowStation");}});

var GetProgmanWindow = Module.findExportByName("user32.dll", "GetProgmanWindow")
Interceptor.attach(GetProgmanWindow, {onLeave: function (args) {send("GetProgmanWindow");}});

var GetPropA = Module.findExportByName("user32.dll", "GetPropA")
Interceptor.attach(GetPropA, {onLeave: function (args) {send("GetPropA");}});

var GetPropW = Module.findExportByName("user32.dll", "GetPropW")
Interceptor.attach(GetPropW, {onLeave: function (args) {send("GetPropW");}});

var GetQueueStatus = Module.findExportByName("user32.dll", "GetQueueStatus")
Interceptor.attach(GetQueueStatus, {onLeave: function (args) {send("GetQueueStatus");}});

var GetRawInputBuffer = Module.findExportByName("user32.dll", "GetRawInputBuffer")
Interceptor.attach(GetRawInputBuffer, {onLeave: function (args) {send("GetRawInputBuffer");}});

var GetRawInputData = Module.findExportByName("user32.dll", "GetRawInputData")
Interceptor.attach(GetRawInputData, {onLeave: function (args) {send("GetRawInputData");}});

var GetRawInputDeviceInfoA = Module.findExportByName("user32.dll", "GetRawInputDeviceInfoA")
Interceptor.attach(GetRawInputDeviceInfoA, {onLeave: function (args) {send("GetRawInputDeviceInfoA");}});

var GetRawInputDeviceInfoW = Module.findExportByName("user32.dll", "GetRawInputDeviceInfoW")
Interceptor.attach(GetRawInputDeviceInfoW, {onLeave: function (args) {send("GetRawInputDeviceInfoW");}});

var GetRawInputDeviceList = Module.findExportByName("user32.dll", "GetRawInputDeviceList")
Interceptor.attach(GetRawInputDeviceList, {onLeave: function (args) {send("GetRawInputDeviceList");}});

var GetRawPointerDeviceData = Module.findExportByName("user32.dll", "GetRawPointerDeviceData")
Interceptor.attach(GetRawPointerDeviceData, {onLeave: function (args) {send("GetRawPointerDeviceData");}});

var GetReasonTitleFromReasonCode = Module.findExportByName("user32.dll", "GetReasonTitleFromReasonCode")
Interceptor.attach(GetReasonTitleFromReasonCode, {onLeave: function (args) {send("GetReasonTitleFromReasonCode");}});

var GetRegisteredRawInputDevices = Module.findExportByName("user32.dll", "GetRegisteredRawInputDevices")
Interceptor.attach(GetRegisteredRawInputDevices, {onLeave: function (args) {send("GetRegisteredRawInputDevices");}});

var GetScrollBarInfo = Module.findExportByName("user32.dll", "GetScrollBarInfo")
Interceptor.attach(GetScrollBarInfo, {onLeave: function (args) {send("GetScrollBarInfo");}});

var GetScrollInfo = Module.findExportByName("user32.dll", "GetScrollInfo")
Interceptor.attach(GetScrollInfo, {onLeave: function (args) {send("GetScrollInfo");}});

var GetScrollPos = Module.findExportByName("user32.dll", "GetScrollPos")
Interceptor.attach(GetScrollPos, {onLeave: function (args) {send("GetScrollPos");}});

var GetScrollRange = Module.findExportByName("user32.dll", "GetScrollRange")
Interceptor.attach(GetScrollRange, {onLeave: function (args) {send("GetScrollRange");}});

var GetSendMessageReceiver = Module.findExportByName("user32.dll", "GetSendMessageReceiver")
Interceptor.attach(GetSendMessageReceiver, {onLeave: function (args) {send("GetSendMessageReceiver");}});

var GetShellChangeNotifyWindow = Module.findExportByName("user32.dll", "GetShellChangeNotifyWindow")
Interceptor.attach(GetShellChangeNotifyWindow, {onLeave: function (args) {send("GetShellChangeNotifyWindow");}});

var GetShellWindow = Module.findExportByName("user32.dll", "GetShellWindow")
Interceptor.attach(GetShellWindow, {onLeave: function (args) {send("GetShellWindow");}});

var GetSubMenu = Module.findExportByName("user32.dll", "GetSubMenu")
Interceptor.attach(GetSubMenu, {onLeave: function (args) {send("GetSubMenu");}});

var GetSysColor = Module.findExportByName("user32.dll", "GetSysColor")
Interceptor.attach(GetSysColor, {onLeave: function (args) {send("GetSysColor");}});

var GetSysColorBrush = Module.findExportByName("user32.dll", "GetSysColorBrush")
Interceptor.attach(GetSysColorBrush, {onLeave: function (args) {send("GetSysColorBrush");}});

var GetSystemDpiForProcess = Module.findExportByName("user32.dll", "GetSystemDpiForProcess")
Interceptor.attach(GetSystemDpiForProcess, {onLeave: function (args) {send("GetSystemDpiForProcess");}});

var GetSystemMenu = Module.findExportByName("user32.dll", "GetSystemMenu")
Interceptor.attach(GetSystemMenu, {onLeave: function (args) {send("GetSystemMenu");}});

var GetSystemMetrics = Module.findExportByName("user32.dll", "GetSystemMetrics")
Interceptor.attach(GetSystemMetrics, {onLeave: function (args) {send("GetSystemMetrics");}});

var GetSystemMetricsForDpi = Module.findExportByName("user32.dll", "GetSystemMetricsForDpi")
Interceptor.attach(GetSystemMetricsForDpi, {onLeave: function (args) {send("GetSystemMetricsForDpi");}});

var GetTabbedTextExtentA = Module.findExportByName("user32.dll", "GetTabbedTextExtentA")
Interceptor.attach(GetTabbedTextExtentA, {onLeave: function (args) {send("GetTabbedTextExtentA");}});

var GetTabbedTextExtentW = Module.findExportByName("user32.dll", "GetTabbedTextExtentW")
Interceptor.attach(GetTabbedTextExtentW, {onLeave: function (args) {send("GetTabbedTextExtentW");}});

var GetTaskmanWindow = Module.findExportByName("user32.dll", "GetTaskmanWindow")
Interceptor.attach(GetTaskmanWindow, {onLeave: function (args) {send("GetTaskmanWindow");}});

var GetThreadDesktop = Module.findExportByName("user32.dll", "GetThreadDesktop")
Interceptor.attach(GetThreadDesktop, {onLeave: function (args) {send("GetThreadDesktop");}});

var GetThreadDpiAwarenessContext = Module.findExportByName("user32.dll", "GetThreadDpiAwarenessContext")
Interceptor.attach(GetThreadDpiAwarenessContext, {onLeave: function (args) {send("GetThreadDpiAwarenessContext");}});

var GetThreadDpiHostingBehavior = Module.findExportByName("user32.dll", "GetThreadDpiHostingBehavior")
Interceptor.attach(GetThreadDpiHostingBehavior, {onLeave: function (args) {send("GetThreadDpiHostingBehavior");}});

var GetTitleBarInfo = Module.findExportByName("user32.dll", "GetTitleBarInfo")
Interceptor.attach(GetTitleBarInfo, {onLeave: function (args) {send("GetTitleBarInfo");}});

var GetTopLevelWindow = Module.findExportByName("user32.dll", "GetTopLevelWindow")
Interceptor.attach(GetTopLevelWindow, {onLeave: function (args) {send("GetTopLevelWindow");}});

var GetTopWindow = Module.findExportByName("user32.dll", "GetTopWindow")
Interceptor.attach(GetTopWindow, {onLeave: function (args) {send("GetTopWindow");}});

var GetTouchInputInfo = Module.findExportByName("user32.dll", "GetTouchInputInfo")
Interceptor.attach(GetTouchInputInfo, {onLeave: function (args) {send("GetTouchInputInfo");}});

var GetUnpredictedMessagePos = Module.findExportByName("user32.dll", "GetUnpredictedMessagePos")
Interceptor.attach(GetUnpredictedMessagePos, {onLeave: function (args) {send("GetUnpredictedMessagePos");}});

var GetUpdateRect = Module.findExportByName("user32.dll", "GetUpdateRect")
Interceptor.attach(GetUpdateRect, {onLeave: function (args) {send("GetUpdateRect");}});

var GetUpdateRgn = Module.findExportByName("user32.dll", "GetUpdateRgn")
Interceptor.attach(GetUpdateRgn, {onLeave: function (args) {send("GetUpdateRgn");}});

var GetUpdatedClipboardFormats = Module.findExportByName("user32.dll", "GetUpdatedClipboardFormats")
Interceptor.attach(GetUpdatedClipboardFormats, {onLeave: function (args) {send("GetUpdatedClipboardFormats");}});

var GetUserObjectInformationA = Module.findExportByName("user32.dll", "GetUserObjectInformationA")
Interceptor.attach(GetUserObjectInformationA, {onLeave: function (args) {send("GetUserObjectInformationA");}});

var GetUserObjectInformationW = Module.findExportByName("user32.dll", "GetUserObjectInformationW")
Interceptor.attach(GetUserObjectInformationW, {onLeave: function (args) {send("GetUserObjectInformationW");}});

var GetUserObjectSecurity = Module.findExportByName("user32.dll", "GetUserObjectSecurity")
Interceptor.attach(GetUserObjectSecurity, {onLeave: function (args) {send("GetUserObjectSecurity");}});

var GetWinStationInfo = Module.findExportByName("user32.dll", "GetWinStationInfo")
Interceptor.attach(GetWinStationInfo, {onLeave: function (args) {send("GetWinStationInfo");}});

var GetWindow = Module.findExportByName("user32.dll", "GetWindow")
Interceptor.attach(GetWindow, {onLeave: function (args) {send("GetWindow");}});

var GetWindowBand = Module.findExportByName("user32.dll", "GetWindowBand")
Interceptor.attach(GetWindowBand, {onLeave: function (args) {send("GetWindowBand");}});

var GetWindowCompositionAttribute = Module.findExportByName("user32.dll", "GetWindowCompositionAttribute")
Interceptor.attach(GetWindowCompositionAttribute, {onLeave: function (args) {send("GetWindowCompositionAttribute");}});

var GetWindowCompositionInfo = Module.findExportByName("user32.dll", "GetWindowCompositionInfo")
Interceptor.attach(GetWindowCompositionInfo, {onLeave: function (args) {send("GetWindowCompositionInfo");}});

var GetWindowContextHelpId = Module.findExportByName("user32.dll", "GetWindowContextHelpId")
Interceptor.attach(GetWindowContextHelpId, {onLeave: function (args) {send("GetWindowContextHelpId");}});

var GetWindowDC = Module.findExportByName("user32.dll", "GetWindowDC")
Interceptor.attach(GetWindowDC, {onLeave: function (args) {send("GetWindowDC");}});

var GetWindowDisplayAffinity = Module.findExportByName("user32.dll", "GetWindowDisplayAffinity")
Interceptor.attach(GetWindowDisplayAffinity, {onLeave: function (args) {send("GetWindowDisplayAffinity");}});

var GetWindowDpiAwarenessContext = Module.findExportByName("user32.dll", "GetWindowDpiAwarenessContext")
Interceptor.attach(GetWindowDpiAwarenessContext, {onLeave: function (args) {send("GetWindowDpiAwarenessContext");}});

var GetWindowDpiHostingBehavior = Module.findExportByName("user32.dll", "GetWindowDpiHostingBehavior")
Interceptor.attach(GetWindowDpiHostingBehavior, {onLeave: function (args) {send("GetWindowDpiHostingBehavior");}});

var GetWindowFeedbackSetting = Module.findExportByName("user32.dll", "GetWindowFeedbackSetting")
Interceptor.attach(GetWindowFeedbackSetting, {onLeave: function (args) {send("GetWindowFeedbackSetting");}});

var GetWindowInfo = Module.findExportByName("user32.dll", "GetWindowInfo")
Interceptor.attach(GetWindowInfo, {onLeave: function (args) {send("GetWindowInfo");}});

var GetWindowLongA = Module.findExportByName("user32.dll", "GetWindowLongA")
Interceptor.attach(GetWindowLongA, {onLeave: function (args) {send("GetWindowLongA");}});

var GetWindowLongPtrA = Module.findExportByName("user32.dll", "GetWindowLongPtrA")
Interceptor.attach(GetWindowLongPtrA, {onLeave: function (args) {send("GetWindowLongPtrA");}});

var GetWindowLongPtrW = Module.findExportByName("user32.dll", "GetWindowLongPtrW")
Interceptor.attach(GetWindowLongPtrW, {onLeave: function (args) {send("GetWindowLongPtrW");}});

var GetWindowLongW = Module.findExportByName("user32.dll", "GetWindowLongW")
Interceptor.attach(GetWindowLongW, {onLeave: function (args) {send("GetWindowLongW");}});

var GetWindowMinimizeRect = Module.findExportByName("user32.dll", "GetWindowMinimizeRect")
Interceptor.attach(GetWindowMinimizeRect, {onLeave: function (args) {send("GetWindowMinimizeRect");}});

var GetWindowModuleFileName = Module.findExportByName("user32.dll", "GetWindowModuleFileName")
Interceptor.attach(GetWindowModuleFileName, {onLeave: function (args) {send("GetWindowModuleFileName");}});

var GetWindowModuleFileNameA = Module.findExportByName("user32.dll", "GetWindowModuleFileNameA")
Interceptor.attach(GetWindowModuleFileNameA, {onLeave: function (args) {send("GetWindowModuleFileNameA");}});

var GetWindowModuleFileNameW = Module.findExportByName("user32.dll", "GetWindowModuleFileNameW")
Interceptor.attach(GetWindowModuleFileNameW, {onLeave: function (args) {send("GetWindowModuleFileNameW");}});

var GetWindowPlacement = Module.findExportByName("user32.dll", "GetWindowPlacement")
Interceptor.attach(GetWindowPlacement, {onLeave: function (args) {send("GetWindowPlacement");}});

var GetWindowProcessHandle = Module.findExportByName("user32.dll", "GetWindowProcessHandle")
Interceptor.attach(GetWindowProcessHandle, {onLeave: function (args) {send("GetWindowProcessHandle");}});

var GetWindowRect = Module.findExportByName("user32.dll", "GetWindowRect")
Interceptor.attach(GetWindowRect, {onLeave: function (args) {send("GetWindowRect");}});

var GetWindowRgn = Module.findExportByName("user32.dll", "GetWindowRgn")
Interceptor.attach(GetWindowRgn, {onLeave: function (args) {send("GetWindowRgn");}});

var GetWindowRgnBox = Module.findExportByName("user32.dll", "GetWindowRgnBox")
Interceptor.attach(GetWindowRgnBox, {onLeave: function (args) {send("GetWindowRgnBox");}});

var GetWindowRgnEx = Module.findExportByName("user32.dll", "GetWindowRgnEx")
Interceptor.attach(GetWindowRgnEx, {onLeave: function (args) {send("GetWindowRgnEx");}});

var GetWindowTextA = Module.findExportByName("user32.dll", "GetWindowTextA")
Interceptor.attach(GetWindowTextA, {onLeave: function (args) {send("GetWindowTextA");}});

var GetWindowTextLengthA = Module.findExportByName("user32.dll", "GetWindowTextLengthA")
Interceptor.attach(GetWindowTextLengthA, {onLeave: function (args) {send("GetWindowTextLengthA");}});

var GetWindowTextLengthW = Module.findExportByName("user32.dll", "GetWindowTextLengthW")
Interceptor.attach(GetWindowTextLengthW, {onLeave: function (args) {send("GetWindowTextLengthW");}});

var GetWindowTextW = Module.findExportByName("user32.dll", "GetWindowTextW")
Interceptor.attach(GetWindowTextW, {onLeave: function (args) {send("GetWindowTextW");}});

var GetWindowThreadProcessId = Module.findExportByName("user32.dll", "GetWindowThreadProcessId")
Interceptor.attach(GetWindowThreadProcessId, {onLeave: function (args) {send("GetWindowThreadProcessId");}});

var GetWindowWord = Module.findExportByName("user32.dll", "GetWindowWord")
Interceptor.attach(GetWindowWord, {onLeave: function (args) {send("GetWindowWord");}});

var GhostWindowFromHungWindow = Module.findExportByName("user32.dll", "GhostWindowFromHungWindow")
Interceptor.attach(GhostWindowFromHungWindow, {onLeave: function (args) {send("GhostWindowFromHungWindow");}});

var GrayStringA = Module.findExportByName("user32.dll", "GrayStringA")
Interceptor.attach(GrayStringA, {onLeave: function (args) {send("GrayStringA");}});

var GrayStringW = Module.findExportByName("user32.dll", "GrayStringW")
Interceptor.attach(GrayStringW, {onLeave: function (args) {send("GrayStringW");}});

var HandleDelegatedInput = Module.findExportByName("user32.dll", "HandleDelegatedInput")
Interceptor.attach(HandleDelegatedInput, {onLeave: function (args) {send("HandleDelegatedInput");}});

var HideCaret = Module.findExportByName("user32.dll", "HideCaret")
Interceptor.attach(HideCaret, {onLeave: function (args) {send("HideCaret");}});

var HiliteMenuItem = Module.findExportByName("user32.dll", "HiliteMenuItem")
Interceptor.attach(HiliteMenuItem, {onLeave: function (args) {send("HiliteMenuItem");}});

var HungWindowFromGhostWindow = Module.findExportByName("user32.dll", "HungWindowFromGhostWindow")
Interceptor.attach(HungWindowFromGhostWindow, {onLeave: function (args) {send("HungWindowFromGhostWindow");}});

var IMPGetIMEA = Module.findExportByName("user32.dll", "IMPGetIMEA")
Interceptor.attach(IMPGetIMEA, {onLeave: function (args) {send("IMPGetIMEA");}});

var IMPGetIMEW = Module.findExportByName("user32.dll", "IMPGetIMEW")
Interceptor.attach(IMPGetIMEW, {onLeave: function (args) {send("IMPGetIMEW");}});

var IMPQueryIMEA = Module.findExportByName("user32.dll", "IMPQueryIMEA")
Interceptor.attach(IMPQueryIMEA, {onLeave: function (args) {send("IMPQueryIMEA");}});

var IMPQueryIMEW = Module.findExportByName("user32.dll", "IMPQueryIMEW")
Interceptor.attach(IMPQueryIMEW, {onLeave: function (args) {send("IMPQueryIMEW");}});

var IMPSetIMEA = Module.findExportByName("user32.dll", "IMPSetIMEA")
Interceptor.attach(IMPSetIMEA, {onLeave: function (args) {send("IMPSetIMEA");}});

var IMPSetIMEW = Module.findExportByName("user32.dll", "IMPSetIMEW")
Interceptor.attach(IMPSetIMEW, {onLeave: function (args) {send("IMPSetIMEW");}});

var ImpersonateDdeClientWindow = Module.findExportByName("user32.dll", "ImpersonateDdeClientWindow")
Interceptor.attach(ImpersonateDdeClientWindow, {onLeave: function (args) {send("ImpersonateDdeClientWindow");}});

var InSendMessage = Module.findExportByName("user32.dll", "InSendMessage")
Interceptor.attach(InSendMessage, {onLeave: function (args) {send("InSendMessage");}});

var InSendMessageEx = Module.findExportByName("user32.dll", "InSendMessageEx")
Interceptor.attach(InSendMessageEx, {onLeave: function (args) {send("InSendMessageEx");}});

var InflateRect = Module.findExportByName("user32.dll", "InflateRect")
Interceptor.attach(InflateRect, {onLeave: function (args) {send("InflateRect");}});

var InheritWindowMonitor = Module.findExportByName("user32.dll", "InheritWindowMonitor")
Interceptor.attach(InheritWindowMonitor, {onLeave: function (args) {send("InheritWindowMonitor");}});

var InitDManipHook = Module.findExportByName("user32.dll", "InitDManipHook")
Interceptor.attach(InitDManipHook, {onLeave: function (args) {send("InitDManipHook");}});

var InitializeGenericHidInjection = Module.findExportByName("user32.dll", "InitializeGenericHidInjection")
Interceptor.attach(InitializeGenericHidInjection, {onLeave: function (args) {send("InitializeGenericHidInjection");}});

var InitializeInputDeviceInjection = Module.findExportByName("user32.dll", "InitializeInputDeviceInjection")
Interceptor.attach(InitializeInputDeviceInjection, {onLeave: function (args) {send("InitializeInputDeviceInjection");}});

var InitializeLpkHooks = Module.findExportByName("user32.dll", "InitializeLpkHooks")
Interceptor.attach(InitializeLpkHooks, {onLeave: function (args) {send("InitializeLpkHooks");}});

var InitializePointerDeviceInjection = Module.findExportByName("user32.dll", "InitializePointerDeviceInjection")
Interceptor.attach(InitializePointerDeviceInjection, {onLeave: function (args) {send("InitializePointerDeviceInjection");}});

var InitializePointerDeviceInjectionEx = Module.findExportByName("user32.dll", "InitializePointerDeviceInjectionEx")
Interceptor.attach(InitializePointerDeviceInjectionEx, {onLeave: function (args) {send("InitializePointerDeviceInjectionEx");}});

var InitializeTouchInjection = Module.findExportByName("user32.dll", "InitializeTouchInjection")
Interceptor.attach(InitializeTouchInjection, {onLeave: function (args) {send("InitializeTouchInjection");}});

var InjectDeviceInput = Module.findExportByName("user32.dll", "InjectDeviceInput")
Interceptor.attach(InjectDeviceInput, {onLeave: function (args) {send("InjectDeviceInput");}});

var InjectGenericHidInput = Module.findExportByName("user32.dll", "InjectGenericHidInput")
Interceptor.attach(InjectGenericHidInput, {onLeave: function (args) {send("InjectGenericHidInput");}});

var InjectKeyboardInput = Module.findExportByName("user32.dll", "InjectKeyboardInput")
Interceptor.attach(InjectKeyboardInput, {onLeave: function (args) {send("InjectKeyboardInput");}});

var InjectMouseInput = Module.findExportByName("user32.dll", "InjectMouseInput")
Interceptor.attach(InjectMouseInput, {onLeave: function (args) {send("InjectMouseInput");}});

var InjectPointerInput = Module.findExportByName("user32.dll", "InjectPointerInput")
Interceptor.attach(InjectPointerInput, {onLeave: function (args) {send("InjectPointerInput");}});

var InjectSyntheticPointerInput = Module.findExportByName("user32.dll", "InjectSyntheticPointerInput")
Interceptor.attach(InjectSyntheticPointerInput, {onLeave: function (args) {send("InjectSyntheticPointerInput");}});

var InjectTouchInput = Module.findExportByName("user32.dll", "InjectTouchInput")
Interceptor.attach(InjectTouchInput, {onLeave: function (args) {send("InjectTouchInput");}});

var InputSpaceRegionFromPoint = Module.findExportByName("user32.dll", "InputSpaceRegionFromPoint")
Interceptor.attach(InputSpaceRegionFromPoint, {onLeave: function (args) {send("InputSpaceRegionFromPoint");}});

var InsertMenuA = Module.findExportByName("user32.dll", "InsertMenuA")
Interceptor.attach(InsertMenuA, {onLeave: function (args) {send("InsertMenuA");}});

var InsertMenuItemA = Module.findExportByName("user32.dll", "InsertMenuItemA")
Interceptor.attach(InsertMenuItemA, {onLeave: function (args) {send("InsertMenuItemA");}});

var InsertMenuItemW = Module.findExportByName("user32.dll", "InsertMenuItemW")
Interceptor.attach(InsertMenuItemW, {onLeave: function (args) {send("InsertMenuItemW");}});

var InsertMenuW = Module.findExportByName("user32.dll", "InsertMenuW")
Interceptor.attach(InsertMenuW, {onLeave: function (args) {send("InsertMenuW");}});

var InternalGetWindowIcon = Module.findExportByName("user32.dll", "InternalGetWindowIcon")
Interceptor.attach(InternalGetWindowIcon, {onLeave: function (args) {send("InternalGetWindowIcon");}});

var InternalGetWindowText = Module.findExportByName("user32.dll", "InternalGetWindowText")
Interceptor.attach(InternalGetWindowText, {onLeave: function (args) {send("InternalGetWindowText");}});

var IntersectRect = Module.findExportByName("user32.dll", "IntersectRect")
Interceptor.attach(IntersectRect, {onLeave: function (args) {send("IntersectRect");}});

var InvalidateRect = Module.findExportByName("user32.dll", "InvalidateRect")
Interceptor.attach(InvalidateRect, {onLeave: function (args) {send("InvalidateRect");}});

var InvalidateRgn = Module.findExportByName("user32.dll", "InvalidateRgn")
Interceptor.attach(InvalidateRgn, {onLeave: function (args) {send("InvalidateRgn");}});

var InvertRect = Module.findExportByName("user32.dll", "InvertRect")
Interceptor.attach(InvertRect, {onLeave: function (args) {send("InvertRect");}});

var IsCharAlphaA = Module.findExportByName("user32.dll", "IsCharAlphaA")
Interceptor.attach(IsCharAlphaA, {onLeave: function (args) {send("IsCharAlphaA");}});

var IsCharAlphaNumericA = Module.findExportByName("user32.dll", "IsCharAlphaNumericA")
Interceptor.attach(IsCharAlphaNumericA, {onLeave: function (args) {send("IsCharAlphaNumericA");}});

var IsCharAlphaNumericW = Module.findExportByName("user32.dll", "IsCharAlphaNumericW")
Interceptor.attach(IsCharAlphaNumericW, {onLeave: function (args) {send("IsCharAlphaNumericW");}});

var IsCharAlphaW = Module.findExportByName("user32.dll", "IsCharAlphaW")
Interceptor.attach(IsCharAlphaW, {onLeave: function (args) {send("IsCharAlphaW");}});

var IsCharLowerA = Module.findExportByName("user32.dll", "IsCharLowerA")
Interceptor.attach(IsCharLowerA, {onLeave: function (args) {send("IsCharLowerA");}});

var IsCharLowerW = Module.findExportByName("user32.dll", "IsCharLowerW")
Interceptor.attach(IsCharLowerW, {onLeave: function (args) {send("IsCharLowerW");}});

var IsCharUpperA = Module.findExportByName("user32.dll", "IsCharUpperA")
Interceptor.attach(IsCharUpperA, {onLeave: function (args) {send("IsCharUpperA");}});

var IsCharUpperW = Module.findExportByName("user32.dll", "IsCharUpperW")
Interceptor.attach(IsCharUpperW, {onLeave: function (args) {send("IsCharUpperW");}});

var IsChild = Module.findExportByName("user32.dll", "IsChild")
Interceptor.attach(IsChild, {onLeave: function (args) {send("IsChild");}});

var IsClipboardFormatAvailable = Module.findExportByName("user32.dll", "IsClipboardFormatAvailable")
Interceptor.attach(IsClipboardFormatAvailable, {onLeave: function (args) {send("IsClipboardFormatAvailable");}});

var IsDialogMessage = Module.findExportByName("user32.dll", "IsDialogMessage")
Interceptor.attach(IsDialogMessage, {onLeave: function (args) {send("IsDialogMessage");}});

var IsDialogMessageA = Module.findExportByName("user32.dll", "IsDialogMessageA")
Interceptor.attach(IsDialogMessageA, {onLeave: function (args) {send("IsDialogMessageA");}});

var IsDialogMessageW = Module.findExportByName("user32.dll", "IsDialogMessageW")
Interceptor.attach(IsDialogMessageW, {onLeave: function (args) {send("IsDialogMessageW");}});

var IsDlgButtonChecked = Module.findExportByName("user32.dll", "IsDlgButtonChecked")
Interceptor.attach(IsDlgButtonChecked, {onLeave: function (args) {send("IsDlgButtonChecked");}});

var IsGUIThread = Module.findExportByName("user32.dll", "IsGUIThread")
Interceptor.attach(IsGUIThread, {onLeave: function (args) {send("IsGUIThread");}});

var IsHungAppWindow = Module.findExportByName("user32.dll", "IsHungAppWindow")
Interceptor.attach(IsHungAppWindow, {onLeave: function (args) {send("IsHungAppWindow");}});

var IsIconic = Module.findExportByName("user32.dll", "IsIconic")
Interceptor.attach(IsIconic, {onLeave: function (args) {send("IsIconic");}});

var IsImmersiveProcess = Module.findExportByName("user32.dll", "IsImmersiveProcess")
Interceptor.attach(IsImmersiveProcess, {onLeave: function (args) {send("IsImmersiveProcess");}});

var IsInDesktopWindowBand = Module.findExportByName("user32.dll", "IsInDesktopWindowBand")
Interceptor.attach(IsInDesktopWindowBand, {onLeave: function (args) {send("IsInDesktopWindowBand");}});

var IsMenu = Module.findExportByName("user32.dll", "IsMenu")
Interceptor.attach(IsMenu, {onLeave: function (args) {send("IsMenu");}});

var IsMouseInPointerEnabled = Module.findExportByName("user32.dll", "IsMouseInPointerEnabled")
Interceptor.attach(IsMouseInPointerEnabled, {onLeave: function (args) {send("IsMouseInPointerEnabled");}});

var IsOneCoreTransformMode = Module.findExportByName("user32.dll", "IsOneCoreTransformMode")
Interceptor.attach(IsOneCoreTransformMode, {onLeave: function (args) {send("IsOneCoreTransformMode");}});

var IsProcessDPIAware = Module.findExportByName("user32.dll", "IsProcessDPIAware")
Interceptor.attach(IsProcessDPIAware, {onLeave: function (args) {send("IsProcessDPIAware");}});

var IsRectEmpty = Module.findExportByName("user32.dll", "IsRectEmpty")
Interceptor.attach(IsRectEmpty, {onLeave: function (args) {send("IsRectEmpty");}});

var IsSETEnabled = Module.findExportByName("user32.dll", "IsSETEnabled")
Interceptor.attach(IsSETEnabled, {onLeave: function (args) {send("IsSETEnabled");}});

var IsServerSideWindow = Module.findExportByName("user32.dll", "IsServerSideWindow")
Interceptor.attach(IsServerSideWindow, {onLeave: function (args) {send("IsServerSideWindow");}});

var IsThreadDesktopComposited = Module.findExportByName("user32.dll", "IsThreadDesktopComposited")
Interceptor.attach(IsThreadDesktopComposited, {onLeave: function (args) {send("IsThreadDesktopComposited");}});

var IsThreadMessageQueueAttached = Module.findExportByName("user32.dll", "IsThreadMessageQueueAttached")
Interceptor.attach(IsThreadMessageQueueAttached, {onLeave: function (args) {send("IsThreadMessageQueueAttached");}});

var IsThreadTSFEventAware = Module.findExportByName("user32.dll", "IsThreadTSFEventAware")
Interceptor.attach(IsThreadTSFEventAware, {onLeave: function (args) {send("IsThreadTSFEventAware");}});

var IsTopLevelWindow = Module.findExportByName("user32.dll", "IsTopLevelWindow")
Interceptor.attach(IsTopLevelWindow, {onLeave: function (args) {send("IsTopLevelWindow");}});

var IsTouchWindow = Module.findExportByName("user32.dll", "IsTouchWindow")
Interceptor.attach(IsTouchWindow, {onLeave: function (args) {send("IsTouchWindow");}});

var IsValidDpiAwarenessContext = Module.findExportByName("user32.dll", "IsValidDpiAwarenessContext")
Interceptor.attach(IsValidDpiAwarenessContext, {onLeave: function (args) {send("IsValidDpiAwarenessContext");}});

var IsWinEventHookInstalled = Module.findExportByName("user32.dll", "IsWinEventHookInstalled")
Interceptor.attach(IsWinEventHookInstalled, {onLeave: function (args) {send("IsWinEventHookInstalled");}});

var IsWindow = Module.findExportByName("user32.dll", "IsWindow")
Interceptor.attach(IsWindow, {onLeave: function (args) {send("IsWindow");}});

var IsWindowArranged = Module.findExportByName("user32.dll", "IsWindowArranged")
Interceptor.attach(IsWindowArranged, {onLeave: function (args) {send("IsWindowArranged");}});

var IsWindowEnabled = Module.findExportByName("user32.dll", "IsWindowEnabled")
Interceptor.attach(IsWindowEnabled, {onLeave: function (args) {send("IsWindowEnabled");}});

var IsWindowInDestroy = Module.findExportByName("user32.dll", "IsWindowInDestroy")
Interceptor.attach(IsWindowInDestroy, {onLeave: function (args) {send("IsWindowInDestroy");}});

var IsWindowRedirectedForPrint = Module.findExportByName("user32.dll", "IsWindowRedirectedForPrint")
Interceptor.attach(IsWindowRedirectedForPrint, {onLeave: function (args) {send("IsWindowRedirectedForPrint");}});

var IsWindowUnicode = Module.findExportByName("user32.dll", "IsWindowUnicode")
Interceptor.attach(IsWindowUnicode, {onLeave: function (args) {send("IsWindowUnicode");}});

var IsWindowVisible = Module.findExportByName("user32.dll", "IsWindowVisible")
Interceptor.attach(IsWindowVisible, {onLeave: function (args) {send("IsWindowVisible");}});

var IsWow64Message = Module.findExportByName("user32.dll", "IsWow64Message")
Interceptor.attach(IsWow64Message, {onLeave: function (args) {send("IsWow64Message");}});

var IsZoomed = Module.findExportByName("user32.dll", "IsZoomed")
Interceptor.attach(IsZoomed, {onLeave: function (args) {send("IsZoomed");}});

var KillTimer = Module.findExportByName("user32.dll", "KillTimer")
Interceptor.attach(KillTimer, {onLeave: function (args) {send("KillTimer");}});

var LoadAcceleratorsA = Module.findExportByName("user32.dll", "LoadAcceleratorsA")
Interceptor.attach(LoadAcceleratorsA, {onLeave: function (args) {send("LoadAcceleratorsA");}});

var LoadAcceleratorsW = Module.findExportByName("user32.dll", "LoadAcceleratorsW")
Interceptor.attach(LoadAcceleratorsW, {onLeave: function (args) {send("LoadAcceleratorsW");}});

var LoadBitmapA = Module.findExportByName("user32.dll", "LoadBitmapA")
Interceptor.attach(LoadBitmapA, {onLeave: function (args) {send("LoadBitmapA");}});

var LoadBitmapW = Module.findExportByName("user32.dll", "LoadBitmapW")
Interceptor.attach(LoadBitmapW, {onLeave: function (args) {send("LoadBitmapW");}});

var LoadCursorA = Module.findExportByName("user32.dll", "LoadCursorA")
Interceptor.attach(LoadCursorA, {onLeave: function (args) {send("LoadCursorA");}});

var LoadCursorFromFileA = Module.findExportByName("user32.dll", "LoadCursorFromFileA")
Interceptor.attach(LoadCursorFromFileA, {onLeave: function (args) {send("LoadCursorFromFileA");}});

var LoadCursorFromFileW = Module.findExportByName("user32.dll", "LoadCursorFromFileW")
Interceptor.attach(LoadCursorFromFileW, {onLeave: function (args) {send("LoadCursorFromFileW");}});

var LoadCursorW = Module.findExportByName("user32.dll", "LoadCursorW")
Interceptor.attach(LoadCursorW, {onLeave: function (args) {send("LoadCursorW");}});

var LoadIconA = Module.findExportByName("user32.dll", "LoadIconA")
Interceptor.attach(LoadIconA, {onLeave: function (args) {send("LoadIconA");}});

var LoadIconW = Module.findExportByName("user32.dll", "LoadIconW")
Interceptor.attach(LoadIconW, {onLeave: function (args) {send("LoadIconW");}});

var LoadImageA = Module.findExportByName("user32.dll", "LoadImageA")
Interceptor.attach(LoadImageA, {onLeave: function (args) {send("LoadImageA");}});

var LoadImageW = Module.findExportByName("user32.dll", "LoadImageW")
Interceptor.attach(LoadImageW, {onLeave: function (args) {send("LoadImageW");}});

var LoadKeyboardLayoutA = Module.findExportByName("user32.dll", "LoadKeyboardLayoutA")
Interceptor.attach(LoadKeyboardLayoutA, {onLeave: function (args) {send("LoadKeyboardLayoutA");}});

var LoadKeyboardLayoutEx = Module.findExportByName("user32.dll", "LoadKeyboardLayoutEx")
Interceptor.attach(LoadKeyboardLayoutEx, {onLeave: function (args) {send("LoadKeyboardLayoutEx");}});

var LoadKeyboardLayoutW = Module.findExportByName("user32.dll", "LoadKeyboardLayoutW")
Interceptor.attach(LoadKeyboardLayoutW, {onLeave: function (args) {send("LoadKeyboardLayoutW");}});

var LoadLocalFonts = Module.findExportByName("user32.dll", "LoadLocalFonts")
Interceptor.attach(LoadLocalFonts, {onLeave: function (args) {send("LoadLocalFonts");}});

var LoadMenuA = Module.findExportByName("user32.dll", "LoadMenuA")
Interceptor.attach(LoadMenuA, {onLeave: function (args) {send("LoadMenuA");}});

var LoadMenuIndirectA = Module.findExportByName("user32.dll", "LoadMenuIndirectA")
Interceptor.attach(LoadMenuIndirectA, {onLeave: function (args) {send("LoadMenuIndirectA");}});

var LoadMenuIndirectW = Module.findExportByName("user32.dll", "LoadMenuIndirectW")
Interceptor.attach(LoadMenuIndirectW, {onLeave: function (args) {send("LoadMenuIndirectW");}});

var LoadMenuW = Module.findExportByName("user32.dll", "LoadMenuW")
Interceptor.attach(LoadMenuW, {onLeave: function (args) {send("LoadMenuW");}});

var LoadRemoteFonts = Module.findExportByName("user32.dll", "LoadRemoteFonts")
Interceptor.attach(LoadRemoteFonts, {onLeave: function (args) {send("LoadRemoteFonts");}});

var LoadStringA = Module.findExportByName("user32.dll", "LoadStringA")
Interceptor.attach(LoadStringA, {onLeave: function (args) {send("LoadStringA");}});

var LoadStringW = Module.findExportByName("user32.dll", "LoadStringW")
Interceptor.attach(LoadStringW, {onLeave: function (args) {send("LoadStringW");}});

var LockSetForegroundWindow = Module.findExportByName("user32.dll", "LockSetForegroundWindow")
Interceptor.attach(LockSetForegroundWindow, {onLeave: function (args) {send("LockSetForegroundWindow");}});

var LockWindowStation = Module.findExportByName("user32.dll", "LockWindowStation")
Interceptor.attach(LockWindowStation, {onLeave: function (args) {send("LockWindowStation");}});

var LockWindowUpdate = Module.findExportByName("user32.dll", "LockWindowUpdate")
Interceptor.attach(LockWindowUpdate, {onLeave: function (args) {send("LockWindowUpdate");}});

var LockWorkStation = Module.findExportByName("user32.dll", "LockWorkStation")
Interceptor.attach(LockWorkStation, {onLeave: function (args) {send("LockWorkStation");}});

var LogicalToPhysicalPoint = Module.findExportByName("user32.dll", "LogicalToPhysicalPoint")
Interceptor.attach(LogicalToPhysicalPoint, {onLeave: function (args) {send("LogicalToPhysicalPoint");}});

var LogicalToPhysicalPointForPerMonitorDPI = Module.findExportByName("user32.dll", "LogicalToPhysicalPointForPerMonitorDPI")
Interceptor.attach(LogicalToPhysicalPointForPerMonitorDPI, {onLeave: function (args) {send("LogicalToPhysicalPointForPerMonitorDPI");}});

var LookupIconIdFromDirectory = Module.findExportByName("user32.dll", "LookupIconIdFromDirectory")
Interceptor.attach(LookupIconIdFromDirectory, {onLeave: function (args) {send("LookupIconIdFromDirectory");}});

var LookupIconIdFromDirectoryEx = Module.findExportByName("user32.dll", "LookupIconIdFromDirectoryEx")
Interceptor.attach(LookupIconIdFromDirectoryEx, {onLeave: function (args) {send("LookupIconIdFromDirectoryEx");}});

var MBToWCSEx = Module.findExportByName("user32.dll", "MBToWCSEx")
Interceptor.attach(MBToWCSEx, {onLeave: function (args) {send("MBToWCSEx");}});

var MBToWCSExt = Module.findExportByName("user32.dll", "MBToWCSExt")
Interceptor.attach(MBToWCSExt, {onLeave: function (args) {send("MBToWCSExt");}});

var MB_GetString = Module.findExportByName("user32.dll", "MB_GetString")
Interceptor.attach(MB_GetString, {onLeave: function (args) {send("MB_GetString");}});

var MITGetCursorUpdateHandle = Module.findExportByName("user32.dll", "MITGetCursorUpdateHandle")
Interceptor.attach(MITGetCursorUpdateHandle, {onLeave: function (args) {send("MITGetCursorUpdateHandle");}});

var MITSetLastInputRecipient = Module.findExportByName("user32.dll", "MITSetLastInputRecipient")
Interceptor.attach(MITSetLastInputRecipient, {onLeave: function (args) {send("MITSetLastInputRecipient");}});

var MITSynthesizeTouchInput = Module.findExportByName("user32.dll", "MITSynthesizeTouchInput")
Interceptor.attach(MITSynthesizeTouchInput, {onLeave: function (args) {send("MITSynthesizeTouchInput");}});

var MakeThreadTSFEventAware = Module.findExportByName("user32.dll", "MakeThreadTSFEventAware")
Interceptor.attach(MakeThreadTSFEventAware, {onLeave: function (args) {send("MakeThreadTSFEventAware");}});

var MapDialogRect = Module.findExportByName("user32.dll", "MapDialogRect")
Interceptor.attach(MapDialogRect, {onLeave: function (args) {send("MapDialogRect");}});

var MapPointsByVisualIdentifier = Module.findExportByName("user32.dll", "MapPointsByVisualIdentifier")
Interceptor.attach(MapPointsByVisualIdentifier, {onLeave: function (args) {send("MapPointsByVisualIdentifier");}});

var MapVirtualKeyA = Module.findExportByName("user32.dll", "MapVirtualKeyA")
Interceptor.attach(MapVirtualKeyA, {onLeave: function (args) {send("MapVirtualKeyA");}});

var MapVirtualKeyExA = Module.findExportByName("user32.dll", "MapVirtualKeyExA")
Interceptor.attach(MapVirtualKeyExA, {onLeave: function (args) {send("MapVirtualKeyExA");}});

var MapVirtualKeyExW = Module.findExportByName("user32.dll", "MapVirtualKeyExW")
Interceptor.attach(MapVirtualKeyExW, {onLeave: function (args) {send("MapVirtualKeyExW");}});

var MapVirtualKeyW = Module.findExportByName("user32.dll", "MapVirtualKeyW")
Interceptor.attach(MapVirtualKeyW, {onLeave: function (args) {send("MapVirtualKeyW");}});

var MapVisualRelativePoints = Module.findExportByName("user32.dll", "MapVisualRelativePoints")
Interceptor.attach(MapVisualRelativePoints, {onLeave: function (args) {send("MapVisualRelativePoints");}});

var MapWindowPoints = Module.findExportByName("user32.dll", "MapWindowPoints")
Interceptor.attach(MapWindowPoints, {onLeave: function (args) {send("MapWindowPoints");}});

var MenuItemFromPoint = Module.findExportByName("user32.dll", "MenuItemFromPoint")
Interceptor.attach(MenuItemFromPoint, {onLeave: function (args) {send("MenuItemFromPoint");}});

var MenuWindowProcA = Module.findExportByName("user32.dll", "MenuWindowProcA")
Interceptor.attach(MenuWindowProcA, {onLeave: function (args) {send("MenuWindowProcA");}});

var MenuWindowProcW = Module.findExportByName("user32.dll", "MenuWindowProcW")
Interceptor.attach(MenuWindowProcW, {onLeave: function (args) {send("MenuWindowProcW");}});

var MessageBeep = Module.findExportByName("user32.dll", "MessageBeep")
Interceptor.attach(MessageBeep, {onLeave: function (args) {send("MessageBeep");}});

var MessageBoxA = Module.findExportByName("user32.dll", "MessageBoxA")
Interceptor.attach(MessageBoxA, {onLeave: function (args) {send("MessageBoxA");}});

var MessageBoxExA = Module.findExportByName("user32.dll", "MessageBoxExA")
Interceptor.attach(MessageBoxExA, {onLeave: function (args) {send("MessageBoxExA");}});

var MessageBoxExW = Module.findExportByName("user32.dll", "MessageBoxExW")
Interceptor.attach(MessageBoxExW, {onLeave: function (args) {send("MessageBoxExW");}});

var MessageBoxIndirectA = Module.findExportByName("user32.dll", "MessageBoxIndirectA")
Interceptor.attach(MessageBoxIndirectA, {onLeave: function (args) {send("MessageBoxIndirectA");}});

var MessageBoxIndirectW = Module.findExportByName("user32.dll", "MessageBoxIndirectW")
Interceptor.attach(MessageBoxIndirectW, {onLeave: function (args) {send("MessageBoxIndirectW");}});

var MessageBoxTimeoutA = Module.findExportByName("user32.dll", "MessageBoxTimeoutA")
Interceptor.attach(MessageBoxTimeoutA, {onLeave: function (args) {send("MessageBoxTimeoutA");}});

var MessageBoxTimeoutW = Module.findExportByName("user32.dll", "MessageBoxTimeoutW")
Interceptor.attach(MessageBoxTimeoutW, {onLeave: function (args) {send("MessageBoxTimeoutW");}});

var MessageBoxW = Module.findExportByName("user32.dll", "MessageBoxW")
Interceptor.attach(MessageBoxW, {onLeave: function (args) {send("MessageBoxW");}});

var ModifyMenuA = Module.findExportByName("user32.dll", "ModifyMenuA")
Interceptor.attach(ModifyMenuA, {onLeave: function (args) {send("ModifyMenuA");}});

var ModifyMenuW = Module.findExportByName("user32.dll", "ModifyMenuW")
Interceptor.attach(ModifyMenuW, {onLeave: function (args) {send("ModifyMenuW");}});

var MonitorFromPoint = Module.findExportByName("user32.dll", "MonitorFromPoint")
Interceptor.attach(MonitorFromPoint, {onLeave: function (args) {send("MonitorFromPoint");}});

var MonitorFromRect = Module.findExportByName("user32.dll", "MonitorFromRect")
Interceptor.attach(MonitorFromRect, {onLeave: function (args) {send("MonitorFromRect");}});

var MonitorFromWindow = Module.findExportByName("user32.dll", "MonitorFromWindow")
Interceptor.attach(MonitorFromWindow, {onLeave: function (args) {send("MonitorFromWindow");}});

var MoveWindow = Module.findExportByName("user32.dll", "MoveWindow")
Interceptor.attach(MoveWindow, {onLeave: function (args) {send("MoveWindow");}});

var MsgWaitForMultipleObjects = Module.findExportByName("user32.dll", "MsgWaitForMultipleObjects")
Interceptor.attach(MsgWaitForMultipleObjects, {onLeave: function (args) {send("MsgWaitForMultipleObjects");}});

var MsgWaitForMultipleObjectsEx = Module.findExportByName("user32.dll", "MsgWaitForMultipleObjectsEx")
Interceptor.attach(MsgWaitForMultipleObjectsEx, {onLeave: function (args) {send("MsgWaitForMultipleObjectsEx");}});

var NotifyOverlayWindow = Module.findExportByName("user32.dll", "NotifyOverlayWindow")
Interceptor.attach(NotifyOverlayWindow, {onLeave: function (args) {send("NotifyOverlayWindow");}});

var NotifyWinEvent = Module.findExportByName("user32.dll", "NotifyWinEvent")
Interceptor.attach(NotifyWinEvent, {onLeave: function (args) {send("NotifyWinEvent");}});

var OemKeyScan = Module.findExportByName("user32.dll", "OemKeyScan")
Interceptor.attach(OemKeyScan, {onLeave: function (args) {send("OemKeyScan");}});

var OemToCharA = Module.findExportByName("user32.dll", "OemToCharA")
Interceptor.attach(OemToCharA, {onLeave: function (args) {send("OemToCharA");}});

var OemToCharBuffA = Module.findExportByName("user32.dll", "OemToCharBuffA")
Interceptor.attach(OemToCharBuffA, {onLeave: function (args) {send("OemToCharBuffA");}});

var OemToCharBuffW = Module.findExportByName("user32.dll", "OemToCharBuffW")
Interceptor.attach(OemToCharBuffW, {onLeave: function (args) {send("OemToCharBuffW");}});

var OemToCharW = Module.findExportByName("user32.dll", "OemToCharW")
Interceptor.attach(OemToCharW, {onLeave: function (args) {send("OemToCharW");}});

var OffsetRect = Module.findExportByName("user32.dll", "OffsetRect")
Interceptor.attach(OffsetRect, {onLeave: function (args) {send("OffsetRect");}});

var OpenClipboard = Module.findExportByName("user32.dll", "OpenClipboard")
Interceptor.attach(OpenClipboard, {onLeave: function (args) {send("OpenClipboard");}});

var OpenDesktopA = Module.findExportByName("user32.dll", "OpenDesktopA")
Interceptor.attach(OpenDesktopA, {onLeave: function (args) {send("OpenDesktopA");}});

var OpenDesktopW = Module.findExportByName("user32.dll", "OpenDesktopW")
Interceptor.attach(OpenDesktopW, {onLeave: function (args) {send("OpenDesktopW");}});

var OpenIcon = Module.findExportByName("user32.dll", "OpenIcon")
Interceptor.attach(OpenIcon, {onLeave: function (args) {send("OpenIcon");}});

var OpenInputDesktop = Module.findExportByName("user32.dll", "OpenInputDesktop")
Interceptor.attach(OpenInputDesktop, {onLeave: function (args) {send("OpenInputDesktop");}});

var OpenThreadDesktop = Module.findExportByName("user32.dll", "OpenThreadDesktop")
Interceptor.attach(OpenThreadDesktop, {onLeave: function (args) {send("OpenThreadDesktop");}});

var OpenWindowStationA = Module.findExportByName("user32.dll", "OpenWindowStationA")
Interceptor.attach(OpenWindowStationA, {onLeave: function (args) {send("OpenWindowStationA");}});

var OpenWindowStationW = Module.findExportByName("user32.dll", "OpenWindowStationW")
Interceptor.attach(OpenWindowStationW, {onLeave: function (args) {send("OpenWindowStationW");}});

var PackDDElParam = Module.findExportByName("user32.dll", "PackDDElParam")
Interceptor.attach(PackDDElParam, {onLeave: function (args) {send("PackDDElParam");}});

var PackTouchHitTestingProximityEvaluation = Module.findExportByName("user32.dll", "PackTouchHitTestingProximityEvaluation")
Interceptor.attach(PackTouchHitTestingProximityEvaluation, {onLeave: function (args) {send("PackTouchHitTestingProximityEvaluation");}});

var PaintDesktop = Module.findExportByName("user32.dll", "PaintDesktop")
Interceptor.attach(PaintDesktop, {onLeave: function (args) {send("PaintDesktop");}});

var PaintMenuBar = Module.findExportByName("user32.dll", "PaintMenuBar")
Interceptor.attach(PaintMenuBar, {onLeave: function (args) {send("PaintMenuBar");}});

var PaintMonitor = Module.findExportByName("user32.dll", "PaintMonitor")
Interceptor.attach(PaintMonitor, {onLeave: function (args) {send("PaintMonitor");}});

var PeekMessageA = Module.findExportByName("user32.dll", "PeekMessageA")
Interceptor.attach(PeekMessageA, {onLeave: function (args) {send("PeekMessageA");}});

var PeekMessageW = Module.findExportByName("user32.dll", "PeekMessageW")
Interceptor.attach(PeekMessageW, {onLeave: function (args) {send("PeekMessageW");}});

var PhysicalToLogicalPoint = Module.findExportByName("user32.dll", "PhysicalToLogicalPoint")
Interceptor.attach(PhysicalToLogicalPoint, {onLeave: function (args) {send("PhysicalToLogicalPoint");}});

var PhysicalToLogicalPointForPerMonitorDPI = Module.findExportByName("user32.dll", "PhysicalToLogicalPointForPerMonitorDPI")
Interceptor.attach(PhysicalToLogicalPointForPerMonitorDPI, {onLeave: function (args) {send("PhysicalToLogicalPointForPerMonitorDPI");}});

var PostMessageA = Module.findExportByName("user32.dll", "PostMessageA")
Interceptor.attach(PostMessageA, {onLeave: function (args) {send("PostMessageA");}});

var PostMessageW = Module.findExportByName("user32.dll", "PostMessageW")
Interceptor.attach(PostMessageW, {onLeave: function (args) {send("PostMessageW");}});

var PostQuitMessage = Module.findExportByName("user32.dll", "PostQuitMessage")
Interceptor.attach(PostQuitMessage, {onLeave: function (args) {send("PostQuitMessage");}});

var PostThreadMessageA = Module.findExportByName("user32.dll", "PostThreadMessageA")
Interceptor.attach(PostThreadMessageA, {onLeave: function (args) {send("PostThreadMessageA");}});

var PostThreadMessageW = Module.findExportByName("user32.dll", "PostThreadMessageW")
Interceptor.attach(PostThreadMessageW, {onLeave: function (args) {send("PostThreadMessageW");}});

var PrintWindow = Module.findExportByName("user32.dll", "PrintWindow")
Interceptor.attach(PrintWindow, {onLeave: function (args) {send("PrintWindow");}});

var PrivateExtractIconExA = Module.findExportByName("user32.dll", "PrivateExtractIconExA")
Interceptor.attach(PrivateExtractIconExA, {onLeave: function (args) {send("PrivateExtractIconExA");}});

var PrivateExtractIconExW = Module.findExportByName("user32.dll", "PrivateExtractIconExW")
Interceptor.attach(PrivateExtractIconExW, {onLeave: function (args) {send("PrivateExtractIconExW");}});

var PrivateExtractIconsA = Module.findExportByName("user32.dll", "PrivateExtractIconsA")
Interceptor.attach(PrivateExtractIconsA, {onLeave: function (args) {send("PrivateExtractIconsA");}});

var PrivateExtractIconsW = Module.findExportByName("user32.dll", "PrivateExtractIconsW")
Interceptor.attach(PrivateExtractIconsW, {onLeave: function (args) {send("PrivateExtractIconsW");}});

var PrivateRegisterICSProc = Module.findExportByName("user32.dll", "PrivateRegisterICSProc")
Interceptor.attach(PrivateRegisterICSProc, {onLeave: function (args) {send("PrivateRegisterICSProc");}});

var PtInRect = Module.findExportByName("user32.dll", "PtInRect")
Interceptor.attach(PtInRect, {onLeave: function (args) {send("PtInRect");}});

var QueryBSDRWindow = Module.findExportByName("user32.dll", "QueryBSDRWindow")
Interceptor.attach(QueryBSDRWindow, {onLeave: function (args) {send("QueryBSDRWindow");}});

var QueryDisplayConfig = Module.findExportByName("user32.dll", "QueryDisplayConfig")
Interceptor.attach(QueryDisplayConfig, {onLeave: function (args) {send("QueryDisplayConfig");}});

var QuerySendMessage = Module.findExportByName("user32.dll", "QuerySendMessage")
Interceptor.attach(QuerySendMessage, {onLeave: function (args) {send("QuerySendMessage");}});

var RIMAddInputObserver = Module.findExportByName("user32.dll", "RIMAddInputObserver")
Interceptor.attach(RIMAddInputObserver, {onLeave: function (args) {send("RIMAddInputObserver");}});

var RIMAreSiblingDevices = Module.findExportByName("user32.dll", "RIMAreSiblingDevices")
Interceptor.attach(RIMAreSiblingDevices, {onLeave: function (args) {send("RIMAreSiblingDevices");}});

var RIMDeviceIoControl = Module.findExportByName("user32.dll", "RIMDeviceIoControl")
Interceptor.attach(RIMDeviceIoControl, {onLeave: function (args) {send("RIMDeviceIoControl");}});

var RIMEnableMonitorMappingForDevice = Module.findExportByName("user32.dll", "RIMEnableMonitorMappingForDevice")
Interceptor.attach(RIMEnableMonitorMappingForDevice, {onLeave: function (args) {send("RIMEnableMonitorMappingForDevice");}});

var RIMFreeInputBuffer = Module.findExportByName("user32.dll", "RIMFreeInputBuffer")
Interceptor.attach(RIMFreeInputBuffer, {onLeave: function (args) {send("RIMFreeInputBuffer");}});

var RIMGetDevicePreparsedData = Module.findExportByName("user32.dll", "RIMGetDevicePreparsedData")
Interceptor.attach(RIMGetDevicePreparsedData, {onLeave: function (args) {send("RIMGetDevicePreparsedData");}});

var RIMGetDevicePreparsedDataLockfree = Module.findExportByName("user32.dll", "RIMGetDevicePreparsedDataLockfree")
Interceptor.attach(RIMGetDevicePreparsedDataLockfree, {onLeave: function (args) {send("RIMGetDevicePreparsedDataLockfree");}});

var RIMGetDeviceProperties = Module.findExportByName("user32.dll", "RIMGetDeviceProperties")
Interceptor.attach(RIMGetDeviceProperties, {onLeave: function (args) {send("RIMGetDeviceProperties");}});

var RIMGetDevicePropertiesLockfree = Module.findExportByName("user32.dll", "RIMGetDevicePropertiesLockfree")
Interceptor.attach(RIMGetDevicePropertiesLockfree, {onLeave: function (args) {send("RIMGetDevicePropertiesLockfree");}});

var RIMGetPhysicalDeviceRect = Module.findExportByName("user32.dll", "RIMGetPhysicalDeviceRect")
Interceptor.attach(RIMGetPhysicalDeviceRect, {onLeave: function (args) {send("RIMGetPhysicalDeviceRect");}});

var RIMGetSourceProcessId = Module.findExportByName("user32.dll", "RIMGetSourceProcessId")
Interceptor.attach(RIMGetSourceProcessId, {onLeave: function (args) {send("RIMGetSourceProcessId");}});

var RIMObserveNextInput = Module.findExportByName("user32.dll", "RIMObserveNextInput")
Interceptor.attach(RIMObserveNextInput, {onLeave: function (args) {send("RIMObserveNextInput");}});

var RIMOnAsyncPnpWorkNotification = Module.findExportByName("user32.dll", "RIMOnAsyncPnpWorkNotification")
Interceptor.attach(RIMOnAsyncPnpWorkNotification, {onLeave: function (args) {send("RIMOnAsyncPnpWorkNotification");}});

var RIMOnPnpNotification = Module.findExportByName("user32.dll", "RIMOnPnpNotification")
Interceptor.attach(RIMOnPnpNotification, {onLeave: function (args) {send("RIMOnPnpNotification");}});

var RIMOnTimerNotification = Module.findExportByName("user32.dll", "RIMOnTimerNotification")
Interceptor.attach(RIMOnTimerNotification, {onLeave: function (args) {send("RIMOnTimerNotification");}});

var RIMQueryDevicePath = Module.findExportByName("user32.dll", "RIMQueryDevicePath")
Interceptor.attach(RIMQueryDevicePath, {onLeave: function (args) {send("RIMQueryDevicePath");}});

var RIMReadInput = Module.findExportByName("user32.dll", "RIMReadInput")
Interceptor.attach(RIMReadInput, {onLeave: function (args) {send("RIMReadInput");}});

var RIMRegisterForInput = Module.findExportByName("user32.dll", "RIMRegisterForInput")
Interceptor.attach(RIMRegisterForInput, {onLeave: function (args) {send("RIMRegisterForInput");}});

var RIMRegisterForInputEx = Module.findExportByName("user32.dll", "RIMRegisterForInputEx")
Interceptor.attach(RIMRegisterForInputEx, {onLeave: function (args) {send("RIMRegisterForInputEx");}});

var RIMRemoveInputObserver = Module.findExportByName("user32.dll", "RIMRemoveInputObserver")
Interceptor.attach(RIMRemoveInputObserver, {onLeave: function (args) {send("RIMRemoveInputObserver");}});

var RIMSetExtendedDeviceProperty = Module.findExportByName("user32.dll", "RIMSetExtendedDeviceProperty")
Interceptor.attach(RIMSetExtendedDeviceProperty, {onLeave: function (args) {send("RIMSetExtendedDeviceProperty");}});

var RIMSetTestModeStatus = Module.findExportByName("user32.dll", "RIMSetTestModeStatus")
Interceptor.attach(RIMSetTestModeStatus, {onLeave: function (args) {send("RIMSetTestModeStatus");}});

var RIMUnregisterForInput = Module.findExportByName("user32.dll", "RIMUnregisterForInput")
Interceptor.attach(RIMUnregisterForInput, {onLeave: function (args) {send("RIMUnregisterForInput");}});

var RIMUpdateInputObserverRegistration = Module.findExportByName("user32.dll", "RIMUpdateInputObserverRegistration")
Interceptor.attach(RIMUpdateInputObserverRegistration, {onLeave: function (args) {send("RIMUpdateInputObserverRegistration");}});

var RealChildWindowFromPoint = Module.findExportByName("user32.dll", "RealChildWindowFromPoint")
Interceptor.attach(RealChildWindowFromPoint, {onLeave: function (args) {send("RealChildWindowFromPoint");}});

var RealGetWindowClass = Module.findExportByName("user32.dll", "RealGetWindowClass")
Interceptor.attach(RealGetWindowClass, {onLeave: function (args) {send("RealGetWindowClass");}});

var RealGetWindowClassA = Module.findExportByName("user32.dll", "RealGetWindowClassA")
Interceptor.attach(RealGetWindowClassA, {onLeave: function (args) {send("RealGetWindowClassA");}});

var RealGetWindowClassW = Module.findExportByName("user32.dll", "RealGetWindowClassW")
Interceptor.attach(RealGetWindowClassW, {onLeave: function (args) {send("RealGetWindowClassW");}});

var ReasonCodeNeedsBugID = Module.findExportByName("user32.dll", "ReasonCodeNeedsBugID")
Interceptor.attach(ReasonCodeNeedsBugID, {onLeave: function (args) {send("ReasonCodeNeedsBugID");}});

var ReasonCodeNeedsComment = Module.findExportByName("user32.dll", "ReasonCodeNeedsComment")
Interceptor.attach(ReasonCodeNeedsComment, {onLeave: function (args) {send("ReasonCodeNeedsComment");}});

var RecordShutdownReason = Module.findExportByName("user32.dll", "RecordShutdownReason")
Interceptor.attach(RecordShutdownReason, {onLeave: function (args) {send("RecordShutdownReason");}});

var RedrawWindow = Module.findExportByName("user32.dll", "RedrawWindow")
Interceptor.attach(RedrawWindow, {onLeave: function (args) {send("RedrawWindow");}});

var RegisterBSDRWindow = Module.findExportByName("user32.dll", "RegisterBSDRWindow")
Interceptor.attach(RegisterBSDRWindow, {onLeave: function (args) {send("RegisterBSDRWindow");}});

var RegisterClassA = Module.findExportByName("user32.dll", "RegisterClassA")
Interceptor.attach(RegisterClassA, {onLeave: function (args) {send("RegisterClassA");}});

var RegisterClassExA = Module.findExportByName("user32.dll", "RegisterClassExA")
Interceptor.attach(RegisterClassExA, {onLeave: function (args) {send("RegisterClassExA");}});

var RegisterClassExW = Module.findExportByName("user32.dll", "RegisterClassExW")
Interceptor.attach(RegisterClassExW, {onLeave: function (args) {send("RegisterClassExW");}});

var RegisterClassW = Module.findExportByName("user32.dll", "RegisterClassW")
Interceptor.attach(RegisterClassW, {onLeave: function (args) {send("RegisterClassW");}});

var RegisterClipboardFormatA = Module.findExportByName("user32.dll", "RegisterClipboardFormatA")
Interceptor.attach(RegisterClipboardFormatA, {onLeave: function (args) {send("RegisterClipboardFormatA");}});

var RegisterClipboardFormatW = Module.findExportByName("user32.dll", "RegisterClipboardFormatW")
Interceptor.attach(RegisterClipboardFormatW, {onLeave: function (args) {send("RegisterClipboardFormatW");}});

var RegisterDManipHook = Module.findExportByName("user32.dll", "RegisterDManipHook")
Interceptor.attach(RegisterDManipHook, {onLeave: function (args) {send("RegisterDManipHook");}});

var RegisterDeviceNotificationA = Module.findExportByName("user32.dll", "RegisterDeviceNotificationA")
Interceptor.attach(RegisterDeviceNotificationA, {onLeave: function (args) {send("RegisterDeviceNotificationA");}});

var RegisterDeviceNotificationW = Module.findExportByName("user32.dll", "RegisterDeviceNotificationW")
Interceptor.attach(RegisterDeviceNotificationW, {onLeave: function (args) {send("RegisterDeviceNotificationW");}});

var RegisterErrorReportingDialog = Module.findExportByName("user32.dll", "RegisterErrorReportingDialog")
Interceptor.attach(RegisterErrorReportingDialog, {onLeave: function (args) {send("RegisterErrorReportingDialog");}});

var RegisterForCustomDockTargets = Module.findExportByName("user32.dll", "RegisterForCustomDockTargets")
Interceptor.attach(RegisterForCustomDockTargets, {onLeave: function (args) {send("RegisterForCustomDockTargets");}});

var RegisterForTooltipDismissNotification = Module.findExportByName("user32.dll", "RegisterForTooltipDismissNotification")
Interceptor.attach(RegisterForTooltipDismissNotification, {onLeave: function (args) {send("RegisterForTooltipDismissNotification");}});

var RegisterFrostWindow = Module.findExportByName("user32.dll", "RegisterFrostWindow")
Interceptor.attach(RegisterFrostWindow, {onLeave: function (args) {send("RegisterFrostWindow");}});

var RegisterGhostWindow = Module.findExportByName("user32.dll", "RegisterGhostWindow")
Interceptor.attach(RegisterGhostWindow, {onLeave: function (args) {send("RegisterGhostWindow");}});

var RegisterHotKey = Module.findExportByName("user32.dll", "RegisterHotKey")
Interceptor.attach(RegisterHotKey, {onLeave: function (args) {send("RegisterHotKey");}});

var RegisterLogonProcess = Module.findExportByName("user32.dll", "RegisterLogonProcess")
Interceptor.attach(RegisterLogonProcess, {onLeave: function (args) {send("RegisterLogonProcess");}});

var RegisterMessagePumpHook = Module.findExportByName("user32.dll", "RegisterMessagePumpHook")
Interceptor.attach(RegisterMessagePumpHook, {onLeave: function (args) {send("RegisterMessagePumpHook");}});

var RegisterPointerDeviceNotifications = Module.findExportByName("user32.dll", "RegisterPointerDeviceNotifications")
Interceptor.attach(RegisterPointerDeviceNotifications, {onLeave: function (args) {send("RegisterPointerDeviceNotifications");}});

var RegisterPointerInputTarget = Module.findExportByName("user32.dll", "RegisterPointerInputTarget")
Interceptor.attach(RegisterPointerInputTarget, {onLeave: function (args) {send("RegisterPointerInputTarget");}});

var RegisterPointerInputTargetEx = Module.findExportByName("user32.dll", "RegisterPointerInputTargetEx")
Interceptor.attach(RegisterPointerInputTargetEx, {onLeave: function (args) {send("RegisterPointerInputTargetEx");}});

var RegisterPowerSettingNotification = Module.findExportByName("user32.dll", "RegisterPowerSettingNotification")
Interceptor.attach(RegisterPowerSettingNotification, {onLeave: function (args) {send("RegisterPowerSettingNotification");}});

var RegisterRawInputDevices = Module.findExportByName("user32.dll", "RegisterRawInputDevices")
Interceptor.attach(RegisterRawInputDevices, {onLeave: function (args) {send("RegisterRawInputDevices");}});

var RegisterServicesProcess = Module.findExportByName("user32.dll", "RegisterServicesProcess")
Interceptor.attach(RegisterServicesProcess, {onLeave: function (args) {send("RegisterServicesProcess");}});

var RegisterSessionPort = Module.findExportByName("user32.dll", "RegisterSessionPort")
Interceptor.attach(RegisterSessionPort, {onLeave: function (args) {send("RegisterSessionPort");}});

var RegisterShellHookWindow = Module.findExportByName("user32.dll", "RegisterShellHookWindow")
Interceptor.attach(RegisterShellHookWindow, {onLeave: function (args) {send("RegisterShellHookWindow");}});

var RegisterSuspendResumeNotification = Module.findExportByName("user32.dll", "RegisterSuspendResumeNotification")
Interceptor.attach(RegisterSuspendResumeNotification, {onLeave: function (args) {send("RegisterSuspendResumeNotification");}});

var RegisterSystemThread = Module.findExportByName("user32.dll", "RegisterSystemThread")
Interceptor.attach(RegisterSystemThread, {onLeave: function (args) {send("RegisterSystemThread");}});

var RegisterTasklist = Module.findExportByName("user32.dll", "RegisterTasklist")
Interceptor.attach(RegisterTasklist, {onLeave: function (args) {send("RegisterTasklist");}});

var RegisterTouchHitTestingWindow = Module.findExportByName("user32.dll", "RegisterTouchHitTestingWindow")
Interceptor.attach(RegisterTouchHitTestingWindow, {onLeave: function (args) {send("RegisterTouchHitTestingWindow");}});

var RegisterTouchWindow = Module.findExportByName("user32.dll", "RegisterTouchWindow")
Interceptor.attach(RegisterTouchWindow, {onLeave: function (args) {send("RegisterTouchWindow");}});

var RegisterUserApiHook = Module.findExportByName("user32.dll", "RegisterUserApiHook")
Interceptor.attach(RegisterUserApiHook, {onLeave: function (args) {send("RegisterUserApiHook");}});

var RegisterWindowMessageA = Module.findExportByName("user32.dll", "RegisterWindowMessageA")
Interceptor.attach(RegisterWindowMessageA, {onLeave: function (args) {send("RegisterWindowMessageA");}});

var RegisterWindowMessageW = Module.findExportByName("user32.dll", "RegisterWindowMessageW")
Interceptor.attach(RegisterWindowMessageW, {onLeave: function (args) {send("RegisterWindowMessageW");}});

var ReleaseCapture = Module.findExportByName("user32.dll", "ReleaseCapture")
Interceptor.attach(ReleaseCapture, {onLeave: function (args) {send("ReleaseCapture");}});

var ReleaseDC = Module.findExportByName("user32.dll", "ReleaseDC")
Interceptor.attach(ReleaseDC, {onLeave: function (args) {send("ReleaseDC");}});

var ReleaseDwmHitTestWaiters = Module.findExportByName("user32.dll", "ReleaseDwmHitTestWaiters")
Interceptor.attach(ReleaseDwmHitTestWaiters, {onLeave: function (args) {send("ReleaseDwmHitTestWaiters");}});

var RemoveClipboardFormatListener = Module.findExportByName("user32.dll", "RemoveClipboardFormatListener")
Interceptor.attach(RemoveClipboardFormatListener, {onLeave: function (args) {send("RemoveClipboardFormatListener");}});

var RemoveInjectionDevice = Module.findExportByName("user32.dll", "RemoveInjectionDevice")
Interceptor.attach(RemoveInjectionDevice, {onLeave: function (args) {send("RemoveInjectionDevice");}});

var RemoveMenu = Module.findExportByName("user32.dll", "RemoveMenu")
Interceptor.attach(RemoveMenu, {onLeave: function (args) {send("RemoveMenu");}});

var RemovePropA = Module.findExportByName("user32.dll", "RemovePropA")
Interceptor.attach(RemovePropA, {onLeave: function (args) {send("RemovePropA");}});

var RemovePropW = Module.findExportByName("user32.dll", "RemovePropW")
Interceptor.attach(RemovePropW, {onLeave: function (args) {send("RemovePropW");}});

var RemoveThreadTSFEventAwareness = Module.findExportByName("user32.dll", "RemoveThreadTSFEventAwareness")
Interceptor.attach(RemoveThreadTSFEventAwareness, {onLeave: function (args) {send("RemoveThreadTSFEventAwareness");}});

var RemoveVisualIdentifier = Module.findExportByName("user32.dll", "RemoveVisualIdentifier")
Interceptor.attach(RemoveVisualIdentifier, {onLeave: function (args) {send("RemoveVisualIdentifier");}});

var ReplyMessage = Module.findExportByName("user32.dll", "ReplyMessage")
Interceptor.attach(ReplyMessage, {onLeave: function (args) {send("ReplyMessage");}});

var ReportInertia = Module.findExportByName("user32.dll", "ReportInertia")
Interceptor.attach(ReportInertia, {onLeave: function (args) {send("ReportInertia");}});

var ResolveDesktopForWOW = Module.findExportByName("user32.dll", "ResolveDesktopForWOW")
Interceptor.attach(ResolveDesktopForWOW, {onLeave: function (args) {send("ResolveDesktopForWOW");}});

var ReuseDDElParam = Module.findExportByName("user32.dll", "ReuseDDElParam")
Interceptor.attach(ReuseDDElParam, {onLeave: function (args) {send("ReuseDDElParam");}});

var ScreenToClient = Module.findExportByName("user32.dll", "ScreenToClient")
Interceptor.attach(ScreenToClient, {onLeave: function (args) {send("ScreenToClient");}});

var ScrollChildren = Module.findExportByName("user32.dll", "ScrollChildren")
Interceptor.attach(ScrollChildren, {onLeave: function (args) {send("ScrollChildren");}});

var ScrollDC = Module.findExportByName("user32.dll", "ScrollDC")
Interceptor.attach(ScrollDC, {onLeave: function (args) {send("ScrollDC");}});

var ScrollWindow = Module.findExportByName("user32.dll", "ScrollWindow")
Interceptor.attach(ScrollWindow, {onLeave: function (args) {send("ScrollWindow");}});

var ScrollWindowEx = Module.findExportByName("user32.dll", "ScrollWindowEx")
Interceptor.attach(ScrollWindowEx, {onLeave: function (args) {send("ScrollWindowEx");}});

var SendDlgItemMessageA = Module.findExportByName("user32.dll", "SendDlgItemMessageA")
Interceptor.attach(SendDlgItemMessageA, {onLeave: function (args) {send("SendDlgItemMessageA");}});

var SendDlgItemMessageW = Module.findExportByName("user32.dll", "SendDlgItemMessageW")
Interceptor.attach(SendDlgItemMessageW, {onLeave: function (args) {send("SendDlgItemMessageW");}});

var SendIMEMessageExA = Module.findExportByName("user32.dll", "SendIMEMessageExA")
Interceptor.attach(SendIMEMessageExA, {onLeave: function (args) {send("SendIMEMessageExA");}});

var SendIMEMessageExW = Module.findExportByName("user32.dll", "SendIMEMessageExW")
Interceptor.attach(SendIMEMessageExW, {onLeave: function (args) {send("SendIMEMessageExW");}});

var SendInput = Module.findExportByName("user32.dll", "SendInput")
Interceptor.attach(SendInput, {onLeave: function (args) {send("SendInput");}});

var SendMessageA = Module.findExportByName("user32.dll", "SendMessageA")
Interceptor.attach(SendMessageA, {onLeave: function (args) {send("SendMessageA");}});

var SendMessageCallbackA = Module.findExportByName("user32.dll", "SendMessageCallbackA")
Interceptor.attach(SendMessageCallbackA, {onLeave: function (args) {send("SendMessageCallbackA");}});

var SendMessageCallbackW = Module.findExportByName("user32.dll", "SendMessageCallbackW")
Interceptor.attach(SendMessageCallbackW, {onLeave: function (args) {send("SendMessageCallbackW");}});

var SendMessageTimeoutA = Module.findExportByName("user32.dll", "SendMessageTimeoutA")
Interceptor.attach(SendMessageTimeoutA, {onLeave: function (args) {send("SendMessageTimeoutA");}});

var SendMessageTimeoutW = Module.findExportByName("user32.dll", "SendMessageTimeoutW")
Interceptor.attach(SendMessageTimeoutW, {onLeave: function (args) {send("SendMessageTimeoutW");}});

var SendMessageW = Module.findExportByName("user32.dll", "SendMessageW")
Interceptor.attach(SendMessageW, {onLeave: function (args) {send("SendMessageW");}});

var SendNotifyMessageA = Module.findExportByName("user32.dll", "SendNotifyMessageA")
Interceptor.attach(SendNotifyMessageA, {onLeave: function (args) {send("SendNotifyMessageA");}});

var SendNotifyMessageW = Module.findExportByName("user32.dll", "SendNotifyMessageW")
Interceptor.attach(SendNotifyMessageW, {onLeave: function (args) {send("SendNotifyMessageW");}});

var SetActiveWindow = Module.findExportByName("user32.dll", "SetActiveWindow")
Interceptor.attach(SetActiveWindow, {onLeave: function (args) {send("SetActiveWindow");}});

var SetAdditionalForegroundBoostProcesses = Module.findExportByName("user32.dll", "SetAdditionalForegroundBoostProcesses")
Interceptor.attach(SetAdditionalForegroundBoostProcesses, {onLeave: function (args) {send("SetAdditionalForegroundBoostProcesses");}});

var SetCapture = Module.findExportByName("user32.dll", "SetCapture")
Interceptor.attach(SetCapture, {onLeave: function (args) {send("SetCapture");}});

var SetCaretBlinkTime = Module.findExportByName("user32.dll", "SetCaretBlinkTime")
Interceptor.attach(SetCaretBlinkTime, {onLeave: function (args) {send("SetCaretBlinkTime");}});

var SetCaretPos = Module.findExportByName("user32.dll", "SetCaretPos")
Interceptor.attach(SetCaretPos, {onLeave: function (args) {send("SetCaretPos");}});

var SetClassLongA = Module.findExportByName("user32.dll", "SetClassLongA")
Interceptor.attach(SetClassLongA, {onLeave: function (args) {send("SetClassLongA");}});

var SetClassLongPtrA = Module.findExportByName("user32.dll", "SetClassLongPtrA")
Interceptor.attach(SetClassLongPtrA, {onLeave: function (args) {send("SetClassLongPtrA");}});

var SetClassLongPtrW = Module.findExportByName("user32.dll", "SetClassLongPtrW")
Interceptor.attach(SetClassLongPtrW, {onLeave: function (args) {send("SetClassLongPtrW");}});

var SetClassLongW = Module.findExportByName("user32.dll", "SetClassLongW")
Interceptor.attach(SetClassLongW, {onLeave: function (args) {send("SetClassLongW");}});

var SetClassWord = Module.findExportByName("user32.dll", "SetClassWord")
Interceptor.attach(SetClassWord, {onLeave: function (args) {send("SetClassWord");}});

var SetClipboardData = Module.findExportByName("user32.dll", "SetClipboardData")
Interceptor.attach(SetClipboardData, {onLeave: function (args) {send("SetClipboardData");}});

var SetClipboardViewer = Module.findExportByName("user32.dll", "SetClipboardViewer")
Interceptor.attach(SetClipboardViewer, {onLeave: function (args) {send("SetClipboardViewer");}});

var SetCoalescableTimer = Module.findExportByName("user32.dll", "SetCoalescableTimer")
Interceptor.attach(SetCoalescableTimer, {onLeave: function (args) {send("SetCoalescableTimer");}});

var SetCoreWindow = Module.findExportByName("user32.dll", "SetCoreWindow")
Interceptor.attach(SetCoreWindow, {onLeave: function (args) {send("SetCoreWindow");}});

var SetCursor = Module.findExportByName("user32.dll", "SetCursor")
Interceptor.attach(SetCursor, {onLeave: function (args) {send("SetCursor");}});

var SetCursorContents = Module.findExportByName("user32.dll", "SetCursorContents")
Interceptor.attach(SetCursorContents, {onLeave: function (args) {send("SetCursorContents");}});

var SetCursorPos = Module.findExportByName("user32.dll", "SetCursorPos")
Interceptor.attach(SetCursorPos, {onLeave: function (args) {send("SetCursorPos");}});

var SetDebugErrorLevel = Module.findExportByName("user32.dll", "SetDebugErrorLevel")
Interceptor.attach(SetDebugErrorLevel, {onLeave: function (args) {send("SetDebugErrorLevel");}});

var SetDeskWallpaper = Module.findExportByName("user32.dll", "SetDeskWallpaper")
Interceptor.attach(SetDeskWallpaper, {onLeave: function (args) {send("SetDeskWallpaper");}});

var SetDesktopColorTransform = Module.findExportByName("user32.dll", "SetDesktopColorTransform")
Interceptor.attach(SetDesktopColorTransform, {onLeave: function (args) {send("SetDesktopColorTransform");}});

var SetDialogControlDpiChangeBehavior = Module.findExportByName("user32.dll", "SetDialogControlDpiChangeBehavior")
Interceptor.attach(SetDialogControlDpiChangeBehavior, {onLeave: function (args) {send("SetDialogControlDpiChangeBehavior");}});

var SetDialogDpiChangeBehavior = Module.findExportByName("user32.dll", "SetDialogDpiChangeBehavior")
Interceptor.attach(SetDialogDpiChangeBehavior, {onLeave: function (args) {send("SetDialogDpiChangeBehavior");}});

var SetDisplayAutoRotationPreferences = Module.findExportByName("user32.dll", "SetDisplayAutoRotationPreferences")
Interceptor.attach(SetDisplayAutoRotationPreferences, {onLeave: function (args) {send("SetDisplayAutoRotationPreferences");}});

var SetDisplayConfig = Module.findExportByName("user32.dll", "SetDisplayConfig")
Interceptor.attach(SetDisplayConfig, {onLeave: function (args) {send("SetDisplayConfig");}});

var SetDlgItemInt = Module.findExportByName("user32.dll", "SetDlgItemInt")
Interceptor.attach(SetDlgItemInt, {onLeave: function (args) {send("SetDlgItemInt");}});

var SetDlgItemTextA = Module.findExportByName("user32.dll", "SetDlgItemTextA")
Interceptor.attach(SetDlgItemTextA, {onLeave: function (args) {send("SetDlgItemTextA");}});

var SetDlgItemTextW = Module.findExportByName("user32.dll", "SetDlgItemTextW")
Interceptor.attach(SetDlgItemTextW, {onLeave: function (args) {send("SetDlgItemTextW");}});

var SetDoubleClickTime = Module.findExportByName("user32.dll", "SetDoubleClickTime")
Interceptor.attach(SetDoubleClickTime, {onLeave: function (args) {send("SetDoubleClickTime");}});

var SetFeatureReportResponse = Module.findExportByName("user32.dll", "SetFeatureReportResponse")
Interceptor.attach(SetFeatureReportResponse, {onLeave: function (args) {send("SetFeatureReportResponse");}});

var SetFocus = Module.findExportByName("user32.dll", "SetFocus")
Interceptor.attach(SetFocus, {onLeave: function (args) {send("SetFocus");}});

var SetForegroundRedirectionForActivationObject = Module.findExportByName("user32.dll", "SetForegroundRedirectionForActivationObject")
Interceptor.attach(SetForegroundRedirectionForActivationObject, {onLeave: function (args) {send("SetForegroundRedirectionForActivationObject");}});

var SetForegroundWindow = Module.findExportByName("user32.dll", "SetForegroundWindow")
Interceptor.attach(SetForegroundWindow, {onLeave: function (args) {send("SetForegroundWindow");}});

var SetFullscreenMagnifierOffsetsDWMUpdated = Module.findExportByName("user32.dll", "SetFullscreenMagnifierOffsetsDWMUpdated")
Interceptor.attach(SetFullscreenMagnifierOffsetsDWMUpdated, {onLeave: function (args) {send("SetFullscreenMagnifierOffsetsDWMUpdated");}});

var SetGestureConfig = Module.findExportByName("user32.dll", "SetGestureConfig")
Interceptor.attach(SetGestureConfig, {onLeave: function (args) {send("SetGestureConfig");}});

var SetInternalWindowPos = Module.findExportByName("user32.dll", "SetInternalWindowPos")
Interceptor.attach(SetInternalWindowPos, {onLeave: function (args) {send("SetInternalWindowPos");}});

var SetKeyboardState = Module.findExportByName("user32.dll", "SetKeyboardState")
Interceptor.attach(SetKeyboardState, {onLeave: function (args) {send("SetKeyboardState");}});

var SetLastErrorEx = Module.findExportByName("user32.dll", "SetLastErrorEx")
Interceptor.attach(SetLastErrorEx, {onLeave: function (args) {send("SetLastErrorEx");}});

var SetLayeredWindowAttributes = Module.findExportByName("user32.dll", "SetLayeredWindowAttributes")
Interceptor.attach(SetLayeredWindowAttributes, {onLeave: function (args) {send("SetLayeredWindowAttributes");}});

var SetMagnificationDesktopColorEffect = Module.findExportByName("user32.dll", "SetMagnificationDesktopColorEffect")
Interceptor.attach(SetMagnificationDesktopColorEffect, {onLeave: function (args) {send("SetMagnificationDesktopColorEffect");}});

var SetMagnificationDesktopMagnification = Module.findExportByName("user32.dll", "SetMagnificationDesktopMagnification")
Interceptor.attach(SetMagnificationDesktopMagnification, {onLeave: function (args) {send("SetMagnificationDesktopMagnification");}});

var SetMagnificationDesktopMagnifierOffsetsDWMUpdated = Module.findExportByName("user32.dll", "SetMagnificationDesktopMagnifierOffsetsDWMUpdated")
Interceptor.attach(SetMagnificationDesktopMagnifierOffsetsDWMUpdated, {onLeave: function (args) {send("SetMagnificationDesktopMagnifierOffsetsDWMUpdated");}});

var SetMagnificationDesktopSamplingMode = Module.findExportByName("user32.dll", "SetMagnificationDesktopSamplingMode")
Interceptor.attach(SetMagnificationDesktopSamplingMode, {onLeave: function (args) {send("SetMagnificationDesktopSamplingMode");}});

var SetMagnificationLensCtxInformation = Module.findExportByName("user32.dll", "SetMagnificationLensCtxInformation")
Interceptor.attach(SetMagnificationLensCtxInformation, {onLeave: function (args) {send("SetMagnificationLensCtxInformation");}});

var SetMenu = Module.findExportByName("user32.dll", "SetMenu")
Interceptor.attach(SetMenu, {onLeave: function (args) {send("SetMenu");}});

var SetMenuContextHelpId = Module.findExportByName("user32.dll", "SetMenuContextHelpId")
Interceptor.attach(SetMenuContextHelpId, {onLeave: function (args) {send("SetMenuContextHelpId");}});

var SetMenuDefaultItem = Module.findExportByName("user32.dll", "SetMenuDefaultItem")
Interceptor.attach(SetMenuDefaultItem, {onLeave: function (args) {send("SetMenuDefaultItem");}});

var SetMenuInfo = Module.findExportByName("user32.dll", "SetMenuInfo")
Interceptor.attach(SetMenuInfo, {onLeave: function (args) {send("SetMenuInfo");}});

var SetMenuItemBitmaps = Module.findExportByName("user32.dll", "SetMenuItemBitmaps")
Interceptor.attach(SetMenuItemBitmaps, {onLeave: function (args) {send("SetMenuItemBitmaps");}});

var SetMenuItemInfoA = Module.findExportByName("user32.dll", "SetMenuItemInfoA")
Interceptor.attach(SetMenuItemInfoA, {onLeave: function (args) {send("SetMenuItemInfoA");}});

var SetMenuItemInfoW = Module.findExportByName("user32.dll", "SetMenuItemInfoW")
Interceptor.attach(SetMenuItemInfoW, {onLeave: function (args) {send("SetMenuItemInfoW");}});

var SetMessageExtraInfo = Module.findExportByName("user32.dll", "SetMessageExtraInfo")
Interceptor.attach(SetMessageExtraInfo, {onLeave: function (args) {send("SetMessageExtraInfo");}});

var SetMessageQueue = Module.findExportByName("user32.dll", "SetMessageQueue")
Interceptor.attach(SetMessageQueue, {onLeave: function (args) {send("SetMessageQueue");}});

var SetMirrorRendering = Module.findExportByName("user32.dll", "SetMirrorRendering")
Interceptor.attach(SetMirrorRendering, {onLeave: function (args) {send("SetMirrorRendering");}});

var SetParent = Module.findExportByName("user32.dll", "SetParent")
Interceptor.attach(SetParent, {onLeave: function (args) {send("SetParent");}});

var SetPhysicalCursorPos = Module.findExportByName("user32.dll", "SetPhysicalCursorPos")
Interceptor.attach(SetPhysicalCursorPos, {onLeave: function (args) {send("SetPhysicalCursorPos");}});

var SetPointerDeviceInputSpace = Module.findExportByName("user32.dll", "SetPointerDeviceInputSpace")
Interceptor.attach(SetPointerDeviceInputSpace, {onLeave: function (args) {send("SetPointerDeviceInputSpace");}});

var SetProcessDPIAware = Module.findExportByName("user32.dll", "SetProcessDPIAware")
Interceptor.attach(SetProcessDPIAware, {onLeave: function (args) {send("SetProcessDPIAware");}});

var SetProcessDefaultLayout = Module.findExportByName("user32.dll", "SetProcessDefaultLayout")
Interceptor.attach(SetProcessDefaultLayout, {onLeave: function (args) {send("SetProcessDefaultLayout");}});

var SetProcessDpiAwarenessContext = Module.findExportByName("user32.dll", "SetProcessDpiAwarenessContext")
Interceptor.attach(SetProcessDpiAwarenessContext, {onLeave: function (args) {send("SetProcessDpiAwarenessContext");}});

var SetProcessDpiAwarenessInternal = Module.findExportByName("user32.dll", "SetProcessDpiAwarenessInternal")
Interceptor.attach(SetProcessDpiAwarenessInternal, {onLeave: function (args) {send("SetProcessDpiAwarenessInternal");}});

var SetProcessLaunchForegroundPolicy = Module.findExportByName("user32.dll", "SetProcessLaunchForegroundPolicy")
Interceptor.attach(SetProcessLaunchForegroundPolicy, {onLeave: function (args) {send("SetProcessLaunchForegroundPolicy");}});

var SetProcessRestrictionExemption = Module.findExportByName("user32.dll", "SetProcessRestrictionExemption")
Interceptor.attach(SetProcessRestrictionExemption, {onLeave: function (args) {send("SetProcessRestrictionExemption");}});

var SetProcessWindowStation = Module.findExportByName("user32.dll", "SetProcessWindowStation")
Interceptor.attach(SetProcessWindowStation, {onLeave: function (args) {send("SetProcessWindowStation");}});

var SetProgmanWindow = Module.findExportByName("user32.dll", "SetProgmanWindow")
Interceptor.attach(SetProgmanWindow, {onLeave: function (args) {send("SetProgmanWindow");}});

var SetPropA = Module.findExportByName("user32.dll", "SetPropA")
Interceptor.attach(SetPropA, {onLeave: function (args) {send("SetPropA");}});

var SetPropW = Module.findExportByName("user32.dll", "SetPropW")
Interceptor.attach(SetPropW, {onLeave: function (args) {send("SetPropW");}});

var SetRect = Module.findExportByName("user32.dll", "SetRect")
Interceptor.attach(SetRect, {onLeave: function (args) {send("SetRect");}});

var SetRectEmpty = Module.findExportByName("user32.dll", "SetRectEmpty")
Interceptor.attach(SetRectEmpty, {onLeave: function (args) {send("SetRectEmpty");}});

var SetScrollInfo = Module.findExportByName("user32.dll", "SetScrollInfo")
Interceptor.attach(SetScrollInfo, {onLeave: function (args) {send("SetScrollInfo");}});

var SetScrollPos = Module.findExportByName("user32.dll", "SetScrollPos")
Interceptor.attach(SetScrollPos, {onLeave: function (args) {send("SetScrollPos");}});

var SetScrollRange = Module.findExportByName("user32.dll", "SetScrollRange")
Interceptor.attach(SetScrollRange, {onLeave: function (args) {send("SetScrollRange");}});

var SetShellChangeNotifyWindow = Module.findExportByName("user32.dll", "SetShellChangeNotifyWindow")
Interceptor.attach(SetShellChangeNotifyWindow, {onLeave: function (args) {send("SetShellChangeNotifyWindow");}});

var SetShellWindow = Module.findExportByName("user32.dll", "SetShellWindow")
Interceptor.attach(SetShellWindow, {onLeave: function (args) {send("SetShellWindow");}});

var SetShellWindowEx = Module.findExportByName("user32.dll", "SetShellWindowEx")
Interceptor.attach(SetShellWindowEx, {onLeave: function (args) {send("SetShellWindowEx");}});

var SetSysColors = Module.findExportByName("user32.dll", "SetSysColors")
Interceptor.attach(SetSysColors, {onLeave: function (args) {send("SetSysColors");}});

var SetSysColorsTemp = Module.findExportByName("user32.dll", "SetSysColorsTemp")
Interceptor.attach(SetSysColorsTemp, {onLeave: function (args) {send("SetSysColorsTemp");}});

var SetSystemCursor = Module.findExportByName("user32.dll", "SetSystemCursor")
Interceptor.attach(SetSystemCursor, {onLeave: function (args) {send("SetSystemCursor");}});

var SetSystemMenu = Module.findExportByName("user32.dll", "SetSystemMenu")
Interceptor.attach(SetSystemMenu, {onLeave: function (args) {send("SetSystemMenu");}});

var SetTaskmanWindow = Module.findExportByName("user32.dll", "SetTaskmanWindow")
Interceptor.attach(SetTaskmanWindow, {onLeave: function (args) {send("SetTaskmanWindow");}});

var SetThreadCursorCreationScaling = Module.findExportByName("user32.dll", "SetThreadCursorCreationScaling")
Interceptor.attach(SetThreadCursorCreationScaling, {onLeave: function (args) {send("SetThreadCursorCreationScaling");}});

var SetThreadDesktop = Module.findExportByName("user32.dll", "SetThreadDesktop")
Interceptor.attach(SetThreadDesktop, {onLeave: function (args) {send("SetThreadDesktop");}});

var SetThreadDpiAwarenessContext = Module.findExportByName("user32.dll", "SetThreadDpiAwarenessContext")
Interceptor.attach(SetThreadDpiAwarenessContext, {onLeave: function (args) {send("SetThreadDpiAwarenessContext");}});

var SetThreadDpiHostingBehavior = Module.findExportByName("user32.dll", "SetThreadDpiHostingBehavior")
Interceptor.attach(SetThreadDpiHostingBehavior, {onLeave: function (args) {send("SetThreadDpiHostingBehavior");}});

var SetThreadInputBlocked = Module.findExportByName("user32.dll", "SetThreadInputBlocked")
Interceptor.attach(SetThreadInputBlocked, {onLeave: function (args) {send("SetThreadInputBlocked");}});

var SetTimer = Module.findExportByName("user32.dll", "SetTimer")
Interceptor.attach(SetTimer, {onLeave: function (args) {send("SetTimer");}});

var SetUserObjectInformationA = Module.findExportByName("user32.dll", "SetUserObjectInformationA")
Interceptor.attach(SetUserObjectInformationA, {onLeave: function (args) {send("SetUserObjectInformationA");}});

var SetUserObjectInformationW = Module.findExportByName("user32.dll", "SetUserObjectInformationW")
Interceptor.attach(SetUserObjectInformationW, {onLeave: function (args) {send("SetUserObjectInformationW");}});

var SetUserObjectSecurity = Module.findExportByName("user32.dll", "SetUserObjectSecurity")
Interceptor.attach(SetUserObjectSecurity, {onLeave: function (args) {send("SetUserObjectSecurity");}});

var SetWinEventHook = Module.findExportByName("user32.dll", "SetWinEventHook")
Interceptor.attach(SetWinEventHook, {onLeave: function (args) {send("SetWinEventHook");}});

var SetWindowBand = Module.findExportByName("user32.dll", "SetWindowBand")
Interceptor.attach(SetWindowBand, {onLeave: function (args) {send("SetWindowBand");}});

var SetWindowCompositionAttribute = Module.findExportByName("user32.dll", "SetWindowCompositionAttribute")
Interceptor.attach(SetWindowCompositionAttribute, {onLeave: function (args) {send("SetWindowCompositionAttribute");}});

var SetWindowCompositionTransition = Module.findExportByName("user32.dll", "SetWindowCompositionTransition")
Interceptor.attach(SetWindowCompositionTransition, {onLeave: function (args) {send("SetWindowCompositionTransition");}});

var SetWindowContextHelpId = Module.findExportByName("user32.dll", "SetWindowContextHelpId")
Interceptor.attach(SetWindowContextHelpId, {onLeave: function (args) {send("SetWindowContextHelpId");}});

var SetWindowDisplayAffinity = Module.findExportByName("user32.dll", "SetWindowDisplayAffinity")
Interceptor.attach(SetWindowDisplayAffinity, {onLeave: function (args) {send("SetWindowDisplayAffinity");}});

var SetWindowFeedbackSetting = Module.findExportByName("user32.dll", "SetWindowFeedbackSetting")
Interceptor.attach(SetWindowFeedbackSetting, {onLeave: function (args) {send("SetWindowFeedbackSetting");}});

var SetWindowLongA = Module.findExportByName("user32.dll", "SetWindowLongA")
Interceptor.attach(SetWindowLongA, {onLeave: function (args) {send("SetWindowLongA");}});

var SetWindowLongPtrA = Module.findExportByName("user32.dll", "SetWindowLongPtrA")
Interceptor.attach(SetWindowLongPtrA, {onLeave: function (args) {send("SetWindowLongPtrA");}});

var SetWindowLongPtrW = Module.findExportByName("user32.dll", "SetWindowLongPtrW")
Interceptor.attach(SetWindowLongPtrW, {onLeave: function (args) {send("SetWindowLongPtrW");}});

var SetWindowLongW = Module.findExportByName("user32.dll", "SetWindowLongW")
Interceptor.attach(SetWindowLongW, {onLeave: function (args) {send("SetWindowLongW");}});

var SetWindowPlacement = Module.findExportByName("user32.dll", "SetWindowPlacement")
Interceptor.attach(SetWindowPlacement, {onLeave: function (args) {send("SetWindowPlacement");}});

var SetWindowPos = Module.findExportByName("user32.dll", "SetWindowPos")
Interceptor.attach(SetWindowPos, {onLeave: function (args) {send("SetWindowPos");}});

var SetWindowRgn = Module.findExportByName("user32.dll", "SetWindowRgn")
Interceptor.attach(SetWindowRgn, {onLeave: function (args) {send("SetWindowRgn");}});

var SetWindowRgnEx = Module.findExportByName("user32.dll", "SetWindowRgnEx")
Interceptor.attach(SetWindowRgnEx, {onLeave: function (args) {send("SetWindowRgnEx");}});

var SetWindowStationUser = Module.findExportByName("user32.dll", "SetWindowStationUser")
Interceptor.attach(SetWindowStationUser, {onLeave: function (args) {send("SetWindowStationUser");}});

var SetWindowTextA = Module.findExportByName("user32.dll", "SetWindowTextA")
Interceptor.attach(SetWindowTextA, {onLeave: function (args) {send("SetWindowTextA");}});

var SetWindowTextW = Module.findExportByName("user32.dll", "SetWindowTextW")
Interceptor.attach(SetWindowTextW, {onLeave: function (args) {send("SetWindowTextW");}});

var SetWindowWord = Module.findExportByName("user32.dll", "SetWindowWord")
Interceptor.attach(SetWindowWord, {onLeave: function (args) {send("SetWindowWord");}});

var SetWindowsHookA = Module.findExportByName("user32.dll", "SetWindowsHookA")
Interceptor.attach(SetWindowsHookA, {onLeave: function (args) {send("SetWindowsHookA");}});

var SetWindowsHookExA = Module.findExportByName("user32.dll", "SetWindowsHookExA")
Interceptor.attach(SetWindowsHookExA, {onLeave: function (args) {send("SetWindowsHookExA");}});

var SetWindowsHookExAW = Module.findExportByName("user32.dll", "SetWindowsHookExAW")
Interceptor.attach(SetWindowsHookExAW, {onLeave: function (args) {send("SetWindowsHookExAW");}});

var SetWindowsHookExW = Module.findExportByName("user32.dll", "SetWindowsHookExW")
Interceptor.attach(SetWindowsHookExW, {onLeave: function (args) {send("SetWindowsHookExW");}});

var SetWindowsHookW = Module.findExportByName("user32.dll", "SetWindowsHookW")
Interceptor.attach(SetWindowsHookW, {onLeave: function (args) {send("SetWindowsHookW");}});

var ShellHandwritingDelegateInput = Module.findExportByName("user32.dll", "ShellHandwritingDelegateInput")
Interceptor.attach(ShellHandwritingDelegateInput, {onLeave: function (args) {send("ShellHandwritingDelegateInput");}});

var ShellHandwritingHandleDelegatedInput = Module.findExportByName("user32.dll", "ShellHandwritingHandleDelegatedInput")
Interceptor.attach(ShellHandwritingHandleDelegatedInput, {onLeave: function (args) {send("ShellHandwritingHandleDelegatedInput");}});

var ShellHandwritingUndelegateInput = Module.findExportByName("user32.dll", "ShellHandwritingUndelegateInput")
Interceptor.attach(ShellHandwritingUndelegateInput, {onLeave: function (args) {send("ShellHandwritingUndelegateInput");}});

var ShellMigrateWindow = Module.findExportByName("user32.dll", "ShellMigrateWindow")
Interceptor.attach(ShellMigrateWindow, {onLeave: function (args) {send("ShellMigrateWindow");}});

var ShellRegisterHotKey = Module.findExportByName("user32.dll", "ShellRegisterHotKey")
Interceptor.attach(ShellRegisterHotKey, {onLeave: function (args) {send("ShellRegisterHotKey");}});

var ShellSetWindowPos = Module.findExportByName("user32.dll", "ShellSetWindowPos")
Interceptor.attach(ShellSetWindowPos, {onLeave: function (args) {send("ShellSetWindowPos");}});

var ShowCaret = Module.findExportByName("user32.dll", "ShowCaret")
Interceptor.attach(ShowCaret, {onLeave: function (args) {send("ShowCaret");}});

var ShowCursor = Module.findExportByName("user32.dll", "ShowCursor")
Interceptor.attach(ShowCursor, {onLeave: function (args) {send("ShowCursor");}});

var ShowOwnedPopups = Module.findExportByName("user32.dll", "ShowOwnedPopups")
Interceptor.attach(ShowOwnedPopups, {onLeave: function (args) {send("ShowOwnedPopups");}});

var ShowScrollBar = Module.findExportByName("user32.dll", "ShowScrollBar")
Interceptor.attach(ShowScrollBar, {onLeave: function (args) {send("ShowScrollBar");}});

var ShowStartGlass = Module.findExportByName("user32.dll", "ShowStartGlass")
Interceptor.attach(ShowStartGlass, {onLeave: function (args) {send("ShowStartGlass");}});

var ShowSystemCursor = Module.findExportByName("user32.dll", "ShowSystemCursor")
Interceptor.attach(ShowSystemCursor, {onLeave: function (args) {send("ShowSystemCursor");}});

var ShowWindow = Module.findExportByName("user32.dll", "ShowWindow")
Interceptor.attach(ShowWindow, {onLeave: function (args) {send("ShowWindow");}});

var ShowWindowAsync = Module.findExportByName("user32.dll", "ShowWindowAsync")
Interceptor.attach(ShowWindowAsync, {onLeave: function (args) {send("ShowWindowAsync");}});

var ShutdownBlockReasonCreate = Module.findExportByName("user32.dll", "ShutdownBlockReasonCreate")
Interceptor.attach(ShutdownBlockReasonCreate, {onLeave: function (args) {send("ShutdownBlockReasonCreate");}});

var ShutdownBlockReasonDestroy = Module.findExportByName("user32.dll", "ShutdownBlockReasonDestroy")
Interceptor.attach(ShutdownBlockReasonDestroy, {onLeave: function (args) {send("ShutdownBlockReasonDestroy");}});

var ShutdownBlockReasonQuery = Module.findExportByName("user32.dll", "ShutdownBlockReasonQuery")
Interceptor.attach(ShutdownBlockReasonQuery, {onLeave: function (args) {send("ShutdownBlockReasonQuery");}});

var SignalRedirectionStartComplete = Module.findExportByName("user32.dll", "SignalRedirectionStartComplete")
Interceptor.attach(SignalRedirectionStartComplete, {onLeave: function (args) {send("SignalRedirectionStartComplete");}});

var SkipPointerFrameMessages = Module.findExportByName("user32.dll", "SkipPointerFrameMessages")
Interceptor.attach(SkipPointerFrameMessages, {onLeave: function (args) {send("SkipPointerFrameMessages");}});

var SoftModalMessageBox = Module.findExportByName("user32.dll", "SoftModalMessageBox")
Interceptor.attach(SoftModalMessageBox, {onLeave: function (args) {send("SoftModalMessageBox");}});

var SoundSentry = Module.findExportByName("user32.dll", "SoundSentry")
Interceptor.attach(SoundSentry, {onLeave: function (args) {send("SoundSentry");}});

var SubtractRect = Module.findExportByName("user32.dll", "SubtractRect")
Interceptor.attach(SubtractRect, {onLeave: function (args) {send("SubtractRect");}});

var SwapMouseButton = Module.findExportByName("user32.dll", "SwapMouseButton")
Interceptor.attach(SwapMouseButton, {onLeave: function (args) {send("SwapMouseButton");}});

var SwitchDesktop = Module.findExportByName("user32.dll", "SwitchDesktop")
Interceptor.attach(SwitchDesktop, {onLeave: function (args) {send("SwitchDesktop");}});

var SwitchDesktopWithFade = Module.findExportByName("user32.dll", "SwitchDesktopWithFade")
Interceptor.attach(SwitchDesktopWithFade, {onLeave: function (args) {send("SwitchDesktopWithFade");}});

var SwitchToThisWindow = Module.findExportByName("user32.dll", "SwitchToThisWindow")
Interceptor.attach(SwitchToThisWindow, {onLeave: function (args) {send("SwitchToThisWindow");}});

var SystemParametersInfoA = Module.findExportByName("user32.dll", "SystemParametersInfoA")
Interceptor.attach(SystemParametersInfoA, {onLeave: function (args) {send("SystemParametersInfoA");}});

var SystemParametersInfoForDpi = Module.findExportByName("user32.dll", "SystemParametersInfoForDpi")
Interceptor.attach(SystemParametersInfoForDpi, {onLeave: function (args) {send("SystemParametersInfoForDpi");}});

var SystemParametersInfoW = Module.findExportByName("user32.dll", "SystemParametersInfoW")
Interceptor.attach(SystemParametersInfoW, {onLeave: function (args) {send("SystemParametersInfoW");}});

var TabbedTextOutA = Module.findExportByName("user32.dll", "TabbedTextOutA")
Interceptor.attach(TabbedTextOutA, {onLeave: function (args) {send("TabbedTextOutA");}});

var TabbedTextOutW = Module.findExportByName("user32.dll", "TabbedTextOutW")
Interceptor.attach(TabbedTextOutW, {onLeave: function (args) {send("TabbedTextOutW");}});

var TileChildWindows = Module.findExportByName("user32.dll", "TileChildWindows")
Interceptor.attach(TileChildWindows, {onLeave: function (args) {send("TileChildWindows");}});

var TileWindows = Module.findExportByName("user32.dll", "TileWindows")
Interceptor.attach(TileWindows, {onLeave: function (args) {send("TileWindows");}});

var ToAscii = Module.findExportByName("user32.dll", "ToAscii")
Interceptor.attach(ToAscii, {onLeave: function (args) {send("ToAscii");}});

var ToAsciiEx = Module.findExportByName("user32.dll", "ToAsciiEx")
Interceptor.attach(ToAsciiEx, {onLeave: function (args) {send("ToAsciiEx");}});

var ToUnicode = Module.findExportByName("user32.dll", "ToUnicode")
Interceptor.attach(ToUnicode, {onLeave: function (args) {send("ToUnicode");}});

var ToUnicodeEx = Module.findExportByName("user32.dll", "ToUnicodeEx")
Interceptor.attach(ToUnicodeEx, {onLeave: function (args) {send("ToUnicodeEx");}});

var TrackMouseEvent = Module.findExportByName("user32.dll", "TrackMouseEvent")
Interceptor.attach(TrackMouseEvent, {onLeave: function (args) {send("TrackMouseEvent");}});

var TrackPopupMenu = Module.findExportByName("user32.dll", "TrackPopupMenu")
Interceptor.attach(TrackPopupMenu, {onLeave: function (args) {send("TrackPopupMenu");}});

var TrackPopupMenuEx = Module.findExportByName("user32.dll", "TrackPopupMenuEx")
Interceptor.attach(TrackPopupMenuEx, {onLeave: function (args) {send("TrackPopupMenuEx");}});

var TranslateAccelerator = Module.findExportByName("user32.dll", "TranslateAccelerator")
Interceptor.attach(TranslateAccelerator, {onLeave: function (args) {send("TranslateAccelerator");}});

var TranslateAcceleratorA = Module.findExportByName("user32.dll", "TranslateAcceleratorA")
Interceptor.attach(TranslateAcceleratorA, {onLeave: function (args) {send("TranslateAcceleratorA");}});

var TranslateAcceleratorW = Module.findExportByName("user32.dll", "TranslateAcceleratorW")
Interceptor.attach(TranslateAcceleratorW, {onLeave: function (args) {send("TranslateAcceleratorW");}});

var TranslateMDISysAccel = Module.findExportByName("user32.dll", "TranslateMDISysAccel")
Interceptor.attach(TranslateMDISysAccel, {onLeave: function (args) {send("TranslateMDISysAccel");}});

var TranslateMessage = Module.findExportByName("user32.dll", "TranslateMessage")
Interceptor.attach(TranslateMessage, {onLeave: function (args) {send("TranslateMessage");}});

var TranslateMessageEx = Module.findExportByName("user32.dll", "TranslateMessageEx")
Interceptor.attach(TranslateMessageEx, {onLeave: function (args) {send("TranslateMessageEx");}});

var UndelegateInput = Module.findExportByName("user32.dll", "UndelegateInput")
Interceptor.attach(UndelegateInput, {onLeave: function (args) {send("UndelegateInput");}});

var UnhookWinEvent = Module.findExportByName("user32.dll", "UnhookWinEvent")
Interceptor.attach(UnhookWinEvent, {onLeave: function (args) {send("UnhookWinEvent");}});

var UnhookWindowsHook = Module.findExportByName("user32.dll", "UnhookWindowsHook")
Interceptor.attach(UnhookWindowsHook, {onLeave: function (args) {send("UnhookWindowsHook");}});

var UnhookWindowsHookEx = Module.findExportByName("user32.dll", "UnhookWindowsHookEx")
Interceptor.attach(UnhookWindowsHookEx, {onLeave: function (args) {send("UnhookWindowsHookEx");}});

var UnionRect = Module.findExportByName("user32.dll", "UnionRect")
Interceptor.attach(UnionRect, {onLeave: function (args) {send("UnionRect");}});

var UnloadKeyboardLayout = Module.findExportByName("user32.dll", "UnloadKeyboardLayout")
Interceptor.attach(UnloadKeyboardLayout, {onLeave: function (args) {send("UnloadKeyboardLayout");}});

var UnlockWindowStation = Module.findExportByName("user32.dll", "UnlockWindowStation")
Interceptor.attach(UnlockWindowStation, {onLeave: function (args) {send("UnlockWindowStation");}});

var UnpackDDElParam = Module.findExportByName("user32.dll", "UnpackDDElParam")
Interceptor.attach(UnpackDDElParam, {onLeave: function (args) {send("UnpackDDElParam");}});

var UnregisterClassA = Module.findExportByName("user32.dll", "UnregisterClassA")
Interceptor.attach(UnregisterClassA, {onLeave: function (args) {send("UnregisterClassA");}});

var UnregisterClassW = Module.findExportByName("user32.dll", "UnregisterClassW")
Interceptor.attach(UnregisterClassW, {onLeave: function (args) {send("UnregisterClassW");}});

var UnregisterDeviceNotification = Module.findExportByName("user32.dll", "UnregisterDeviceNotification")
Interceptor.attach(UnregisterDeviceNotification, {onLeave: function (args) {send("UnregisterDeviceNotification");}});

var UnregisterHotKey = Module.findExportByName("user32.dll", "UnregisterHotKey")
Interceptor.attach(UnregisterHotKey, {onLeave: function (args) {send("UnregisterHotKey");}});

var UnregisterMessagePumpHook = Module.findExportByName("user32.dll", "UnregisterMessagePumpHook")
Interceptor.attach(UnregisterMessagePumpHook, {onLeave: function (args) {send("UnregisterMessagePumpHook");}});

var UnregisterPointerInputTarget = Module.findExportByName("user32.dll", "UnregisterPointerInputTarget")
Interceptor.attach(UnregisterPointerInputTarget, {onLeave: function (args) {send("UnregisterPointerInputTarget");}});

var UnregisterPointerInputTargetEx = Module.findExportByName("user32.dll", "UnregisterPointerInputTargetEx")
Interceptor.attach(UnregisterPointerInputTargetEx, {onLeave: function (args) {send("UnregisterPointerInputTargetEx");}});

var UnregisterPowerSettingNotification = Module.findExportByName("user32.dll", "UnregisterPowerSettingNotification")
Interceptor.attach(UnregisterPowerSettingNotification, {onLeave: function (args) {send("UnregisterPowerSettingNotification");}});

var UnregisterSessionPort = Module.findExportByName("user32.dll", "UnregisterSessionPort")
Interceptor.attach(UnregisterSessionPort, {onLeave: function (args) {send("UnregisterSessionPort");}});

var UnregisterSuspendResumeNotification = Module.findExportByName("user32.dll", "UnregisterSuspendResumeNotification")
Interceptor.attach(UnregisterSuspendResumeNotification, {onLeave: function (args) {send("UnregisterSuspendResumeNotification");}});

var UnregisterTouchWindow = Module.findExportByName("user32.dll", "UnregisterTouchWindow")
Interceptor.attach(UnregisterTouchWindow, {onLeave: function (args) {send("UnregisterTouchWindow");}});

var UnregisterUserApiHook = Module.findExportByName("user32.dll", "UnregisterUserApiHook")
Interceptor.attach(UnregisterUserApiHook, {onLeave: function (args) {send("UnregisterUserApiHook");}});

var UpdateDefaultDesktopThumbnail = Module.findExportByName("user32.dll", "UpdateDefaultDesktopThumbnail")
Interceptor.attach(UpdateDefaultDesktopThumbnail, {onLeave: function (args) {send("UpdateDefaultDesktopThumbnail");}});

var UpdateLayeredWindow = Module.findExportByName("user32.dll", "UpdateLayeredWindow")
Interceptor.attach(UpdateLayeredWindow, {onLeave: function (args) {send("UpdateLayeredWindow");}});

var UpdateLayeredWindowIndirect = Module.findExportByName("user32.dll", "UpdateLayeredWindowIndirect")
Interceptor.attach(UpdateLayeredWindowIndirect, {onLeave: function (args) {send("UpdateLayeredWindowIndirect");}});

var UpdatePerUserSystemParameters = Module.findExportByName("user32.dll", "UpdatePerUserSystemParameters")
Interceptor.attach(UpdatePerUserSystemParameters, {onLeave: function (args) {send("UpdatePerUserSystemParameters");}});

var UpdateWindow = Module.findExportByName("user32.dll", "UpdateWindow")
Interceptor.attach(UpdateWindow, {onLeave: function (args) {send("UpdateWindow");}});

var UpdateWindowInputSinkHints = Module.findExportByName("user32.dll", "UpdateWindowInputSinkHints")
Interceptor.attach(UpdateWindowInputSinkHints, {onLeave: function (args) {send("UpdateWindowInputSinkHints");}});

var User32InitializeImmEntryTable = Module.findExportByName("user32.dll", "User32InitializeImmEntryTable")
Interceptor.attach(User32InitializeImmEntryTable, {onLeave: function (args) {send("User32InitializeImmEntryTable");}});

var UserClientDllInitialize = Module.findExportByName("user32.dll", "UserClientDllInitialize")
Interceptor.attach(UserClientDllInitialize, {onLeave: function (args) {send("UserClientDllInitialize");}});

var UserHandleGrantAccess = Module.findExportByName("user32.dll", "UserHandleGrantAccess")
Interceptor.attach(UserHandleGrantAccess, {onLeave: function (args) {send("UserHandleGrantAccess");}});

var UserLpkPSMTextOut = Module.findExportByName("user32.dll", "UserLpkPSMTextOut")
Interceptor.attach(UserLpkPSMTextOut, {onLeave: function (args) {send("UserLpkPSMTextOut");}});

var UserLpkTabbedTextOut = Module.findExportByName("user32.dll", "UserLpkTabbedTextOut")
Interceptor.attach(UserLpkTabbedTextOut, {onLeave: function (args) {send("UserLpkTabbedTextOut");}});

var UserRealizePalette = Module.findExportByName("user32.dll", "UserRealizePalette")
Interceptor.attach(UserRealizePalette, {onLeave: function (args) {send("UserRealizePalette");}});

var UserRegisterWowHandlers = Module.findExportByName("user32.dll", "UserRegisterWowHandlers")
Interceptor.attach(UserRegisterWowHandlers, {onLeave: function (args) {send("UserRegisterWowHandlers");}});

var VRipOutput = Module.findExportByName("user32.dll", "VRipOutput")
Interceptor.attach(VRipOutput, {onLeave: function (args) {send("VRipOutput");}});

var VTagOutput = Module.findExportByName("user32.dll", "VTagOutput")
Interceptor.attach(VTagOutput, {onLeave: function (args) {send("VTagOutput");}});

var ValidateRect = Module.findExportByName("user32.dll", "ValidateRect")
Interceptor.attach(ValidateRect, {onLeave: function (args) {send("ValidateRect");}});

var ValidateRgn = Module.findExportByName("user32.dll", "ValidateRgn")
Interceptor.attach(ValidateRgn, {onLeave: function (args) {send("ValidateRgn");}});

var VkKeyScanA = Module.findExportByName("user32.dll", "VkKeyScanA")
Interceptor.attach(VkKeyScanA, {onLeave: function (args) {send("VkKeyScanA");}});

var VkKeyScanExA = Module.findExportByName("user32.dll", "VkKeyScanExA")
Interceptor.attach(VkKeyScanExA, {onLeave: function (args) {send("VkKeyScanExA");}});

var VkKeyScanExW = Module.findExportByName("user32.dll", "VkKeyScanExW")
Interceptor.attach(VkKeyScanExW, {onLeave: function (args) {send("VkKeyScanExW");}});

var VkKeyScanW = Module.findExportByName("user32.dll", "VkKeyScanW")
Interceptor.attach(VkKeyScanW, {onLeave: function (args) {send("VkKeyScanW");}});

var WCSToMBEx = Module.findExportByName("user32.dll", "WCSToMBEx")
Interceptor.attach(WCSToMBEx, {onLeave: function (args) {send("WCSToMBEx");}});

var WINNLSEnableIME = Module.findExportByName("user32.dll", "WINNLSEnableIME")
Interceptor.attach(WINNLSEnableIME, {onLeave: function (args) {send("WINNLSEnableIME");}});

var WINNLSGetEnableStatus = Module.findExportByName("user32.dll", "WINNLSGetEnableStatus")
Interceptor.attach(WINNLSGetEnableStatus, {onLeave: function (args) {send("WINNLSGetEnableStatus");}});

var WINNLSGetIMEHotkey = Module.findExportByName("user32.dll", "WINNLSGetIMEHotkey")
Interceptor.attach(WINNLSGetIMEHotkey, {onLeave: function (args) {send("WINNLSGetIMEHotkey");}});

var WaitForInputIdle = Module.findExportByName("user32.dll", "WaitForInputIdle")
Interceptor.attach(WaitForInputIdle, {onLeave: function (args) {send("WaitForInputIdle");}});

var WaitForRedirectionStartComplete = Module.findExportByName("user32.dll", "WaitForRedirectionStartComplete")
Interceptor.attach(WaitForRedirectionStartComplete, {onLeave: function (args) {send("WaitForRedirectionStartComplete");}});

var WaitMessage = Module.findExportByName("user32.dll", "WaitMessage")
Interceptor.attach(WaitMessage, {onLeave: function (args) {send("WaitMessage");}});

var WinHelpA = Module.findExportByName("user32.dll", "WinHelpA")
Interceptor.attach(WinHelpA, {onLeave: function (args) {send("WinHelpA");}});

var WinHelpW = Module.findExportByName("user32.dll", "WinHelpW")
Interceptor.attach(WinHelpW, {onLeave: function (args) {send("WinHelpW");}});

var WindowFromDC = Module.findExportByName("user32.dll", "WindowFromDC")
Interceptor.attach(WindowFromDC, {onLeave: function (args) {send("WindowFromDC");}});

var WindowFromPhysicalPoint = Module.findExportByName("user32.dll", "WindowFromPhysicalPoint")
Interceptor.attach(WindowFromPhysicalPoint, {onLeave: function (args) {send("WindowFromPhysicalPoint");}});

var WindowFromPoint = Module.findExportByName("user32.dll", "WindowFromPoint")
Interceptor.attach(WindowFromPoint, {onLeave: function (args) {send("WindowFromPoint");}});

var _UserTestTokenForInteractive = Module.findExportByName("user32.dll", "_UserTestTokenForInteractive")
Interceptor.attach(_UserTestTokenForInteractive, {onLeave: function (args) {send("_UserTestTokenForInteractive");}});

var gSharedInfo = Module.findExportByName("user32.dll", "gSharedInfo")
Interceptor.attach(gSharedInfo, {onLeave: function (args) {send("gSharedInfo");}});

var gapfnScSendMessage = Module.findExportByName("user32.dll", "gapfnScSendMessage")
Interceptor.attach(gapfnScSendMessage, {onLeave: function (args) {send("gapfnScSendMessage");}});

var keybd_event = Module.findExportByName("user32.dll", "keybd_event")
Interceptor.attach(keybd_event, {onLeave: function (args) {send("keybd_event");}});

var mouse_event = Module.findExportByName("user32.dll", "mouse_event")
Interceptor.attach(mouse_event, {onLeave: function (args) {send("mouse_event");}});

var wsprintfA = Module.findExportByName("user32.dll", "wsprintfA")
Interceptor.attach(wsprintfA, {onLeave: function (args) {send("wsprintfA");}});

var wsprintfW = Module.findExportByName("user32.dll", "wsprintfW")
Interceptor.attach(wsprintfW, {onLeave: function (args) {send("wsprintfW");}});

var wvsprintfA = Module.findExportByName("user32.dll", "wvsprintfA")
Interceptor.attach(wvsprintfA, {onLeave: function (args) {send("wvsprintfA");}});

var wvsprintfW = Module.findExportByName("user32.dll", "wvsprintfW")
Interceptor.attach(wvsprintfW, {onLeave: function (args) {send("wvsprintfW");}});

