var SpInfDetermineInfStyle = Module.findExportByName("spinf.dll", "SpInfDetermineInfStyle")
Interceptor.attach(SpInfDetermineInfStyle, {onLeave: function (args) {send("SpInfDetermineInfStyle");}});

var SpInfDoesInfContainString = Module.findExportByName("spinf.dll", "SpInfDoesInfContainString")
Interceptor.attach(SpInfDoesInfContainString, {onLeave: function (args) {send("SpInfDoesInfContainString");}});

var SpInfEnumInfSections = Module.findExportByName("spinf.dll", "SpInfEnumInfSections")
Interceptor.attach(SpInfEnumInfSections, {onLeave: function (args) {send("SpInfEnumInfSections");}});

var SpInfFileFullPathFromLineContext = Module.findExportByName("spinf.dll", "SpInfFileFullPathFromLineContext")
Interceptor.attach(SpInfFileFullPathFromLineContext, {onLeave: function (args) {send("SpInfFileFullPathFromLineContext");}});

var SpInfFilenameFromHandle = Module.findExportByName("spinf.dll", "SpInfFilenameFromHandle")
Interceptor.attach(SpInfFilenameFromHandle, {onLeave: function (args) {send("SpInfFilenameFromHandle");}});

var SpInfFindFirstLine = Module.findExportByName("spinf.dll", "SpInfFindFirstLine")
Interceptor.attach(SpInfFindFirstLine, {onLeave: function (args) {send("SpInfFindFirstLine");}});

var SpInfFindNextMatchLine = Module.findExportByName("spinf.dll", "SpInfFindNextMatchLine")
Interceptor.attach(SpInfFindNextMatchLine, {onLeave: function (args) {send("SpInfFindNextMatchLine");}});

var SpInfFindValueInSectionList = Module.findExportByName("spinf.dll", "SpInfFindValueInSectionList")
Interceptor.attach(SpInfFindValueInSectionList, {onLeave: function (args) {send("SpInfFindValueInSectionList");}});

var SpInfFreeInfFile = Module.findExportByName("spinf.dll", "SpInfFreeInfFile")
Interceptor.attach(SpInfFreeInfFile, {onLeave: function (args) {send("SpInfFreeInfFile");}});

var SpInfGetBestInstallSection = Module.findExportByName("spinf.dll", "SpInfGetBestInstallSection")
Interceptor.attach(SpInfGetBestInstallSection, {onLeave: function (args) {send("SpInfGetBestInstallSection");}});

var SpInfGetBestModelsSection = Module.findExportByName("spinf.dll", "SpInfGetBestModelsSection")
Interceptor.attach(SpInfGetBestModelsSection, {onLeave: function (args) {send("SpInfGetBestModelsSection");}});

var SpInfGetDriverVer = Module.findExportByName("spinf.dll", "SpInfGetDriverVer")
Interceptor.attach(SpInfGetDriverVer, {onLeave: function (args) {send("SpInfGetDriverVer");}});

var SpInfGetField = Module.findExportByName("spinf.dll", "SpInfGetField")
Interceptor.attach(SpInfGetField, {onLeave: function (args) {send("SpInfGetField");}});

var SpInfGetIndirectString = Module.findExportByName("spinf.dll", "SpInfGetIndirectString")
Interceptor.attach(SpInfGetIndirectString, {onLeave: function (args) {send("SpInfGetIndirectString");}});

var SpInfGetInfInformation = Module.findExportByName("spinf.dll", "SpInfGetInfInformation")
Interceptor.attach(SpInfGetInfInformation, {onLeave: function (args) {send("SpInfGetInfInformation");}});

var SpInfGetInfLineNumber = Module.findExportByName("spinf.dll", "SpInfGetInfLineNumber")
Interceptor.attach(SpInfGetInfLineNumber, {onLeave: function (args) {send("SpInfGetInfLineNumber");}});

var SpInfGetInfSections = Module.findExportByName("spinf.dll", "SpInfGetInfSections")
Interceptor.attach(SpInfGetInfSections, {onLeave: function (args) {send("SpInfGetInfSections");}});

var SpInfGetInfStyle = Module.findExportByName("spinf.dll", "SpInfGetInfStyle")
Interceptor.attach(SpInfGetInfStyle, {onLeave: function (args) {send("SpInfGetInfStyle");}});

var SpInfGetLanguageId = Module.findExportByName("spinf.dll", "SpInfGetLanguageId")
Interceptor.attach(SpInfGetLanguageId, {onLeave: function (args) {send("SpInfGetLanguageId");}});

var SpInfGetLineByIndex = Module.findExportByName("spinf.dll", "SpInfGetLineByIndex")
Interceptor.attach(SpInfGetLineByIndex, {onLeave: function (args) {send("SpInfGetLineByIndex");}});

var SpInfGetLineCount = Module.findExportByName("spinf.dll", "SpInfGetLineCount")
Interceptor.attach(SpInfGetLineCount, {onLeave: function (args) {send("SpInfGetLineCount");}});

var SpInfGetLineCountFromSection = Module.findExportByName("spinf.dll", "SpInfGetLineCountFromSection")
Interceptor.attach(SpInfGetLineCountFromSection, {onLeave: function (args) {send("SpInfGetLineCountFromSection");}});

var SpInfGetLineFieldCount = Module.findExportByName("spinf.dll", "SpInfGetLineFieldCount")
Interceptor.attach(SpInfGetLineFieldCount, {onLeave: function (args) {send("SpInfGetLineFieldCount");}});

var SpInfGetLineTextWithKey = Module.findExportByName("spinf.dll", "SpInfGetLineTextWithKey")
Interceptor.attach(SpInfGetLineTextWithKey, {onLeave: function (args) {send("SpInfGetLineTextWithKey");}});

var SpInfGetLogToken = Module.findExportByName("spinf.dll", "SpInfGetLogToken")
Interceptor.attach(SpInfGetLogToken, {onLeave: function (args) {send("SpInfGetLogToken");}});

var SpInfGetNextInf = Module.findExportByName("spinf.dll", "SpInfGetNextInf")
Interceptor.attach(SpInfGetNextInf, {onLeave: function (args) {send("SpInfGetNextInf");}});

var SpInfGetOriginalInfName = Module.findExportByName("spinf.dll", "SpInfGetOriginalInfName")
Interceptor.attach(SpInfGetOriginalInfName, {onLeave: function (args) {send("SpInfGetOriginalInfName");}});

var SpInfGetPathFromDirId = Module.findExportByName("spinf.dll", "SpInfGetPathFromDirId")
Interceptor.attach(SpInfGetPathFromDirId, {onLeave: function (args) {send("SpInfGetPathFromDirId");}});

var SpInfGetPrevInf = Module.findExportByName("spinf.dll", "SpInfGetPrevInf")
Interceptor.attach(SpInfGetPrevInf, {onLeave: function (args) {send("SpInfGetPrevInf");}});

var SpInfGetStringField = Module.findExportByName("spinf.dll", "SpInfGetStringField")
Interceptor.attach(SpInfGetStringField, {onLeave: function (args) {send("SpInfGetStringField");}});

var SpInfGetStringsSection = Module.findExportByName("spinf.dll", "SpInfGetStringsSection")
Interceptor.attach(SpInfGetStringsSection, {onLeave: function (args) {send("SpInfGetStringsSection");}});

var SpInfGetTargetPath = Module.findExportByName("spinf.dll", "SpInfGetTargetPath")
Interceptor.attach(SpInfGetTargetPath, {onLeave: function (args) {send("SpInfGetTargetPath");}});

var SpInfGetVersionDatum = Module.findExportByName("spinf.dll", "SpInfGetVersionDatum")
Interceptor.attach(SpInfGetVersionDatum, {onLeave: function (args) {send("SpInfGetVersionDatum");}});

var SpInfGetVersionNode = Module.findExportByName("spinf.dll", "SpInfGetVersionNode")
Interceptor.attach(SpInfGetVersionNode, {onLeave: function (args) {send("SpInfGetVersionNode");}});

var SpInfIsIndirectString = Module.findExportByName("spinf.dll", "SpInfIsIndirectString")
Interceptor.attach(SpInfIsIndirectString, {onLeave: function (args) {send("SpInfIsIndirectString");}});

var SpInfLineFromContext = Module.findExportByName("spinf.dll", "SpInfLineFromContext")
Interceptor.attach(SpInfLineFromContext, {onLeave: function (args) {send("SpInfLineFromContext");}});

var SpInfLineIsSearchable = Module.findExportByName("spinf.dll", "SpInfLineIsSearchable")
Interceptor.attach(SpInfLineIsSearchable, {onLeave: function (args) {send("SpInfLineIsSearchable");}});

var SpInfLoadInfFile = Module.findExportByName("spinf.dll", "SpInfLoadInfFile")
Interceptor.attach(SpInfLoadInfFile, {onLeave: function (args) {send("SpInfLoadInfFile");}});

var SpInfLocateLine = Module.findExportByName("spinf.dll", "SpInfLocateLine")
Interceptor.attach(SpInfLocateLine, {onLeave: function (args) {send("SpInfLocateLine");}});

var SpInfLocateSection = Module.findExportByName("spinf.dll", "SpInfLocateSection")
Interceptor.attach(SpInfLocateSection, {onLeave: function (args) {send("SpInfLocateSection");}});

var SpInfLockInf = Module.findExportByName("spinf.dll", "SpInfLockInf")
Interceptor.attach(SpInfLockInf, {onLeave: function (args) {send("SpInfLockInf");}});

var SpInfQueryInfFileInformation = Module.findExportByName("spinf.dll", "SpInfQueryInfFileInformation")
Interceptor.attach(SpInfQueryInfFileInformation, {onLeave: function (args) {send("SpInfQueryInfFileInformation");}});

var SpInfQueryInfVersionInformation = Module.findExportByName("spinf.dll", "SpInfQueryInfVersionInformation")
Interceptor.attach(SpInfQueryInfVersionInformation, {onLeave: function (args) {send("SpInfQueryInfVersionInformation");}});

var SpInfSectionNameFromLineContext = Module.findExportByName("spinf.dll", "SpInfSectionNameFromLineContext")
Interceptor.attach(SpInfSectionNameFromLineContext, {onLeave: function (args) {send("SpInfSectionNameFromLineContext");}});

var SpInfSetDirectoryId = Module.findExportByName("spinf.dll", "SpInfSetDirectoryId")
Interceptor.attach(SpInfSetDirectoryId, {onLeave: function (args) {send("SpInfSetDirectoryId");}});

var SpInfSourcePathFromHandle = Module.findExportByName("spinf.dll", "SpInfSourcePathFromHandle")
Interceptor.attach(SpInfSourcePathFromHandle, {onLeave: function (args) {send("SpInfSourcePathFromHandle");}});

var SpInfUnlockInf = Module.findExportByName("spinf.dll", "SpInfUnlockInf")
Interceptor.attach(SpInfUnlockInf, {onLeave: function (args) {send("SpInfUnlockInf");}});

var SpInfVersionNodeFromInfInformation = Module.findExportByName("spinf.dll", "SpInfVersionNodeFromInfInformation")
Interceptor.attach(SpInfVersionNodeFromInfInformation, {onLeave: function (args) {send("SpInfVersionNodeFromInfInformation");}});

