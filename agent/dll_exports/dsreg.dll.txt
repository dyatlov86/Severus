var DsrBeginDelegatedWorkplaceJoin = Module.findExportByName("dsreg.dll", "DsrBeginDelegatedWorkplaceJoin")
Interceptor.attach(DsrBeginDelegatedWorkplaceJoin, {onLeave: function (args) {send("DsrBeginDelegatedWorkplaceJoin");}});

var DsrBeginDeviceAndResourceAccountJoin = Module.findExportByName("dsreg.dll", "DsrBeginDeviceAndResourceAccountJoin")
Interceptor.attach(DsrBeginDeviceAndResourceAccountJoin, {onLeave: function (args) {send("DsrBeginDeviceAndResourceAccountJoin");}});

var DsrBeginDeviceAndResourceAccountJoinEx = Module.findExportByName("dsreg.dll", "DsrBeginDeviceAndResourceAccountJoinEx")
Interceptor.attach(DsrBeginDeviceAndResourceAccountJoinEx, {onLeave: function (args) {send("DsrBeginDeviceAndResourceAccountJoinEx");}});

var DsrBeginDeviceJoin = Module.findExportByName("dsreg.dll", "DsrBeginDeviceJoin")
Interceptor.attach(DsrBeginDeviceJoin, {onLeave: function (args) {send("DsrBeginDeviceJoin");}});

var DsrBeginDeviceJoinEx = Module.findExportByName("dsreg.dll", "DsrBeginDeviceJoinEx")
Interceptor.attach(DsrBeginDeviceJoinEx, {onLeave: function (args) {send("DsrBeginDeviceJoinEx");}});

var DsrBeginDeviceUnjoin = Module.findExportByName("dsreg.dll", "DsrBeginDeviceUnjoin")
Interceptor.attach(DsrBeginDeviceUnjoin, {onLeave: function (args) {send("DsrBeginDeviceUnjoin");}});

var DsrBeginDeviceUpdate = Module.findExportByName("dsreg.dll", "DsrBeginDeviceUpdate")
Interceptor.attach(DsrBeginDeviceUpdate, {onLeave: function (args) {send("DsrBeginDeviceUpdate");}});

var DsrBeginDiscover = Module.findExportByName("dsreg.dll", "DsrBeginDiscover")
Interceptor.attach(DsrBeginDiscover, {onLeave: function (args) {send("DsrBeginDiscover");}});

var DsrBeginPreprovisionedDeviceJoin = Module.findExportByName("dsreg.dll", "DsrBeginPreprovisionedDeviceJoin")
Interceptor.attach(DsrBeginPreprovisionedDeviceJoin, {onLeave: function (args) {send("DsrBeginPreprovisionedDeviceJoin");}});

var DsrBeginPreprovisionedDeviceJoinEx = Module.findExportByName("dsreg.dll", "DsrBeginPreprovisionedDeviceJoinEx")
Interceptor.attach(DsrBeginPreprovisionedDeviceJoinEx, {onLeave: function (args) {send("DsrBeginPreprovisionedDeviceJoinEx");}});

var DsrBeginRecovery = Module.findExportByName("dsreg.dll", "DsrBeginRecovery")
Interceptor.attach(DsrBeginRecovery, {onLeave: function (args) {send("DsrBeginRecovery");}});

var DsrBeginWorkplaceJoin = Module.findExportByName("dsreg.dll", "DsrBeginWorkplaceJoin")
Interceptor.attach(DsrBeginWorkplaceJoin, {onLeave: function (args) {send("DsrBeginWorkplaceJoin");}});

var DsrBeginWorkplaceUnjoin = Module.findExportByName("dsreg.dll", "DsrBeginWorkplaceUnjoin")
Interceptor.attach(DsrBeginWorkplaceUnjoin, {onLeave: function (args) {send("DsrBeginWorkplaceUnjoin");}});

var DsrBeginWorkplaceUpdate = Module.findExportByName("dsreg.dll", "DsrBeginWorkplaceUpdate")
Interceptor.attach(DsrBeginWorkplaceUpdate, {onLeave: function (args) {send("DsrBeginWorkplaceUpdate");}});

var DsrCLI = Module.findExportByName("dsreg.dll", "DsrCLI")
Interceptor.attach(DsrCLI, {onLeave: function (args) {send("DsrCLI");}});

var DsrCanCurrentUserProvisionNgcKey = Module.findExportByName("dsreg.dll", "DsrCanCurrentUserProvisionNgcKey")
Interceptor.attach(DsrCanCurrentUserProvisionNgcKey, {onLeave: function (args) {send("DsrCanCurrentUserProvisionNgcKey");}});

var DsrCanCurrentUserResetNgcKey = Module.findExportByName("dsreg.dll", "DsrCanCurrentUserResetNgcKey")
Interceptor.attach(DsrCanCurrentUserResetNgcKey, {onLeave: function (args) {send("DsrCanCurrentUserResetNgcKey");}});

var DsrDeviceHostNameUpdate = Module.findExportByName("dsreg.dll", "DsrDeviceHostNameUpdate")
Interceptor.attach(DsrDeviceHostNameUpdate, {onLeave: function (args) {send("DsrDeviceHostNameUpdate");}});

var DsrEndRecovery = Module.findExportByName("dsreg.dll", "DsrEndRecovery")
Interceptor.attach(DsrEndRecovery, {onLeave: function (args) {send("DsrEndRecovery");}});

var DsrFreeCxhScenarioInfo = Module.findExportByName("dsreg.dll", "DsrFreeCxhScenarioInfo")
Interceptor.attach(DsrFreeCxhScenarioInfo, {onLeave: function (args) {send("DsrFreeCxhScenarioInfo");}});

var DsrFreeDiscoveryMetadata = Module.findExportByName("dsreg.dll", "DsrFreeDiscoveryMetadata")
Interceptor.attach(DsrFreeDiscoveryMetadata, {onLeave: function (args) {send("DsrFreeDiscoveryMetadata");}});

var DsrFreeDomainRegistrationData = Module.findExportByName("dsreg.dll", "DsrFreeDomainRegistrationData")
Interceptor.attach(DsrFreeDomainRegistrationData, {onLeave: function (args) {send("DsrFreeDomainRegistrationData");}});

var DsrFreeJoinInfo = Module.findExportByName("dsreg.dll", "DsrFreeJoinInfo")
Interceptor.attach(DsrFreeJoinInfo, {onLeave: function (args) {send("DsrFreeJoinInfo");}});

var DsrFreeJoinInfoEx = Module.findExportByName("dsreg.dll", "DsrFreeJoinInfoEx")
Interceptor.attach(DsrFreeJoinInfoEx, {onLeave: function (args) {send("DsrFreeJoinInfoEx");}});

var DsrGetCurrentUserNgcProvisionStatus = Module.findExportByName("dsreg.dll", "DsrGetCurrentUserNgcProvisionStatus")
Interceptor.attach(DsrGetCurrentUserNgcProvisionStatus, {onLeave: function (args) {send("DsrGetCurrentUserNgcProvisionStatus");}});

var DsrGetCxhScenarioInfo = Module.findExportByName("dsreg.dll", "DsrGetCxhScenarioInfo")
Interceptor.attach(DsrGetCxhScenarioInfo, {onLeave: function (args) {send("DsrGetCxhScenarioInfo");}});

var DsrGetDomainRegistrationData = Module.findExportByName("dsreg.dll", "DsrGetDomainRegistrationData")
Interceptor.attach(DsrGetDomainRegistrationData, {onLeave: function (args) {send("DsrGetDomainRegistrationData");}});

var DsrGetJoinInfo = Module.findExportByName("dsreg.dll", "DsrGetJoinInfo")
Interceptor.attach(DsrGetJoinInfo, {onLeave: function (args) {send("DsrGetJoinInfo");}});

var DsrGetJoinInfoEx = Module.findExportByName("dsreg.dll", "DsrGetJoinInfoEx")
Interceptor.attach(DsrGetJoinInfoEx, {onLeave: function (args) {send("DsrGetJoinInfoEx");}});

var DsrGetPrtAuthorityInfo = Module.findExportByName("dsreg.dll", "DsrGetPrtAuthorityInfo")
Interceptor.attach(DsrGetPrtAuthorityInfo, {onLeave: function (args) {send("DsrGetPrtAuthorityInfo");}});

var DsrGetResourceAccount = Module.findExportByName("dsreg.dll", "DsrGetResourceAccount")
Interceptor.attach(DsrGetResourceAccount, {onLeave: function (args) {send("DsrGetResourceAccount");}});

var DsrIsDeviceJoined = Module.findExportByName("dsreg.dll", "DsrIsDeviceJoined")
Interceptor.attach(DsrIsDeviceJoined, {onLeave: function (args) {send("DsrIsDeviceJoined");}});

var DsrIsDeviceJoinedEx = Module.findExportByName("dsreg.dll", "DsrIsDeviceJoinedEx")
Interceptor.attach(DsrIsDeviceJoinedEx, {onLeave: function (args) {send("DsrIsDeviceJoinedEx");}});

var DsrIsWorkplaceJoined = Module.findExportByName("dsreg.dll", "DsrIsWorkplaceJoined")
Interceptor.attach(DsrIsWorkplaceJoined, {onLeave: function (args) {send("DsrIsWorkplaceJoined");}});

var DsrSaveDeviceTokenProperties = Module.findExportByName("dsreg.dll", "DsrSaveDeviceTokenProperties")
Interceptor.attach(DsrSaveDeviceTokenProperties, {onLeave: function (args) {send("DsrSaveDeviceTokenProperties");}});

var DsrSaveWorkplaceTokenProperties = Module.findExportByName("dsreg.dll", "DsrSaveWorkplaceTokenProperties")
Interceptor.attach(DsrSaveWorkplaceTokenProperties, {onLeave: function (args) {send("DsrSaveWorkplaceTokenProperties");}});

var DsrWriteAutoJoinSvcAdminEvent = Module.findExportByName("dsreg.dll", "DsrWriteAutoJoinSvcAdminEvent")
Interceptor.attach(DsrWriteAutoJoinSvcAdminEvent, {onLeave: function (args) {send("DsrWriteAutoJoinSvcAdminEvent");}});

var DsrWriteAutoJoinSvcDebugEvent = Module.findExportByName("dsreg.dll", "DsrWriteAutoJoinSvcDebugEvent")
Interceptor.attach(DsrWriteAutoJoinSvcDebugEvent, {onLeave: function (args) {send("DsrWriteAutoJoinSvcDebugEvent");}});

var DsrWriteAutoJoinSvcTriggerEvent = Module.findExportByName("dsreg.dll", "DsrWriteAutoJoinSvcTriggerEvent")
Interceptor.attach(DsrWriteAutoJoinSvcTriggerEvent, {onLeave: function (args) {send("DsrWriteAutoJoinSvcTriggerEvent");}});

var FidoDeregisterKey = Module.findExportByName("dsreg.dll", "FidoDeregisterKey")
Interceptor.attach(FidoDeregisterKey, {onLeave: function (args) {send("FidoDeregisterKey");}});

var FidoRegisterKey = Module.findExportByName("dsreg.dll", "FidoRegisterKey")
Interceptor.attach(FidoRegisterKey, {onLeave: function (args) {send("FidoRegisterKey");}});

var NgcDeregisterKey = Module.findExportByName("dsreg.dll", "NgcDeregisterKey")
Interceptor.attach(NgcDeregisterKey, {onLeave: function (args) {send("NgcDeregisterKey");}});

var NgcGetKeyId = Module.findExportByName("dsreg.dll", "NgcGetKeyId")
Interceptor.attach(NgcGetKeyId, {onLeave: function (args) {send("NgcGetKeyId");}});

var NgcGetLogonCertPolicy = Module.findExportByName("dsreg.dll", "NgcGetLogonCertPolicy")
Interceptor.attach(NgcGetLogonCertPolicy, {onLeave: function (args) {send("NgcGetLogonCertPolicy");}});

var NgcGetStatistics = Module.findExportByName("dsreg.dll", "NgcGetStatistics")
Interceptor.attach(NgcGetStatistics, {onLeave: function (args) {send("NgcGetStatistics");}});

var NgcIncrementPinRetryAttempts = Module.findExportByName("dsreg.dll", "NgcIncrementPinRetryAttempts")
Interceptor.attach(NgcIncrementPinRetryAttempts, {onLeave: function (args) {send("NgcIncrementPinRetryAttempts");}});

var NgcNeedProvision = Module.findExportByName("dsreg.dll", "NgcNeedProvision")
Interceptor.attach(NgcNeedProvision, {onLeave: function (args) {send("NgcNeedProvision");}});

var NgcNeedProvisionForAccount = Module.findExportByName("dsreg.dll", "NgcNeedProvisionForAccount")
Interceptor.attach(NgcNeedProvisionForAccount, {onLeave: function (args) {send("NgcNeedProvisionForAccount");}});

var NgcReadRegistryValue = Module.findExportByName("dsreg.dll", "NgcReadRegistryValue")
Interceptor.attach(NgcReadRegistryValue, {onLeave: function (args) {send("NgcReadRegistryValue");}});

var NgcRegisterKey = Module.findExportByName("dsreg.dll", "NgcRegisterKey")
Interceptor.attach(NgcRegisterKey, {onLeave: function (args) {send("NgcRegisterKey");}});

var NgcResetPinRetryAttempts = Module.findExportByName("dsreg.dll", "NgcResetPinRetryAttempts")
Interceptor.attach(NgcResetPinRetryAttempts, {onLeave: function (args) {send("NgcResetPinRetryAttempts");}});

var NgcUpdateCertEnrollStatistics = Module.findExportByName("dsreg.dll", "NgcUpdateCertEnrollStatistics")
Interceptor.attach(NgcUpdateCertEnrollStatistics, {onLeave: function (args) {send("NgcUpdateCertEnrollStatistics");}});

var NgcUpdateStatistics = Module.findExportByName("dsreg.dll", "NgcUpdateStatistics")
Interceptor.attach(NgcUpdateStatistics, {onLeave: function (args) {send("NgcUpdateStatistics");}});

