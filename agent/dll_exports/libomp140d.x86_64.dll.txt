var KMP_ALIGNED_MALLOC = Module.findExportByName("libomp140d.x86_64.dll", "KMP_ALIGNED_MALLOC")
Interceptor.attach(KMP_ALIGNED_MALLOC, {onLeave: function (args) {send("KMP_ALIGNED_MALLOC");}});

var KMP_CALLOC = Module.findExportByName("libomp140d.x86_64.dll", "KMP_CALLOC")
Interceptor.attach(KMP_CALLOC, {onLeave: function (args) {send("KMP_CALLOC");}});

var KMP_CREATE_AFFINITY_MASK = Module.findExportByName("libomp140d.x86_64.dll", "KMP_CREATE_AFFINITY_MASK")
Interceptor.attach(KMP_CREATE_AFFINITY_MASK, {onLeave: function (args) {send("KMP_CREATE_AFFINITY_MASK");}});

var KMP_DESTROY_AFFINITY_MASK = Module.findExportByName("libomp140d.x86_64.dll", "KMP_DESTROY_AFFINITY_MASK")
Interceptor.attach(KMP_DESTROY_AFFINITY_MASK, {onLeave: function (args) {send("KMP_DESTROY_AFFINITY_MASK");}});

var KMP_FREE = Module.findExportByName("libomp140d.x86_64.dll", "KMP_FREE")
Interceptor.attach(KMP_FREE, {onLeave: function (args) {send("KMP_FREE");}});

var KMP_GET_AFFINITY = Module.findExportByName("libomp140d.x86_64.dll", "KMP_GET_AFFINITY")
Interceptor.attach(KMP_GET_AFFINITY, {onLeave: function (args) {send("KMP_GET_AFFINITY");}});

var KMP_GET_AFFINITY_MASK_PROC = Module.findExportByName("libomp140d.x86_64.dll", "KMP_GET_AFFINITY_MASK_PROC")
Interceptor.attach(KMP_GET_AFFINITY_MASK_PROC, {onLeave: function (args) {send("KMP_GET_AFFINITY_MASK_PROC");}});

var KMP_GET_AFFINITY_MAX_PROC = Module.findExportByName("libomp140d.x86_64.dll", "KMP_GET_AFFINITY_MAX_PROC")
Interceptor.attach(KMP_GET_AFFINITY_MAX_PROC, {onLeave: function (args) {send("KMP_GET_AFFINITY_MAX_PROC");}});

var KMP_GET_BLOCKTIME = Module.findExportByName("libomp140d.x86_64.dll", "KMP_GET_BLOCKTIME")
Interceptor.attach(KMP_GET_BLOCKTIME, {onLeave: function (args) {send("KMP_GET_BLOCKTIME");}});

var KMP_GET_CANCELLATION_STATUS = Module.findExportByName("libomp140d.x86_64.dll", "KMP_GET_CANCELLATION_STATUS")
Interceptor.attach(KMP_GET_CANCELLATION_STATUS, {onLeave: function (args) {send("KMP_GET_CANCELLATION_STATUS");}});

var KMP_GET_LIBRARY = Module.findExportByName("libomp140d.x86_64.dll", "KMP_GET_LIBRARY")
Interceptor.attach(KMP_GET_LIBRARY, {onLeave: function (args) {send("KMP_GET_LIBRARY");}});

var KMP_GET_NUM_KNOWN_THREADS = Module.findExportByName("libomp140d.x86_64.dll", "KMP_GET_NUM_KNOWN_THREADS")
Interceptor.attach(KMP_GET_NUM_KNOWN_THREADS, {onLeave: function (args) {send("KMP_GET_NUM_KNOWN_THREADS");}});

var KMP_GET_STACKSIZE = Module.findExportByName("libomp140d.x86_64.dll", "KMP_GET_STACKSIZE")
Interceptor.attach(KMP_GET_STACKSIZE, {onLeave: function (args) {send("KMP_GET_STACKSIZE");}});

var KMP_GET_STACKSIZE_S = Module.findExportByName("libomp140d.x86_64.dll", "KMP_GET_STACKSIZE_S")
Interceptor.attach(KMP_GET_STACKSIZE_S, {onLeave: function (args) {send("KMP_GET_STACKSIZE_S");}});

var KMP_MALLOC = Module.findExportByName("libomp140d.x86_64.dll", "KMP_MALLOC")
Interceptor.attach(KMP_MALLOC, {onLeave: function (args) {send("KMP_MALLOC");}});

var KMP_REALLOC = Module.findExportByName("libomp140d.x86_64.dll", "KMP_REALLOC")
Interceptor.attach(KMP_REALLOC, {onLeave: function (args) {send("KMP_REALLOC");}});

var KMP_SET_AFFINITY = Module.findExportByName("libomp140d.x86_64.dll", "KMP_SET_AFFINITY")
Interceptor.attach(KMP_SET_AFFINITY, {onLeave: function (args) {send("KMP_SET_AFFINITY");}});

var KMP_SET_AFFINITY_MASK_PROC = Module.findExportByName("libomp140d.x86_64.dll", "KMP_SET_AFFINITY_MASK_PROC")
Interceptor.attach(KMP_SET_AFFINITY_MASK_PROC, {onLeave: function (args) {send("KMP_SET_AFFINITY_MASK_PROC");}});

var KMP_SET_BLOCKTIME = Module.findExportByName("libomp140d.x86_64.dll", "KMP_SET_BLOCKTIME")
Interceptor.attach(KMP_SET_BLOCKTIME, {onLeave: function (args) {send("KMP_SET_BLOCKTIME");}});

var KMP_SET_DEFAULTS = Module.findExportByName("libomp140d.x86_64.dll", "KMP_SET_DEFAULTS")
Interceptor.attach(KMP_SET_DEFAULTS, {onLeave: function (args) {send("KMP_SET_DEFAULTS");}});

var KMP_SET_DISP_NUM_BUFFERS = Module.findExportByName("libomp140d.x86_64.dll", "KMP_SET_DISP_NUM_BUFFERS")
Interceptor.attach(KMP_SET_DISP_NUM_BUFFERS, {onLeave: function (args) {send("KMP_SET_DISP_NUM_BUFFERS");}});

var KMP_SET_LIBRARY = Module.findExportByName("libomp140d.x86_64.dll", "KMP_SET_LIBRARY")
Interceptor.attach(KMP_SET_LIBRARY, {onLeave: function (args) {send("KMP_SET_LIBRARY");}});

var KMP_SET_LIBRARY_SERIAL = Module.findExportByName("libomp140d.x86_64.dll", "KMP_SET_LIBRARY_SERIAL")
Interceptor.attach(KMP_SET_LIBRARY_SERIAL, {onLeave: function (args) {send("KMP_SET_LIBRARY_SERIAL");}});

var KMP_SET_LIBRARY_THROUGHPUT = Module.findExportByName("libomp140d.x86_64.dll", "KMP_SET_LIBRARY_THROUGHPUT")
Interceptor.attach(KMP_SET_LIBRARY_THROUGHPUT, {onLeave: function (args) {send("KMP_SET_LIBRARY_THROUGHPUT");}});

var KMP_SET_LIBRARY_TURNAROUND = Module.findExportByName("libomp140d.x86_64.dll", "KMP_SET_LIBRARY_TURNAROUND")
Interceptor.attach(KMP_SET_LIBRARY_TURNAROUND, {onLeave: function (args) {send("KMP_SET_LIBRARY_TURNAROUND");}});

var KMP_SET_STACKSIZE = Module.findExportByName("libomp140d.x86_64.dll", "KMP_SET_STACKSIZE")
Interceptor.attach(KMP_SET_STACKSIZE, {onLeave: function (args) {send("KMP_SET_STACKSIZE");}});

var KMP_SET_STACKSIZE_S = Module.findExportByName("libomp140d.x86_64.dll", "KMP_SET_STACKSIZE_S")
Interceptor.attach(KMP_SET_STACKSIZE_S, {onLeave: function (args) {send("KMP_SET_STACKSIZE_S");}});

var KMP_SET_WARNINGS_OFF = Module.findExportByName("libomp140d.x86_64.dll", "KMP_SET_WARNINGS_OFF")
Interceptor.attach(KMP_SET_WARNINGS_OFF, {onLeave: function (args) {send("KMP_SET_WARNINGS_OFF");}});

var KMP_SET_WARNINGS_ON = Module.findExportByName("libomp140d.x86_64.dll", "KMP_SET_WARNINGS_ON")
Interceptor.attach(KMP_SET_WARNINGS_ON, {onLeave: function (args) {send("KMP_SET_WARNINGS_ON");}});

var KMP_UNSET_AFFINITY_MASK_PROC = Module.findExportByName("libomp140d.x86_64.dll", "KMP_UNSET_AFFINITY_MASK_PROC")
Interceptor.attach(KMP_UNSET_AFFINITY_MASK_PROC, {onLeave: function (args) {send("KMP_UNSET_AFFINITY_MASK_PROC");}});

var OMP_CAPTURE_AFFINITY = Module.findExportByName("libomp140d.x86_64.dll", "OMP_CAPTURE_AFFINITY")
Interceptor.attach(OMP_CAPTURE_AFFINITY, {onLeave: function (args) {send("OMP_CAPTURE_AFFINITY");}});

var OMP_CONTROL_TOOL = Module.findExportByName("libomp140d.x86_64.dll", "OMP_CONTROL_TOOL")
Interceptor.attach(OMP_CONTROL_TOOL, {onLeave: function (args) {send("OMP_CONTROL_TOOL");}});

var OMP_DESTROY_ALLOCATOR = Module.findExportByName("libomp140d.x86_64.dll", "OMP_DESTROY_ALLOCATOR")
Interceptor.attach(OMP_DESTROY_ALLOCATOR, {onLeave: function (args) {send("OMP_DESTROY_ALLOCATOR");}});

var OMP_DESTROY_LOCK = Module.findExportByName("libomp140d.x86_64.dll", "OMP_DESTROY_LOCK")
Interceptor.attach(OMP_DESTROY_LOCK, {onLeave: function (args) {send("OMP_DESTROY_LOCK");}});

var OMP_DESTROY_NEST_LOCK = Module.findExportByName("libomp140d.x86_64.dll", "OMP_DESTROY_NEST_LOCK")
Interceptor.attach(OMP_DESTROY_NEST_LOCK, {onLeave: function (args) {send("OMP_DESTROY_NEST_LOCK");}});

var OMP_DISPLAY_AFFINITY = Module.findExportByName("libomp140d.x86_64.dll", "OMP_DISPLAY_AFFINITY")
Interceptor.attach(OMP_DISPLAY_AFFINITY, {onLeave: function (args) {send("OMP_DISPLAY_AFFINITY");}});

var OMP_DISPLAY_ENV = Module.findExportByName("libomp140d.x86_64.dll", "OMP_DISPLAY_ENV")
Interceptor.attach(OMP_DISPLAY_ENV, {onLeave: function (args) {send("OMP_DISPLAY_ENV");}});

var OMP_FULFILL_EVENT = Module.findExportByName("libomp140d.x86_64.dll", "OMP_FULFILL_EVENT")
Interceptor.attach(OMP_FULFILL_EVENT, {onLeave: function (args) {send("OMP_FULFILL_EVENT");}});

var OMP_GET_ACTIVE_LEVEL = Module.findExportByName("libomp140d.x86_64.dll", "OMP_GET_ACTIVE_LEVEL")
Interceptor.attach(OMP_GET_ACTIVE_LEVEL, {onLeave: function (args) {send("OMP_GET_ACTIVE_LEVEL");}});

var OMP_GET_AFFINITY_FORMAT = Module.findExportByName("libomp140d.x86_64.dll", "OMP_GET_AFFINITY_FORMAT")
Interceptor.attach(OMP_GET_AFFINITY_FORMAT, {onLeave: function (args) {send("OMP_GET_AFFINITY_FORMAT");}});

var OMP_GET_ANCESTOR_THREAD_NUM = Module.findExportByName("libomp140d.x86_64.dll", "OMP_GET_ANCESTOR_THREAD_NUM")
Interceptor.attach(OMP_GET_ANCESTOR_THREAD_NUM, {onLeave: function (args) {send("OMP_GET_ANCESTOR_THREAD_NUM");}});

var OMP_GET_CANCELLATION = Module.findExportByName("libomp140d.x86_64.dll", "OMP_GET_CANCELLATION")
Interceptor.attach(OMP_GET_CANCELLATION, {onLeave: function (args) {send("OMP_GET_CANCELLATION");}});

var OMP_GET_DEFAULT_ALLOCATOR = Module.findExportByName("libomp140d.x86_64.dll", "OMP_GET_DEFAULT_ALLOCATOR")
Interceptor.attach(OMP_GET_DEFAULT_ALLOCATOR, {onLeave: function (args) {send("OMP_GET_DEFAULT_ALLOCATOR");}});

var OMP_GET_DEFAULT_DEVICE = Module.findExportByName("libomp140d.x86_64.dll", "OMP_GET_DEFAULT_DEVICE")
Interceptor.attach(OMP_GET_DEFAULT_DEVICE, {onLeave: function (args) {send("OMP_GET_DEFAULT_DEVICE");}});

var OMP_GET_DEVICE_NUM = Module.findExportByName("libomp140d.x86_64.dll", "OMP_GET_DEVICE_NUM")
Interceptor.attach(OMP_GET_DEVICE_NUM, {onLeave: function (args) {send("OMP_GET_DEVICE_NUM");}});

var OMP_GET_DYNAMIC = Module.findExportByName("libomp140d.x86_64.dll", "OMP_GET_DYNAMIC")
Interceptor.attach(OMP_GET_DYNAMIC, {onLeave: function (args) {send("OMP_GET_DYNAMIC");}});

var OMP_GET_INITIAL_DEVICE = Module.findExportByName("libomp140d.x86_64.dll", "OMP_GET_INITIAL_DEVICE")
Interceptor.attach(OMP_GET_INITIAL_DEVICE, {onLeave: function (args) {send("OMP_GET_INITIAL_DEVICE");}});

var OMP_GET_LEVEL = Module.findExportByName("libomp140d.x86_64.dll", "OMP_GET_LEVEL")
Interceptor.attach(OMP_GET_LEVEL, {onLeave: function (args) {send("OMP_GET_LEVEL");}});

var OMP_GET_MAX_ACTIVE_LEVELS = Module.findExportByName("libomp140d.x86_64.dll", "OMP_GET_MAX_ACTIVE_LEVELS")
Interceptor.attach(OMP_GET_MAX_ACTIVE_LEVELS, {onLeave: function (args) {send("OMP_GET_MAX_ACTIVE_LEVELS");}});

var OMP_GET_MAX_TASK_PRIORITY = Module.findExportByName("libomp140d.x86_64.dll", "OMP_GET_MAX_TASK_PRIORITY")
Interceptor.attach(OMP_GET_MAX_TASK_PRIORITY, {onLeave: function (args) {send("OMP_GET_MAX_TASK_PRIORITY");}});

var OMP_GET_MAX_THREADS = Module.findExportByName("libomp140d.x86_64.dll", "OMP_GET_MAX_THREADS")
Interceptor.attach(OMP_GET_MAX_THREADS, {onLeave: function (args) {send("OMP_GET_MAX_THREADS");}});

var OMP_GET_NESTED = Module.findExportByName("libomp140d.x86_64.dll", "OMP_GET_NESTED")
Interceptor.attach(OMP_GET_NESTED, {onLeave: function (args) {send("OMP_GET_NESTED");}});

var OMP_GET_NUM_DEVICES = Module.findExportByName("libomp140d.x86_64.dll", "OMP_GET_NUM_DEVICES")
Interceptor.attach(OMP_GET_NUM_DEVICES, {onLeave: function (args) {send("OMP_GET_NUM_DEVICES");}});

var OMP_GET_NUM_PLACES = Module.findExportByName("libomp140d.x86_64.dll", "OMP_GET_NUM_PLACES")
Interceptor.attach(OMP_GET_NUM_PLACES, {onLeave: function (args) {send("OMP_GET_NUM_PLACES");}});

var OMP_GET_NUM_PROCS = Module.findExportByName("libomp140d.x86_64.dll", "OMP_GET_NUM_PROCS")
Interceptor.attach(OMP_GET_NUM_PROCS, {onLeave: function (args) {send("OMP_GET_NUM_PROCS");}});

var OMP_GET_NUM_TEAMS = Module.findExportByName("libomp140d.x86_64.dll", "OMP_GET_NUM_TEAMS")
Interceptor.attach(OMP_GET_NUM_TEAMS, {onLeave: function (args) {send("OMP_GET_NUM_TEAMS");}});

var OMP_GET_NUM_THREADS = Module.findExportByName("libomp140d.x86_64.dll", "OMP_GET_NUM_THREADS")
Interceptor.attach(OMP_GET_NUM_THREADS, {onLeave: function (args) {send("OMP_GET_NUM_THREADS");}});

var OMP_GET_PARTITION_NUM_PLACES = Module.findExportByName("libomp140d.x86_64.dll", "OMP_GET_PARTITION_NUM_PLACES")
Interceptor.attach(OMP_GET_PARTITION_NUM_PLACES, {onLeave: function (args) {send("OMP_GET_PARTITION_NUM_PLACES");}});

var OMP_GET_PARTITION_PLACE_NUMS = Module.findExportByName("libomp140d.x86_64.dll", "OMP_GET_PARTITION_PLACE_NUMS")
Interceptor.attach(OMP_GET_PARTITION_PLACE_NUMS, {onLeave: function (args) {send("OMP_GET_PARTITION_PLACE_NUMS");}});

var OMP_GET_PLACE_NUM = Module.findExportByName("libomp140d.x86_64.dll", "OMP_GET_PLACE_NUM")
Interceptor.attach(OMP_GET_PLACE_NUM, {onLeave: function (args) {send("OMP_GET_PLACE_NUM");}});

var OMP_GET_PLACE_NUM_PROCS = Module.findExportByName("libomp140d.x86_64.dll", "OMP_GET_PLACE_NUM_PROCS")
Interceptor.attach(OMP_GET_PLACE_NUM_PROCS, {onLeave: function (args) {send("OMP_GET_PLACE_NUM_PROCS");}});

var OMP_GET_PLACE_PROC_IDS = Module.findExportByName("libomp140d.x86_64.dll", "OMP_GET_PLACE_PROC_IDS")
Interceptor.attach(OMP_GET_PLACE_PROC_IDS, {onLeave: function (args) {send("OMP_GET_PLACE_PROC_IDS");}});

var OMP_GET_PROC_BIND = Module.findExportByName("libomp140d.x86_64.dll", "OMP_GET_PROC_BIND")
Interceptor.attach(OMP_GET_PROC_BIND, {onLeave: function (args) {send("OMP_GET_PROC_BIND");}});

var OMP_GET_SCHEDULE = Module.findExportByName("libomp140d.x86_64.dll", "OMP_GET_SCHEDULE")
Interceptor.attach(OMP_GET_SCHEDULE, {onLeave: function (args) {send("OMP_GET_SCHEDULE");}});

var OMP_GET_SUPPORTED_ACTIVE_LEVELS = Module.findExportByName("libomp140d.x86_64.dll", "OMP_GET_SUPPORTED_ACTIVE_LEVELS")
Interceptor.attach(OMP_GET_SUPPORTED_ACTIVE_LEVELS, {onLeave: function (args) {send("OMP_GET_SUPPORTED_ACTIVE_LEVELS");}});

var OMP_GET_TEAM_NUM = Module.findExportByName("libomp140d.x86_64.dll", "OMP_GET_TEAM_NUM")
Interceptor.attach(OMP_GET_TEAM_NUM, {onLeave: function (args) {send("OMP_GET_TEAM_NUM");}});

var OMP_GET_TEAM_SIZE = Module.findExportByName("libomp140d.x86_64.dll", "OMP_GET_TEAM_SIZE")
Interceptor.attach(OMP_GET_TEAM_SIZE, {onLeave: function (args) {send("OMP_GET_TEAM_SIZE");}});

var OMP_GET_THREAD_LIMIT = Module.findExportByName("libomp140d.x86_64.dll", "OMP_GET_THREAD_LIMIT")
Interceptor.attach(OMP_GET_THREAD_LIMIT, {onLeave: function (args) {send("OMP_GET_THREAD_LIMIT");}});

var OMP_GET_THREAD_NUM = Module.findExportByName("libomp140d.x86_64.dll", "OMP_GET_THREAD_NUM")
Interceptor.attach(OMP_GET_THREAD_NUM, {onLeave: function (args) {send("OMP_GET_THREAD_NUM");}});

var OMP_GET_WTICK = Module.findExportByName("libomp140d.x86_64.dll", "OMP_GET_WTICK")
Interceptor.attach(OMP_GET_WTICK, {onLeave: function (args) {send("OMP_GET_WTICK");}});

var OMP_GET_WTIME = Module.findExportByName("libomp140d.x86_64.dll", "OMP_GET_WTIME")
Interceptor.attach(OMP_GET_WTIME, {onLeave: function (args) {send("OMP_GET_WTIME");}});

var OMP_INIT_ALLOCATOR = Module.findExportByName("libomp140d.x86_64.dll", "OMP_INIT_ALLOCATOR")
Interceptor.attach(OMP_INIT_ALLOCATOR, {onLeave: function (args) {send("OMP_INIT_ALLOCATOR");}});

var OMP_INIT_LOCK = Module.findExportByName("libomp140d.x86_64.dll", "OMP_INIT_LOCK")
Interceptor.attach(OMP_INIT_LOCK, {onLeave: function (args) {send("OMP_INIT_LOCK");}});

var OMP_INIT_LOCK_WITH_HINT = Module.findExportByName("libomp140d.x86_64.dll", "OMP_INIT_LOCK_WITH_HINT")
Interceptor.attach(OMP_INIT_LOCK_WITH_HINT, {onLeave: function (args) {send("OMP_INIT_LOCK_WITH_HINT");}});

var OMP_INIT_NEST_LOCK = Module.findExportByName("libomp140d.x86_64.dll", "OMP_INIT_NEST_LOCK")
Interceptor.attach(OMP_INIT_NEST_LOCK, {onLeave: function (args) {send("OMP_INIT_NEST_LOCK");}});

var OMP_INIT_NEST_LOCK_WITH_HINT = Module.findExportByName("libomp140d.x86_64.dll", "OMP_INIT_NEST_LOCK_WITH_HINT")
Interceptor.attach(OMP_INIT_NEST_LOCK_WITH_HINT, {onLeave: function (args) {send("OMP_INIT_NEST_LOCK_WITH_HINT");}});

var OMP_IN_FINAL = Module.findExportByName("libomp140d.x86_64.dll", "OMP_IN_FINAL")
Interceptor.attach(OMP_IN_FINAL, {onLeave: function (args) {send("OMP_IN_FINAL");}});

var OMP_IN_PARALLEL = Module.findExportByName("libomp140d.x86_64.dll", "OMP_IN_PARALLEL")
Interceptor.attach(OMP_IN_PARALLEL, {onLeave: function (args) {send("OMP_IN_PARALLEL");}});

var OMP_IS_INITIAL_DEVICE = Module.findExportByName("libomp140d.x86_64.dll", "OMP_IS_INITIAL_DEVICE")
Interceptor.attach(OMP_IS_INITIAL_DEVICE, {onLeave: function (args) {send("OMP_IS_INITIAL_DEVICE");}});

var OMP_PAUSE_RESOURCE = Module.findExportByName("libomp140d.x86_64.dll", "OMP_PAUSE_RESOURCE")
Interceptor.attach(OMP_PAUSE_RESOURCE, {onLeave: function (args) {send("OMP_PAUSE_RESOURCE");}});

var OMP_PAUSE_RESOURCE_ALL = Module.findExportByName("libomp140d.x86_64.dll", "OMP_PAUSE_RESOURCE_ALL")
Interceptor.attach(OMP_PAUSE_RESOURCE_ALL, {onLeave: function (args) {send("OMP_PAUSE_RESOURCE_ALL");}});

var OMP_SET_AFFINITY_FORMAT = Module.findExportByName("libomp140d.x86_64.dll", "OMP_SET_AFFINITY_FORMAT")
Interceptor.attach(OMP_SET_AFFINITY_FORMAT, {onLeave: function (args) {send("OMP_SET_AFFINITY_FORMAT");}});

var OMP_SET_DEFAULT_ALLOCATOR = Module.findExportByName("libomp140d.x86_64.dll", "OMP_SET_DEFAULT_ALLOCATOR")
Interceptor.attach(OMP_SET_DEFAULT_ALLOCATOR, {onLeave: function (args) {send("OMP_SET_DEFAULT_ALLOCATOR");}});

var OMP_SET_DEFAULT_DEVICE = Module.findExportByName("libomp140d.x86_64.dll", "OMP_SET_DEFAULT_DEVICE")
Interceptor.attach(OMP_SET_DEFAULT_DEVICE, {onLeave: function (args) {send("OMP_SET_DEFAULT_DEVICE");}});

var OMP_SET_DYNAMIC = Module.findExportByName("libomp140d.x86_64.dll", "OMP_SET_DYNAMIC")
Interceptor.attach(OMP_SET_DYNAMIC, {onLeave: function (args) {send("OMP_SET_DYNAMIC");}});

var OMP_SET_LOCK = Module.findExportByName("libomp140d.x86_64.dll", "OMP_SET_LOCK")
Interceptor.attach(OMP_SET_LOCK, {onLeave: function (args) {send("OMP_SET_LOCK");}});

var OMP_SET_MAX_ACTIVE_LEVELS = Module.findExportByName("libomp140d.x86_64.dll", "OMP_SET_MAX_ACTIVE_LEVELS")
Interceptor.attach(OMP_SET_MAX_ACTIVE_LEVELS, {onLeave: function (args) {send("OMP_SET_MAX_ACTIVE_LEVELS");}});

var OMP_SET_NESTED = Module.findExportByName("libomp140d.x86_64.dll", "OMP_SET_NESTED")
Interceptor.attach(OMP_SET_NESTED, {onLeave: function (args) {send("OMP_SET_NESTED");}});

var OMP_SET_NEST_LOCK = Module.findExportByName("libomp140d.x86_64.dll", "OMP_SET_NEST_LOCK")
Interceptor.attach(OMP_SET_NEST_LOCK, {onLeave: function (args) {send("OMP_SET_NEST_LOCK");}});

var OMP_SET_NUM_THREADS = Module.findExportByName("libomp140d.x86_64.dll", "OMP_SET_NUM_THREADS")
Interceptor.attach(OMP_SET_NUM_THREADS, {onLeave: function (args) {send("OMP_SET_NUM_THREADS");}});

var OMP_SET_SCHEDULE = Module.findExportByName("libomp140d.x86_64.dll", "OMP_SET_SCHEDULE")
Interceptor.attach(OMP_SET_SCHEDULE, {onLeave: function (args) {send("OMP_SET_SCHEDULE");}});

var OMP_TEST_LOCK = Module.findExportByName("libomp140d.x86_64.dll", "OMP_TEST_LOCK")
Interceptor.attach(OMP_TEST_LOCK, {onLeave: function (args) {send("OMP_TEST_LOCK");}});

var OMP_TEST_NEST_LOCK = Module.findExportByName("libomp140d.x86_64.dll", "OMP_TEST_NEST_LOCK")
Interceptor.attach(OMP_TEST_NEST_LOCK, {onLeave: function (args) {send("OMP_TEST_NEST_LOCK");}});

var OMP_UNSET_LOCK = Module.findExportByName("libomp140d.x86_64.dll", "OMP_UNSET_LOCK")
Interceptor.attach(OMP_UNSET_LOCK, {onLeave: function (args) {send("OMP_UNSET_LOCK");}});

var OMP_UNSET_NEST_LOCK = Module.findExportByName("libomp140d.x86_64.dll", "OMP_UNSET_NEST_LOCK")
Interceptor.attach(OMP_UNSET_NEST_LOCK, {onLeave: function (args) {send("OMP_UNSET_NEST_LOCK");}});

var _You_must_link_with_Intel_OpenMP_library = Module.findExportByName("libomp140d.x86_64.dll", "_You_must_link_with_Intel_OpenMP_library")
Interceptor.attach(_You_must_link_with_Intel_OpenMP_library, {onLeave: function (args) {send("_You_must_link_with_Intel_OpenMP_library");}});

var _You_must_link_with_exactly_one_OpenMP_library = Module.findExportByName("libomp140d.x86_64.dll", "_You_must_link_with_exactly_one_OpenMP_library")
Interceptor.attach(_You_must_link_with_exactly_one_OpenMP_library, {onLeave: function (args) {send("_You_must_link_with_exactly_one_OpenMP_library");}});

var __kmp_acquire_drdpa_lock = Module.findExportByName("libomp140d.x86_64.dll", "__kmp_acquire_drdpa_lock")
Interceptor.attach(__kmp_acquire_drdpa_lock, {onLeave: function (args) {send("__kmp_acquire_drdpa_lock");}});

var __kmp_acquire_nested_drdpa_lock = Module.findExportByName("libomp140d.x86_64.dll", "__kmp_acquire_nested_drdpa_lock")
Interceptor.attach(__kmp_acquire_nested_drdpa_lock, {onLeave: function (args) {send("__kmp_acquire_nested_drdpa_lock");}});

var __kmp_acquire_nested_queuing_lock = Module.findExportByName("libomp140d.x86_64.dll", "__kmp_acquire_nested_queuing_lock")
Interceptor.attach(__kmp_acquire_nested_queuing_lock, {onLeave: function (args) {send("__kmp_acquire_nested_queuing_lock");}});

var __kmp_acquire_nested_tas_lock = Module.findExportByName("libomp140d.x86_64.dll", "__kmp_acquire_nested_tas_lock")
Interceptor.attach(__kmp_acquire_nested_tas_lock, {onLeave: function (args) {send("__kmp_acquire_nested_tas_lock");}});

var __kmp_acquire_nested_ticket_lock = Module.findExportByName("libomp140d.x86_64.dll", "__kmp_acquire_nested_ticket_lock")
Interceptor.attach(__kmp_acquire_nested_ticket_lock, {onLeave: function (args) {send("__kmp_acquire_nested_ticket_lock");}});

var __kmp_acquire_queuing_lock = Module.findExportByName("libomp140d.x86_64.dll", "__kmp_acquire_queuing_lock")
Interceptor.attach(__kmp_acquire_queuing_lock, {onLeave: function (args) {send("__kmp_acquire_queuing_lock");}});

var __kmp_acquire_tas_lock = Module.findExportByName("libomp140d.x86_64.dll", "__kmp_acquire_tas_lock")
Interceptor.attach(__kmp_acquire_tas_lock, {onLeave: function (args) {send("__kmp_acquire_tas_lock");}});

var __kmp_acquire_ticket_lock = Module.findExportByName("libomp140d.x86_64.dll", "__kmp_acquire_ticket_lock")
Interceptor.attach(__kmp_acquire_ticket_lock, {onLeave: function (args) {send("__kmp_acquire_ticket_lock");}});

var __kmp_fork_call = Module.findExportByName("libomp140d.x86_64.dll", "__kmp_fork_call")
Interceptor.attach(__kmp_fork_call, {onLeave: function (args) {send("__kmp_fork_call");}});

var __kmp_get_reduce_method = Module.findExportByName("libomp140d.x86_64.dll", "__kmp_get_reduce_method")
Interceptor.attach(__kmp_get_reduce_method, {onLeave: function (args) {send("__kmp_get_reduce_method");}});

var __kmp_invoke_microtask = Module.findExportByName("libomp140d.x86_64.dll", "__kmp_invoke_microtask")
Interceptor.attach(__kmp_invoke_microtask, {onLeave: function (args) {send("__kmp_invoke_microtask");}});

var __kmp_launch_worker = Module.findExportByName("libomp140d.x86_64.dll", "__kmp_launch_worker")
Interceptor.attach(__kmp_launch_worker, {onLeave: function (args) {send("__kmp_launch_worker");}});

var __kmp_printf = Module.findExportByName("libomp140d.x86_64.dll", "__kmp_printf")
Interceptor.attach(__kmp_printf, {onLeave: function (args) {send("__kmp_printf");}});

var __kmp_reap_worker = Module.findExportByName("libomp140d.x86_64.dll", "__kmp_reap_worker")
Interceptor.attach(__kmp_reap_worker, {onLeave: function (args) {send("__kmp_reap_worker");}});

var __kmp_release_64 = Module.findExportByName("libomp140d.x86_64.dll", "__kmp_release_64")
Interceptor.attach(__kmp_release_64, {onLeave: function (args) {send("__kmp_release_64");}});

var __kmp_wait_4 = Module.findExportByName("libomp140d.x86_64.dll", "__kmp_wait_4")
Interceptor.attach(__kmp_wait_4, {onLeave: function (args) {send("__kmp_wait_4");}});

var __kmp_wait_64 = Module.findExportByName("libomp140d.x86_64.dll", "__kmp_wait_64")
Interceptor.attach(__kmp_wait_64, {onLeave: function (args) {send("__kmp_wait_64");}});

var __kmpc_alloc = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_alloc")
Interceptor.attach(__kmpc_alloc, {onLeave: function (args) {send("__kmpc_alloc");}});

var __kmpc_atomic_1 = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_1")
Interceptor.attach(__kmpc_atomic_1, {onLeave: function (args) {send("__kmpc_atomic_1");}});

var __kmpc_atomic_10 = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_10")
Interceptor.attach(__kmpc_atomic_10, {onLeave: function (args) {send("__kmpc_atomic_10");}});

var __kmpc_atomic_16 = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_16")
Interceptor.attach(__kmpc_atomic_16, {onLeave: function (args) {send("__kmpc_atomic_16");}});

var __kmpc_atomic_2 = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_2")
Interceptor.attach(__kmpc_atomic_2, {onLeave: function (args) {send("__kmpc_atomic_2");}});

var __kmpc_atomic_20 = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_20")
Interceptor.attach(__kmpc_atomic_20, {onLeave: function (args) {send("__kmpc_atomic_20");}});

var __kmpc_atomic_32 = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_32")
Interceptor.attach(__kmpc_atomic_32, {onLeave: function (args) {send("__kmpc_atomic_32");}});

var __kmpc_atomic_4 = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_4")
Interceptor.attach(__kmpc_atomic_4, {onLeave: function (args) {send("__kmpc_atomic_4");}});

var __kmpc_atomic_8 = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_8")
Interceptor.attach(__kmpc_atomic_8, {onLeave: function (args) {send("__kmpc_atomic_8");}});

var __kmpc_atomic_cmplx10_add = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_cmplx10_add")
Interceptor.attach(__kmpc_atomic_cmplx10_add, {onLeave: function (args) {send("__kmpc_atomic_cmplx10_add");}});

var __kmpc_atomic_cmplx10_add_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_cmplx10_add_cpt")
Interceptor.attach(__kmpc_atomic_cmplx10_add_cpt, {onLeave: function (args) {send("__kmpc_atomic_cmplx10_add_cpt");}});

var __kmpc_atomic_cmplx10_div = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_cmplx10_div")
Interceptor.attach(__kmpc_atomic_cmplx10_div, {onLeave: function (args) {send("__kmpc_atomic_cmplx10_div");}});

var __kmpc_atomic_cmplx10_div_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_cmplx10_div_cpt")
Interceptor.attach(__kmpc_atomic_cmplx10_div_cpt, {onLeave: function (args) {send("__kmpc_atomic_cmplx10_div_cpt");}});

var __kmpc_atomic_cmplx10_div_cpt_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_cmplx10_div_cpt_rev")
Interceptor.attach(__kmpc_atomic_cmplx10_div_cpt_rev, {onLeave: function (args) {send("__kmpc_atomic_cmplx10_div_cpt_rev");}});

var __kmpc_atomic_cmplx10_div_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_cmplx10_div_rev")
Interceptor.attach(__kmpc_atomic_cmplx10_div_rev, {onLeave: function (args) {send("__kmpc_atomic_cmplx10_div_rev");}});

var __kmpc_atomic_cmplx10_mul = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_cmplx10_mul")
Interceptor.attach(__kmpc_atomic_cmplx10_mul, {onLeave: function (args) {send("__kmpc_atomic_cmplx10_mul");}});

var __kmpc_atomic_cmplx10_mul_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_cmplx10_mul_cpt")
Interceptor.attach(__kmpc_atomic_cmplx10_mul_cpt, {onLeave: function (args) {send("__kmpc_atomic_cmplx10_mul_cpt");}});

var __kmpc_atomic_cmplx10_rd = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_cmplx10_rd")
Interceptor.attach(__kmpc_atomic_cmplx10_rd, {onLeave: function (args) {send("__kmpc_atomic_cmplx10_rd");}});

var __kmpc_atomic_cmplx10_sub = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_cmplx10_sub")
Interceptor.attach(__kmpc_atomic_cmplx10_sub, {onLeave: function (args) {send("__kmpc_atomic_cmplx10_sub");}});

var __kmpc_atomic_cmplx10_sub_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_cmplx10_sub_cpt")
Interceptor.attach(__kmpc_atomic_cmplx10_sub_cpt, {onLeave: function (args) {send("__kmpc_atomic_cmplx10_sub_cpt");}});

var __kmpc_atomic_cmplx10_sub_cpt_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_cmplx10_sub_cpt_rev")
Interceptor.attach(__kmpc_atomic_cmplx10_sub_cpt_rev, {onLeave: function (args) {send("__kmpc_atomic_cmplx10_sub_cpt_rev");}});

var __kmpc_atomic_cmplx10_sub_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_cmplx10_sub_rev")
Interceptor.attach(__kmpc_atomic_cmplx10_sub_rev, {onLeave: function (args) {send("__kmpc_atomic_cmplx10_sub_rev");}});

var __kmpc_atomic_cmplx10_swp = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_cmplx10_swp")
Interceptor.attach(__kmpc_atomic_cmplx10_swp, {onLeave: function (args) {send("__kmpc_atomic_cmplx10_swp");}});

var __kmpc_atomic_cmplx10_wr = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_cmplx10_wr")
Interceptor.attach(__kmpc_atomic_cmplx10_wr, {onLeave: function (args) {send("__kmpc_atomic_cmplx10_wr");}});

var __kmpc_atomic_cmplx4_add = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_cmplx4_add")
Interceptor.attach(__kmpc_atomic_cmplx4_add, {onLeave: function (args) {send("__kmpc_atomic_cmplx4_add");}});

var __kmpc_atomic_cmplx4_add_cmplx8 = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_cmplx4_add_cmplx8")
Interceptor.attach(__kmpc_atomic_cmplx4_add_cmplx8, {onLeave: function (args) {send("__kmpc_atomic_cmplx4_add_cmplx8");}});

var __kmpc_atomic_cmplx4_add_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_cmplx4_add_cpt")
Interceptor.attach(__kmpc_atomic_cmplx4_add_cpt, {onLeave: function (args) {send("__kmpc_atomic_cmplx4_add_cpt");}});

var __kmpc_atomic_cmplx4_div = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_cmplx4_div")
Interceptor.attach(__kmpc_atomic_cmplx4_div, {onLeave: function (args) {send("__kmpc_atomic_cmplx4_div");}});

var __kmpc_atomic_cmplx4_div_cmplx8 = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_cmplx4_div_cmplx8")
Interceptor.attach(__kmpc_atomic_cmplx4_div_cmplx8, {onLeave: function (args) {send("__kmpc_atomic_cmplx4_div_cmplx8");}});

var __kmpc_atomic_cmplx4_div_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_cmplx4_div_cpt")
Interceptor.attach(__kmpc_atomic_cmplx4_div_cpt, {onLeave: function (args) {send("__kmpc_atomic_cmplx4_div_cpt");}});

var __kmpc_atomic_cmplx4_div_cpt_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_cmplx4_div_cpt_rev")
Interceptor.attach(__kmpc_atomic_cmplx4_div_cpt_rev, {onLeave: function (args) {send("__kmpc_atomic_cmplx4_div_cpt_rev");}});

var __kmpc_atomic_cmplx4_div_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_cmplx4_div_rev")
Interceptor.attach(__kmpc_atomic_cmplx4_div_rev, {onLeave: function (args) {send("__kmpc_atomic_cmplx4_div_rev");}});

var __kmpc_atomic_cmplx4_mul = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_cmplx4_mul")
Interceptor.attach(__kmpc_atomic_cmplx4_mul, {onLeave: function (args) {send("__kmpc_atomic_cmplx4_mul");}});

var __kmpc_atomic_cmplx4_mul_cmplx8 = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_cmplx4_mul_cmplx8")
Interceptor.attach(__kmpc_atomic_cmplx4_mul_cmplx8, {onLeave: function (args) {send("__kmpc_atomic_cmplx4_mul_cmplx8");}});

var __kmpc_atomic_cmplx4_mul_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_cmplx4_mul_cpt")
Interceptor.attach(__kmpc_atomic_cmplx4_mul_cpt, {onLeave: function (args) {send("__kmpc_atomic_cmplx4_mul_cpt");}});

var __kmpc_atomic_cmplx4_rd = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_cmplx4_rd")
Interceptor.attach(__kmpc_atomic_cmplx4_rd, {onLeave: function (args) {send("__kmpc_atomic_cmplx4_rd");}});

var __kmpc_atomic_cmplx4_sub = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_cmplx4_sub")
Interceptor.attach(__kmpc_atomic_cmplx4_sub, {onLeave: function (args) {send("__kmpc_atomic_cmplx4_sub");}});

var __kmpc_atomic_cmplx4_sub_cmplx8 = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_cmplx4_sub_cmplx8")
Interceptor.attach(__kmpc_atomic_cmplx4_sub_cmplx8, {onLeave: function (args) {send("__kmpc_atomic_cmplx4_sub_cmplx8");}});

var __kmpc_atomic_cmplx4_sub_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_cmplx4_sub_cpt")
Interceptor.attach(__kmpc_atomic_cmplx4_sub_cpt, {onLeave: function (args) {send("__kmpc_atomic_cmplx4_sub_cpt");}});

var __kmpc_atomic_cmplx4_sub_cpt_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_cmplx4_sub_cpt_rev")
Interceptor.attach(__kmpc_atomic_cmplx4_sub_cpt_rev, {onLeave: function (args) {send("__kmpc_atomic_cmplx4_sub_cpt_rev");}});

var __kmpc_atomic_cmplx4_sub_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_cmplx4_sub_rev")
Interceptor.attach(__kmpc_atomic_cmplx4_sub_rev, {onLeave: function (args) {send("__kmpc_atomic_cmplx4_sub_rev");}});

var __kmpc_atomic_cmplx4_swp = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_cmplx4_swp")
Interceptor.attach(__kmpc_atomic_cmplx4_swp, {onLeave: function (args) {send("__kmpc_atomic_cmplx4_swp");}});

var __kmpc_atomic_cmplx4_wr = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_cmplx4_wr")
Interceptor.attach(__kmpc_atomic_cmplx4_wr, {onLeave: function (args) {send("__kmpc_atomic_cmplx4_wr");}});

var __kmpc_atomic_cmplx8_add = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_cmplx8_add")
Interceptor.attach(__kmpc_atomic_cmplx8_add, {onLeave: function (args) {send("__kmpc_atomic_cmplx8_add");}});

var __kmpc_atomic_cmplx8_add_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_cmplx8_add_cpt")
Interceptor.attach(__kmpc_atomic_cmplx8_add_cpt, {onLeave: function (args) {send("__kmpc_atomic_cmplx8_add_cpt");}});

var __kmpc_atomic_cmplx8_div = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_cmplx8_div")
Interceptor.attach(__kmpc_atomic_cmplx8_div, {onLeave: function (args) {send("__kmpc_atomic_cmplx8_div");}});

var __kmpc_atomic_cmplx8_div_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_cmplx8_div_cpt")
Interceptor.attach(__kmpc_atomic_cmplx8_div_cpt, {onLeave: function (args) {send("__kmpc_atomic_cmplx8_div_cpt");}});

var __kmpc_atomic_cmplx8_div_cpt_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_cmplx8_div_cpt_rev")
Interceptor.attach(__kmpc_atomic_cmplx8_div_cpt_rev, {onLeave: function (args) {send("__kmpc_atomic_cmplx8_div_cpt_rev");}});

var __kmpc_atomic_cmplx8_div_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_cmplx8_div_rev")
Interceptor.attach(__kmpc_atomic_cmplx8_div_rev, {onLeave: function (args) {send("__kmpc_atomic_cmplx8_div_rev");}});

var __kmpc_atomic_cmplx8_mul = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_cmplx8_mul")
Interceptor.attach(__kmpc_atomic_cmplx8_mul, {onLeave: function (args) {send("__kmpc_atomic_cmplx8_mul");}});

var __kmpc_atomic_cmplx8_mul_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_cmplx8_mul_cpt")
Interceptor.attach(__kmpc_atomic_cmplx8_mul_cpt, {onLeave: function (args) {send("__kmpc_atomic_cmplx8_mul_cpt");}});

var __kmpc_atomic_cmplx8_rd = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_cmplx8_rd")
Interceptor.attach(__kmpc_atomic_cmplx8_rd, {onLeave: function (args) {send("__kmpc_atomic_cmplx8_rd");}});

var __kmpc_atomic_cmplx8_sub = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_cmplx8_sub")
Interceptor.attach(__kmpc_atomic_cmplx8_sub, {onLeave: function (args) {send("__kmpc_atomic_cmplx8_sub");}});

var __kmpc_atomic_cmplx8_sub_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_cmplx8_sub_cpt")
Interceptor.attach(__kmpc_atomic_cmplx8_sub_cpt, {onLeave: function (args) {send("__kmpc_atomic_cmplx8_sub_cpt");}});

var __kmpc_atomic_cmplx8_sub_cpt_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_cmplx8_sub_cpt_rev")
Interceptor.attach(__kmpc_atomic_cmplx8_sub_cpt_rev, {onLeave: function (args) {send("__kmpc_atomic_cmplx8_sub_cpt_rev");}});

var __kmpc_atomic_cmplx8_sub_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_cmplx8_sub_rev")
Interceptor.attach(__kmpc_atomic_cmplx8_sub_rev, {onLeave: function (args) {send("__kmpc_atomic_cmplx8_sub_rev");}});

var __kmpc_atomic_cmplx8_swp = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_cmplx8_swp")
Interceptor.attach(__kmpc_atomic_cmplx8_swp, {onLeave: function (args) {send("__kmpc_atomic_cmplx8_swp");}});

var __kmpc_atomic_cmplx8_wr = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_cmplx8_wr")
Interceptor.attach(__kmpc_atomic_cmplx8_wr, {onLeave: function (args) {send("__kmpc_atomic_cmplx8_wr");}});

var __kmpc_atomic_end = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_end")
Interceptor.attach(__kmpc_atomic_end, {onLeave: function (args) {send("__kmpc_atomic_end");}});

var __kmpc_atomic_fixed1_add = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed1_add")
Interceptor.attach(__kmpc_atomic_fixed1_add, {onLeave: function (args) {send("__kmpc_atomic_fixed1_add");}});

var __kmpc_atomic_fixed1_add_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed1_add_cpt")
Interceptor.attach(__kmpc_atomic_fixed1_add_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed1_add_cpt");}});

var __kmpc_atomic_fixed1_andb = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed1_andb")
Interceptor.attach(__kmpc_atomic_fixed1_andb, {onLeave: function (args) {send("__kmpc_atomic_fixed1_andb");}});

var __kmpc_atomic_fixed1_andb_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed1_andb_cpt")
Interceptor.attach(__kmpc_atomic_fixed1_andb_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed1_andb_cpt");}});

var __kmpc_atomic_fixed1_andl = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed1_andl")
Interceptor.attach(__kmpc_atomic_fixed1_andl, {onLeave: function (args) {send("__kmpc_atomic_fixed1_andl");}});

var __kmpc_atomic_fixed1_andl_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed1_andl_cpt")
Interceptor.attach(__kmpc_atomic_fixed1_andl_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed1_andl_cpt");}});

var __kmpc_atomic_fixed1_div = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed1_div")
Interceptor.attach(__kmpc_atomic_fixed1_div, {onLeave: function (args) {send("__kmpc_atomic_fixed1_div");}});

var __kmpc_atomic_fixed1_div_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed1_div_cpt")
Interceptor.attach(__kmpc_atomic_fixed1_div_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed1_div_cpt");}});

var __kmpc_atomic_fixed1_div_cpt_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed1_div_cpt_rev")
Interceptor.attach(__kmpc_atomic_fixed1_div_cpt_rev, {onLeave: function (args) {send("__kmpc_atomic_fixed1_div_cpt_rev");}});

var __kmpc_atomic_fixed1_div_float8 = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed1_div_float8")
Interceptor.attach(__kmpc_atomic_fixed1_div_float8, {onLeave: function (args) {send("__kmpc_atomic_fixed1_div_float8");}});

var __kmpc_atomic_fixed1_div_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed1_div_rev")
Interceptor.attach(__kmpc_atomic_fixed1_div_rev, {onLeave: function (args) {send("__kmpc_atomic_fixed1_div_rev");}});

var __kmpc_atomic_fixed1_eqv = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed1_eqv")
Interceptor.attach(__kmpc_atomic_fixed1_eqv, {onLeave: function (args) {send("__kmpc_atomic_fixed1_eqv");}});

var __kmpc_atomic_fixed1_eqv_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed1_eqv_cpt")
Interceptor.attach(__kmpc_atomic_fixed1_eqv_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed1_eqv_cpt");}});

var __kmpc_atomic_fixed1_max = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed1_max")
Interceptor.attach(__kmpc_atomic_fixed1_max, {onLeave: function (args) {send("__kmpc_atomic_fixed1_max");}});

var __kmpc_atomic_fixed1_max_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed1_max_cpt")
Interceptor.attach(__kmpc_atomic_fixed1_max_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed1_max_cpt");}});

var __kmpc_atomic_fixed1_min = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed1_min")
Interceptor.attach(__kmpc_atomic_fixed1_min, {onLeave: function (args) {send("__kmpc_atomic_fixed1_min");}});

var __kmpc_atomic_fixed1_min_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed1_min_cpt")
Interceptor.attach(__kmpc_atomic_fixed1_min_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed1_min_cpt");}});

var __kmpc_atomic_fixed1_mul = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed1_mul")
Interceptor.attach(__kmpc_atomic_fixed1_mul, {onLeave: function (args) {send("__kmpc_atomic_fixed1_mul");}});

var __kmpc_atomic_fixed1_mul_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed1_mul_cpt")
Interceptor.attach(__kmpc_atomic_fixed1_mul_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed1_mul_cpt");}});

var __kmpc_atomic_fixed1_mul_float8 = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed1_mul_float8")
Interceptor.attach(__kmpc_atomic_fixed1_mul_float8, {onLeave: function (args) {send("__kmpc_atomic_fixed1_mul_float8");}});

var __kmpc_atomic_fixed1_neqv = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed1_neqv")
Interceptor.attach(__kmpc_atomic_fixed1_neqv, {onLeave: function (args) {send("__kmpc_atomic_fixed1_neqv");}});

var __kmpc_atomic_fixed1_neqv_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed1_neqv_cpt")
Interceptor.attach(__kmpc_atomic_fixed1_neqv_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed1_neqv_cpt");}});

var __kmpc_atomic_fixed1_orb = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed1_orb")
Interceptor.attach(__kmpc_atomic_fixed1_orb, {onLeave: function (args) {send("__kmpc_atomic_fixed1_orb");}});

var __kmpc_atomic_fixed1_orb_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed1_orb_cpt")
Interceptor.attach(__kmpc_atomic_fixed1_orb_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed1_orb_cpt");}});

var __kmpc_atomic_fixed1_orl = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed1_orl")
Interceptor.attach(__kmpc_atomic_fixed1_orl, {onLeave: function (args) {send("__kmpc_atomic_fixed1_orl");}});

var __kmpc_atomic_fixed1_orl_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed1_orl_cpt")
Interceptor.attach(__kmpc_atomic_fixed1_orl_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed1_orl_cpt");}});

var __kmpc_atomic_fixed1_rd = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed1_rd")
Interceptor.attach(__kmpc_atomic_fixed1_rd, {onLeave: function (args) {send("__kmpc_atomic_fixed1_rd");}});

var __kmpc_atomic_fixed1_shl = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed1_shl")
Interceptor.attach(__kmpc_atomic_fixed1_shl, {onLeave: function (args) {send("__kmpc_atomic_fixed1_shl");}});

var __kmpc_atomic_fixed1_shl_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed1_shl_cpt")
Interceptor.attach(__kmpc_atomic_fixed1_shl_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed1_shl_cpt");}});

var __kmpc_atomic_fixed1_shl_cpt_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed1_shl_cpt_rev")
Interceptor.attach(__kmpc_atomic_fixed1_shl_cpt_rev, {onLeave: function (args) {send("__kmpc_atomic_fixed1_shl_cpt_rev");}});

var __kmpc_atomic_fixed1_shl_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed1_shl_rev")
Interceptor.attach(__kmpc_atomic_fixed1_shl_rev, {onLeave: function (args) {send("__kmpc_atomic_fixed1_shl_rev");}});

var __kmpc_atomic_fixed1_shr = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed1_shr")
Interceptor.attach(__kmpc_atomic_fixed1_shr, {onLeave: function (args) {send("__kmpc_atomic_fixed1_shr");}});

var __kmpc_atomic_fixed1_shr_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed1_shr_cpt")
Interceptor.attach(__kmpc_atomic_fixed1_shr_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed1_shr_cpt");}});

var __kmpc_atomic_fixed1_shr_cpt_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed1_shr_cpt_rev")
Interceptor.attach(__kmpc_atomic_fixed1_shr_cpt_rev, {onLeave: function (args) {send("__kmpc_atomic_fixed1_shr_cpt_rev");}});

var __kmpc_atomic_fixed1_shr_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed1_shr_rev")
Interceptor.attach(__kmpc_atomic_fixed1_shr_rev, {onLeave: function (args) {send("__kmpc_atomic_fixed1_shr_rev");}});

var __kmpc_atomic_fixed1_sub = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed1_sub")
Interceptor.attach(__kmpc_atomic_fixed1_sub, {onLeave: function (args) {send("__kmpc_atomic_fixed1_sub");}});

var __kmpc_atomic_fixed1_sub_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed1_sub_cpt")
Interceptor.attach(__kmpc_atomic_fixed1_sub_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed1_sub_cpt");}});

var __kmpc_atomic_fixed1_sub_cpt_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed1_sub_cpt_rev")
Interceptor.attach(__kmpc_atomic_fixed1_sub_cpt_rev, {onLeave: function (args) {send("__kmpc_atomic_fixed1_sub_cpt_rev");}});

var __kmpc_atomic_fixed1_sub_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed1_sub_rev")
Interceptor.attach(__kmpc_atomic_fixed1_sub_rev, {onLeave: function (args) {send("__kmpc_atomic_fixed1_sub_rev");}});

var __kmpc_atomic_fixed1_swp = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed1_swp")
Interceptor.attach(__kmpc_atomic_fixed1_swp, {onLeave: function (args) {send("__kmpc_atomic_fixed1_swp");}});

var __kmpc_atomic_fixed1_wr = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed1_wr")
Interceptor.attach(__kmpc_atomic_fixed1_wr, {onLeave: function (args) {send("__kmpc_atomic_fixed1_wr");}});

var __kmpc_atomic_fixed1_xor = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed1_xor")
Interceptor.attach(__kmpc_atomic_fixed1_xor, {onLeave: function (args) {send("__kmpc_atomic_fixed1_xor");}});

var __kmpc_atomic_fixed1_xor_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed1_xor_cpt")
Interceptor.attach(__kmpc_atomic_fixed1_xor_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed1_xor_cpt");}});

var __kmpc_atomic_fixed1u_div = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed1u_div")
Interceptor.attach(__kmpc_atomic_fixed1u_div, {onLeave: function (args) {send("__kmpc_atomic_fixed1u_div");}});

var __kmpc_atomic_fixed1u_div_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed1u_div_cpt")
Interceptor.attach(__kmpc_atomic_fixed1u_div_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed1u_div_cpt");}});

var __kmpc_atomic_fixed1u_div_cpt_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed1u_div_cpt_rev")
Interceptor.attach(__kmpc_atomic_fixed1u_div_cpt_rev, {onLeave: function (args) {send("__kmpc_atomic_fixed1u_div_cpt_rev");}});

var __kmpc_atomic_fixed1u_div_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed1u_div_rev")
Interceptor.attach(__kmpc_atomic_fixed1u_div_rev, {onLeave: function (args) {send("__kmpc_atomic_fixed1u_div_rev");}});

var __kmpc_atomic_fixed1u_shr = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed1u_shr")
Interceptor.attach(__kmpc_atomic_fixed1u_shr, {onLeave: function (args) {send("__kmpc_atomic_fixed1u_shr");}});

var __kmpc_atomic_fixed1u_shr_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed1u_shr_cpt")
Interceptor.attach(__kmpc_atomic_fixed1u_shr_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed1u_shr_cpt");}});

var __kmpc_atomic_fixed1u_shr_cpt_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed1u_shr_cpt_rev")
Interceptor.attach(__kmpc_atomic_fixed1u_shr_cpt_rev, {onLeave: function (args) {send("__kmpc_atomic_fixed1u_shr_cpt_rev");}});

var __kmpc_atomic_fixed1u_shr_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed1u_shr_rev")
Interceptor.attach(__kmpc_atomic_fixed1u_shr_rev, {onLeave: function (args) {send("__kmpc_atomic_fixed1u_shr_rev");}});

var __kmpc_atomic_fixed2_add = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed2_add")
Interceptor.attach(__kmpc_atomic_fixed2_add, {onLeave: function (args) {send("__kmpc_atomic_fixed2_add");}});

var __kmpc_atomic_fixed2_add_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed2_add_cpt")
Interceptor.attach(__kmpc_atomic_fixed2_add_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed2_add_cpt");}});

var __kmpc_atomic_fixed2_andb = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed2_andb")
Interceptor.attach(__kmpc_atomic_fixed2_andb, {onLeave: function (args) {send("__kmpc_atomic_fixed2_andb");}});

var __kmpc_atomic_fixed2_andb_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed2_andb_cpt")
Interceptor.attach(__kmpc_atomic_fixed2_andb_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed2_andb_cpt");}});

var __kmpc_atomic_fixed2_andl = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed2_andl")
Interceptor.attach(__kmpc_atomic_fixed2_andl, {onLeave: function (args) {send("__kmpc_atomic_fixed2_andl");}});

var __kmpc_atomic_fixed2_andl_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed2_andl_cpt")
Interceptor.attach(__kmpc_atomic_fixed2_andl_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed2_andl_cpt");}});

var __kmpc_atomic_fixed2_div = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed2_div")
Interceptor.attach(__kmpc_atomic_fixed2_div, {onLeave: function (args) {send("__kmpc_atomic_fixed2_div");}});

var __kmpc_atomic_fixed2_div_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed2_div_cpt")
Interceptor.attach(__kmpc_atomic_fixed2_div_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed2_div_cpt");}});

var __kmpc_atomic_fixed2_div_cpt_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed2_div_cpt_rev")
Interceptor.attach(__kmpc_atomic_fixed2_div_cpt_rev, {onLeave: function (args) {send("__kmpc_atomic_fixed2_div_cpt_rev");}});

var __kmpc_atomic_fixed2_div_float8 = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed2_div_float8")
Interceptor.attach(__kmpc_atomic_fixed2_div_float8, {onLeave: function (args) {send("__kmpc_atomic_fixed2_div_float8");}});

var __kmpc_atomic_fixed2_div_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed2_div_rev")
Interceptor.attach(__kmpc_atomic_fixed2_div_rev, {onLeave: function (args) {send("__kmpc_atomic_fixed2_div_rev");}});

var __kmpc_atomic_fixed2_eqv = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed2_eqv")
Interceptor.attach(__kmpc_atomic_fixed2_eqv, {onLeave: function (args) {send("__kmpc_atomic_fixed2_eqv");}});

var __kmpc_atomic_fixed2_eqv_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed2_eqv_cpt")
Interceptor.attach(__kmpc_atomic_fixed2_eqv_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed2_eqv_cpt");}});

var __kmpc_atomic_fixed2_max = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed2_max")
Interceptor.attach(__kmpc_atomic_fixed2_max, {onLeave: function (args) {send("__kmpc_atomic_fixed2_max");}});

var __kmpc_atomic_fixed2_max_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed2_max_cpt")
Interceptor.attach(__kmpc_atomic_fixed2_max_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed2_max_cpt");}});

var __kmpc_atomic_fixed2_min = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed2_min")
Interceptor.attach(__kmpc_atomic_fixed2_min, {onLeave: function (args) {send("__kmpc_atomic_fixed2_min");}});

var __kmpc_atomic_fixed2_min_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed2_min_cpt")
Interceptor.attach(__kmpc_atomic_fixed2_min_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed2_min_cpt");}});

var __kmpc_atomic_fixed2_mul = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed2_mul")
Interceptor.attach(__kmpc_atomic_fixed2_mul, {onLeave: function (args) {send("__kmpc_atomic_fixed2_mul");}});

var __kmpc_atomic_fixed2_mul_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed2_mul_cpt")
Interceptor.attach(__kmpc_atomic_fixed2_mul_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed2_mul_cpt");}});

var __kmpc_atomic_fixed2_mul_float8 = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed2_mul_float8")
Interceptor.attach(__kmpc_atomic_fixed2_mul_float8, {onLeave: function (args) {send("__kmpc_atomic_fixed2_mul_float8");}});

var __kmpc_atomic_fixed2_neqv = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed2_neqv")
Interceptor.attach(__kmpc_atomic_fixed2_neqv, {onLeave: function (args) {send("__kmpc_atomic_fixed2_neqv");}});

var __kmpc_atomic_fixed2_neqv_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed2_neqv_cpt")
Interceptor.attach(__kmpc_atomic_fixed2_neqv_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed2_neqv_cpt");}});

var __kmpc_atomic_fixed2_orb = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed2_orb")
Interceptor.attach(__kmpc_atomic_fixed2_orb, {onLeave: function (args) {send("__kmpc_atomic_fixed2_orb");}});

var __kmpc_atomic_fixed2_orb_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed2_orb_cpt")
Interceptor.attach(__kmpc_atomic_fixed2_orb_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed2_orb_cpt");}});

var __kmpc_atomic_fixed2_orl = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed2_orl")
Interceptor.attach(__kmpc_atomic_fixed2_orl, {onLeave: function (args) {send("__kmpc_atomic_fixed2_orl");}});

var __kmpc_atomic_fixed2_orl_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed2_orl_cpt")
Interceptor.attach(__kmpc_atomic_fixed2_orl_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed2_orl_cpt");}});

var __kmpc_atomic_fixed2_rd = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed2_rd")
Interceptor.attach(__kmpc_atomic_fixed2_rd, {onLeave: function (args) {send("__kmpc_atomic_fixed2_rd");}});

var __kmpc_atomic_fixed2_shl = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed2_shl")
Interceptor.attach(__kmpc_atomic_fixed2_shl, {onLeave: function (args) {send("__kmpc_atomic_fixed2_shl");}});

var __kmpc_atomic_fixed2_shl_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed2_shl_cpt")
Interceptor.attach(__kmpc_atomic_fixed2_shl_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed2_shl_cpt");}});

var __kmpc_atomic_fixed2_shl_cpt_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed2_shl_cpt_rev")
Interceptor.attach(__kmpc_atomic_fixed2_shl_cpt_rev, {onLeave: function (args) {send("__kmpc_atomic_fixed2_shl_cpt_rev");}});

var __kmpc_atomic_fixed2_shl_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed2_shl_rev")
Interceptor.attach(__kmpc_atomic_fixed2_shl_rev, {onLeave: function (args) {send("__kmpc_atomic_fixed2_shl_rev");}});

var __kmpc_atomic_fixed2_shr = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed2_shr")
Interceptor.attach(__kmpc_atomic_fixed2_shr, {onLeave: function (args) {send("__kmpc_atomic_fixed2_shr");}});

var __kmpc_atomic_fixed2_shr_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed2_shr_cpt")
Interceptor.attach(__kmpc_atomic_fixed2_shr_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed2_shr_cpt");}});

var __kmpc_atomic_fixed2_shr_cpt_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed2_shr_cpt_rev")
Interceptor.attach(__kmpc_atomic_fixed2_shr_cpt_rev, {onLeave: function (args) {send("__kmpc_atomic_fixed2_shr_cpt_rev");}});

var __kmpc_atomic_fixed2_shr_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed2_shr_rev")
Interceptor.attach(__kmpc_atomic_fixed2_shr_rev, {onLeave: function (args) {send("__kmpc_atomic_fixed2_shr_rev");}});

var __kmpc_atomic_fixed2_sub = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed2_sub")
Interceptor.attach(__kmpc_atomic_fixed2_sub, {onLeave: function (args) {send("__kmpc_atomic_fixed2_sub");}});

var __kmpc_atomic_fixed2_sub_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed2_sub_cpt")
Interceptor.attach(__kmpc_atomic_fixed2_sub_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed2_sub_cpt");}});

var __kmpc_atomic_fixed2_sub_cpt_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed2_sub_cpt_rev")
Interceptor.attach(__kmpc_atomic_fixed2_sub_cpt_rev, {onLeave: function (args) {send("__kmpc_atomic_fixed2_sub_cpt_rev");}});

var __kmpc_atomic_fixed2_sub_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed2_sub_rev")
Interceptor.attach(__kmpc_atomic_fixed2_sub_rev, {onLeave: function (args) {send("__kmpc_atomic_fixed2_sub_rev");}});

var __kmpc_atomic_fixed2_swp = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed2_swp")
Interceptor.attach(__kmpc_atomic_fixed2_swp, {onLeave: function (args) {send("__kmpc_atomic_fixed2_swp");}});

var __kmpc_atomic_fixed2_wr = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed2_wr")
Interceptor.attach(__kmpc_atomic_fixed2_wr, {onLeave: function (args) {send("__kmpc_atomic_fixed2_wr");}});

var __kmpc_atomic_fixed2_xor = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed2_xor")
Interceptor.attach(__kmpc_atomic_fixed2_xor, {onLeave: function (args) {send("__kmpc_atomic_fixed2_xor");}});

var __kmpc_atomic_fixed2_xor_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed2_xor_cpt")
Interceptor.attach(__kmpc_atomic_fixed2_xor_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed2_xor_cpt");}});

var __kmpc_atomic_fixed2u_div = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed2u_div")
Interceptor.attach(__kmpc_atomic_fixed2u_div, {onLeave: function (args) {send("__kmpc_atomic_fixed2u_div");}});

var __kmpc_atomic_fixed2u_div_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed2u_div_cpt")
Interceptor.attach(__kmpc_atomic_fixed2u_div_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed2u_div_cpt");}});

var __kmpc_atomic_fixed2u_div_cpt_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed2u_div_cpt_rev")
Interceptor.attach(__kmpc_atomic_fixed2u_div_cpt_rev, {onLeave: function (args) {send("__kmpc_atomic_fixed2u_div_cpt_rev");}});

var __kmpc_atomic_fixed2u_div_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed2u_div_rev")
Interceptor.attach(__kmpc_atomic_fixed2u_div_rev, {onLeave: function (args) {send("__kmpc_atomic_fixed2u_div_rev");}});

var __kmpc_atomic_fixed2u_shr = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed2u_shr")
Interceptor.attach(__kmpc_atomic_fixed2u_shr, {onLeave: function (args) {send("__kmpc_atomic_fixed2u_shr");}});

var __kmpc_atomic_fixed2u_shr_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed2u_shr_cpt")
Interceptor.attach(__kmpc_atomic_fixed2u_shr_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed2u_shr_cpt");}});

var __kmpc_atomic_fixed2u_shr_cpt_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed2u_shr_cpt_rev")
Interceptor.attach(__kmpc_atomic_fixed2u_shr_cpt_rev, {onLeave: function (args) {send("__kmpc_atomic_fixed2u_shr_cpt_rev");}});

var __kmpc_atomic_fixed2u_shr_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed2u_shr_rev")
Interceptor.attach(__kmpc_atomic_fixed2u_shr_rev, {onLeave: function (args) {send("__kmpc_atomic_fixed2u_shr_rev");}});

var __kmpc_atomic_fixed4_add = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed4_add")
Interceptor.attach(__kmpc_atomic_fixed4_add, {onLeave: function (args) {send("__kmpc_atomic_fixed4_add");}});

var __kmpc_atomic_fixed4_add_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed4_add_cpt")
Interceptor.attach(__kmpc_atomic_fixed4_add_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed4_add_cpt");}});

var __kmpc_atomic_fixed4_andb = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed4_andb")
Interceptor.attach(__kmpc_atomic_fixed4_andb, {onLeave: function (args) {send("__kmpc_atomic_fixed4_andb");}});

var __kmpc_atomic_fixed4_andb_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed4_andb_cpt")
Interceptor.attach(__kmpc_atomic_fixed4_andb_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed4_andb_cpt");}});

var __kmpc_atomic_fixed4_andl = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed4_andl")
Interceptor.attach(__kmpc_atomic_fixed4_andl, {onLeave: function (args) {send("__kmpc_atomic_fixed4_andl");}});

var __kmpc_atomic_fixed4_andl_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed4_andl_cpt")
Interceptor.attach(__kmpc_atomic_fixed4_andl_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed4_andl_cpt");}});

var __kmpc_atomic_fixed4_div = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed4_div")
Interceptor.attach(__kmpc_atomic_fixed4_div, {onLeave: function (args) {send("__kmpc_atomic_fixed4_div");}});

var __kmpc_atomic_fixed4_div_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed4_div_cpt")
Interceptor.attach(__kmpc_atomic_fixed4_div_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed4_div_cpt");}});

var __kmpc_atomic_fixed4_div_cpt_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed4_div_cpt_rev")
Interceptor.attach(__kmpc_atomic_fixed4_div_cpt_rev, {onLeave: function (args) {send("__kmpc_atomic_fixed4_div_cpt_rev");}});

var __kmpc_atomic_fixed4_div_float8 = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed4_div_float8")
Interceptor.attach(__kmpc_atomic_fixed4_div_float8, {onLeave: function (args) {send("__kmpc_atomic_fixed4_div_float8");}});

var __kmpc_atomic_fixed4_div_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed4_div_rev")
Interceptor.attach(__kmpc_atomic_fixed4_div_rev, {onLeave: function (args) {send("__kmpc_atomic_fixed4_div_rev");}});

var __kmpc_atomic_fixed4_eqv = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed4_eqv")
Interceptor.attach(__kmpc_atomic_fixed4_eqv, {onLeave: function (args) {send("__kmpc_atomic_fixed4_eqv");}});

var __kmpc_atomic_fixed4_eqv_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed4_eqv_cpt")
Interceptor.attach(__kmpc_atomic_fixed4_eqv_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed4_eqv_cpt");}});

var __kmpc_atomic_fixed4_max = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed4_max")
Interceptor.attach(__kmpc_atomic_fixed4_max, {onLeave: function (args) {send("__kmpc_atomic_fixed4_max");}});

var __kmpc_atomic_fixed4_max_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed4_max_cpt")
Interceptor.attach(__kmpc_atomic_fixed4_max_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed4_max_cpt");}});

var __kmpc_atomic_fixed4_min = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed4_min")
Interceptor.attach(__kmpc_atomic_fixed4_min, {onLeave: function (args) {send("__kmpc_atomic_fixed4_min");}});

var __kmpc_atomic_fixed4_min_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed4_min_cpt")
Interceptor.attach(__kmpc_atomic_fixed4_min_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed4_min_cpt");}});

var __kmpc_atomic_fixed4_mul = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed4_mul")
Interceptor.attach(__kmpc_atomic_fixed4_mul, {onLeave: function (args) {send("__kmpc_atomic_fixed4_mul");}});

var __kmpc_atomic_fixed4_mul_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed4_mul_cpt")
Interceptor.attach(__kmpc_atomic_fixed4_mul_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed4_mul_cpt");}});

var __kmpc_atomic_fixed4_mul_float8 = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed4_mul_float8")
Interceptor.attach(__kmpc_atomic_fixed4_mul_float8, {onLeave: function (args) {send("__kmpc_atomic_fixed4_mul_float8");}});

var __kmpc_atomic_fixed4_neqv = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed4_neqv")
Interceptor.attach(__kmpc_atomic_fixed4_neqv, {onLeave: function (args) {send("__kmpc_atomic_fixed4_neqv");}});

var __kmpc_atomic_fixed4_neqv_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed4_neqv_cpt")
Interceptor.attach(__kmpc_atomic_fixed4_neqv_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed4_neqv_cpt");}});

var __kmpc_atomic_fixed4_orb = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed4_orb")
Interceptor.attach(__kmpc_atomic_fixed4_orb, {onLeave: function (args) {send("__kmpc_atomic_fixed4_orb");}});

var __kmpc_atomic_fixed4_orb_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed4_orb_cpt")
Interceptor.attach(__kmpc_atomic_fixed4_orb_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed4_orb_cpt");}});

var __kmpc_atomic_fixed4_orl = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed4_orl")
Interceptor.attach(__kmpc_atomic_fixed4_orl, {onLeave: function (args) {send("__kmpc_atomic_fixed4_orl");}});

var __kmpc_atomic_fixed4_orl_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed4_orl_cpt")
Interceptor.attach(__kmpc_atomic_fixed4_orl_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed4_orl_cpt");}});

var __kmpc_atomic_fixed4_rd = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed4_rd")
Interceptor.attach(__kmpc_atomic_fixed4_rd, {onLeave: function (args) {send("__kmpc_atomic_fixed4_rd");}});

var __kmpc_atomic_fixed4_shl = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed4_shl")
Interceptor.attach(__kmpc_atomic_fixed4_shl, {onLeave: function (args) {send("__kmpc_atomic_fixed4_shl");}});

var __kmpc_atomic_fixed4_shl_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed4_shl_cpt")
Interceptor.attach(__kmpc_atomic_fixed4_shl_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed4_shl_cpt");}});

var __kmpc_atomic_fixed4_shl_cpt_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed4_shl_cpt_rev")
Interceptor.attach(__kmpc_atomic_fixed4_shl_cpt_rev, {onLeave: function (args) {send("__kmpc_atomic_fixed4_shl_cpt_rev");}});

var __kmpc_atomic_fixed4_shl_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed4_shl_rev")
Interceptor.attach(__kmpc_atomic_fixed4_shl_rev, {onLeave: function (args) {send("__kmpc_atomic_fixed4_shl_rev");}});

var __kmpc_atomic_fixed4_shr = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed4_shr")
Interceptor.attach(__kmpc_atomic_fixed4_shr, {onLeave: function (args) {send("__kmpc_atomic_fixed4_shr");}});

var __kmpc_atomic_fixed4_shr_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed4_shr_cpt")
Interceptor.attach(__kmpc_atomic_fixed4_shr_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed4_shr_cpt");}});

var __kmpc_atomic_fixed4_shr_cpt_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed4_shr_cpt_rev")
Interceptor.attach(__kmpc_atomic_fixed4_shr_cpt_rev, {onLeave: function (args) {send("__kmpc_atomic_fixed4_shr_cpt_rev");}});

var __kmpc_atomic_fixed4_shr_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed4_shr_rev")
Interceptor.attach(__kmpc_atomic_fixed4_shr_rev, {onLeave: function (args) {send("__kmpc_atomic_fixed4_shr_rev");}});

var __kmpc_atomic_fixed4_sub = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed4_sub")
Interceptor.attach(__kmpc_atomic_fixed4_sub, {onLeave: function (args) {send("__kmpc_atomic_fixed4_sub");}});

var __kmpc_atomic_fixed4_sub_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed4_sub_cpt")
Interceptor.attach(__kmpc_atomic_fixed4_sub_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed4_sub_cpt");}});

var __kmpc_atomic_fixed4_sub_cpt_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed4_sub_cpt_rev")
Interceptor.attach(__kmpc_atomic_fixed4_sub_cpt_rev, {onLeave: function (args) {send("__kmpc_atomic_fixed4_sub_cpt_rev");}});

var __kmpc_atomic_fixed4_sub_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed4_sub_rev")
Interceptor.attach(__kmpc_atomic_fixed4_sub_rev, {onLeave: function (args) {send("__kmpc_atomic_fixed4_sub_rev");}});

var __kmpc_atomic_fixed4_swp = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed4_swp")
Interceptor.attach(__kmpc_atomic_fixed4_swp, {onLeave: function (args) {send("__kmpc_atomic_fixed4_swp");}});

var __kmpc_atomic_fixed4_wr = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed4_wr")
Interceptor.attach(__kmpc_atomic_fixed4_wr, {onLeave: function (args) {send("__kmpc_atomic_fixed4_wr");}});

var __kmpc_atomic_fixed4_xor = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed4_xor")
Interceptor.attach(__kmpc_atomic_fixed4_xor, {onLeave: function (args) {send("__kmpc_atomic_fixed4_xor");}});

var __kmpc_atomic_fixed4_xor_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed4_xor_cpt")
Interceptor.attach(__kmpc_atomic_fixed4_xor_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed4_xor_cpt");}});

var __kmpc_atomic_fixed4u_div = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed4u_div")
Interceptor.attach(__kmpc_atomic_fixed4u_div, {onLeave: function (args) {send("__kmpc_atomic_fixed4u_div");}});

var __kmpc_atomic_fixed4u_div_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed4u_div_cpt")
Interceptor.attach(__kmpc_atomic_fixed4u_div_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed4u_div_cpt");}});

var __kmpc_atomic_fixed4u_div_cpt_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed4u_div_cpt_rev")
Interceptor.attach(__kmpc_atomic_fixed4u_div_cpt_rev, {onLeave: function (args) {send("__kmpc_atomic_fixed4u_div_cpt_rev");}});

var __kmpc_atomic_fixed4u_div_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed4u_div_rev")
Interceptor.attach(__kmpc_atomic_fixed4u_div_rev, {onLeave: function (args) {send("__kmpc_atomic_fixed4u_div_rev");}});

var __kmpc_atomic_fixed4u_shr = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed4u_shr")
Interceptor.attach(__kmpc_atomic_fixed4u_shr, {onLeave: function (args) {send("__kmpc_atomic_fixed4u_shr");}});

var __kmpc_atomic_fixed4u_shr_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed4u_shr_cpt")
Interceptor.attach(__kmpc_atomic_fixed4u_shr_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed4u_shr_cpt");}});

var __kmpc_atomic_fixed4u_shr_cpt_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed4u_shr_cpt_rev")
Interceptor.attach(__kmpc_atomic_fixed4u_shr_cpt_rev, {onLeave: function (args) {send("__kmpc_atomic_fixed4u_shr_cpt_rev");}});

var __kmpc_atomic_fixed4u_shr_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed4u_shr_rev")
Interceptor.attach(__kmpc_atomic_fixed4u_shr_rev, {onLeave: function (args) {send("__kmpc_atomic_fixed4u_shr_rev");}});

var __kmpc_atomic_fixed8_add = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed8_add")
Interceptor.attach(__kmpc_atomic_fixed8_add, {onLeave: function (args) {send("__kmpc_atomic_fixed8_add");}});

var __kmpc_atomic_fixed8_add_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed8_add_cpt")
Interceptor.attach(__kmpc_atomic_fixed8_add_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed8_add_cpt");}});

var __kmpc_atomic_fixed8_andb = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed8_andb")
Interceptor.attach(__kmpc_atomic_fixed8_andb, {onLeave: function (args) {send("__kmpc_atomic_fixed8_andb");}});

var __kmpc_atomic_fixed8_andb_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed8_andb_cpt")
Interceptor.attach(__kmpc_atomic_fixed8_andb_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed8_andb_cpt");}});

var __kmpc_atomic_fixed8_andl = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed8_andl")
Interceptor.attach(__kmpc_atomic_fixed8_andl, {onLeave: function (args) {send("__kmpc_atomic_fixed8_andl");}});

var __kmpc_atomic_fixed8_andl_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed8_andl_cpt")
Interceptor.attach(__kmpc_atomic_fixed8_andl_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed8_andl_cpt");}});

var __kmpc_atomic_fixed8_div = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed8_div")
Interceptor.attach(__kmpc_atomic_fixed8_div, {onLeave: function (args) {send("__kmpc_atomic_fixed8_div");}});

var __kmpc_atomic_fixed8_div_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed8_div_cpt")
Interceptor.attach(__kmpc_atomic_fixed8_div_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed8_div_cpt");}});

var __kmpc_atomic_fixed8_div_cpt_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed8_div_cpt_rev")
Interceptor.attach(__kmpc_atomic_fixed8_div_cpt_rev, {onLeave: function (args) {send("__kmpc_atomic_fixed8_div_cpt_rev");}});

var __kmpc_atomic_fixed8_div_float8 = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed8_div_float8")
Interceptor.attach(__kmpc_atomic_fixed8_div_float8, {onLeave: function (args) {send("__kmpc_atomic_fixed8_div_float8");}});

var __kmpc_atomic_fixed8_div_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed8_div_rev")
Interceptor.attach(__kmpc_atomic_fixed8_div_rev, {onLeave: function (args) {send("__kmpc_atomic_fixed8_div_rev");}});

var __kmpc_atomic_fixed8_eqv = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed8_eqv")
Interceptor.attach(__kmpc_atomic_fixed8_eqv, {onLeave: function (args) {send("__kmpc_atomic_fixed8_eqv");}});

var __kmpc_atomic_fixed8_eqv_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed8_eqv_cpt")
Interceptor.attach(__kmpc_atomic_fixed8_eqv_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed8_eqv_cpt");}});

var __kmpc_atomic_fixed8_max = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed8_max")
Interceptor.attach(__kmpc_atomic_fixed8_max, {onLeave: function (args) {send("__kmpc_atomic_fixed8_max");}});

var __kmpc_atomic_fixed8_max_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed8_max_cpt")
Interceptor.attach(__kmpc_atomic_fixed8_max_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed8_max_cpt");}});

var __kmpc_atomic_fixed8_min = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed8_min")
Interceptor.attach(__kmpc_atomic_fixed8_min, {onLeave: function (args) {send("__kmpc_atomic_fixed8_min");}});

var __kmpc_atomic_fixed8_min_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed8_min_cpt")
Interceptor.attach(__kmpc_atomic_fixed8_min_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed8_min_cpt");}});

var __kmpc_atomic_fixed8_mul = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed8_mul")
Interceptor.attach(__kmpc_atomic_fixed8_mul, {onLeave: function (args) {send("__kmpc_atomic_fixed8_mul");}});

var __kmpc_atomic_fixed8_mul_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed8_mul_cpt")
Interceptor.attach(__kmpc_atomic_fixed8_mul_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed8_mul_cpt");}});

var __kmpc_atomic_fixed8_mul_float8 = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed8_mul_float8")
Interceptor.attach(__kmpc_atomic_fixed8_mul_float8, {onLeave: function (args) {send("__kmpc_atomic_fixed8_mul_float8");}});

var __kmpc_atomic_fixed8_neqv = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed8_neqv")
Interceptor.attach(__kmpc_atomic_fixed8_neqv, {onLeave: function (args) {send("__kmpc_atomic_fixed8_neqv");}});

var __kmpc_atomic_fixed8_neqv_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed8_neqv_cpt")
Interceptor.attach(__kmpc_atomic_fixed8_neqv_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed8_neqv_cpt");}});

var __kmpc_atomic_fixed8_orb = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed8_orb")
Interceptor.attach(__kmpc_atomic_fixed8_orb, {onLeave: function (args) {send("__kmpc_atomic_fixed8_orb");}});

var __kmpc_atomic_fixed8_orb_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed8_orb_cpt")
Interceptor.attach(__kmpc_atomic_fixed8_orb_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed8_orb_cpt");}});

var __kmpc_atomic_fixed8_orl = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed8_orl")
Interceptor.attach(__kmpc_atomic_fixed8_orl, {onLeave: function (args) {send("__kmpc_atomic_fixed8_orl");}});

var __kmpc_atomic_fixed8_orl_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed8_orl_cpt")
Interceptor.attach(__kmpc_atomic_fixed8_orl_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed8_orl_cpt");}});

var __kmpc_atomic_fixed8_rd = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed8_rd")
Interceptor.attach(__kmpc_atomic_fixed8_rd, {onLeave: function (args) {send("__kmpc_atomic_fixed8_rd");}});

var __kmpc_atomic_fixed8_shl = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed8_shl")
Interceptor.attach(__kmpc_atomic_fixed8_shl, {onLeave: function (args) {send("__kmpc_atomic_fixed8_shl");}});

var __kmpc_atomic_fixed8_shl_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed8_shl_cpt")
Interceptor.attach(__kmpc_atomic_fixed8_shl_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed8_shl_cpt");}});

var __kmpc_atomic_fixed8_shl_cpt_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed8_shl_cpt_rev")
Interceptor.attach(__kmpc_atomic_fixed8_shl_cpt_rev, {onLeave: function (args) {send("__kmpc_atomic_fixed8_shl_cpt_rev");}});

var __kmpc_atomic_fixed8_shl_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed8_shl_rev")
Interceptor.attach(__kmpc_atomic_fixed8_shl_rev, {onLeave: function (args) {send("__kmpc_atomic_fixed8_shl_rev");}});

var __kmpc_atomic_fixed8_shr = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed8_shr")
Interceptor.attach(__kmpc_atomic_fixed8_shr, {onLeave: function (args) {send("__kmpc_atomic_fixed8_shr");}});

var __kmpc_atomic_fixed8_shr_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed8_shr_cpt")
Interceptor.attach(__kmpc_atomic_fixed8_shr_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed8_shr_cpt");}});

var __kmpc_atomic_fixed8_shr_cpt_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed8_shr_cpt_rev")
Interceptor.attach(__kmpc_atomic_fixed8_shr_cpt_rev, {onLeave: function (args) {send("__kmpc_atomic_fixed8_shr_cpt_rev");}});

var __kmpc_atomic_fixed8_shr_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed8_shr_rev")
Interceptor.attach(__kmpc_atomic_fixed8_shr_rev, {onLeave: function (args) {send("__kmpc_atomic_fixed8_shr_rev");}});

var __kmpc_atomic_fixed8_sub = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed8_sub")
Interceptor.attach(__kmpc_atomic_fixed8_sub, {onLeave: function (args) {send("__kmpc_atomic_fixed8_sub");}});

var __kmpc_atomic_fixed8_sub_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed8_sub_cpt")
Interceptor.attach(__kmpc_atomic_fixed8_sub_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed8_sub_cpt");}});

var __kmpc_atomic_fixed8_sub_cpt_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed8_sub_cpt_rev")
Interceptor.attach(__kmpc_atomic_fixed8_sub_cpt_rev, {onLeave: function (args) {send("__kmpc_atomic_fixed8_sub_cpt_rev");}});

var __kmpc_atomic_fixed8_sub_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed8_sub_rev")
Interceptor.attach(__kmpc_atomic_fixed8_sub_rev, {onLeave: function (args) {send("__kmpc_atomic_fixed8_sub_rev");}});

var __kmpc_atomic_fixed8_swp = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed8_swp")
Interceptor.attach(__kmpc_atomic_fixed8_swp, {onLeave: function (args) {send("__kmpc_atomic_fixed8_swp");}});

var __kmpc_atomic_fixed8_wr = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed8_wr")
Interceptor.attach(__kmpc_atomic_fixed8_wr, {onLeave: function (args) {send("__kmpc_atomic_fixed8_wr");}});

var __kmpc_atomic_fixed8_xor = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed8_xor")
Interceptor.attach(__kmpc_atomic_fixed8_xor, {onLeave: function (args) {send("__kmpc_atomic_fixed8_xor");}});

var __kmpc_atomic_fixed8_xor_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed8_xor_cpt")
Interceptor.attach(__kmpc_atomic_fixed8_xor_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed8_xor_cpt");}});

var __kmpc_atomic_fixed8u_div = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed8u_div")
Interceptor.attach(__kmpc_atomic_fixed8u_div, {onLeave: function (args) {send("__kmpc_atomic_fixed8u_div");}});

var __kmpc_atomic_fixed8u_div_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed8u_div_cpt")
Interceptor.attach(__kmpc_atomic_fixed8u_div_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed8u_div_cpt");}});

var __kmpc_atomic_fixed8u_div_cpt_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed8u_div_cpt_rev")
Interceptor.attach(__kmpc_atomic_fixed8u_div_cpt_rev, {onLeave: function (args) {send("__kmpc_atomic_fixed8u_div_cpt_rev");}});

var __kmpc_atomic_fixed8u_div_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed8u_div_rev")
Interceptor.attach(__kmpc_atomic_fixed8u_div_rev, {onLeave: function (args) {send("__kmpc_atomic_fixed8u_div_rev");}});

var __kmpc_atomic_fixed8u_shr = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed8u_shr")
Interceptor.attach(__kmpc_atomic_fixed8u_shr, {onLeave: function (args) {send("__kmpc_atomic_fixed8u_shr");}});

var __kmpc_atomic_fixed8u_shr_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed8u_shr_cpt")
Interceptor.attach(__kmpc_atomic_fixed8u_shr_cpt, {onLeave: function (args) {send("__kmpc_atomic_fixed8u_shr_cpt");}});

var __kmpc_atomic_fixed8u_shr_cpt_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed8u_shr_cpt_rev")
Interceptor.attach(__kmpc_atomic_fixed8u_shr_cpt_rev, {onLeave: function (args) {send("__kmpc_atomic_fixed8u_shr_cpt_rev");}});

var __kmpc_atomic_fixed8u_shr_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_fixed8u_shr_rev")
Interceptor.attach(__kmpc_atomic_fixed8u_shr_rev, {onLeave: function (args) {send("__kmpc_atomic_fixed8u_shr_rev");}});

var __kmpc_atomic_float10_add = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_float10_add")
Interceptor.attach(__kmpc_atomic_float10_add, {onLeave: function (args) {send("__kmpc_atomic_float10_add");}});

var __kmpc_atomic_float10_add_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_float10_add_cpt")
Interceptor.attach(__kmpc_atomic_float10_add_cpt, {onLeave: function (args) {send("__kmpc_atomic_float10_add_cpt");}});

var __kmpc_atomic_float10_div = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_float10_div")
Interceptor.attach(__kmpc_atomic_float10_div, {onLeave: function (args) {send("__kmpc_atomic_float10_div");}});

var __kmpc_atomic_float10_div_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_float10_div_cpt")
Interceptor.attach(__kmpc_atomic_float10_div_cpt, {onLeave: function (args) {send("__kmpc_atomic_float10_div_cpt");}});

var __kmpc_atomic_float10_div_cpt_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_float10_div_cpt_rev")
Interceptor.attach(__kmpc_atomic_float10_div_cpt_rev, {onLeave: function (args) {send("__kmpc_atomic_float10_div_cpt_rev");}});

var __kmpc_atomic_float10_div_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_float10_div_rev")
Interceptor.attach(__kmpc_atomic_float10_div_rev, {onLeave: function (args) {send("__kmpc_atomic_float10_div_rev");}});

var __kmpc_atomic_float10_mul = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_float10_mul")
Interceptor.attach(__kmpc_atomic_float10_mul, {onLeave: function (args) {send("__kmpc_atomic_float10_mul");}});

var __kmpc_atomic_float10_mul_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_float10_mul_cpt")
Interceptor.attach(__kmpc_atomic_float10_mul_cpt, {onLeave: function (args) {send("__kmpc_atomic_float10_mul_cpt");}});

var __kmpc_atomic_float10_rd = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_float10_rd")
Interceptor.attach(__kmpc_atomic_float10_rd, {onLeave: function (args) {send("__kmpc_atomic_float10_rd");}});

var __kmpc_atomic_float10_sub = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_float10_sub")
Interceptor.attach(__kmpc_atomic_float10_sub, {onLeave: function (args) {send("__kmpc_atomic_float10_sub");}});

var __kmpc_atomic_float10_sub_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_float10_sub_cpt")
Interceptor.attach(__kmpc_atomic_float10_sub_cpt, {onLeave: function (args) {send("__kmpc_atomic_float10_sub_cpt");}});

var __kmpc_atomic_float10_sub_cpt_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_float10_sub_cpt_rev")
Interceptor.attach(__kmpc_atomic_float10_sub_cpt_rev, {onLeave: function (args) {send("__kmpc_atomic_float10_sub_cpt_rev");}});

var __kmpc_atomic_float10_sub_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_float10_sub_rev")
Interceptor.attach(__kmpc_atomic_float10_sub_rev, {onLeave: function (args) {send("__kmpc_atomic_float10_sub_rev");}});

var __kmpc_atomic_float10_swp = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_float10_swp")
Interceptor.attach(__kmpc_atomic_float10_swp, {onLeave: function (args) {send("__kmpc_atomic_float10_swp");}});

var __kmpc_atomic_float10_wr = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_float10_wr")
Interceptor.attach(__kmpc_atomic_float10_wr, {onLeave: function (args) {send("__kmpc_atomic_float10_wr");}});

var __kmpc_atomic_float4_add = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_float4_add")
Interceptor.attach(__kmpc_atomic_float4_add, {onLeave: function (args) {send("__kmpc_atomic_float4_add");}});

var __kmpc_atomic_float4_add_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_float4_add_cpt")
Interceptor.attach(__kmpc_atomic_float4_add_cpt, {onLeave: function (args) {send("__kmpc_atomic_float4_add_cpt");}});

var __kmpc_atomic_float4_add_float8 = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_float4_add_float8")
Interceptor.attach(__kmpc_atomic_float4_add_float8, {onLeave: function (args) {send("__kmpc_atomic_float4_add_float8");}});

var __kmpc_atomic_float4_div = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_float4_div")
Interceptor.attach(__kmpc_atomic_float4_div, {onLeave: function (args) {send("__kmpc_atomic_float4_div");}});

var __kmpc_atomic_float4_div_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_float4_div_cpt")
Interceptor.attach(__kmpc_atomic_float4_div_cpt, {onLeave: function (args) {send("__kmpc_atomic_float4_div_cpt");}});

var __kmpc_atomic_float4_div_cpt_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_float4_div_cpt_rev")
Interceptor.attach(__kmpc_atomic_float4_div_cpt_rev, {onLeave: function (args) {send("__kmpc_atomic_float4_div_cpt_rev");}});

var __kmpc_atomic_float4_div_float8 = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_float4_div_float8")
Interceptor.attach(__kmpc_atomic_float4_div_float8, {onLeave: function (args) {send("__kmpc_atomic_float4_div_float8");}});

var __kmpc_atomic_float4_div_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_float4_div_rev")
Interceptor.attach(__kmpc_atomic_float4_div_rev, {onLeave: function (args) {send("__kmpc_atomic_float4_div_rev");}});

var __kmpc_atomic_float4_max = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_float4_max")
Interceptor.attach(__kmpc_atomic_float4_max, {onLeave: function (args) {send("__kmpc_atomic_float4_max");}});

var __kmpc_atomic_float4_max_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_float4_max_cpt")
Interceptor.attach(__kmpc_atomic_float4_max_cpt, {onLeave: function (args) {send("__kmpc_atomic_float4_max_cpt");}});

var __kmpc_atomic_float4_min = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_float4_min")
Interceptor.attach(__kmpc_atomic_float4_min, {onLeave: function (args) {send("__kmpc_atomic_float4_min");}});

var __kmpc_atomic_float4_min_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_float4_min_cpt")
Interceptor.attach(__kmpc_atomic_float4_min_cpt, {onLeave: function (args) {send("__kmpc_atomic_float4_min_cpt");}});

var __kmpc_atomic_float4_mul = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_float4_mul")
Interceptor.attach(__kmpc_atomic_float4_mul, {onLeave: function (args) {send("__kmpc_atomic_float4_mul");}});

var __kmpc_atomic_float4_mul_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_float4_mul_cpt")
Interceptor.attach(__kmpc_atomic_float4_mul_cpt, {onLeave: function (args) {send("__kmpc_atomic_float4_mul_cpt");}});

var __kmpc_atomic_float4_mul_float8 = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_float4_mul_float8")
Interceptor.attach(__kmpc_atomic_float4_mul_float8, {onLeave: function (args) {send("__kmpc_atomic_float4_mul_float8");}});

var __kmpc_atomic_float4_rd = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_float4_rd")
Interceptor.attach(__kmpc_atomic_float4_rd, {onLeave: function (args) {send("__kmpc_atomic_float4_rd");}});

var __kmpc_atomic_float4_sub = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_float4_sub")
Interceptor.attach(__kmpc_atomic_float4_sub, {onLeave: function (args) {send("__kmpc_atomic_float4_sub");}});

var __kmpc_atomic_float4_sub_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_float4_sub_cpt")
Interceptor.attach(__kmpc_atomic_float4_sub_cpt, {onLeave: function (args) {send("__kmpc_atomic_float4_sub_cpt");}});

var __kmpc_atomic_float4_sub_cpt_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_float4_sub_cpt_rev")
Interceptor.attach(__kmpc_atomic_float4_sub_cpt_rev, {onLeave: function (args) {send("__kmpc_atomic_float4_sub_cpt_rev");}});

var __kmpc_atomic_float4_sub_float8 = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_float4_sub_float8")
Interceptor.attach(__kmpc_atomic_float4_sub_float8, {onLeave: function (args) {send("__kmpc_atomic_float4_sub_float8");}});

var __kmpc_atomic_float4_sub_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_float4_sub_rev")
Interceptor.attach(__kmpc_atomic_float4_sub_rev, {onLeave: function (args) {send("__kmpc_atomic_float4_sub_rev");}});

var __kmpc_atomic_float4_swp = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_float4_swp")
Interceptor.attach(__kmpc_atomic_float4_swp, {onLeave: function (args) {send("__kmpc_atomic_float4_swp");}});

var __kmpc_atomic_float4_wr = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_float4_wr")
Interceptor.attach(__kmpc_atomic_float4_wr, {onLeave: function (args) {send("__kmpc_atomic_float4_wr");}});

var __kmpc_atomic_float8_add = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_float8_add")
Interceptor.attach(__kmpc_atomic_float8_add, {onLeave: function (args) {send("__kmpc_atomic_float8_add");}});

var __kmpc_atomic_float8_add_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_float8_add_cpt")
Interceptor.attach(__kmpc_atomic_float8_add_cpt, {onLeave: function (args) {send("__kmpc_atomic_float8_add_cpt");}});

var __kmpc_atomic_float8_div = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_float8_div")
Interceptor.attach(__kmpc_atomic_float8_div, {onLeave: function (args) {send("__kmpc_atomic_float8_div");}});

var __kmpc_atomic_float8_div_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_float8_div_cpt")
Interceptor.attach(__kmpc_atomic_float8_div_cpt, {onLeave: function (args) {send("__kmpc_atomic_float8_div_cpt");}});

var __kmpc_atomic_float8_div_cpt_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_float8_div_cpt_rev")
Interceptor.attach(__kmpc_atomic_float8_div_cpt_rev, {onLeave: function (args) {send("__kmpc_atomic_float8_div_cpt_rev");}});

var __kmpc_atomic_float8_div_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_float8_div_rev")
Interceptor.attach(__kmpc_atomic_float8_div_rev, {onLeave: function (args) {send("__kmpc_atomic_float8_div_rev");}});

var __kmpc_atomic_float8_max = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_float8_max")
Interceptor.attach(__kmpc_atomic_float8_max, {onLeave: function (args) {send("__kmpc_atomic_float8_max");}});

var __kmpc_atomic_float8_max_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_float8_max_cpt")
Interceptor.attach(__kmpc_atomic_float8_max_cpt, {onLeave: function (args) {send("__kmpc_atomic_float8_max_cpt");}});

var __kmpc_atomic_float8_min = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_float8_min")
Interceptor.attach(__kmpc_atomic_float8_min, {onLeave: function (args) {send("__kmpc_atomic_float8_min");}});

var __kmpc_atomic_float8_min_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_float8_min_cpt")
Interceptor.attach(__kmpc_atomic_float8_min_cpt, {onLeave: function (args) {send("__kmpc_atomic_float8_min_cpt");}});

var __kmpc_atomic_float8_mul = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_float8_mul")
Interceptor.attach(__kmpc_atomic_float8_mul, {onLeave: function (args) {send("__kmpc_atomic_float8_mul");}});

var __kmpc_atomic_float8_mul_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_float8_mul_cpt")
Interceptor.attach(__kmpc_atomic_float8_mul_cpt, {onLeave: function (args) {send("__kmpc_atomic_float8_mul_cpt");}});

var __kmpc_atomic_float8_rd = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_float8_rd")
Interceptor.attach(__kmpc_atomic_float8_rd, {onLeave: function (args) {send("__kmpc_atomic_float8_rd");}});

var __kmpc_atomic_float8_sub = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_float8_sub")
Interceptor.attach(__kmpc_atomic_float8_sub, {onLeave: function (args) {send("__kmpc_atomic_float8_sub");}});

var __kmpc_atomic_float8_sub_cpt = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_float8_sub_cpt")
Interceptor.attach(__kmpc_atomic_float8_sub_cpt, {onLeave: function (args) {send("__kmpc_atomic_float8_sub_cpt");}});

var __kmpc_atomic_float8_sub_cpt_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_float8_sub_cpt_rev")
Interceptor.attach(__kmpc_atomic_float8_sub_cpt_rev, {onLeave: function (args) {send("__kmpc_atomic_float8_sub_cpt_rev");}});

var __kmpc_atomic_float8_sub_rev = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_float8_sub_rev")
Interceptor.attach(__kmpc_atomic_float8_sub_rev, {onLeave: function (args) {send("__kmpc_atomic_float8_sub_rev");}});

var __kmpc_atomic_float8_swp = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_float8_swp")
Interceptor.attach(__kmpc_atomic_float8_swp, {onLeave: function (args) {send("__kmpc_atomic_float8_swp");}});

var __kmpc_atomic_float8_wr = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_float8_wr")
Interceptor.attach(__kmpc_atomic_float8_wr, {onLeave: function (args) {send("__kmpc_atomic_float8_wr");}});

var __kmpc_atomic_start = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_atomic_start")
Interceptor.attach(__kmpc_atomic_start, {onLeave: function (args) {send("__kmpc_atomic_start");}});

var __kmpc_barrier = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_barrier")
Interceptor.attach(__kmpc_barrier, {onLeave: function (args) {send("__kmpc_barrier");}});

var __kmpc_barrier_master = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_barrier_master")
Interceptor.attach(__kmpc_barrier_master, {onLeave: function (args) {send("__kmpc_barrier_master");}});

var __kmpc_barrier_master_nowait = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_barrier_master_nowait")
Interceptor.attach(__kmpc_barrier_master_nowait, {onLeave: function (args) {send("__kmpc_barrier_master_nowait");}});

var __kmpc_begin = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_begin")
Interceptor.attach(__kmpc_begin, {onLeave: function (args) {send("__kmpc_begin");}});

var __kmpc_bound_num_threads = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_bound_num_threads")
Interceptor.attach(__kmpc_bound_num_threads, {onLeave: function (args) {send("__kmpc_bound_num_threads");}});

var __kmpc_bound_thread_num = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_bound_thread_num")
Interceptor.attach(__kmpc_bound_thread_num, {onLeave: function (args) {send("__kmpc_bound_thread_num");}});

var __kmpc_cancel = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_cancel")
Interceptor.attach(__kmpc_cancel, {onLeave: function (args) {send("__kmpc_cancel");}});

var __kmpc_cancel_barrier = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_cancel_barrier")
Interceptor.attach(__kmpc_cancel_barrier, {onLeave: function (args) {send("__kmpc_cancel_barrier");}});

var __kmpc_cancellationpoint = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_cancellationpoint")
Interceptor.attach(__kmpc_cancellationpoint, {onLeave: function (args) {send("__kmpc_cancellationpoint");}});

var __kmpc_copyprivate = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_copyprivate")
Interceptor.attach(__kmpc_copyprivate, {onLeave: function (args) {send("__kmpc_copyprivate");}});

var __kmpc_copyprivate_light = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_copyprivate_light")
Interceptor.attach(__kmpc_copyprivate_light, {onLeave: function (args) {send("__kmpc_copyprivate_light");}});

var __kmpc_critical = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_critical")
Interceptor.attach(__kmpc_critical, {onLeave: function (args) {send("__kmpc_critical");}});

var __kmpc_critical_with_hint = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_critical_with_hint")
Interceptor.attach(__kmpc_critical_with_hint, {onLeave: function (args) {send("__kmpc_critical_with_hint");}});

var __kmpc_destroy_allocator = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_destroy_allocator")
Interceptor.attach(__kmpc_destroy_allocator, {onLeave: function (args) {send("__kmpc_destroy_allocator");}});

var __kmpc_destroy_lock = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_destroy_lock")
Interceptor.attach(__kmpc_destroy_lock, {onLeave: function (args) {send("__kmpc_destroy_lock");}});

var __kmpc_destroy_nest_lock = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_destroy_nest_lock")
Interceptor.attach(__kmpc_destroy_nest_lock, {onLeave: function (args) {send("__kmpc_destroy_nest_lock");}});

var __kmpc_dispatch_fini_4 = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_dispatch_fini_4")
Interceptor.attach(__kmpc_dispatch_fini_4, {onLeave: function (args) {send("__kmpc_dispatch_fini_4");}});

var __kmpc_dispatch_fini_4u = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_dispatch_fini_4u")
Interceptor.attach(__kmpc_dispatch_fini_4u, {onLeave: function (args) {send("__kmpc_dispatch_fini_4u");}});

var __kmpc_dispatch_fini_8 = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_dispatch_fini_8")
Interceptor.attach(__kmpc_dispatch_fini_8, {onLeave: function (args) {send("__kmpc_dispatch_fini_8");}});

var __kmpc_dispatch_fini_8u = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_dispatch_fini_8u")
Interceptor.attach(__kmpc_dispatch_fini_8u, {onLeave: function (args) {send("__kmpc_dispatch_fini_8u");}});

var __kmpc_dispatch_init_4 = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_dispatch_init_4")
Interceptor.attach(__kmpc_dispatch_init_4, {onLeave: function (args) {send("__kmpc_dispatch_init_4");}});

var __kmpc_dispatch_init_4u = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_dispatch_init_4u")
Interceptor.attach(__kmpc_dispatch_init_4u, {onLeave: function (args) {send("__kmpc_dispatch_init_4u");}});

var __kmpc_dispatch_init_8 = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_dispatch_init_8")
Interceptor.attach(__kmpc_dispatch_init_8, {onLeave: function (args) {send("__kmpc_dispatch_init_8");}});

var __kmpc_dispatch_init_8u = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_dispatch_init_8u")
Interceptor.attach(__kmpc_dispatch_init_8u, {onLeave: function (args) {send("__kmpc_dispatch_init_8u");}});

var __kmpc_dispatch_next_4 = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_dispatch_next_4")
Interceptor.attach(__kmpc_dispatch_next_4, {onLeave: function (args) {send("__kmpc_dispatch_next_4");}});

var __kmpc_dispatch_next_4u = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_dispatch_next_4u")
Interceptor.attach(__kmpc_dispatch_next_4u, {onLeave: function (args) {send("__kmpc_dispatch_next_4u");}});

var __kmpc_dispatch_next_8 = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_dispatch_next_8")
Interceptor.attach(__kmpc_dispatch_next_8, {onLeave: function (args) {send("__kmpc_dispatch_next_8");}});

var __kmpc_dispatch_next_8u = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_dispatch_next_8u")
Interceptor.attach(__kmpc_dispatch_next_8u, {onLeave: function (args) {send("__kmpc_dispatch_next_8u");}});

var __kmpc_dist_dispatch_init_4 = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_dist_dispatch_init_4")
Interceptor.attach(__kmpc_dist_dispatch_init_4, {onLeave: function (args) {send("__kmpc_dist_dispatch_init_4");}});

var __kmpc_dist_dispatch_init_4u = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_dist_dispatch_init_4u")
Interceptor.attach(__kmpc_dist_dispatch_init_4u, {onLeave: function (args) {send("__kmpc_dist_dispatch_init_4u");}});

var __kmpc_dist_dispatch_init_8 = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_dist_dispatch_init_8")
Interceptor.attach(__kmpc_dist_dispatch_init_8, {onLeave: function (args) {send("__kmpc_dist_dispatch_init_8");}});

var __kmpc_dist_dispatch_init_8u = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_dist_dispatch_init_8u")
Interceptor.attach(__kmpc_dist_dispatch_init_8u, {onLeave: function (args) {send("__kmpc_dist_dispatch_init_8u");}});

var __kmpc_dist_for_static_init_4 = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_dist_for_static_init_4")
Interceptor.attach(__kmpc_dist_for_static_init_4, {onLeave: function (args) {send("__kmpc_dist_for_static_init_4");}});

var __kmpc_dist_for_static_init_4u = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_dist_for_static_init_4u")
Interceptor.attach(__kmpc_dist_for_static_init_4u, {onLeave: function (args) {send("__kmpc_dist_for_static_init_4u");}});

var __kmpc_dist_for_static_init_8 = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_dist_for_static_init_8")
Interceptor.attach(__kmpc_dist_for_static_init_8, {onLeave: function (args) {send("__kmpc_dist_for_static_init_8");}});

var __kmpc_dist_for_static_init_8u = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_dist_for_static_init_8u")
Interceptor.attach(__kmpc_dist_for_static_init_8u, {onLeave: function (args) {send("__kmpc_dist_for_static_init_8u");}});

var __kmpc_doacross_fini = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_doacross_fini")
Interceptor.attach(__kmpc_doacross_fini, {onLeave: function (args) {send("__kmpc_doacross_fini");}});

var __kmpc_doacross_init = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_doacross_init")
Interceptor.attach(__kmpc_doacross_init, {onLeave: function (args) {send("__kmpc_doacross_init");}});

var __kmpc_doacross_post = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_doacross_post")
Interceptor.attach(__kmpc_doacross_post, {onLeave: function (args) {send("__kmpc_doacross_post");}});

var __kmpc_doacross_wait = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_doacross_wait")
Interceptor.attach(__kmpc_doacross_wait, {onLeave: function (args) {send("__kmpc_doacross_wait");}});

var __kmpc_end = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_end")
Interceptor.attach(__kmpc_end, {onLeave: function (args) {send("__kmpc_end");}});

var __kmpc_end_barrier_master = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_end_barrier_master")
Interceptor.attach(__kmpc_end_barrier_master, {onLeave: function (args) {send("__kmpc_end_barrier_master");}});

var __kmpc_end_critical = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_end_critical")
Interceptor.attach(__kmpc_end_critical, {onLeave: function (args) {send("__kmpc_end_critical");}});

var __kmpc_end_master = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_end_master")
Interceptor.attach(__kmpc_end_master, {onLeave: function (args) {send("__kmpc_end_master");}});

var __kmpc_end_ordered = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_end_ordered")
Interceptor.attach(__kmpc_end_ordered, {onLeave: function (args) {send("__kmpc_end_ordered");}});

var __kmpc_end_reduce = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_end_reduce")
Interceptor.attach(__kmpc_end_reduce, {onLeave: function (args) {send("__kmpc_end_reduce");}});

var __kmpc_end_reduce_nowait = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_end_reduce_nowait")
Interceptor.attach(__kmpc_end_reduce_nowait, {onLeave: function (args) {send("__kmpc_end_reduce_nowait");}});

var __kmpc_end_sections = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_end_sections")
Interceptor.attach(__kmpc_end_sections, {onLeave: function (args) {send("__kmpc_end_sections");}});

var __kmpc_end_serialized_parallel = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_end_serialized_parallel")
Interceptor.attach(__kmpc_end_serialized_parallel, {onLeave: function (args) {send("__kmpc_end_serialized_parallel");}});

var __kmpc_end_single = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_end_single")
Interceptor.attach(__kmpc_end_single, {onLeave: function (args) {send("__kmpc_end_single");}});

var __kmpc_end_taskgroup = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_end_taskgroup")
Interceptor.attach(__kmpc_end_taskgroup, {onLeave: function (args) {send("__kmpc_end_taskgroup");}});

var __kmpc_flush = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_flush")
Interceptor.attach(__kmpc_flush, {onLeave: function (args) {send("__kmpc_flush");}});

var __kmpc_for_static_fini = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_for_static_fini")
Interceptor.attach(__kmpc_for_static_fini, {onLeave: function (args) {send("__kmpc_for_static_fini");}});

var __kmpc_for_static_init_4 = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_for_static_init_4")
Interceptor.attach(__kmpc_for_static_init_4, {onLeave: function (args) {send("__kmpc_for_static_init_4");}});

var __kmpc_for_static_init_4u = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_for_static_init_4u")
Interceptor.attach(__kmpc_for_static_init_4u, {onLeave: function (args) {send("__kmpc_for_static_init_4u");}});

var __kmpc_for_static_init_8 = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_for_static_init_8")
Interceptor.attach(__kmpc_for_static_init_8, {onLeave: function (args) {send("__kmpc_for_static_init_8");}});

var __kmpc_for_static_init_8u = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_for_static_init_8u")
Interceptor.attach(__kmpc_for_static_init_8u, {onLeave: function (args) {send("__kmpc_for_static_init_8u");}});

var __kmpc_fork_call = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_fork_call")
Interceptor.attach(__kmpc_fork_call, {onLeave: function (args) {send("__kmpc_fork_call");}});

var __kmpc_fork_teams = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_fork_teams")
Interceptor.attach(__kmpc_fork_teams, {onLeave: function (args) {send("__kmpc_fork_teams");}});

var __kmpc_free = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_free")
Interceptor.attach(__kmpc_free, {onLeave: function (args) {send("__kmpc_free");}});

var __kmpc_get_default_allocator = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_get_default_allocator")
Interceptor.attach(__kmpc_get_default_allocator, {onLeave: function (args) {send("__kmpc_get_default_allocator");}});

var __kmpc_get_parent_taskid = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_get_parent_taskid")
Interceptor.attach(__kmpc_get_parent_taskid, {onLeave: function (args) {send("__kmpc_get_parent_taskid");}});

var __kmpc_get_target_offload = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_get_target_offload")
Interceptor.attach(__kmpc_get_target_offload, {onLeave: function (args) {send("__kmpc_get_target_offload");}});

var __kmpc_get_taskid = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_get_taskid")
Interceptor.attach(__kmpc_get_taskid, {onLeave: function (args) {send("__kmpc_get_taskid");}});

var __kmpc_global_num_threads = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_global_num_threads")
Interceptor.attach(__kmpc_global_num_threads, {onLeave: function (args) {send("__kmpc_global_num_threads");}});

var __kmpc_global_thread_num = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_global_thread_num")
Interceptor.attach(__kmpc_global_thread_num, {onLeave: function (args) {send("__kmpc_global_thread_num");}});

var __kmpc_in_parallel = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_in_parallel")
Interceptor.attach(__kmpc_in_parallel, {onLeave: function (args) {send("__kmpc_in_parallel");}});

var __kmpc_init_allocator = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_init_allocator")
Interceptor.attach(__kmpc_init_allocator, {onLeave: function (args) {send("__kmpc_init_allocator");}});

var __kmpc_init_lock = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_init_lock")
Interceptor.attach(__kmpc_init_lock, {onLeave: function (args) {send("__kmpc_init_lock");}});

var __kmpc_init_nest_lock = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_init_nest_lock")
Interceptor.attach(__kmpc_init_nest_lock, {onLeave: function (args) {send("__kmpc_init_nest_lock");}});

var __kmpc_invoke_task_func = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_invoke_task_func")
Interceptor.attach(__kmpc_invoke_task_func, {onLeave: function (args) {send("__kmpc_invoke_task_func");}});

var __kmpc_master = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_master")
Interceptor.attach(__kmpc_master, {onLeave: function (args) {send("__kmpc_master");}});

var __kmpc_next_section = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_next_section")
Interceptor.attach(__kmpc_next_section, {onLeave: function (args) {send("__kmpc_next_section");}});

var __kmpc_ok_to_fork = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_ok_to_fork")
Interceptor.attach(__kmpc_ok_to_fork, {onLeave: function (args) {send("__kmpc_ok_to_fork");}});

var __kmpc_omp_reg_task_with_affinity = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_omp_reg_task_with_affinity")
Interceptor.attach(__kmpc_omp_reg_task_with_affinity, {onLeave: function (args) {send("__kmpc_omp_reg_task_with_affinity");}});

var __kmpc_omp_task = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_omp_task")
Interceptor.attach(__kmpc_omp_task, {onLeave: function (args) {send("__kmpc_omp_task");}});

var __kmpc_omp_task_alloc = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_omp_task_alloc")
Interceptor.attach(__kmpc_omp_task_alloc, {onLeave: function (args) {send("__kmpc_omp_task_alloc");}});

var __kmpc_omp_task_begin_if0 = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_omp_task_begin_if0")
Interceptor.attach(__kmpc_omp_task_begin_if0, {onLeave: function (args) {send("__kmpc_omp_task_begin_if0");}});

var __kmpc_omp_task_complete_if0 = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_omp_task_complete_if0")
Interceptor.attach(__kmpc_omp_task_complete_if0, {onLeave: function (args) {send("__kmpc_omp_task_complete_if0");}});

var __kmpc_omp_task_parts = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_omp_task_parts")
Interceptor.attach(__kmpc_omp_task_parts, {onLeave: function (args) {send("__kmpc_omp_task_parts");}});

var __kmpc_omp_task_with_deps = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_omp_task_with_deps")
Interceptor.attach(__kmpc_omp_task_with_deps, {onLeave: function (args) {send("__kmpc_omp_task_with_deps");}});

var __kmpc_omp_taskwait = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_omp_taskwait")
Interceptor.attach(__kmpc_omp_taskwait, {onLeave: function (args) {send("__kmpc_omp_taskwait");}});

var __kmpc_omp_taskyield = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_omp_taskyield")
Interceptor.attach(__kmpc_omp_taskyield, {onLeave: function (args) {send("__kmpc_omp_taskyield");}});

var __kmpc_omp_wait_deps = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_omp_wait_deps")
Interceptor.attach(__kmpc_omp_wait_deps, {onLeave: function (args) {send("__kmpc_omp_wait_deps");}});

var __kmpc_ordered = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_ordered")
Interceptor.attach(__kmpc_ordered, {onLeave: function (args) {send("__kmpc_ordered");}});

var __kmpc_pause_resource = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_pause_resource")
Interceptor.attach(__kmpc_pause_resource, {onLeave: function (args) {send("__kmpc_pause_resource");}});

var __kmpc_pop_num_threads = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_pop_num_threads")
Interceptor.attach(__kmpc_pop_num_threads, {onLeave: function (args) {send("__kmpc_pop_num_threads");}});

var __kmpc_proxy_task_completed = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_proxy_task_completed")
Interceptor.attach(__kmpc_proxy_task_completed, {onLeave: function (args) {send("__kmpc_proxy_task_completed");}});

var __kmpc_proxy_task_completed_ooo = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_proxy_task_completed_ooo")
Interceptor.attach(__kmpc_proxy_task_completed_ooo, {onLeave: function (args) {send("__kmpc_proxy_task_completed_ooo");}});

var __kmpc_push_num_teams = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_push_num_teams")
Interceptor.attach(__kmpc_push_num_teams, {onLeave: function (args) {send("__kmpc_push_num_teams");}});

var __kmpc_push_num_threads = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_push_num_threads")
Interceptor.attach(__kmpc_push_num_threads, {onLeave: function (args) {send("__kmpc_push_num_threads");}});

var __kmpc_push_proc_bind = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_push_proc_bind")
Interceptor.attach(__kmpc_push_proc_bind, {onLeave: function (args) {send("__kmpc_push_proc_bind");}});

var __kmpc_reduce = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_reduce")
Interceptor.attach(__kmpc_reduce, {onLeave: function (args) {send("__kmpc_reduce");}});

var __kmpc_reduce_nowait = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_reduce_nowait")
Interceptor.attach(__kmpc_reduce_nowait, {onLeave: function (args) {send("__kmpc_reduce_nowait");}});

var __kmpc_sections_init = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_sections_init")
Interceptor.attach(__kmpc_sections_init, {onLeave: function (args) {send("__kmpc_sections_init");}});

var __kmpc_serialized_parallel = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_serialized_parallel")
Interceptor.attach(__kmpc_serialized_parallel, {onLeave: function (args) {send("__kmpc_serialized_parallel");}});

var __kmpc_set_default_allocator = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_set_default_allocator")
Interceptor.attach(__kmpc_set_default_allocator, {onLeave: function (args) {send("__kmpc_set_default_allocator");}});

var __kmpc_set_lock = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_set_lock")
Interceptor.attach(__kmpc_set_lock, {onLeave: function (args) {send("__kmpc_set_lock");}});

var __kmpc_set_nest_lock = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_set_nest_lock")
Interceptor.attach(__kmpc_set_nest_lock, {onLeave: function (args) {send("__kmpc_set_nest_lock");}});

var __kmpc_single = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_single")
Interceptor.attach(__kmpc_single, {onLeave: function (args) {send("__kmpc_single");}});

var __kmpc_task_allow_completion_event = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_task_allow_completion_event")
Interceptor.attach(__kmpc_task_allow_completion_event, {onLeave: function (args) {send("__kmpc_task_allow_completion_event");}});

var __kmpc_task_reduction_get_th_data = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_task_reduction_get_th_data")
Interceptor.attach(__kmpc_task_reduction_get_th_data, {onLeave: function (args) {send("__kmpc_task_reduction_get_th_data");}});

var __kmpc_task_reduction_init = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_task_reduction_init")
Interceptor.attach(__kmpc_task_reduction_init, {onLeave: function (args) {send("__kmpc_task_reduction_init");}});

var __kmpc_task_reduction_modifier_fini = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_task_reduction_modifier_fini")
Interceptor.attach(__kmpc_task_reduction_modifier_fini, {onLeave: function (args) {send("__kmpc_task_reduction_modifier_fini");}});

var __kmpc_task_reduction_modifier_init = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_task_reduction_modifier_init")
Interceptor.attach(__kmpc_task_reduction_modifier_init, {onLeave: function (args) {send("__kmpc_task_reduction_modifier_init");}});

var __kmpc_taskgroup = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_taskgroup")
Interceptor.attach(__kmpc_taskgroup, {onLeave: function (args) {send("__kmpc_taskgroup");}});

var __kmpc_taskloop = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_taskloop")
Interceptor.attach(__kmpc_taskloop, {onLeave: function (args) {send("__kmpc_taskloop");}});

var __kmpc_taskred_init = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_taskred_init")
Interceptor.attach(__kmpc_taskred_init, {onLeave: function (args) {send("__kmpc_taskred_init");}});

var __kmpc_taskred_modifier_init = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_taskred_modifier_init")
Interceptor.attach(__kmpc_taskred_modifier_init, {onLeave: function (args) {send("__kmpc_taskred_modifier_init");}});

var __kmpc_team_static_init_4 = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_team_static_init_4")
Interceptor.attach(__kmpc_team_static_init_4, {onLeave: function (args) {send("__kmpc_team_static_init_4");}});

var __kmpc_team_static_init_4u = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_team_static_init_4u")
Interceptor.attach(__kmpc_team_static_init_4u, {onLeave: function (args) {send("__kmpc_team_static_init_4u");}});

var __kmpc_team_static_init_8 = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_team_static_init_8")
Interceptor.attach(__kmpc_team_static_init_8, {onLeave: function (args) {send("__kmpc_team_static_init_8");}});

var __kmpc_team_static_init_8u = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_team_static_init_8u")
Interceptor.attach(__kmpc_team_static_init_8u, {onLeave: function (args) {send("__kmpc_team_static_init_8u");}});

var __kmpc_test_lock = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_test_lock")
Interceptor.attach(__kmpc_test_lock, {onLeave: function (args) {send("__kmpc_test_lock");}});

var __kmpc_test_nest_lock = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_test_nest_lock")
Interceptor.attach(__kmpc_test_nest_lock, {onLeave: function (args) {send("__kmpc_test_nest_lock");}});

var __kmpc_threadprivate = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_threadprivate")
Interceptor.attach(__kmpc_threadprivate, {onLeave: function (args) {send("__kmpc_threadprivate");}});

var __kmpc_threadprivate_cached = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_threadprivate_cached")
Interceptor.attach(__kmpc_threadprivate_cached, {onLeave: function (args) {send("__kmpc_threadprivate_cached");}});

var __kmpc_threadprivate_register = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_threadprivate_register")
Interceptor.attach(__kmpc_threadprivate_register, {onLeave: function (args) {send("__kmpc_threadprivate_register");}});

var __kmpc_threadprivate_register_vec = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_threadprivate_register_vec")
Interceptor.attach(__kmpc_threadprivate_register_vec, {onLeave: function (args) {send("__kmpc_threadprivate_register_vec");}});

var __kmpc_unset_lock = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_unset_lock")
Interceptor.attach(__kmpc_unset_lock, {onLeave: function (args) {send("__kmpc_unset_lock");}});

var __kmpc_unset_nest_lock = Module.findExportByName("libomp140d.x86_64.dll", "__kmpc_unset_nest_lock")
Interceptor.attach(__kmpc_unset_nest_lock, {onLeave: function (args) {send("__kmpc_unset_nest_lock");}});

var kmp_aligned_malloc = Module.findExportByName("libomp140d.x86_64.dll", "kmp_aligned_malloc")
Interceptor.attach(kmp_aligned_malloc, {onLeave: function (args) {send("kmp_aligned_malloc");}});

var kmp_calloc = Module.findExportByName("libomp140d.x86_64.dll", "kmp_calloc")
Interceptor.attach(kmp_calloc, {onLeave: function (args) {send("kmp_calloc");}});

var kmp_create_affinity_mask = Module.findExportByName("libomp140d.x86_64.dll", "kmp_create_affinity_mask")
Interceptor.attach(kmp_create_affinity_mask, {onLeave: function (args) {send("kmp_create_affinity_mask");}});

var kmp_destroy_affinity_mask = Module.findExportByName("libomp140d.x86_64.dll", "kmp_destroy_affinity_mask")
Interceptor.attach(kmp_destroy_affinity_mask, {onLeave: function (args) {send("kmp_destroy_affinity_mask");}});

var kmp_free = Module.findExportByName("libomp140d.x86_64.dll", "kmp_free")
Interceptor.attach(kmp_free, {onLeave: function (args) {send("kmp_free");}});

var kmp_get_affinity = Module.findExportByName("libomp140d.x86_64.dll", "kmp_get_affinity")
Interceptor.attach(kmp_get_affinity, {onLeave: function (args) {send("kmp_get_affinity");}});

var kmp_get_affinity_mask_proc = Module.findExportByName("libomp140d.x86_64.dll", "kmp_get_affinity_mask_proc")
Interceptor.attach(kmp_get_affinity_mask_proc, {onLeave: function (args) {send("kmp_get_affinity_mask_proc");}});

var kmp_get_affinity_max_proc = Module.findExportByName("libomp140d.x86_64.dll", "kmp_get_affinity_max_proc")
Interceptor.attach(kmp_get_affinity_max_proc, {onLeave: function (args) {send("kmp_get_affinity_max_proc");}});

var kmp_get_blocktime = Module.findExportByName("libomp140d.x86_64.dll", "kmp_get_blocktime")
Interceptor.attach(kmp_get_blocktime, {onLeave: function (args) {send("kmp_get_blocktime");}});

var kmp_get_cancellation_status = Module.findExportByName("libomp140d.x86_64.dll", "kmp_get_cancellation_status")
Interceptor.attach(kmp_get_cancellation_status, {onLeave: function (args) {send("kmp_get_cancellation_status");}});

var kmp_get_library = Module.findExportByName("libomp140d.x86_64.dll", "kmp_get_library")
Interceptor.attach(kmp_get_library, {onLeave: function (args) {send("kmp_get_library");}});

var kmp_get_num_known_threads = Module.findExportByName("libomp140d.x86_64.dll", "kmp_get_num_known_threads")
Interceptor.attach(kmp_get_num_known_threads, {onLeave: function (args) {send("kmp_get_num_known_threads");}});

var kmp_get_stacksize = Module.findExportByName("libomp140d.x86_64.dll", "kmp_get_stacksize")
Interceptor.attach(kmp_get_stacksize, {onLeave: function (args) {send("kmp_get_stacksize");}});

var kmp_get_stacksize_s = Module.findExportByName("libomp140d.x86_64.dll", "kmp_get_stacksize_s")
Interceptor.attach(kmp_get_stacksize_s, {onLeave: function (args) {send("kmp_get_stacksize_s");}});

var kmp_malloc = Module.findExportByName("libomp140d.x86_64.dll", "kmp_malloc")
Interceptor.attach(kmp_malloc, {onLeave: function (args) {send("kmp_malloc");}});

var kmp_realloc = Module.findExportByName("libomp140d.x86_64.dll", "kmp_realloc")
Interceptor.attach(kmp_realloc, {onLeave: function (args) {send("kmp_realloc");}});

var kmp_set_affinity = Module.findExportByName("libomp140d.x86_64.dll", "kmp_set_affinity")
Interceptor.attach(kmp_set_affinity, {onLeave: function (args) {send("kmp_set_affinity");}});

var kmp_set_affinity_mask_proc = Module.findExportByName("libomp140d.x86_64.dll", "kmp_set_affinity_mask_proc")
Interceptor.attach(kmp_set_affinity_mask_proc, {onLeave: function (args) {send("kmp_set_affinity_mask_proc");}});

var kmp_set_blocktime = Module.findExportByName("libomp140d.x86_64.dll", "kmp_set_blocktime")
Interceptor.attach(kmp_set_blocktime, {onLeave: function (args) {send("kmp_set_blocktime");}});

var kmp_set_defaults = Module.findExportByName("libomp140d.x86_64.dll", "kmp_set_defaults")
Interceptor.attach(kmp_set_defaults, {onLeave: function (args) {send("kmp_set_defaults");}});

var kmp_set_disp_num_buffers = Module.findExportByName("libomp140d.x86_64.dll", "kmp_set_disp_num_buffers")
Interceptor.attach(kmp_set_disp_num_buffers, {onLeave: function (args) {send("kmp_set_disp_num_buffers");}});

var kmp_set_library = Module.findExportByName("libomp140d.x86_64.dll", "kmp_set_library")
Interceptor.attach(kmp_set_library, {onLeave: function (args) {send("kmp_set_library");}});

var kmp_set_library_serial = Module.findExportByName("libomp140d.x86_64.dll", "kmp_set_library_serial")
Interceptor.attach(kmp_set_library_serial, {onLeave: function (args) {send("kmp_set_library_serial");}});

var kmp_set_library_throughput = Module.findExportByName("libomp140d.x86_64.dll", "kmp_set_library_throughput")
Interceptor.attach(kmp_set_library_throughput, {onLeave: function (args) {send("kmp_set_library_throughput");}});

var kmp_set_library_turnaround = Module.findExportByName("libomp140d.x86_64.dll", "kmp_set_library_turnaround")
Interceptor.attach(kmp_set_library_turnaround, {onLeave: function (args) {send("kmp_set_library_turnaround");}});

var kmp_set_stacksize = Module.findExportByName("libomp140d.x86_64.dll", "kmp_set_stacksize")
Interceptor.attach(kmp_set_stacksize, {onLeave: function (args) {send("kmp_set_stacksize");}});

var kmp_set_stacksize_s = Module.findExportByName("libomp140d.x86_64.dll", "kmp_set_stacksize_s")
Interceptor.attach(kmp_set_stacksize_s, {onLeave: function (args) {send("kmp_set_stacksize_s");}});

var kmp_set_warnings_off = Module.findExportByName("libomp140d.x86_64.dll", "kmp_set_warnings_off")
Interceptor.attach(kmp_set_warnings_off, {onLeave: function (args) {send("kmp_set_warnings_off");}});

var kmp_set_warnings_on = Module.findExportByName("libomp140d.x86_64.dll", "kmp_set_warnings_on")
Interceptor.attach(kmp_set_warnings_on, {onLeave: function (args) {send("kmp_set_warnings_on");}});

var kmp_unset_affinity_mask_proc = Module.findExportByName("libomp140d.x86_64.dll", "kmp_unset_affinity_mask_proc")
Interceptor.attach(kmp_unset_affinity_mask_proc, {onLeave: function (args) {send("kmp_unset_affinity_mask_proc");}});

var kmpc_aligned_malloc = Module.findExportByName("libomp140d.x86_64.dll", "kmpc_aligned_malloc")
Interceptor.attach(kmpc_aligned_malloc, {onLeave: function (args) {send("kmpc_aligned_malloc");}});

var kmpc_calloc = Module.findExportByName("libomp140d.x86_64.dll", "kmpc_calloc")
Interceptor.attach(kmpc_calloc, {onLeave: function (args) {send("kmpc_calloc");}});

var kmpc_free = Module.findExportByName("libomp140d.x86_64.dll", "kmpc_free")
Interceptor.attach(kmpc_free, {onLeave: function (args) {send("kmpc_free");}});

var kmpc_get_affinity_mask_proc = Module.findExportByName("libomp140d.x86_64.dll", "kmpc_get_affinity_mask_proc")
Interceptor.attach(kmpc_get_affinity_mask_proc, {onLeave: function (args) {send("kmpc_get_affinity_mask_proc");}});

var kmpc_malloc = Module.findExportByName("libomp140d.x86_64.dll", "kmpc_malloc")
Interceptor.attach(kmpc_malloc, {onLeave: function (args) {send("kmpc_malloc");}});

var kmpc_realloc = Module.findExportByName("libomp140d.x86_64.dll", "kmpc_realloc")
Interceptor.attach(kmpc_realloc, {onLeave: function (args) {send("kmpc_realloc");}});

var kmpc_set_affinity_mask_proc = Module.findExportByName("libomp140d.x86_64.dll", "kmpc_set_affinity_mask_proc")
Interceptor.attach(kmpc_set_affinity_mask_proc, {onLeave: function (args) {send("kmpc_set_affinity_mask_proc");}});

var kmpc_set_blocktime = Module.findExportByName("libomp140d.x86_64.dll", "kmpc_set_blocktime")
Interceptor.attach(kmpc_set_blocktime, {onLeave: function (args) {send("kmpc_set_blocktime");}});

var kmpc_set_defaults = Module.findExportByName("libomp140d.x86_64.dll", "kmpc_set_defaults")
Interceptor.attach(kmpc_set_defaults, {onLeave: function (args) {send("kmpc_set_defaults");}});

var kmpc_set_disp_num_buffers = Module.findExportByName("libomp140d.x86_64.dll", "kmpc_set_disp_num_buffers")
Interceptor.attach(kmpc_set_disp_num_buffers, {onLeave: function (args) {send("kmpc_set_disp_num_buffers");}});

var kmpc_set_library = Module.findExportByName("libomp140d.x86_64.dll", "kmpc_set_library")
Interceptor.attach(kmpc_set_library, {onLeave: function (args) {send("kmpc_set_library");}});

var kmpc_set_stacksize = Module.findExportByName("libomp140d.x86_64.dll", "kmpc_set_stacksize")
Interceptor.attach(kmpc_set_stacksize, {onLeave: function (args) {send("kmpc_set_stacksize");}});

var kmpc_set_stacksize_s = Module.findExportByName("libomp140d.x86_64.dll", "kmpc_set_stacksize_s")
Interceptor.attach(kmpc_set_stacksize_s, {onLeave: function (args) {send("kmpc_set_stacksize_s");}});

var kmpc_unset_affinity_mask_proc = Module.findExportByName("libomp140d.x86_64.dll", "kmpc_unset_affinity_mask_proc")
Interceptor.attach(kmpc_unset_affinity_mask_proc, {onLeave: function (args) {send("kmpc_unset_affinity_mask_proc");}});

var omp_alloc = Module.findExportByName("libomp140d.x86_64.dll", "omp_alloc")
Interceptor.attach(omp_alloc, {onLeave: function (args) {send("omp_alloc");}});

var omp_capture_affinity = Module.findExportByName("libomp140d.x86_64.dll", "omp_capture_affinity")
Interceptor.attach(omp_capture_affinity, {onLeave: function (args) {send("omp_capture_affinity");}});

var omp_cgroup_mem_alloc = Module.findExportByName("libomp140d.x86_64.dll", "omp_cgroup_mem_alloc")
Interceptor.attach(omp_cgroup_mem_alloc, {onLeave: function (args) {send("omp_cgroup_mem_alloc");}});

var omp_const_mem_alloc = Module.findExportByName("libomp140d.x86_64.dll", "omp_const_mem_alloc")
Interceptor.attach(omp_const_mem_alloc, {onLeave: function (args) {send("omp_const_mem_alloc");}});

var omp_const_mem_space = Module.findExportByName("libomp140d.x86_64.dll", "omp_const_mem_space")
Interceptor.attach(omp_const_mem_space, {onLeave: function (args) {send("omp_const_mem_space");}});

var omp_control_tool = Module.findExportByName("libomp140d.x86_64.dll", "omp_control_tool")
Interceptor.attach(omp_control_tool, {onLeave: function (args) {send("omp_control_tool");}});

var omp_default_mem_alloc = Module.findExportByName("libomp140d.x86_64.dll", "omp_default_mem_alloc")
Interceptor.attach(omp_default_mem_alloc, {onLeave: function (args) {send("omp_default_mem_alloc");}});

var omp_default_mem_space = Module.findExportByName("libomp140d.x86_64.dll", "omp_default_mem_space")
Interceptor.attach(omp_default_mem_space, {onLeave: function (args) {send("omp_default_mem_space");}});

var omp_destroy_allocator = Module.findExportByName("libomp140d.x86_64.dll", "omp_destroy_allocator")
Interceptor.attach(omp_destroy_allocator, {onLeave: function (args) {send("omp_destroy_allocator");}});

var omp_destroy_lock = Module.findExportByName("libomp140d.x86_64.dll", "omp_destroy_lock")
Interceptor.attach(omp_destroy_lock, {onLeave: function (args) {send("omp_destroy_lock");}});

var omp_destroy_nest_lock = Module.findExportByName("libomp140d.x86_64.dll", "omp_destroy_nest_lock")
Interceptor.attach(omp_destroy_nest_lock, {onLeave: function (args) {send("omp_destroy_nest_lock");}});

var omp_display_affinity = Module.findExportByName("libomp140d.x86_64.dll", "omp_display_affinity")
Interceptor.attach(omp_display_affinity, {onLeave: function (args) {send("omp_display_affinity");}});

var omp_display_env = Module.findExportByName("libomp140d.x86_64.dll", "omp_display_env")
Interceptor.attach(omp_display_env, {onLeave: function (args) {send("omp_display_env");}});

var omp_free = Module.findExportByName("libomp140d.x86_64.dll", "omp_free")
Interceptor.attach(omp_free, {onLeave: function (args) {send("omp_free");}});

var omp_fulfill_event = Module.findExportByName("libomp140d.x86_64.dll", "omp_fulfill_event")
Interceptor.attach(omp_fulfill_event, {onLeave: function (args) {send("omp_fulfill_event");}});

var omp_get_active_level = Module.findExportByName("libomp140d.x86_64.dll", "omp_get_active_level")
Interceptor.attach(omp_get_active_level, {onLeave: function (args) {send("omp_get_active_level");}});

var omp_get_affinity_format = Module.findExportByName("libomp140d.x86_64.dll", "omp_get_affinity_format")
Interceptor.attach(omp_get_affinity_format, {onLeave: function (args) {send("omp_get_affinity_format");}});

var omp_get_ancestor_thread_num = Module.findExportByName("libomp140d.x86_64.dll", "omp_get_ancestor_thread_num")
Interceptor.attach(omp_get_ancestor_thread_num, {onLeave: function (args) {send("omp_get_ancestor_thread_num");}});

var omp_get_cancellation = Module.findExportByName("libomp140d.x86_64.dll", "omp_get_cancellation")
Interceptor.attach(omp_get_cancellation, {onLeave: function (args) {send("omp_get_cancellation");}});

var omp_get_default_allocator = Module.findExportByName("libomp140d.x86_64.dll", "omp_get_default_allocator")
Interceptor.attach(omp_get_default_allocator, {onLeave: function (args) {send("omp_get_default_allocator");}});

var omp_get_default_device = Module.findExportByName("libomp140d.x86_64.dll", "omp_get_default_device")
Interceptor.attach(omp_get_default_device, {onLeave: function (args) {send("omp_get_default_device");}});

var omp_get_device_num = Module.findExportByName("libomp140d.x86_64.dll", "omp_get_device_num")
Interceptor.attach(omp_get_device_num, {onLeave: function (args) {send("omp_get_device_num");}});

var omp_get_dynamic = Module.findExportByName("libomp140d.x86_64.dll", "omp_get_dynamic")
Interceptor.attach(omp_get_dynamic, {onLeave: function (args) {send("omp_get_dynamic");}});

var omp_get_initial_device = Module.findExportByName("libomp140d.x86_64.dll", "omp_get_initial_device")
Interceptor.attach(omp_get_initial_device, {onLeave: function (args) {send("omp_get_initial_device");}});

var omp_get_level = Module.findExportByName("libomp140d.x86_64.dll", "omp_get_level")
Interceptor.attach(omp_get_level, {onLeave: function (args) {send("omp_get_level");}});

var omp_get_max_active_levels = Module.findExportByName("libomp140d.x86_64.dll", "omp_get_max_active_levels")
Interceptor.attach(omp_get_max_active_levels, {onLeave: function (args) {send("omp_get_max_active_levels");}});

var omp_get_max_task_priority = Module.findExportByName("libomp140d.x86_64.dll", "omp_get_max_task_priority")
Interceptor.attach(omp_get_max_task_priority, {onLeave: function (args) {send("omp_get_max_task_priority");}});

var omp_get_max_threads = Module.findExportByName("libomp140d.x86_64.dll", "omp_get_max_threads")
Interceptor.attach(omp_get_max_threads, {onLeave: function (args) {send("omp_get_max_threads");}});

var omp_get_nested = Module.findExportByName("libomp140d.x86_64.dll", "omp_get_nested")
Interceptor.attach(omp_get_nested, {onLeave: function (args) {send("omp_get_nested");}});

var omp_get_num_devices = Module.findExportByName("libomp140d.x86_64.dll", "omp_get_num_devices")
Interceptor.attach(omp_get_num_devices, {onLeave: function (args) {send("omp_get_num_devices");}});

var omp_get_num_places = Module.findExportByName("libomp140d.x86_64.dll", "omp_get_num_places")
Interceptor.attach(omp_get_num_places, {onLeave: function (args) {send("omp_get_num_places");}});

var omp_get_num_procs = Module.findExportByName("libomp140d.x86_64.dll", "omp_get_num_procs")
Interceptor.attach(omp_get_num_procs, {onLeave: function (args) {send("omp_get_num_procs");}});

var omp_get_num_teams = Module.findExportByName("libomp140d.x86_64.dll", "omp_get_num_teams")
Interceptor.attach(omp_get_num_teams, {onLeave: function (args) {send("omp_get_num_teams");}});

var omp_get_num_threads = Module.findExportByName("libomp140d.x86_64.dll", "omp_get_num_threads")
Interceptor.attach(omp_get_num_threads, {onLeave: function (args) {send("omp_get_num_threads");}});

var omp_get_partition_num_places = Module.findExportByName("libomp140d.x86_64.dll", "omp_get_partition_num_places")
Interceptor.attach(omp_get_partition_num_places, {onLeave: function (args) {send("omp_get_partition_num_places");}});

var omp_get_partition_place_nums = Module.findExportByName("libomp140d.x86_64.dll", "omp_get_partition_place_nums")
Interceptor.attach(omp_get_partition_place_nums, {onLeave: function (args) {send("omp_get_partition_place_nums");}});

var omp_get_place_num = Module.findExportByName("libomp140d.x86_64.dll", "omp_get_place_num")
Interceptor.attach(omp_get_place_num, {onLeave: function (args) {send("omp_get_place_num");}});

var omp_get_place_num_procs = Module.findExportByName("libomp140d.x86_64.dll", "omp_get_place_num_procs")
Interceptor.attach(omp_get_place_num_procs, {onLeave: function (args) {send("omp_get_place_num_procs");}});

var omp_get_place_proc_ids = Module.findExportByName("libomp140d.x86_64.dll", "omp_get_place_proc_ids")
Interceptor.attach(omp_get_place_proc_ids, {onLeave: function (args) {send("omp_get_place_proc_ids");}});

var omp_get_proc_bind = Module.findExportByName("libomp140d.x86_64.dll", "omp_get_proc_bind")
Interceptor.attach(omp_get_proc_bind, {onLeave: function (args) {send("omp_get_proc_bind");}});

var omp_get_schedule = Module.findExportByName("libomp140d.x86_64.dll", "omp_get_schedule")
Interceptor.attach(omp_get_schedule, {onLeave: function (args) {send("omp_get_schedule");}});

var omp_get_supported_active_levels = Module.findExportByName("libomp140d.x86_64.dll", "omp_get_supported_active_levels")
Interceptor.attach(omp_get_supported_active_levels, {onLeave: function (args) {send("omp_get_supported_active_levels");}});

var omp_get_team_num = Module.findExportByName("libomp140d.x86_64.dll", "omp_get_team_num")
Interceptor.attach(omp_get_team_num, {onLeave: function (args) {send("omp_get_team_num");}});

var omp_get_team_size = Module.findExportByName("libomp140d.x86_64.dll", "omp_get_team_size")
Interceptor.attach(omp_get_team_size, {onLeave: function (args) {send("omp_get_team_size");}});

var omp_get_thread_limit = Module.findExportByName("libomp140d.x86_64.dll", "omp_get_thread_limit")
Interceptor.attach(omp_get_thread_limit, {onLeave: function (args) {send("omp_get_thread_limit");}});

var omp_get_thread_num = Module.findExportByName("libomp140d.x86_64.dll", "omp_get_thread_num")
Interceptor.attach(omp_get_thread_num, {onLeave: function (args) {send("omp_get_thread_num");}});

var omp_get_wtick = Module.findExportByName("libomp140d.x86_64.dll", "omp_get_wtick")
Interceptor.attach(omp_get_wtick, {onLeave: function (args) {send("omp_get_wtick");}});

var omp_get_wtime = Module.findExportByName("libomp140d.x86_64.dll", "omp_get_wtime")
Interceptor.attach(omp_get_wtime, {onLeave: function (args) {send("omp_get_wtime");}});

var omp_high_bw_mem_alloc = Module.findExportByName("libomp140d.x86_64.dll", "omp_high_bw_mem_alloc")
Interceptor.attach(omp_high_bw_mem_alloc, {onLeave: function (args) {send("omp_high_bw_mem_alloc");}});

var omp_high_bw_mem_space = Module.findExportByName("libomp140d.x86_64.dll", "omp_high_bw_mem_space")
Interceptor.attach(omp_high_bw_mem_space, {onLeave: function (args) {send("omp_high_bw_mem_space");}});

var omp_in_final = Module.findExportByName("libomp140d.x86_64.dll", "omp_in_final")
Interceptor.attach(omp_in_final, {onLeave: function (args) {send("omp_in_final");}});

var omp_in_parallel = Module.findExportByName("libomp140d.x86_64.dll", "omp_in_parallel")
Interceptor.attach(omp_in_parallel, {onLeave: function (args) {send("omp_in_parallel");}});

var omp_init_allocator = Module.findExportByName("libomp140d.x86_64.dll", "omp_init_allocator")
Interceptor.attach(omp_init_allocator, {onLeave: function (args) {send("omp_init_allocator");}});

var omp_init_lock = Module.findExportByName("libomp140d.x86_64.dll", "omp_init_lock")
Interceptor.attach(omp_init_lock, {onLeave: function (args) {send("omp_init_lock");}});

var omp_init_lock_with_hint = Module.findExportByName("libomp140d.x86_64.dll", "omp_init_lock_with_hint")
Interceptor.attach(omp_init_lock_with_hint, {onLeave: function (args) {send("omp_init_lock_with_hint");}});

var omp_init_nest_lock = Module.findExportByName("libomp140d.x86_64.dll", "omp_init_nest_lock")
Interceptor.attach(omp_init_nest_lock, {onLeave: function (args) {send("omp_init_nest_lock");}});

var omp_init_nest_lock_with_hint = Module.findExportByName("libomp140d.x86_64.dll", "omp_init_nest_lock_with_hint")
Interceptor.attach(omp_init_nest_lock_with_hint, {onLeave: function (args) {send("omp_init_nest_lock_with_hint");}});

var omp_is_initial_device = Module.findExportByName("libomp140d.x86_64.dll", "omp_is_initial_device")
Interceptor.attach(omp_is_initial_device, {onLeave: function (args) {send("omp_is_initial_device");}});

var omp_large_cap_mem_alloc = Module.findExportByName("libomp140d.x86_64.dll", "omp_large_cap_mem_alloc")
Interceptor.attach(omp_large_cap_mem_alloc, {onLeave: function (args) {send("omp_large_cap_mem_alloc");}});

var omp_large_cap_mem_space = Module.findExportByName("libomp140d.x86_64.dll", "omp_large_cap_mem_space")
Interceptor.attach(omp_large_cap_mem_space, {onLeave: function (args) {send("omp_large_cap_mem_space");}});

var omp_low_lat_mem_alloc = Module.findExportByName("libomp140d.x86_64.dll", "omp_low_lat_mem_alloc")
Interceptor.attach(omp_low_lat_mem_alloc, {onLeave: function (args) {send("omp_low_lat_mem_alloc");}});

var omp_low_lat_mem_space = Module.findExportByName("libomp140d.x86_64.dll", "omp_low_lat_mem_space")
Interceptor.attach(omp_low_lat_mem_space, {onLeave: function (args) {send("omp_low_lat_mem_space");}});

var omp_null_allocator = Module.findExportByName("libomp140d.x86_64.dll", "omp_null_allocator")
Interceptor.attach(omp_null_allocator, {onLeave: function (args) {send("omp_null_allocator");}});

var omp_pause_resource = Module.findExportByName("libomp140d.x86_64.dll", "omp_pause_resource")
Interceptor.attach(omp_pause_resource, {onLeave: function (args) {send("omp_pause_resource");}});

var omp_pause_resource_all = Module.findExportByName("libomp140d.x86_64.dll", "omp_pause_resource_all")
Interceptor.attach(omp_pause_resource_all, {onLeave: function (args) {send("omp_pause_resource_all");}});

var omp_pteam_mem_alloc = Module.findExportByName("libomp140d.x86_64.dll", "omp_pteam_mem_alloc")
Interceptor.attach(omp_pteam_mem_alloc, {onLeave: function (args) {send("omp_pteam_mem_alloc");}});

var omp_set_affinity_format = Module.findExportByName("libomp140d.x86_64.dll", "omp_set_affinity_format")
Interceptor.attach(omp_set_affinity_format, {onLeave: function (args) {send("omp_set_affinity_format");}});

var omp_set_default_allocator = Module.findExportByName("libomp140d.x86_64.dll", "omp_set_default_allocator")
Interceptor.attach(omp_set_default_allocator, {onLeave: function (args) {send("omp_set_default_allocator");}});

var omp_set_default_device = Module.findExportByName("libomp140d.x86_64.dll", "omp_set_default_device")
Interceptor.attach(omp_set_default_device, {onLeave: function (args) {send("omp_set_default_device");}});

var omp_set_dynamic = Module.findExportByName("libomp140d.x86_64.dll", "omp_set_dynamic")
Interceptor.attach(omp_set_dynamic, {onLeave: function (args) {send("omp_set_dynamic");}});

var omp_set_lock = Module.findExportByName("libomp140d.x86_64.dll", "omp_set_lock")
Interceptor.attach(omp_set_lock, {onLeave: function (args) {send("omp_set_lock");}});

var omp_set_max_active_levels = Module.findExportByName("libomp140d.x86_64.dll", "omp_set_max_active_levels")
Interceptor.attach(omp_set_max_active_levels, {onLeave: function (args) {send("omp_set_max_active_levels");}});

var omp_set_nest_lock = Module.findExportByName("libomp140d.x86_64.dll", "omp_set_nest_lock")
Interceptor.attach(omp_set_nest_lock, {onLeave: function (args) {send("omp_set_nest_lock");}});

var omp_set_nested = Module.findExportByName("libomp140d.x86_64.dll", "omp_set_nested")
Interceptor.attach(omp_set_nested, {onLeave: function (args) {send("omp_set_nested");}});

var omp_set_num_threads = Module.findExportByName("libomp140d.x86_64.dll", "omp_set_num_threads")
Interceptor.attach(omp_set_num_threads, {onLeave: function (args) {send("omp_set_num_threads");}});

var omp_set_schedule = Module.findExportByName("libomp140d.x86_64.dll", "omp_set_schedule")
Interceptor.attach(omp_set_schedule, {onLeave: function (args) {send("omp_set_schedule");}});

var omp_test_lock = Module.findExportByName("libomp140d.x86_64.dll", "omp_test_lock")
Interceptor.attach(omp_test_lock, {onLeave: function (args) {send("omp_test_lock");}});

var omp_test_nest_lock = Module.findExportByName("libomp140d.x86_64.dll", "omp_test_nest_lock")
Interceptor.attach(omp_test_nest_lock, {onLeave: function (args) {send("omp_test_nest_lock");}});

var omp_thread_mem_alloc = Module.findExportByName("libomp140d.x86_64.dll", "omp_thread_mem_alloc")
Interceptor.attach(omp_thread_mem_alloc, {onLeave: function (args) {send("omp_thread_mem_alloc");}});

var omp_unset_lock = Module.findExportByName("libomp140d.x86_64.dll", "omp_unset_lock")
Interceptor.attach(omp_unset_lock, {onLeave: function (args) {send("omp_unset_lock");}});

var omp_unset_nest_lock = Module.findExportByName("libomp140d.x86_64.dll", "omp_unset_nest_lock")
Interceptor.attach(omp_unset_nest_lock, {onLeave: function (args) {send("omp_unset_nest_lock");}});

var ompc_capture_affinity = Module.findExportByName("libomp140d.x86_64.dll", "ompc_capture_affinity")
Interceptor.attach(ompc_capture_affinity, {onLeave: function (args) {send("ompc_capture_affinity");}});

var ompc_display_affinity = Module.findExportByName("libomp140d.x86_64.dll", "ompc_display_affinity")
Interceptor.attach(ompc_display_affinity, {onLeave: function (args) {send("ompc_display_affinity");}});

var ompc_get_affinity_format = Module.findExportByName("libomp140d.x86_64.dll", "ompc_get_affinity_format")
Interceptor.attach(ompc_get_affinity_format, {onLeave: function (args) {send("ompc_get_affinity_format");}});

var ompc_get_ancestor_thread_num = Module.findExportByName("libomp140d.x86_64.dll", "ompc_get_ancestor_thread_num")
Interceptor.attach(ompc_get_ancestor_thread_num, {onLeave: function (args) {send("ompc_get_ancestor_thread_num");}});

var ompc_get_team_size = Module.findExportByName("libomp140d.x86_64.dll", "ompc_get_team_size")
Interceptor.attach(ompc_get_team_size, {onLeave: function (args) {send("ompc_get_team_size");}});

var ompc_set_affinity_format = Module.findExportByName("libomp140d.x86_64.dll", "ompc_set_affinity_format")
Interceptor.attach(ompc_set_affinity_format, {onLeave: function (args) {send("ompc_set_affinity_format");}});

var ompc_set_dynamic = Module.findExportByName("libomp140d.x86_64.dll", "ompc_set_dynamic")
Interceptor.attach(ompc_set_dynamic, {onLeave: function (args) {send("ompc_set_dynamic");}});

var ompc_set_max_active_levels = Module.findExportByName("libomp140d.x86_64.dll", "ompc_set_max_active_levels")
Interceptor.attach(ompc_set_max_active_levels, {onLeave: function (args) {send("ompc_set_max_active_levels");}});

var ompc_set_nested = Module.findExportByName("libomp140d.x86_64.dll", "ompc_set_nested")
Interceptor.attach(ompc_set_nested, {onLeave: function (args) {send("ompc_set_nested");}});

var ompc_set_num_threads = Module.findExportByName("libomp140d.x86_64.dll", "ompc_set_num_threads")
Interceptor.attach(ompc_set_num_threads, {onLeave: function (args) {send("ompc_set_num_threads");}});

var ompc_set_schedule = Module.findExportByName("libomp140d.x86_64.dll", "ompc_set_schedule")
Interceptor.attach(ompc_set_schedule, {onLeave: function (args) {send("ompc_set_schedule");}});

