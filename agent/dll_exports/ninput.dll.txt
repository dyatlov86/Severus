var AddPointerInteractionContext = Module.findExportByName("ninput.dll", "AddPointerInteractionContext")
Interceptor.attach(AddPointerInteractionContext, {onLeave: function (args) {send("AddPointerInteractionContext");}});

var BufferPointerPacketsInteractionContext = Module.findExportByName("ninput.dll", "BufferPointerPacketsInteractionContext")
Interceptor.attach(BufferPointerPacketsInteractionContext, {onLeave: function (args) {send("BufferPointerPacketsInteractionContext");}});

var CreateInteractionContext = Module.findExportByName("ninput.dll", "CreateInteractionContext")
Interceptor.attach(CreateInteractionContext, {onLeave: function (args) {send("CreateInteractionContext");}});

var DefaultInputHandler = Module.findExportByName("ninput.dll", "DefaultInputHandler")
Interceptor.attach(DefaultInputHandler, {onLeave: function (args) {send("DefaultInputHandler");}});

var DestroyInteractionContext = Module.findExportByName("ninput.dll", "DestroyInteractionContext")
Interceptor.attach(DestroyInteractionContext, {onLeave: function (args) {send("DestroyInteractionContext");}});

var GetCrossSlideParameterInteractionContext = Module.findExportByName("ninput.dll", "GetCrossSlideParameterInteractionContext")
Interceptor.attach(GetCrossSlideParameterInteractionContext, {onLeave: function (args) {send("GetCrossSlideParameterInteractionContext");}});

var GetHoldParameterInteractionContext = Module.findExportByName("ninput.dll", "GetHoldParameterInteractionContext")
Interceptor.attach(GetHoldParameterInteractionContext, {onLeave: function (args) {send("GetHoldParameterInteractionContext");}});

var GetInertiaParameterInteractionContext = Module.findExportByName("ninput.dll", "GetInertiaParameterInteractionContext")
Interceptor.attach(GetInertiaParameterInteractionContext, {onLeave: function (args) {send("GetInertiaParameterInteractionContext");}});

var GetInteractionConfigurationInteractionContext = Module.findExportByName("ninput.dll", "GetInteractionConfigurationInteractionContext")
Interceptor.attach(GetInteractionConfigurationInteractionContext, {onLeave: function (args) {send("GetInteractionConfigurationInteractionContext");}});

var GetMouseWheelParameterInteractionContext = Module.findExportByName("ninput.dll", "GetMouseWheelParameterInteractionContext")
Interceptor.attach(GetMouseWheelParameterInteractionContext, {onLeave: function (args) {send("GetMouseWheelParameterInteractionContext");}});

var GetPropertyInteractionContext = Module.findExportByName("ninput.dll", "GetPropertyInteractionContext")
Interceptor.attach(GetPropertyInteractionContext, {onLeave: function (args) {send("GetPropertyInteractionContext");}});

var GetStateInteractionContext = Module.findExportByName("ninput.dll", "GetStateInteractionContext")
Interceptor.attach(GetStateInteractionContext, {onLeave: function (args) {send("GetStateInteractionContext");}});

var GetTapParameterInteractionContext = Module.findExportByName("ninput.dll", "GetTapParameterInteractionContext")
Interceptor.attach(GetTapParameterInteractionContext, {onLeave: function (args) {send("GetTapParameterInteractionContext");}});

var GetTranslationParameterInteractionContext = Module.findExportByName("ninput.dll", "GetTranslationParameterInteractionContext")
Interceptor.attach(GetTranslationParameterInteractionContext, {onLeave: function (args) {send("GetTranslationParameterInteractionContext");}});

var ProcessBufferedPacketsInteractionContext = Module.findExportByName("ninput.dll", "ProcessBufferedPacketsInteractionContext")
Interceptor.attach(ProcessBufferedPacketsInteractionContext, {onLeave: function (args) {send("ProcessBufferedPacketsInteractionContext");}});

var ProcessInertiaInteractionContext = Module.findExportByName("ninput.dll", "ProcessInertiaInteractionContext")
Interceptor.attach(ProcessInertiaInteractionContext, {onLeave: function (args) {send("ProcessInertiaInteractionContext");}});

var ProcessPointerFramesInteractionContext = Module.findExportByName("ninput.dll", "ProcessPointerFramesInteractionContext")
Interceptor.attach(ProcessPointerFramesInteractionContext, {onLeave: function (args) {send("ProcessPointerFramesInteractionContext");}});

var RegisterOutputCallbackInteractionContext = Module.findExportByName("ninput.dll", "RegisterOutputCallbackInteractionContext")
Interceptor.attach(RegisterOutputCallbackInteractionContext, {onLeave: function (args) {send("RegisterOutputCallbackInteractionContext");}});

var RegisterOutputCallbackInteractionContext2 = Module.findExportByName("ninput.dll", "RegisterOutputCallbackInteractionContext2")
Interceptor.attach(RegisterOutputCallbackInteractionContext2, {onLeave: function (args) {send("RegisterOutputCallbackInteractionContext2");}});

var RemovePointerInteractionContext = Module.findExportByName("ninput.dll", "RemovePointerInteractionContext")
Interceptor.attach(RemovePointerInteractionContext, {onLeave: function (args) {send("RemovePointerInteractionContext");}});

var ResetInteractionContext = Module.findExportByName("ninput.dll", "ResetInteractionContext")
Interceptor.attach(ResetInteractionContext, {onLeave: function (args) {send("ResetInteractionContext");}});

var SetCrossSlideParametersInteractionContext = Module.findExportByName("ninput.dll", "SetCrossSlideParametersInteractionContext")
Interceptor.attach(SetCrossSlideParametersInteractionContext, {onLeave: function (args) {send("SetCrossSlideParametersInteractionContext");}});

var SetHoldParameterInteractionContext = Module.findExportByName("ninput.dll", "SetHoldParameterInteractionContext")
Interceptor.attach(SetHoldParameterInteractionContext, {onLeave: function (args) {send("SetHoldParameterInteractionContext");}});

var SetInertiaParameterInteractionContext = Module.findExportByName("ninput.dll", "SetInertiaParameterInteractionContext")
Interceptor.attach(SetInertiaParameterInteractionContext, {onLeave: function (args) {send("SetInertiaParameterInteractionContext");}});

var SetInteractionConfigurationInteractionContext = Module.findExportByName("ninput.dll", "SetInteractionConfigurationInteractionContext")
Interceptor.attach(SetInteractionConfigurationInteractionContext, {onLeave: function (args) {send("SetInteractionConfigurationInteractionContext");}});

var SetMouseWheelParameterInteractionContext = Module.findExportByName("ninput.dll", "SetMouseWheelParameterInteractionContext")
Interceptor.attach(SetMouseWheelParameterInteractionContext, {onLeave: function (args) {send("SetMouseWheelParameterInteractionContext");}});

var SetPivotInteractionContext = Module.findExportByName("ninput.dll", "SetPivotInteractionContext")
Interceptor.attach(SetPivotInteractionContext, {onLeave: function (args) {send("SetPivotInteractionContext");}});

var SetPropertyInteractionContext = Module.findExportByName("ninput.dll", "SetPropertyInteractionContext")
Interceptor.attach(SetPropertyInteractionContext, {onLeave: function (args) {send("SetPropertyInteractionContext");}});

var SetTapParameterInteractionContext = Module.findExportByName("ninput.dll", "SetTapParameterInteractionContext")
Interceptor.attach(SetTapParameterInteractionContext, {onLeave: function (args) {send("SetTapParameterInteractionContext");}});

var SetTranslationParameterInteractionContext = Module.findExportByName("ninput.dll", "SetTranslationParameterInteractionContext")
Interceptor.attach(SetTranslationParameterInteractionContext, {onLeave: function (args) {send("SetTranslationParameterInteractionContext");}});

var StopInteractionContext = Module.findExportByName("ninput.dll", "StopInteractionContext")
Interceptor.attach(StopInteractionContext, {onLeave: function (args) {send("StopInteractionContext");}});

