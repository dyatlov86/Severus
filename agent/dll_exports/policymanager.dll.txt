var EnterprisePolicyManagerStore_AcquireMergeLock = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_AcquireMergeLock")
Interceptor.attach(EnterprisePolicyManagerStore_AcquireMergeLock, {onLeave: function (args) {send("EnterprisePolicyManagerStore_AcquireMergeLock");}});

var EnterprisePolicyManagerStore_CSPConfigSourceAreaCreateNodeInstance = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_CSPConfigSourceAreaCreateNodeInstance")
Interceptor.attach(EnterprisePolicyManagerStore_CSPConfigSourceAreaCreateNodeInstance, {onLeave: function (args) {send("EnterprisePolicyManagerStore_CSPConfigSourceAreaCreateNodeInstance");}});

var EnterprisePolicyManagerStore_CSPConfigSourceAreaDeleteChild = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_CSPConfigSourceAreaDeleteChild")
Interceptor.attach(EnterprisePolicyManagerStore_CSPConfigSourceAreaDeleteChild, {onLeave: function (args) {send("EnterprisePolicyManagerStore_CSPConfigSourceAreaDeleteChild");}});

var EnterprisePolicyManagerStore_CSPConfigSourceAreaGetChildNodeNames = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_CSPConfigSourceAreaGetChildNodeNames")
Interceptor.attach(EnterprisePolicyManagerStore_CSPConfigSourceAreaGetChildNodeNames, {onLeave: function (args) {send("EnterprisePolicyManagerStore_CSPConfigSourceAreaGetChildNodeNames");}});

var EnterprisePolicyManagerStore_CSPConfigSourceAreaPolicyCreateNodeInstance = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_CSPConfigSourceAreaPolicyCreateNodeInstance")
Interceptor.attach(EnterprisePolicyManagerStore_CSPConfigSourceAreaPolicyCreateNodeInstance, {onLeave: function (args) {send("EnterprisePolicyManagerStore_CSPConfigSourceAreaPolicyCreateNodeInstance");}});

var EnterprisePolicyManagerStore_CSPConfigSourceAreaPolicyGetValue = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_CSPConfigSourceAreaPolicyGetValue")
Interceptor.attach(EnterprisePolicyManagerStore_CSPConfigSourceAreaPolicyGetValue, {onLeave: function (args) {send("EnterprisePolicyManagerStore_CSPConfigSourceAreaPolicyGetValue");}});

var EnterprisePolicyManagerStore_CSPConfigSourceAreaPolicySetValue = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_CSPConfigSourceAreaPolicySetValue")
Interceptor.attach(EnterprisePolicyManagerStore_CSPConfigSourceAreaPolicySetValue, {onLeave: function (args) {send("EnterprisePolicyManagerStore_CSPConfigSourceAreaPolicySetValue");}});

var EnterprisePolicyManagerStore_CSPConfigSourceDeleteChild = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_CSPConfigSourceDeleteChild")
Interceptor.attach(EnterprisePolicyManagerStore_CSPConfigSourceDeleteChild, {onLeave: function (args) {send("EnterprisePolicyManagerStore_CSPConfigSourceDeleteChild");}});

var EnterprisePolicyManagerStore_CSPResultAreaGetChildNodeNames = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_CSPResultAreaGetChildNodeNames")
Interceptor.attach(EnterprisePolicyManagerStore_CSPResultAreaGetChildNodeNames, {onLeave: function (args) {send("EnterprisePolicyManagerStore_CSPResultAreaGetChildNodeNames");}});

var EnterprisePolicyManagerStore_CSPResultAreaPolicyGetValue = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_CSPResultAreaPolicyGetValue")
Interceptor.attach(EnterprisePolicyManagerStore_CSPResultAreaPolicyGetValue, {onLeave: function (args) {send("EnterprisePolicyManagerStore_CSPResultAreaPolicyGetValue");}});

var EnterprisePolicyManagerStore_CSPResultGetAreaChildNodeNames = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_CSPResultGetAreaChildNodeNames")
Interceptor.attach(EnterprisePolicyManagerStore_CSPResultGetAreaChildNodeNames, {onLeave: function (args) {send("EnterprisePolicyManagerStore_CSPResultGetAreaChildNodeNames");}});

var EnterprisePolicyManagerStore_CreateProviderHive = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_CreateProviderHive")
Interceptor.attach(EnterprisePolicyManagerStore_CreateProviderHive, {onLeave: function (args) {send("EnterprisePolicyManagerStore_CreateProviderHive");}});

var EnterprisePolicyManagerStore_DeleteEnrollmentAdmxMetadata = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_DeleteEnrollmentAdmxMetadata")
Interceptor.attach(EnterprisePolicyManagerStore_DeleteEnrollmentAdmxMetadata, {onLeave: function (args) {send("EnterprisePolicyManagerStore_DeleteEnrollmentAdmxMetadata");}});

var EnterprisePolicyManagerStore_DeleteEnrollmentAppAdmxMetadata = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_DeleteEnrollmentAppAdmxMetadata")
Interceptor.attach(EnterprisePolicyManagerStore_DeleteEnrollmentAppAdmxMetadata, {onLeave: function (args) {send("EnterprisePolicyManagerStore_DeleteEnrollmentAppAdmxMetadata");}});

var EnterprisePolicyManagerStore_DeleteEnrollmentAppSettingTypeAdmxMetadata = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_DeleteEnrollmentAppSettingTypeAdmxMetadata")
Interceptor.attach(EnterprisePolicyManagerStore_DeleteEnrollmentAppSettingTypeAdmxMetadata, {onLeave: function (args) {send("EnterprisePolicyManagerStore_DeleteEnrollmentAppSettingTypeAdmxMetadata");}});

var EnterprisePolicyManagerStore_DeleteProvider = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_DeleteProvider")
Interceptor.attach(EnterprisePolicyManagerStore_DeleteProvider, {onLeave: function (args) {send("EnterprisePolicyManagerStore_DeleteProvider");}});

var EnterprisePolicyManagerStore_DeleteProviderContextSidArea = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_DeleteProviderContextSidArea")
Interceptor.attach(EnterprisePolicyManagerStore_DeleteProviderContextSidArea, {onLeave: function (args) {send("EnterprisePolicyManagerStore_DeleteProviderContextSidArea");}});

var EnterprisePolicyManagerStore_DeleteProviderContextSidAreaPolicy = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_DeleteProviderContextSidAreaPolicy")
Interceptor.attach(EnterprisePolicyManagerStore_DeleteProviderContextSidAreaPolicy, {onLeave: function (args) {send("EnterprisePolicyManagerStore_DeleteProviderContextSidAreaPolicy");}});

var EnterprisePolicyManagerStore_DeleteProviderIdAndMerge = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_DeleteProviderIdAndMerge")
Interceptor.attach(EnterprisePolicyManagerStore_DeleteProviderIdAndMerge, {onLeave: function (args) {send("EnterprisePolicyManagerStore_DeleteProviderIdAndMerge");}});

var EnterprisePolicyManagerStore_DeleteProviderIdAndMergeScopeData = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_DeleteProviderIdAndMergeScopeData")
Interceptor.attach(EnterprisePolicyManagerStore_DeleteProviderIdAndMergeScopeData, {onLeave: function (args) {send("EnterprisePolicyManagerStore_DeleteProviderIdAndMergeScopeData");}});

var EnterprisePolicyManagerStore_DeleteVirtuallyDeletedHive = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_DeleteVirtuallyDeletedHive")
Interceptor.attach(EnterprisePolicyManagerStore_DeleteVirtuallyDeletedHive, {onLeave: function (args) {send("EnterprisePolicyManagerStore_DeleteVirtuallyDeletedHive");}});

var EnterprisePolicyManagerStore_DoesProviderContextNameExist = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_DoesProviderContextNameExist")
Interceptor.attach(EnterprisePolicyManagerStore_DoesProviderContextNameExist, {onLeave: function (args) {send("EnterprisePolicyManagerStore_DoesProviderContextNameExist");}});

var EnterprisePolicyManagerStore_DoesProviderContextSidAreaExist = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_DoesProviderContextSidAreaExist")
Interceptor.attach(EnterprisePolicyManagerStore_DoesProviderContextSidAreaExist, {onLeave: function (args) {send("EnterprisePolicyManagerStore_DoesProviderContextSidAreaExist");}});

var EnterprisePolicyManagerStore_DoesProviderContextSidAreaPolicyValueExist = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_DoesProviderContextSidAreaPolicyValueExist")
Interceptor.attach(EnterprisePolicyManagerStore_DoesProviderContextSidAreaPolicyValueExist, {onLeave: function (args) {send("EnterprisePolicyManagerStore_DoesProviderContextSidAreaPolicyValueExist");}});

var EnterprisePolicyManagerStore_DoesProviderExist = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_DoesProviderExist")
Interceptor.attach(EnterprisePolicyManagerStore_DoesProviderExist, {onLeave: function (args) {send("EnterprisePolicyManagerStore_DoesProviderExist");}});

var EnterprisePolicyManagerStore_EDPCSPConfigSourceAreaDeleteChild = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_EDPCSPConfigSourceAreaDeleteChild")
Interceptor.attach(EnterprisePolicyManagerStore_EDPCSPConfigSourceAreaDeleteChild, {onLeave: function (args) {send("EnterprisePolicyManagerStore_EDPCSPConfigSourceAreaDeleteChild");}});

var EnterprisePolicyManagerStore_EDPCSPConfigSourceAreaPolicyGetValue = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_EDPCSPConfigSourceAreaPolicyGetValue")
Interceptor.attach(EnterprisePolicyManagerStore_EDPCSPConfigSourceAreaPolicyGetValue, {onLeave: function (args) {send("EnterprisePolicyManagerStore_EDPCSPConfigSourceAreaPolicyGetValue");}});

var EnterprisePolicyManagerStore_EDPCSPConfigSourceAreaPolicySetValue = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_EDPCSPConfigSourceAreaPolicySetValue")
Interceptor.attach(EnterprisePolicyManagerStore_EDPCSPConfigSourceAreaPolicySetValue, {onLeave: function (args) {send("EnterprisePolicyManagerStore_EDPCSPConfigSourceAreaPolicySetValue");}});

var EnterprisePolicyManagerStore_EnsureProviderContextNameExist = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_EnsureProviderContextNameExist")
Interceptor.attach(EnterprisePolicyManagerStore_EnsureProviderContextNameExist, {onLeave: function (args) {send("EnterprisePolicyManagerStore_EnsureProviderContextNameExist");}});

var EnterprisePolicyManagerStore_EnsureProviderContextSidAreaExist = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_EnsureProviderContextSidAreaExist")
Interceptor.attach(EnterprisePolicyManagerStore_EnsureProviderContextSidAreaExist, {onLeave: function (args) {send("EnterprisePolicyManagerStore_EnsureProviderContextSidAreaExist");}});

var EnterprisePolicyManagerStore_EvaluatePoliciesUpdateCurrent = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_EvaluatePoliciesUpdateCurrent")
Interceptor.attach(EnterprisePolicyManagerStore_EvaluatePoliciesUpdateCurrent, {onLeave: function (args) {send("EnterprisePolicyManagerStore_EvaluatePoliciesUpdateCurrent");}});

var EnterprisePolicyManagerStore_FreeURIsOfProviders = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_FreeURIsOfProviders")
Interceptor.attach(EnterprisePolicyManagerStore_FreeURIsOfProviders, {onLeave: function (args) {send("EnterprisePolicyManagerStore_FreeURIsOfProviders");}});

var EnterprisePolicyManagerStore_GetAdmxFileData = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_GetAdmxFileData")
Interceptor.attach(EnterprisePolicyManagerStore_GetAdmxFileData, {onLeave: function (args) {send("EnterprisePolicyManagerStore_GetAdmxFileData");}});

var EnterprisePolicyManagerStore_GetAllCurrentSidAreaPolicies = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_GetAllCurrentSidAreaPolicies")
Interceptor.attach(EnterprisePolicyManagerStore_GetAllCurrentSidAreaPolicies, {onLeave: function (args) {send("EnterprisePolicyManagerStore_GetAllCurrentSidAreaPolicies");}});

var EnterprisePolicyManagerStore_GetAllCurrentSidAreas = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_GetAllCurrentSidAreas")
Interceptor.attach(EnterprisePolicyManagerStore_GetAllCurrentSidAreas, {onLeave: function (args) {send("EnterprisePolicyManagerStore_GetAllCurrentSidAreas");}});

var EnterprisePolicyManagerStore_GetAllCurrentSids = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_GetAllCurrentSids")
Interceptor.attach(EnterprisePolicyManagerStore_GetAllCurrentSids, {onLeave: function (args) {send("EnterprisePolicyManagerStore_GetAllCurrentSids");}});

var EnterprisePolicyManagerStore_GetAllDefaultAreaPolicies = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_GetAllDefaultAreaPolicies")
Interceptor.attach(EnterprisePolicyManagerStore_GetAllDefaultAreaPolicies, {onLeave: function (args) {send("EnterprisePolicyManagerStore_GetAllDefaultAreaPolicies");}});

var EnterprisePolicyManagerStore_GetAllDefaultAreas = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_GetAllDefaultAreas")
Interceptor.attach(EnterprisePolicyManagerStore_GetAllDefaultAreas, {onLeave: function (args) {send("EnterprisePolicyManagerStore_GetAllDefaultAreas");}});

var EnterprisePolicyManagerStore_GetAllProviderContextSidAreaPolicies = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_GetAllProviderContextSidAreaPolicies")
Interceptor.attach(EnterprisePolicyManagerStore_GetAllProviderContextSidAreaPolicies, {onLeave: function (args) {send("EnterprisePolicyManagerStore_GetAllProviderContextSidAreaPolicies");}});

var EnterprisePolicyManagerStore_GetAllProviderContextSidAreas = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_GetAllProviderContextSidAreas")
Interceptor.attach(EnterprisePolicyManagerStore_GetAllProviderContextSidAreas, {onLeave: function (args) {send("EnterprisePolicyManagerStore_GetAllProviderContextSidAreas");}});

var EnterprisePolicyManagerStore_GetAllProviderContextSids = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_GetAllProviderContextSids")
Interceptor.attach(EnterprisePolicyManagerStore_GetAllProviderContextSids, {onLeave: function (args) {send("EnterprisePolicyManagerStore_GetAllProviderContextSids");}});

var EnterprisePolicyManagerStore_GetAllProviderIds = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_GetAllProviderIds")
Interceptor.attach(EnterprisePolicyManagerStore_GetAllProviderIds, {onLeave: function (args) {send("EnterprisePolicyManagerStore_GetAllProviderIds");}});

var EnterprisePolicyManagerStore_GetAllProviderPolicyStringValues = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_GetAllProviderPolicyStringValues")
Interceptor.attach(EnterprisePolicyManagerStore_GetAllProviderPolicyStringValues, {onLeave: function (args) {send("EnterprisePolicyManagerStore_GetAllProviderPolicyStringValues");}});

var EnterprisePolicyManagerStore_GetAllURIsOfProviders = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_GetAllURIsOfProviders")
Interceptor.attach(EnterprisePolicyManagerStore_GetAllURIsOfProviders, {onLeave: function (args) {send("EnterprisePolicyManagerStore_GetAllURIsOfProviders");}});

var EnterprisePolicyManagerStore_GetBinaryPolicyValue = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_GetBinaryPolicyValue")
Interceptor.attach(EnterprisePolicyManagerStore_GetBinaryPolicyValue, {onLeave: function (args) {send("EnterprisePolicyManagerStore_GetBinaryPolicyValue");}});

var EnterprisePolicyManagerStore_GetCurrentPolicyValue = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_GetCurrentPolicyValue")
Interceptor.attach(EnterprisePolicyManagerStore_GetCurrentPolicyValue, {onLeave: function (args) {send("EnterprisePolicyManagerStore_GetCurrentPolicyValue");}});

var EnterprisePolicyManagerStore_GetEnrollmentState = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_GetEnrollmentState")
Interceptor.attach(EnterprisePolicyManagerStore_GetEnrollmentState, {onLeave: function (args) {send("EnterprisePolicyManagerStore_GetEnrollmentState");}});

var EnterprisePolicyManagerStore_GetEnrollmentTypeFromEnrollment = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_GetEnrollmentTypeFromEnrollment")
Interceptor.attach(EnterprisePolicyManagerStore_GetEnrollmentTypeFromEnrollment, {onLeave: function (args) {send("EnterprisePolicyManagerStore_GetEnrollmentTypeFromEnrollment");}});

var EnterprisePolicyManagerStore_GetIntPolicyValue = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_GetIntPolicyValue")
Interceptor.attach(EnterprisePolicyManagerStore_GetIntPolicyValue, {onLeave: function (args) {send("EnterprisePolicyManagerStore_GetIntPolicyValue");}});

var EnterprisePolicyManagerStore_GetPolicyDoNotAllowFromMetadata = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_GetPolicyDoNotAllowFromMetadata")
Interceptor.attach(EnterprisePolicyManagerStore_GetPolicyDoNotAllowFromMetadata, {onLeave: function (args) {send("EnterprisePolicyManagerStore_GetPolicyDoNotAllowFromMetadata");}});

var EnterprisePolicyManagerStore_GetPolicyLowHighRangeFromMetadata = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_GetPolicyLowHighRangeFromMetadata")
Interceptor.attach(EnterprisePolicyManagerStore_GetPolicyLowHighRangeFromMetadata, {onLeave: function (args) {send("EnterprisePolicyManagerStore_GetPolicyLowHighRangeFromMetadata");}});

var EnterprisePolicyManagerStore_GetPolicyTypeFromMetadata = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_GetPolicyTypeFromMetadata")
Interceptor.attach(EnterprisePolicyManagerStore_GetPolicyTypeFromMetadata, {onLeave: function (args) {send("EnterprisePolicyManagerStore_GetPolicyTypeFromMetadata");}});

var EnterprisePolicyManagerStore_GetProviderContextSidAreaPolicyValue = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_GetProviderContextSidAreaPolicyValue")
Interceptor.attach(EnterprisePolicyManagerStore_GetProviderContextSidAreaPolicyValue, {onLeave: function (args) {send("EnterprisePolicyManagerStore_GetProviderContextSidAreaPolicyValue");}});

var EnterprisePolicyManagerStore_GetSnapshotOfPolicyValue = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_GetSnapshotOfPolicyValue")
Interceptor.attach(EnterprisePolicyManagerStore_GetSnapshotOfPolicyValue, {onLeave: function (args) {send("EnterprisePolicyManagerStore_GetSnapshotOfPolicyValue");}});

var EnterprisePolicyManagerStore_GetStringPolicyValue = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_GetStringPolicyValue")
Interceptor.attach(EnterprisePolicyManagerStore_GetStringPolicyValue, {onLeave: function (args) {send("EnterprisePolicyManagerStore_GetStringPolicyValue");}});

var EnterprisePolicyManagerStore_GetTrueArea = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_GetTrueArea")
Interceptor.attach(EnterprisePolicyManagerStore_GetTrueArea, {onLeave: function (args) {send("EnterprisePolicyManagerStore_GetTrueArea");}});

var EnterprisePolicyManagerStore_GetWinningProvider = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_GetWinningProvider")
Interceptor.attach(EnterprisePolicyManagerStore_GetWinningProvider, {onLeave: function (args) {send("EnterprisePolicyManagerStore_GetWinningProvider");}});

var EnterprisePolicyManagerStore_IngestAdmxTextBlob = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_IngestAdmxTextBlob")
Interceptor.attach(EnterprisePolicyManagerStore_IngestAdmxTextBlob, {onLeave: function (args) {send("EnterprisePolicyManagerStore_IngestAdmxTextBlob");}});

var EnterprisePolicyManagerStore_IsADMXIngestionAllowed = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_IsADMXIngestionAllowed")
Interceptor.attach(EnterprisePolicyManagerStore_IsADMXIngestionAllowed, {onLeave: function (args) {send("EnterprisePolicyManagerStore_IsADMXIngestionAllowed");}});

var EnterprisePolicyManagerStore_IsAreaPolicySLAPIAllowed = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_IsAreaPolicySLAPIAllowed")
Interceptor.attach(EnterprisePolicyManagerStore_IsAreaPolicySLAPIAllowed, {onLeave: function (args) {send("EnterprisePolicyManagerStore_IsAreaPolicySLAPIAllowed");}});

var EnterprisePolicyManagerStore_IsAreaPolicySLAPIAllowedGivenSLAPIPolicyString = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_IsAreaPolicySLAPIAllowedGivenSLAPIPolicyString")
Interceptor.attach(EnterprisePolicyManagerStore_IsAreaPolicySLAPIAllowedGivenSLAPIPolicyString, {onLeave: function (args) {send("EnterprisePolicyManagerStore_IsAreaPolicySLAPIAllowedGivenSLAPIPolicyString");}});

var EnterprisePolicyManagerStore_IsPolicyAreaForIngestedAdmx = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_IsPolicyAreaForIngestedAdmx")
Interceptor.attach(EnterprisePolicyManagerStore_IsPolicyAreaForIngestedAdmx, {onLeave: function (args) {send("EnterprisePolicyManagerStore_IsPolicyAreaForIngestedAdmx");}});

var EnterprisePolicyManagerStore_IsPolicySetByMobileDeviceManager = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_IsPolicySetByMobileDeviceManager")
Interceptor.attach(EnterprisePolicyManagerStore_IsPolicySetByMobileDeviceManager, {onLeave: function (args) {send("EnterprisePolicyManagerStore_IsPolicySetByMobileDeviceManager");}});

var EnterprisePolicyManagerStore_IsURISetByProvider = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_IsURISetByProvider")
Interceptor.attach(EnterprisePolicyManagerStore_IsURISetByProvider, {onLeave: function (args) {send("EnterprisePolicyManagerStore_IsURISetByProvider");}});

var EnterprisePolicyManagerStore_IsValidArea = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_IsValidArea")
Interceptor.attach(EnterprisePolicyManagerStore_IsValidArea, {onLeave: function (args) {send("EnterprisePolicyManagerStore_IsValidArea");}});

var EnterprisePolicyManagerStore_IsValidPolicy = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_IsValidPolicy")
Interceptor.attach(EnterprisePolicyManagerStore_IsValidPolicy, {onLeave: function (args) {send("EnterprisePolicyManagerStore_IsValidPolicy");}});

var EnterprisePolicyManagerStore_PerformEvaluatorMerge = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_PerformEvaluatorMerge")
Interceptor.attach(EnterprisePolicyManagerStore_PerformEvaluatorMerge, {onLeave: function (args) {send("EnterprisePolicyManagerStore_PerformEvaluatorMerge");}});

var EnterprisePolicyManagerStore_PublishAnyDelayedWnfs = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_PublishAnyDelayedWnfs")
Interceptor.attach(EnterprisePolicyManagerStore_PublishAnyDelayedWnfs, {onLeave: function (args) {send("EnterprisePolicyManagerStore_PublishAnyDelayedWnfs");}});

var EnterprisePolicyManagerStore_PublishPolicyWNFCache = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_PublishPolicyWNFCache")
Interceptor.attach(EnterprisePolicyManagerStore_PublishPolicyWNFCache, {onLeave: function (args) {send("EnterprisePolicyManagerStore_PublishPolicyWNFCache");}});

var EnterprisePolicyManagerStore_ReadPolicyMetadata = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_ReadPolicyMetadata")
Interceptor.attach(EnterprisePolicyManagerStore_ReadPolicyMetadata, {onLeave: function (args) {send("EnterprisePolicyManagerStore_ReadPolicyMetadata");}});

var EnterprisePolicyManagerStore_RefreshAll = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_RefreshAll")
Interceptor.attach(EnterprisePolicyManagerStore_RefreshAll, {onLeave: function (args) {send("EnterprisePolicyManagerStore_RefreshAll");}});

var EnterprisePolicyManagerStore_ReleaseMergeLock = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_ReleaseMergeLock")
Interceptor.attach(EnterprisePolicyManagerStore_ReleaseMergeLock, {onLeave: function (args) {send("EnterprisePolicyManagerStore_ReleaseMergeLock");}});

var EnterprisePolicyManagerStore_SetEnrollmentDormantState = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_SetEnrollmentDormantState")
Interceptor.attach(EnterprisePolicyManagerStore_SetEnrollmentDormantState, {onLeave: function (args) {send("EnterprisePolicyManagerStore_SetEnrollmentDormantState");}});

var EnterprisePolicyManagerStore_SetGlobalValueChangedDirtyFlagInCurrentForArea = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_SetGlobalValueChangedDirtyFlagInCurrentForArea")
Interceptor.attach(EnterprisePolicyManagerStore_SetGlobalValueChangedDirtyFlagInCurrentForArea, {onLeave: function (args) {send("EnterprisePolicyManagerStore_SetGlobalValueChangedDirtyFlagInCurrentForArea");}});

var EnterprisePolicyManagerStore_SetProviderContextSidAreaPolicyValue = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_SetProviderContextSidAreaPolicyValue")
Interceptor.attach(EnterprisePolicyManagerStore_SetProviderContextSidAreaPolicyValue, {onLeave: function (args) {send("EnterprisePolicyManagerStore_SetProviderContextSidAreaPolicyValue");}});

var EnterprisePolicyManagerStore_VerifyAdmxPoliciesAreNotSet = Module.findExportByName("policymanager.dll", "EnterprisePolicyManagerStore_VerifyAdmxPoliciesAreNotSet")
Interceptor.attach(EnterprisePolicyManagerStore_VerifyAdmxPoliciesAreNotSet, {onLeave: function (args) {send("EnterprisePolicyManagerStore_VerifyAdmxPoliciesAreNotSet");}});

var MDMWinsOverGP_IsGPPolicySetByMDMEx = Module.findExportByName("policymanager.dll", "MDMWinsOverGP_IsGPPolicySetByMDMEx")
Interceptor.attach(MDMWinsOverGP_IsGPPolicySetByMDMEx, {onLeave: function (args) {send("MDMWinsOverGP_IsGPPolicySetByMDMEx");}});

var PolicyManager_FreeBinaryValue = Module.findExportByName("policymanager.dll", "PolicyManager_FreeBinaryValue")
Interceptor.attach(PolicyManager_FreeBinaryValue, {onLeave: function (args) {send("PolicyManager_FreeBinaryValue");}});

var PolicyManager_FreeGetPolicyData = Module.findExportByName("policymanager.dll", "PolicyManager_FreeGetPolicyData")
Interceptor.attach(PolicyManager_FreeGetPolicyData, {onLeave: function (args) {send("PolicyManager_FreeGetPolicyData");}});

var PolicyManager_FreeGroupAreaPolicyCollection = Module.findExportByName("policymanager.dll", "PolicyManager_FreeGroupAreaPolicyCollection")
Interceptor.attach(PolicyManager_FreeGroupAreaPolicyCollection, {onLeave: function (args) {send("PolicyManager_FreeGroupAreaPolicyCollection");}});

var PolicyManager_FreeStringValue = Module.findExportByName("policymanager.dll", "PolicyManager_FreeStringValue")
Interceptor.attach(PolicyManager_FreeStringValue, {onLeave: function (args) {send("PolicyManager_FreeStringValue");}});

var PolicyManager_FreeStringValues = Module.findExportByName("policymanager.dll", "PolicyManager_FreeStringValues")
Interceptor.attach(PolicyManager_FreeStringValues, {onLeave: function (args) {send("PolicyManager_FreeStringValues");}});

var PolicyManager_GetAboveLockPolicy_AllowActionCenterNotifications = Module.findExportByName("policymanager.dll", "PolicyManager_GetAboveLockPolicy_AllowActionCenterNotifications")
Interceptor.attach(PolicyManager_GetAboveLockPolicy_AllowActionCenterNotifications, {onLeave: function (args) {send("PolicyManager_GetAboveLockPolicy_AllowActionCenterNotifications");}});

var PolicyManager_GetAccountsPolicy_AllowAddingNonMicrosoftAccountsManually = Module.findExportByName("policymanager.dll", "PolicyManager_GetAccountsPolicy_AllowAddingNonMicrosoftAccountsManually")
Interceptor.attach(PolicyManager_GetAccountsPolicy_AllowAddingNonMicrosoftAccountsManually, {onLeave: function (args) {send("PolicyManager_GetAccountsPolicy_AllowAddingNonMicrosoftAccountsManually");}});

var PolicyManager_GetAccountsPolicy_AllowMicrosoftAccountConnection = Module.findExportByName("policymanager.dll", "PolicyManager_GetAccountsPolicy_AllowMicrosoftAccountConnection")
Interceptor.attach(PolicyManager_GetAccountsPolicy_AllowMicrosoftAccountConnection, {onLeave: function (args) {send("PolicyManager_GetAccountsPolicy_AllowMicrosoftAccountConnection");}});

var PolicyManager_GetApplicationManagementPolicy_AllowStore = Module.findExportByName("policymanager.dll", "PolicyManager_GetApplicationManagementPolicy_AllowStore")
Interceptor.attach(PolicyManager_GetApplicationManagementPolicy_AllowStore, {onLeave: function (args) {send("PolicyManager_GetApplicationManagementPolicy_AllowStore");}});

var PolicyManager_GetApplicationManagementPolicy_ApplicationRestrictions = Module.findExportByName("policymanager.dll", "PolicyManager_GetApplicationManagementPolicy_ApplicationRestrictions")
Interceptor.attach(PolicyManager_GetApplicationManagementPolicy_ApplicationRestrictions, {onLeave: function (args) {send("PolicyManager_GetApplicationManagementPolicy_ApplicationRestrictions");}});

var PolicyManager_GetBrowserPolicy_AllowBrowser = Module.findExportByName("policymanager.dll", "PolicyManager_GetBrowserPolicy_AllowBrowser")
Interceptor.attach(PolicyManager_GetBrowserPolicy_AllowBrowser, {onLeave: function (args) {send("PolicyManager_GetBrowserPolicy_AllowBrowser");}});

var PolicyManager_GetCameraPolicy_AllowCamera = Module.findExportByName("policymanager.dll", "PolicyManager_GetCameraPolicy_AllowCamera")
Interceptor.attach(PolicyManager_GetCameraPolicy_AllowCamera, {onLeave: function (args) {send("PolicyManager_GetCameraPolicy_AllowCamera");}});

var PolicyManager_GetConnectivityPolicy_AllowNFC = Module.findExportByName("policymanager.dll", "PolicyManager_GetConnectivityPolicy_AllowNFC")
Interceptor.attach(PolicyManager_GetConnectivityPolicy_AllowNFC, {onLeave: function (args) {send("PolicyManager_GetConnectivityPolicy_AllowNFC");}});

var PolicyManager_GetConnectivityPolicy_AllowUSBConnection = Module.findExportByName("policymanager.dll", "PolicyManager_GetConnectivityPolicy_AllowUSBConnection")
Interceptor.attach(PolicyManager_GetConnectivityPolicy_AllowUSBConnection, {onLeave: function (args) {send("PolicyManager_GetConnectivityPolicy_AllowUSBConnection");}});

var PolicyManager_GetDeviceLockPolicy_AllowIdleReturnWithoutPassword = Module.findExportByName("policymanager.dll", "PolicyManager_GetDeviceLockPolicy_AllowIdleReturnWithoutPassword")
Interceptor.attach(PolicyManager_GetDeviceLockPolicy_AllowIdleReturnWithoutPassword, {onLeave: function (args) {send("PolicyManager_GetDeviceLockPolicy_AllowIdleReturnWithoutPassword");}});

var PolicyManager_GetDeviceLockPolicy_AllowSimpleDevicePassword = Module.findExportByName("policymanager.dll", "PolicyManager_GetDeviceLockPolicy_AllowSimpleDevicePassword")
Interceptor.attach(PolicyManager_GetDeviceLockPolicy_AllowSimpleDevicePassword, {onLeave: function (args) {send("PolicyManager_GetDeviceLockPolicy_AllowSimpleDevicePassword");}});

var PolicyManager_GetDeviceLockPolicy_AlphanumericDevicePasswordRequired = Module.findExportByName("policymanager.dll", "PolicyManager_GetDeviceLockPolicy_AlphanumericDevicePasswordRequired")
Interceptor.attach(PolicyManager_GetDeviceLockPolicy_AlphanumericDevicePasswordRequired, {onLeave: function (args) {send("PolicyManager_GetDeviceLockPolicy_AlphanumericDevicePasswordRequired");}});

var PolicyManager_GetDeviceLockPolicy_DevicePasswordEnabled = Module.findExportByName("policymanager.dll", "PolicyManager_GetDeviceLockPolicy_DevicePasswordEnabled")
Interceptor.attach(PolicyManager_GetDeviceLockPolicy_DevicePasswordEnabled, {onLeave: function (args) {send("PolicyManager_GetDeviceLockPolicy_DevicePasswordEnabled");}});

var PolicyManager_GetDeviceLockPolicy_DevicePasswordExpiration = Module.findExportByName("policymanager.dll", "PolicyManager_GetDeviceLockPolicy_DevicePasswordExpiration")
Interceptor.attach(PolicyManager_GetDeviceLockPolicy_DevicePasswordExpiration, {onLeave: function (args) {send("PolicyManager_GetDeviceLockPolicy_DevicePasswordExpiration");}});

var PolicyManager_GetDeviceLockPolicy_DevicePasswordHistory = Module.findExportByName("policymanager.dll", "PolicyManager_GetDeviceLockPolicy_DevicePasswordHistory")
Interceptor.attach(PolicyManager_GetDeviceLockPolicy_DevicePasswordHistory, {onLeave: function (args) {send("PolicyManager_GetDeviceLockPolicy_DevicePasswordHistory");}});

var PolicyManager_GetDeviceLockPolicy_MaxDevicePasswordFailedAttempts = Module.findExportByName("policymanager.dll", "PolicyManager_GetDeviceLockPolicy_MaxDevicePasswordFailedAttempts")
Interceptor.attach(PolicyManager_GetDeviceLockPolicy_MaxDevicePasswordFailedAttempts, {onLeave: function (args) {send("PolicyManager_GetDeviceLockPolicy_MaxDevicePasswordFailedAttempts");}});

var PolicyManager_GetDeviceLockPolicy_MaxInactivityTimeDeviceLock = Module.findExportByName("policymanager.dll", "PolicyManager_GetDeviceLockPolicy_MaxInactivityTimeDeviceLock")
Interceptor.attach(PolicyManager_GetDeviceLockPolicy_MaxInactivityTimeDeviceLock, {onLeave: function (args) {send("PolicyManager_GetDeviceLockPolicy_MaxInactivityTimeDeviceLock");}});

var PolicyManager_GetDeviceLockPolicy_MinDevicePasswordComplexCharacters = Module.findExportByName("policymanager.dll", "PolicyManager_GetDeviceLockPolicy_MinDevicePasswordComplexCharacters")
Interceptor.attach(PolicyManager_GetDeviceLockPolicy_MinDevicePasswordComplexCharacters, {onLeave: function (args) {send("PolicyManager_GetDeviceLockPolicy_MinDevicePasswordComplexCharacters");}});

var PolicyManager_GetDeviceLockPolicy_MinDevicePasswordLength = Module.findExportByName("policymanager.dll", "PolicyManager_GetDeviceLockPolicy_MinDevicePasswordLength")
Interceptor.attach(PolicyManager_GetDeviceLockPolicy_MinDevicePasswordLength, {onLeave: function (args) {send("PolicyManager_GetDeviceLockPolicy_MinDevicePasswordLength");}});

var PolicyManager_GetExperiencePolicy_AllowCopyPaste = Module.findExportByName("policymanager.dll", "PolicyManager_GetExperiencePolicy_AllowCopyPaste")
Interceptor.attach(PolicyManager_GetExperiencePolicy_AllowCopyPaste, {onLeave: function (args) {send("PolicyManager_GetExperiencePolicy_AllowCopyPaste");}});

var PolicyManager_GetExperiencePolicy_AllowCortana = Module.findExportByName("policymanager.dll", "PolicyManager_GetExperiencePolicy_AllowCortana")
Interceptor.attach(PolicyManager_GetExperiencePolicy_AllowCortana, {onLeave: function (args) {send("PolicyManager_GetExperiencePolicy_AllowCortana");}});

var PolicyManager_GetExperiencePolicy_AllowScreenCapture = Module.findExportByName("policymanager.dll", "PolicyManager_GetExperiencePolicy_AllowScreenCapture")
Interceptor.attach(PolicyManager_GetExperiencePolicy_AllowScreenCapture, {onLeave: function (args) {send("PolicyManager_GetExperiencePolicy_AllowScreenCapture");}});

var PolicyManager_GetExperiencePolicy_AllowSyncMySettings = Module.findExportByName("policymanager.dll", "PolicyManager_GetExperiencePolicy_AllowSyncMySettings")
Interceptor.attach(PolicyManager_GetExperiencePolicy_AllowSyncMySettings, {onLeave: function (args) {send("PolicyManager_GetExperiencePolicy_AllowSyncMySettings");}});

var PolicyManager_GetExperiencePolicy_AllowVoiceRecording = Module.findExportByName("policymanager.dll", "PolicyManager_GetExperiencePolicy_AllowVoiceRecording")
Interceptor.attach(PolicyManager_GetExperiencePolicy_AllowVoiceRecording, {onLeave: function (args) {send("PolicyManager_GetExperiencePolicy_AllowVoiceRecording");}});

var PolicyManager_GetGroupAreaPolicyCollectionGivenGroupName = Module.findExportByName("policymanager.dll", "PolicyManager_GetGroupAreaPolicyCollectionGivenGroupName")
Interceptor.attach(PolicyManager_GetGroupAreaPolicyCollectionGivenGroupName, {onLeave: function (args) {send("PolicyManager_GetGroupAreaPolicyCollectionGivenGroupName");}});

var PolicyManager_GetPolicy = Module.findExportByName("policymanager.dll", "PolicyManager_GetPolicy")
Interceptor.attach(PolicyManager_GetPolicy, {onLeave: function (args) {send("PolicyManager_GetPolicy");}});

var PolicyManager_GetPolicyBinary = Module.findExportByName("policymanager.dll", "PolicyManager_GetPolicyBinary")
Interceptor.attach(PolicyManager_GetPolicyBinary, {onLeave: function (args) {send("PolicyManager_GetPolicyBinary");}});

var PolicyManager_GetPolicyBinaryGivenEnrollmentId = Module.findExportByName("policymanager.dll", "PolicyManager_GetPolicyBinaryGivenEnrollmentId")
Interceptor.attach(PolicyManager_GetPolicyBinaryGivenEnrollmentId, {onLeave: function (args) {send("PolicyManager_GetPolicyBinaryGivenEnrollmentId");}});

var PolicyManager_GetPolicyInt = Module.findExportByName("policymanager.dll", "PolicyManager_GetPolicyInt")
Interceptor.attach(PolicyManager_GetPolicyInt, {onLeave: function (args) {send("PolicyManager_GetPolicyInt");}});

var PolicyManager_GetPolicyIntGivenEnrollmentId = Module.findExportByName("policymanager.dll", "PolicyManager_GetPolicyIntGivenEnrollmentId")
Interceptor.attach(PolicyManager_GetPolicyIntGivenEnrollmentId, {onLeave: function (args) {send("PolicyManager_GetPolicyIntGivenEnrollmentId");}});

var PolicyManager_GetPolicyString = Module.findExportByName("policymanager.dll", "PolicyManager_GetPolicyString")
Interceptor.attach(PolicyManager_GetPolicyString, {onLeave: function (args) {send("PolicyManager_GetPolicyString");}});

var PolicyManager_GetPolicyStringGivenEnrollmentId = Module.findExportByName("policymanager.dll", "PolicyManager_GetPolicyStringGivenEnrollmentId")
Interceptor.attach(PolicyManager_GetPolicyStringGivenEnrollmentId, {onLeave: function (args) {send("PolicyManager_GetPolicyStringGivenEnrollmentId");}});

var PolicyManager_GetPolicyStringValues = Module.findExportByName("policymanager.dll", "PolicyManager_GetPolicyStringValues")
Interceptor.attach(PolicyManager_GetPolicyStringValues, {onLeave: function (args) {send("PolicyManager_GetPolicyStringValues");}});

var PolicyManager_GetSearchPolicy_AllowSearchToUseLocation = Module.findExportByName("policymanager.dll", "PolicyManager_GetSearchPolicy_AllowSearchToUseLocation")
Interceptor.attach(PolicyManager_GetSearchPolicy_AllowSearchToUseLocation, {onLeave: function (args) {send("PolicyManager_GetSearchPolicy_AllowSearchToUseLocation");}});

var PolicyManager_GetSearchPolicy_SafeSearchPermissions = Module.findExportByName("policymanager.dll", "PolicyManager_GetSearchPolicy_SafeSearchPermissions")
Interceptor.attach(PolicyManager_GetSearchPolicy_SafeSearchPermissions, {onLeave: function (args) {send("PolicyManager_GetSearchPolicy_SafeSearchPermissions");}});

var PolicyManager_GetSecurityPolicy_AllowManualRootCertificateInstallation = Module.findExportByName("policymanager.dll", "PolicyManager_GetSecurityPolicy_AllowManualRootCertificateInstallation")
Interceptor.attach(PolicyManager_GetSecurityPolicy_AllowManualRootCertificateInstallation, {onLeave: function (args) {send("PolicyManager_GetSecurityPolicy_AllowManualRootCertificateInstallation");}});

var PolicyManager_GetSecurityPolicy_RequireDeviceEncryption = Module.findExportByName("policymanager.dll", "PolicyManager_GetSecurityPolicy_RequireDeviceEncryption")
Interceptor.attach(PolicyManager_GetSecurityPolicy_RequireDeviceEncryption, {onLeave: function (args) {send("PolicyManager_GetSecurityPolicy_RequireDeviceEncryption");}});

var PolicyManager_GetSystemPolicy_AllowLocation = Module.findExportByName("policymanager.dll", "PolicyManager_GetSystemPolicy_AllowLocation")
Interceptor.attach(PolicyManager_GetSystemPolicy_AllowLocation, {onLeave: function (args) {send("PolicyManager_GetSystemPolicy_AllowLocation");}});

var PolicyManager_GetSystemPolicy_AllowStorageCard = Module.findExportByName("policymanager.dll", "PolicyManager_GetSystemPolicy_AllowStorageCard")
Interceptor.attach(PolicyManager_GetSystemPolicy_AllowStorageCard, {onLeave: function (args) {send("PolicyManager_GetSystemPolicy_AllowStorageCard");}});

var PolicyManager_GetSystemPolicy_AllowUserToResetPhone = Module.findExportByName("policymanager.dll", "PolicyManager_GetSystemPolicy_AllowUserToResetPhone")
Interceptor.attach(PolicyManager_GetSystemPolicy_AllowUserToResetPhone, {onLeave: function (args) {send("PolicyManager_GetSystemPolicy_AllowUserToResetPhone");}});

var PolicyManager_GetWiFiPolicy_AllowAutoConnectToWiFiSenseHotspots = Module.findExportByName("policymanager.dll", "PolicyManager_GetWiFiPolicy_AllowAutoConnectToWiFiSenseHotspots")
Interceptor.attach(PolicyManager_GetWiFiPolicy_AllowAutoConnectToWiFiSenseHotspots, {onLeave: function (args) {send("PolicyManager_GetWiFiPolicy_AllowAutoConnectToWiFiSenseHotspots");}});

var PolicyManager_GetWiFiPolicy_AllowInternetSharing = Module.findExportByName("policymanager.dll", "PolicyManager_GetWiFiPolicy_AllowInternetSharing")
Interceptor.attach(PolicyManager_GetWiFiPolicy_AllowInternetSharing, {onLeave: function (args) {send("PolicyManager_GetWiFiPolicy_AllowInternetSharing");}});

var PolicyManager_GetWiFiPolicy_AllowManualWiFiConfiguration = Module.findExportByName("policymanager.dll", "PolicyManager_GetWiFiPolicy_AllowManualWiFiConfiguration")
Interceptor.attach(PolicyManager_GetWiFiPolicy_AllowManualWiFiConfiguration, {onLeave: function (args) {send("PolicyManager_GetWiFiPolicy_AllowManualWiFiConfiguration");}});

var PolicyManager_GetWiFiPolicy_AllowWiFi = Module.findExportByName("policymanager.dll", "PolicyManager_GetWiFiPolicy_AllowWiFi")
Interceptor.attach(PolicyManager_GetWiFiPolicy_AllowWiFi, {onLeave: function (args) {send("PolicyManager_GetWiFiPolicy_AllowWiFi");}});

var PolicyManager_IsPolicySetByMobileDeviceManager = Module.findExportByName("policymanager.dll", "PolicyManager_IsPolicySetByMobileDeviceManager")
Interceptor.attach(PolicyManager_IsPolicySetByMobileDeviceManager, {onLeave: function (args) {send("PolicyManager_IsPolicySetByMobileDeviceManager");}});

var PolicyManager_PublishPolicyWNFCache = Module.findExportByName("policymanager.dll", "PolicyManager_PublishPolicyWNFCache")
Interceptor.attach(PolicyManager_PublishPolicyWNFCache, {onLeave: function (args) {send("PolicyManager_PublishPolicyWNFCache");}});

var SettingsManagerStore_GetWnfsForSettingPath = Module.findExportByName("policymanager.dll", "SettingsManagerStore_GetWnfsForSettingPath")
Interceptor.attach(SettingsManagerStore_GetWnfsForSettingPath, {onLeave: function (args) {send("SettingsManagerStore_GetWnfsForSettingPath");}});

var SettingsManagerStore_ReleaseWnfNames = Module.findExportByName("policymanager.dll", "SettingsManagerStore_ReleaseWnfNames")
Interceptor.attach(SettingsManagerStore_ReleaseWnfNames, {onLeave: function (args) {send("SettingsManagerStore_ReleaseWnfNames");}});

