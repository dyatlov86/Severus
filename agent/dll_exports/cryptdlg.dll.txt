var CertConfigureTrustA = Module.findExportByName("cryptdlg.dll", "CertConfigureTrustA")
Interceptor.attach(CertConfigureTrustA, {onLeave: function (args) {send("CertConfigureTrustA");}});

var CertConfigureTrustW = Module.findExportByName("cryptdlg.dll", "CertConfigureTrustW")
Interceptor.attach(CertConfigureTrustW, {onLeave: function (args) {send("CertConfigureTrustW");}});

var CertModifyCertificatesToTrust = Module.findExportByName("cryptdlg.dll", "CertModifyCertificatesToTrust")
Interceptor.attach(CertModifyCertificatesToTrust, {onLeave: function (args) {send("CertModifyCertificatesToTrust");}});

var CertSelectCertificateA = Module.findExportByName("cryptdlg.dll", "CertSelectCertificateA")
Interceptor.attach(CertSelectCertificateA, {onLeave: function (args) {send("CertSelectCertificateA");}});

var CertSelectCertificateW = Module.findExportByName("cryptdlg.dll", "CertSelectCertificateW")
Interceptor.attach(CertSelectCertificateW, {onLeave: function (args) {send("CertSelectCertificateW");}});

var CertTrustCertPolicy = Module.findExportByName("cryptdlg.dll", "CertTrustCertPolicy")
Interceptor.attach(CertTrustCertPolicy, {onLeave: function (args) {send("CertTrustCertPolicy");}});

var CertTrustCleanup = Module.findExportByName("cryptdlg.dll", "CertTrustCleanup")
Interceptor.attach(CertTrustCleanup, {onLeave: function (args) {send("CertTrustCleanup");}});

var CertTrustFinalPolicy = Module.findExportByName("cryptdlg.dll", "CertTrustFinalPolicy")
Interceptor.attach(CertTrustFinalPolicy, {onLeave: function (args) {send("CertTrustFinalPolicy");}});

var CertTrustInit = Module.findExportByName("cryptdlg.dll", "CertTrustInit")
Interceptor.attach(CertTrustInit, {onLeave: function (args) {send("CertTrustInit");}});

var CertViewPropertiesA = Module.findExportByName("cryptdlg.dll", "CertViewPropertiesA")
Interceptor.attach(CertViewPropertiesA, {onLeave: function (args) {send("CertViewPropertiesA");}});

var CertViewPropertiesW = Module.findExportByName("cryptdlg.dll", "CertViewPropertiesW")
Interceptor.attach(CertViewPropertiesW, {onLeave: function (args) {send("CertViewPropertiesW");}});

var DecodeAttrSequence = Module.findExportByName("cryptdlg.dll", "DecodeAttrSequence")
Interceptor.attach(DecodeAttrSequence, {onLeave: function (args) {send("DecodeAttrSequence");}});

var DecodeRecipientID = Module.findExportByName("cryptdlg.dll", "DecodeRecipientID")
Interceptor.attach(DecodeRecipientID, {onLeave: function (args) {send("DecodeRecipientID");}});

var DllRegisterServer = Module.findExportByName("cryptdlg.dll", "DllRegisterServer")
Interceptor.attach(DllRegisterServer, {onLeave: function (args) {send("DllRegisterServer");}});

var DllUnregisterServer = Module.findExportByName("cryptdlg.dll", "DllUnregisterServer")
Interceptor.attach(DllUnregisterServer, {onLeave: function (args) {send("DllUnregisterServer");}});

var EncodeAttrSequence = Module.findExportByName("cryptdlg.dll", "EncodeAttrSequence")
Interceptor.attach(EncodeAttrSequence, {onLeave: function (args) {send("EncodeAttrSequence");}});

var EncodeRecipientID = Module.findExportByName("cryptdlg.dll", "EncodeRecipientID")
Interceptor.attach(EncodeRecipientID, {onLeave: function (args) {send("EncodeRecipientID");}});

var FormatPKIXEmailProtection = Module.findExportByName("cryptdlg.dll", "FormatPKIXEmailProtection")
Interceptor.attach(FormatPKIXEmailProtection, {onLeave: function (args) {send("FormatPKIXEmailProtection");}});

var FormatVerisignExtension = Module.findExportByName("cryptdlg.dll", "FormatVerisignExtension")
Interceptor.attach(FormatVerisignExtension, {onLeave: function (args) {send("FormatVerisignExtension");}});

var GetFriendlyNameOfCertA = Module.findExportByName("cryptdlg.dll", "GetFriendlyNameOfCertA")
Interceptor.attach(GetFriendlyNameOfCertA, {onLeave: function (args) {send("GetFriendlyNameOfCertA");}});

var GetFriendlyNameOfCertW = Module.findExportByName("cryptdlg.dll", "GetFriendlyNameOfCertW")
Interceptor.attach(GetFriendlyNameOfCertW, {onLeave: function (args) {send("GetFriendlyNameOfCertW");}});

