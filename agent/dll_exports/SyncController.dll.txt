var AccountsMgmtAdviseAccount = Module.findExportByName("SyncController.dll", "AccountsMgmtAdviseAccount")
Interceptor.attach(AccountsMgmtAdviseAccount, {onLeave: function (args) {send("AccountsMgmtAdviseAccount");}});

var AccountsMgmtConvertWebAccountIdFromAppSpecificId = Module.findExportByName("SyncController.dll", "AccountsMgmtConvertWebAccountIdFromAppSpecificId")
Interceptor.attach(AccountsMgmtConvertWebAccountIdFromAppSpecificId, {onLeave: function (args) {send("AccountsMgmtConvertWebAccountIdFromAppSpecificId");}});

var AccountsMgmtConvertWebAccountIdToAppSpecificId = Module.findExportByName("SyncController.dll", "AccountsMgmtConvertWebAccountIdToAppSpecificId")
Interceptor.attach(AccountsMgmtConvertWebAccountIdToAppSpecificId, {onLeave: function (args) {send("AccountsMgmtConvertWebAccountIdToAppSpecificId");}});

var AccountsMgmtCreateAccount = Module.findExportByName("SyncController.dll", "AccountsMgmtCreateAccount")
Interceptor.attach(AccountsMgmtCreateAccount, {onLeave: function (args) {send("AccountsMgmtCreateAccount");}});

var AccountsMgmtDeleteAccount = Module.findExportByName("SyncController.dll", "AccountsMgmtDeleteAccount")
Interceptor.attach(AccountsMgmtDeleteAccount, {onLeave: function (args) {send("AccountsMgmtDeleteAccount");}});

var AccountsMgmtDiscoverExchangeServerConfig = Module.findExportByName("SyncController.dll", "AccountsMgmtDiscoverExchangeServerConfig")
Interceptor.attach(AccountsMgmtDiscoverExchangeServerConfig, {onLeave: function (args) {send("AccountsMgmtDiscoverExchangeServerConfig");}});

var AccountsMgmtEnumAccounts = Module.findExportByName("SyncController.dll", "AccountsMgmtEnumAccounts")
Interceptor.attach(AccountsMgmtEnumAccounts, {onLeave: function (args) {send("AccountsMgmtEnumAccounts");}});

var AccountsMgmtGetNotifications = Module.findExportByName("SyncController.dll", "AccountsMgmtGetNotifications")
Interceptor.attach(AccountsMgmtGetNotifications, {onLeave: function (args) {send("AccountsMgmtGetNotifications");}});

var AccountsMgmtMayIgnoreInvalidServerCertificate = Module.findExportByName("SyncController.dll", "AccountsMgmtMayIgnoreInvalidServerCertificate")
Interceptor.attach(AccountsMgmtMayIgnoreInvalidServerCertificate, {onLeave: function (args) {send("AccountsMgmtMayIgnoreInvalidServerCertificate");}});

var AccountsMgmtQueryAccountProperties = Module.findExportByName("SyncController.dll", "AccountsMgmtQueryAccountProperties")
Interceptor.attach(AccountsMgmtQueryAccountProperties, {onLeave: function (args) {send("AccountsMgmtQueryAccountProperties");}});

var AccountsMgmtSaveAccountProperties = Module.findExportByName("SyncController.dll", "AccountsMgmtSaveAccountProperties")
Interceptor.attach(AccountsMgmtSaveAccountProperties, {onLeave: function (args) {send("AccountsMgmtSaveAccountProperties");}});

var AccountsMgmtSyncAccount = Module.findExportByName("SyncController.dll", "AccountsMgmtSyncAccount")
Interceptor.attach(AccountsMgmtSyncAccount, {onLeave: function (args) {send("AccountsMgmtSyncAccount");}});

var AccountsMgmtSyncAccountAndWaitForCompletion = Module.findExportByName("SyncController.dll", "AccountsMgmtSyncAccountAndWaitForCompletion")
Interceptor.attach(AccountsMgmtSyncAccountAndWaitForCompletion, {onLeave: function (args) {send("AccountsMgmtSyncAccountAndWaitForCompletion");}});

var AccountsMgmtUnadviseAccount = Module.findExportByName("SyncController.dll", "AccountsMgmtUnadviseAccount")
Interceptor.attach(AccountsMgmtUnadviseAccount, {onLeave: function (args) {send("AccountsMgmtUnadviseAccount");}});

var AccountsMgmtVerifyExchangeMailBoxTokenAuth = Module.findExportByName("SyncController.dll", "AccountsMgmtVerifyExchangeMailBoxTokenAuth")
Interceptor.attach(AccountsMgmtVerifyExchangeMailBoxTokenAuth, {onLeave: function (args) {send("AccountsMgmtVerifyExchangeMailBoxTokenAuth");}});

var DllCanUnloadNow = Module.findExportByName("SyncController.dll", "DllCanUnloadNow")
Interceptor.attach(DllCanUnloadNow, {onLeave: function (args) {send("DllCanUnloadNow");}});

var DllGetClassObject = Module.findExportByName("SyncController.dll", "DllGetClassObject")
Interceptor.attach(DllGetClassObject, {onLeave: function (args) {send("DllGetClassObject");}});

