var AiEvaluatePlugin = Module.findExportByName("srpapi.dll", "AiEvaluatePlugin")
Interceptor.attach(AiEvaluatePlugin, {onLeave: function (args) {send("AiEvaluatePlugin");}});

var AppIDDecodeAttributeString = Module.findExportByName("srpapi.dll", "AppIDDecodeAttributeString")
Interceptor.attach(AppIDDecodeAttributeString, {onLeave: function (args) {send("AppIDDecodeAttributeString");}});

var AppIDEncodeAttributeString = Module.findExportByName("srpapi.dll", "AppIDEncodeAttributeString")
Interceptor.attach(AppIDEncodeAttributeString, {onLeave: function (args) {send("AppIDEncodeAttributeString");}});

var AppIDFreeAttributeString = Module.findExportByName("srpapi.dll", "AppIDFreeAttributeString")
Interceptor.attach(AppIDFreeAttributeString, {onLeave: function (args) {send("AppIDFreeAttributeString");}});

var SrpCloseThreadNetworkContext = Module.findExportByName("srpapi.dll", "SrpCloseThreadNetworkContext")
Interceptor.attach(SrpCloseThreadNetworkContext, {onLeave: function (args) {send("SrpCloseThreadNetworkContext");}});

var SrpCloseTrackInstall = Module.findExportByName("srpapi.dll", "SrpCloseTrackInstall")
Interceptor.attach(SrpCloseTrackInstall, {onLeave: function (args) {send("SrpCloseTrackInstall");}});

var SrpCreateThreadNetworkContext = Module.findExportByName("srpapi.dll", "SrpCreateThreadNetworkContext")
Interceptor.attach(SrpCreateThreadNetworkContext, {onLeave: function (args) {send("SrpCreateThreadNetworkContext");}});

var SrpDisablePermissiveModeFileEncryption = Module.findExportByName("srpapi.dll", "SrpDisablePermissiveModeFileEncryption")
Interceptor.attach(SrpDisablePermissiveModeFileEncryption, {onLeave: function (args) {send("SrpDisablePermissiveModeFileEncryption");}});

var SrpDoesPolicyAllowAppExecution = Module.findExportByName("srpapi.dll", "SrpDoesPolicyAllowAppExecution")
Interceptor.attach(SrpDoesPolicyAllowAppExecution, {onLeave: function (args) {send("SrpDoesPolicyAllowAppExecution");}});

var SrpEnablePermissiveModeFileEncryption = Module.findExportByName("srpapi.dll", "SrpEnablePermissiveModeFileEncryption")
Interceptor.attach(SrpEnablePermissiveModeFileEncryption, {onLeave: function (args) {send("SrpEnablePermissiveModeFileEncryption");}});

var SrpGetAllowedEnterprises = Module.findExportByName("srpapi.dll", "SrpGetAllowedEnterprises")
Interceptor.attach(SrpGetAllowedEnterprises, {onLeave: function (args) {send("SrpGetAllowedEnterprises");}});

var SrpGetAppxFqbnFromPackageFullName = Module.findExportByName("srpapi.dll", "SrpGetAppxFqbnFromPackageFullName")
Interceptor.attach(SrpGetAppxFqbnFromPackageFullName, {onLeave: function (args) {send("SrpGetAppxFqbnFromPackageFullName");}});

var SrpGetEnterpriseIds = Module.findExportByName("srpapi.dll", "SrpGetEnterpriseIds")
Interceptor.attach(SrpGetEnterpriseIds, {onLeave: function (args) {send("SrpGetEnterpriseIds");}});

var SrpGetEnterprisePolicy = Module.findExportByName("srpapi.dll", "SrpGetEnterprisePolicy")
Interceptor.attach(SrpGetEnterprisePolicy, {onLeave: function (args) {send("SrpGetEnterprisePolicy");}});

var SrpHostingInitialize = Module.findExportByName("srpapi.dll", "SrpHostingInitialize")
Interceptor.attach(SrpHostingInitialize, {onLeave: function (args) {send("SrpHostingInitialize");}});

var SrpHostingTerminate = Module.findExportByName("srpapi.dll", "SrpHostingTerminate")
Interceptor.attach(SrpHostingTerminate, {onLeave: function (args) {send("SrpHostingTerminate");}});

var SrpInheritEnterpriseContext = Module.findExportByName("srpapi.dll", "SrpInheritEnterpriseContext")
Interceptor.attach(SrpInheritEnterpriseContext, {onLeave: function (args) {send("SrpInheritEnterpriseContext");}});

var SrpInheritOriginClaim = Module.findExportByName("srpapi.dll", "SrpInheritOriginClaim")
Interceptor.attach(SrpInheritOriginClaim, {onLeave: function (args) {send("SrpInheritOriginClaim");}});

var SrpIsAllowed = Module.findExportByName("srpapi.dll", "SrpIsAllowed")
Interceptor.attach(SrpIsAllowed, {onLeave: function (args) {send("SrpIsAllowed");}});

var SrpIsTokenService = Module.findExportByName("srpapi.dll", "SrpIsTokenService")
Interceptor.attach(SrpIsTokenService, {onLeave: function (args) {send("SrpIsTokenService");}});

var SrpOpenTrackInstall = Module.findExportByName("srpapi.dll", "SrpOpenTrackInstall")
Interceptor.attach(SrpOpenTrackInstall, {onLeave: function (args) {send("SrpOpenTrackInstall");}});

var SrpRestoreEnterpriseContext = Module.findExportByName("srpapi.dll", "SrpRestoreEnterpriseContext")
Interceptor.attach(SrpRestoreEnterpriseContext, {onLeave: function (args) {send("SrpRestoreEnterpriseContext");}});

var SrpSetTokenEnterpriseId = Module.findExportByName("srpapi.dll", "SrpSetTokenEnterpriseId")
Interceptor.attach(SrpSetTokenEnterpriseId, {onLeave: function (args) {send("SrpSetTokenEnterpriseId");}});

