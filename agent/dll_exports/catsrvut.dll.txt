var ??0CComPlusComponent@@QEAA@$$QEAV0@@Z = Module.findExportByName("catsrvut.dll", "??0CComPlusComponent@@QEAA@$$QEAV0@@Z")
Interceptor.attach(??0CComPlusComponent@@QEAA@$$QEAV0@@Z, {onLeave: function (args) {send("??0CComPlusComponent@@QEAA@$$QEAV0@@Z");}});

var ??0CComPlusComponent@@QEAA@AEBV0@@Z = Module.findExportByName("catsrvut.dll", "??0CComPlusComponent@@QEAA@AEBV0@@Z")
Interceptor.attach(??0CComPlusComponent@@QEAA@AEBV0@@Z, {onLeave: function (args) {send("??0CComPlusComponent@@QEAA@AEBV0@@Z");}});

var ??0CComPlusInterface@@QEAA@$$QEAV0@@Z = Module.findExportByName("catsrvut.dll", "??0CComPlusInterface@@QEAA@$$QEAV0@@Z")
Interceptor.attach(??0CComPlusInterface@@QEAA@$$QEAV0@@Z, {onLeave: function (args) {send("??0CComPlusInterface@@QEAA@$$QEAV0@@Z");}});

var ??0CComPlusInterface@@QEAA@AEBV0@@Z = Module.findExportByName("catsrvut.dll", "??0CComPlusInterface@@QEAA@AEBV0@@Z")
Interceptor.attach(??0CComPlusInterface@@QEAA@AEBV0@@Z, {onLeave: function (args) {send("??0CComPlusInterface@@QEAA@AEBV0@@Z");}});

var ??0CComPlusMethod@@QEAA@AEBV0@@Z = Module.findExportByName("catsrvut.dll", "??0CComPlusMethod@@QEAA@AEBV0@@Z")
Interceptor.attach(??0CComPlusMethod@@QEAA@AEBV0@@Z, {onLeave: function (args) {send("??0CComPlusMethod@@QEAA@AEBV0@@Z");}});

var ??0CComPlusObject@@QEAA@AEBV0@@Z = Module.findExportByName("catsrvut.dll", "??0CComPlusObject@@QEAA@AEBV0@@Z")
Interceptor.attach(??0CComPlusObject@@QEAA@AEBV0@@Z, {onLeave: function (args) {send("??0CComPlusObject@@QEAA@AEBV0@@Z");}});

var ??1CComPlusComponent@@UEAA@XZ = Module.findExportByName("catsrvut.dll", "??1CComPlusComponent@@UEAA@XZ")
Interceptor.attach(??1CComPlusComponent@@UEAA@XZ, {onLeave: function (args) {send("??1CComPlusComponent@@UEAA@XZ");}});

var ??1CComPlusInterface@@UEAA@XZ = Module.findExportByName("catsrvut.dll", "??1CComPlusInterface@@UEAA@XZ")
Interceptor.attach(??1CComPlusInterface@@UEAA@XZ, {onLeave: function (args) {send("??1CComPlusInterface@@UEAA@XZ");}});

var ??4CComPlusComponent@@QEAAAEAV0@$$QEAV0@@Z = Module.findExportByName("catsrvut.dll", "??4CComPlusComponent@@QEAAAEAV0@$$QEAV0@@Z")
Interceptor.attach(??4CComPlusComponent@@QEAAAEAV0@$$QEAV0@@Z, {onLeave: function (args) {send("??4CComPlusComponent@@QEAAAEAV0@$$QEAV0@@Z");}});

var ??4CComPlusComponent@@QEAAAEAV0@AEBV0@@Z = Module.findExportByName("catsrvut.dll", "??4CComPlusComponent@@QEAAAEAV0@AEBV0@@Z")
Interceptor.attach(??4CComPlusComponent@@QEAAAEAV0@AEBV0@@Z, {onLeave: function (args) {send("??4CComPlusComponent@@QEAAAEAV0@AEBV0@@Z");}});

var ??4CComPlusInterface@@QEAAAEAV0@$$QEAV0@@Z = Module.findExportByName("catsrvut.dll", "??4CComPlusInterface@@QEAAAEAV0@$$QEAV0@@Z")
Interceptor.attach(??4CComPlusInterface@@QEAAAEAV0@$$QEAV0@@Z, {onLeave: function (args) {send("??4CComPlusInterface@@QEAAAEAV0@$$QEAV0@@Z");}});

var ??4CComPlusInterface@@QEAAAEAV0@AEBV0@@Z = Module.findExportByName("catsrvut.dll", "??4CComPlusInterface@@QEAAAEAV0@AEBV0@@Z")
Interceptor.attach(??4CComPlusInterface@@QEAAAEAV0@AEBV0@@Z, {onLeave: function (args) {send("??4CComPlusInterface@@QEAAAEAV0@AEBV0@@Z");}});

var ??4CComPlusMethod@@QEAAAEAV0@AEBV0@@Z = Module.findExportByName("catsrvut.dll", "??4CComPlusMethod@@QEAAAEAV0@AEBV0@@Z")
Interceptor.attach(??4CComPlusMethod@@QEAAAEAV0@AEBV0@@Z, {onLeave: function (args) {send("??4CComPlusMethod@@QEAAAEAV0@AEBV0@@Z");}});

var ??4CComPlusObject@@QEAAAEAV0@AEBV0@@Z = Module.findExportByName("catsrvut.dll", "??4CComPlusObject@@QEAAAEAV0@AEBV0@@Z")
Interceptor.attach(??4CComPlusObject@@QEAAAEAV0@AEBV0@@Z, {onLeave: function (args) {send("??4CComPlusObject@@QEAAAEAV0@AEBV0@@Z");}});

var ??4CComPlusTypelib@@QEAAAEAV0@AEBV0@@Z = Module.findExportByName("catsrvut.dll", "??4CComPlusTypelib@@QEAAAEAV0@AEBV0@@Z")
Interceptor.attach(??4CComPlusTypelib@@QEAAAEAV0@AEBV0@@Z, {onLeave: function (args) {send("??4CComPlusTypelib@@QEAAAEAV0@AEBV0@@Z");}});

var ??_7CComPlusComponent@@6B@ = Module.findExportByName("catsrvut.dll", "??_7CComPlusComponent@@6B@")
Interceptor.attach(??_7CComPlusComponent@@6B@, {onLeave: function (args) {send("??_7CComPlusComponent@@6B@");}});

var ??_7CComPlusInterface@@6B@ = Module.findExportByName("catsrvut.dll", "??_7CComPlusInterface@@6B@")
Interceptor.attach(??_7CComPlusInterface@@6B@, {onLeave: function (args) {send("??_7CComPlusInterface@@6B@");}});

var ??_7CComPlusMethod@@6B@ = Module.findExportByName("catsrvut.dll", "??_7CComPlusMethod@@6B@")
Interceptor.attach(??_7CComPlusMethod@@6B@, {onLeave: function (args) {send("??_7CComPlusMethod@@6B@");}});

var ??_7CComPlusObject@@6B@ = Module.findExportByName("catsrvut.dll", "??_7CComPlusObject@@6B@")
Interceptor.attach(??_7CComPlusObject@@6B@, {onLeave: function (args) {send("??_7CComPlusObject@@6B@");}});

var ?GetITypeLib@CComPlusTypelib@@QEAAPEAUITypeLib@@XZ = Module.findExportByName("catsrvut.dll", "?GetITypeLib@CComPlusTypelib@@QEAAPEAUITypeLib@@XZ")
Interceptor.attach(?GetITypeLib@CComPlusTypelib@@QEAAPEAUITypeLib@@XZ, {onLeave: function (args) {send("?GetITypeLib@CComPlusTypelib@@QEAAPEAUITypeLib@@XZ");}});

var CGMIsAdministrator = Module.findExportByName("catsrvut.dll", "CGMIsAdministrator")
Interceptor.attach(CGMIsAdministrator, {onLeave: function (args) {send("CGMIsAdministrator");}});

var COMPlusUninstallActionW = Module.findExportByName("catsrvut.dll", "COMPlusUninstallActionW")
Interceptor.attach(COMPlusUninstallActionW, {onLeave: function (args) {send("COMPlusUninstallActionW");}});

var CreateComRegDBWriter = Module.findExportByName("catsrvut.dll", "CreateComRegDBWriter")
Interceptor.attach(CreateComRegDBWriter, {onLeave: function (args) {send("CreateComRegDBWriter");}});

var DestroyComRegDBWriter = Module.findExportByName("catsrvut.dll", "DestroyComRegDBWriter")
Interceptor.attach(DestroyComRegDBWriter, {onLeave: function (args) {send("DestroyComRegDBWriter");}});

var DllCanUnloadNow = Module.findExportByName("catsrvut.dll", "DllCanUnloadNow")
Interceptor.attach(DllCanUnloadNow, {onLeave: function (args) {send("DllCanUnloadNow");}});

var DllGetClassObject = Module.findExportByName("catsrvut.dll", "DllGetClassObject")
Interceptor.attach(DllGetClassObject, {onLeave: function (args) {send("DllGetClassObject");}});

var DllRegisterServer = Module.findExportByName("catsrvut.dll", "DllRegisterServer")
Interceptor.attach(DllRegisterServer, {onLeave: function (args) {send("DllRegisterServer");}});

var DllUnregisterServer = Module.findExportByName("catsrvut.dll", "DllUnregisterServer")
Interceptor.attach(DllUnregisterServer, {onLeave: function (args) {send("DllUnregisterServer");}});

var FindAssemblyModulesW = Module.findExportByName("catsrvut.dll", "FindAssemblyModulesW")
Interceptor.attach(FindAssemblyModulesW, {onLeave: function (args) {send("FindAssemblyModulesW");}});

var ManagedRequestW = Module.findExportByName("catsrvut.dll", "ManagedRequestW")
Interceptor.attach(ManagedRequestW, {onLeave: function (args) {send("ManagedRequestW");}});

var QueryUserDllW = Module.findExportByName("catsrvut.dll", "QueryUserDllW")
Interceptor.attach(QueryUserDllW, {onLeave: function (args) {send("QueryUserDllW");}});

var RegDBBackup = Module.findExportByName("catsrvut.dll", "RegDBBackup")
Interceptor.attach(RegDBBackup, {onLeave: function (args) {send("RegDBBackup");}});

var RegDBRestore = Module.findExportByName("catsrvut.dll", "RegDBRestore")
Interceptor.attach(RegDBRestore, {onLeave: function (args) {send("RegDBRestore");}});

var RunMTSToCom = Module.findExportByName("catsrvut.dll", "RunMTSToCom")
Interceptor.attach(RunMTSToCom, {onLeave: function (args) {send("RunMTSToCom");}});

var StartMTSTOCOM = Module.findExportByName("catsrvut.dll", "StartMTSTOCOM")
Interceptor.attach(StartMTSTOCOM, {onLeave: function (args) {send("StartMTSTOCOM");}});

var SysprepComplus = Module.findExportByName("catsrvut.dll", "SysprepComplus")
Interceptor.attach(SysprepComplus, {onLeave: function (args) {send("SysprepComplus");}});

var SysprepComplus2 = Module.findExportByName("catsrvut.dll", "SysprepComplus2")
Interceptor.attach(SysprepComplus2, {onLeave: function (args) {send("SysprepComplus2");}});

var WinlogonHandlePendingInfOperations = Module.findExportByName("catsrvut.dll", "WinlogonHandlePendingInfOperations")
Interceptor.attach(WinlogonHandlePendingInfOperations, {onLeave: function (args) {send("WinlogonHandlePendingInfOperations");}});

