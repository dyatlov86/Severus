var DeviceCredentialAbortAuthentication = Module.findExportByName("DeviceCredential.dll", "DeviceCredentialAbortAuthentication")
Interceptor.attach(DeviceCredentialAbortAuthentication, {onLeave: function (args) {send("DeviceCredentialAbortAuthentication");}});

var DeviceCredentialAbortProvisioning = Module.findExportByName("DeviceCredential.dll", "DeviceCredentialAbortProvisioning")
Interceptor.attach(DeviceCredentialAbortProvisioning, {onLeave: function (args) {send("DeviceCredentialAbortProvisioning");}});

var DeviceCredentialCompleteAuthentication = Module.findExportByName("DeviceCredential.dll", "DeviceCredentialCompleteAuthentication")
Interceptor.attach(DeviceCredentialCompleteAuthentication, {onLeave: function (args) {send("DeviceCredentialCompleteAuthentication");}});

var DeviceCredentialCompleteProvisioning = Module.findExportByName("DeviceCredential.dll", "DeviceCredentialCompleteProvisioning")
Interceptor.attach(DeviceCredentialCompleteProvisioning, {onLeave: function (args) {send("DeviceCredentialCompleteProvisioning");}});

var DeviceCredentialDeprovision = Module.findExportByName("DeviceCredential.dll", "DeviceCredentialDeprovision")
Interceptor.attach(DeviceCredentialDeprovision, {onLeave: function (args) {send("DeviceCredentialDeprovision");}});

var DeviceCredentialFindClose = Module.findExportByName("DeviceCredential.dll", "DeviceCredentialFindClose")
Interceptor.attach(DeviceCredentialFindClose, {onLeave: function (args) {send("DeviceCredentialFindClose");}});

var DeviceCredentialFindFirst = Module.findExportByName("DeviceCredential.dll", "DeviceCredentialFindFirst")
Interceptor.attach(DeviceCredentialFindFirst, {onLeave: function (args) {send("DeviceCredentialFindFirst");}});

var DeviceCredentialFindNext = Module.findExportByName("DeviceCredential.dll", "DeviceCredentialFindNext")
Interceptor.attach(DeviceCredentialFindNext, {onLeave: function (args) {send("DeviceCredentialFindNext");}});

var DeviceCredentialFreeBuffer = Module.findExportByName("DeviceCredential.dll", "DeviceCredentialFreeBuffer")
Interceptor.attach(DeviceCredentialFreeBuffer, {onLeave: function (args) {send("DeviceCredentialFreeBuffer");}});

var DeviceCredentialGetAuthStageData = Module.findExportByName("DeviceCredential.dll", "DeviceCredentialGetAuthStageData")
Interceptor.attach(DeviceCredentialGetAuthStageData, {onLeave: function (args) {send("DeviceCredentialGetAuthStageData");}});

var DeviceCredentialGetDeviceInfo = Module.findExportByName("DeviceCredential.dll", "DeviceCredentialGetDeviceInfo")
Interceptor.attach(DeviceCredentialGetDeviceInfo, {onLeave: function (args) {send("DeviceCredentialGetDeviceInfo");}});

var DeviceCredentialInitializeAuthentication = Module.findExportByName("DeviceCredential.dll", "DeviceCredentialInitializeAuthentication")
Interceptor.attach(DeviceCredentialInitializeAuthentication, {onLeave: function (args) {send("DeviceCredentialInitializeAuthentication");}});

var DeviceCredentialInitializeProvisioning = Module.findExportByName("DeviceCredential.dll", "DeviceCredentialInitializeProvisioning")
Interceptor.attach(DeviceCredentialInitializeProvisioning, {onLeave: function (args) {send("DeviceCredentialInitializeProvisioning");}});

var DeviceCredentialMgrBeginAuthentication = Module.findExportByName("DeviceCredential.dll", "DeviceCredentialMgrBeginAuthentication")
Interceptor.attach(DeviceCredentialMgrBeginAuthentication, {onLeave: function (args) {send("DeviceCredentialMgrBeginAuthentication");}});

var DeviceCredentialMgrCheckIfUserSessionIsRequired = Module.findExportByName("DeviceCredential.dll", "DeviceCredentialMgrCheckIfUserSessionIsRequired")
Interceptor.attach(DeviceCredentialMgrCheckIfUserSessionIsRequired, {onLeave: function (args) {send("DeviceCredentialMgrCheckIfUserSessionIsRequired");}});

var DeviceCredentialMgrCheckPresence = Module.findExportByName("DeviceCredential.dll", "DeviceCredentialMgrCheckPresence")
Interceptor.attach(DeviceCredentialMgrCheckPresence, {onLeave: function (args) {send("DeviceCredentialMgrCheckPresence");}});

var DeviceCredentialMgrCheckProvisionedDevice = Module.findExportByName("DeviceCredential.dll", "DeviceCredentialMgrCheckProvisionedDevice")
Interceptor.attach(DeviceCredentialMgrCheckProvisionedDevice, {onLeave: function (args) {send("DeviceCredentialMgrCheckProvisionedDevice");}});

var DeviceCredentialMgrGetAuthenticationData = Module.findExportByName("DeviceCredential.dll", "DeviceCredentialMgrGetAuthenticationData")
Interceptor.attach(DeviceCredentialMgrGetAuthenticationData, {onLeave: function (args) {send("DeviceCredentialMgrGetAuthenticationData");}});

var DeviceCredentialMgrHasLogonSession = Module.findExportByName("DeviceCredential.dll", "DeviceCredentialMgrHasLogonSession")
Interceptor.attach(DeviceCredentialMgrHasLogonSession, {onLeave: function (args) {send("DeviceCredentialMgrHasLogonSession");}});

var DeviceCredentialMgrProtectData = Module.findExportByName("DeviceCredential.dll", "DeviceCredentialMgrProtectData")
Interceptor.attach(DeviceCredentialMgrProtectData, {onLeave: function (args) {send("DeviceCredentialMgrProtectData");}});

var DeviceCredentialMgrUnprotectData = Module.findExportByName("DeviceCredential.dll", "DeviceCredentialMgrUnprotectData")
Interceptor.attach(DeviceCredentialMgrUnprotectData, {onLeave: function (args) {send("DeviceCredentialMgrUnprotectData");}});

var DeviceCredentialMgrUpdateAuthenticationStage = Module.findExportByName("DeviceCredential.dll", "DeviceCredentialMgrUpdateAuthenticationStage")
Interceptor.attach(DeviceCredentialMgrUpdateAuthenticationStage, {onLeave: function (args) {send("DeviceCredentialMgrUpdateAuthenticationStage");}});

var DeviceCredentialRegisterPresenceMonitoring = Module.findExportByName("DeviceCredential.dll", "DeviceCredentialRegisterPresenceMonitoring")
Interceptor.attach(DeviceCredentialRegisterPresenceMonitoring, {onLeave: function (args) {send("DeviceCredentialRegisterPresenceMonitoring");}});

var DeviceCredentialRegisterPresenceMonitoringOnExistingDevice = Module.findExportByName("DeviceCredential.dll", "DeviceCredentialRegisterPresenceMonitoringOnExistingDevice")
Interceptor.attach(DeviceCredentialRegisterPresenceMonitoringOnExistingDevice, {onLeave: function (args) {send("DeviceCredentialRegisterPresenceMonitoringOnExistingDevice");}});

var DeviceCredentialScanDeploymentData = Module.findExportByName("DeviceCredential.dll", "DeviceCredentialScanDeploymentData")
Interceptor.attach(DeviceCredentialScanDeploymentData, {onLeave: function (args) {send("DeviceCredentialScanDeploymentData");}});

var DeviceCredentialSetFriendlyName = Module.findExportByName("DeviceCredential.dll", "DeviceCredentialSetFriendlyName")
Interceptor.attach(DeviceCredentialSetFriendlyName, {onLeave: function (args) {send("DeviceCredentialSetFriendlyName");}});

var DeviceCredentialSetOpaqueBlob = Module.findExportByName("DeviceCredential.dll", "DeviceCredentialSetOpaqueBlob")
Interceptor.attach(DeviceCredentialSetOpaqueBlob, {onLeave: function (args) {send("DeviceCredentialSetOpaqueBlob");}});

var DeviceCredentialShowNotificationMessage = Module.findExportByName("DeviceCredential.dll", "DeviceCredentialShowNotificationMessage")
Interceptor.attach(DeviceCredentialShowNotificationMessage, {onLeave: function (args) {send("DeviceCredentialShowNotificationMessage");}});

var DeviceCredentialUnregisterPresenceMonitoring = Module.findExportByName("DeviceCredential.dll", "DeviceCredentialUnregisterPresenceMonitoring")
Interceptor.attach(DeviceCredentialUnregisterPresenceMonitoring, {onLeave: function (args) {send("DeviceCredentialUnregisterPresenceMonitoring");}});

var DeviceCredentialUpdateDeploymentData = Module.findExportByName("DeviceCredential.dll", "DeviceCredentialUpdateDeploymentData")
Interceptor.attach(DeviceCredentialUpdateDeploymentData, {onLeave: function (args) {send("DeviceCredentialUpdateDeploymentData");}});

var DeviceCredentialUpdatePresenceState = Module.findExportByName("DeviceCredential.dll", "DeviceCredentialUpdatePresenceState")
Interceptor.attach(DeviceCredentialUpdatePresenceState, {onLeave: function (args) {send("DeviceCredentialUpdatePresenceState");}});

