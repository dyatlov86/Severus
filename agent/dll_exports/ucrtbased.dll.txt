var _Cbuild = Module.findExportByName("ucrtbased.dll", "_Cbuild")
Interceptor.attach(_Cbuild, {onLeave: function (args) {send("_Cbuild");}});

var _Cmulcc = Module.findExportByName("ucrtbased.dll", "_Cmulcc")
Interceptor.attach(_Cmulcc, {onLeave: function (args) {send("_Cmulcc");}});

var _Cmulcr = Module.findExportByName("ucrtbased.dll", "_Cmulcr")
Interceptor.attach(_Cmulcr, {onLeave: function (args) {send("_Cmulcr");}});

var _CreateFrameInfo = Module.findExportByName("ucrtbased.dll", "_CreateFrameInfo")
Interceptor.attach(_CreateFrameInfo, {onLeave: function (args) {send("_CreateFrameInfo");}});

var _CrtCheckMemory = Module.findExportByName("ucrtbased.dll", "_CrtCheckMemory")
Interceptor.attach(_CrtCheckMemory, {onLeave: function (args) {send("_CrtCheckMemory");}});

var _CrtDbgReport = Module.findExportByName("ucrtbased.dll", "_CrtDbgReport")
Interceptor.attach(_CrtDbgReport, {onLeave: function (args) {send("_CrtDbgReport");}});

var _CrtDbgReportW = Module.findExportByName("ucrtbased.dll", "_CrtDbgReportW")
Interceptor.attach(_CrtDbgReportW, {onLeave: function (args) {send("_CrtDbgReportW");}});

var _CrtDoForAllClientObjects = Module.findExportByName("ucrtbased.dll", "_CrtDoForAllClientObjects")
Interceptor.attach(_CrtDoForAllClientObjects, {onLeave: function (args) {send("_CrtDoForAllClientObjects");}});

var _CrtDumpMemoryLeaks = Module.findExportByName("ucrtbased.dll", "_CrtDumpMemoryLeaks")
Interceptor.attach(_CrtDumpMemoryLeaks, {onLeave: function (args) {send("_CrtDumpMemoryLeaks");}});

var _CrtGetAllocHook = Module.findExportByName("ucrtbased.dll", "_CrtGetAllocHook")
Interceptor.attach(_CrtGetAllocHook, {onLeave: function (args) {send("_CrtGetAllocHook");}});

var _CrtGetDebugFillThreshold = Module.findExportByName("ucrtbased.dll", "_CrtGetDebugFillThreshold")
Interceptor.attach(_CrtGetDebugFillThreshold, {onLeave: function (args) {send("_CrtGetDebugFillThreshold");}});

var _CrtGetDumpClient = Module.findExportByName("ucrtbased.dll", "_CrtGetDumpClient")
Interceptor.attach(_CrtGetDumpClient, {onLeave: function (args) {send("_CrtGetDumpClient");}});

var _CrtGetReportHook = Module.findExportByName("ucrtbased.dll", "_CrtGetReportHook")
Interceptor.attach(_CrtGetReportHook, {onLeave: function (args) {send("_CrtGetReportHook");}});

var _CrtIsMemoryBlock = Module.findExportByName("ucrtbased.dll", "_CrtIsMemoryBlock")
Interceptor.attach(_CrtIsMemoryBlock, {onLeave: function (args) {send("_CrtIsMemoryBlock");}});

var _CrtIsValidHeapPointer = Module.findExportByName("ucrtbased.dll", "_CrtIsValidHeapPointer")
Interceptor.attach(_CrtIsValidHeapPointer, {onLeave: function (args) {send("_CrtIsValidHeapPointer");}});

var _CrtIsValidPointer = Module.findExportByName("ucrtbased.dll", "_CrtIsValidPointer")
Interceptor.attach(_CrtIsValidPointer, {onLeave: function (args) {send("_CrtIsValidPointer");}});

var _CrtMemCheckpoint = Module.findExportByName("ucrtbased.dll", "_CrtMemCheckpoint")
Interceptor.attach(_CrtMemCheckpoint, {onLeave: function (args) {send("_CrtMemCheckpoint");}});

var _CrtMemDifference = Module.findExportByName("ucrtbased.dll", "_CrtMemDifference")
Interceptor.attach(_CrtMemDifference, {onLeave: function (args) {send("_CrtMemDifference");}});

var _CrtMemDumpAllObjectsSince = Module.findExportByName("ucrtbased.dll", "_CrtMemDumpAllObjectsSince")
Interceptor.attach(_CrtMemDumpAllObjectsSince, {onLeave: function (args) {send("_CrtMemDumpAllObjectsSince");}});

var _CrtMemDumpStatistics = Module.findExportByName("ucrtbased.dll", "_CrtMemDumpStatistics")
Interceptor.attach(_CrtMemDumpStatistics, {onLeave: function (args) {send("_CrtMemDumpStatistics");}});

var _CrtReportBlockType = Module.findExportByName("ucrtbased.dll", "_CrtReportBlockType")
Interceptor.attach(_CrtReportBlockType, {onLeave: function (args) {send("_CrtReportBlockType");}});

var _CrtSetAllocHook = Module.findExportByName("ucrtbased.dll", "_CrtSetAllocHook")
Interceptor.attach(_CrtSetAllocHook, {onLeave: function (args) {send("_CrtSetAllocHook");}});

var _CrtSetBreakAlloc = Module.findExportByName("ucrtbased.dll", "_CrtSetBreakAlloc")
Interceptor.attach(_CrtSetBreakAlloc, {onLeave: function (args) {send("_CrtSetBreakAlloc");}});

var _CrtSetDbgBlockType = Module.findExportByName("ucrtbased.dll", "_CrtSetDbgBlockType")
Interceptor.attach(_CrtSetDbgBlockType, {onLeave: function (args) {send("_CrtSetDbgBlockType");}});

var _CrtSetDbgFlag = Module.findExportByName("ucrtbased.dll", "_CrtSetDbgFlag")
Interceptor.attach(_CrtSetDbgFlag, {onLeave: function (args) {send("_CrtSetDbgFlag");}});

var _CrtSetDebugFillThreshold = Module.findExportByName("ucrtbased.dll", "_CrtSetDebugFillThreshold")
Interceptor.attach(_CrtSetDebugFillThreshold, {onLeave: function (args) {send("_CrtSetDebugFillThreshold");}});

var _CrtSetDumpClient = Module.findExportByName("ucrtbased.dll", "_CrtSetDumpClient")
Interceptor.attach(_CrtSetDumpClient, {onLeave: function (args) {send("_CrtSetDumpClient");}});

var _CrtSetReportFile = Module.findExportByName("ucrtbased.dll", "_CrtSetReportFile")
Interceptor.attach(_CrtSetReportFile, {onLeave: function (args) {send("_CrtSetReportFile");}});

var _CrtSetReportHook = Module.findExportByName("ucrtbased.dll", "_CrtSetReportHook")
Interceptor.attach(_CrtSetReportHook, {onLeave: function (args) {send("_CrtSetReportHook");}});

var _CrtSetReportHook2 = Module.findExportByName("ucrtbased.dll", "_CrtSetReportHook2")
Interceptor.attach(_CrtSetReportHook2, {onLeave: function (args) {send("_CrtSetReportHook2");}});

var _CrtSetReportHookW2 = Module.findExportByName("ucrtbased.dll", "_CrtSetReportHookW2")
Interceptor.attach(_CrtSetReportHookW2, {onLeave: function (args) {send("_CrtSetReportHookW2");}});

var _CrtSetReportMode = Module.findExportByName("ucrtbased.dll", "_CrtSetReportMode")
Interceptor.attach(_CrtSetReportMode, {onLeave: function (args) {send("_CrtSetReportMode");}});

var _CxxThrowException = Module.findExportByName("ucrtbased.dll", "_CxxThrowException")
Interceptor.attach(_CxxThrowException, {onLeave: function (args) {send("_CxxThrowException");}});

var _Exit = Module.findExportByName("ucrtbased.dll", "_Exit")
Interceptor.attach(_Exit, {onLeave: function (args) {send("_Exit");}});

var _FCbuild = Module.findExportByName("ucrtbased.dll", "_FCbuild")
Interceptor.attach(_FCbuild, {onLeave: function (args) {send("_FCbuild");}});

var _FCmulcc = Module.findExportByName("ucrtbased.dll", "_FCmulcc")
Interceptor.attach(_FCmulcc, {onLeave: function (args) {send("_FCmulcc");}});

var _FCmulcr = Module.findExportByName("ucrtbased.dll", "_FCmulcr")
Interceptor.attach(_FCmulcr, {onLeave: function (args) {send("_FCmulcr");}});

var _FindAndUnlinkFrame = Module.findExportByName("ucrtbased.dll", "_FindAndUnlinkFrame")
Interceptor.attach(_FindAndUnlinkFrame, {onLeave: function (args) {send("_FindAndUnlinkFrame");}});

var _GetImageBase = Module.findExportByName("ucrtbased.dll", "_GetImageBase")
Interceptor.attach(_GetImageBase, {onLeave: function (args) {send("_GetImageBase");}});

var _GetThrowImageBase = Module.findExportByName("ucrtbased.dll", "_GetThrowImageBase")
Interceptor.attach(_GetThrowImageBase, {onLeave: function (args) {send("_GetThrowImageBase");}});

var _Getdays = Module.findExportByName("ucrtbased.dll", "_Getdays")
Interceptor.attach(_Getdays, {onLeave: function (args) {send("_Getdays");}});

var _Getmonths = Module.findExportByName("ucrtbased.dll", "_Getmonths")
Interceptor.attach(_Getmonths, {onLeave: function (args) {send("_Getmonths");}});

var _Gettnames = Module.findExportByName("ucrtbased.dll", "_Gettnames")
Interceptor.attach(_Gettnames, {onLeave: function (args) {send("_Gettnames");}});

var _IsExceptionObjectToBeDestroyed = Module.findExportByName("ucrtbased.dll", "_IsExceptionObjectToBeDestroyed")
Interceptor.attach(_IsExceptionObjectToBeDestroyed, {onLeave: function (args) {send("_IsExceptionObjectToBeDestroyed");}});

var _LCbuild = Module.findExportByName("ucrtbased.dll", "_LCbuild")
Interceptor.attach(_LCbuild, {onLeave: function (args) {send("_LCbuild");}});

var _LCmulcc = Module.findExportByName("ucrtbased.dll", "_LCmulcc")
Interceptor.attach(_LCmulcc, {onLeave: function (args) {send("_LCmulcc");}});

var _LCmulcr = Module.findExportByName("ucrtbased.dll", "_LCmulcr")
Interceptor.attach(_LCmulcr, {onLeave: function (args) {send("_LCmulcr");}});

var _SetImageBase = Module.findExportByName("ucrtbased.dll", "_SetImageBase")
Interceptor.attach(_SetImageBase, {onLeave: function (args) {send("_SetImageBase");}});

var _SetThrowImageBase = Module.findExportByName("ucrtbased.dll", "_SetThrowImageBase")
Interceptor.attach(_SetThrowImageBase, {onLeave: function (args) {send("_SetThrowImageBase");}});

var _SetWinRTOutOfMemoryExceptionCallback = Module.findExportByName("ucrtbased.dll", "_SetWinRTOutOfMemoryExceptionCallback")
Interceptor.attach(_SetWinRTOutOfMemoryExceptionCallback, {onLeave: function (args) {send("_SetWinRTOutOfMemoryExceptionCallback");}});

var _Strftime = Module.findExportByName("ucrtbased.dll", "_Strftime")
Interceptor.attach(_Strftime, {onLeave: function (args) {send("_Strftime");}});

var _VCrtDbgReportA = Module.findExportByName("ucrtbased.dll", "_VCrtDbgReportA")
Interceptor.attach(_VCrtDbgReportA, {onLeave: function (args) {send("_VCrtDbgReportA");}});

var _VCrtDbgReportW = Module.findExportByName("ucrtbased.dll", "_VCrtDbgReportW")
Interceptor.attach(_VCrtDbgReportW, {onLeave: function (args) {send("_VCrtDbgReportW");}});

var _W_Getdays = Module.findExportByName("ucrtbased.dll", "_W_Getdays")
Interceptor.attach(_W_Getdays, {onLeave: function (args) {send("_W_Getdays");}});

var _W_Getmonths = Module.findExportByName("ucrtbased.dll", "_W_Getmonths")
Interceptor.attach(_W_Getmonths, {onLeave: function (args) {send("_W_Getmonths");}});

var _W_Gettnames = Module.findExportByName("ucrtbased.dll", "_W_Gettnames")
Interceptor.attach(_W_Gettnames, {onLeave: function (args) {send("_W_Gettnames");}});

var _Wcsftime = Module.findExportByName("ucrtbased.dll", "_Wcsftime")
Interceptor.attach(_Wcsftime, {onLeave: function (args) {send("_Wcsftime");}});

var __AdjustPointer = Module.findExportByName("ucrtbased.dll", "__AdjustPointer")
Interceptor.attach(__AdjustPointer, {onLeave: function (args) {send("__AdjustPointer");}});

var __BuildCatchObject = Module.findExportByName("ucrtbased.dll", "__BuildCatchObject")
Interceptor.attach(__BuildCatchObject, {onLeave: function (args) {send("__BuildCatchObject");}});

var __BuildCatchObjectHelper = Module.findExportByName("ucrtbased.dll", "__BuildCatchObjectHelper")
Interceptor.attach(__BuildCatchObjectHelper, {onLeave: function (args) {send("__BuildCatchObjectHelper");}});

var __C_specific_handler = Module.findExportByName("ucrtbased.dll", "__C_specific_handler")
Interceptor.attach(__C_specific_handler, {onLeave: function (args) {send("__C_specific_handler");}});

var __C_specific_handler_noexcept = Module.findExportByName("ucrtbased.dll", "__C_specific_handler_noexcept")
Interceptor.attach(__C_specific_handler_noexcept, {onLeave: function (args) {send("__C_specific_handler_noexcept");}});

var __CxxDetectRethrow = Module.findExportByName("ucrtbased.dll", "__CxxDetectRethrow")
Interceptor.attach(__CxxDetectRethrow, {onLeave: function (args) {send("__CxxDetectRethrow");}});

var __CxxExceptionFilter = Module.findExportByName("ucrtbased.dll", "__CxxExceptionFilter")
Interceptor.attach(__CxxExceptionFilter, {onLeave: function (args) {send("__CxxExceptionFilter");}});

var __CxxFrameHandler = Module.findExportByName("ucrtbased.dll", "__CxxFrameHandler")
Interceptor.attach(__CxxFrameHandler, {onLeave: function (args) {send("__CxxFrameHandler");}});

var __CxxFrameHandler2 = Module.findExportByName("ucrtbased.dll", "__CxxFrameHandler2")
Interceptor.attach(__CxxFrameHandler2, {onLeave: function (args) {send("__CxxFrameHandler2");}});

var __CxxFrameHandler3 = Module.findExportByName("ucrtbased.dll", "__CxxFrameHandler3")
Interceptor.attach(__CxxFrameHandler3, {onLeave: function (args) {send("__CxxFrameHandler3");}});

var __CxxFrameHandler4 = Module.findExportByName("ucrtbased.dll", "__CxxFrameHandler4")
Interceptor.attach(__CxxFrameHandler4, {onLeave: function (args) {send("__CxxFrameHandler4");}});

var __CxxQueryExceptionSize = Module.findExportByName("ucrtbased.dll", "__CxxQueryExceptionSize")
Interceptor.attach(__CxxQueryExceptionSize, {onLeave: function (args) {send("__CxxQueryExceptionSize");}});

var __CxxRegisterExceptionObject = Module.findExportByName("ucrtbased.dll", "__CxxRegisterExceptionObject")
Interceptor.attach(__CxxRegisterExceptionObject, {onLeave: function (args) {send("__CxxRegisterExceptionObject");}});

var __CxxUnregisterExceptionObject = Module.findExportByName("ucrtbased.dll", "__CxxUnregisterExceptionObject")
Interceptor.attach(__CxxUnregisterExceptionObject, {onLeave: function (args) {send("__CxxUnregisterExceptionObject");}});

var __DestructExceptionObject = Module.findExportByName("ucrtbased.dll", "__DestructExceptionObject")
Interceptor.attach(__DestructExceptionObject, {onLeave: function (args) {send("__DestructExceptionObject");}});

var __FrameUnwindFilter = Module.findExportByName("ucrtbased.dll", "__FrameUnwindFilter")
Interceptor.attach(__FrameUnwindFilter, {onLeave: function (args) {send("__FrameUnwindFilter");}});

var __GetPlatformExceptionInfo = Module.findExportByName("ucrtbased.dll", "__GetPlatformExceptionInfo")
Interceptor.attach(__GetPlatformExceptionInfo, {onLeave: function (args) {send("__GetPlatformExceptionInfo");}});

var __NLG_Dispatch2 = Module.findExportByName("ucrtbased.dll", "__NLG_Dispatch2")
Interceptor.attach(__NLG_Dispatch2, {onLeave: function (args) {send("__NLG_Dispatch2");}});

var __NLG_Return2 = Module.findExportByName("ucrtbased.dll", "__NLG_Return2")
Interceptor.attach(__NLG_Return2, {onLeave: function (args) {send("__NLG_Return2");}});

var __RTCastToVoid = Module.findExportByName("ucrtbased.dll", "__RTCastToVoid")
Interceptor.attach(__RTCastToVoid, {onLeave: function (args) {send("__RTCastToVoid");}});

var __RTDynamicCast = Module.findExportByName("ucrtbased.dll", "__RTDynamicCast")
Interceptor.attach(__RTDynamicCast, {onLeave: function (args) {send("__RTDynamicCast");}});

var __RTtypeid = Module.findExportByName("ucrtbased.dll", "__RTtypeid")
Interceptor.attach(__RTtypeid, {onLeave: function (args) {send("__RTtypeid");}});

var __TypeMatch = Module.findExportByName("ucrtbased.dll", "__TypeMatch")
Interceptor.attach(__TypeMatch, {onLeave: function (args) {send("__TypeMatch");}});

var ___lc_codepage_func = Module.findExportByName("ucrtbased.dll", "___lc_codepage_func")
Interceptor.attach(___lc_codepage_func, {onLeave: function (args) {send("___lc_codepage_func");}});

var ___lc_collate_cp_func = Module.findExportByName("ucrtbased.dll", "___lc_collate_cp_func")
Interceptor.attach(___lc_collate_cp_func, {onLeave: function (args) {send("___lc_collate_cp_func");}});

var ___lc_locale_name_func = Module.findExportByName("ucrtbased.dll", "___lc_locale_name_func")
Interceptor.attach(___lc_locale_name_func, {onLeave: function (args) {send("___lc_locale_name_func");}});

var ___mb_cur_max_func = Module.findExportByName("ucrtbased.dll", "___mb_cur_max_func")
Interceptor.attach(___mb_cur_max_func, {onLeave: function (args) {send("___mb_cur_max_func");}});

var ___mb_cur_max_l_func = Module.findExportByName("ucrtbased.dll", "___mb_cur_max_l_func")
Interceptor.attach(___mb_cur_max_l_func, {onLeave: function (args) {send("___mb_cur_max_l_func");}});

var __acrt_iob_func = Module.findExportByName("ucrtbased.dll", "__acrt_iob_func")
Interceptor.attach(__acrt_iob_func, {onLeave: function (args) {send("__acrt_iob_func");}});

var __conio_common_vcprintf = Module.findExportByName("ucrtbased.dll", "__conio_common_vcprintf")
Interceptor.attach(__conio_common_vcprintf, {onLeave: function (args) {send("__conio_common_vcprintf");}});

var __conio_common_vcprintf_p = Module.findExportByName("ucrtbased.dll", "__conio_common_vcprintf_p")
Interceptor.attach(__conio_common_vcprintf_p, {onLeave: function (args) {send("__conio_common_vcprintf_p");}});

var __conio_common_vcprintf_s = Module.findExportByName("ucrtbased.dll", "__conio_common_vcprintf_s")
Interceptor.attach(__conio_common_vcprintf_s, {onLeave: function (args) {send("__conio_common_vcprintf_s");}});

var __conio_common_vcscanf = Module.findExportByName("ucrtbased.dll", "__conio_common_vcscanf")
Interceptor.attach(__conio_common_vcscanf, {onLeave: function (args) {send("__conio_common_vcscanf");}});

var __conio_common_vcwprintf = Module.findExportByName("ucrtbased.dll", "__conio_common_vcwprintf")
Interceptor.attach(__conio_common_vcwprintf, {onLeave: function (args) {send("__conio_common_vcwprintf");}});

var __conio_common_vcwprintf_p = Module.findExportByName("ucrtbased.dll", "__conio_common_vcwprintf_p")
Interceptor.attach(__conio_common_vcwprintf_p, {onLeave: function (args) {send("__conio_common_vcwprintf_p");}});

var __conio_common_vcwprintf_s = Module.findExportByName("ucrtbased.dll", "__conio_common_vcwprintf_s")
Interceptor.attach(__conio_common_vcwprintf_s, {onLeave: function (args) {send("__conio_common_vcwprintf_s");}});

var __conio_common_vcwscanf = Module.findExportByName("ucrtbased.dll", "__conio_common_vcwscanf")
Interceptor.attach(__conio_common_vcwscanf, {onLeave: function (args) {send("__conio_common_vcwscanf");}});

var __current_exception = Module.findExportByName("ucrtbased.dll", "__current_exception")
Interceptor.attach(__current_exception, {onLeave: function (args) {send("__current_exception");}});

var __current_exception_context = Module.findExportByName("ucrtbased.dll", "__current_exception_context")
Interceptor.attach(__current_exception_context, {onLeave: function (args) {send("__current_exception_context");}});

var __daylight = Module.findExportByName("ucrtbased.dll", "__daylight")
Interceptor.attach(__daylight, {onLeave: function (args) {send("__daylight");}});

var __dcrt_get_wide_environment_from_os = Module.findExportByName("ucrtbased.dll", "__dcrt_get_wide_environment_from_os")
Interceptor.attach(__dcrt_get_wide_environment_from_os, {onLeave: function (args) {send("__dcrt_get_wide_environment_from_os");}});

var __dcrt_initial_narrow_environment = Module.findExportByName("ucrtbased.dll", "__dcrt_initial_narrow_environment")
Interceptor.attach(__dcrt_initial_narrow_environment, {onLeave: function (args) {send("__dcrt_initial_narrow_environment");}});

var __doserrno = Module.findExportByName("ucrtbased.dll", "__doserrno")
Interceptor.attach(__doserrno, {onLeave: function (args) {send("__doserrno");}});

var __dstbias = Module.findExportByName("ucrtbased.dll", "__dstbias")
Interceptor.attach(__dstbias, {onLeave: function (args) {send("__dstbias");}});

var __fpe_flt_rounds = Module.findExportByName("ucrtbased.dll", "__fpe_flt_rounds")
Interceptor.attach(__fpe_flt_rounds, {onLeave: function (args) {send("__fpe_flt_rounds");}});

var __fpecode = Module.findExportByName("ucrtbased.dll", "__fpecode")
Interceptor.attach(__fpecode, {onLeave: function (args) {send("__fpecode");}});

var __initialize_lconv_for_unsigned_char = Module.findExportByName("ucrtbased.dll", "__initialize_lconv_for_unsigned_char")
Interceptor.attach(__initialize_lconv_for_unsigned_char, {onLeave: function (args) {send("__initialize_lconv_for_unsigned_char");}});

var __intrinsic_setjmp = Module.findExportByName("ucrtbased.dll", "__intrinsic_setjmp")
Interceptor.attach(__intrinsic_setjmp, {onLeave: function (args) {send("__intrinsic_setjmp");}});

var __intrinsic_setjmpex = Module.findExportByName("ucrtbased.dll", "__intrinsic_setjmpex")
Interceptor.attach(__intrinsic_setjmpex, {onLeave: function (args) {send("__intrinsic_setjmpex");}});

var __isascii = Module.findExportByName("ucrtbased.dll", "__isascii")
Interceptor.attach(__isascii, {onLeave: function (args) {send("__isascii");}});

var __iscsym = Module.findExportByName("ucrtbased.dll", "__iscsym")
Interceptor.attach(__iscsym, {onLeave: function (args) {send("__iscsym");}});

var __iscsymf = Module.findExportByName("ucrtbased.dll", "__iscsymf")
Interceptor.attach(__iscsymf, {onLeave: function (args) {send("__iscsymf");}});

var __iswcsym = Module.findExportByName("ucrtbased.dll", "__iswcsym")
Interceptor.attach(__iswcsym, {onLeave: function (args) {send("__iswcsym");}});

var __iswcsymf = Module.findExportByName("ucrtbased.dll", "__iswcsymf")
Interceptor.attach(__iswcsymf, {onLeave: function (args) {send("__iswcsymf");}});

var __p___argc = Module.findExportByName("ucrtbased.dll", "__p___argc")
Interceptor.attach(__p___argc, {onLeave: function (args) {send("__p___argc");}});

var __p___argv = Module.findExportByName("ucrtbased.dll", "__p___argv")
Interceptor.attach(__p___argv, {onLeave: function (args) {send("__p___argv");}});

var __p___wargv = Module.findExportByName("ucrtbased.dll", "__p___wargv")
Interceptor.attach(__p___wargv, {onLeave: function (args) {send("__p___wargv");}});

var __p__acmdln = Module.findExportByName("ucrtbased.dll", "__p__acmdln")
Interceptor.attach(__p__acmdln, {onLeave: function (args) {send("__p__acmdln");}});

var __p__commode = Module.findExportByName("ucrtbased.dll", "__p__commode")
Interceptor.attach(__p__commode, {onLeave: function (args) {send("__p__commode");}});

var __p__crtBreakAlloc = Module.findExportByName("ucrtbased.dll", "__p__crtBreakAlloc")
Interceptor.attach(__p__crtBreakAlloc, {onLeave: function (args) {send("__p__crtBreakAlloc");}});

var __p__crtDbgFlag = Module.findExportByName("ucrtbased.dll", "__p__crtDbgFlag")
Interceptor.attach(__p__crtDbgFlag, {onLeave: function (args) {send("__p__crtDbgFlag");}});

var __p__environ = Module.findExportByName("ucrtbased.dll", "__p__environ")
Interceptor.attach(__p__environ, {onLeave: function (args) {send("__p__environ");}});

var __p__fmode = Module.findExportByName("ucrtbased.dll", "__p__fmode")
Interceptor.attach(__p__fmode, {onLeave: function (args) {send("__p__fmode");}});

var __p__mbcasemap = Module.findExportByName("ucrtbased.dll", "__p__mbcasemap")
Interceptor.attach(__p__mbcasemap, {onLeave: function (args) {send("__p__mbcasemap");}});

var __p__mbctype = Module.findExportByName("ucrtbased.dll", "__p__mbctype")
Interceptor.attach(__p__mbctype, {onLeave: function (args) {send("__p__mbctype");}});

var __p__pgmptr = Module.findExportByName("ucrtbased.dll", "__p__pgmptr")
Interceptor.attach(__p__pgmptr, {onLeave: function (args) {send("__p__pgmptr");}});

var __p__wcmdln = Module.findExportByName("ucrtbased.dll", "__p__wcmdln")
Interceptor.attach(__p__wcmdln, {onLeave: function (args) {send("__p__wcmdln");}});

var __p__wenviron = Module.findExportByName("ucrtbased.dll", "__p__wenviron")
Interceptor.attach(__p__wenviron, {onLeave: function (args) {send("__p__wenviron");}});

var __p__wpgmptr = Module.findExportByName("ucrtbased.dll", "__p__wpgmptr")
Interceptor.attach(__p__wpgmptr, {onLeave: function (args) {send("__p__wpgmptr");}});

var __pctype_func = Module.findExportByName("ucrtbased.dll", "__pctype_func")
Interceptor.attach(__pctype_func, {onLeave: function (args) {send("__pctype_func");}});

var __processing_throw = Module.findExportByName("ucrtbased.dll", "__processing_throw")
Interceptor.attach(__processing_throw, {onLeave: function (args) {send("__processing_throw");}});

var __pwctype_func = Module.findExportByName("ucrtbased.dll", "__pwctype_func")
Interceptor.attach(__pwctype_func, {onLeave: function (args) {send("__pwctype_func");}});

var __pxcptinfoptrs = Module.findExportByName("ucrtbased.dll", "__pxcptinfoptrs")
Interceptor.attach(__pxcptinfoptrs, {onLeave: function (args) {send("__pxcptinfoptrs");}});

var __report_gsfailure = Module.findExportByName("ucrtbased.dll", "__report_gsfailure")
Interceptor.attach(__report_gsfailure, {onLeave: function (args) {send("__report_gsfailure");}});

var __setusermatherr = Module.findExportByName("ucrtbased.dll", "__setusermatherr")
Interceptor.attach(__setusermatherr, {onLeave: function (args) {send("__setusermatherr");}});

var __std_exception_copy = Module.findExportByName("ucrtbased.dll", "__std_exception_copy")
Interceptor.attach(__std_exception_copy, {onLeave: function (args) {send("__std_exception_copy");}});

var __std_exception_destroy = Module.findExportByName("ucrtbased.dll", "__std_exception_destroy")
Interceptor.attach(__std_exception_destroy, {onLeave: function (args) {send("__std_exception_destroy");}});

var __std_terminate = Module.findExportByName("ucrtbased.dll", "__std_terminate")
Interceptor.attach(__std_terminate, {onLeave: function (args) {send("__std_terminate");}});

var __std_type_info_compare = Module.findExportByName("ucrtbased.dll", "__std_type_info_compare")
Interceptor.attach(__std_type_info_compare, {onLeave: function (args) {send("__std_type_info_compare");}});

var __std_type_info_destroy_list = Module.findExportByName("ucrtbased.dll", "__std_type_info_destroy_list")
Interceptor.attach(__std_type_info_destroy_list, {onLeave: function (args) {send("__std_type_info_destroy_list");}});

var __std_type_info_hash = Module.findExportByName("ucrtbased.dll", "__std_type_info_hash")
Interceptor.attach(__std_type_info_hash, {onLeave: function (args) {send("__std_type_info_hash");}});

var __std_type_info_name = Module.findExportByName("ucrtbased.dll", "__std_type_info_name")
Interceptor.attach(__std_type_info_name, {onLeave: function (args) {send("__std_type_info_name");}});

var __stdio_common_vfprintf = Module.findExportByName("ucrtbased.dll", "__stdio_common_vfprintf")
Interceptor.attach(__stdio_common_vfprintf, {onLeave: function (args) {send("__stdio_common_vfprintf");}});

var __stdio_common_vfprintf_p = Module.findExportByName("ucrtbased.dll", "__stdio_common_vfprintf_p")
Interceptor.attach(__stdio_common_vfprintf_p, {onLeave: function (args) {send("__stdio_common_vfprintf_p");}});

var __stdio_common_vfprintf_s = Module.findExportByName("ucrtbased.dll", "__stdio_common_vfprintf_s")
Interceptor.attach(__stdio_common_vfprintf_s, {onLeave: function (args) {send("__stdio_common_vfprintf_s");}});

var __stdio_common_vfscanf = Module.findExportByName("ucrtbased.dll", "__stdio_common_vfscanf")
Interceptor.attach(__stdio_common_vfscanf, {onLeave: function (args) {send("__stdio_common_vfscanf");}});

var __stdio_common_vfwprintf = Module.findExportByName("ucrtbased.dll", "__stdio_common_vfwprintf")
Interceptor.attach(__stdio_common_vfwprintf, {onLeave: function (args) {send("__stdio_common_vfwprintf");}});

var __stdio_common_vfwprintf_p = Module.findExportByName("ucrtbased.dll", "__stdio_common_vfwprintf_p")
Interceptor.attach(__stdio_common_vfwprintf_p, {onLeave: function (args) {send("__stdio_common_vfwprintf_p");}});

var __stdio_common_vfwprintf_s = Module.findExportByName("ucrtbased.dll", "__stdio_common_vfwprintf_s")
Interceptor.attach(__stdio_common_vfwprintf_s, {onLeave: function (args) {send("__stdio_common_vfwprintf_s");}});

var __stdio_common_vfwscanf = Module.findExportByName("ucrtbased.dll", "__stdio_common_vfwscanf")
Interceptor.attach(__stdio_common_vfwscanf, {onLeave: function (args) {send("__stdio_common_vfwscanf");}});

var __stdio_common_vsnprintf_s = Module.findExportByName("ucrtbased.dll", "__stdio_common_vsnprintf_s")
Interceptor.attach(__stdio_common_vsnprintf_s, {onLeave: function (args) {send("__stdio_common_vsnprintf_s");}});

var __stdio_common_vsnwprintf_s = Module.findExportByName("ucrtbased.dll", "__stdio_common_vsnwprintf_s")
Interceptor.attach(__stdio_common_vsnwprintf_s, {onLeave: function (args) {send("__stdio_common_vsnwprintf_s");}});

var __stdio_common_vsprintf = Module.findExportByName("ucrtbased.dll", "__stdio_common_vsprintf")
Interceptor.attach(__stdio_common_vsprintf, {onLeave: function (args) {send("__stdio_common_vsprintf");}});

var __stdio_common_vsprintf_p = Module.findExportByName("ucrtbased.dll", "__stdio_common_vsprintf_p")
Interceptor.attach(__stdio_common_vsprintf_p, {onLeave: function (args) {send("__stdio_common_vsprintf_p");}});

var __stdio_common_vsprintf_s = Module.findExportByName("ucrtbased.dll", "__stdio_common_vsprintf_s")
Interceptor.attach(__stdio_common_vsprintf_s, {onLeave: function (args) {send("__stdio_common_vsprintf_s");}});

var __stdio_common_vsscanf = Module.findExportByName("ucrtbased.dll", "__stdio_common_vsscanf")
Interceptor.attach(__stdio_common_vsscanf, {onLeave: function (args) {send("__stdio_common_vsscanf");}});

var __stdio_common_vswprintf = Module.findExportByName("ucrtbased.dll", "__stdio_common_vswprintf")
Interceptor.attach(__stdio_common_vswprintf, {onLeave: function (args) {send("__stdio_common_vswprintf");}});

var __stdio_common_vswprintf_p = Module.findExportByName("ucrtbased.dll", "__stdio_common_vswprintf_p")
Interceptor.attach(__stdio_common_vswprintf_p, {onLeave: function (args) {send("__stdio_common_vswprintf_p");}});

var __stdio_common_vswprintf_s = Module.findExportByName("ucrtbased.dll", "__stdio_common_vswprintf_s")
Interceptor.attach(__stdio_common_vswprintf_s, {onLeave: function (args) {send("__stdio_common_vswprintf_s");}});

var __stdio_common_vswscanf = Module.findExportByName("ucrtbased.dll", "__stdio_common_vswscanf")
Interceptor.attach(__stdio_common_vswscanf, {onLeave: function (args) {send("__stdio_common_vswscanf");}});

var __strncnt = Module.findExportByName("ucrtbased.dll", "__strncnt")
Interceptor.attach(__strncnt, {onLeave: function (args) {send("__strncnt");}});

var __sys_errlist = Module.findExportByName("ucrtbased.dll", "__sys_errlist")
Interceptor.attach(__sys_errlist, {onLeave: function (args) {send("__sys_errlist");}});

var __sys_nerr = Module.findExportByName("ucrtbased.dll", "__sys_nerr")
Interceptor.attach(__sys_nerr, {onLeave: function (args) {send("__sys_nerr");}});

var __threadhandle = Module.findExportByName("ucrtbased.dll", "__threadhandle")
Interceptor.attach(__threadhandle, {onLeave: function (args) {send("__threadhandle");}});

var __threadid = Module.findExportByName("ucrtbased.dll", "__threadid")
Interceptor.attach(__threadid, {onLeave: function (args) {send("__threadid");}});

var __timezone = Module.findExportByName("ucrtbased.dll", "__timezone")
Interceptor.attach(__timezone, {onLeave: function (args) {send("__timezone");}});

var __toascii = Module.findExportByName("ucrtbased.dll", "__toascii")
Interceptor.attach(__toascii, {onLeave: function (args) {send("__toascii");}});

var __tzname = Module.findExportByName("ucrtbased.dll", "__tzname")
Interceptor.attach(__tzname, {onLeave: function (args) {send("__tzname");}});

var __unDName = Module.findExportByName("ucrtbased.dll", "__unDName")
Interceptor.attach(__unDName, {onLeave: function (args) {send("__unDName");}});

var __unDNameEx = Module.findExportByName("ucrtbased.dll", "__unDNameEx")
Interceptor.attach(__unDNameEx, {onLeave: function (args) {send("__unDNameEx");}});

var __uncaught_exception = Module.findExportByName("ucrtbased.dll", "__uncaught_exception")
Interceptor.attach(__uncaught_exception, {onLeave: function (args) {send("__uncaught_exception");}});

var __uncaught_exceptions = Module.findExportByName("ucrtbased.dll", "__uncaught_exceptions")
Interceptor.attach(__uncaught_exceptions, {onLeave: function (args) {send("__uncaught_exceptions");}});

var __wcserror = Module.findExportByName("ucrtbased.dll", "__wcserror")
Interceptor.attach(__wcserror, {onLeave: function (args) {send("__wcserror");}});

var __wcserror_s = Module.findExportByName("ucrtbased.dll", "__wcserror_s")
Interceptor.attach(__wcserror_s, {onLeave: function (args) {send("__wcserror_s");}});

var __wcsncnt = Module.findExportByName("ucrtbased.dll", "__wcsncnt")
Interceptor.attach(__wcsncnt, {onLeave: function (args) {send("__wcsncnt");}});

var _abs64 = Module.findExportByName("ucrtbased.dll", "_abs64")
Interceptor.attach(_abs64, {onLeave: function (args) {send("_abs64");}});

var _access = Module.findExportByName("ucrtbased.dll", "_access")
Interceptor.attach(_access, {onLeave: function (args) {send("_access");}});

var _access_s = Module.findExportByName("ucrtbased.dll", "_access_s")
Interceptor.attach(_access_s, {onLeave: function (args) {send("_access_s");}});

var _aligned_free = Module.findExportByName("ucrtbased.dll", "_aligned_free")
Interceptor.attach(_aligned_free, {onLeave: function (args) {send("_aligned_free");}});

var _aligned_free_dbg = Module.findExportByName("ucrtbased.dll", "_aligned_free_dbg")
Interceptor.attach(_aligned_free_dbg, {onLeave: function (args) {send("_aligned_free_dbg");}});

var _aligned_malloc = Module.findExportByName("ucrtbased.dll", "_aligned_malloc")
Interceptor.attach(_aligned_malloc, {onLeave: function (args) {send("_aligned_malloc");}});

var _aligned_malloc_dbg = Module.findExportByName("ucrtbased.dll", "_aligned_malloc_dbg")
Interceptor.attach(_aligned_malloc_dbg, {onLeave: function (args) {send("_aligned_malloc_dbg");}});

var _aligned_msize = Module.findExportByName("ucrtbased.dll", "_aligned_msize")
Interceptor.attach(_aligned_msize, {onLeave: function (args) {send("_aligned_msize");}});

var _aligned_msize_dbg = Module.findExportByName("ucrtbased.dll", "_aligned_msize_dbg")
Interceptor.attach(_aligned_msize_dbg, {onLeave: function (args) {send("_aligned_msize_dbg");}});

var _aligned_offset_malloc = Module.findExportByName("ucrtbased.dll", "_aligned_offset_malloc")
Interceptor.attach(_aligned_offset_malloc, {onLeave: function (args) {send("_aligned_offset_malloc");}});

var _aligned_offset_malloc_dbg = Module.findExportByName("ucrtbased.dll", "_aligned_offset_malloc_dbg")
Interceptor.attach(_aligned_offset_malloc_dbg, {onLeave: function (args) {send("_aligned_offset_malloc_dbg");}});

var _aligned_offset_realloc = Module.findExportByName("ucrtbased.dll", "_aligned_offset_realloc")
Interceptor.attach(_aligned_offset_realloc, {onLeave: function (args) {send("_aligned_offset_realloc");}});

var _aligned_offset_realloc_dbg = Module.findExportByName("ucrtbased.dll", "_aligned_offset_realloc_dbg")
Interceptor.attach(_aligned_offset_realloc_dbg, {onLeave: function (args) {send("_aligned_offset_realloc_dbg");}});

var _aligned_offset_recalloc = Module.findExportByName("ucrtbased.dll", "_aligned_offset_recalloc")
Interceptor.attach(_aligned_offset_recalloc, {onLeave: function (args) {send("_aligned_offset_recalloc");}});

var _aligned_offset_recalloc_dbg = Module.findExportByName("ucrtbased.dll", "_aligned_offset_recalloc_dbg")
Interceptor.attach(_aligned_offset_recalloc_dbg, {onLeave: function (args) {send("_aligned_offset_recalloc_dbg");}});

var _aligned_realloc = Module.findExportByName("ucrtbased.dll", "_aligned_realloc")
Interceptor.attach(_aligned_realloc, {onLeave: function (args) {send("_aligned_realloc");}});

var _aligned_realloc_dbg = Module.findExportByName("ucrtbased.dll", "_aligned_realloc_dbg")
Interceptor.attach(_aligned_realloc_dbg, {onLeave: function (args) {send("_aligned_realloc_dbg");}});

var _aligned_recalloc = Module.findExportByName("ucrtbased.dll", "_aligned_recalloc")
Interceptor.attach(_aligned_recalloc, {onLeave: function (args) {send("_aligned_recalloc");}});

var _aligned_recalloc_dbg = Module.findExportByName("ucrtbased.dll", "_aligned_recalloc_dbg")
Interceptor.attach(_aligned_recalloc_dbg, {onLeave: function (args) {send("_aligned_recalloc_dbg");}});

var _assert = Module.findExportByName("ucrtbased.dll", "_assert")
Interceptor.attach(_assert, {onLeave: function (args) {send("_assert");}});

var _atodbl = Module.findExportByName("ucrtbased.dll", "_atodbl")
Interceptor.attach(_atodbl, {onLeave: function (args) {send("_atodbl");}});

var _atodbl_l = Module.findExportByName("ucrtbased.dll", "_atodbl_l")
Interceptor.attach(_atodbl_l, {onLeave: function (args) {send("_atodbl_l");}});

var _atof_l = Module.findExportByName("ucrtbased.dll", "_atof_l")
Interceptor.attach(_atof_l, {onLeave: function (args) {send("_atof_l");}});

var _atoflt = Module.findExportByName("ucrtbased.dll", "_atoflt")
Interceptor.attach(_atoflt, {onLeave: function (args) {send("_atoflt");}});

var _atoflt_l = Module.findExportByName("ucrtbased.dll", "_atoflt_l")
Interceptor.attach(_atoflt_l, {onLeave: function (args) {send("_atoflt_l");}});

var _atoi64 = Module.findExportByName("ucrtbased.dll", "_atoi64")
Interceptor.attach(_atoi64, {onLeave: function (args) {send("_atoi64");}});

var _atoi64_l = Module.findExportByName("ucrtbased.dll", "_atoi64_l")
Interceptor.attach(_atoi64_l, {onLeave: function (args) {send("_atoi64_l");}});

var _atoi_l = Module.findExportByName("ucrtbased.dll", "_atoi_l")
Interceptor.attach(_atoi_l, {onLeave: function (args) {send("_atoi_l");}});

var _atol_l = Module.findExportByName("ucrtbased.dll", "_atol_l")
Interceptor.attach(_atol_l, {onLeave: function (args) {send("_atol_l");}});

var _atoldbl = Module.findExportByName("ucrtbased.dll", "_atoldbl")
Interceptor.attach(_atoldbl, {onLeave: function (args) {send("_atoldbl");}});

var _atoldbl_l = Module.findExportByName("ucrtbased.dll", "_atoldbl_l")
Interceptor.attach(_atoldbl_l, {onLeave: function (args) {send("_atoldbl_l");}});

var _atoll_l = Module.findExportByName("ucrtbased.dll", "_atoll_l")
Interceptor.attach(_atoll_l, {onLeave: function (args) {send("_atoll_l");}});

var _beep = Module.findExportByName("ucrtbased.dll", "_beep")
Interceptor.attach(_beep, {onLeave: function (args) {send("_beep");}});

var _beginthread = Module.findExportByName("ucrtbased.dll", "_beginthread")
Interceptor.attach(_beginthread, {onLeave: function (args) {send("_beginthread");}});

var _beginthreadex = Module.findExportByName("ucrtbased.dll", "_beginthreadex")
Interceptor.attach(_beginthreadex, {onLeave: function (args) {send("_beginthreadex");}});

var _byteswap_uint64 = Module.findExportByName("ucrtbased.dll", "_byteswap_uint64")
Interceptor.attach(_byteswap_uint64, {onLeave: function (args) {send("_byteswap_uint64");}});

var _byteswap_ulong = Module.findExportByName("ucrtbased.dll", "_byteswap_ulong")
Interceptor.attach(_byteswap_ulong, {onLeave: function (args) {send("_byteswap_ulong");}});

var _byteswap_ushort = Module.findExportByName("ucrtbased.dll", "_byteswap_ushort")
Interceptor.attach(_byteswap_ushort, {onLeave: function (args) {send("_byteswap_ushort");}});

var _c_exit = Module.findExportByName("ucrtbased.dll", "_c_exit")
Interceptor.attach(_c_exit, {onLeave: function (args) {send("_c_exit");}});

var _cabs = Module.findExportByName("ucrtbased.dll", "_cabs")
Interceptor.attach(_cabs, {onLeave: function (args) {send("_cabs");}});

var _callnewh = Module.findExportByName("ucrtbased.dll", "_callnewh")
Interceptor.attach(_callnewh, {onLeave: function (args) {send("_callnewh");}});

var _calloc_base = Module.findExportByName("ucrtbased.dll", "_calloc_base")
Interceptor.attach(_calloc_base, {onLeave: function (args) {send("_calloc_base");}});

var _calloc_dbg = Module.findExportByName("ucrtbased.dll", "_calloc_dbg")
Interceptor.attach(_calloc_dbg, {onLeave: function (args) {send("_calloc_dbg");}});

var _cexit = Module.findExportByName("ucrtbased.dll", "_cexit")
Interceptor.attach(_cexit, {onLeave: function (args) {send("_cexit");}});

var _cgets = Module.findExportByName("ucrtbased.dll", "_cgets")
Interceptor.attach(_cgets, {onLeave: function (args) {send("_cgets");}});

var _cgets_s = Module.findExportByName("ucrtbased.dll", "_cgets_s")
Interceptor.attach(_cgets_s, {onLeave: function (args) {send("_cgets_s");}});

var _cgetws = Module.findExportByName("ucrtbased.dll", "_cgetws")
Interceptor.attach(_cgetws, {onLeave: function (args) {send("_cgetws");}});

var _cgetws_s = Module.findExportByName("ucrtbased.dll", "_cgetws_s")
Interceptor.attach(_cgetws_s, {onLeave: function (args) {send("_cgetws_s");}});

var _chdir = Module.findExportByName("ucrtbased.dll", "_chdir")
Interceptor.attach(_chdir, {onLeave: function (args) {send("_chdir");}});

var _chdrive = Module.findExportByName("ucrtbased.dll", "_chdrive")
Interceptor.attach(_chdrive, {onLeave: function (args) {send("_chdrive");}});

var _chgsign = Module.findExportByName("ucrtbased.dll", "_chgsign")
Interceptor.attach(_chgsign, {onLeave: function (args) {send("_chgsign");}});

var _chgsignf = Module.findExportByName("ucrtbased.dll", "_chgsignf")
Interceptor.attach(_chgsignf, {onLeave: function (args) {send("_chgsignf");}});

var _chmod = Module.findExportByName("ucrtbased.dll", "_chmod")
Interceptor.attach(_chmod, {onLeave: function (args) {send("_chmod");}});

var _chsize = Module.findExportByName("ucrtbased.dll", "_chsize")
Interceptor.attach(_chsize, {onLeave: function (args) {send("_chsize");}});

var _chsize_s = Module.findExportByName("ucrtbased.dll", "_chsize_s")
Interceptor.attach(_chsize_s, {onLeave: function (args) {send("_chsize_s");}});

var _chvalidator = Module.findExportByName("ucrtbased.dll", "_chvalidator")
Interceptor.attach(_chvalidator, {onLeave: function (args) {send("_chvalidator");}});

var _chvalidator_l = Module.findExportByName("ucrtbased.dll", "_chvalidator_l")
Interceptor.attach(_chvalidator_l, {onLeave: function (args) {send("_chvalidator_l");}});

var _clearfp = Module.findExportByName("ucrtbased.dll", "_clearfp")
Interceptor.attach(_clearfp, {onLeave: function (args) {send("_clearfp");}});

var _close = Module.findExportByName("ucrtbased.dll", "_close")
Interceptor.attach(_close, {onLeave: function (args) {send("_close");}});

var _commit = Module.findExportByName("ucrtbased.dll", "_commit")
Interceptor.attach(_commit, {onLeave: function (args) {send("_commit");}});

var _configthreadlocale = Module.findExportByName("ucrtbased.dll", "_configthreadlocale")
Interceptor.attach(_configthreadlocale, {onLeave: function (args) {send("_configthreadlocale");}});

var _configure_narrow_argv = Module.findExportByName("ucrtbased.dll", "_configure_narrow_argv")
Interceptor.attach(_configure_narrow_argv, {onLeave: function (args) {send("_configure_narrow_argv");}});

var _configure_wide_argv = Module.findExportByName("ucrtbased.dll", "_configure_wide_argv")
Interceptor.attach(_configure_wide_argv, {onLeave: function (args) {send("_configure_wide_argv");}});

var _control87 = Module.findExportByName("ucrtbased.dll", "_control87")
Interceptor.attach(_control87, {onLeave: function (args) {send("_control87");}});

var _controlfp = Module.findExportByName("ucrtbased.dll", "_controlfp")
Interceptor.attach(_controlfp, {onLeave: function (args) {send("_controlfp");}});

var _controlfp_s = Module.findExportByName("ucrtbased.dll", "_controlfp_s")
Interceptor.attach(_controlfp_s, {onLeave: function (args) {send("_controlfp_s");}});

var _copysign = Module.findExportByName("ucrtbased.dll", "_copysign")
Interceptor.attach(_copysign, {onLeave: function (args) {send("_copysign");}});

var _copysignf = Module.findExportByName("ucrtbased.dll", "_copysignf")
Interceptor.attach(_copysignf, {onLeave: function (args) {send("_copysignf");}});

var _cputs = Module.findExportByName("ucrtbased.dll", "_cputs")
Interceptor.attach(_cputs, {onLeave: function (args) {send("_cputs");}});

var _cputws = Module.findExportByName("ucrtbased.dll", "_cputws")
Interceptor.attach(_cputws, {onLeave: function (args) {send("_cputws");}});

var _creat = Module.findExportByName("ucrtbased.dll", "_creat")
Interceptor.attach(_creat, {onLeave: function (args) {send("_creat");}});

var _create_locale = Module.findExportByName("ucrtbased.dll", "_create_locale")
Interceptor.attach(_create_locale, {onLeave: function (args) {send("_create_locale");}});

var _crt_at_quick_exit = Module.findExportByName("ucrtbased.dll", "_crt_at_quick_exit")
Interceptor.attach(_crt_at_quick_exit, {onLeave: function (args) {send("_crt_at_quick_exit");}});

var _crt_atexit = Module.findExportByName("ucrtbased.dll", "_crt_atexit")
Interceptor.attach(_crt_atexit, {onLeave: function (args) {send("_crt_atexit");}});

var _ctime32 = Module.findExportByName("ucrtbased.dll", "_ctime32")
Interceptor.attach(_ctime32, {onLeave: function (args) {send("_ctime32");}});

var _ctime32_s = Module.findExportByName("ucrtbased.dll", "_ctime32_s")
Interceptor.attach(_ctime32_s, {onLeave: function (args) {send("_ctime32_s");}});

var _ctime64 = Module.findExportByName("ucrtbased.dll", "_ctime64")
Interceptor.attach(_ctime64, {onLeave: function (args) {send("_ctime64");}});

var _ctime64_s = Module.findExportByName("ucrtbased.dll", "_ctime64_s")
Interceptor.attach(_ctime64_s, {onLeave: function (args) {send("_ctime64_s");}});

var _cwait = Module.findExportByName("ucrtbased.dll", "_cwait")
Interceptor.attach(_cwait, {onLeave: function (args) {send("_cwait");}});

var _d_int = Module.findExportByName("ucrtbased.dll", "_d_int")
Interceptor.attach(_d_int, {onLeave: function (args) {send("_d_int");}});

var _dclass = Module.findExportByName("ucrtbased.dll", "_dclass")
Interceptor.attach(_dclass, {onLeave: function (args) {send("_dclass");}});

var _dexp = Module.findExportByName("ucrtbased.dll", "_dexp")
Interceptor.attach(_dexp, {onLeave: function (args) {send("_dexp");}});

var _difftime32 = Module.findExportByName("ucrtbased.dll", "_difftime32")
Interceptor.attach(_difftime32, {onLeave: function (args) {send("_difftime32");}});

var _difftime64 = Module.findExportByName("ucrtbased.dll", "_difftime64")
Interceptor.attach(_difftime64, {onLeave: function (args) {send("_difftime64");}});

var _dlog = Module.findExportByName("ucrtbased.dll", "_dlog")
Interceptor.attach(_dlog, {onLeave: function (args) {send("_dlog");}});

var _dnorm = Module.findExportByName("ucrtbased.dll", "_dnorm")
Interceptor.attach(_dnorm, {onLeave: function (args) {send("_dnorm");}});

var _dpcomp = Module.findExportByName("ucrtbased.dll", "_dpcomp")
Interceptor.attach(_dpcomp, {onLeave: function (args) {send("_dpcomp");}});

var _dpoly = Module.findExportByName("ucrtbased.dll", "_dpoly")
Interceptor.attach(_dpoly, {onLeave: function (args) {send("_dpoly");}});

var _dscale = Module.findExportByName("ucrtbased.dll", "_dscale")
Interceptor.attach(_dscale, {onLeave: function (args) {send("_dscale");}});

var _dsign = Module.findExportByName("ucrtbased.dll", "_dsign")
Interceptor.attach(_dsign, {onLeave: function (args) {send("_dsign");}});

var _dsin = Module.findExportByName("ucrtbased.dll", "_dsin")
Interceptor.attach(_dsin, {onLeave: function (args) {send("_dsin");}});

var _dtest = Module.findExportByName("ucrtbased.dll", "_dtest")
Interceptor.attach(_dtest, {onLeave: function (args) {send("_dtest");}});

var _dunscale = Module.findExportByName("ucrtbased.dll", "_dunscale")
Interceptor.attach(_dunscale, {onLeave: function (args) {send("_dunscale");}});

var _dup = Module.findExportByName("ucrtbased.dll", "_dup")
Interceptor.attach(_dup, {onLeave: function (args) {send("_dup");}});

var _dup2 = Module.findExportByName("ucrtbased.dll", "_dup2")
Interceptor.attach(_dup2, {onLeave: function (args) {send("_dup2");}});

var _dupenv_s = Module.findExportByName("ucrtbased.dll", "_dupenv_s")
Interceptor.attach(_dupenv_s, {onLeave: function (args) {send("_dupenv_s");}});

var _dupenv_s_dbg = Module.findExportByName("ucrtbased.dll", "_dupenv_s_dbg")
Interceptor.attach(_dupenv_s_dbg, {onLeave: function (args) {send("_dupenv_s_dbg");}});

var _ecvt = Module.findExportByName("ucrtbased.dll", "_ecvt")
Interceptor.attach(_ecvt, {onLeave: function (args) {send("_ecvt");}});

var _ecvt_s = Module.findExportByName("ucrtbased.dll", "_ecvt_s")
Interceptor.attach(_ecvt_s, {onLeave: function (args) {send("_ecvt_s");}});

var _endthread = Module.findExportByName("ucrtbased.dll", "_endthread")
Interceptor.attach(_endthread, {onLeave: function (args) {send("_endthread");}});

var _endthreadex = Module.findExportByName("ucrtbased.dll", "_endthreadex")
Interceptor.attach(_endthreadex, {onLeave: function (args) {send("_endthreadex");}});

var _eof = Module.findExportByName("ucrtbased.dll", "_eof")
Interceptor.attach(_eof, {onLeave: function (args) {send("_eof");}});

var _errno = Module.findExportByName("ucrtbased.dll", "_errno")
Interceptor.attach(_errno, {onLeave: function (args) {send("_errno");}});

var _except1 = Module.findExportByName("ucrtbased.dll", "_except1")
Interceptor.attach(_except1, {onLeave: function (args) {send("_except1");}});

var _execl = Module.findExportByName("ucrtbased.dll", "_execl")
Interceptor.attach(_execl, {onLeave: function (args) {send("_execl");}});

var _execle = Module.findExportByName("ucrtbased.dll", "_execle")
Interceptor.attach(_execle, {onLeave: function (args) {send("_execle");}});

var _execlp = Module.findExportByName("ucrtbased.dll", "_execlp")
Interceptor.attach(_execlp, {onLeave: function (args) {send("_execlp");}});

var _execlpe = Module.findExportByName("ucrtbased.dll", "_execlpe")
Interceptor.attach(_execlpe, {onLeave: function (args) {send("_execlpe");}});

var _execute_onexit_table = Module.findExportByName("ucrtbased.dll", "_execute_onexit_table")
Interceptor.attach(_execute_onexit_table, {onLeave: function (args) {send("_execute_onexit_table");}});

var _execv = Module.findExportByName("ucrtbased.dll", "_execv")
Interceptor.attach(_execv, {onLeave: function (args) {send("_execv");}});

var _execve = Module.findExportByName("ucrtbased.dll", "_execve")
Interceptor.attach(_execve, {onLeave: function (args) {send("_execve");}});

var _execvp = Module.findExportByName("ucrtbased.dll", "_execvp")
Interceptor.attach(_execvp, {onLeave: function (args) {send("_execvp");}});

var _execvpe = Module.findExportByName("ucrtbased.dll", "_execvpe")
Interceptor.attach(_execvpe, {onLeave: function (args) {send("_execvpe");}});

var _exit = Module.findExportByName("ucrtbased.dll", "_exit")
Interceptor.attach(_exit, {onLeave: function (args) {send("_exit");}});

var _expand = Module.findExportByName("ucrtbased.dll", "_expand")
Interceptor.attach(_expand, {onLeave: function (args) {send("_expand");}});

var _expand_dbg = Module.findExportByName("ucrtbased.dll", "_expand_dbg")
Interceptor.attach(_expand_dbg, {onLeave: function (args) {send("_expand_dbg");}});

var _fclose_nolock = Module.findExportByName("ucrtbased.dll", "_fclose_nolock")
Interceptor.attach(_fclose_nolock, {onLeave: function (args) {send("_fclose_nolock");}});

var _fcloseall = Module.findExportByName("ucrtbased.dll", "_fcloseall")
Interceptor.attach(_fcloseall, {onLeave: function (args) {send("_fcloseall");}});

var _fcvt = Module.findExportByName("ucrtbased.dll", "_fcvt")
Interceptor.attach(_fcvt, {onLeave: function (args) {send("_fcvt");}});

var _fcvt_s = Module.findExportByName("ucrtbased.dll", "_fcvt_s")
Interceptor.attach(_fcvt_s, {onLeave: function (args) {send("_fcvt_s");}});

var _fd_int = Module.findExportByName("ucrtbased.dll", "_fd_int")
Interceptor.attach(_fd_int, {onLeave: function (args) {send("_fd_int");}});

var _fdclass = Module.findExportByName("ucrtbased.dll", "_fdclass")
Interceptor.attach(_fdclass, {onLeave: function (args) {send("_fdclass");}});

var _fdexp = Module.findExportByName("ucrtbased.dll", "_fdexp")
Interceptor.attach(_fdexp, {onLeave: function (args) {send("_fdexp");}});

var _fdlog = Module.findExportByName("ucrtbased.dll", "_fdlog")
Interceptor.attach(_fdlog, {onLeave: function (args) {send("_fdlog");}});

var _fdnorm = Module.findExportByName("ucrtbased.dll", "_fdnorm")
Interceptor.attach(_fdnorm, {onLeave: function (args) {send("_fdnorm");}});

var _fdopen = Module.findExportByName("ucrtbased.dll", "_fdopen")
Interceptor.attach(_fdopen, {onLeave: function (args) {send("_fdopen");}});

var _fdpcomp = Module.findExportByName("ucrtbased.dll", "_fdpcomp")
Interceptor.attach(_fdpcomp, {onLeave: function (args) {send("_fdpcomp");}});

var _fdpoly = Module.findExportByName("ucrtbased.dll", "_fdpoly")
Interceptor.attach(_fdpoly, {onLeave: function (args) {send("_fdpoly");}});

var _fdscale = Module.findExportByName("ucrtbased.dll", "_fdscale")
Interceptor.attach(_fdscale, {onLeave: function (args) {send("_fdscale");}});

var _fdsign = Module.findExportByName("ucrtbased.dll", "_fdsign")
Interceptor.attach(_fdsign, {onLeave: function (args) {send("_fdsign");}});

var _fdsin = Module.findExportByName("ucrtbased.dll", "_fdsin")
Interceptor.attach(_fdsin, {onLeave: function (args) {send("_fdsin");}});

var _fdtest = Module.findExportByName("ucrtbased.dll", "_fdtest")
Interceptor.attach(_fdtest, {onLeave: function (args) {send("_fdtest");}});

var _fdunscale = Module.findExportByName("ucrtbased.dll", "_fdunscale")
Interceptor.attach(_fdunscale, {onLeave: function (args) {send("_fdunscale");}});

var _fflush_nolock = Module.findExportByName("ucrtbased.dll", "_fflush_nolock")
Interceptor.attach(_fflush_nolock, {onLeave: function (args) {send("_fflush_nolock");}});

var _fgetc_nolock = Module.findExportByName("ucrtbased.dll", "_fgetc_nolock")
Interceptor.attach(_fgetc_nolock, {onLeave: function (args) {send("_fgetc_nolock");}});

var _fgetchar = Module.findExportByName("ucrtbased.dll", "_fgetchar")
Interceptor.attach(_fgetchar, {onLeave: function (args) {send("_fgetchar");}});

var _fgetwc_nolock = Module.findExportByName("ucrtbased.dll", "_fgetwc_nolock")
Interceptor.attach(_fgetwc_nolock, {onLeave: function (args) {send("_fgetwc_nolock");}});

var _fgetwchar = Module.findExportByName("ucrtbased.dll", "_fgetwchar")
Interceptor.attach(_fgetwchar, {onLeave: function (args) {send("_fgetwchar");}});

var _filelength = Module.findExportByName("ucrtbased.dll", "_filelength")
Interceptor.attach(_filelength, {onLeave: function (args) {send("_filelength");}});

var _filelengthi64 = Module.findExportByName("ucrtbased.dll", "_filelengthi64")
Interceptor.attach(_filelengthi64, {onLeave: function (args) {send("_filelengthi64");}});

var _fileno = Module.findExportByName("ucrtbased.dll", "_fileno")
Interceptor.attach(_fileno, {onLeave: function (args) {send("_fileno");}});

var _findclose = Module.findExportByName("ucrtbased.dll", "_findclose")
Interceptor.attach(_findclose, {onLeave: function (args) {send("_findclose");}});

var _findfirst32 = Module.findExportByName("ucrtbased.dll", "_findfirst32")
Interceptor.attach(_findfirst32, {onLeave: function (args) {send("_findfirst32");}});

var _findfirst32i64 = Module.findExportByName("ucrtbased.dll", "_findfirst32i64")
Interceptor.attach(_findfirst32i64, {onLeave: function (args) {send("_findfirst32i64");}});

var _findfirst64 = Module.findExportByName("ucrtbased.dll", "_findfirst64")
Interceptor.attach(_findfirst64, {onLeave: function (args) {send("_findfirst64");}});

var _findfirst64i32 = Module.findExportByName("ucrtbased.dll", "_findfirst64i32")
Interceptor.attach(_findfirst64i32, {onLeave: function (args) {send("_findfirst64i32");}});

var _findnext32 = Module.findExportByName("ucrtbased.dll", "_findnext32")
Interceptor.attach(_findnext32, {onLeave: function (args) {send("_findnext32");}});

var _findnext32i64 = Module.findExportByName("ucrtbased.dll", "_findnext32i64")
Interceptor.attach(_findnext32i64, {onLeave: function (args) {send("_findnext32i64");}});

var _findnext64 = Module.findExportByName("ucrtbased.dll", "_findnext64")
Interceptor.attach(_findnext64, {onLeave: function (args) {send("_findnext64");}});

var _findnext64i32 = Module.findExportByName("ucrtbased.dll", "_findnext64i32")
Interceptor.attach(_findnext64i32, {onLeave: function (args) {send("_findnext64i32");}});

var _finite = Module.findExportByName("ucrtbased.dll", "_finite")
Interceptor.attach(_finite, {onLeave: function (args) {send("_finite");}});

var _finitef = Module.findExportByName("ucrtbased.dll", "_finitef")
Interceptor.attach(_finitef, {onLeave: function (args) {send("_finitef");}});

var _flushall = Module.findExportByName("ucrtbased.dll", "_flushall")
Interceptor.attach(_flushall, {onLeave: function (args) {send("_flushall");}});

var _fpclass = Module.findExportByName("ucrtbased.dll", "_fpclass")
Interceptor.attach(_fpclass, {onLeave: function (args) {send("_fpclass");}});

var _fpclassf = Module.findExportByName("ucrtbased.dll", "_fpclassf")
Interceptor.attach(_fpclassf, {onLeave: function (args) {send("_fpclassf");}});

var _fpieee_flt = Module.findExportByName("ucrtbased.dll", "_fpieee_flt")
Interceptor.attach(_fpieee_flt, {onLeave: function (args) {send("_fpieee_flt");}});

var _fpreset = Module.findExportByName("ucrtbased.dll", "_fpreset")
Interceptor.attach(_fpreset, {onLeave: function (args) {send("_fpreset");}});

var _fputc_nolock = Module.findExportByName("ucrtbased.dll", "_fputc_nolock")
Interceptor.attach(_fputc_nolock, {onLeave: function (args) {send("_fputc_nolock");}});

var _fputchar = Module.findExportByName("ucrtbased.dll", "_fputchar")
Interceptor.attach(_fputchar, {onLeave: function (args) {send("_fputchar");}});

var _fputwc_nolock = Module.findExportByName("ucrtbased.dll", "_fputwc_nolock")
Interceptor.attach(_fputwc_nolock, {onLeave: function (args) {send("_fputwc_nolock");}});

var _fputwchar = Module.findExportByName("ucrtbased.dll", "_fputwchar")
Interceptor.attach(_fputwchar, {onLeave: function (args) {send("_fputwchar");}});

var _fread_nolock = Module.findExportByName("ucrtbased.dll", "_fread_nolock")
Interceptor.attach(_fread_nolock, {onLeave: function (args) {send("_fread_nolock");}});

var _fread_nolock_s = Module.findExportByName("ucrtbased.dll", "_fread_nolock_s")
Interceptor.attach(_fread_nolock_s, {onLeave: function (args) {send("_fread_nolock_s");}});

var _free_base = Module.findExportByName("ucrtbased.dll", "_free_base")
Interceptor.attach(_free_base, {onLeave: function (args) {send("_free_base");}});

var _free_dbg = Module.findExportByName("ucrtbased.dll", "_free_dbg")
Interceptor.attach(_free_dbg, {onLeave: function (args) {send("_free_dbg");}});

var _free_locale = Module.findExportByName("ucrtbased.dll", "_free_locale")
Interceptor.attach(_free_locale, {onLeave: function (args) {send("_free_locale");}});

var _fseek_nolock = Module.findExportByName("ucrtbased.dll", "_fseek_nolock")
Interceptor.attach(_fseek_nolock, {onLeave: function (args) {send("_fseek_nolock");}});

var _fseeki64 = Module.findExportByName("ucrtbased.dll", "_fseeki64")
Interceptor.attach(_fseeki64, {onLeave: function (args) {send("_fseeki64");}});

var _fseeki64_nolock = Module.findExportByName("ucrtbased.dll", "_fseeki64_nolock")
Interceptor.attach(_fseeki64_nolock, {onLeave: function (args) {send("_fseeki64_nolock");}});

var _fsopen = Module.findExportByName("ucrtbased.dll", "_fsopen")
Interceptor.attach(_fsopen, {onLeave: function (args) {send("_fsopen");}});

var _fstat32 = Module.findExportByName("ucrtbased.dll", "_fstat32")
Interceptor.attach(_fstat32, {onLeave: function (args) {send("_fstat32");}});

var _fstat32i64 = Module.findExportByName("ucrtbased.dll", "_fstat32i64")
Interceptor.attach(_fstat32i64, {onLeave: function (args) {send("_fstat32i64");}});

var _fstat64 = Module.findExportByName("ucrtbased.dll", "_fstat64")
Interceptor.attach(_fstat64, {onLeave: function (args) {send("_fstat64");}});

var _fstat64i32 = Module.findExportByName("ucrtbased.dll", "_fstat64i32")
Interceptor.attach(_fstat64i32, {onLeave: function (args) {send("_fstat64i32");}});

var _ftell_nolock = Module.findExportByName("ucrtbased.dll", "_ftell_nolock")
Interceptor.attach(_ftell_nolock, {onLeave: function (args) {send("_ftell_nolock");}});

var _ftelli64 = Module.findExportByName("ucrtbased.dll", "_ftelli64")
Interceptor.attach(_ftelli64, {onLeave: function (args) {send("_ftelli64");}});

var _ftelli64_nolock = Module.findExportByName("ucrtbased.dll", "_ftelli64_nolock")
Interceptor.attach(_ftelli64_nolock, {onLeave: function (args) {send("_ftelli64_nolock");}});

var _ftime32 = Module.findExportByName("ucrtbased.dll", "_ftime32")
Interceptor.attach(_ftime32, {onLeave: function (args) {send("_ftime32");}});

var _ftime32_s = Module.findExportByName("ucrtbased.dll", "_ftime32_s")
Interceptor.attach(_ftime32_s, {onLeave: function (args) {send("_ftime32_s");}});

var _ftime64 = Module.findExportByName("ucrtbased.dll", "_ftime64")
Interceptor.attach(_ftime64, {onLeave: function (args) {send("_ftime64");}});

var _ftime64_s = Module.findExportByName("ucrtbased.dll", "_ftime64_s")
Interceptor.attach(_ftime64_s, {onLeave: function (args) {send("_ftime64_s");}});

var _fullpath = Module.findExportByName("ucrtbased.dll", "_fullpath")
Interceptor.attach(_fullpath, {onLeave: function (args) {send("_fullpath");}});

var _fullpath_dbg = Module.findExportByName("ucrtbased.dll", "_fullpath_dbg")
Interceptor.attach(_fullpath_dbg, {onLeave: function (args) {send("_fullpath_dbg");}});

var _futime32 = Module.findExportByName("ucrtbased.dll", "_futime32")
Interceptor.attach(_futime32, {onLeave: function (args) {send("_futime32");}});

var _futime64 = Module.findExportByName("ucrtbased.dll", "_futime64")
Interceptor.attach(_futime64, {onLeave: function (args) {send("_futime64");}});

var _fwrite_nolock = Module.findExportByName("ucrtbased.dll", "_fwrite_nolock")
Interceptor.attach(_fwrite_nolock, {onLeave: function (args) {send("_fwrite_nolock");}});

var _gcvt = Module.findExportByName("ucrtbased.dll", "_gcvt")
Interceptor.attach(_gcvt, {onLeave: function (args) {send("_gcvt");}});

var _gcvt_s = Module.findExportByName("ucrtbased.dll", "_gcvt_s")
Interceptor.attach(_gcvt_s, {onLeave: function (args) {send("_gcvt_s");}});

var _get_FMA3_enable = Module.findExportByName("ucrtbased.dll", "_get_FMA3_enable")
Interceptor.attach(_get_FMA3_enable, {onLeave: function (args) {send("_get_FMA3_enable");}});

var _get_current_locale = Module.findExportByName("ucrtbased.dll", "_get_current_locale")
Interceptor.attach(_get_current_locale, {onLeave: function (args) {send("_get_current_locale");}});

var _get_daylight = Module.findExportByName("ucrtbased.dll", "_get_daylight")
Interceptor.attach(_get_daylight, {onLeave: function (args) {send("_get_daylight");}});

var _get_doserrno = Module.findExportByName("ucrtbased.dll", "_get_doserrno")
Interceptor.attach(_get_doserrno, {onLeave: function (args) {send("_get_doserrno");}});

var _get_dstbias = Module.findExportByName("ucrtbased.dll", "_get_dstbias")
Interceptor.attach(_get_dstbias, {onLeave: function (args) {send("_get_dstbias");}});

var _get_errno = Module.findExportByName("ucrtbased.dll", "_get_errno")
Interceptor.attach(_get_errno, {onLeave: function (args) {send("_get_errno");}});

var _get_fmode = Module.findExportByName("ucrtbased.dll", "_get_fmode")
Interceptor.attach(_get_fmode, {onLeave: function (args) {send("_get_fmode");}});

var _get_heap_handle = Module.findExportByName("ucrtbased.dll", "_get_heap_handle")
Interceptor.attach(_get_heap_handle, {onLeave: function (args) {send("_get_heap_handle");}});

var _get_initial_narrow_environment = Module.findExportByName("ucrtbased.dll", "_get_initial_narrow_environment")
Interceptor.attach(_get_initial_narrow_environment, {onLeave: function (args) {send("_get_initial_narrow_environment");}});

var _get_initial_wide_environment = Module.findExportByName("ucrtbased.dll", "_get_initial_wide_environment")
Interceptor.attach(_get_initial_wide_environment, {onLeave: function (args) {send("_get_initial_wide_environment");}});

var _get_invalid_parameter_handler = Module.findExportByName("ucrtbased.dll", "_get_invalid_parameter_handler")
Interceptor.attach(_get_invalid_parameter_handler, {onLeave: function (args) {send("_get_invalid_parameter_handler");}});

var _get_narrow_winmain_command_line = Module.findExportByName("ucrtbased.dll", "_get_narrow_winmain_command_line")
Interceptor.attach(_get_narrow_winmain_command_line, {onLeave: function (args) {send("_get_narrow_winmain_command_line");}});

var _get_osfhandle = Module.findExportByName("ucrtbased.dll", "_get_osfhandle")
Interceptor.attach(_get_osfhandle, {onLeave: function (args) {send("_get_osfhandle");}});

var _get_pgmptr = Module.findExportByName("ucrtbased.dll", "_get_pgmptr")
Interceptor.attach(_get_pgmptr, {onLeave: function (args) {send("_get_pgmptr");}});

var _get_printf_count_output = Module.findExportByName("ucrtbased.dll", "_get_printf_count_output")
Interceptor.attach(_get_printf_count_output, {onLeave: function (args) {send("_get_printf_count_output");}});

var _get_purecall_handler = Module.findExportByName("ucrtbased.dll", "_get_purecall_handler")
Interceptor.attach(_get_purecall_handler, {onLeave: function (args) {send("_get_purecall_handler");}});

var _get_stream_buffer_pointers = Module.findExportByName("ucrtbased.dll", "_get_stream_buffer_pointers")
Interceptor.attach(_get_stream_buffer_pointers, {onLeave: function (args) {send("_get_stream_buffer_pointers");}});

var _get_terminate = Module.findExportByName("ucrtbased.dll", "_get_terminate")
Interceptor.attach(_get_terminate, {onLeave: function (args) {send("_get_terminate");}});

var _get_thread_local_invalid_parameter_handler = Module.findExportByName("ucrtbased.dll", "_get_thread_local_invalid_parameter_handler")
Interceptor.attach(_get_thread_local_invalid_parameter_handler, {onLeave: function (args) {send("_get_thread_local_invalid_parameter_handler");}});

var _get_timezone = Module.findExportByName("ucrtbased.dll", "_get_timezone")
Interceptor.attach(_get_timezone, {onLeave: function (args) {send("_get_timezone");}});

var _get_tzname = Module.findExportByName("ucrtbased.dll", "_get_tzname")
Interceptor.attach(_get_tzname, {onLeave: function (args) {send("_get_tzname");}});

var _get_unexpected = Module.findExportByName("ucrtbased.dll", "_get_unexpected")
Interceptor.attach(_get_unexpected, {onLeave: function (args) {send("_get_unexpected");}});

var _get_wide_winmain_command_line = Module.findExportByName("ucrtbased.dll", "_get_wide_winmain_command_line")
Interceptor.attach(_get_wide_winmain_command_line, {onLeave: function (args) {send("_get_wide_winmain_command_line");}});

var _get_wpgmptr = Module.findExportByName("ucrtbased.dll", "_get_wpgmptr")
Interceptor.attach(_get_wpgmptr, {onLeave: function (args) {send("_get_wpgmptr");}});

var _getc_nolock = Module.findExportByName("ucrtbased.dll", "_getc_nolock")
Interceptor.attach(_getc_nolock, {onLeave: function (args) {send("_getc_nolock");}});

var _getch = Module.findExportByName("ucrtbased.dll", "_getch")
Interceptor.attach(_getch, {onLeave: function (args) {send("_getch");}});

var _getch_nolock = Module.findExportByName("ucrtbased.dll", "_getch_nolock")
Interceptor.attach(_getch_nolock, {onLeave: function (args) {send("_getch_nolock");}});

var _getche = Module.findExportByName("ucrtbased.dll", "_getche")
Interceptor.attach(_getche, {onLeave: function (args) {send("_getche");}});

var _getche_nolock = Module.findExportByName("ucrtbased.dll", "_getche_nolock")
Interceptor.attach(_getche_nolock, {onLeave: function (args) {send("_getche_nolock");}});

var _getcwd = Module.findExportByName("ucrtbased.dll", "_getcwd")
Interceptor.attach(_getcwd, {onLeave: function (args) {send("_getcwd");}});

var _getcwd_dbg = Module.findExportByName("ucrtbased.dll", "_getcwd_dbg")
Interceptor.attach(_getcwd_dbg, {onLeave: function (args) {send("_getcwd_dbg");}});

var _getdcwd = Module.findExportByName("ucrtbased.dll", "_getdcwd")
Interceptor.attach(_getdcwd, {onLeave: function (args) {send("_getdcwd");}});

var _getdcwd_dbg = Module.findExportByName("ucrtbased.dll", "_getdcwd_dbg")
Interceptor.attach(_getdcwd_dbg, {onLeave: function (args) {send("_getdcwd_dbg");}});

var _getdiskfree = Module.findExportByName("ucrtbased.dll", "_getdiskfree")
Interceptor.attach(_getdiskfree, {onLeave: function (args) {send("_getdiskfree");}});

var _getdllprocaddr = Module.findExportByName("ucrtbased.dll", "_getdllprocaddr")
Interceptor.attach(_getdllprocaddr, {onLeave: function (args) {send("_getdllprocaddr");}});

var _getdrive = Module.findExportByName("ucrtbased.dll", "_getdrive")
Interceptor.attach(_getdrive, {onLeave: function (args) {send("_getdrive");}});

var _getdrives = Module.findExportByName("ucrtbased.dll", "_getdrives")
Interceptor.attach(_getdrives, {onLeave: function (args) {send("_getdrives");}});

var _getmaxstdio = Module.findExportByName("ucrtbased.dll", "_getmaxstdio")
Interceptor.attach(_getmaxstdio, {onLeave: function (args) {send("_getmaxstdio");}});

var _getmbcp = Module.findExportByName("ucrtbased.dll", "_getmbcp")
Interceptor.attach(_getmbcp, {onLeave: function (args) {send("_getmbcp");}});

var _getpid = Module.findExportByName("ucrtbased.dll", "_getpid")
Interceptor.attach(_getpid, {onLeave: function (args) {send("_getpid");}});

var _getsystime = Module.findExportByName("ucrtbased.dll", "_getsystime")
Interceptor.attach(_getsystime, {onLeave: function (args) {send("_getsystime");}});

var _getw = Module.findExportByName("ucrtbased.dll", "_getw")
Interceptor.attach(_getw, {onLeave: function (args) {send("_getw");}});

var _getwc_nolock = Module.findExportByName("ucrtbased.dll", "_getwc_nolock")
Interceptor.attach(_getwc_nolock, {onLeave: function (args) {send("_getwc_nolock");}});

var _getwch = Module.findExportByName("ucrtbased.dll", "_getwch")
Interceptor.attach(_getwch, {onLeave: function (args) {send("_getwch");}});

var _getwch_nolock = Module.findExportByName("ucrtbased.dll", "_getwch_nolock")
Interceptor.attach(_getwch_nolock, {onLeave: function (args) {send("_getwch_nolock");}});

var _getwche = Module.findExportByName("ucrtbased.dll", "_getwche")
Interceptor.attach(_getwche, {onLeave: function (args) {send("_getwche");}});

var _getwche_nolock = Module.findExportByName("ucrtbased.dll", "_getwche_nolock")
Interceptor.attach(_getwche_nolock, {onLeave: function (args) {send("_getwche_nolock");}});

var _getws = Module.findExportByName("ucrtbased.dll", "_getws")
Interceptor.attach(_getws, {onLeave: function (args) {send("_getws");}});

var _getws_s = Module.findExportByName("ucrtbased.dll", "_getws_s")
Interceptor.attach(_getws_s, {onLeave: function (args) {send("_getws_s");}});

var _gmtime32 = Module.findExportByName("ucrtbased.dll", "_gmtime32")
Interceptor.attach(_gmtime32, {onLeave: function (args) {send("_gmtime32");}});

var _gmtime32_s = Module.findExportByName("ucrtbased.dll", "_gmtime32_s")
Interceptor.attach(_gmtime32_s, {onLeave: function (args) {send("_gmtime32_s");}});

var _gmtime64 = Module.findExportByName("ucrtbased.dll", "_gmtime64")
Interceptor.attach(_gmtime64, {onLeave: function (args) {send("_gmtime64");}});

var _gmtime64_s = Module.findExportByName("ucrtbased.dll", "_gmtime64_s")
Interceptor.attach(_gmtime64_s, {onLeave: function (args) {send("_gmtime64_s");}});

var _heapchk = Module.findExportByName("ucrtbased.dll", "_heapchk")
Interceptor.attach(_heapchk, {onLeave: function (args) {send("_heapchk");}});

var _heapmin = Module.findExportByName("ucrtbased.dll", "_heapmin")
Interceptor.attach(_heapmin, {onLeave: function (args) {send("_heapmin");}});

var _heapwalk = Module.findExportByName("ucrtbased.dll", "_heapwalk")
Interceptor.attach(_heapwalk, {onLeave: function (args) {send("_heapwalk");}});

var _hypot = Module.findExportByName("ucrtbased.dll", "_hypot")
Interceptor.attach(_hypot, {onLeave: function (args) {send("_hypot");}});

var _hypotf = Module.findExportByName("ucrtbased.dll", "_hypotf")
Interceptor.attach(_hypotf, {onLeave: function (args) {send("_hypotf");}});

var _i64toa = Module.findExportByName("ucrtbased.dll", "_i64toa")
Interceptor.attach(_i64toa, {onLeave: function (args) {send("_i64toa");}});

var _i64toa_s = Module.findExportByName("ucrtbased.dll", "_i64toa_s")
Interceptor.attach(_i64toa_s, {onLeave: function (args) {send("_i64toa_s");}});

var _i64tow = Module.findExportByName("ucrtbased.dll", "_i64tow")
Interceptor.attach(_i64tow, {onLeave: function (args) {send("_i64tow");}});

var _i64tow_s = Module.findExportByName("ucrtbased.dll", "_i64tow_s")
Interceptor.attach(_i64tow_s, {onLeave: function (args) {send("_i64tow_s");}});

var _initialize_narrow_environment = Module.findExportByName("ucrtbased.dll", "_initialize_narrow_environment")
Interceptor.attach(_initialize_narrow_environment, {onLeave: function (args) {send("_initialize_narrow_environment");}});

var _initialize_onexit_table = Module.findExportByName("ucrtbased.dll", "_initialize_onexit_table")
Interceptor.attach(_initialize_onexit_table, {onLeave: function (args) {send("_initialize_onexit_table");}});

var _initialize_wide_environment = Module.findExportByName("ucrtbased.dll", "_initialize_wide_environment")
Interceptor.attach(_initialize_wide_environment, {onLeave: function (args) {send("_initialize_wide_environment");}});

var _initterm = Module.findExportByName("ucrtbased.dll", "_initterm")
Interceptor.attach(_initterm, {onLeave: function (args) {send("_initterm");}});

var _initterm_e = Module.findExportByName("ucrtbased.dll", "_initterm_e")
Interceptor.attach(_initterm_e, {onLeave: function (args) {send("_initterm_e");}});

var _invalid_parameter = Module.findExportByName("ucrtbased.dll", "_invalid_parameter")
Interceptor.attach(_invalid_parameter, {onLeave: function (args) {send("_invalid_parameter");}});

var _invalid_parameter_noinfo = Module.findExportByName("ucrtbased.dll", "_invalid_parameter_noinfo")
Interceptor.attach(_invalid_parameter_noinfo, {onLeave: function (args) {send("_invalid_parameter_noinfo");}});

var _invalid_parameter_noinfo_noreturn = Module.findExportByName("ucrtbased.dll", "_invalid_parameter_noinfo_noreturn")
Interceptor.attach(_invalid_parameter_noinfo_noreturn, {onLeave: function (args) {send("_invalid_parameter_noinfo_noreturn");}});

var _invoke_watson = Module.findExportByName("ucrtbased.dll", "_invoke_watson")
Interceptor.attach(_invoke_watson, {onLeave: function (args) {send("_invoke_watson");}});

var _is_exception_typeof = Module.findExportByName("ucrtbased.dll", "_is_exception_typeof")
Interceptor.attach(_is_exception_typeof, {onLeave: function (args) {send("_is_exception_typeof");}});

var _isalnum_l = Module.findExportByName("ucrtbased.dll", "_isalnum_l")
Interceptor.attach(_isalnum_l, {onLeave: function (args) {send("_isalnum_l");}});

var _isalpha_l = Module.findExportByName("ucrtbased.dll", "_isalpha_l")
Interceptor.attach(_isalpha_l, {onLeave: function (args) {send("_isalpha_l");}});

var _isatty = Module.findExportByName("ucrtbased.dll", "_isatty")
Interceptor.attach(_isatty, {onLeave: function (args) {send("_isatty");}});

var _isblank_l = Module.findExportByName("ucrtbased.dll", "_isblank_l")
Interceptor.attach(_isblank_l, {onLeave: function (args) {send("_isblank_l");}});

var _iscntrl_l = Module.findExportByName("ucrtbased.dll", "_iscntrl_l")
Interceptor.attach(_iscntrl_l, {onLeave: function (args) {send("_iscntrl_l");}});

var _isctype = Module.findExportByName("ucrtbased.dll", "_isctype")
Interceptor.attach(_isctype, {onLeave: function (args) {send("_isctype");}});

var _isctype_l = Module.findExportByName("ucrtbased.dll", "_isctype_l")
Interceptor.attach(_isctype_l, {onLeave: function (args) {send("_isctype_l");}});

var _isdigit_l = Module.findExportByName("ucrtbased.dll", "_isdigit_l")
Interceptor.attach(_isdigit_l, {onLeave: function (args) {send("_isdigit_l");}});

var _isgraph_l = Module.findExportByName("ucrtbased.dll", "_isgraph_l")
Interceptor.attach(_isgraph_l, {onLeave: function (args) {send("_isgraph_l");}});

var _isleadbyte_l = Module.findExportByName("ucrtbased.dll", "_isleadbyte_l")
Interceptor.attach(_isleadbyte_l, {onLeave: function (args) {send("_isleadbyte_l");}});

var _islower_l = Module.findExportByName("ucrtbased.dll", "_islower_l")
Interceptor.attach(_islower_l, {onLeave: function (args) {send("_islower_l");}});

var _ismbbalnum = Module.findExportByName("ucrtbased.dll", "_ismbbalnum")
Interceptor.attach(_ismbbalnum, {onLeave: function (args) {send("_ismbbalnum");}});

var _ismbbalnum_l = Module.findExportByName("ucrtbased.dll", "_ismbbalnum_l")
Interceptor.attach(_ismbbalnum_l, {onLeave: function (args) {send("_ismbbalnum_l");}});

var _ismbbalpha = Module.findExportByName("ucrtbased.dll", "_ismbbalpha")
Interceptor.attach(_ismbbalpha, {onLeave: function (args) {send("_ismbbalpha");}});

var _ismbbalpha_l = Module.findExportByName("ucrtbased.dll", "_ismbbalpha_l")
Interceptor.attach(_ismbbalpha_l, {onLeave: function (args) {send("_ismbbalpha_l");}});

var _ismbbblank = Module.findExportByName("ucrtbased.dll", "_ismbbblank")
Interceptor.attach(_ismbbblank, {onLeave: function (args) {send("_ismbbblank");}});

var _ismbbblank_l = Module.findExportByName("ucrtbased.dll", "_ismbbblank_l")
Interceptor.attach(_ismbbblank_l, {onLeave: function (args) {send("_ismbbblank_l");}});

var _ismbbgraph = Module.findExportByName("ucrtbased.dll", "_ismbbgraph")
Interceptor.attach(_ismbbgraph, {onLeave: function (args) {send("_ismbbgraph");}});

var _ismbbgraph_l = Module.findExportByName("ucrtbased.dll", "_ismbbgraph_l")
Interceptor.attach(_ismbbgraph_l, {onLeave: function (args) {send("_ismbbgraph_l");}});

var _ismbbkalnum = Module.findExportByName("ucrtbased.dll", "_ismbbkalnum")
Interceptor.attach(_ismbbkalnum, {onLeave: function (args) {send("_ismbbkalnum");}});

var _ismbbkalnum_l = Module.findExportByName("ucrtbased.dll", "_ismbbkalnum_l")
Interceptor.attach(_ismbbkalnum_l, {onLeave: function (args) {send("_ismbbkalnum_l");}});

var _ismbbkana = Module.findExportByName("ucrtbased.dll", "_ismbbkana")
Interceptor.attach(_ismbbkana, {onLeave: function (args) {send("_ismbbkana");}});

var _ismbbkana_l = Module.findExportByName("ucrtbased.dll", "_ismbbkana_l")
Interceptor.attach(_ismbbkana_l, {onLeave: function (args) {send("_ismbbkana_l");}});

var _ismbbkprint = Module.findExportByName("ucrtbased.dll", "_ismbbkprint")
Interceptor.attach(_ismbbkprint, {onLeave: function (args) {send("_ismbbkprint");}});

var _ismbbkprint_l = Module.findExportByName("ucrtbased.dll", "_ismbbkprint_l")
Interceptor.attach(_ismbbkprint_l, {onLeave: function (args) {send("_ismbbkprint_l");}});

var _ismbbkpunct = Module.findExportByName("ucrtbased.dll", "_ismbbkpunct")
Interceptor.attach(_ismbbkpunct, {onLeave: function (args) {send("_ismbbkpunct");}});

var _ismbbkpunct_l = Module.findExportByName("ucrtbased.dll", "_ismbbkpunct_l")
Interceptor.attach(_ismbbkpunct_l, {onLeave: function (args) {send("_ismbbkpunct_l");}});

var _ismbblead = Module.findExportByName("ucrtbased.dll", "_ismbblead")
Interceptor.attach(_ismbblead, {onLeave: function (args) {send("_ismbblead");}});

var _ismbblead_l = Module.findExportByName("ucrtbased.dll", "_ismbblead_l")
Interceptor.attach(_ismbblead_l, {onLeave: function (args) {send("_ismbblead_l");}});

var _ismbbprint = Module.findExportByName("ucrtbased.dll", "_ismbbprint")
Interceptor.attach(_ismbbprint, {onLeave: function (args) {send("_ismbbprint");}});

var _ismbbprint_l = Module.findExportByName("ucrtbased.dll", "_ismbbprint_l")
Interceptor.attach(_ismbbprint_l, {onLeave: function (args) {send("_ismbbprint_l");}});

var _ismbbpunct = Module.findExportByName("ucrtbased.dll", "_ismbbpunct")
Interceptor.attach(_ismbbpunct, {onLeave: function (args) {send("_ismbbpunct");}});

var _ismbbpunct_l = Module.findExportByName("ucrtbased.dll", "_ismbbpunct_l")
Interceptor.attach(_ismbbpunct_l, {onLeave: function (args) {send("_ismbbpunct_l");}});

var _ismbbtrail = Module.findExportByName("ucrtbased.dll", "_ismbbtrail")
Interceptor.attach(_ismbbtrail, {onLeave: function (args) {send("_ismbbtrail");}});

var _ismbbtrail_l = Module.findExportByName("ucrtbased.dll", "_ismbbtrail_l")
Interceptor.attach(_ismbbtrail_l, {onLeave: function (args) {send("_ismbbtrail_l");}});

var _ismbcalnum = Module.findExportByName("ucrtbased.dll", "_ismbcalnum")
Interceptor.attach(_ismbcalnum, {onLeave: function (args) {send("_ismbcalnum");}});

var _ismbcalnum_l = Module.findExportByName("ucrtbased.dll", "_ismbcalnum_l")
Interceptor.attach(_ismbcalnum_l, {onLeave: function (args) {send("_ismbcalnum_l");}});

var _ismbcalpha = Module.findExportByName("ucrtbased.dll", "_ismbcalpha")
Interceptor.attach(_ismbcalpha, {onLeave: function (args) {send("_ismbcalpha");}});

var _ismbcalpha_l = Module.findExportByName("ucrtbased.dll", "_ismbcalpha_l")
Interceptor.attach(_ismbcalpha_l, {onLeave: function (args) {send("_ismbcalpha_l");}});

var _ismbcblank = Module.findExportByName("ucrtbased.dll", "_ismbcblank")
Interceptor.attach(_ismbcblank, {onLeave: function (args) {send("_ismbcblank");}});

var _ismbcblank_l = Module.findExportByName("ucrtbased.dll", "_ismbcblank_l")
Interceptor.attach(_ismbcblank_l, {onLeave: function (args) {send("_ismbcblank_l");}});

var _ismbcdigit = Module.findExportByName("ucrtbased.dll", "_ismbcdigit")
Interceptor.attach(_ismbcdigit, {onLeave: function (args) {send("_ismbcdigit");}});

var _ismbcdigit_l = Module.findExportByName("ucrtbased.dll", "_ismbcdigit_l")
Interceptor.attach(_ismbcdigit_l, {onLeave: function (args) {send("_ismbcdigit_l");}});

var _ismbcgraph = Module.findExportByName("ucrtbased.dll", "_ismbcgraph")
Interceptor.attach(_ismbcgraph, {onLeave: function (args) {send("_ismbcgraph");}});

var _ismbcgraph_l = Module.findExportByName("ucrtbased.dll", "_ismbcgraph_l")
Interceptor.attach(_ismbcgraph_l, {onLeave: function (args) {send("_ismbcgraph_l");}});

var _ismbchira = Module.findExportByName("ucrtbased.dll", "_ismbchira")
Interceptor.attach(_ismbchira, {onLeave: function (args) {send("_ismbchira");}});

var _ismbchira_l = Module.findExportByName("ucrtbased.dll", "_ismbchira_l")
Interceptor.attach(_ismbchira_l, {onLeave: function (args) {send("_ismbchira_l");}});

var _ismbckata = Module.findExportByName("ucrtbased.dll", "_ismbckata")
Interceptor.attach(_ismbckata, {onLeave: function (args) {send("_ismbckata");}});

var _ismbckata_l = Module.findExportByName("ucrtbased.dll", "_ismbckata_l")
Interceptor.attach(_ismbckata_l, {onLeave: function (args) {send("_ismbckata_l");}});

var _ismbcl0 = Module.findExportByName("ucrtbased.dll", "_ismbcl0")
Interceptor.attach(_ismbcl0, {onLeave: function (args) {send("_ismbcl0");}});

var _ismbcl0_l = Module.findExportByName("ucrtbased.dll", "_ismbcl0_l")
Interceptor.attach(_ismbcl0_l, {onLeave: function (args) {send("_ismbcl0_l");}});

var _ismbcl1 = Module.findExportByName("ucrtbased.dll", "_ismbcl1")
Interceptor.attach(_ismbcl1, {onLeave: function (args) {send("_ismbcl1");}});

var _ismbcl1_l = Module.findExportByName("ucrtbased.dll", "_ismbcl1_l")
Interceptor.attach(_ismbcl1_l, {onLeave: function (args) {send("_ismbcl1_l");}});

var _ismbcl2 = Module.findExportByName("ucrtbased.dll", "_ismbcl2")
Interceptor.attach(_ismbcl2, {onLeave: function (args) {send("_ismbcl2");}});

var _ismbcl2_l = Module.findExportByName("ucrtbased.dll", "_ismbcl2_l")
Interceptor.attach(_ismbcl2_l, {onLeave: function (args) {send("_ismbcl2_l");}});

var _ismbclegal = Module.findExportByName("ucrtbased.dll", "_ismbclegal")
Interceptor.attach(_ismbclegal, {onLeave: function (args) {send("_ismbclegal");}});

var _ismbclegal_l = Module.findExportByName("ucrtbased.dll", "_ismbclegal_l")
Interceptor.attach(_ismbclegal_l, {onLeave: function (args) {send("_ismbclegal_l");}});

var _ismbclower = Module.findExportByName("ucrtbased.dll", "_ismbclower")
Interceptor.attach(_ismbclower, {onLeave: function (args) {send("_ismbclower");}});

var _ismbclower_l = Module.findExportByName("ucrtbased.dll", "_ismbclower_l")
Interceptor.attach(_ismbclower_l, {onLeave: function (args) {send("_ismbclower_l");}});

var _ismbcprint = Module.findExportByName("ucrtbased.dll", "_ismbcprint")
Interceptor.attach(_ismbcprint, {onLeave: function (args) {send("_ismbcprint");}});

var _ismbcprint_l = Module.findExportByName("ucrtbased.dll", "_ismbcprint_l")
Interceptor.attach(_ismbcprint_l, {onLeave: function (args) {send("_ismbcprint_l");}});

var _ismbcpunct = Module.findExportByName("ucrtbased.dll", "_ismbcpunct")
Interceptor.attach(_ismbcpunct, {onLeave: function (args) {send("_ismbcpunct");}});

var _ismbcpunct_l = Module.findExportByName("ucrtbased.dll", "_ismbcpunct_l")
Interceptor.attach(_ismbcpunct_l, {onLeave: function (args) {send("_ismbcpunct_l");}});

var _ismbcspace = Module.findExportByName("ucrtbased.dll", "_ismbcspace")
Interceptor.attach(_ismbcspace, {onLeave: function (args) {send("_ismbcspace");}});

var _ismbcspace_l = Module.findExportByName("ucrtbased.dll", "_ismbcspace_l")
Interceptor.attach(_ismbcspace_l, {onLeave: function (args) {send("_ismbcspace_l");}});

var _ismbcsymbol = Module.findExportByName("ucrtbased.dll", "_ismbcsymbol")
Interceptor.attach(_ismbcsymbol, {onLeave: function (args) {send("_ismbcsymbol");}});

var _ismbcsymbol_l = Module.findExportByName("ucrtbased.dll", "_ismbcsymbol_l")
Interceptor.attach(_ismbcsymbol_l, {onLeave: function (args) {send("_ismbcsymbol_l");}});

var _ismbcupper = Module.findExportByName("ucrtbased.dll", "_ismbcupper")
Interceptor.attach(_ismbcupper, {onLeave: function (args) {send("_ismbcupper");}});

var _ismbcupper_l = Module.findExportByName("ucrtbased.dll", "_ismbcupper_l")
Interceptor.attach(_ismbcupper_l, {onLeave: function (args) {send("_ismbcupper_l");}});

var _ismbslead = Module.findExportByName("ucrtbased.dll", "_ismbslead")
Interceptor.attach(_ismbslead, {onLeave: function (args) {send("_ismbslead");}});

var _ismbslead_l = Module.findExportByName("ucrtbased.dll", "_ismbslead_l")
Interceptor.attach(_ismbslead_l, {onLeave: function (args) {send("_ismbslead_l");}});

var _ismbstrail = Module.findExportByName("ucrtbased.dll", "_ismbstrail")
Interceptor.attach(_ismbstrail, {onLeave: function (args) {send("_ismbstrail");}});

var _ismbstrail_l = Module.findExportByName("ucrtbased.dll", "_ismbstrail_l")
Interceptor.attach(_ismbstrail_l, {onLeave: function (args) {send("_ismbstrail_l");}});

var _isnan = Module.findExportByName("ucrtbased.dll", "_isnan")
Interceptor.attach(_isnan, {onLeave: function (args) {send("_isnan");}});

var _isnanf = Module.findExportByName("ucrtbased.dll", "_isnanf")
Interceptor.attach(_isnanf, {onLeave: function (args) {send("_isnanf");}});

var _isprint_l = Module.findExportByName("ucrtbased.dll", "_isprint_l")
Interceptor.attach(_isprint_l, {onLeave: function (args) {send("_isprint_l");}});

var _ispunct_l = Module.findExportByName("ucrtbased.dll", "_ispunct_l")
Interceptor.attach(_ispunct_l, {onLeave: function (args) {send("_ispunct_l");}});

var _isspace_l = Module.findExportByName("ucrtbased.dll", "_isspace_l")
Interceptor.attach(_isspace_l, {onLeave: function (args) {send("_isspace_l");}});

var _isupper_l = Module.findExportByName("ucrtbased.dll", "_isupper_l")
Interceptor.attach(_isupper_l, {onLeave: function (args) {send("_isupper_l");}});

var _iswalnum_l = Module.findExportByName("ucrtbased.dll", "_iswalnum_l")
Interceptor.attach(_iswalnum_l, {onLeave: function (args) {send("_iswalnum_l");}});

var _iswalpha_l = Module.findExportByName("ucrtbased.dll", "_iswalpha_l")
Interceptor.attach(_iswalpha_l, {onLeave: function (args) {send("_iswalpha_l");}});

var _iswblank_l = Module.findExportByName("ucrtbased.dll", "_iswblank_l")
Interceptor.attach(_iswblank_l, {onLeave: function (args) {send("_iswblank_l");}});

var _iswcntrl_l = Module.findExportByName("ucrtbased.dll", "_iswcntrl_l")
Interceptor.attach(_iswcntrl_l, {onLeave: function (args) {send("_iswcntrl_l");}});

var _iswcsym_l = Module.findExportByName("ucrtbased.dll", "_iswcsym_l")
Interceptor.attach(_iswcsym_l, {onLeave: function (args) {send("_iswcsym_l");}});

var _iswcsymf_l = Module.findExportByName("ucrtbased.dll", "_iswcsymf_l")
Interceptor.attach(_iswcsymf_l, {onLeave: function (args) {send("_iswcsymf_l");}});

var _iswctype_l = Module.findExportByName("ucrtbased.dll", "_iswctype_l")
Interceptor.attach(_iswctype_l, {onLeave: function (args) {send("_iswctype_l");}});

var _iswdigit_l = Module.findExportByName("ucrtbased.dll", "_iswdigit_l")
Interceptor.attach(_iswdigit_l, {onLeave: function (args) {send("_iswdigit_l");}});

var _iswgraph_l = Module.findExportByName("ucrtbased.dll", "_iswgraph_l")
Interceptor.attach(_iswgraph_l, {onLeave: function (args) {send("_iswgraph_l");}});

var _iswlower_l = Module.findExportByName("ucrtbased.dll", "_iswlower_l")
Interceptor.attach(_iswlower_l, {onLeave: function (args) {send("_iswlower_l");}});

var _iswprint_l = Module.findExportByName("ucrtbased.dll", "_iswprint_l")
Interceptor.attach(_iswprint_l, {onLeave: function (args) {send("_iswprint_l");}});

var _iswpunct_l = Module.findExportByName("ucrtbased.dll", "_iswpunct_l")
Interceptor.attach(_iswpunct_l, {onLeave: function (args) {send("_iswpunct_l");}});

var _iswspace_l = Module.findExportByName("ucrtbased.dll", "_iswspace_l")
Interceptor.attach(_iswspace_l, {onLeave: function (args) {send("_iswspace_l");}});

var _iswupper_l = Module.findExportByName("ucrtbased.dll", "_iswupper_l")
Interceptor.attach(_iswupper_l, {onLeave: function (args) {send("_iswupper_l");}});

var _iswxdigit_l = Module.findExportByName("ucrtbased.dll", "_iswxdigit_l")
Interceptor.attach(_iswxdigit_l, {onLeave: function (args) {send("_iswxdigit_l");}});

var _isxdigit_l = Module.findExportByName("ucrtbased.dll", "_isxdigit_l")
Interceptor.attach(_isxdigit_l, {onLeave: function (args) {send("_isxdigit_l");}});

var _itoa = Module.findExportByName("ucrtbased.dll", "_itoa")
Interceptor.attach(_itoa, {onLeave: function (args) {send("_itoa");}});

var _itoa_s = Module.findExportByName("ucrtbased.dll", "_itoa_s")
Interceptor.attach(_itoa_s, {onLeave: function (args) {send("_itoa_s");}});

var _itow = Module.findExportByName("ucrtbased.dll", "_itow")
Interceptor.attach(_itow, {onLeave: function (args) {send("_itow");}});

var _itow_s = Module.findExportByName("ucrtbased.dll", "_itow_s")
Interceptor.attach(_itow_s, {onLeave: function (args) {send("_itow_s");}});

var _j0 = Module.findExportByName("ucrtbased.dll", "_j0")
Interceptor.attach(_j0, {onLeave: function (args) {send("_j0");}});

var _j1 = Module.findExportByName("ucrtbased.dll", "_j1")
Interceptor.attach(_j1, {onLeave: function (args) {send("_j1");}});

var _jn = Module.findExportByName("ucrtbased.dll", "_jn")
Interceptor.attach(_jn, {onLeave: function (args) {send("_jn");}});

var _kbhit = Module.findExportByName("ucrtbased.dll", "_kbhit")
Interceptor.attach(_kbhit, {onLeave: function (args) {send("_kbhit");}});

var _ld_int = Module.findExportByName("ucrtbased.dll", "_ld_int")
Interceptor.attach(_ld_int, {onLeave: function (args) {send("_ld_int");}});

var _ldclass = Module.findExportByName("ucrtbased.dll", "_ldclass")
Interceptor.attach(_ldclass, {onLeave: function (args) {send("_ldclass");}});

var _ldexp = Module.findExportByName("ucrtbased.dll", "_ldexp")
Interceptor.attach(_ldexp, {onLeave: function (args) {send("_ldexp");}});

var _ldlog = Module.findExportByName("ucrtbased.dll", "_ldlog")
Interceptor.attach(_ldlog, {onLeave: function (args) {send("_ldlog");}});

var _ldpcomp = Module.findExportByName("ucrtbased.dll", "_ldpcomp")
Interceptor.attach(_ldpcomp, {onLeave: function (args) {send("_ldpcomp");}});

var _ldpoly = Module.findExportByName("ucrtbased.dll", "_ldpoly")
Interceptor.attach(_ldpoly, {onLeave: function (args) {send("_ldpoly");}});

var _ldscale = Module.findExportByName("ucrtbased.dll", "_ldscale")
Interceptor.attach(_ldscale, {onLeave: function (args) {send("_ldscale");}});

var _ldsign = Module.findExportByName("ucrtbased.dll", "_ldsign")
Interceptor.attach(_ldsign, {onLeave: function (args) {send("_ldsign");}});

var _ldsin = Module.findExportByName("ucrtbased.dll", "_ldsin")
Interceptor.attach(_ldsin, {onLeave: function (args) {send("_ldsin");}});

var _ldtest = Module.findExportByName("ucrtbased.dll", "_ldtest")
Interceptor.attach(_ldtest, {onLeave: function (args) {send("_ldtest");}});

var _ldunscale = Module.findExportByName("ucrtbased.dll", "_ldunscale")
Interceptor.attach(_ldunscale, {onLeave: function (args) {send("_ldunscale");}});

var _lfind = Module.findExportByName("ucrtbased.dll", "_lfind")
Interceptor.attach(_lfind, {onLeave: function (args) {send("_lfind");}});

var _lfind_s = Module.findExportByName("ucrtbased.dll", "_lfind_s")
Interceptor.attach(_lfind_s, {onLeave: function (args) {send("_lfind_s");}});

var _loaddll = Module.findExportByName("ucrtbased.dll", "_loaddll")
Interceptor.attach(_loaddll, {onLeave: function (args) {send("_loaddll");}});

var _local_unwind = Module.findExportByName("ucrtbased.dll", "_local_unwind")
Interceptor.attach(_local_unwind, {onLeave: function (args) {send("_local_unwind");}});

var _localtime32 = Module.findExportByName("ucrtbased.dll", "_localtime32")
Interceptor.attach(_localtime32, {onLeave: function (args) {send("_localtime32");}});

var _localtime32_s = Module.findExportByName("ucrtbased.dll", "_localtime32_s")
Interceptor.attach(_localtime32_s, {onLeave: function (args) {send("_localtime32_s");}});

var _localtime64 = Module.findExportByName("ucrtbased.dll", "_localtime64")
Interceptor.attach(_localtime64, {onLeave: function (args) {send("_localtime64");}});

var _localtime64_s = Module.findExportByName("ucrtbased.dll", "_localtime64_s")
Interceptor.attach(_localtime64_s, {onLeave: function (args) {send("_localtime64_s");}});

var _lock_file = Module.findExportByName("ucrtbased.dll", "_lock_file")
Interceptor.attach(_lock_file, {onLeave: function (args) {send("_lock_file");}});

var _lock_locales = Module.findExportByName("ucrtbased.dll", "_lock_locales")
Interceptor.attach(_lock_locales, {onLeave: function (args) {send("_lock_locales");}});

var _locking = Module.findExportByName("ucrtbased.dll", "_locking")
Interceptor.attach(_locking, {onLeave: function (args) {send("_locking");}});

var _logb = Module.findExportByName("ucrtbased.dll", "_logb")
Interceptor.attach(_logb, {onLeave: function (args) {send("_logb");}});

var _logbf = Module.findExportByName("ucrtbased.dll", "_logbf")
Interceptor.attach(_logbf, {onLeave: function (args) {send("_logbf");}});

var _lrotl = Module.findExportByName("ucrtbased.dll", "_lrotl")
Interceptor.attach(_lrotl, {onLeave: function (args) {send("_lrotl");}});

var _lrotr = Module.findExportByName("ucrtbased.dll", "_lrotr")
Interceptor.attach(_lrotr, {onLeave: function (args) {send("_lrotr");}});

var _lsearch = Module.findExportByName("ucrtbased.dll", "_lsearch")
Interceptor.attach(_lsearch, {onLeave: function (args) {send("_lsearch");}});

var _lsearch_s = Module.findExportByName("ucrtbased.dll", "_lsearch_s")
Interceptor.attach(_lsearch_s, {onLeave: function (args) {send("_lsearch_s");}});

var _lseek = Module.findExportByName("ucrtbased.dll", "_lseek")
Interceptor.attach(_lseek, {onLeave: function (args) {send("_lseek");}});

var _lseeki64 = Module.findExportByName("ucrtbased.dll", "_lseeki64")
Interceptor.attach(_lseeki64, {onLeave: function (args) {send("_lseeki64");}});

var _ltoa = Module.findExportByName("ucrtbased.dll", "_ltoa")
Interceptor.attach(_ltoa, {onLeave: function (args) {send("_ltoa");}});

var _ltoa_s = Module.findExportByName("ucrtbased.dll", "_ltoa_s")
Interceptor.attach(_ltoa_s, {onLeave: function (args) {send("_ltoa_s");}});

var _ltow = Module.findExportByName("ucrtbased.dll", "_ltow")
Interceptor.attach(_ltow, {onLeave: function (args) {send("_ltow");}});

var _ltow_s = Module.findExportByName("ucrtbased.dll", "_ltow_s")
Interceptor.attach(_ltow_s, {onLeave: function (args) {send("_ltow_s");}});

var _makepath = Module.findExportByName("ucrtbased.dll", "_makepath")
Interceptor.attach(_makepath, {onLeave: function (args) {send("_makepath");}});

var _makepath_s = Module.findExportByName("ucrtbased.dll", "_makepath_s")
Interceptor.attach(_makepath_s, {onLeave: function (args) {send("_makepath_s");}});

var _malloc_base = Module.findExportByName("ucrtbased.dll", "_malloc_base")
Interceptor.attach(_malloc_base, {onLeave: function (args) {send("_malloc_base");}});

var _malloc_dbg = Module.findExportByName("ucrtbased.dll", "_malloc_dbg")
Interceptor.attach(_malloc_dbg, {onLeave: function (args) {send("_malloc_dbg");}});

var _mbbtombc = Module.findExportByName("ucrtbased.dll", "_mbbtombc")
Interceptor.attach(_mbbtombc, {onLeave: function (args) {send("_mbbtombc");}});

var _mbbtombc_l = Module.findExportByName("ucrtbased.dll", "_mbbtombc_l")
Interceptor.attach(_mbbtombc_l, {onLeave: function (args) {send("_mbbtombc_l");}});

var _mbbtype = Module.findExportByName("ucrtbased.dll", "_mbbtype")
Interceptor.attach(_mbbtype, {onLeave: function (args) {send("_mbbtype");}});

var _mbbtype_l = Module.findExportByName("ucrtbased.dll", "_mbbtype_l")
Interceptor.attach(_mbbtype_l, {onLeave: function (args) {send("_mbbtype_l");}});

var _mbcasemap = Module.findExportByName("ucrtbased.dll", "_mbcasemap")
Interceptor.attach(_mbcasemap, {onLeave: function (args) {send("_mbcasemap");}});

var _mbccpy = Module.findExportByName("ucrtbased.dll", "_mbccpy")
Interceptor.attach(_mbccpy, {onLeave: function (args) {send("_mbccpy");}});

var _mbccpy_l = Module.findExportByName("ucrtbased.dll", "_mbccpy_l")
Interceptor.attach(_mbccpy_l, {onLeave: function (args) {send("_mbccpy_l");}});

var _mbccpy_s = Module.findExportByName("ucrtbased.dll", "_mbccpy_s")
Interceptor.attach(_mbccpy_s, {onLeave: function (args) {send("_mbccpy_s");}});

var _mbccpy_s_l = Module.findExportByName("ucrtbased.dll", "_mbccpy_s_l")
Interceptor.attach(_mbccpy_s_l, {onLeave: function (args) {send("_mbccpy_s_l");}});

var _mbcjistojms = Module.findExportByName("ucrtbased.dll", "_mbcjistojms")
Interceptor.attach(_mbcjistojms, {onLeave: function (args) {send("_mbcjistojms");}});

var _mbcjistojms_l = Module.findExportByName("ucrtbased.dll", "_mbcjistojms_l")
Interceptor.attach(_mbcjistojms_l, {onLeave: function (args) {send("_mbcjistojms_l");}});

var _mbcjmstojis = Module.findExportByName("ucrtbased.dll", "_mbcjmstojis")
Interceptor.attach(_mbcjmstojis, {onLeave: function (args) {send("_mbcjmstojis");}});

var _mbcjmstojis_l = Module.findExportByName("ucrtbased.dll", "_mbcjmstojis_l")
Interceptor.attach(_mbcjmstojis_l, {onLeave: function (args) {send("_mbcjmstojis_l");}});

var _mbclen = Module.findExportByName("ucrtbased.dll", "_mbclen")
Interceptor.attach(_mbclen, {onLeave: function (args) {send("_mbclen");}});

var _mbclen_l = Module.findExportByName("ucrtbased.dll", "_mbclen_l")
Interceptor.attach(_mbclen_l, {onLeave: function (args) {send("_mbclen_l");}});

var _mbctohira = Module.findExportByName("ucrtbased.dll", "_mbctohira")
Interceptor.attach(_mbctohira, {onLeave: function (args) {send("_mbctohira");}});

var _mbctohira_l = Module.findExportByName("ucrtbased.dll", "_mbctohira_l")
Interceptor.attach(_mbctohira_l, {onLeave: function (args) {send("_mbctohira_l");}});

var _mbctokata = Module.findExportByName("ucrtbased.dll", "_mbctokata")
Interceptor.attach(_mbctokata, {onLeave: function (args) {send("_mbctokata");}});

var _mbctokata_l = Module.findExportByName("ucrtbased.dll", "_mbctokata_l")
Interceptor.attach(_mbctokata_l, {onLeave: function (args) {send("_mbctokata_l");}});

var _mbctolower = Module.findExportByName("ucrtbased.dll", "_mbctolower")
Interceptor.attach(_mbctolower, {onLeave: function (args) {send("_mbctolower");}});

var _mbctolower_l = Module.findExportByName("ucrtbased.dll", "_mbctolower_l")
Interceptor.attach(_mbctolower_l, {onLeave: function (args) {send("_mbctolower_l");}});

var _mbctombb = Module.findExportByName("ucrtbased.dll", "_mbctombb")
Interceptor.attach(_mbctombb, {onLeave: function (args) {send("_mbctombb");}});

var _mbctombb_l = Module.findExportByName("ucrtbased.dll", "_mbctombb_l")
Interceptor.attach(_mbctombb_l, {onLeave: function (args) {send("_mbctombb_l");}});

var _mbctoupper = Module.findExportByName("ucrtbased.dll", "_mbctoupper")
Interceptor.attach(_mbctoupper, {onLeave: function (args) {send("_mbctoupper");}});

var _mbctoupper_l = Module.findExportByName("ucrtbased.dll", "_mbctoupper_l")
Interceptor.attach(_mbctoupper_l, {onLeave: function (args) {send("_mbctoupper_l");}});

var _mblen_l = Module.findExportByName("ucrtbased.dll", "_mblen_l")
Interceptor.attach(_mblen_l, {onLeave: function (args) {send("_mblen_l");}});

var _mbsbtype = Module.findExportByName("ucrtbased.dll", "_mbsbtype")
Interceptor.attach(_mbsbtype, {onLeave: function (args) {send("_mbsbtype");}});

var _mbsbtype_l = Module.findExportByName("ucrtbased.dll", "_mbsbtype_l")
Interceptor.attach(_mbsbtype_l, {onLeave: function (args) {send("_mbsbtype_l");}});

var _mbscat_s = Module.findExportByName("ucrtbased.dll", "_mbscat_s")
Interceptor.attach(_mbscat_s, {onLeave: function (args) {send("_mbscat_s");}});

var _mbscat_s_l = Module.findExportByName("ucrtbased.dll", "_mbscat_s_l")
Interceptor.attach(_mbscat_s_l, {onLeave: function (args) {send("_mbscat_s_l");}});

var _mbschr = Module.findExportByName("ucrtbased.dll", "_mbschr")
Interceptor.attach(_mbschr, {onLeave: function (args) {send("_mbschr");}});

var _mbschr_l = Module.findExportByName("ucrtbased.dll", "_mbschr_l")
Interceptor.attach(_mbschr_l, {onLeave: function (args) {send("_mbschr_l");}});

var _mbscmp = Module.findExportByName("ucrtbased.dll", "_mbscmp")
Interceptor.attach(_mbscmp, {onLeave: function (args) {send("_mbscmp");}});

var _mbscmp_l = Module.findExportByName("ucrtbased.dll", "_mbscmp_l")
Interceptor.attach(_mbscmp_l, {onLeave: function (args) {send("_mbscmp_l");}});

var _mbscoll = Module.findExportByName("ucrtbased.dll", "_mbscoll")
Interceptor.attach(_mbscoll, {onLeave: function (args) {send("_mbscoll");}});

var _mbscoll_l = Module.findExportByName("ucrtbased.dll", "_mbscoll_l")
Interceptor.attach(_mbscoll_l, {onLeave: function (args) {send("_mbscoll_l");}});

var _mbscpy_s = Module.findExportByName("ucrtbased.dll", "_mbscpy_s")
Interceptor.attach(_mbscpy_s, {onLeave: function (args) {send("_mbscpy_s");}});

var _mbscpy_s_l = Module.findExportByName("ucrtbased.dll", "_mbscpy_s_l")
Interceptor.attach(_mbscpy_s_l, {onLeave: function (args) {send("_mbscpy_s_l");}});

var _mbscspn = Module.findExportByName("ucrtbased.dll", "_mbscspn")
Interceptor.attach(_mbscspn, {onLeave: function (args) {send("_mbscspn");}});

var _mbscspn_l = Module.findExportByName("ucrtbased.dll", "_mbscspn_l")
Interceptor.attach(_mbscspn_l, {onLeave: function (args) {send("_mbscspn_l");}});

var _mbsdec = Module.findExportByName("ucrtbased.dll", "_mbsdec")
Interceptor.attach(_mbsdec, {onLeave: function (args) {send("_mbsdec");}});

var _mbsdec_l = Module.findExportByName("ucrtbased.dll", "_mbsdec_l")
Interceptor.attach(_mbsdec_l, {onLeave: function (args) {send("_mbsdec_l");}});

var _mbsdup = Module.findExportByName("ucrtbased.dll", "_mbsdup")
Interceptor.attach(_mbsdup, {onLeave: function (args) {send("_mbsdup");}});

var _mbsdup_dbg = Module.findExportByName("ucrtbased.dll", "_mbsdup_dbg")
Interceptor.attach(_mbsdup_dbg, {onLeave: function (args) {send("_mbsdup_dbg");}});

var _mbsicmp = Module.findExportByName("ucrtbased.dll", "_mbsicmp")
Interceptor.attach(_mbsicmp, {onLeave: function (args) {send("_mbsicmp");}});

var _mbsicmp_l = Module.findExportByName("ucrtbased.dll", "_mbsicmp_l")
Interceptor.attach(_mbsicmp_l, {onLeave: function (args) {send("_mbsicmp_l");}});

var _mbsicoll = Module.findExportByName("ucrtbased.dll", "_mbsicoll")
Interceptor.attach(_mbsicoll, {onLeave: function (args) {send("_mbsicoll");}});

var _mbsicoll_l = Module.findExportByName("ucrtbased.dll", "_mbsicoll_l")
Interceptor.attach(_mbsicoll_l, {onLeave: function (args) {send("_mbsicoll_l");}});

var _mbsinc = Module.findExportByName("ucrtbased.dll", "_mbsinc")
Interceptor.attach(_mbsinc, {onLeave: function (args) {send("_mbsinc");}});

var _mbsinc_l = Module.findExportByName("ucrtbased.dll", "_mbsinc_l")
Interceptor.attach(_mbsinc_l, {onLeave: function (args) {send("_mbsinc_l");}});

var _mbslen = Module.findExportByName("ucrtbased.dll", "_mbslen")
Interceptor.attach(_mbslen, {onLeave: function (args) {send("_mbslen");}});

var _mbslen_l = Module.findExportByName("ucrtbased.dll", "_mbslen_l")
Interceptor.attach(_mbslen_l, {onLeave: function (args) {send("_mbslen_l");}});

var _mbslwr = Module.findExportByName("ucrtbased.dll", "_mbslwr")
Interceptor.attach(_mbslwr, {onLeave: function (args) {send("_mbslwr");}});

var _mbslwr_l = Module.findExportByName("ucrtbased.dll", "_mbslwr_l")
Interceptor.attach(_mbslwr_l, {onLeave: function (args) {send("_mbslwr_l");}});

var _mbslwr_s = Module.findExportByName("ucrtbased.dll", "_mbslwr_s")
Interceptor.attach(_mbslwr_s, {onLeave: function (args) {send("_mbslwr_s");}});

var _mbslwr_s_l = Module.findExportByName("ucrtbased.dll", "_mbslwr_s_l")
Interceptor.attach(_mbslwr_s_l, {onLeave: function (args) {send("_mbslwr_s_l");}});

var _mbsnbcat = Module.findExportByName("ucrtbased.dll", "_mbsnbcat")
Interceptor.attach(_mbsnbcat, {onLeave: function (args) {send("_mbsnbcat");}});

var _mbsnbcat_l = Module.findExportByName("ucrtbased.dll", "_mbsnbcat_l")
Interceptor.attach(_mbsnbcat_l, {onLeave: function (args) {send("_mbsnbcat_l");}});

var _mbsnbcat_s = Module.findExportByName("ucrtbased.dll", "_mbsnbcat_s")
Interceptor.attach(_mbsnbcat_s, {onLeave: function (args) {send("_mbsnbcat_s");}});

var _mbsnbcat_s_l = Module.findExportByName("ucrtbased.dll", "_mbsnbcat_s_l")
Interceptor.attach(_mbsnbcat_s_l, {onLeave: function (args) {send("_mbsnbcat_s_l");}});

var _mbsnbcmp = Module.findExportByName("ucrtbased.dll", "_mbsnbcmp")
Interceptor.attach(_mbsnbcmp, {onLeave: function (args) {send("_mbsnbcmp");}});

var _mbsnbcmp_l = Module.findExportByName("ucrtbased.dll", "_mbsnbcmp_l")
Interceptor.attach(_mbsnbcmp_l, {onLeave: function (args) {send("_mbsnbcmp_l");}});

var _mbsnbcnt = Module.findExportByName("ucrtbased.dll", "_mbsnbcnt")
Interceptor.attach(_mbsnbcnt, {onLeave: function (args) {send("_mbsnbcnt");}});

var _mbsnbcnt_l = Module.findExportByName("ucrtbased.dll", "_mbsnbcnt_l")
Interceptor.attach(_mbsnbcnt_l, {onLeave: function (args) {send("_mbsnbcnt_l");}});

var _mbsnbcoll = Module.findExportByName("ucrtbased.dll", "_mbsnbcoll")
Interceptor.attach(_mbsnbcoll, {onLeave: function (args) {send("_mbsnbcoll");}});

var _mbsnbcoll_l = Module.findExportByName("ucrtbased.dll", "_mbsnbcoll_l")
Interceptor.attach(_mbsnbcoll_l, {onLeave: function (args) {send("_mbsnbcoll_l");}});

var _mbsnbcpy = Module.findExportByName("ucrtbased.dll", "_mbsnbcpy")
Interceptor.attach(_mbsnbcpy, {onLeave: function (args) {send("_mbsnbcpy");}});

var _mbsnbcpy_l = Module.findExportByName("ucrtbased.dll", "_mbsnbcpy_l")
Interceptor.attach(_mbsnbcpy_l, {onLeave: function (args) {send("_mbsnbcpy_l");}});

var _mbsnbcpy_s = Module.findExportByName("ucrtbased.dll", "_mbsnbcpy_s")
Interceptor.attach(_mbsnbcpy_s, {onLeave: function (args) {send("_mbsnbcpy_s");}});

var _mbsnbcpy_s_l = Module.findExportByName("ucrtbased.dll", "_mbsnbcpy_s_l")
Interceptor.attach(_mbsnbcpy_s_l, {onLeave: function (args) {send("_mbsnbcpy_s_l");}});

var _mbsnbicmp = Module.findExportByName("ucrtbased.dll", "_mbsnbicmp")
Interceptor.attach(_mbsnbicmp, {onLeave: function (args) {send("_mbsnbicmp");}});

var _mbsnbicmp_l = Module.findExportByName("ucrtbased.dll", "_mbsnbicmp_l")
Interceptor.attach(_mbsnbicmp_l, {onLeave: function (args) {send("_mbsnbicmp_l");}});

var _mbsnbicoll = Module.findExportByName("ucrtbased.dll", "_mbsnbicoll")
Interceptor.attach(_mbsnbicoll, {onLeave: function (args) {send("_mbsnbicoll");}});

var _mbsnbicoll_l = Module.findExportByName("ucrtbased.dll", "_mbsnbicoll_l")
Interceptor.attach(_mbsnbicoll_l, {onLeave: function (args) {send("_mbsnbicoll_l");}});

var _mbsnbset = Module.findExportByName("ucrtbased.dll", "_mbsnbset")
Interceptor.attach(_mbsnbset, {onLeave: function (args) {send("_mbsnbset");}});

var _mbsnbset_l = Module.findExportByName("ucrtbased.dll", "_mbsnbset_l")
Interceptor.attach(_mbsnbset_l, {onLeave: function (args) {send("_mbsnbset_l");}});

var _mbsnbset_s = Module.findExportByName("ucrtbased.dll", "_mbsnbset_s")
Interceptor.attach(_mbsnbset_s, {onLeave: function (args) {send("_mbsnbset_s");}});

var _mbsnbset_s_l = Module.findExportByName("ucrtbased.dll", "_mbsnbset_s_l")
Interceptor.attach(_mbsnbset_s_l, {onLeave: function (args) {send("_mbsnbset_s_l");}});

var _mbsncat = Module.findExportByName("ucrtbased.dll", "_mbsncat")
Interceptor.attach(_mbsncat, {onLeave: function (args) {send("_mbsncat");}});

var _mbsncat_l = Module.findExportByName("ucrtbased.dll", "_mbsncat_l")
Interceptor.attach(_mbsncat_l, {onLeave: function (args) {send("_mbsncat_l");}});

var _mbsncat_s = Module.findExportByName("ucrtbased.dll", "_mbsncat_s")
Interceptor.attach(_mbsncat_s, {onLeave: function (args) {send("_mbsncat_s");}});

var _mbsncat_s_l = Module.findExportByName("ucrtbased.dll", "_mbsncat_s_l")
Interceptor.attach(_mbsncat_s_l, {onLeave: function (args) {send("_mbsncat_s_l");}});

var _mbsnccnt = Module.findExportByName("ucrtbased.dll", "_mbsnccnt")
Interceptor.attach(_mbsnccnt, {onLeave: function (args) {send("_mbsnccnt");}});

var _mbsnccnt_l = Module.findExportByName("ucrtbased.dll", "_mbsnccnt_l")
Interceptor.attach(_mbsnccnt_l, {onLeave: function (args) {send("_mbsnccnt_l");}});

var _mbsncmp = Module.findExportByName("ucrtbased.dll", "_mbsncmp")
Interceptor.attach(_mbsncmp, {onLeave: function (args) {send("_mbsncmp");}});

var _mbsncmp_l = Module.findExportByName("ucrtbased.dll", "_mbsncmp_l")
Interceptor.attach(_mbsncmp_l, {onLeave: function (args) {send("_mbsncmp_l");}});

var _mbsncoll = Module.findExportByName("ucrtbased.dll", "_mbsncoll")
Interceptor.attach(_mbsncoll, {onLeave: function (args) {send("_mbsncoll");}});

var _mbsncoll_l = Module.findExportByName("ucrtbased.dll", "_mbsncoll_l")
Interceptor.attach(_mbsncoll_l, {onLeave: function (args) {send("_mbsncoll_l");}});

var _mbsncpy = Module.findExportByName("ucrtbased.dll", "_mbsncpy")
Interceptor.attach(_mbsncpy, {onLeave: function (args) {send("_mbsncpy");}});

var _mbsncpy_l = Module.findExportByName("ucrtbased.dll", "_mbsncpy_l")
Interceptor.attach(_mbsncpy_l, {onLeave: function (args) {send("_mbsncpy_l");}});

var _mbsncpy_s = Module.findExportByName("ucrtbased.dll", "_mbsncpy_s")
Interceptor.attach(_mbsncpy_s, {onLeave: function (args) {send("_mbsncpy_s");}});

var _mbsncpy_s_l = Module.findExportByName("ucrtbased.dll", "_mbsncpy_s_l")
Interceptor.attach(_mbsncpy_s_l, {onLeave: function (args) {send("_mbsncpy_s_l");}});

var _mbsnextc = Module.findExportByName("ucrtbased.dll", "_mbsnextc")
Interceptor.attach(_mbsnextc, {onLeave: function (args) {send("_mbsnextc");}});

var _mbsnextc_l = Module.findExportByName("ucrtbased.dll", "_mbsnextc_l")
Interceptor.attach(_mbsnextc_l, {onLeave: function (args) {send("_mbsnextc_l");}});

var _mbsnicmp = Module.findExportByName("ucrtbased.dll", "_mbsnicmp")
Interceptor.attach(_mbsnicmp, {onLeave: function (args) {send("_mbsnicmp");}});

var _mbsnicmp_l = Module.findExportByName("ucrtbased.dll", "_mbsnicmp_l")
Interceptor.attach(_mbsnicmp_l, {onLeave: function (args) {send("_mbsnicmp_l");}});

var _mbsnicoll = Module.findExportByName("ucrtbased.dll", "_mbsnicoll")
Interceptor.attach(_mbsnicoll, {onLeave: function (args) {send("_mbsnicoll");}});

var _mbsnicoll_l = Module.findExportByName("ucrtbased.dll", "_mbsnicoll_l")
Interceptor.attach(_mbsnicoll_l, {onLeave: function (args) {send("_mbsnicoll_l");}});

var _mbsninc = Module.findExportByName("ucrtbased.dll", "_mbsninc")
Interceptor.attach(_mbsninc, {onLeave: function (args) {send("_mbsninc");}});

var _mbsninc_l = Module.findExportByName("ucrtbased.dll", "_mbsninc_l")
Interceptor.attach(_mbsninc_l, {onLeave: function (args) {send("_mbsninc_l");}});

var _mbsnlen = Module.findExportByName("ucrtbased.dll", "_mbsnlen")
Interceptor.attach(_mbsnlen, {onLeave: function (args) {send("_mbsnlen");}});

var _mbsnlen_l = Module.findExportByName("ucrtbased.dll", "_mbsnlen_l")
Interceptor.attach(_mbsnlen_l, {onLeave: function (args) {send("_mbsnlen_l");}});

var _mbsnset = Module.findExportByName("ucrtbased.dll", "_mbsnset")
Interceptor.attach(_mbsnset, {onLeave: function (args) {send("_mbsnset");}});

var _mbsnset_l = Module.findExportByName("ucrtbased.dll", "_mbsnset_l")
Interceptor.attach(_mbsnset_l, {onLeave: function (args) {send("_mbsnset_l");}});

var _mbsnset_s = Module.findExportByName("ucrtbased.dll", "_mbsnset_s")
Interceptor.attach(_mbsnset_s, {onLeave: function (args) {send("_mbsnset_s");}});

var _mbsnset_s_l = Module.findExportByName("ucrtbased.dll", "_mbsnset_s_l")
Interceptor.attach(_mbsnset_s_l, {onLeave: function (args) {send("_mbsnset_s_l");}});

var _mbspbrk = Module.findExportByName("ucrtbased.dll", "_mbspbrk")
Interceptor.attach(_mbspbrk, {onLeave: function (args) {send("_mbspbrk");}});

var _mbspbrk_l = Module.findExportByName("ucrtbased.dll", "_mbspbrk_l")
Interceptor.attach(_mbspbrk_l, {onLeave: function (args) {send("_mbspbrk_l");}});

var _mbsrchr = Module.findExportByName("ucrtbased.dll", "_mbsrchr")
Interceptor.attach(_mbsrchr, {onLeave: function (args) {send("_mbsrchr");}});

var _mbsrchr_l = Module.findExportByName("ucrtbased.dll", "_mbsrchr_l")
Interceptor.attach(_mbsrchr_l, {onLeave: function (args) {send("_mbsrchr_l");}});

var _mbsrev = Module.findExportByName("ucrtbased.dll", "_mbsrev")
Interceptor.attach(_mbsrev, {onLeave: function (args) {send("_mbsrev");}});

var _mbsrev_l = Module.findExportByName("ucrtbased.dll", "_mbsrev_l")
Interceptor.attach(_mbsrev_l, {onLeave: function (args) {send("_mbsrev_l");}});

var _mbsset = Module.findExportByName("ucrtbased.dll", "_mbsset")
Interceptor.attach(_mbsset, {onLeave: function (args) {send("_mbsset");}});

var _mbsset_l = Module.findExportByName("ucrtbased.dll", "_mbsset_l")
Interceptor.attach(_mbsset_l, {onLeave: function (args) {send("_mbsset_l");}});

var _mbsset_s = Module.findExportByName("ucrtbased.dll", "_mbsset_s")
Interceptor.attach(_mbsset_s, {onLeave: function (args) {send("_mbsset_s");}});

var _mbsset_s_l = Module.findExportByName("ucrtbased.dll", "_mbsset_s_l")
Interceptor.attach(_mbsset_s_l, {onLeave: function (args) {send("_mbsset_s_l");}});

var _mbsspn = Module.findExportByName("ucrtbased.dll", "_mbsspn")
Interceptor.attach(_mbsspn, {onLeave: function (args) {send("_mbsspn");}});

var _mbsspn_l = Module.findExportByName("ucrtbased.dll", "_mbsspn_l")
Interceptor.attach(_mbsspn_l, {onLeave: function (args) {send("_mbsspn_l");}});

var _mbsspnp = Module.findExportByName("ucrtbased.dll", "_mbsspnp")
Interceptor.attach(_mbsspnp, {onLeave: function (args) {send("_mbsspnp");}});

var _mbsspnp_l = Module.findExportByName("ucrtbased.dll", "_mbsspnp_l")
Interceptor.attach(_mbsspnp_l, {onLeave: function (args) {send("_mbsspnp_l");}});

var _mbsstr = Module.findExportByName("ucrtbased.dll", "_mbsstr")
Interceptor.attach(_mbsstr, {onLeave: function (args) {send("_mbsstr");}});

var _mbsstr_l = Module.findExportByName("ucrtbased.dll", "_mbsstr_l")
Interceptor.attach(_mbsstr_l, {onLeave: function (args) {send("_mbsstr_l");}});

var _mbstok = Module.findExportByName("ucrtbased.dll", "_mbstok")
Interceptor.attach(_mbstok, {onLeave: function (args) {send("_mbstok");}});

var _mbstok_l = Module.findExportByName("ucrtbased.dll", "_mbstok_l")
Interceptor.attach(_mbstok_l, {onLeave: function (args) {send("_mbstok_l");}});

var _mbstok_s = Module.findExportByName("ucrtbased.dll", "_mbstok_s")
Interceptor.attach(_mbstok_s, {onLeave: function (args) {send("_mbstok_s");}});

var _mbstok_s_l = Module.findExportByName("ucrtbased.dll", "_mbstok_s_l")
Interceptor.attach(_mbstok_s_l, {onLeave: function (args) {send("_mbstok_s_l");}});

var _mbstowcs_l = Module.findExportByName("ucrtbased.dll", "_mbstowcs_l")
Interceptor.attach(_mbstowcs_l, {onLeave: function (args) {send("_mbstowcs_l");}});

var _mbstowcs_s_l = Module.findExportByName("ucrtbased.dll", "_mbstowcs_s_l")
Interceptor.attach(_mbstowcs_s_l, {onLeave: function (args) {send("_mbstowcs_s_l");}});

var _mbstrlen = Module.findExportByName("ucrtbased.dll", "_mbstrlen")
Interceptor.attach(_mbstrlen, {onLeave: function (args) {send("_mbstrlen");}});

var _mbstrlen_l = Module.findExportByName("ucrtbased.dll", "_mbstrlen_l")
Interceptor.attach(_mbstrlen_l, {onLeave: function (args) {send("_mbstrlen_l");}});

var _mbstrnlen = Module.findExportByName("ucrtbased.dll", "_mbstrnlen")
Interceptor.attach(_mbstrnlen, {onLeave: function (args) {send("_mbstrnlen");}});

var _mbstrnlen_l = Module.findExportByName("ucrtbased.dll", "_mbstrnlen_l")
Interceptor.attach(_mbstrnlen_l, {onLeave: function (args) {send("_mbstrnlen_l");}});

var _mbsupr = Module.findExportByName("ucrtbased.dll", "_mbsupr")
Interceptor.attach(_mbsupr, {onLeave: function (args) {send("_mbsupr");}});

var _mbsupr_l = Module.findExportByName("ucrtbased.dll", "_mbsupr_l")
Interceptor.attach(_mbsupr_l, {onLeave: function (args) {send("_mbsupr_l");}});

var _mbsupr_s = Module.findExportByName("ucrtbased.dll", "_mbsupr_s")
Interceptor.attach(_mbsupr_s, {onLeave: function (args) {send("_mbsupr_s");}});

var _mbsupr_s_l = Module.findExportByName("ucrtbased.dll", "_mbsupr_s_l")
Interceptor.attach(_mbsupr_s_l, {onLeave: function (args) {send("_mbsupr_s_l");}});

var _mbtowc_l = Module.findExportByName("ucrtbased.dll", "_mbtowc_l")
Interceptor.attach(_mbtowc_l, {onLeave: function (args) {send("_mbtowc_l");}});

var _memccpy = Module.findExportByName("ucrtbased.dll", "_memccpy")
Interceptor.attach(_memccpy, {onLeave: function (args) {send("_memccpy");}});

var _memicmp = Module.findExportByName("ucrtbased.dll", "_memicmp")
Interceptor.attach(_memicmp, {onLeave: function (args) {send("_memicmp");}});

var _memicmp_l = Module.findExportByName("ucrtbased.dll", "_memicmp_l")
Interceptor.attach(_memicmp_l, {onLeave: function (args) {send("_memicmp_l");}});

var _mkdir = Module.findExportByName("ucrtbased.dll", "_mkdir")
Interceptor.attach(_mkdir, {onLeave: function (args) {send("_mkdir");}});

var _mkgmtime32 = Module.findExportByName("ucrtbased.dll", "_mkgmtime32")
Interceptor.attach(_mkgmtime32, {onLeave: function (args) {send("_mkgmtime32");}});

var _mkgmtime64 = Module.findExportByName("ucrtbased.dll", "_mkgmtime64")
Interceptor.attach(_mkgmtime64, {onLeave: function (args) {send("_mkgmtime64");}});

var _mktemp = Module.findExportByName("ucrtbased.dll", "_mktemp")
Interceptor.attach(_mktemp, {onLeave: function (args) {send("_mktemp");}});

var _mktemp_s = Module.findExportByName("ucrtbased.dll", "_mktemp_s")
Interceptor.attach(_mktemp_s, {onLeave: function (args) {send("_mktemp_s");}});

var _mktime32 = Module.findExportByName("ucrtbased.dll", "_mktime32")
Interceptor.attach(_mktime32, {onLeave: function (args) {send("_mktime32");}});

var _mktime64 = Module.findExportByName("ucrtbased.dll", "_mktime64")
Interceptor.attach(_mktime64, {onLeave: function (args) {send("_mktime64");}});

var _msize = Module.findExportByName("ucrtbased.dll", "_msize")
Interceptor.attach(_msize, {onLeave: function (args) {send("_msize");}});

var _msize_dbg = Module.findExportByName("ucrtbased.dll", "_msize_dbg")
Interceptor.attach(_msize_dbg, {onLeave: function (args) {send("_msize_dbg");}});

var _nextafter = Module.findExportByName("ucrtbased.dll", "_nextafter")
Interceptor.attach(_nextafter, {onLeave: function (args) {send("_nextafter");}});

var _nextafterf = Module.findExportByName("ucrtbased.dll", "_nextafterf")
Interceptor.attach(_nextafterf, {onLeave: function (args) {send("_nextafterf");}});

var _o__Getdays = Module.findExportByName("ucrtbased.dll", "_o__Getdays")
Interceptor.attach(_o__Getdays, {onLeave: function (args) {send("_o__Getdays");}});

var _o__Getmonths = Module.findExportByName("ucrtbased.dll", "_o__Getmonths")
Interceptor.attach(_o__Getmonths, {onLeave: function (args) {send("_o__Getmonths");}});

var _o__Gettnames = Module.findExportByName("ucrtbased.dll", "_o__Gettnames")
Interceptor.attach(_o__Gettnames, {onLeave: function (args) {send("_o__Gettnames");}});

var _o__Strftime = Module.findExportByName("ucrtbased.dll", "_o__Strftime")
Interceptor.attach(_o__Strftime, {onLeave: function (args) {send("_o__Strftime");}});

var _o__W_Getdays = Module.findExportByName("ucrtbased.dll", "_o__W_Getdays")
Interceptor.attach(_o__W_Getdays, {onLeave: function (args) {send("_o__W_Getdays");}});

var _o__W_Getmonths = Module.findExportByName("ucrtbased.dll", "_o__W_Getmonths")
Interceptor.attach(_o__W_Getmonths, {onLeave: function (args) {send("_o__W_Getmonths");}});

var _o__W_Gettnames = Module.findExportByName("ucrtbased.dll", "_o__W_Gettnames")
Interceptor.attach(_o__W_Gettnames, {onLeave: function (args) {send("_o__W_Gettnames");}});

var _o__Wcsftime = Module.findExportByName("ucrtbased.dll", "_o__Wcsftime")
Interceptor.attach(_o__Wcsftime, {onLeave: function (args) {send("_o__Wcsftime");}});

var _o____lc_codepage_func = Module.findExportByName("ucrtbased.dll", "_o____lc_codepage_func")
Interceptor.attach(_o____lc_codepage_func, {onLeave: function (args) {send("_o____lc_codepage_func");}});

var _o____lc_collate_cp_func = Module.findExportByName("ucrtbased.dll", "_o____lc_collate_cp_func")
Interceptor.attach(_o____lc_collate_cp_func, {onLeave: function (args) {send("_o____lc_collate_cp_func");}});

var _o____lc_locale_name_func = Module.findExportByName("ucrtbased.dll", "_o____lc_locale_name_func")
Interceptor.attach(_o____lc_locale_name_func, {onLeave: function (args) {send("_o____lc_locale_name_func");}});

var _o____mb_cur_max_func = Module.findExportByName("ucrtbased.dll", "_o____mb_cur_max_func")
Interceptor.attach(_o____mb_cur_max_func, {onLeave: function (args) {send("_o____mb_cur_max_func");}});

var _o___acrt_iob_func = Module.findExportByName("ucrtbased.dll", "_o___acrt_iob_func")
Interceptor.attach(_o___acrt_iob_func, {onLeave: function (args) {send("_o___acrt_iob_func");}});

var _o___conio_common_vcprintf = Module.findExportByName("ucrtbased.dll", "_o___conio_common_vcprintf")
Interceptor.attach(_o___conio_common_vcprintf, {onLeave: function (args) {send("_o___conio_common_vcprintf");}});

var _o___conio_common_vcprintf_p = Module.findExportByName("ucrtbased.dll", "_o___conio_common_vcprintf_p")
Interceptor.attach(_o___conio_common_vcprintf_p, {onLeave: function (args) {send("_o___conio_common_vcprintf_p");}});

var _o___conio_common_vcprintf_s = Module.findExportByName("ucrtbased.dll", "_o___conio_common_vcprintf_s")
Interceptor.attach(_o___conio_common_vcprintf_s, {onLeave: function (args) {send("_o___conio_common_vcprintf_s");}});

var _o___conio_common_vcscanf = Module.findExportByName("ucrtbased.dll", "_o___conio_common_vcscanf")
Interceptor.attach(_o___conio_common_vcscanf, {onLeave: function (args) {send("_o___conio_common_vcscanf");}});

var _o___conio_common_vcwprintf = Module.findExportByName("ucrtbased.dll", "_o___conio_common_vcwprintf")
Interceptor.attach(_o___conio_common_vcwprintf, {onLeave: function (args) {send("_o___conio_common_vcwprintf");}});

var _o___conio_common_vcwprintf_p = Module.findExportByName("ucrtbased.dll", "_o___conio_common_vcwprintf_p")
Interceptor.attach(_o___conio_common_vcwprintf_p, {onLeave: function (args) {send("_o___conio_common_vcwprintf_p");}});

var _o___conio_common_vcwprintf_s = Module.findExportByName("ucrtbased.dll", "_o___conio_common_vcwprintf_s")
Interceptor.attach(_o___conio_common_vcwprintf_s, {onLeave: function (args) {send("_o___conio_common_vcwprintf_s");}});

var _o___conio_common_vcwscanf = Module.findExportByName("ucrtbased.dll", "_o___conio_common_vcwscanf")
Interceptor.attach(_o___conio_common_vcwscanf, {onLeave: function (args) {send("_o___conio_common_vcwscanf");}});

var _o___daylight = Module.findExportByName("ucrtbased.dll", "_o___daylight")
Interceptor.attach(_o___daylight, {onLeave: function (args) {send("_o___daylight");}});

var _o___dstbias = Module.findExportByName("ucrtbased.dll", "_o___dstbias")
Interceptor.attach(_o___dstbias, {onLeave: function (args) {send("_o___dstbias");}});

var _o___fpe_flt_rounds = Module.findExportByName("ucrtbased.dll", "_o___fpe_flt_rounds")
Interceptor.attach(_o___fpe_flt_rounds, {onLeave: function (args) {send("_o___fpe_flt_rounds");}});

var _o___p___argc = Module.findExportByName("ucrtbased.dll", "_o___p___argc")
Interceptor.attach(_o___p___argc, {onLeave: function (args) {send("_o___p___argc");}});

var _o___p___argv = Module.findExportByName("ucrtbased.dll", "_o___p___argv")
Interceptor.attach(_o___p___argv, {onLeave: function (args) {send("_o___p___argv");}});

var _o___p___wargv = Module.findExportByName("ucrtbased.dll", "_o___p___wargv")
Interceptor.attach(_o___p___wargv, {onLeave: function (args) {send("_o___p___wargv");}});

var _o___p__acmdln = Module.findExportByName("ucrtbased.dll", "_o___p__acmdln")
Interceptor.attach(_o___p__acmdln, {onLeave: function (args) {send("_o___p__acmdln");}});

var _o___p__commode = Module.findExportByName("ucrtbased.dll", "_o___p__commode")
Interceptor.attach(_o___p__commode, {onLeave: function (args) {send("_o___p__commode");}});

var _o___p__environ = Module.findExportByName("ucrtbased.dll", "_o___p__environ")
Interceptor.attach(_o___p__environ, {onLeave: function (args) {send("_o___p__environ");}});

var _o___p__fmode = Module.findExportByName("ucrtbased.dll", "_o___p__fmode")
Interceptor.attach(_o___p__fmode, {onLeave: function (args) {send("_o___p__fmode");}});

var _o___p__mbcasemap = Module.findExportByName("ucrtbased.dll", "_o___p__mbcasemap")
Interceptor.attach(_o___p__mbcasemap, {onLeave: function (args) {send("_o___p__mbcasemap");}});

var _o___p__mbctype = Module.findExportByName("ucrtbased.dll", "_o___p__mbctype")
Interceptor.attach(_o___p__mbctype, {onLeave: function (args) {send("_o___p__mbctype");}});

var _o___p__pgmptr = Module.findExportByName("ucrtbased.dll", "_o___p__pgmptr")
Interceptor.attach(_o___p__pgmptr, {onLeave: function (args) {send("_o___p__pgmptr");}});

var _o___p__wcmdln = Module.findExportByName("ucrtbased.dll", "_o___p__wcmdln")
Interceptor.attach(_o___p__wcmdln, {onLeave: function (args) {send("_o___p__wcmdln");}});

var _o___p__wenviron = Module.findExportByName("ucrtbased.dll", "_o___p__wenviron")
Interceptor.attach(_o___p__wenviron, {onLeave: function (args) {send("_o___p__wenviron");}});

var _o___p__wpgmptr = Module.findExportByName("ucrtbased.dll", "_o___p__wpgmptr")
Interceptor.attach(_o___p__wpgmptr, {onLeave: function (args) {send("_o___p__wpgmptr");}});

var _o___pctype_func = Module.findExportByName("ucrtbased.dll", "_o___pctype_func")
Interceptor.attach(_o___pctype_func, {onLeave: function (args) {send("_o___pctype_func");}});

var _o___pwctype_func = Module.findExportByName("ucrtbased.dll", "_o___pwctype_func")
Interceptor.attach(_o___pwctype_func, {onLeave: function (args) {send("_o___pwctype_func");}});

var _o___std_exception_copy = Module.findExportByName("ucrtbased.dll", "_o___std_exception_copy")
Interceptor.attach(_o___std_exception_copy, {onLeave: function (args) {send("_o___std_exception_copy");}});

var _o___std_exception_destroy = Module.findExportByName("ucrtbased.dll", "_o___std_exception_destroy")
Interceptor.attach(_o___std_exception_destroy, {onLeave: function (args) {send("_o___std_exception_destroy");}});

var _o___std_type_info_destroy_list = Module.findExportByName("ucrtbased.dll", "_o___std_type_info_destroy_list")
Interceptor.attach(_o___std_type_info_destroy_list, {onLeave: function (args) {send("_o___std_type_info_destroy_list");}});

var _o___std_type_info_name = Module.findExportByName("ucrtbased.dll", "_o___std_type_info_name")
Interceptor.attach(_o___std_type_info_name, {onLeave: function (args) {send("_o___std_type_info_name");}});

var _o___stdio_common_vfprintf = Module.findExportByName("ucrtbased.dll", "_o___stdio_common_vfprintf")
Interceptor.attach(_o___stdio_common_vfprintf, {onLeave: function (args) {send("_o___stdio_common_vfprintf");}});

var _o___stdio_common_vfprintf_p = Module.findExportByName("ucrtbased.dll", "_o___stdio_common_vfprintf_p")
Interceptor.attach(_o___stdio_common_vfprintf_p, {onLeave: function (args) {send("_o___stdio_common_vfprintf_p");}});

var _o___stdio_common_vfprintf_s = Module.findExportByName("ucrtbased.dll", "_o___stdio_common_vfprintf_s")
Interceptor.attach(_o___stdio_common_vfprintf_s, {onLeave: function (args) {send("_o___stdio_common_vfprintf_s");}});

var _o___stdio_common_vfscanf = Module.findExportByName("ucrtbased.dll", "_o___stdio_common_vfscanf")
Interceptor.attach(_o___stdio_common_vfscanf, {onLeave: function (args) {send("_o___stdio_common_vfscanf");}});

var _o___stdio_common_vfwprintf = Module.findExportByName("ucrtbased.dll", "_o___stdio_common_vfwprintf")
Interceptor.attach(_o___stdio_common_vfwprintf, {onLeave: function (args) {send("_o___stdio_common_vfwprintf");}});

var _o___stdio_common_vfwprintf_p = Module.findExportByName("ucrtbased.dll", "_o___stdio_common_vfwprintf_p")
Interceptor.attach(_o___stdio_common_vfwprintf_p, {onLeave: function (args) {send("_o___stdio_common_vfwprintf_p");}});

var _o___stdio_common_vfwprintf_s = Module.findExportByName("ucrtbased.dll", "_o___stdio_common_vfwprintf_s")
Interceptor.attach(_o___stdio_common_vfwprintf_s, {onLeave: function (args) {send("_o___stdio_common_vfwprintf_s");}});

var _o___stdio_common_vfwscanf = Module.findExportByName("ucrtbased.dll", "_o___stdio_common_vfwscanf")
Interceptor.attach(_o___stdio_common_vfwscanf, {onLeave: function (args) {send("_o___stdio_common_vfwscanf");}});

var _o___stdio_common_vsnprintf_s = Module.findExportByName("ucrtbased.dll", "_o___stdio_common_vsnprintf_s")
Interceptor.attach(_o___stdio_common_vsnprintf_s, {onLeave: function (args) {send("_o___stdio_common_vsnprintf_s");}});

var _o___stdio_common_vsnwprintf_s = Module.findExportByName("ucrtbased.dll", "_o___stdio_common_vsnwprintf_s")
Interceptor.attach(_o___stdio_common_vsnwprintf_s, {onLeave: function (args) {send("_o___stdio_common_vsnwprintf_s");}});

var _o___stdio_common_vsprintf = Module.findExportByName("ucrtbased.dll", "_o___stdio_common_vsprintf")
Interceptor.attach(_o___stdio_common_vsprintf, {onLeave: function (args) {send("_o___stdio_common_vsprintf");}});

var _o___stdio_common_vsprintf_p = Module.findExportByName("ucrtbased.dll", "_o___stdio_common_vsprintf_p")
Interceptor.attach(_o___stdio_common_vsprintf_p, {onLeave: function (args) {send("_o___stdio_common_vsprintf_p");}});

var _o___stdio_common_vsprintf_s = Module.findExportByName("ucrtbased.dll", "_o___stdio_common_vsprintf_s")
Interceptor.attach(_o___stdio_common_vsprintf_s, {onLeave: function (args) {send("_o___stdio_common_vsprintf_s");}});

var _o___stdio_common_vsscanf = Module.findExportByName("ucrtbased.dll", "_o___stdio_common_vsscanf")
Interceptor.attach(_o___stdio_common_vsscanf, {onLeave: function (args) {send("_o___stdio_common_vsscanf");}});

var _o___stdio_common_vswprintf = Module.findExportByName("ucrtbased.dll", "_o___stdio_common_vswprintf")
Interceptor.attach(_o___stdio_common_vswprintf, {onLeave: function (args) {send("_o___stdio_common_vswprintf");}});

var _o___stdio_common_vswprintf_p = Module.findExportByName("ucrtbased.dll", "_o___stdio_common_vswprintf_p")
Interceptor.attach(_o___stdio_common_vswprintf_p, {onLeave: function (args) {send("_o___stdio_common_vswprintf_p");}});

var _o___stdio_common_vswprintf_s = Module.findExportByName("ucrtbased.dll", "_o___stdio_common_vswprintf_s")
Interceptor.attach(_o___stdio_common_vswprintf_s, {onLeave: function (args) {send("_o___stdio_common_vswprintf_s");}});

var _o___stdio_common_vswscanf = Module.findExportByName("ucrtbased.dll", "_o___stdio_common_vswscanf")
Interceptor.attach(_o___stdio_common_vswscanf, {onLeave: function (args) {send("_o___stdio_common_vswscanf");}});

var _o___timezone = Module.findExportByName("ucrtbased.dll", "_o___timezone")
Interceptor.attach(_o___timezone, {onLeave: function (args) {send("_o___timezone");}});

var _o___tzname = Module.findExportByName("ucrtbased.dll", "_o___tzname")
Interceptor.attach(_o___tzname, {onLeave: function (args) {send("_o___tzname");}});

var _o___wcserror = Module.findExportByName("ucrtbased.dll", "_o___wcserror")
Interceptor.attach(_o___wcserror, {onLeave: function (args) {send("_o___wcserror");}});

var _o__access = Module.findExportByName("ucrtbased.dll", "_o__access")
Interceptor.attach(_o__access, {onLeave: function (args) {send("_o__access");}});

var _o__access_s = Module.findExportByName("ucrtbased.dll", "_o__access_s")
Interceptor.attach(_o__access_s, {onLeave: function (args) {send("_o__access_s");}});

var _o__aligned_free = Module.findExportByName("ucrtbased.dll", "_o__aligned_free")
Interceptor.attach(_o__aligned_free, {onLeave: function (args) {send("_o__aligned_free");}});

var _o__aligned_malloc = Module.findExportByName("ucrtbased.dll", "_o__aligned_malloc")
Interceptor.attach(_o__aligned_malloc, {onLeave: function (args) {send("_o__aligned_malloc");}});

var _o__aligned_msize = Module.findExportByName("ucrtbased.dll", "_o__aligned_msize")
Interceptor.attach(_o__aligned_msize, {onLeave: function (args) {send("_o__aligned_msize");}});

var _o__aligned_offset_malloc = Module.findExportByName("ucrtbased.dll", "_o__aligned_offset_malloc")
Interceptor.attach(_o__aligned_offset_malloc, {onLeave: function (args) {send("_o__aligned_offset_malloc");}});

var _o__aligned_offset_realloc = Module.findExportByName("ucrtbased.dll", "_o__aligned_offset_realloc")
Interceptor.attach(_o__aligned_offset_realloc, {onLeave: function (args) {send("_o__aligned_offset_realloc");}});

var _o__aligned_offset_recalloc = Module.findExportByName("ucrtbased.dll", "_o__aligned_offset_recalloc")
Interceptor.attach(_o__aligned_offset_recalloc, {onLeave: function (args) {send("_o__aligned_offset_recalloc");}});

var _o__aligned_realloc = Module.findExportByName("ucrtbased.dll", "_o__aligned_realloc")
Interceptor.attach(_o__aligned_realloc, {onLeave: function (args) {send("_o__aligned_realloc");}});

var _o__aligned_recalloc = Module.findExportByName("ucrtbased.dll", "_o__aligned_recalloc")
Interceptor.attach(_o__aligned_recalloc, {onLeave: function (args) {send("_o__aligned_recalloc");}});

var _o__atodbl = Module.findExportByName("ucrtbased.dll", "_o__atodbl")
Interceptor.attach(_o__atodbl, {onLeave: function (args) {send("_o__atodbl");}});

var _o__atodbl_l = Module.findExportByName("ucrtbased.dll", "_o__atodbl_l")
Interceptor.attach(_o__atodbl_l, {onLeave: function (args) {send("_o__atodbl_l");}});

var _o__atof_l = Module.findExportByName("ucrtbased.dll", "_o__atof_l")
Interceptor.attach(_o__atof_l, {onLeave: function (args) {send("_o__atof_l");}});

var _o__atoflt = Module.findExportByName("ucrtbased.dll", "_o__atoflt")
Interceptor.attach(_o__atoflt, {onLeave: function (args) {send("_o__atoflt");}});

var _o__atoflt_l = Module.findExportByName("ucrtbased.dll", "_o__atoflt_l")
Interceptor.attach(_o__atoflt_l, {onLeave: function (args) {send("_o__atoflt_l");}});

var _o__atoi64 = Module.findExportByName("ucrtbased.dll", "_o__atoi64")
Interceptor.attach(_o__atoi64, {onLeave: function (args) {send("_o__atoi64");}});

var _o__atoi64_l = Module.findExportByName("ucrtbased.dll", "_o__atoi64_l")
Interceptor.attach(_o__atoi64_l, {onLeave: function (args) {send("_o__atoi64_l");}});

var _o__atoi_l = Module.findExportByName("ucrtbased.dll", "_o__atoi_l")
Interceptor.attach(_o__atoi_l, {onLeave: function (args) {send("_o__atoi_l");}});

var _o__atol_l = Module.findExportByName("ucrtbased.dll", "_o__atol_l")
Interceptor.attach(_o__atol_l, {onLeave: function (args) {send("_o__atol_l");}});

var _o__atoldbl = Module.findExportByName("ucrtbased.dll", "_o__atoldbl")
Interceptor.attach(_o__atoldbl, {onLeave: function (args) {send("_o__atoldbl");}});

var _o__atoldbl_l = Module.findExportByName("ucrtbased.dll", "_o__atoldbl_l")
Interceptor.attach(_o__atoldbl_l, {onLeave: function (args) {send("_o__atoldbl_l");}});

var _o__atoll_l = Module.findExportByName("ucrtbased.dll", "_o__atoll_l")
Interceptor.attach(_o__atoll_l, {onLeave: function (args) {send("_o__atoll_l");}});

var _o__beep = Module.findExportByName("ucrtbased.dll", "_o__beep")
Interceptor.attach(_o__beep, {onLeave: function (args) {send("_o__beep");}});

var _o__beginthread = Module.findExportByName("ucrtbased.dll", "_o__beginthread")
Interceptor.attach(_o__beginthread, {onLeave: function (args) {send("_o__beginthread");}});

var _o__beginthreadex = Module.findExportByName("ucrtbased.dll", "_o__beginthreadex")
Interceptor.attach(_o__beginthreadex, {onLeave: function (args) {send("_o__beginthreadex");}});

var _o__cabs = Module.findExportByName("ucrtbased.dll", "_o__cabs")
Interceptor.attach(_o__cabs, {onLeave: function (args) {send("_o__cabs");}});

var _o__callnewh = Module.findExportByName("ucrtbased.dll", "_o__callnewh")
Interceptor.attach(_o__callnewh, {onLeave: function (args) {send("_o__callnewh");}});

var _o__calloc_base = Module.findExportByName("ucrtbased.dll", "_o__calloc_base")
Interceptor.attach(_o__calloc_base, {onLeave: function (args) {send("_o__calloc_base");}});

var _o__cexit = Module.findExportByName("ucrtbased.dll", "_o__cexit")
Interceptor.attach(_o__cexit, {onLeave: function (args) {send("_o__cexit");}});

var _o__cgets = Module.findExportByName("ucrtbased.dll", "_o__cgets")
Interceptor.attach(_o__cgets, {onLeave: function (args) {send("_o__cgets");}});

var _o__cgets_s = Module.findExportByName("ucrtbased.dll", "_o__cgets_s")
Interceptor.attach(_o__cgets_s, {onLeave: function (args) {send("_o__cgets_s");}});

var _o__cgetws = Module.findExportByName("ucrtbased.dll", "_o__cgetws")
Interceptor.attach(_o__cgetws, {onLeave: function (args) {send("_o__cgetws");}});

var _o__cgetws_s = Module.findExportByName("ucrtbased.dll", "_o__cgetws_s")
Interceptor.attach(_o__cgetws_s, {onLeave: function (args) {send("_o__cgetws_s");}});

var _o__chdir = Module.findExportByName("ucrtbased.dll", "_o__chdir")
Interceptor.attach(_o__chdir, {onLeave: function (args) {send("_o__chdir");}});

var _o__chdrive = Module.findExportByName("ucrtbased.dll", "_o__chdrive")
Interceptor.attach(_o__chdrive, {onLeave: function (args) {send("_o__chdrive");}});

var _o__chmod = Module.findExportByName("ucrtbased.dll", "_o__chmod")
Interceptor.attach(_o__chmod, {onLeave: function (args) {send("_o__chmod");}});

var _o__chsize = Module.findExportByName("ucrtbased.dll", "_o__chsize")
Interceptor.attach(_o__chsize, {onLeave: function (args) {send("_o__chsize");}});

var _o__chsize_s = Module.findExportByName("ucrtbased.dll", "_o__chsize_s")
Interceptor.attach(_o__chsize_s, {onLeave: function (args) {send("_o__chsize_s");}});

var _o__close = Module.findExportByName("ucrtbased.dll", "_o__close")
Interceptor.attach(_o__close, {onLeave: function (args) {send("_o__close");}});

var _o__commit = Module.findExportByName("ucrtbased.dll", "_o__commit")
Interceptor.attach(_o__commit, {onLeave: function (args) {send("_o__commit");}});

var _o__configthreadlocale = Module.findExportByName("ucrtbased.dll", "_o__configthreadlocale")
Interceptor.attach(_o__configthreadlocale, {onLeave: function (args) {send("_o__configthreadlocale");}});

var _o__configure_narrow_argv = Module.findExportByName("ucrtbased.dll", "_o__configure_narrow_argv")
Interceptor.attach(_o__configure_narrow_argv, {onLeave: function (args) {send("_o__configure_narrow_argv");}});

var _o__configure_wide_argv = Module.findExportByName("ucrtbased.dll", "_o__configure_wide_argv")
Interceptor.attach(_o__configure_wide_argv, {onLeave: function (args) {send("_o__configure_wide_argv");}});

var _o__controlfp_s = Module.findExportByName("ucrtbased.dll", "_o__controlfp_s")
Interceptor.attach(_o__controlfp_s, {onLeave: function (args) {send("_o__controlfp_s");}});

var _o__cputs = Module.findExportByName("ucrtbased.dll", "_o__cputs")
Interceptor.attach(_o__cputs, {onLeave: function (args) {send("_o__cputs");}});

var _o__cputws = Module.findExportByName("ucrtbased.dll", "_o__cputws")
Interceptor.attach(_o__cputws, {onLeave: function (args) {send("_o__cputws");}});

var _o__creat = Module.findExportByName("ucrtbased.dll", "_o__creat")
Interceptor.attach(_o__creat, {onLeave: function (args) {send("_o__creat");}});

var _o__create_locale = Module.findExportByName("ucrtbased.dll", "_o__create_locale")
Interceptor.attach(_o__create_locale, {onLeave: function (args) {send("_o__create_locale");}});

var _o__crt_atexit = Module.findExportByName("ucrtbased.dll", "_o__crt_atexit")
Interceptor.attach(_o__crt_atexit, {onLeave: function (args) {send("_o__crt_atexit");}});

var _o__ctime32_s = Module.findExportByName("ucrtbased.dll", "_o__ctime32_s")
Interceptor.attach(_o__ctime32_s, {onLeave: function (args) {send("_o__ctime32_s");}});

var _o__ctime64_s = Module.findExportByName("ucrtbased.dll", "_o__ctime64_s")
Interceptor.attach(_o__ctime64_s, {onLeave: function (args) {send("_o__ctime64_s");}});

var _o__cwait = Module.findExportByName("ucrtbased.dll", "_o__cwait")
Interceptor.attach(_o__cwait, {onLeave: function (args) {send("_o__cwait");}});

var _o__d_int = Module.findExportByName("ucrtbased.dll", "_o__d_int")
Interceptor.attach(_o__d_int, {onLeave: function (args) {send("_o__d_int");}});

var _o__dclass = Module.findExportByName("ucrtbased.dll", "_o__dclass")
Interceptor.attach(_o__dclass, {onLeave: function (args) {send("_o__dclass");}});

var _o__difftime32 = Module.findExportByName("ucrtbased.dll", "_o__difftime32")
Interceptor.attach(_o__difftime32, {onLeave: function (args) {send("_o__difftime32");}});

var _o__difftime64 = Module.findExportByName("ucrtbased.dll", "_o__difftime64")
Interceptor.attach(_o__difftime64, {onLeave: function (args) {send("_o__difftime64");}});

var _o__dlog = Module.findExportByName("ucrtbased.dll", "_o__dlog")
Interceptor.attach(_o__dlog, {onLeave: function (args) {send("_o__dlog");}});

var _o__dnorm = Module.findExportByName("ucrtbased.dll", "_o__dnorm")
Interceptor.attach(_o__dnorm, {onLeave: function (args) {send("_o__dnorm");}});

var _o__dpcomp = Module.findExportByName("ucrtbased.dll", "_o__dpcomp")
Interceptor.attach(_o__dpcomp, {onLeave: function (args) {send("_o__dpcomp");}});

var _o__dpoly = Module.findExportByName("ucrtbased.dll", "_o__dpoly")
Interceptor.attach(_o__dpoly, {onLeave: function (args) {send("_o__dpoly");}});

var _o__dscale = Module.findExportByName("ucrtbased.dll", "_o__dscale")
Interceptor.attach(_o__dscale, {onLeave: function (args) {send("_o__dscale");}});

var _o__dsign = Module.findExportByName("ucrtbased.dll", "_o__dsign")
Interceptor.attach(_o__dsign, {onLeave: function (args) {send("_o__dsign");}});

var _o__dsin = Module.findExportByName("ucrtbased.dll", "_o__dsin")
Interceptor.attach(_o__dsin, {onLeave: function (args) {send("_o__dsin");}});

var _o__dtest = Module.findExportByName("ucrtbased.dll", "_o__dtest")
Interceptor.attach(_o__dtest, {onLeave: function (args) {send("_o__dtest");}});

var _o__dunscale = Module.findExportByName("ucrtbased.dll", "_o__dunscale")
Interceptor.attach(_o__dunscale, {onLeave: function (args) {send("_o__dunscale");}});

var _o__dup = Module.findExportByName("ucrtbased.dll", "_o__dup")
Interceptor.attach(_o__dup, {onLeave: function (args) {send("_o__dup");}});

var _o__dup2 = Module.findExportByName("ucrtbased.dll", "_o__dup2")
Interceptor.attach(_o__dup2, {onLeave: function (args) {send("_o__dup2");}});

var _o__dupenv_s = Module.findExportByName("ucrtbased.dll", "_o__dupenv_s")
Interceptor.attach(_o__dupenv_s, {onLeave: function (args) {send("_o__dupenv_s");}});

var _o__ecvt = Module.findExportByName("ucrtbased.dll", "_o__ecvt")
Interceptor.attach(_o__ecvt, {onLeave: function (args) {send("_o__ecvt");}});

var _o__ecvt_s = Module.findExportByName("ucrtbased.dll", "_o__ecvt_s")
Interceptor.attach(_o__ecvt_s, {onLeave: function (args) {send("_o__ecvt_s");}});

var _o__endthread = Module.findExportByName("ucrtbased.dll", "_o__endthread")
Interceptor.attach(_o__endthread, {onLeave: function (args) {send("_o__endthread");}});

var _o__endthreadex = Module.findExportByName("ucrtbased.dll", "_o__endthreadex")
Interceptor.attach(_o__endthreadex, {onLeave: function (args) {send("_o__endthreadex");}});

var _o__eof = Module.findExportByName("ucrtbased.dll", "_o__eof")
Interceptor.attach(_o__eof, {onLeave: function (args) {send("_o__eof");}});

var _o__errno = Module.findExportByName("ucrtbased.dll", "_o__errno")
Interceptor.attach(_o__errno, {onLeave: function (args) {send("_o__errno");}});

var _o__except1 = Module.findExportByName("ucrtbased.dll", "_o__except1")
Interceptor.attach(_o__except1, {onLeave: function (args) {send("_o__except1");}});

var _o__execute_onexit_table = Module.findExportByName("ucrtbased.dll", "_o__execute_onexit_table")
Interceptor.attach(_o__execute_onexit_table, {onLeave: function (args) {send("_o__execute_onexit_table");}});

var _o__execv = Module.findExportByName("ucrtbased.dll", "_o__execv")
Interceptor.attach(_o__execv, {onLeave: function (args) {send("_o__execv");}});

var _o__execve = Module.findExportByName("ucrtbased.dll", "_o__execve")
Interceptor.attach(_o__execve, {onLeave: function (args) {send("_o__execve");}});

var _o__execvp = Module.findExportByName("ucrtbased.dll", "_o__execvp")
Interceptor.attach(_o__execvp, {onLeave: function (args) {send("_o__execvp");}});

var _o__execvpe = Module.findExportByName("ucrtbased.dll", "_o__execvpe")
Interceptor.attach(_o__execvpe, {onLeave: function (args) {send("_o__execvpe");}});

var _o__exit = Module.findExportByName("ucrtbased.dll", "_o__exit")
Interceptor.attach(_o__exit, {onLeave: function (args) {send("_o__exit");}});

var _o__expand = Module.findExportByName("ucrtbased.dll", "_o__expand")
Interceptor.attach(_o__expand, {onLeave: function (args) {send("_o__expand");}});

var _o__fclose_nolock = Module.findExportByName("ucrtbased.dll", "_o__fclose_nolock")
Interceptor.attach(_o__fclose_nolock, {onLeave: function (args) {send("_o__fclose_nolock");}});

var _o__fcloseall = Module.findExportByName("ucrtbased.dll", "_o__fcloseall")
Interceptor.attach(_o__fcloseall, {onLeave: function (args) {send("_o__fcloseall");}});

var _o__fcvt = Module.findExportByName("ucrtbased.dll", "_o__fcvt")
Interceptor.attach(_o__fcvt, {onLeave: function (args) {send("_o__fcvt");}});

var _o__fcvt_s = Module.findExportByName("ucrtbased.dll", "_o__fcvt_s")
Interceptor.attach(_o__fcvt_s, {onLeave: function (args) {send("_o__fcvt_s");}});

var _o__fd_int = Module.findExportByName("ucrtbased.dll", "_o__fd_int")
Interceptor.attach(_o__fd_int, {onLeave: function (args) {send("_o__fd_int");}});

var _o__fdclass = Module.findExportByName("ucrtbased.dll", "_o__fdclass")
Interceptor.attach(_o__fdclass, {onLeave: function (args) {send("_o__fdclass");}});

var _o__fdexp = Module.findExportByName("ucrtbased.dll", "_o__fdexp")
Interceptor.attach(_o__fdexp, {onLeave: function (args) {send("_o__fdexp");}});

var _o__fdlog = Module.findExportByName("ucrtbased.dll", "_o__fdlog")
Interceptor.attach(_o__fdlog, {onLeave: function (args) {send("_o__fdlog");}});

var _o__fdopen = Module.findExportByName("ucrtbased.dll", "_o__fdopen")
Interceptor.attach(_o__fdopen, {onLeave: function (args) {send("_o__fdopen");}});

var _o__fdpcomp = Module.findExportByName("ucrtbased.dll", "_o__fdpcomp")
Interceptor.attach(_o__fdpcomp, {onLeave: function (args) {send("_o__fdpcomp");}});

var _o__fdpoly = Module.findExportByName("ucrtbased.dll", "_o__fdpoly")
Interceptor.attach(_o__fdpoly, {onLeave: function (args) {send("_o__fdpoly");}});

var _o__fdscale = Module.findExportByName("ucrtbased.dll", "_o__fdscale")
Interceptor.attach(_o__fdscale, {onLeave: function (args) {send("_o__fdscale");}});

var _o__fdsign = Module.findExportByName("ucrtbased.dll", "_o__fdsign")
Interceptor.attach(_o__fdsign, {onLeave: function (args) {send("_o__fdsign");}});

var _o__fdsin = Module.findExportByName("ucrtbased.dll", "_o__fdsin")
Interceptor.attach(_o__fdsin, {onLeave: function (args) {send("_o__fdsin");}});

var _o__fflush_nolock = Module.findExportByName("ucrtbased.dll", "_o__fflush_nolock")
Interceptor.attach(_o__fflush_nolock, {onLeave: function (args) {send("_o__fflush_nolock");}});

var _o__fgetc_nolock = Module.findExportByName("ucrtbased.dll", "_o__fgetc_nolock")
Interceptor.attach(_o__fgetc_nolock, {onLeave: function (args) {send("_o__fgetc_nolock");}});

var _o__fgetchar = Module.findExportByName("ucrtbased.dll", "_o__fgetchar")
Interceptor.attach(_o__fgetchar, {onLeave: function (args) {send("_o__fgetchar");}});

var _o__fgetwc_nolock = Module.findExportByName("ucrtbased.dll", "_o__fgetwc_nolock")
Interceptor.attach(_o__fgetwc_nolock, {onLeave: function (args) {send("_o__fgetwc_nolock");}});

var _o__fgetwchar = Module.findExportByName("ucrtbased.dll", "_o__fgetwchar")
Interceptor.attach(_o__fgetwchar, {onLeave: function (args) {send("_o__fgetwchar");}});

var _o__filelength = Module.findExportByName("ucrtbased.dll", "_o__filelength")
Interceptor.attach(_o__filelength, {onLeave: function (args) {send("_o__filelength");}});

var _o__filelengthi64 = Module.findExportByName("ucrtbased.dll", "_o__filelengthi64")
Interceptor.attach(_o__filelengthi64, {onLeave: function (args) {send("_o__filelengthi64");}});

var _o__fileno = Module.findExportByName("ucrtbased.dll", "_o__fileno")
Interceptor.attach(_o__fileno, {onLeave: function (args) {send("_o__fileno");}});

var _o__findclose = Module.findExportByName("ucrtbased.dll", "_o__findclose")
Interceptor.attach(_o__findclose, {onLeave: function (args) {send("_o__findclose");}});

var _o__findfirst32 = Module.findExportByName("ucrtbased.dll", "_o__findfirst32")
Interceptor.attach(_o__findfirst32, {onLeave: function (args) {send("_o__findfirst32");}});

var _o__findfirst32i64 = Module.findExportByName("ucrtbased.dll", "_o__findfirst32i64")
Interceptor.attach(_o__findfirst32i64, {onLeave: function (args) {send("_o__findfirst32i64");}});

var _o__findfirst64 = Module.findExportByName("ucrtbased.dll", "_o__findfirst64")
Interceptor.attach(_o__findfirst64, {onLeave: function (args) {send("_o__findfirst64");}});

var _o__findfirst64i32 = Module.findExportByName("ucrtbased.dll", "_o__findfirst64i32")
Interceptor.attach(_o__findfirst64i32, {onLeave: function (args) {send("_o__findfirst64i32");}});

var _o__findnext32 = Module.findExportByName("ucrtbased.dll", "_o__findnext32")
Interceptor.attach(_o__findnext32, {onLeave: function (args) {send("_o__findnext32");}});

var _o__findnext32i64 = Module.findExportByName("ucrtbased.dll", "_o__findnext32i64")
Interceptor.attach(_o__findnext32i64, {onLeave: function (args) {send("_o__findnext32i64");}});

var _o__findnext64 = Module.findExportByName("ucrtbased.dll", "_o__findnext64")
Interceptor.attach(_o__findnext64, {onLeave: function (args) {send("_o__findnext64");}});

var _o__findnext64i32 = Module.findExportByName("ucrtbased.dll", "_o__findnext64i32")
Interceptor.attach(_o__findnext64i32, {onLeave: function (args) {send("_o__findnext64i32");}});

var _o__flushall = Module.findExportByName("ucrtbased.dll", "_o__flushall")
Interceptor.attach(_o__flushall, {onLeave: function (args) {send("_o__flushall");}});

var _o__fpclass = Module.findExportByName("ucrtbased.dll", "_o__fpclass")
Interceptor.attach(_o__fpclass, {onLeave: function (args) {send("_o__fpclass");}});

var _o__fpclassf = Module.findExportByName("ucrtbased.dll", "_o__fpclassf")
Interceptor.attach(_o__fpclassf, {onLeave: function (args) {send("_o__fpclassf");}});

var _o__fputc_nolock = Module.findExportByName("ucrtbased.dll", "_o__fputc_nolock")
Interceptor.attach(_o__fputc_nolock, {onLeave: function (args) {send("_o__fputc_nolock");}});

var _o__fputchar = Module.findExportByName("ucrtbased.dll", "_o__fputchar")
Interceptor.attach(_o__fputchar, {onLeave: function (args) {send("_o__fputchar");}});

var _o__fputwc_nolock = Module.findExportByName("ucrtbased.dll", "_o__fputwc_nolock")
Interceptor.attach(_o__fputwc_nolock, {onLeave: function (args) {send("_o__fputwc_nolock");}});

var _o__fputwchar = Module.findExportByName("ucrtbased.dll", "_o__fputwchar")
Interceptor.attach(_o__fputwchar, {onLeave: function (args) {send("_o__fputwchar");}});

var _o__fread_nolock = Module.findExportByName("ucrtbased.dll", "_o__fread_nolock")
Interceptor.attach(_o__fread_nolock, {onLeave: function (args) {send("_o__fread_nolock");}});

var _o__fread_nolock_s = Module.findExportByName("ucrtbased.dll", "_o__fread_nolock_s")
Interceptor.attach(_o__fread_nolock_s, {onLeave: function (args) {send("_o__fread_nolock_s");}});

var _o__free_base = Module.findExportByName("ucrtbased.dll", "_o__free_base")
Interceptor.attach(_o__free_base, {onLeave: function (args) {send("_o__free_base");}});

var _o__free_locale = Module.findExportByName("ucrtbased.dll", "_o__free_locale")
Interceptor.attach(_o__free_locale, {onLeave: function (args) {send("_o__free_locale");}});

var _o__fseek_nolock = Module.findExportByName("ucrtbased.dll", "_o__fseek_nolock")
Interceptor.attach(_o__fseek_nolock, {onLeave: function (args) {send("_o__fseek_nolock");}});

var _o__fseeki64 = Module.findExportByName("ucrtbased.dll", "_o__fseeki64")
Interceptor.attach(_o__fseeki64, {onLeave: function (args) {send("_o__fseeki64");}});

var _o__fseeki64_nolock = Module.findExportByName("ucrtbased.dll", "_o__fseeki64_nolock")
Interceptor.attach(_o__fseeki64_nolock, {onLeave: function (args) {send("_o__fseeki64_nolock");}});

var _o__fsopen = Module.findExportByName("ucrtbased.dll", "_o__fsopen")
Interceptor.attach(_o__fsopen, {onLeave: function (args) {send("_o__fsopen");}});

var _o__fstat32 = Module.findExportByName("ucrtbased.dll", "_o__fstat32")
Interceptor.attach(_o__fstat32, {onLeave: function (args) {send("_o__fstat32");}});

var _o__fstat32i64 = Module.findExportByName("ucrtbased.dll", "_o__fstat32i64")
Interceptor.attach(_o__fstat32i64, {onLeave: function (args) {send("_o__fstat32i64");}});

var _o__fstat64 = Module.findExportByName("ucrtbased.dll", "_o__fstat64")
Interceptor.attach(_o__fstat64, {onLeave: function (args) {send("_o__fstat64");}});

var _o__fstat64i32 = Module.findExportByName("ucrtbased.dll", "_o__fstat64i32")
Interceptor.attach(_o__fstat64i32, {onLeave: function (args) {send("_o__fstat64i32");}});

var _o__ftell_nolock = Module.findExportByName("ucrtbased.dll", "_o__ftell_nolock")
Interceptor.attach(_o__ftell_nolock, {onLeave: function (args) {send("_o__ftell_nolock");}});

var _o__ftelli64 = Module.findExportByName("ucrtbased.dll", "_o__ftelli64")
Interceptor.attach(_o__ftelli64, {onLeave: function (args) {send("_o__ftelli64");}});

var _o__ftelli64_nolock = Module.findExportByName("ucrtbased.dll", "_o__ftelli64_nolock")
Interceptor.attach(_o__ftelli64_nolock, {onLeave: function (args) {send("_o__ftelli64_nolock");}});

var _o__ftime32 = Module.findExportByName("ucrtbased.dll", "_o__ftime32")
Interceptor.attach(_o__ftime32, {onLeave: function (args) {send("_o__ftime32");}});

var _o__ftime32_s = Module.findExportByName("ucrtbased.dll", "_o__ftime32_s")
Interceptor.attach(_o__ftime32_s, {onLeave: function (args) {send("_o__ftime32_s");}});

var _o__ftime64 = Module.findExportByName("ucrtbased.dll", "_o__ftime64")
Interceptor.attach(_o__ftime64, {onLeave: function (args) {send("_o__ftime64");}});

var _o__ftime64_s = Module.findExportByName("ucrtbased.dll", "_o__ftime64_s")
Interceptor.attach(_o__ftime64_s, {onLeave: function (args) {send("_o__ftime64_s");}});

var _o__fullpath = Module.findExportByName("ucrtbased.dll", "_o__fullpath")
Interceptor.attach(_o__fullpath, {onLeave: function (args) {send("_o__fullpath");}});

var _o__futime32 = Module.findExportByName("ucrtbased.dll", "_o__futime32")
Interceptor.attach(_o__futime32, {onLeave: function (args) {send("_o__futime32");}});

var _o__futime64 = Module.findExportByName("ucrtbased.dll", "_o__futime64")
Interceptor.attach(_o__futime64, {onLeave: function (args) {send("_o__futime64");}});

var _o__fwrite_nolock = Module.findExportByName("ucrtbased.dll", "_o__fwrite_nolock")
Interceptor.attach(_o__fwrite_nolock, {onLeave: function (args) {send("_o__fwrite_nolock");}});

var _o__gcvt = Module.findExportByName("ucrtbased.dll", "_o__gcvt")
Interceptor.attach(_o__gcvt, {onLeave: function (args) {send("_o__gcvt");}});

var _o__gcvt_s = Module.findExportByName("ucrtbased.dll", "_o__gcvt_s")
Interceptor.attach(_o__gcvt_s, {onLeave: function (args) {send("_o__gcvt_s");}});

var _o__get_daylight = Module.findExportByName("ucrtbased.dll", "_o__get_daylight")
Interceptor.attach(_o__get_daylight, {onLeave: function (args) {send("_o__get_daylight");}});

var _o__get_doserrno = Module.findExportByName("ucrtbased.dll", "_o__get_doserrno")
Interceptor.attach(_o__get_doserrno, {onLeave: function (args) {send("_o__get_doserrno");}});

var _o__get_dstbias = Module.findExportByName("ucrtbased.dll", "_o__get_dstbias")
Interceptor.attach(_o__get_dstbias, {onLeave: function (args) {send("_o__get_dstbias");}});

var _o__get_errno = Module.findExportByName("ucrtbased.dll", "_o__get_errno")
Interceptor.attach(_o__get_errno, {onLeave: function (args) {send("_o__get_errno");}});

var _o__get_fmode = Module.findExportByName("ucrtbased.dll", "_o__get_fmode")
Interceptor.attach(_o__get_fmode, {onLeave: function (args) {send("_o__get_fmode");}});

var _o__get_heap_handle = Module.findExportByName("ucrtbased.dll", "_o__get_heap_handle")
Interceptor.attach(_o__get_heap_handle, {onLeave: function (args) {send("_o__get_heap_handle");}});

var _o__get_initial_narrow_environment = Module.findExportByName("ucrtbased.dll", "_o__get_initial_narrow_environment")
Interceptor.attach(_o__get_initial_narrow_environment, {onLeave: function (args) {send("_o__get_initial_narrow_environment");}});

var _o__get_initial_wide_environment = Module.findExportByName("ucrtbased.dll", "_o__get_initial_wide_environment")
Interceptor.attach(_o__get_initial_wide_environment, {onLeave: function (args) {send("_o__get_initial_wide_environment");}});

var _o__get_invalid_parameter_handler = Module.findExportByName("ucrtbased.dll", "_o__get_invalid_parameter_handler")
Interceptor.attach(_o__get_invalid_parameter_handler, {onLeave: function (args) {send("_o__get_invalid_parameter_handler");}});

var _o__get_narrow_winmain_command_line = Module.findExportByName("ucrtbased.dll", "_o__get_narrow_winmain_command_line")
Interceptor.attach(_o__get_narrow_winmain_command_line, {onLeave: function (args) {send("_o__get_narrow_winmain_command_line");}});

var _o__get_osfhandle = Module.findExportByName("ucrtbased.dll", "_o__get_osfhandle")
Interceptor.attach(_o__get_osfhandle, {onLeave: function (args) {send("_o__get_osfhandle");}});

var _o__get_pgmptr = Module.findExportByName("ucrtbased.dll", "_o__get_pgmptr")
Interceptor.attach(_o__get_pgmptr, {onLeave: function (args) {send("_o__get_pgmptr");}});

var _o__get_stream_buffer_pointers = Module.findExportByName("ucrtbased.dll", "_o__get_stream_buffer_pointers")
Interceptor.attach(_o__get_stream_buffer_pointers, {onLeave: function (args) {send("_o__get_stream_buffer_pointers");}});

var _o__get_terminate = Module.findExportByName("ucrtbased.dll", "_o__get_terminate")
Interceptor.attach(_o__get_terminate, {onLeave: function (args) {send("_o__get_terminate");}});

var _o__get_thread_local_invalid_parameter_handler = Module.findExportByName("ucrtbased.dll", "_o__get_thread_local_invalid_parameter_handler")
Interceptor.attach(_o__get_thread_local_invalid_parameter_handler, {onLeave: function (args) {send("_o__get_thread_local_invalid_parameter_handler");}});

var _o__get_timezone = Module.findExportByName("ucrtbased.dll", "_o__get_timezone")
Interceptor.attach(_o__get_timezone, {onLeave: function (args) {send("_o__get_timezone");}});

var _o__get_tzname = Module.findExportByName("ucrtbased.dll", "_o__get_tzname")
Interceptor.attach(_o__get_tzname, {onLeave: function (args) {send("_o__get_tzname");}});

var _o__get_wide_winmain_command_line = Module.findExportByName("ucrtbased.dll", "_o__get_wide_winmain_command_line")
Interceptor.attach(_o__get_wide_winmain_command_line, {onLeave: function (args) {send("_o__get_wide_winmain_command_line");}});

var _o__get_wpgmptr = Module.findExportByName("ucrtbased.dll", "_o__get_wpgmptr")
Interceptor.attach(_o__get_wpgmptr, {onLeave: function (args) {send("_o__get_wpgmptr");}});

var _o__getc_nolock = Module.findExportByName("ucrtbased.dll", "_o__getc_nolock")
Interceptor.attach(_o__getc_nolock, {onLeave: function (args) {send("_o__getc_nolock");}});

var _o__getch = Module.findExportByName("ucrtbased.dll", "_o__getch")
Interceptor.attach(_o__getch, {onLeave: function (args) {send("_o__getch");}});

var _o__getch_nolock = Module.findExportByName("ucrtbased.dll", "_o__getch_nolock")
Interceptor.attach(_o__getch_nolock, {onLeave: function (args) {send("_o__getch_nolock");}});

var _o__getche = Module.findExportByName("ucrtbased.dll", "_o__getche")
Interceptor.attach(_o__getche, {onLeave: function (args) {send("_o__getche");}});

var _o__getche_nolock = Module.findExportByName("ucrtbased.dll", "_o__getche_nolock")
Interceptor.attach(_o__getche_nolock, {onLeave: function (args) {send("_o__getche_nolock");}});

var _o__getcwd = Module.findExportByName("ucrtbased.dll", "_o__getcwd")
Interceptor.attach(_o__getcwd, {onLeave: function (args) {send("_o__getcwd");}});

var _o__getdcwd = Module.findExportByName("ucrtbased.dll", "_o__getdcwd")
Interceptor.attach(_o__getdcwd, {onLeave: function (args) {send("_o__getdcwd");}});

var _o__getdiskfree = Module.findExportByName("ucrtbased.dll", "_o__getdiskfree")
Interceptor.attach(_o__getdiskfree, {onLeave: function (args) {send("_o__getdiskfree");}});

var _o__getdllprocaddr = Module.findExportByName("ucrtbased.dll", "_o__getdllprocaddr")
Interceptor.attach(_o__getdllprocaddr, {onLeave: function (args) {send("_o__getdllprocaddr");}});

var _o__getdrive = Module.findExportByName("ucrtbased.dll", "_o__getdrive")
Interceptor.attach(_o__getdrive, {onLeave: function (args) {send("_o__getdrive");}});

var _o__getdrives = Module.findExportByName("ucrtbased.dll", "_o__getdrives")
Interceptor.attach(_o__getdrives, {onLeave: function (args) {send("_o__getdrives");}});

var _o__getmbcp = Module.findExportByName("ucrtbased.dll", "_o__getmbcp")
Interceptor.attach(_o__getmbcp, {onLeave: function (args) {send("_o__getmbcp");}});

var _o__getsystime = Module.findExportByName("ucrtbased.dll", "_o__getsystime")
Interceptor.attach(_o__getsystime, {onLeave: function (args) {send("_o__getsystime");}});

var _o__getw = Module.findExportByName("ucrtbased.dll", "_o__getw")
Interceptor.attach(_o__getw, {onLeave: function (args) {send("_o__getw");}});

var _o__getwc_nolock = Module.findExportByName("ucrtbased.dll", "_o__getwc_nolock")
Interceptor.attach(_o__getwc_nolock, {onLeave: function (args) {send("_o__getwc_nolock");}});

var _o__getwch = Module.findExportByName("ucrtbased.dll", "_o__getwch")
Interceptor.attach(_o__getwch, {onLeave: function (args) {send("_o__getwch");}});

var _o__getwch_nolock = Module.findExportByName("ucrtbased.dll", "_o__getwch_nolock")
Interceptor.attach(_o__getwch_nolock, {onLeave: function (args) {send("_o__getwch_nolock");}});

var _o__getwche = Module.findExportByName("ucrtbased.dll", "_o__getwche")
Interceptor.attach(_o__getwche, {onLeave: function (args) {send("_o__getwche");}});

var _o__getwche_nolock = Module.findExportByName("ucrtbased.dll", "_o__getwche_nolock")
Interceptor.attach(_o__getwche_nolock, {onLeave: function (args) {send("_o__getwche_nolock");}});

var _o__getws = Module.findExportByName("ucrtbased.dll", "_o__getws")
Interceptor.attach(_o__getws, {onLeave: function (args) {send("_o__getws");}});

var _o__getws_s = Module.findExportByName("ucrtbased.dll", "_o__getws_s")
Interceptor.attach(_o__getws_s, {onLeave: function (args) {send("_o__getws_s");}});

var _o__gmtime32 = Module.findExportByName("ucrtbased.dll", "_o__gmtime32")
Interceptor.attach(_o__gmtime32, {onLeave: function (args) {send("_o__gmtime32");}});

var _o__gmtime32_s = Module.findExportByName("ucrtbased.dll", "_o__gmtime32_s")
Interceptor.attach(_o__gmtime32_s, {onLeave: function (args) {send("_o__gmtime32_s");}});

var _o__gmtime64 = Module.findExportByName("ucrtbased.dll", "_o__gmtime64")
Interceptor.attach(_o__gmtime64, {onLeave: function (args) {send("_o__gmtime64");}});

var _o__gmtime64_s = Module.findExportByName("ucrtbased.dll", "_o__gmtime64_s")
Interceptor.attach(_o__gmtime64_s, {onLeave: function (args) {send("_o__gmtime64_s");}});

var _o__heapchk = Module.findExportByName("ucrtbased.dll", "_o__heapchk")
Interceptor.attach(_o__heapchk, {onLeave: function (args) {send("_o__heapchk");}});

var _o__heapmin = Module.findExportByName("ucrtbased.dll", "_o__heapmin")
Interceptor.attach(_o__heapmin, {onLeave: function (args) {send("_o__heapmin");}});

var _o__hypot = Module.findExportByName("ucrtbased.dll", "_o__hypot")
Interceptor.attach(_o__hypot, {onLeave: function (args) {send("_o__hypot");}});

var _o__hypotf = Module.findExportByName("ucrtbased.dll", "_o__hypotf")
Interceptor.attach(_o__hypotf, {onLeave: function (args) {send("_o__hypotf");}});

var _o__i64toa = Module.findExportByName("ucrtbased.dll", "_o__i64toa")
Interceptor.attach(_o__i64toa, {onLeave: function (args) {send("_o__i64toa");}});

var _o__i64toa_s = Module.findExportByName("ucrtbased.dll", "_o__i64toa_s")
Interceptor.attach(_o__i64toa_s, {onLeave: function (args) {send("_o__i64toa_s");}});

var _o__i64tow = Module.findExportByName("ucrtbased.dll", "_o__i64tow")
Interceptor.attach(_o__i64tow, {onLeave: function (args) {send("_o__i64tow");}});

var _o__i64tow_s = Module.findExportByName("ucrtbased.dll", "_o__i64tow_s")
Interceptor.attach(_o__i64tow_s, {onLeave: function (args) {send("_o__i64tow_s");}});

var _o__initialize_narrow_environment = Module.findExportByName("ucrtbased.dll", "_o__initialize_narrow_environment")
Interceptor.attach(_o__initialize_narrow_environment, {onLeave: function (args) {send("_o__initialize_narrow_environment");}});

var _o__initialize_onexit_table = Module.findExportByName("ucrtbased.dll", "_o__initialize_onexit_table")
Interceptor.attach(_o__initialize_onexit_table, {onLeave: function (args) {send("_o__initialize_onexit_table");}});

var _o__initialize_wide_environment = Module.findExportByName("ucrtbased.dll", "_o__initialize_wide_environment")
Interceptor.attach(_o__initialize_wide_environment, {onLeave: function (args) {send("_o__initialize_wide_environment");}});

var _o__invalid_parameter_noinfo = Module.findExportByName("ucrtbased.dll", "_o__invalid_parameter_noinfo")
Interceptor.attach(_o__invalid_parameter_noinfo, {onLeave: function (args) {send("_o__invalid_parameter_noinfo");}});

var _o__invalid_parameter_noinfo_noreturn = Module.findExportByName("ucrtbased.dll", "_o__invalid_parameter_noinfo_noreturn")
Interceptor.attach(_o__invalid_parameter_noinfo_noreturn, {onLeave: function (args) {send("_o__invalid_parameter_noinfo_noreturn");}});

var _o__isatty = Module.findExportByName("ucrtbased.dll", "_o__isatty")
Interceptor.attach(_o__isatty, {onLeave: function (args) {send("_o__isatty");}});

var _o__isctype = Module.findExportByName("ucrtbased.dll", "_o__isctype")
Interceptor.attach(_o__isctype, {onLeave: function (args) {send("_o__isctype");}});

var _o__isctype_l = Module.findExportByName("ucrtbased.dll", "_o__isctype_l")
Interceptor.attach(_o__isctype_l, {onLeave: function (args) {send("_o__isctype_l");}});

var _o__isleadbyte_l = Module.findExportByName("ucrtbased.dll", "_o__isleadbyte_l")
Interceptor.attach(_o__isleadbyte_l, {onLeave: function (args) {send("_o__isleadbyte_l");}});

var _o__ismbbalnum = Module.findExportByName("ucrtbased.dll", "_o__ismbbalnum")
Interceptor.attach(_o__ismbbalnum, {onLeave: function (args) {send("_o__ismbbalnum");}});

var _o__ismbbalnum_l = Module.findExportByName("ucrtbased.dll", "_o__ismbbalnum_l")
Interceptor.attach(_o__ismbbalnum_l, {onLeave: function (args) {send("_o__ismbbalnum_l");}});

var _o__ismbbalpha = Module.findExportByName("ucrtbased.dll", "_o__ismbbalpha")
Interceptor.attach(_o__ismbbalpha, {onLeave: function (args) {send("_o__ismbbalpha");}});

var _o__ismbbalpha_l = Module.findExportByName("ucrtbased.dll", "_o__ismbbalpha_l")
Interceptor.attach(_o__ismbbalpha_l, {onLeave: function (args) {send("_o__ismbbalpha_l");}});

var _o__ismbbblank = Module.findExportByName("ucrtbased.dll", "_o__ismbbblank")
Interceptor.attach(_o__ismbbblank, {onLeave: function (args) {send("_o__ismbbblank");}});

var _o__ismbbblank_l = Module.findExportByName("ucrtbased.dll", "_o__ismbbblank_l")
Interceptor.attach(_o__ismbbblank_l, {onLeave: function (args) {send("_o__ismbbblank_l");}});

var _o__ismbbgraph = Module.findExportByName("ucrtbased.dll", "_o__ismbbgraph")
Interceptor.attach(_o__ismbbgraph, {onLeave: function (args) {send("_o__ismbbgraph");}});

var _o__ismbbgraph_l = Module.findExportByName("ucrtbased.dll", "_o__ismbbgraph_l")
Interceptor.attach(_o__ismbbgraph_l, {onLeave: function (args) {send("_o__ismbbgraph_l");}});

var _o__ismbbkalnum = Module.findExportByName("ucrtbased.dll", "_o__ismbbkalnum")
Interceptor.attach(_o__ismbbkalnum, {onLeave: function (args) {send("_o__ismbbkalnum");}});

var _o__ismbbkalnum_l = Module.findExportByName("ucrtbased.dll", "_o__ismbbkalnum_l")
Interceptor.attach(_o__ismbbkalnum_l, {onLeave: function (args) {send("_o__ismbbkalnum_l");}});

var _o__ismbbkana = Module.findExportByName("ucrtbased.dll", "_o__ismbbkana")
Interceptor.attach(_o__ismbbkana, {onLeave: function (args) {send("_o__ismbbkana");}});

var _o__ismbbkana_l = Module.findExportByName("ucrtbased.dll", "_o__ismbbkana_l")
Interceptor.attach(_o__ismbbkana_l, {onLeave: function (args) {send("_o__ismbbkana_l");}});

var _o__ismbbkprint = Module.findExportByName("ucrtbased.dll", "_o__ismbbkprint")
Interceptor.attach(_o__ismbbkprint, {onLeave: function (args) {send("_o__ismbbkprint");}});

var _o__ismbbkprint_l = Module.findExportByName("ucrtbased.dll", "_o__ismbbkprint_l")
Interceptor.attach(_o__ismbbkprint_l, {onLeave: function (args) {send("_o__ismbbkprint_l");}});

var _o__ismbbkpunct = Module.findExportByName("ucrtbased.dll", "_o__ismbbkpunct")
Interceptor.attach(_o__ismbbkpunct, {onLeave: function (args) {send("_o__ismbbkpunct");}});

var _o__ismbbkpunct_l = Module.findExportByName("ucrtbased.dll", "_o__ismbbkpunct_l")
Interceptor.attach(_o__ismbbkpunct_l, {onLeave: function (args) {send("_o__ismbbkpunct_l");}});

var _o__ismbblead = Module.findExportByName("ucrtbased.dll", "_o__ismbblead")
Interceptor.attach(_o__ismbblead, {onLeave: function (args) {send("_o__ismbblead");}});

var _o__ismbblead_l = Module.findExportByName("ucrtbased.dll", "_o__ismbblead_l")
Interceptor.attach(_o__ismbblead_l, {onLeave: function (args) {send("_o__ismbblead_l");}});

var _o__ismbbprint = Module.findExportByName("ucrtbased.dll", "_o__ismbbprint")
Interceptor.attach(_o__ismbbprint, {onLeave: function (args) {send("_o__ismbbprint");}});

var _o__ismbbprint_l = Module.findExportByName("ucrtbased.dll", "_o__ismbbprint_l")
Interceptor.attach(_o__ismbbprint_l, {onLeave: function (args) {send("_o__ismbbprint_l");}});

var _o__ismbbpunct = Module.findExportByName("ucrtbased.dll", "_o__ismbbpunct")
Interceptor.attach(_o__ismbbpunct, {onLeave: function (args) {send("_o__ismbbpunct");}});

var _o__ismbbpunct_l = Module.findExportByName("ucrtbased.dll", "_o__ismbbpunct_l")
Interceptor.attach(_o__ismbbpunct_l, {onLeave: function (args) {send("_o__ismbbpunct_l");}});

var _o__ismbbtrail = Module.findExportByName("ucrtbased.dll", "_o__ismbbtrail")
Interceptor.attach(_o__ismbbtrail, {onLeave: function (args) {send("_o__ismbbtrail");}});

var _o__ismbbtrail_l = Module.findExportByName("ucrtbased.dll", "_o__ismbbtrail_l")
Interceptor.attach(_o__ismbbtrail_l, {onLeave: function (args) {send("_o__ismbbtrail_l");}});

var _o__ismbcalnum = Module.findExportByName("ucrtbased.dll", "_o__ismbcalnum")
Interceptor.attach(_o__ismbcalnum, {onLeave: function (args) {send("_o__ismbcalnum");}});

var _o__ismbcalnum_l = Module.findExportByName("ucrtbased.dll", "_o__ismbcalnum_l")
Interceptor.attach(_o__ismbcalnum_l, {onLeave: function (args) {send("_o__ismbcalnum_l");}});

var _o__ismbcalpha = Module.findExportByName("ucrtbased.dll", "_o__ismbcalpha")
Interceptor.attach(_o__ismbcalpha, {onLeave: function (args) {send("_o__ismbcalpha");}});

var _o__ismbcalpha_l = Module.findExportByName("ucrtbased.dll", "_o__ismbcalpha_l")
Interceptor.attach(_o__ismbcalpha_l, {onLeave: function (args) {send("_o__ismbcalpha_l");}});

var _o__ismbcblank = Module.findExportByName("ucrtbased.dll", "_o__ismbcblank")
Interceptor.attach(_o__ismbcblank, {onLeave: function (args) {send("_o__ismbcblank");}});

var _o__ismbcblank_l = Module.findExportByName("ucrtbased.dll", "_o__ismbcblank_l")
Interceptor.attach(_o__ismbcblank_l, {onLeave: function (args) {send("_o__ismbcblank_l");}});

var _o__ismbcdigit = Module.findExportByName("ucrtbased.dll", "_o__ismbcdigit")
Interceptor.attach(_o__ismbcdigit, {onLeave: function (args) {send("_o__ismbcdigit");}});

var _o__ismbcdigit_l = Module.findExportByName("ucrtbased.dll", "_o__ismbcdigit_l")
Interceptor.attach(_o__ismbcdigit_l, {onLeave: function (args) {send("_o__ismbcdigit_l");}});

var _o__ismbcgraph = Module.findExportByName("ucrtbased.dll", "_o__ismbcgraph")
Interceptor.attach(_o__ismbcgraph, {onLeave: function (args) {send("_o__ismbcgraph");}});

var _o__ismbcgraph_l = Module.findExportByName("ucrtbased.dll", "_o__ismbcgraph_l")
Interceptor.attach(_o__ismbcgraph_l, {onLeave: function (args) {send("_o__ismbcgraph_l");}});

var _o__ismbchira = Module.findExportByName("ucrtbased.dll", "_o__ismbchira")
Interceptor.attach(_o__ismbchira, {onLeave: function (args) {send("_o__ismbchira");}});

var _o__ismbchira_l = Module.findExportByName("ucrtbased.dll", "_o__ismbchira_l")
Interceptor.attach(_o__ismbchira_l, {onLeave: function (args) {send("_o__ismbchira_l");}});

var _o__ismbckata = Module.findExportByName("ucrtbased.dll", "_o__ismbckata")
Interceptor.attach(_o__ismbckata, {onLeave: function (args) {send("_o__ismbckata");}});

var _o__ismbckata_l = Module.findExportByName("ucrtbased.dll", "_o__ismbckata_l")
Interceptor.attach(_o__ismbckata_l, {onLeave: function (args) {send("_o__ismbckata_l");}});

var _o__ismbcl0 = Module.findExportByName("ucrtbased.dll", "_o__ismbcl0")
Interceptor.attach(_o__ismbcl0, {onLeave: function (args) {send("_o__ismbcl0");}});

var _o__ismbcl0_l = Module.findExportByName("ucrtbased.dll", "_o__ismbcl0_l")
Interceptor.attach(_o__ismbcl0_l, {onLeave: function (args) {send("_o__ismbcl0_l");}});

var _o__ismbcl1 = Module.findExportByName("ucrtbased.dll", "_o__ismbcl1")
Interceptor.attach(_o__ismbcl1, {onLeave: function (args) {send("_o__ismbcl1");}});

var _o__ismbcl1_l = Module.findExportByName("ucrtbased.dll", "_o__ismbcl1_l")
Interceptor.attach(_o__ismbcl1_l, {onLeave: function (args) {send("_o__ismbcl1_l");}});

var _o__ismbcl2 = Module.findExportByName("ucrtbased.dll", "_o__ismbcl2")
Interceptor.attach(_o__ismbcl2, {onLeave: function (args) {send("_o__ismbcl2");}});

var _o__ismbcl2_l = Module.findExportByName("ucrtbased.dll", "_o__ismbcl2_l")
Interceptor.attach(_o__ismbcl2_l, {onLeave: function (args) {send("_o__ismbcl2_l");}});

var _o__ismbclegal = Module.findExportByName("ucrtbased.dll", "_o__ismbclegal")
Interceptor.attach(_o__ismbclegal, {onLeave: function (args) {send("_o__ismbclegal");}});

var _o__ismbclegal_l = Module.findExportByName("ucrtbased.dll", "_o__ismbclegal_l")
Interceptor.attach(_o__ismbclegal_l, {onLeave: function (args) {send("_o__ismbclegal_l");}});

var _o__ismbclower = Module.findExportByName("ucrtbased.dll", "_o__ismbclower")
Interceptor.attach(_o__ismbclower, {onLeave: function (args) {send("_o__ismbclower");}});

var _o__ismbclower_l = Module.findExportByName("ucrtbased.dll", "_o__ismbclower_l")
Interceptor.attach(_o__ismbclower_l, {onLeave: function (args) {send("_o__ismbclower_l");}});

var _o__ismbcprint = Module.findExportByName("ucrtbased.dll", "_o__ismbcprint")
Interceptor.attach(_o__ismbcprint, {onLeave: function (args) {send("_o__ismbcprint");}});

var _o__ismbcprint_l = Module.findExportByName("ucrtbased.dll", "_o__ismbcprint_l")
Interceptor.attach(_o__ismbcprint_l, {onLeave: function (args) {send("_o__ismbcprint_l");}});

var _o__ismbcpunct = Module.findExportByName("ucrtbased.dll", "_o__ismbcpunct")
Interceptor.attach(_o__ismbcpunct, {onLeave: function (args) {send("_o__ismbcpunct");}});

var _o__ismbcpunct_l = Module.findExportByName("ucrtbased.dll", "_o__ismbcpunct_l")
Interceptor.attach(_o__ismbcpunct_l, {onLeave: function (args) {send("_o__ismbcpunct_l");}});

var _o__ismbcspace = Module.findExportByName("ucrtbased.dll", "_o__ismbcspace")
Interceptor.attach(_o__ismbcspace, {onLeave: function (args) {send("_o__ismbcspace");}});

var _o__ismbcspace_l = Module.findExportByName("ucrtbased.dll", "_o__ismbcspace_l")
Interceptor.attach(_o__ismbcspace_l, {onLeave: function (args) {send("_o__ismbcspace_l");}});

var _o__ismbcsymbol = Module.findExportByName("ucrtbased.dll", "_o__ismbcsymbol")
Interceptor.attach(_o__ismbcsymbol, {onLeave: function (args) {send("_o__ismbcsymbol");}});

var _o__ismbcsymbol_l = Module.findExportByName("ucrtbased.dll", "_o__ismbcsymbol_l")
Interceptor.attach(_o__ismbcsymbol_l, {onLeave: function (args) {send("_o__ismbcsymbol_l");}});

var _o__ismbcupper = Module.findExportByName("ucrtbased.dll", "_o__ismbcupper")
Interceptor.attach(_o__ismbcupper, {onLeave: function (args) {send("_o__ismbcupper");}});

var _o__ismbcupper_l = Module.findExportByName("ucrtbased.dll", "_o__ismbcupper_l")
Interceptor.attach(_o__ismbcupper_l, {onLeave: function (args) {send("_o__ismbcupper_l");}});

var _o__ismbslead = Module.findExportByName("ucrtbased.dll", "_o__ismbslead")
Interceptor.attach(_o__ismbslead, {onLeave: function (args) {send("_o__ismbslead");}});

var _o__ismbslead_l = Module.findExportByName("ucrtbased.dll", "_o__ismbslead_l")
Interceptor.attach(_o__ismbslead_l, {onLeave: function (args) {send("_o__ismbslead_l");}});

var _o__ismbstrail = Module.findExportByName("ucrtbased.dll", "_o__ismbstrail")
Interceptor.attach(_o__ismbstrail, {onLeave: function (args) {send("_o__ismbstrail");}});

var _o__ismbstrail_l = Module.findExportByName("ucrtbased.dll", "_o__ismbstrail_l")
Interceptor.attach(_o__ismbstrail_l, {onLeave: function (args) {send("_o__ismbstrail_l");}});

var _o__iswctype_l = Module.findExportByName("ucrtbased.dll", "_o__iswctype_l")
Interceptor.attach(_o__iswctype_l, {onLeave: function (args) {send("_o__iswctype_l");}});

var _o__itoa = Module.findExportByName("ucrtbased.dll", "_o__itoa")
Interceptor.attach(_o__itoa, {onLeave: function (args) {send("_o__itoa");}});

var _o__itoa_s = Module.findExportByName("ucrtbased.dll", "_o__itoa_s")
Interceptor.attach(_o__itoa_s, {onLeave: function (args) {send("_o__itoa_s");}});

var _o__itow = Module.findExportByName("ucrtbased.dll", "_o__itow")
Interceptor.attach(_o__itow, {onLeave: function (args) {send("_o__itow");}});

var _o__itow_s = Module.findExportByName("ucrtbased.dll", "_o__itow_s")
Interceptor.attach(_o__itow_s, {onLeave: function (args) {send("_o__itow_s");}});

var _o__j0 = Module.findExportByName("ucrtbased.dll", "_o__j0")
Interceptor.attach(_o__j0, {onLeave: function (args) {send("_o__j0");}});

var _o__j1 = Module.findExportByName("ucrtbased.dll", "_o__j1")
Interceptor.attach(_o__j1, {onLeave: function (args) {send("_o__j1");}});

var _o__jn = Module.findExportByName("ucrtbased.dll", "_o__jn")
Interceptor.attach(_o__jn, {onLeave: function (args) {send("_o__jn");}});

var _o__kbhit = Module.findExportByName("ucrtbased.dll", "_o__kbhit")
Interceptor.attach(_o__kbhit, {onLeave: function (args) {send("_o__kbhit");}});

var _o__ld_int = Module.findExportByName("ucrtbased.dll", "_o__ld_int")
Interceptor.attach(_o__ld_int, {onLeave: function (args) {send("_o__ld_int");}});

var _o__ldclass = Module.findExportByName("ucrtbased.dll", "_o__ldclass")
Interceptor.attach(_o__ldclass, {onLeave: function (args) {send("_o__ldclass");}});

var _o__ldexp = Module.findExportByName("ucrtbased.dll", "_o__ldexp")
Interceptor.attach(_o__ldexp, {onLeave: function (args) {send("_o__ldexp");}});

var _o__ldlog = Module.findExportByName("ucrtbased.dll", "_o__ldlog")
Interceptor.attach(_o__ldlog, {onLeave: function (args) {send("_o__ldlog");}});

var _o__ldpcomp = Module.findExportByName("ucrtbased.dll", "_o__ldpcomp")
Interceptor.attach(_o__ldpcomp, {onLeave: function (args) {send("_o__ldpcomp");}});

var _o__ldpoly = Module.findExportByName("ucrtbased.dll", "_o__ldpoly")
Interceptor.attach(_o__ldpoly, {onLeave: function (args) {send("_o__ldpoly");}});

var _o__ldscale = Module.findExportByName("ucrtbased.dll", "_o__ldscale")
Interceptor.attach(_o__ldscale, {onLeave: function (args) {send("_o__ldscale");}});

var _o__ldsign = Module.findExportByName("ucrtbased.dll", "_o__ldsign")
Interceptor.attach(_o__ldsign, {onLeave: function (args) {send("_o__ldsign");}});

var _o__ldsin = Module.findExportByName("ucrtbased.dll", "_o__ldsin")
Interceptor.attach(_o__ldsin, {onLeave: function (args) {send("_o__ldsin");}});

var _o__ldtest = Module.findExportByName("ucrtbased.dll", "_o__ldtest")
Interceptor.attach(_o__ldtest, {onLeave: function (args) {send("_o__ldtest");}});

var _o__ldunscale = Module.findExportByName("ucrtbased.dll", "_o__ldunscale")
Interceptor.attach(_o__ldunscale, {onLeave: function (args) {send("_o__ldunscale");}});

var _o__lfind = Module.findExportByName("ucrtbased.dll", "_o__lfind")
Interceptor.attach(_o__lfind, {onLeave: function (args) {send("_o__lfind");}});

var _o__lfind_s = Module.findExportByName("ucrtbased.dll", "_o__lfind_s")
Interceptor.attach(_o__lfind_s, {onLeave: function (args) {send("_o__lfind_s");}});

var _o__loaddll = Module.findExportByName("ucrtbased.dll", "_o__loaddll")
Interceptor.attach(_o__loaddll, {onLeave: function (args) {send("_o__loaddll");}});

var _o__localtime32 = Module.findExportByName("ucrtbased.dll", "_o__localtime32")
Interceptor.attach(_o__localtime32, {onLeave: function (args) {send("_o__localtime32");}});

var _o__localtime32_s = Module.findExportByName("ucrtbased.dll", "_o__localtime32_s")
Interceptor.attach(_o__localtime32_s, {onLeave: function (args) {send("_o__localtime32_s");}});

var _o__localtime64 = Module.findExportByName("ucrtbased.dll", "_o__localtime64")
Interceptor.attach(_o__localtime64, {onLeave: function (args) {send("_o__localtime64");}});

var _o__localtime64_s = Module.findExportByName("ucrtbased.dll", "_o__localtime64_s")
Interceptor.attach(_o__localtime64_s, {onLeave: function (args) {send("_o__localtime64_s");}});

var _o__lock_file = Module.findExportByName("ucrtbased.dll", "_o__lock_file")
Interceptor.attach(_o__lock_file, {onLeave: function (args) {send("_o__lock_file");}});

var _o__locking = Module.findExportByName("ucrtbased.dll", "_o__locking")
Interceptor.attach(_o__locking, {onLeave: function (args) {send("_o__locking");}});

var _o__logb = Module.findExportByName("ucrtbased.dll", "_o__logb")
Interceptor.attach(_o__logb, {onLeave: function (args) {send("_o__logb");}});

var _o__logbf = Module.findExportByName("ucrtbased.dll", "_o__logbf")
Interceptor.attach(_o__logbf, {onLeave: function (args) {send("_o__logbf");}});

var _o__lsearch = Module.findExportByName("ucrtbased.dll", "_o__lsearch")
Interceptor.attach(_o__lsearch, {onLeave: function (args) {send("_o__lsearch");}});

var _o__lsearch_s = Module.findExportByName("ucrtbased.dll", "_o__lsearch_s")
Interceptor.attach(_o__lsearch_s, {onLeave: function (args) {send("_o__lsearch_s");}});

var _o__lseek = Module.findExportByName("ucrtbased.dll", "_o__lseek")
Interceptor.attach(_o__lseek, {onLeave: function (args) {send("_o__lseek");}});

var _o__lseeki64 = Module.findExportByName("ucrtbased.dll", "_o__lseeki64")
Interceptor.attach(_o__lseeki64, {onLeave: function (args) {send("_o__lseeki64");}});

var _o__ltoa = Module.findExportByName("ucrtbased.dll", "_o__ltoa")
Interceptor.attach(_o__ltoa, {onLeave: function (args) {send("_o__ltoa");}});

var _o__ltoa_s = Module.findExportByName("ucrtbased.dll", "_o__ltoa_s")
Interceptor.attach(_o__ltoa_s, {onLeave: function (args) {send("_o__ltoa_s");}});

var _o__ltow = Module.findExportByName("ucrtbased.dll", "_o__ltow")
Interceptor.attach(_o__ltow, {onLeave: function (args) {send("_o__ltow");}});

var _o__ltow_s = Module.findExportByName("ucrtbased.dll", "_o__ltow_s")
Interceptor.attach(_o__ltow_s, {onLeave: function (args) {send("_o__ltow_s");}});

var _o__makepath = Module.findExportByName("ucrtbased.dll", "_o__makepath")
Interceptor.attach(_o__makepath, {onLeave: function (args) {send("_o__makepath");}});

var _o__makepath_s = Module.findExportByName("ucrtbased.dll", "_o__makepath_s")
Interceptor.attach(_o__makepath_s, {onLeave: function (args) {send("_o__makepath_s");}});

var _o__malloc_base = Module.findExportByName("ucrtbased.dll", "_o__malloc_base")
Interceptor.attach(_o__malloc_base, {onLeave: function (args) {send("_o__malloc_base");}});

var _o__mbbtombc = Module.findExportByName("ucrtbased.dll", "_o__mbbtombc")
Interceptor.attach(_o__mbbtombc, {onLeave: function (args) {send("_o__mbbtombc");}});

var _o__mbbtombc_l = Module.findExportByName("ucrtbased.dll", "_o__mbbtombc_l")
Interceptor.attach(_o__mbbtombc_l, {onLeave: function (args) {send("_o__mbbtombc_l");}});

var _o__mbbtype = Module.findExportByName("ucrtbased.dll", "_o__mbbtype")
Interceptor.attach(_o__mbbtype, {onLeave: function (args) {send("_o__mbbtype");}});

var _o__mbbtype_l = Module.findExportByName("ucrtbased.dll", "_o__mbbtype_l")
Interceptor.attach(_o__mbbtype_l, {onLeave: function (args) {send("_o__mbbtype_l");}});

var _o__mbccpy = Module.findExportByName("ucrtbased.dll", "_o__mbccpy")
Interceptor.attach(_o__mbccpy, {onLeave: function (args) {send("_o__mbccpy");}});

var _o__mbccpy_l = Module.findExportByName("ucrtbased.dll", "_o__mbccpy_l")
Interceptor.attach(_o__mbccpy_l, {onLeave: function (args) {send("_o__mbccpy_l");}});

var _o__mbccpy_s = Module.findExportByName("ucrtbased.dll", "_o__mbccpy_s")
Interceptor.attach(_o__mbccpy_s, {onLeave: function (args) {send("_o__mbccpy_s");}});

var _o__mbccpy_s_l = Module.findExportByName("ucrtbased.dll", "_o__mbccpy_s_l")
Interceptor.attach(_o__mbccpy_s_l, {onLeave: function (args) {send("_o__mbccpy_s_l");}});

var _o__mbcjistojms = Module.findExportByName("ucrtbased.dll", "_o__mbcjistojms")
Interceptor.attach(_o__mbcjistojms, {onLeave: function (args) {send("_o__mbcjistojms");}});

var _o__mbcjistojms_l = Module.findExportByName("ucrtbased.dll", "_o__mbcjistojms_l")
Interceptor.attach(_o__mbcjistojms_l, {onLeave: function (args) {send("_o__mbcjistojms_l");}});

var _o__mbcjmstojis = Module.findExportByName("ucrtbased.dll", "_o__mbcjmstojis")
Interceptor.attach(_o__mbcjmstojis, {onLeave: function (args) {send("_o__mbcjmstojis");}});

var _o__mbcjmstojis_l = Module.findExportByName("ucrtbased.dll", "_o__mbcjmstojis_l")
Interceptor.attach(_o__mbcjmstojis_l, {onLeave: function (args) {send("_o__mbcjmstojis_l");}});

var _o__mbclen = Module.findExportByName("ucrtbased.dll", "_o__mbclen")
Interceptor.attach(_o__mbclen, {onLeave: function (args) {send("_o__mbclen");}});

var _o__mbclen_l = Module.findExportByName("ucrtbased.dll", "_o__mbclen_l")
Interceptor.attach(_o__mbclen_l, {onLeave: function (args) {send("_o__mbclen_l");}});

var _o__mbctohira = Module.findExportByName("ucrtbased.dll", "_o__mbctohira")
Interceptor.attach(_o__mbctohira, {onLeave: function (args) {send("_o__mbctohira");}});

var _o__mbctohira_l = Module.findExportByName("ucrtbased.dll", "_o__mbctohira_l")
Interceptor.attach(_o__mbctohira_l, {onLeave: function (args) {send("_o__mbctohira_l");}});

var _o__mbctokata = Module.findExportByName("ucrtbased.dll", "_o__mbctokata")
Interceptor.attach(_o__mbctokata, {onLeave: function (args) {send("_o__mbctokata");}});

var _o__mbctokata_l = Module.findExportByName("ucrtbased.dll", "_o__mbctokata_l")
Interceptor.attach(_o__mbctokata_l, {onLeave: function (args) {send("_o__mbctokata_l");}});

var _o__mbctolower = Module.findExportByName("ucrtbased.dll", "_o__mbctolower")
Interceptor.attach(_o__mbctolower, {onLeave: function (args) {send("_o__mbctolower");}});

var _o__mbctolower_l = Module.findExportByName("ucrtbased.dll", "_o__mbctolower_l")
Interceptor.attach(_o__mbctolower_l, {onLeave: function (args) {send("_o__mbctolower_l");}});

var _o__mbctombb = Module.findExportByName("ucrtbased.dll", "_o__mbctombb")
Interceptor.attach(_o__mbctombb, {onLeave: function (args) {send("_o__mbctombb");}});

var _o__mbctombb_l = Module.findExportByName("ucrtbased.dll", "_o__mbctombb_l")
Interceptor.attach(_o__mbctombb_l, {onLeave: function (args) {send("_o__mbctombb_l");}});

var _o__mbctoupper = Module.findExportByName("ucrtbased.dll", "_o__mbctoupper")
Interceptor.attach(_o__mbctoupper, {onLeave: function (args) {send("_o__mbctoupper");}});

var _o__mbctoupper_l = Module.findExportByName("ucrtbased.dll", "_o__mbctoupper_l")
Interceptor.attach(_o__mbctoupper_l, {onLeave: function (args) {send("_o__mbctoupper_l");}});

var _o__mblen_l = Module.findExportByName("ucrtbased.dll", "_o__mblen_l")
Interceptor.attach(_o__mblen_l, {onLeave: function (args) {send("_o__mblen_l");}});

var _o__mbsbtype = Module.findExportByName("ucrtbased.dll", "_o__mbsbtype")
Interceptor.attach(_o__mbsbtype, {onLeave: function (args) {send("_o__mbsbtype");}});

var _o__mbsbtype_l = Module.findExportByName("ucrtbased.dll", "_o__mbsbtype_l")
Interceptor.attach(_o__mbsbtype_l, {onLeave: function (args) {send("_o__mbsbtype_l");}});

var _o__mbscat_s = Module.findExportByName("ucrtbased.dll", "_o__mbscat_s")
Interceptor.attach(_o__mbscat_s, {onLeave: function (args) {send("_o__mbscat_s");}});

var _o__mbscat_s_l = Module.findExportByName("ucrtbased.dll", "_o__mbscat_s_l")
Interceptor.attach(_o__mbscat_s_l, {onLeave: function (args) {send("_o__mbscat_s_l");}});

var _o__mbschr = Module.findExportByName("ucrtbased.dll", "_o__mbschr")
Interceptor.attach(_o__mbschr, {onLeave: function (args) {send("_o__mbschr");}});

var _o__mbschr_l = Module.findExportByName("ucrtbased.dll", "_o__mbschr_l")
Interceptor.attach(_o__mbschr_l, {onLeave: function (args) {send("_o__mbschr_l");}});

var _o__mbscmp = Module.findExportByName("ucrtbased.dll", "_o__mbscmp")
Interceptor.attach(_o__mbscmp, {onLeave: function (args) {send("_o__mbscmp");}});

var _o__mbscmp_l = Module.findExportByName("ucrtbased.dll", "_o__mbscmp_l")
Interceptor.attach(_o__mbscmp_l, {onLeave: function (args) {send("_o__mbscmp_l");}});

var _o__mbscoll = Module.findExportByName("ucrtbased.dll", "_o__mbscoll")
Interceptor.attach(_o__mbscoll, {onLeave: function (args) {send("_o__mbscoll");}});

var _o__mbscoll_l = Module.findExportByName("ucrtbased.dll", "_o__mbscoll_l")
Interceptor.attach(_o__mbscoll_l, {onLeave: function (args) {send("_o__mbscoll_l");}});

var _o__mbscpy_s = Module.findExportByName("ucrtbased.dll", "_o__mbscpy_s")
Interceptor.attach(_o__mbscpy_s, {onLeave: function (args) {send("_o__mbscpy_s");}});

var _o__mbscpy_s_l = Module.findExportByName("ucrtbased.dll", "_o__mbscpy_s_l")
Interceptor.attach(_o__mbscpy_s_l, {onLeave: function (args) {send("_o__mbscpy_s_l");}});

var _o__mbscspn = Module.findExportByName("ucrtbased.dll", "_o__mbscspn")
Interceptor.attach(_o__mbscspn, {onLeave: function (args) {send("_o__mbscspn");}});

var _o__mbscspn_l = Module.findExportByName("ucrtbased.dll", "_o__mbscspn_l")
Interceptor.attach(_o__mbscspn_l, {onLeave: function (args) {send("_o__mbscspn_l");}});

var _o__mbsdec = Module.findExportByName("ucrtbased.dll", "_o__mbsdec")
Interceptor.attach(_o__mbsdec, {onLeave: function (args) {send("_o__mbsdec");}});

var _o__mbsdec_l = Module.findExportByName("ucrtbased.dll", "_o__mbsdec_l")
Interceptor.attach(_o__mbsdec_l, {onLeave: function (args) {send("_o__mbsdec_l");}});

var _o__mbsicmp = Module.findExportByName("ucrtbased.dll", "_o__mbsicmp")
Interceptor.attach(_o__mbsicmp, {onLeave: function (args) {send("_o__mbsicmp");}});

var _o__mbsicmp_l = Module.findExportByName("ucrtbased.dll", "_o__mbsicmp_l")
Interceptor.attach(_o__mbsicmp_l, {onLeave: function (args) {send("_o__mbsicmp_l");}});

var _o__mbsicoll = Module.findExportByName("ucrtbased.dll", "_o__mbsicoll")
Interceptor.attach(_o__mbsicoll, {onLeave: function (args) {send("_o__mbsicoll");}});

var _o__mbsicoll_l = Module.findExportByName("ucrtbased.dll", "_o__mbsicoll_l")
Interceptor.attach(_o__mbsicoll_l, {onLeave: function (args) {send("_o__mbsicoll_l");}});

var _o__mbsinc = Module.findExportByName("ucrtbased.dll", "_o__mbsinc")
Interceptor.attach(_o__mbsinc, {onLeave: function (args) {send("_o__mbsinc");}});

var _o__mbsinc_l = Module.findExportByName("ucrtbased.dll", "_o__mbsinc_l")
Interceptor.attach(_o__mbsinc_l, {onLeave: function (args) {send("_o__mbsinc_l");}});

var _o__mbslen = Module.findExportByName("ucrtbased.dll", "_o__mbslen")
Interceptor.attach(_o__mbslen, {onLeave: function (args) {send("_o__mbslen");}});

var _o__mbslen_l = Module.findExportByName("ucrtbased.dll", "_o__mbslen_l")
Interceptor.attach(_o__mbslen_l, {onLeave: function (args) {send("_o__mbslen_l");}});

var _o__mbslwr = Module.findExportByName("ucrtbased.dll", "_o__mbslwr")
Interceptor.attach(_o__mbslwr, {onLeave: function (args) {send("_o__mbslwr");}});

var _o__mbslwr_l = Module.findExportByName("ucrtbased.dll", "_o__mbslwr_l")
Interceptor.attach(_o__mbslwr_l, {onLeave: function (args) {send("_o__mbslwr_l");}});

var _o__mbslwr_s = Module.findExportByName("ucrtbased.dll", "_o__mbslwr_s")
Interceptor.attach(_o__mbslwr_s, {onLeave: function (args) {send("_o__mbslwr_s");}});

var _o__mbslwr_s_l = Module.findExportByName("ucrtbased.dll", "_o__mbslwr_s_l")
Interceptor.attach(_o__mbslwr_s_l, {onLeave: function (args) {send("_o__mbslwr_s_l");}});

var _o__mbsnbcat = Module.findExportByName("ucrtbased.dll", "_o__mbsnbcat")
Interceptor.attach(_o__mbsnbcat, {onLeave: function (args) {send("_o__mbsnbcat");}});

var _o__mbsnbcat_l = Module.findExportByName("ucrtbased.dll", "_o__mbsnbcat_l")
Interceptor.attach(_o__mbsnbcat_l, {onLeave: function (args) {send("_o__mbsnbcat_l");}});

var _o__mbsnbcat_s = Module.findExportByName("ucrtbased.dll", "_o__mbsnbcat_s")
Interceptor.attach(_o__mbsnbcat_s, {onLeave: function (args) {send("_o__mbsnbcat_s");}});

var _o__mbsnbcat_s_l = Module.findExportByName("ucrtbased.dll", "_o__mbsnbcat_s_l")
Interceptor.attach(_o__mbsnbcat_s_l, {onLeave: function (args) {send("_o__mbsnbcat_s_l");}});

var _o__mbsnbcmp = Module.findExportByName("ucrtbased.dll", "_o__mbsnbcmp")
Interceptor.attach(_o__mbsnbcmp, {onLeave: function (args) {send("_o__mbsnbcmp");}});

var _o__mbsnbcmp_l = Module.findExportByName("ucrtbased.dll", "_o__mbsnbcmp_l")
Interceptor.attach(_o__mbsnbcmp_l, {onLeave: function (args) {send("_o__mbsnbcmp_l");}});

var _o__mbsnbcnt = Module.findExportByName("ucrtbased.dll", "_o__mbsnbcnt")
Interceptor.attach(_o__mbsnbcnt, {onLeave: function (args) {send("_o__mbsnbcnt");}});

var _o__mbsnbcnt_l = Module.findExportByName("ucrtbased.dll", "_o__mbsnbcnt_l")
Interceptor.attach(_o__mbsnbcnt_l, {onLeave: function (args) {send("_o__mbsnbcnt_l");}});

var _o__mbsnbcoll = Module.findExportByName("ucrtbased.dll", "_o__mbsnbcoll")
Interceptor.attach(_o__mbsnbcoll, {onLeave: function (args) {send("_o__mbsnbcoll");}});

var _o__mbsnbcoll_l = Module.findExportByName("ucrtbased.dll", "_o__mbsnbcoll_l")
Interceptor.attach(_o__mbsnbcoll_l, {onLeave: function (args) {send("_o__mbsnbcoll_l");}});

var _o__mbsnbcpy = Module.findExportByName("ucrtbased.dll", "_o__mbsnbcpy")
Interceptor.attach(_o__mbsnbcpy, {onLeave: function (args) {send("_o__mbsnbcpy");}});

var _o__mbsnbcpy_l = Module.findExportByName("ucrtbased.dll", "_o__mbsnbcpy_l")
Interceptor.attach(_o__mbsnbcpy_l, {onLeave: function (args) {send("_o__mbsnbcpy_l");}});

var _o__mbsnbcpy_s = Module.findExportByName("ucrtbased.dll", "_o__mbsnbcpy_s")
Interceptor.attach(_o__mbsnbcpy_s, {onLeave: function (args) {send("_o__mbsnbcpy_s");}});

var _o__mbsnbcpy_s_l = Module.findExportByName("ucrtbased.dll", "_o__mbsnbcpy_s_l")
Interceptor.attach(_o__mbsnbcpy_s_l, {onLeave: function (args) {send("_o__mbsnbcpy_s_l");}});

var _o__mbsnbicmp = Module.findExportByName("ucrtbased.dll", "_o__mbsnbicmp")
Interceptor.attach(_o__mbsnbicmp, {onLeave: function (args) {send("_o__mbsnbicmp");}});

var _o__mbsnbicmp_l = Module.findExportByName("ucrtbased.dll", "_o__mbsnbicmp_l")
Interceptor.attach(_o__mbsnbicmp_l, {onLeave: function (args) {send("_o__mbsnbicmp_l");}});

var _o__mbsnbicoll = Module.findExportByName("ucrtbased.dll", "_o__mbsnbicoll")
Interceptor.attach(_o__mbsnbicoll, {onLeave: function (args) {send("_o__mbsnbicoll");}});

var _o__mbsnbicoll_l = Module.findExportByName("ucrtbased.dll", "_o__mbsnbicoll_l")
Interceptor.attach(_o__mbsnbicoll_l, {onLeave: function (args) {send("_o__mbsnbicoll_l");}});

var _o__mbsnbset = Module.findExportByName("ucrtbased.dll", "_o__mbsnbset")
Interceptor.attach(_o__mbsnbset, {onLeave: function (args) {send("_o__mbsnbset");}});

var _o__mbsnbset_l = Module.findExportByName("ucrtbased.dll", "_o__mbsnbset_l")
Interceptor.attach(_o__mbsnbset_l, {onLeave: function (args) {send("_o__mbsnbset_l");}});

var _o__mbsnbset_s = Module.findExportByName("ucrtbased.dll", "_o__mbsnbset_s")
Interceptor.attach(_o__mbsnbset_s, {onLeave: function (args) {send("_o__mbsnbset_s");}});

var _o__mbsnbset_s_l = Module.findExportByName("ucrtbased.dll", "_o__mbsnbset_s_l")
Interceptor.attach(_o__mbsnbset_s_l, {onLeave: function (args) {send("_o__mbsnbset_s_l");}});

var _o__mbsncat = Module.findExportByName("ucrtbased.dll", "_o__mbsncat")
Interceptor.attach(_o__mbsncat, {onLeave: function (args) {send("_o__mbsncat");}});

var _o__mbsncat_l = Module.findExportByName("ucrtbased.dll", "_o__mbsncat_l")
Interceptor.attach(_o__mbsncat_l, {onLeave: function (args) {send("_o__mbsncat_l");}});

var _o__mbsncat_s = Module.findExportByName("ucrtbased.dll", "_o__mbsncat_s")
Interceptor.attach(_o__mbsncat_s, {onLeave: function (args) {send("_o__mbsncat_s");}});

var _o__mbsncat_s_l = Module.findExportByName("ucrtbased.dll", "_o__mbsncat_s_l")
Interceptor.attach(_o__mbsncat_s_l, {onLeave: function (args) {send("_o__mbsncat_s_l");}});

var _o__mbsnccnt = Module.findExportByName("ucrtbased.dll", "_o__mbsnccnt")
Interceptor.attach(_o__mbsnccnt, {onLeave: function (args) {send("_o__mbsnccnt");}});

var _o__mbsnccnt_l = Module.findExportByName("ucrtbased.dll", "_o__mbsnccnt_l")
Interceptor.attach(_o__mbsnccnt_l, {onLeave: function (args) {send("_o__mbsnccnt_l");}});

var _o__mbsncmp = Module.findExportByName("ucrtbased.dll", "_o__mbsncmp")
Interceptor.attach(_o__mbsncmp, {onLeave: function (args) {send("_o__mbsncmp");}});

var _o__mbsncmp_l = Module.findExportByName("ucrtbased.dll", "_o__mbsncmp_l")
Interceptor.attach(_o__mbsncmp_l, {onLeave: function (args) {send("_o__mbsncmp_l");}});

var _o__mbsncoll = Module.findExportByName("ucrtbased.dll", "_o__mbsncoll")
Interceptor.attach(_o__mbsncoll, {onLeave: function (args) {send("_o__mbsncoll");}});

var _o__mbsncoll_l = Module.findExportByName("ucrtbased.dll", "_o__mbsncoll_l")
Interceptor.attach(_o__mbsncoll_l, {onLeave: function (args) {send("_o__mbsncoll_l");}});

var _o__mbsncpy = Module.findExportByName("ucrtbased.dll", "_o__mbsncpy")
Interceptor.attach(_o__mbsncpy, {onLeave: function (args) {send("_o__mbsncpy");}});

var _o__mbsncpy_l = Module.findExportByName("ucrtbased.dll", "_o__mbsncpy_l")
Interceptor.attach(_o__mbsncpy_l, {onLeave: function (args) {send("_o__mbsncpy_l");}});

var _o__mbsncpy_s = Module.findExportByName("ucrtbased.dll", "_o__mbsncpy_s")
Interceptor.attach(_o__mbsncpy_s, {onLeave: function (args) {send("_o__mbsncpy_s");}});

var _o__mbsncpy_s_l = Module.findExportByName("ucrtbased.dll", "_o__mbsncpy_s_l")
Interceptor.attach(_o__mbsncpy_s_l, {onLeave: function (args) {send("_o__mbsncpy_s_l");}});

var _o__mbsnextc = Module.findExportByName("ucrtbased.dll", "_o__mbsnextc")
Interceptor.attach(_o__mbsnextc, {onLeave: function (args) {send("_o__mbsnextc");}});

var _o__mbsnextc_l = Module.findExportByName("ucrtbased.dll", "_o__mbsnextc_l")
Interceptor.attach(_o__mbsnextc_l, {onLeave: function (args) {send("_o__mbsnextc_l");}});

var _o__mbsnicmp = Module.findExportByName("ucrtbased.dll", "_o__mbsnicmp")
Interceptor.attach(_o__mbsnicmp, {onLeave: function (args) {send("_o__mbsnicmp");}});

var _o__mbsnicmp_l = Module.findExportByName("ucrtbased.dll", "_o__mbsnicmp_l")
Interceptor.attach(_o__mbsnicmp_l, {onLeave: function (args) {send("_o__mbsnicmp_l");}});

var _o__mbsnicoll = Module.findExportByName("ucrtbased.dll", "_o__mbsnicoll")
Interceptor.attach(_o__mbsnicoll, {onLeave: function (args) {send("_o__mbsnicoll");}});

var _o__mbsnicoll_l = Module.findExportByName("ucrtbased.dll", "_o__mbsnicoll_l")
Interceptor.attach(_o__mbsnicoll_l, {onLeave: function (args) {send("_o__mbsnicoll_l");}});

var _o__mbsninc = Module.findExportByName("ucrtbased.dll", "_o__mbsninc")
Interceptor.attach(_o__mbsninc, {onLeave: function (args) {send("_o__mbsninc");}});

var _o__mbsninc_l = Module.findExportByName("ucrtbased.dll", "_o__mbsninc_l")
Interceptor.attach(_o__mbsninc_l, {onLeave: function (args) {send("_o__mbsninc_l");}});

var _o__mbsnlen = Module.findExportByName("ucrtbased.dll", "_o__mbsnlen")
Interceptor.attach(_o__mbsnlen, {onLeave: function (args) {send("_o__mbsnlen");}});

var _o__mbsnlen_l = Module.findExportByName("ucrtbased.dll", "_o__mbsnlen_l")
Interceptor.attach(_o__mbsnlen_l, {onLeave: function (args) {send("_o__mbsnlen_l");}});

var _o__mbsnset = Module.findExportByName("ucrtbased.dll", "_o__mbsnset")
Interceptor.attach(_o__mbsnset, {onLeave: function (args) {send("_o__mbsnset");}});

var _o__mbsnset_l = Module.findExportByName("ucrtbased.dll", "_o__mbsnset_l")
Interceptor.attach(_o__mbsnset_l, {onLeave: function (args) {send("_o__mbsnset_l");}});

var _o__mbsnset_s = Module.findExportByName("ucrtbased.dll", "_o__mbsnset_s")
Interceptor.attach(_o__mbsnset_s, {onLeave: function (args) {send("_o__mbsnset_s");}});

var _o__mbsnset_s_l = Module.findExportByName("ucrtbased.dll", "_o__mbsnset_s_l")
Interceptor.attach(_o__mbsnset_s_l, {onLeave: function (args) {send("_o__mbsnset_s_l");}});

var _o__mbspbrk = Module.findExportByName("ucrtbased.dll", "_o__mbspbrk")
Interceptor.attach(_o__mbspbrk, {onLeave: function (args) {send("_o__mbspbrk");}});

var _o__mbspbrk_l = Module.findExportByName("ucrtbased.dll", "_o__mbspbrk_l")
Interceptor.attach(_o__mbspbrk_l, {onLeave: function (args) {send("_o__mbspbrk_l");}});

var _o__mbsrchr = Module.findExportByName("ucrtbased.dll", "_o__mbsrchr")
Interceptor.attach(_o__mbsrchr, {onLeave: function (args) {send("_o__mbsrchr");}});

var _o__mbsrchr_l = Module.findExportByName("ucrtbased.dll", "_o__mbsrchr_l")
Interceptor.attach(_o__mbsrchr_l, {onLeave: function (args) {send("_o__mbsrchr_l");}});

var _o__mbsrev = Module.findExportByName("ucrtbased.dll", "_o__mbsrev")
Interceptor.attach(_o__mbsrev, {onLeave: function (args) {send("_o__mbsrev");}});

var _o__mbsrev_l = Module.findExportByName("ucrtbased.dll", "_o__mbsrev_l")
Interceptor.attach(_o__mbsrev_l, {onLeave: function (args) {send("_o__mbsrev_l");}});

var _o__mbsset = Module.findExportByName("ucrtbased.dll", "_o__mbsset")
Interceptor.attach(_o__mbsset, {onLeave: function (args) {send("_o__mbsset");}});

var _o__mbsset_l = Module.findExportByName("ucrtbased.dll", "_o__mbsset_l")
Interceptor.attach(_o__mbsset_l, {onLeave: function (args) {send("_o__mbsset_l");}});

var _o__mbsset_s = Module.findExportByName("ucrtbased.dll", "_o__mbsset_s")
Interceptor.attach(_o__mbsset_s, {onLeave: function (args) {send("_o__mbsset_s");}});

var _o__mbsset_s_l = Module.findExportByName("ucrtbased.dll", "_o__mbsset_s_l")
Interceptor.attach(_o__mbsset_s_l, {onLeave: function (args) {send("_o__mbsset_s_l");}});

var _o__mbsspn = Module.findExportByName("ucrtbased.dll", "_o__mbsspn")
Interceptor.attach(_o__mbsspn, {onLeave: function (args) {send("_o__mbsspn");}});

var _o__mbsspn_l = Module.findExportByName("ucrtbased.dll", "_o__mbsspn_l")
Interceptor.attach(_o__mbsspn_l, {onLeave: function (args) {send("_o__mbsspn_l");}});

var _o__mbsspnp = Module.findExportByName("ucrtbased.dll", "_o__mbsspnp")
Interceptor.attach(_o__mbsspnp, {onLeave: function (args) {send("_o__mbsspnp");}});

var _o__mbsspnp_l = Module.findExportByName("ucrtbased.dll", "_o__mbsspnp_l")
Interceptor.attach(_o__mbsspnp_l, {onLeave: function (args) {send("_o__mbsspnp_l");}});

var _o__mbsstr = Module.findExportByName("ucrtbased.dll", "_o__mbsstr")
Interceptor.attach(_o__mbsstr, {onLeave: function (args) {send("_o__mbsstr");}});

var _o__mbsstr_l = Module.findExportByName("ucrtbased.dll", "_o__mbsstr_l")
Interceptor.attach(_o__mbsstr_l, {onLeave: function (args) {send("_o__mbsstr_l");}});

var _o__mbstok = Module.findExportByName("ucrtbased.dll", "_o__mbstok")
Interceptor.attach(_o__mbstok, {onLeave: function (args) {send("_o__mbstok");}});

var _o__mbstok_l = Module.findExportByName("ucrtbased.dll", "_o__mbstok_l")
Interceptor.attach(_o__mbstok_l, {onLeave: function (args) {send("_o__mbstok_l");}});

var _o__mbstok_s = Module.findExportByName("ucrtbased.dll", "_o__mbstok_s")
Interceptor.attach(_o__mbstok_s, {onLeave: function (args) {send("_o__mbstok_s");}});

var _o__mbstok_s_l = Module.findExportByName("ucrtbased.dll", "_o__mbstok_s_l")
Interceptor.attach(_o__mbstok_s_l, {onLeave: function (args) {send("_o__mbstok_s_l");}});

var _o__mbstowcs_l = Module.findExportByName("ucrtbased.dll", "_o__mbstowcs_l")
Interceptor.attach(_o__mbstowcs_l, {onLeave: function (args) {send("_o__mbstowcs_l");}});

var _o__mbstowcs_s_l = Module.findExportByName("ucrtbased.dll", "_o__mbstowcs_s_l")
Interceptor.attach(_o__mbstowcs_s_l, {onLeave: function (args) {send("_o__mbstowcs_s_l");}});

var _o__mbstrlen = Module.findExportByName("ucrtbased.dll", "_o__mbstrlen")
Interceptor.attach(_o__mbstrlen, {onLeave: function (args) {send("_o__mbstrlen");}});

var _o__mbstrlen_l = Module.findExportByName("ucrtbased.dll", "_o__mbstrlen_l")
Interceptor.attach(_o__mbstrlen_l, {onLeave: function (args) {send("_o__mbstrlen_l");}});

var _o__mbstrnlen = Module.findExportByName("ucrtbased.dll", "_o__mbstrnlen")
Interceptor.attach(_o__mbstrnlen, {onLeave: function (args) {send("_o__mbstrnlen");}});

var _o__mbstrnlen_l = Module.findExportByName("ucrtbased.dll", "_o__mbstrnlen_l")
Interceptor.attach(_o__mbstrnlen_l, {onLeave: function (args) {send("_o__mbstrnlen_l");}});

var _o__mbsupr = Module.findExportByName("ucrtbased.dll", "_o__mbsupr")
Interceptor.attach(_o__mbsupr, {onLeave: function (args) {send("_o__mbsupr");}});

var _o__mbsupr_l = Module.findExportByName("ucrtbased.dll", "_o__mbsupr_l")
Interceptor.attach(_o__mbsupr_l, {onLeave: function (args) {send("_o__mbsupr_l");}});

var _o__mbsupr_s = Module.findExportByName("ucrtbased.dll", "_o__mbsupr_s")
Interceptor.attach(_o__mbsupr_s, {onLeave: function (args) {send("_o__mbsupr_s");}});

var _o__mbsupr_s_l = Module.findExportByName("ucrtbased.dll", "_o__mbsupr_s_l")
Interceptor.attach(_o__mbsupr_s_l, {onLeave: function (args) {send("_o__mbsupr_s_l");}});

var _o__mbtowc_l = Module.findExportByName("ucrtbased.dll", "_o__mbtowc_l")
Interceptor.attach(_o__mbtowc_l, {onLeave: function (args) {send("_o__mbtowc_l");}});

var _o__memicmp = Module.findExportByName("ucrtbased.dll", "_o__memicmp")
Interceptor.attach(_o__memicmp, {onLeave: function (args) {send("_o__memicmp");}});

var _o__memicmp_l = Module.findExportByName("ucrtbased.dll", "_o__memicmp_l")
Interceptor.attach(_o__memicmp_l, {onLeave: function (args) {send("_o__memicmp_l");}});

var _o__mkdir = Module.findExportByName("ucrtbased.dll", "_o__mkdir")
Interceptor.attach(_o__mkdir, {onLeave: function (args) {send("_o__mkdir");}});

var _o__mkgmtime32 = Module.findExportByName("ucrtbased.dll", "_o__mkgmtime32")
Interceptor.attach(_o__mkgmtime32, {onLeave: function (args) {send("_o__mkgmtime32");}});

var _o__mkgmtime64 = Module.findExportByName("ucrtbased.dll", "_o__mkgmtime64")
Interceptor.attach(_o__mkgmtime64, {onLeave: function (args) {send("_o__mkgmtime64");}});

var _o__mktemp = Module.findExportByName("ucrtbased.dll", "_o__mktemp")
Interceptor.attach(_o__mktemp, {onLeave: function (args) {send("_o__mktemp");}});

var _o__mktemp_s = Module.findExportByName("ucrtbased.dll", "_o__mktemp_s")
Interceptor.attach(_o__mktemp_s, {onLeave: function (args) {send("_o__mktemp_s");}});

var _o__mktime32 = Module.findExportByName("ucrtbased.dll", "_o__mktime32")
Interceptor.attach(_o__mktime32, {onLeave: function (args) {send("_o__mktime32");}});

var _o__mktime64 = Module.findExportByName("ucrtbased.dll", "_o__mktime64")
Interceptor.attach(_o__mktime64, {onLeave: function (args) {send("_o__mktime64");}});

var _o__msize = Module.findExportByName("ucrtbased.dll", "_o__msize")
Interceptor.attach(_o__msize, {onLeave: function (args) {send("_o__msize");}});

var _o__nextafter = Module.findExportByName("ucrtbased.dll", "_o__nextafter")
Interceptor.attach(_o__nextafter, {onLeave: function (args) {send("_o__nextafter");}});

var _o__nextafterf = Module.findExportByName("ucrtbased.dll", "_o__nextafterf")
Interceptor.attach(_o__nextafterf, {onLeave: function (args) {send("_o__nextafterf");}});

var _o__open_osfhandle = Module.findExportByName("ucrtbased.dll", "_o__open_osfhandle")
Interceptor.attach(_o__open_osfhandle, {onLeave: function (args) {send("_o__open_osfhandle");}});

var _o__pclose = Module.findExportByName("ucrtbased.dll", "_o__pclose")
Interceptor.attach(_o__pclose, {onLeave: function (args) {send("_o__pclose");}});

var _o__pipe = Module.findExportByName("ucrtbased.dll", "_o__pipe")
Interceptor.attach(_o__pipe, {onLeave: function (args) {send("_o__pipe");}});

var _o__popen = Module.findExportByName("ucrtbased.dll", "_o__popen")
Interceptor.attach(_o__popen, {onLeave: function (args) {send("_o__popen");}});

var _o__purecall = Module.findExportByName("ucrtbased.dll", "_o__purecall")
Interceptor.attach(_o__purecall, {onLeave: function (args) {send("_o__purecall");}});

var _o__putc_nolock = Module.findExportByName("ucrtbased.dll", "_o__putc_nolock")
Interceptor.attach(_o__putc_nolock, {onLeave: function (args) {send("_o__putc_nolock");}});

var _o__putch = Module.findExportByName("ucrtbased.dll", "_o__putch")
Interceptor.attach(_o__putch, {onLeave: function (args) {send("_o__putch");}});

var _o__putch_nolock = Module.findExportByName("ucrtbased.dll", "_o__putch_nolock")
Interceptor.attach(_o__putch_nolock, {onLeave: function (args) {send("_o__putch_nolock");}});

var _o__putenv = Module.findExportByName("ucrtbased.dll", "_o__putenv")
Interceptor.attach(_o__putenv, {onLeave: function (args) {send("_o__putenv");}});

var _o__putenv_s = Module.findExportByName("ucrtbased.dll", "_o__putenv_s")
Interceptor.attach(_o__putenv_s, {onLeave: function (args) {send("_o__putenv_s");}});

var _o__putw = Module.findExportByName("ucrtbased.dll", "_o__putw")
Interceptor.attach(_o__putw, {onLeave: function (args) {send("_o__putw");}});

var _o__putwc_nolock = Module.findExportByName("ucrtbased.dll", "_o__putwc_nolock")
Interceptor.attach(_o__putwc_nolock, {onLeave: function (args) {send("_o__putwc_nolock");}});

var _o__putwch = Module.findExportByName("ucrtbased.dll", "_o__putwch")
Interceptor.attach(_o__putwch, {onLeave: function (args) {send("_o__putwch");}});

var _o__putwch_nolock = Module.findExportByName("ucrtbased.dll", "_o__putwch_nolock")
Interceptor.attach(_o__putwch_nolock, {onLeave: function (args) {send("_o__putwch_nolock");}});

var _o__putws = Module.findExportByName("ucrtbased.dll", "_o__putws")
Interceptor.attach(_o__putws, {onLeave: function (args) {send("_o__putws");}});

var _o__read = Module.findExportByName("ucrtbased.dll", "_o__read")
Interceptor.attach(_o__read, {onLeave: function (args) {send("_o__read");}});

var _o__realloc_base = Module.findExportByName("ucrtbased.dll", "_o__realloc_base")
Interceptor.attach(_o__realloc_base, {onLeave: function (args) {send("_o__realloc_base");}});

var _o__recalloc = Module.findExportByName("ucrtbased.dll", "_o__recalloc")
Interceptor.attach(_o__recalloc, {onLeave: function (args) {send("_o__recalloc");}});

var _o__register_onexit_function = Module.findExportByName("ucrtbased.dll", "_o__register_onexit_function")
Interceptor.attach(_o__register_onexit_function, {onLeave: function (args) {send("_o__register_onexit_function");}});

var _o__resetstkoflw = Module.findExportByName("ucrtbased.dll", "_o__resetstkoflw")
Interceptor.attach(_o__resetstkoflw, {onLeave: function (args) {send("_o__resetstkoflw");}});

var _o__rmdir = Module.findExportByName("ucrtbased.dll", "_o__rmdir")
Interceptor.attach(_o__rmdir, {onLeave: function (args) {send("_o__rmdir");}});

var _o__rmtmp = Module.findExportByName("ucrtbased.dll", "_o__rmtmp")
Interceptor.attach(_o__rmtmp, {onLeave: function (args) {send("_o__rmtmp");}});

var _o__scalb = Module.findExportByName("ucrtbased.dll", "_o__scalb")
Interceptor.attach(_o__scalb, {onLeave: function (args) {send("_o__scalb");}});

var _o__scalbf = Module.findExportByName("ucrtbased.dll", "_o__scalbf")
Interceptor.attach(_o__scalbf, {onLeave: function (args) {send("_o__scalbf");}});

var _o__searchenv = Module.findExportByName("ucrtbased.dll", "_o__searchenv")
Interceptor.attach(_o__searchenv, {onLeave: function (args) {send("_o__searchenv");}});

var _o__searchenv_s = Module.findExportByName("ucrtbased.dll", "_o__searchenv_s")
Interceptor.attach(_o__searchenv_s, {onLeave: function (args) {send("_o__searchenv_s");}});

var _o__seh_filter_dll = Module.findExportByName("ucrtbased.dll", "_o__seh_filter_dll")
Interceptor.attach(_o__seh_filter_dll, {onLeave: function (args) {send("_o__seh_filter_dll");}});

var _o__seh_filter_exe = Module.findExportByName("ucrtbased.dll", "_o__seh_filter_exe")
Interceptor.attach(_o__seh_filter_exe, {onLeave: function (args) {send("_o__seh_filter_exe");}});

var _o__set_abort_behavior = Module.findExportByName("ucrtbased.dll", "_o__set_abort_behavior")
Interceptor.attach(_o__set_abort_behavior, {onLeave: function (args) {send("_o__set_abort_behavior");}});

var _o__set_app_type = Module.findExportByName("ucrtbased.dll", "_o__set_app_type")
Interceptor.attach(_o__set_app_type, {onLeave: function (args) {send("_o__set_app_type");}});

var _o__set_doserrno = Module.findExportByName("ucrtbased.dll", "_o__set_doserrno")
Interceptor.attach(_o__set_doserrno, {onLeave: function (args) {send("_o__set_doserrno");}});

var _o__set_errno = Module.findExportByName("ucrtbased.dll", "_o__set_errno")
Interceptor.attach(_o__set_errno, {onLeave: function (args) {send("_o__set_errno");}});

var _o__set_fmode = Module.findExportByName("ucrtbased.dll", "_o__set_fmode")
Interceptor.attach(_o__set_fmode, {onLeave: function (args) {send("_o__set_fmode");}});

var _o__set_invalid_parameter_handler = Module.findExportByName("ucrtbased.dll", "_o__set_invalid_parameter_handler")
Interceptor.attach(_o__set_invalid_parameter_handler, {onLeave: function (args) {send("_o__set_invalid_parameter_handler");}});

var _o__set_new_handler = Module.findExportByName("ucrtbased.dll", "_o__set_new_handler")
Interceptor.attach(_o__set_new_handler, {onLeave: function (args) {send("_o__set_new_handler");}});

var _o__set_new_mode = Module.findExportByName("ucrtbased.dll", "_o__set_new_mode")
Interceptor.attach(_o__set_new_mode, {onLeave: function (args) {send("_o__set_new_mode");}});

var _o__set_thread_local_invalid_parameter_handler = Module.findExportByName("ucrtbased.dll", "_o__set_thread_local_invalid_parameter_handler")
Interceptor.attach(_o__set_thread_local_invalid_parameter_handler, {onLeave: function (args) {send("_o__set_thread_local_invalid_parameter_handler");}});

var _o__seterrormode = Module.findExportByName("ucrtbased.dll", "_o__seterrormode")
Interceptor.attach(_o__seterrormode, {onLeave: function (args) {send("_o__seterrormode");}});

var _o__setmbcp = Module.findExportByName("ucrtbased.dll", "_o__setmbcp")
Interceptor.attach(_o__setmbcp, {onLeave: function (args) {send("_o__setmbcp");}});

var _o__setmode = Module.findExportByName("ucrtbased.dll", "_o__setmode")
Interceptor.attach(_o__setmode, {onLeave: function (args) {send("_o__setmode");}});

var _o__setsystime = Module.findExportByName("ucrtbased.dll", "_o__setsystime")
Interceptor.attach(_o__setsystime, {onLeave: function (args) {send("_o__setsystime");}});

var _o__sleep = Module.findExportByName("ucrtbased.dll", "_o__sleep")
Interceptor.attach(_o__sleep, {onLeave: function (args) {send("_o__sleep");}});

var _o__sopen = Module.findExportByName("ucrtbased.dll", "_o__sopen")
Interceptor.attach(_o__sopen, {onLeave: function (args) {send("_o__sopen");}});

var _o__sopen_dispatch = Module.findExportByName("ucrtbased.dll", "_o__sopen_dispatch")
Interceptor.attach(_o__sopen_dispatch, {onLeave: function (args) {send("_o__sopen_dispatch");}});

var _o__sopen_s = Module.findExportByName("ucrtbased.dll", "_o__sopen_s")
Interceptor.attach(_o__sopen_s, {onLeave: function (args) {send("_o__sopen_s");}});

var _o__spawnv = Module.findExportByName("ucrtbased.dll", "_o__spawnv")
Interceptor.attach(_o__spawnv, {onLeave: function (args) {send("_o__spawnv");}});

var _o__spawnve = Module.findExportByName("ucrtbased.dll", "_o__spawnve")
Interceptor.attach(_o__spawnve, {onLeave: function (args) {send("_o__spawnve");}});

var _o__spawnvp = Module.findExportByName("ucrtbased.dll", "_o__spawnvp")
Interceptor.attach(_o__spawnvp, {onLeave: function (args) {send("_o__spawnvp");}});

var _o__spawnvpe = Module.findExportByName("ucrtbased.dll", "_o__spawnvpe")
Interceptor.attach(_o__spawnvpe, {onLeave: function (args) {send("_o__spawnvpe");}});

var _o__splitpath = Module.findExportByName("ucrtbased.dll", "_o__splitpath")
Interceptor.attach(_o__splitpath, {onLeave: function (args) {send("_o__splitpath");}});

var _o__splitpath_s = Module.findExportByName("ucrtbased.dll", "_o__splitpath_s")
Interceptor.attach(_o__splitpath_s, {onLeave: function (args) {send("_o__splitpath_s");}});

var _o__stat32 = Module.findExportByName("ucrtbased.dll", "_o__stat32")
Interceptor.attach(_o__stat32, {onLeave: function (args) {send("_o__stat32");}});

var _o__stat32i64 = Module.findExportByName("ucrtbased.dll", "_o__stat32i64")
Interceptor.attach(_o__stat32i64, {onLeave: function (args) {send("_o__stat32i64");}});

var _o__stat64 = Module.findExportByName("ucrtbased.dll", "_o__stat64")
Interceptor.attach(_o__stat64, {onLeave: function (args) {send("_o__stat64");}});

var _o__stat64i32 = Module.findExportByName("ucrtbased.dll", "_o__stat64i32")
Interceptor.attach(_o__stat64i32, {onLeave: function (args) {send("_o__stat64i32");}});

var _o__strcoll_l = Module.findExportByName("ucrtbased.dll", "_o__strcoll_l")
Interceptor.attach(_o__strcoll_l, {onLeave: function (args) {send("_o__strcoll_l");}});

var _o__strdate = Module.findExportByName("ucrtbased.dll", "_o__strdate")
Interceptor.attach(_o__strdate, {onLeave: function (args) {send("_o__strdate");}});

var _o__strdate_s = Module.findExportByName("ucrtbased.dll", "_o__strdate_s")
Interceptor.attach(_o__strdate_s, {onLeave: function (args) {send("_o__strdate_s");}});

var _o__strdup = Module.findExportByName("ucrtbased.dll", "_o__strdup")
Interceptor.attach(_o__strdup, {onLeave: function (args) {send("_o__strdup");}});

var _o__strerror = Module.findExportByName("ucrtbased.dll", "_o__strerror")
Interceptor.attach(_o__strerror, {onLeave: function (args) {send("_o__strerror");}});

var _o__strerror_s = Module.findExportByName("ucrtbased.dll", "_o__strerror_s")
Interceptor.attach(_o__strerror_s, {onLeave: function (args) {send("_o__strerror_s");}});

var _o__strftime_l = Module.findExportByName("ucrtbased.dll", "_o__strftime_l")
Interceptor.attach(_o__strftime_l, {onLeave: function (args) {send("_o__strftime_l");}});

var _o__stricmp = Module.findExportByName("ucrtbased.dll", "_o__stricmp")
Interceptor.attach(_o__stricmp, {onLeave: function (args) {send("_o__stricmp");}});

var _o__stricmp_l = Module.findExportByName("ucrtbased.dll", "_o__stricmp_l")
Interceptor.attach(_o__stricmp_l, {onLeave: function (args) {send("_o__stricmp_l");}});

var _o__stricoll = Module.findExportByName("ucrtbased.dll", "_o__stricoll")
Interceptor.attach(_o__stricoll, {onLeave: function (args) {send("_o__stricoll");}});

var _o__stricoll_l = Module.findExportByName("ucrtbased.dll", "_o__stricoll_l")
Interceptor.attach(_o__stricoll_l, {onLeave: function (args) {send("_o__stricoll_l");}});

var _o__strlwr = Module.findExportByName("ucrtbased.dll", "_o__strlwr")
Interceptor.attach(_o__strlwr, {onLeave: function (args) {send("_o__strlwr");}});

var _o__strlwr_l = Module.findExportByName("ucrtbased.dll", "_o__strlwr_l")
Interceptor.attach(_o__strlwr_l, {onLeave: function (args) {send("_o__strlwr_l");}});

var _o__strlwr_s = Module.findExportByName("ucrtbased.dll", "_o__strlwr_s")
Interceptor.attach(_o__strlwr_s, {onLeave: function (args) {send("_o__strlwr_s");}});

var _o__strlwr_s_l = Module.findExportByName("ucrtbased.dll", "_o__strlwr_s_l")
Interceptor.attach(_o__strlwr_s_l, {onLeave: function (args) {send("_o__strlwr_s_l");}});

var _o__strncoll = Module.findExportByName("ucrtbased.dll", "_o__strncoll")
Interceptor.attach(_o__strncoll, {onLeave: function (args) {send("_o__strncoll");}});

var _o__strncoll_l = Module.findExportByName("ucrtbased.dll", "_o__strncoll_l")
Interceptor.attach(_o__strncoll_l, {onLeave: function (args) {send("_o__strncoll_l");}});

var _o__strnicmp = Module.findExportByName("ucrtbased.dll", "_o__strnicmp")
Interceptor.attach(_o__strnicmp, {onLeave: function (args) {send("_o__strnicmp");}});

var _o__strnicmp_l = Module.findExportByName("ucrtbased.dll", "_o__strnicmp_l")
Interceptor.attach(_o__strnicmp_l, {onLeave: function (args) {send("_o__strnicmp_l");}});

var _o__strnicoll = Module.findExportByName("ucrtbased.dll", "_o__strnicoll")
Interceptor.attach(_o__strnicoll, {onLeave: function (args) {send("_o__strnicoll");}});

var _o__strnicoll_l = Module.findExportByName("ucrtbased.dll", "_o__strnicoll_l")
Interceptor.attach(_o__strnicoll_l, {onLeave: function (args) {send("_o__strnicoll_l");}});

var _o__strnset_s = Module.findExportByName("ucrtbased.dll", "_o__strnset_s")
Interceptor.attach(_o__strnset_s, {onLeave: function (args) {send("_o__strnset_s");}});

var _o__strset_s = Module.findExportByName("ucrtbased.dll", "_o__strset_s")
Interceptor.attach(_o__strset_s, {onLeave: function (args) {send("_o__strset_s");}});

var _o__strtime = Module.findExportByName("ucrtbased.dll", "_o__strtime")
Interceptor.attach(_o__strtime, {onLeave: function (args) {send("_o__strtime");}});

var _o__strtime_s = Module.findExportByName("ucrtbased.dll", "_o__strtime_s")
Interceptor.attach(_o__strtime_s, {onLeave: function (args) {send("_o__strtime_s");}});

var _o__strtod_l = Module.findExportByName("ucrtbased.dll", "_o__strtod_l")
Interceptor.attach(_o__strtod_l, {onLeave: function (args) {send("_o__strtod_l");}});

var _o__strtof_l = Module.findExportByName("ucrtbased.dll", "_o__strtof_l")
Interceptor.attach(_o__strtof_l, {onLeave: function (args) {send("_o__strtof_l");}});

var _o__strtoi64 = Module.findExportByName("ucrtbased.dll", "_o__strtoi64")
Interceptor.attach(_o__strtoi64, {onLeave: function (args) {send("_o__strtoi64");}});

var _o__strtoi64_l = Module.findExportByName("ucrtbased.dll", "_o__strtoi64_l")
Interceptor.attach(_o__strtoi64_l, {onLeave: function (args) {send("_o__strtoi64_l");}});

var _o__strtol_l = Module.findExportByName("ucrtbased.dll", "_o__strtol_l")
Interceptor.attach(_o__strtol_l, {onLeave: function (args) {send("_o__strtol_l");}});

var _o__strtold_l = Module.findExportByName("ucrtbased.dll", "_o__strtold_l")
Interceptor.attach(_o__strtold_l, {onLeave: function (args) {send("_o__strtold_l");}});

var _o__strtoll_l = Module.findExportByName("ucrtbased.dll", "_o__strtoll_l")
Interceptor.attach(_o__strtoll_l, {onLeave: function (args) {send("_o__strtoll_l");}});

var _o__strtoui64 = Module.findExportByName("ucrtbased.dll", "_o__strtoui64")
Interceptor.attach(_o__strtoui64, {onLeave: function (args) {send("_o__strtoui64");}});

var _o__strtoui64_l = Module.findExportByName("ucrtbased.dll", "_o__strtoui64_l")
Interceptor.attach(_o__strtoui64_l, {onLeave: function (args) {send("_o__strtoui64_l");}});

var _o__strtoul_l = Module.findExportByName("ucrtbased.dll", "_o__strtoul_l")
Interceptor.attach(_o__strtoul_l, {onLeave: function (args) {send("_o__strtoul_l");}});

var _o__strtoull_l = Module.findExportByName("ucrtbased.dll", "_o__strtoull_l")
Interceptor.attach(_o__strtoull_l, {onLeave: function (args) {send("_o__strtoull_l");}});

var _o__strupr = Module.findExportByName("ucrtbased.dll", "_o__strupr")
Interceptor.attach(_o__strupr, {onLeave: function (args) {send("_o__strupr");}});

var _o__strupr_l = Module.findExportByName("ucrtbased.dll", "_o__strupr_l")
Interceptor.attach(_o__strupr_l, {onLeave: function (args) {send("_o__strupr_l");}});

var _o__strupr_s = Module.findExportByName("ucrtbased.dll", "_o__strupr_s")
Interceptor.attach(_o__strupr_s, {onLeave: function (args) {send("_o__strupr_s");}});

var _o__strupr_s_l = Module.findExportByName("ucrtbased.dll", "_o__strupr_s_l")
Interceptor.attach(_o__strupr_s_l, {onLeave: function (args) {send("_o__strupr_s_l");}});

var _o__strxfrm_l = Module.findExportByName("ucrtbased.dll", "_o__strxfrm_l")
Interceptor.attach(_o__strxfrm_l, {onLeave: function (args) {send("_o__strxfrm_l");}});

var _o__swab = Module.findExportByName("ucrtbased.dll", "_o__swab")
Interceptor.attach(_o__swab, {onLeave: function (args) {send("_o__swab");}});

var _o__tell = Module.findExportByName("ucrtbased.dll", "_o__tell")
Interceptor.attach(_o__tell, {onLeave: function (args) {send("_o__tell");}});

var _o__telli64 = Module.findExportByName("ucrtbased.dll", "_o__telli64")
Interceptor.attach(_o__telli64, {onLeave: function (args) {send("_o__telli64");}});

var _o__timespec32_get = Module.findExportByName("ucrtbased.dll", "_o__timespec32_get")
Interceptor.attach(_o__timespec32_get, {onLeave: function (args) {send("_o__timespec32_get");}});

var _o__timespec64_get = Module.findExportByName("ucrtbased.dll", "_o__timespec64_get")
Interceptor.attach(_o__timespec64_get, {onLeave: function (args) {send("_o__timespec64_get");}});

var _o__tolower = Module.findExportByName("ucrtbased.dll", "_o__tolower")
Interceptor.attach(_o__tolower, {onLeave: function (args) {send("_o__tolower");}});

var _o__tolower_l = Module.findExportByName("ucrtbased.dll", "_o__tolower_l")
Interceptor.attach(_o__tolower_l, {onLeave: function (args) {send("_o__tolower_l");}});

var _o__toupper = Module.findExportByName("ucrtbased.dll", "_o__toupper")
Interceptor.attach(_o__toupper, {onLeave: function (args) {send("_o__toupper");}});

var _o__toupper_l = Module.findExportByName("ucrtbased.dll", "_o__toupper_l")
Interceptor.attach(_o__toupper_l, {onLeave: function (args) {send("_o__toupper_l");}});

var _o__towlower_l = Module.findExportByName("ucrtbased.dll", "_o__towlower_l")
Interceptor.attach(_o__towlower_l, {onLeave: function (args) {send("_o__towlower_l");}});

var _o__towupper_l = Module.findExportByName("ucrtbased.dll", "_o__towupper_l")
Interceptor.attach(_o__towupper_l, {onLeave: function (args) {send("_o__towupper_l");}});

var _o__tzset = Module.findExportByName("ucrtbased.dll", "_o__tzset")
Interceptor.attach(_o__tzset, {onLeave: function (args) {send("_o__tzset");}});

var _o__ui64toa = Module.findExportByName("ucrtbased.dll", "_o__ui64toa")
Interceptor.attach(_o__ui64toa, {onLeave: function (args) {send("_o__ui64toa");}});

var _o__ui64toa_s = Module.findExportByName("ucrtbased.dll", "_o__ui64toa_s")
Interceptor.attach(_o__ui64toa_s, {onLeave: function (args) {send("_o__ui64toa_s");}});

var _o__ui64tow = Module.findExportByName("ucrtbased.dll", "_o__ui64tow")
Interceptor.attach(_o__ui64tow, {onLeave: function (args) {send("_o__ui64tow");}});

var _o__ui64tow_s = Module.findExportByName("ucrtbased.dll", "_o__ui64tow_s")
Interceptor.attach(_o__ui64tow_s, {onLeave: function (args) {send("_o__ui64tow_s");}});

var _o__ultoa = Module.findExportByName("ucrtbased.dll", "_o__ultoa")
Interceptor.attach(_o__ultoa, {onLeave: function (args) {send("_o__ultoa");}});

var _o__ultoa_s = Module.findExportByName("ucrtbased.dll", "_o__ultoa_s")
Interceptor.attach(_o__ultoa_s, {onLeave: function (args) {send("_o__ultoa_s");}});

var _o__ultow = Module.findExportByName("ucrtbased.dll", "_o__ultow")
Interceptor.attach(_o__ultow, {onLeave: function (args) {send("_o__ultow");}});

var _o__ultow_s = Module.findExportByName("ucrtbased.dll", "_o__ultow_s")
Interceptor.attach(_o__ultow_s, {onLeave: function (args) {send("_o__ultow_s");}});

var _o__umask = Module.findExportByName("ucrtbased.dll", "_o__umask")
Interceptor.attach(_o__umask, {onLeave: function (args) {send("_o__umask");}});

var _o__umask_s = Module.findExportByName("ucrtbased.dll", "_o__umask_s")
Interceptor.attach(_o__umask_s, {onLeave: function (args) {send("_o__umask_s");}});

var _o__ungetc_nolock = Module.findExportByName("ucrtbased.dll", "_o__ungetc_nolock")
Interceptor.attach(_o__ungetc_nolock, {onLeave: function (args) {send("_o__ungetc_nolock");}});

var _o__ungetch = Module.findExportByName("ucrtbased.dll", "_o__ungetch")
Interceptor.attach(_o__ungetch, {onLeave: function (args) {send("_o__ungetch");}});

var _o__ungetch_nolock = Module.findExportByName("ucrtbased.dll", "_o__ungetch_nolock")
Interceptor.attach(_o__ungetch_nolock, {onLeave: function (args) {send("_o__ungetch_nolock");}});

var _o__ungetwc_nolock = Module.findExportByName("ucrtbased.dll", "_o__ungetwc_nolock")
Interceptor.attach(_o__ungetwc_nolock, {onLeave: function (args) {send("_o__ungetwc_nolock");}});

var _o__ungetwch = Module.findExportByName("ucrtbased.dll", "_o__ungetwch")
Interceptor.attach(_o__ungetwch, {onLeave: function (args) {send("_o__ungetwch");}});

var _o__ungetwch_nolock = Module.findExportByName("ucrtbased.dll", "_o__ungetwch_nolock")
Interceptor.attach(_o__ungetwch_nolock, {onLeave: function (args) {send("_o__ungetwch_nolock");}});

var _o__unlink = Module.findExportByName("ucrtbased.dll", "_o__unlink")
Interceptor.attach(_o__unlink, {onLeave: function (args) {send("_o__unlink");}});

var _o__unloaddll = Module.findExportByName("ucrtbased.dll", "_o__unloaddll")
Interceptor.attach(_o__unloaddll, {onLeave: function (args) {send("_o__unloaddll");}});

var _o__unlock_file = Module.findExportByName("ucrtbased.dll", "_o__unlock_file")
Interceptor.attach(_o__unlock_file, {onLeave: function (args) {send("_o__unlock_file");}});

var _o__utime32 = Module.findExportByName("ucrtbased.dll", "_o__utime32")
Interceptor.attach(_o__utime32, {onLeave: function (args) {send("_o__utime32");}});

var _o__utime64 = Module.findExportByName("ucrtbased.dll", "_o__utime64")
Interceptor.attach(_o__utime64, {onLeave: function (args) {send("_o__utime64");}});

var _o__waccess = Module.findExportByName("ucrtbased.dll", "_o__waccess")
Interceptor.attach(_o__waccess, {onLeave: function (args) {send("_o__waccess");}});

var _o__waccess_s = Module.findExportByName("ucrtbased.dll", "_o__waccess_s")
Interceptor.attach(_o__waccess_s, {onLeave: function (args) {send("_o__waccess_s");}});

var _o__wasctime = Module.findExportByName("ucrtbased.dll", "_o__wasctime")
Interceptor.attach(_o__wasctime, {onLeave: function (args) {send("_o__wasctime");}});

var _o__wasctime_s = Module.findExportByName("ucrtbased.dll", "_o__wasctime_s")
Interceptor.attach(_o__wasctime_s, {onLeave: function (args) {send("_o__wasctime_s");}});

var _o__wchdir = Module.findExportByName("ucrtbased.dll", "_o__wchdir")
Interceptor.attach(_o__wchdir, {onLeave: function (args) {send("_o__wchdir");}});

var _o__wchmod = Module.findExportByName("ucrtbased.dll", "_o__wchmod")
Interceptor.attach(_o__wchmod, {onLeave: function (args) {send("_o__wchmod");}});

var _o__wcreat = Module.findExportByName("ucrtbased.dll", "_o__wcreat")
Interceptor.attach(_o__wcreat, {onLeave: function (args) {send("_o__wcreat");}});

var _o__wcreate_locale = Module.findExportByName("ucrtbased.dll", "_o__wcreate_locale")
Interceptor.attach(_o__wcreate_locale, {onLeave: function (args) {send("_o__wcreate_locale");}});

var _o__wcscoll_l = Module.findExportByName("ucrtbased.dll", "_o__wcscoll_l")
Interceptor.attach(_o__wcscoll_l, {onLeave: function (args) {send("_o__wcscoll_l");}});

var _o__wcsdup = Module.findExportByName("ucrtbased.dll", "_o__wcsdup")
Interceptor.attach(_o__wcsdup, {onLeave: function (args) {send("_o__wcsdup");}});

var _o__wcserror = Module.findExportByName("ucrtbased.dll", "_o__wcserror")
Interceptor.attach(_o__wcserror, {onLeave: function (args) {send("_o__wcserror");}});

var _o__wcserror_s = Module.findExportByName("ucrtbased.dll", "_o__wcserror_s")
Interceptor.attach(_o__wcserror_s, {onLeave: function (args) {send("_o__wcserror_s");}});

var _o__wcsftime_l = Module.findExportByName("ucrtbased.dll", "_o__wcsftime_l")
Interceptor.attach(_o__wcsftime_l, {onLeave: function (args) {send("_o__wcsftime_l");}});

var _o__wcsicmp = Module.findExportByName("ucrtbased.dll", "_o__wcsicmp")
Interceptor.attach(_o__wcsicmp, {onLeave: function (args) {send("_o__wcsicmp");}});

var _o__wcsicmp_l = Module.findExportByName("ucrtbased.dll", "_o__wcsicmp_l")
Interceptor.attach(_o__wcsicmp_l, {onLeave: function (args) {send("_o__wcsicmp_l");}});

var _o__wcsicoll = Module.findExportByName("ucrtbased.dll", "_o__wcsicoll")
Interceptor.attach(_o__wcsicoll, {onLeave: function (args) {send("_o__wcsicoll");}});

var _o__wcsicoll_l = Module.findExportByName("ucrtbased.dll", "_o__wcsicoll_l")
Interceptor.attach(_o__wcsicoll_l, {onLeave: function (args) {send("_o__wcsicoll_l");}});

var _o__wcslwr = Module.findExportByName("ucrtbased.dll", "_o__wcslwr")
Interceptor.attach(_o__wcslwr, {onLeave: function (args) {send("_o__wcslwr");}});

var _o__wcslwr_l = Module.findExportByName("ucrtbased.dll", "_o__wcslwr_l")
Interceptor.attach(_o__wcslwr_l, {onLeave: function (args) {send("_o__wcslwr_l");}});

var _o__wcslwr_s = Module.findExportByName("ucrtbased.dll", "_o__wcslwr_s")
Interceptor.attach(_o__wcslwr_s, {onLeave: function (args) {send("_o__wcslwr_s");}});

var _o__wcslwr_s_l = Module.findExportByName("ucrtbased.dll", "_o__wcslwr_s_l")
Interceptor.attach(_o__wcslwr_s_l, {onLeave: function (args) {send("_o__wcslwr_s_l");}});

var _o__wcsncoll = Module.findExportByName("ucrtbased.dll", "_o__wcsncoll")
Interceptor.attach(_o__wcsncoll, {onLeave: function (args) {send("_o__wcsncoll");}});

var _o__wcsncoll_l = Module.findExportByName("ucrtbased.dll", "_o__wcsncoll_l")
Interceptor.attach(_o__wcsncoll_l, {onLeave: function (args) {send("_o__wcsncoll_l");}});

var _o__wcsnicmp = Module.findExportByName("ucrtbased.dll", "_o__wcsnicmp")
Interceptor.attach(_o__wcsnicmp, {onLeave: function (args) {send("_o__wcsnicmp");}});

var _o__wcsnicmp_l = Module.findExportByName("ucrtbased.dll", "_o__wcsnicmp_l")
Interceptor.attach(_o__wcsnicmp_l, {onLeave: function (args) {send("_o__wcsnicmp_l");}});

var _o__wcsnicoll = Module.findExportByName("ucrtbased.dll", "_o__wcsnicoll")
Interceptor.attach(_o__wcsnicoll, {onLeave: function (args) {send("_o__wcsnicoll");}});

var _o__wcsnicoll_l = Module.findExportByName("ucrtbased.dll", "_o__wcsnicoll_l")
Interceptor.attach(_o__wcsnicoll_l, {onLeave: function (args) {send("_o__wcsnicoll_l");}});

var _o__wcsnset = Module.findExportByName("ucrtbased.dll", "_o__wcsnset")
Interceptor.attach(_o__wcsnset, {onLeave: function (args) {send("_o__wcsnset");}});

var _o__wcsnset_s = Module.findExportByName("ucrtbased.dll", "_o__wcsnset_s")
Interceptor.attach(_o__wcsnset_s, {onLeave: function (args) {send("_o__wcsnset_s");}});

var _o__wcsset = Module.findExportByName("ucrtbased.dll", "_o__wcsset")
Interceptor.attach(_o__wcsset, {onLeave: function (args) {send("_o__wcsset");}});

var _o__wcsset_s = Module.findExportByName("ucrtbased.dll", "_o__wcsset_s")
Interceptor.attach(_o__wcsset_s, {onLeave: function (args) {send("_o__wcsset_s");}});

var _o__wcstod_l = Module.findExportByName("ucrtbased.dll", "_o__wcstod_l")
Interceptor.attach(_o__wcstod_l, {onLeave: function (args) {send("_o__wcstod_l");}});

var _o__wcstof_l = Module.findExportByName("ucrtbased.dll", "_o__wcstof_l")
Interceptor.attach(_o__wcstof_l, {onLeave: function (args) {send("_o__wcstof_l");}});

var _o__wcstoi64 = Module.findExportByName("ucrtbased.dll", "_o__wcstoi64")
Interceptor.attach(_o__wcstoi64, {onLeave: function (args) {send("_o__wcstoi64");}});

var _o__wcstoi64_l = Module.findExportByName("ucrtbased.dll", "_o__wcstoi64_l")
Interceptor.attach(_o__wcstoi64_l, {onLeave: function (args) {send("_o__wcstoi64_l");}});

var _o__wcstol_l = Module.findExportByName("ucrtbased.dll", "_o__wcstol_l")
Interceptor.attach(_o__wcstol_l, {onLeave: function (args) {send("_o__wcstol_l");}});

var _o__wcstold_l = Module.findExportByName("ucrtbased.dll", "_o__wcstold_l")
Interceptor.attach(_o__wcstold_l, {onLeave: function (args) {send("_o__wcstold_l");}});

var _o__wcstoll_l = Module.findExportByName("ucrtbased.dll", "_o__wcstoll_l")
Interceptor.attach(_o__wcstoll_l, {onLeave: function (args) {send("_o__wcstoll_l");}});

var _o__wcstombs_l = Module.findExportByName("ucrtbased.dll", "_o__wcstombs_l")
Interceptor.attach(_o__wcstombs_l, {onLeave: function (args) {send("_o__wcstombs_l");}});

var _o__wcstombs_s_l = Module.findExportByName("ucrtbased.dll", "_o__wcstombs_s_l")
Interceptor.attach(_o__wcstombs_s_l, {onLeave: function (args) {send("_o__wcstombs_s_l");}});

var _o__wcstoui64 = Module.findExportByName("ucrtbased.dll", "_o__wcstoui64")
Interceptor.attach(_o__wcstoui64, {onLeave: function (args) {send("_o__wcstoui64");}});

var _o__wcstoui64_l = Module.findExportByName("ucrtbased.dll", "_o__wcstoui64_l")
Interceptor.attach(_o__wcstoui64_l, {onLeave: function (args) {send("_o__wcstoui64_l");}});

var _o__wcstoul_l = Module.findExportByName("ucrtbased.dll", "_o__wcstoul_l")
Interceptor.attach(_o__wcstoul_l, {onLeave: function (args) {send("_o__wcstoul_l");}});

var _o__wcstoull_l = Module.findExportByName("ucrtbased.dll", "_o__wcstoull_l")
Interceptor.attach(_o__wcstoull_l, {onLeave: function (args) {send("_o__wcstoull_l");}});

var _o__wcsupr = Module.findExportByName("ucrtbased.dll", "_o__wcsupr")
Interceptor.attach(_o__wcsupr, {onLeave: function (args) {send("_o__wcsupr");}});

var _o__wcsupr_l = Module.findExportByName("ucrtbased.dll", "_o__wcsupr_l")
Interceptor.attach(_o__wcsupr_l, {onLeave: function (args) {send("_o__wcsupr_l");}});

var _o__wcsupr_s = Module.findExportByName("ucrtbased.dll", "_o__wcsupr_s")
Interceptor.attach(_o__wcsupr_s, {onLeave: function (args) {send("_o__wcsupr_s");}});

var _o__wcsupr_s_l = Module.findExportByName("ucrtbased.dll", "_o__wcsupr_s_l")
Interceptor.attach(_o__wcsupr_s_l, {onLeave: function (args) {send("_o__wcsupr_s_l");}});

var _o__wcsxfrm_l = Module.findExportByName("ucrtbased.dll", "_o__wcsxfrm_l")
Interceptor.attach(_o__wcsxfrm_l, {onLeave: function (args) {send("_o__wcsxfrm_l");}});

var _o__wctime32 = Module.findExportByName("ucrtbased.dll", "_o__wctime32")
Interceptor.attach(_o__wctime32, {onLeave: function (args) {send("_o__wctime32");}});

var _o__wctime32_s = Module.findExportByName("ucrtbased.dll", "_o__wctime32_s")
Interceptor.attach(_o__wctime32_s, {onLeave: function (args) {send("_o__wctime32_s");}});

var _o__wctime64 = Module.findExportByName("ucrtbased.dll", "_o__wctime64")
Interceptor.attach(_o__wctime64, {onLeave: function (args) {send("_o__wctime64");}});

var _o__wctime64_s = Module.findExportByName("ucrtbased.dll", "_o__wctime64_s")
Interceptor.attach(_o__wctime64_s, {onLeave: function (args) {send("_o__wctime64_s");}});

var _o__wctomb_l = Module.findExportByName("ucrtbased.dll", "_o__wctomb_l")
Interceptor.attach(_o__wctomb_l, {onLeave: function (args) {send("_o__wctomb_l");}});

var _o__wctomb_s_l = Module.findExportByName("ucrtbased.dll", "_o__wctomb_s_l")
Interceptor.attach(_o__wctomb_s_l, {onLeave: function (args) {send("_o__wctomb_s_l");}});

var _o__wdupenv_s = Module.findExportByName("ucrtbased.dll", "_o__wdupenv_s")
Interceptor.attach(_o__wdupenv_s, {onLeave: function (args) {send("_o__wdupenv_s");}});

var _o__wexecv = Module.findExportByName("ucrtbased.dll", "_o__wexecv")
Interceptor.attach(_o__wexecv, {onLeave: function (args) {send("_o__wexecv");}});

var _o__wexecve = Module.findExportByName("ucrtbased.dll", "_o__wexecve")
Interceptor.attach(_o__wexecve, {onLeave: function (args) {send("_o__wexecve");}});

var _o__wexecvp = Module.findExportByName("ucrtbased.dll", "_o__wexecvp")
Interceptor.attach(_o__wexecvp, {onLeave: function (args) {send("_o__wexecvp");}});

var _o__wexecvpe = Module.findExportByName("ucrtbased.dll", "_o__wexecvpe")
Interceptor.attach(_o__wexecvpe, {onLeave: function (args) {send("_o__wexecvpe");}});

var _o__wfdopen = Module.findExportByName("ucrtbased.dll", "_o__wfdopen")
Interceptor.attach(_o__wfdopen, {onLeave: function (args) {send("_o__wfdopen");}});

var _o__wfindfirst32 = Module.findExportByName("ucrtbased.dll", "_o__wfindfirst32")
Interceptor.attach(_o__wfindfirst32, {onLeave: function (args) {send("_o__wfindfirst32");}});

var _o__wfindfirst32i64 = Module.findExportByName("ucrtbased.dll", "_o__wfindfirst32i64")
Interceptor.attach(_o__wfindfirst32i64, {onLeave: function (args) {send("_o__wfindfirst32i64");}});

var _o__wfindfirst64 = Module.findExportByName("ucrtbased.dll", "_o__wfindfirst64")
Interceptor.attach(_o__wfindfirst64, {onLeave: function (args) {send("_o__wfindfirst64");}});

var _o__wfindfirst64i32 = Module.findExportByName("ucrtbased.dll", "_o__wfindfirst64i32")
Interceptor.attach(_o__wfindfirst64i32, {onLeave: function (args) {send("_o__wfindfirst64i32");}});

var _o__wfindnext32 = Module.findExportByName("ucrtbased.dll", "_o__wfindnext32")
Interceptor.attach(_o__wfindnext32, {onLeave: function (args) {send("_o__wfindnext32");}});

var _o__wfindnext32i64 = Module.findExportByName("ucrtbased.dll", "_o__wfindnext32i64")
Interceptor.attach(_o__wfindnext32i64, {onLeave: function (args) {send("_o__wfindnext32i64");}});

var _o__wfindnext64 = Module.findExportByName("ucrtbased.dll", "_o__wfindnext64")
Interceptor.attach(_o__wfindnext64, {onLeave: function (args) {send("_o__wfindnext64");}});

var _o__wfindnext64i32 = Module.findExportByName("ucrtbased.dll", "_o__wfindnext64i32")
Interceptor.attach(_o__wfindnext64i32, {onLeave: function (args) {send("_o__wfindnext64i32");}});

var _o__wfopen = Module.findExportByName("ucrtbased.dll", "_o__wfopen")
Interceptor.attach(_o__wfopen, {onLeave: function (args) {send("_o__wfopen");}});

var _o__wfopen_s = Module.findExportByName("ucrtbased.dll", "_o__wfopen_s")
Interceptor.attach(_o__wfopen_s, {onLeave: function (args) {send("_o__wfopen_s");}});

var _o__wfreopen = Module.findExportByName("ucrtbased.dll", "_o__wfreopen")
Interceptor.attach(_o__wfreopen, {onLeave: function (args) {send("_o__wfreopen");}});

var _o__wfreopen_s = Module.findExportByName("ucrtbased.dll", "_o__wfreopen_s")
Interceptor.attach(_o__wfreopen_s, {onLeave: function (args) {send("_o__wfreopen_s");}});

var _o__wfsopen = Module.findExportByName("ucrtbased.dll", "_o__wfsopen")
Interceptor.attach(_o__wfsopen, {onLeave: function (args) {send("_o__wfsopen");}});

var _o__wfullpath = Module.findExportByName("ucrtbased.dll", "_o__wfullpath")
Interceptor.attach(_o__wfullpath, {onLeave: function (args) {send("_o__wfullpath");}});

var _o__wgetcwd = Module.findExportByName("ucrtbased.dll", "_o__wgetcwd")
Interceptor.attach(_o__wgetcwd, {onLeave: function (args) {send("_o__wgetcwd");}});

var _o__wgetdcwd = Module.findExportByName("ucrtbased.dll", "_o__wgetdcwd")
Interceptor.attach(_o__wgetdcwd, {onLeave: function (args) {send("_o__wgetdcwd");}});

var _o__wgetenv = Module.findExportByName("ucrtbased.dll", "_o__wgetenv")
Interceptor.attach(_o__wgetenv, {onLeave: function (args) {send("_o__wgetenv");}});

var _o__wgetenv_s = Module.findExportByName("ucrtbased.dll", "_o__wgetenv_s")
Interceptor.attach(_o__wgetenv_s, {onLeave: function (args) {send("_o__wgetenv_s");}});

var _o__wmakepath = Module.findExportByName("ucrtbased.dll", "_o__wmakepath")
Interceptor.attach(_o__wmakepath, {onLeave: function (args) {send("_o__wmakepath");}});

var _o__wmakepath_s = Module.findExportByName("ucrtbased.dll", "_o__wmakepath_s")
Interceptor.attach(_o__wmakepath_s, {onLeave: function (args) {send("_o__wmakepath_s");}});

var _o__wmkdir = Module.findExportByName("ucrtbased.dll", "_o__wmkdir")
Interceptor.attach(_o__wmkdir, {onLeave: function (args) {send("_o__wmkdir");}});

var _o__wmktemp = Module.findExportByName("ucrtbased.dll", "_o__wmktemp")
Interceptor.attach(_o__wmktemp, {onLeave: function (args) {send("_o__wmktemp");}});

var _o__wmktemp_s = Module.findExportByName("ucrtbased.dll", "_o__wmktemp_s")
Interceptor.attach(_o__wmktemp_s, {onLeave: function (args) {send("_o__wmktemp_s");}});

var _o__wperror = Module.findExportByName("ucrtbased.dll", "_o__wperror")
Interceptor.attach(_o__wperror, {onLeave: function (args) {send("_o__wperror");}});

var _o__wpopen = Module.findExportByName("ucrtbased.dll", "_o__wpopen")
Interceptor.attach(_o__wpopen, {onLeave: function (args) {send("_o__wpopen");}});

var _o__wputenv = Module.findExportByName("ucrtbased.dll", "_o__wputenv")
Interceptor.attach(_o__wputenv, {onLeave: function (args) {send("_o__wputenv");}});

var _o__wputenv_s = Module.findExportByName("ucrtbased.dll", "_o__wputenv_s")
Interceptor.attach(_o__wputenv_s, {onLeave: function (args) {send("_o__wputenv_s");}});

var _o__wremove = Module.findExportByName("ucrtbased.dll", "_o__wremove")
Interceptor.attach(_o__wremove, {onLeave: function (args) {send("_o__wremove");}});

var _o__wrename = Module.findExportByName("ucrtbased.dll", "_o__wrename")
Interceptor.attach(_o__wrename, {onLeave: function (args) {send("_o__wrename");}});

var _o__write = Module.findExportByName("ucrtbased.dll", "_o__write")
Interceptor.attach(_o__write, {onLeave: function (args) {send("_o__write");}});

var _o__wrmdir = Module.findExportByName("ucrtbased.dll", "_o__wrmdir")
Interceptor.attach(_o__wrmdir, {onLeave: function (args) {send("_o__wrmdir");}});

var _o__wsearchenv = Module.findExportByName("ucrtbased.dll", "_o__wsearchenv")
Interceptor.attach(_o__wsearchenv, {onLeave: function (args) {send("_o__wsearchenv");}});

var _o__wsearchenv_s = Module.findExportByName("ucrtbased.dll", "_o__wsearchenv_s")
Interceptor.attach(_o__wsearchenv_s, {onLeave: function (args) {send("_o__wsearchenv_s");}});

var _o__wsetlocale = Module.findExportByName("ucrtbased.dll", "_o__wsetlocale")
Interceptor.attach(_o__wsetlocale, {onLeave: function (args) {send("_o__wsetlocale");}});

var _o__wsopen_dispatch = Module.findExportByName("ucrtbased.dll", "_o__wsopen_dispatch")
Interceptor.attach(_o__wsopen_dispatch, {onLeave: function (args) {send("_o__wsopen_dispatch");}});

var _o__wsopen_s = Module.findExportByName("ucrtbased.dll", "_o__wsopen_s")
Interceptor.attach(_o__wsopen_s, {onLeave: function (args) {send("_o__wsopen_s");}});

var _o__wspawnv = Module.findExportByName("ucrtbased.dll", "_o__wspawnv")
Interceptor.attach(_o__wspawnv, {onLeave: function (args) {send("_o__wspawnv");}});

var _o__wspawnve = Module.findExportByName("ucrtbased.dll", "_o__wspawnve")
Interceptor.attach(_o__wspawnve, {onLeave: function (args) {send("_o__wspawnve");}});

var _o__wspawnvp = Module.findExportByName("ucrtbased.dll", "_o__wspawnvp")
Interceptor.attach(_o__wspawnvp, {onLeave: function (args) {send("_o__wspawnvp");}});

var _o__wspawnvpe = Module.findExportByName("ucrtbased.dll", "_o__wspawnvpe")
Interceptor.attach(_o__wspawnvpe, {onLeave: function (args) {send("_o__wspawnvpe");}});

var _o__wsplitpath = Module.findExportByName("ucrtbased.dll", "_o__wsplitpath")
Interceptor.attach(_o__wsplitpath, {onLeave: function (args) {send("_o__wsplitpath");}});

var _o__wsplitpath_s = Module.findExportByName("ucrtbased.dll", "_o__wsplitpath_s")
Interceptor.attach(_o__wsplitpath_s, {onLeave: function (args) {send("_o__wsplitpath_s");}});

var _o__wstat32 = Module.findExportByName("ucrtbased.dll", "_o__wstat32")
Interceptor.attach(_o__wstat32, {onLeave: function (args) {send("_o__wstat32");}});

var _o__wstat32i64 = Module.findExportByName("ucrtbased.dll", "_o__wstat32i64")
Interceptor.attach(_o__wstat32i64, {onLeave: function (args) {send("_o__wstat32i64");}});

var _o__wstat64 = Module.findExportByName("ucrtbased.dll", "_o__wstat64")
Interceptor.attach(_o__wstat64, {onLeave: function (args) {send("_o__wstat64");}});

var _o__wstat64i32 = Module.findExportByName("ucrtbased.dll", "_o__wstat64i32")
Interceptor.attach(_o__wstat64i32, {onLeave: function (args) {send("_o__wstat64i32");}});

var _o__wstrdate = Module.findExportByName("ucrtbased.dll", "_o__wstrdate")
Interceptor.attach(_o__wstrdate, {onLeave: function (args) {send("_o__wstrdate");}});

var _o__wstrdate_s = Module.findExportByName("ucrtbased.dll", "_o__wstrdate_s")
Interceptor.attach(_o__wstrdate_s, {onLeave: function (args) {send("_o__wstrdate_s");}});

var _o__wstrtime = Module.findExportByName("ucrtbased.dll", "_o__wstrtime")
Interceptor.attach(_o__wstrtime, {onLeave: function (args) {send("_o__wstrtime");}});

var _o__wstrtime_s = Module.findExportByName("ucrtbased.dll", "_o__wstrtime_s")
Interceptor.attach(_o__wstrtime_s, {onLeave: function (args) {send("_o__wstrtime_s");}});

var _o__wsystem = Module.findExportByName("ucrtbased.dll", "_o__wsystem")
Interceptor.attach(_o__wsystem, {onLeave: function (args) {send("_o__wsystem");}});

var _o__wtmpnam_s = Module.findExportByName("ucrtbased.dll", "_o__wtmpnam_s")
Interceptor.attach(_o__wtmpnam_s, {onLeave: function (args) {send("_o__wtmpnam_s");}});

var _o__wtof = Module.findExportByName("ucrtbased.dll", "_o__wtof")
Interceptor.attach(_o__wtof, {onLeave: function (args) {send("_o__wtof");}});

var _o__wtof_l = Module.findExportByName("ucrtbased.dll", "_o__wtof_l")
Interceptor.attach(_o__wtof_l, {onLeave: function (args) {send("_o__wtof_l");}});

var _o__wtoi = Module.findExportByName("ucrtbased.dll", "_o__wtoi")
Interceptor.attach(_o__wtoi, {onLeave: function (args) {send("_o__wtoi");}});

var _o__wtoi64 = Module.findExportByName("ucrtbased.dll", "_o__wtoi64")
Interceptor.attach(_o__wtoi64, {onLeave: function (args) {send("_o__wtoi64");}});

var _o__wtoi64_l = Module.findExportByName("ucrtbased.dll", "_o__wtoi64_l")
Interceptor.attach(_o__wtoi64_l, {onLeave: function (args) {send("_o__wtoi64_l");}});

var _o__wtoi_l = Module.findExportByName("ucrtbased.dll", "_o__wtoi_l")
Interceptor.attach(_o__wtoi_l, {onLeave: function (args) {send("_o__wtoi_l");}});

var _o__wtol = Module.findExportByName("ucrtbased.dll", "_o__wtol")
Interceptor.attach(_o__wtol, {onLeave: function (args) {send("_o__wtol");}});

var _o__wtol_l = Module.findExportByName("ucrtbased.dll", "_o__wtol_l")
Interceptor.attach(_o__wtol_l, {onLeave: function (args) {send("_o__wtol_l");}});

var _o__wtoll = Module.findExportByName("ucrtbased.dll", "_o__wtoll")
Interceptor.attach(_o__wtoll, {onLeave: function (args) {send("_o__wtoll");}});

var _o__wtoll_l = Module.findExportByName("ucrtbased.dll", "_o__wtoll_l")
Interceptor.attach(_o__wtoll_l, {onLeave: function (args) {send("_o__wtoll_l");}});

var _o__wunlink = Module.findExportByName("ucrtbased.dll", "_o__wunlink")
Interceptor.attach(_o__wunlink, {onLeave: function (args) {send("_o__wunlink");}});

var _o__wutime32 = Module.findExportByName("ucrtbased.dll", "_o__wutime32")
Interceptor.attach(_o__wutime32, {onLeave: function (args) {send("_o__wutime32");}});

var _o__wutime64 = Module.findExportByName("ucrtbased.dll", "_o__wutime64")
Interceptor.attach(_o__wutime64, {onLeave: function (args) {send("_o__wutime64");}});

var _o__y0 = Module.findExportByName("ucrtbased.dll", "_o__y0")
Interceptor.attach(_o__y0, {onLeave: function (args) {send("_o__y0");}});

var _o__y1 = Module.findExportByName("ucrtbased.dll", "_o__y1")
Interceptor.attach(_o__y1, {onLeave: function (args) {send("_o__y1");}});

var _o__yn = Module.findExportByName("ucrtbased.dll", "_o__yn")
Interceptor.attach(_o__yn, {onLeave: function (args) {send("_o__yn");}});

var _o_abort = Module.findExportByName("ucrtbased.dll", "_o_abort")
Interceptor.attach(_o_abort, {onLeave: function (args) {send("_o_abort");}});

var _o_acos = Module.findExportByName("ucrtbased.dll", "_o_acos")
Interceptor.attach(_o_acos, {onLeave: function (args) {send("_o_acos");}});

var _o_acosf = Module.findExportByName("ucrtbased.dll", "_o_acosf")
Interceptor.attach(_o_acosf, {onLeave: function (args) {send("_o_acosf");}});

var _o_acosh = Module.findExportByName("ucrtbased.dll", "_o_acosh")
Interceptor.attach(_o_acosh, {onLeave: function (args) {send("_o_acosh");}});

var _o_acoshf = Module.findExportByName("ucrtbased.dll", "_o_acoshf")
Interceptor.attach(_o_acoshf, {onLeave: function (args) {send("_o_acoshf");}});

var _o_acoshl = Module.findExportByName("ucrtbased.dll", "_o_acoshl")
Interceptor.attach(_o_acoshl, {onLeave: function (args) {send("_o_acoshl");}});

var _o_asctime = Module.findExportByName("ucrtbased.dll", "_o_asctime")
Interceptor.attach(_o_asctime, {onLeave: function (args) {send("_o_asctime");}});

var _o_asctime_s = Module.findExportByName("ucrtbased.dll", "_o_asctime_s")
Interceptor.attach(_o_asctime_s, {onLeave: function (args) {send("_o_asctime_s");}});

var _o_asin = Module.findExportByName("ucrtbased.dll", "_o_asin")
Interceptor.attach(_o_asin, {onLeave: function (args) {send("_o_asin");}});

var _o_asinf = Module.findExportByName("ucrtbased.dll", "_o_asinf")
Interceptor.attach(_o_asinf, {onLeave: function (args) {send("_o_asinf");}});

var _o_asinh = Module.findExportByName("ucrtbased.dll", "_o_asinh")
Interceptor.attach(_o_asinh, {onLeave: function (args) {send("_o_asinh");}});

var _o_asinhf = Module.findExportByName("ucrtbased.dll", "_o_asinhf")
Interceptor.attach(_o_asinhf, {onLeave: function (args) {send("_o_asinhf");}});

var _o_asinhl = Module.findExportByName("ucrtbased.dll", "_o_asinhl")
Interceptor.attach(_o_asinhl, {onLeave: function (args) {send("_o_asinhl");}});

var _o_atan = Module.findExportByName("ucrtbased.dll", "_o_atan")
Interceptor.attach(_o_atan, {onLeave: function (args) {send("_o_atan");}});

var _o_atan2 = Module.findExportByName("ucrtbased.dll", "_o_atan2")
Interceptor.attach(_o_atan2, {onLeave: function (args) {send("_o_atan2");}});

var _o_atan2f = Module.findExportByName("ucrtbased.dll", "_o_atan2f")
Interceptor.attach(_o_atan2f, {onLeave: function (args) {send("_o_atan2f");}});

var _o_atanf = Module.findExportByName("ucrtbased.dll", "_o_atanf")
Interceptor.attach(_o_atanf, {onLeave: function (args) {send("_o_atanf");}});

var _o_atanh = Module.findExportByName("ucrtbased.dll", "_o_atanh")
Interceptor.attach(_o_atanh, {onLeave: function (args) {send("_o_atanh");}});

var _o_atanhf = Module.findExportByName("ucrtbased.dll", "_o_atanhf")
Interceptor.attach(_o_atanhf, {onLeave: function (args) {send("_o_atanhf");}});

var _o_atanhl = Module.findExportByName("ucrtbased.dll", "_o_atanhl")
Interceptor.attach(_o_atanhl, {onLeave: function (args) {send("_o_atanhl");}});

var _o_atof = Module.findExportByName("ucrtbased.dll", "_o_atof")
Interceptor.attach(_o_atof, {onLeave: function (args) {send("_o_atof");}});

var _o_atoi = Module.findExportByName("ucrtbased.dll", "_o_atoi")
Interceptor.attach(_o_atoi, {onLeave: function (args) {send("_o_atoi");}});

var _o_atol = Module.findExportByName("ucrtbased.dll", "_o_atol")
Interceptor.attach(_o_atol, {onLeave: function (args) {send("_o_atol");}});

var _o_atoll = Module.findExportByName("ucrtbased.dll", "_o_atoll")
Interceptor.attach(_o_atoll, {onLeave: function (args) {send("_o_atoll");}});

var _o_bsearch = Module.findExportByName("ucrtbased.dll", "_o_bsearch")
Interceptor.attach(_o_bsearch, {onLeave: function (args) {send("_o_bsearch");}});

var _o_bsearch_s = Module.findExportByName("ucrtbased.dll", "_o_bsearch_s")
Interceptor.attach(_o_bsearch_s, {onLeave: function (args) {send("_o_bsearch_s");}});

var _o_btowc = Module.findExportByName("ucrtbased.dll", "_o_btowc")
Interceptor.attach(_o_btowc, {onLeave: function (args) {send("_o_btowc");}});

var _o_calloc = Module.findExportByName("ucrtbased.dll", "_o_calloc")
Interceptor.attach(_o_calloc, {onLeave: function (args) {send("_o_calloc");}});

var _o_cbrt = Module.findExportByName("ucrtbased.dll", "_o_cbrt")
Interceptor.attach(_o_cbrt, {onLeave: function (args) {send("_o_cbrt");}});

var _o_cbrtf = Module.findExportByName("ucrtbased.dll", "_o_cbrtf")
Interceptor.attach(_o_cbrtf, {onLeave: function (args) {send("_o_cbrtf");}});

var _o_ceil = Module.findExportByName("ucrtbased.dll", "_o_ceil")
Interceptor.attach(_o_ceil, {onLeave: function (args) {send("_o_ceil");}});

var _o_ceilf = Module.findExportByName("ucrtbased.dll", "_o_ceilf")
Interceptor.attach(_o_ceilf, {onLeave: function (args) {send("_o_ceilf");}});

var _o_clearerr = Module.findExportByName("ucrtbased.dll", "_o_clearerr")
Interceptor.attach(_o_clearerr, {onLeave: function (args) {send("_o_clearerr");}});

var _o_clearerr_s = Module.findExportByName("ucrtbased.dll", "_o_clearerr_s")
Interceptor.attach(_o_clearerr_s, {onLeave: function (args) {send("_o_clearerr_s");}});

var _o_cos = Module.findExportByName("ucrtbased.dll", "_o_cos")
Interceptor.attach(_o_cos, {onLeave: function (args) {send("_o_cos");}});

var _o_cosf = Module.findExportByName("ucrtbased.dll", "_o_cosf")
Interceptor.attach(_o_cosf, {onLeave: function (args) {send("_o_cosf");}});

var _o_cosh = Module.findExportByName("ucrtbased.dll", "_o_cosh")
Interceptor.attach(_o_cosh, {onLeave: function (args) {send("_o_cosh");}});

var _o_coshf = Module.findExportByName("ucrtbased.dll", "_o_coshf")
Interceptor.attach(_o_coshf, {onLeave: function (args) {send("_o_coshf");}});

var _o_erf = Module.findExportByName("ucrtbased.dll", "_o_erf")
Interceptor.attach(_o_erf, {onLeave: function (args) {send("_o_erf");}});

var _o_erfc = Module.findExportByName("ucrtbased.dll", "_o_erfc")
Interceptor.attach(_o_erfc, {onLeave: function (args) {send("_o_erfc");}});

var _o_erfcf = Module.findExportByName("ucrtbased.dll", "_o_erfcf")
Interceptor.attach(_o_erfcf, {onLeave: function (args) {send("_o_erfcf");}});

var _o_erfcl = Module.findExportByName("ucrtbased.dll", "_o_erfcl")
Interceptor.attach(_o_erfcl, {onLeave: function (args) {send("_o_erfcl");}});

var _o_erff = Module.findExportByName("ucrtbased.dll", "_o_erff")
Interceptor.attach(_o_erff, {onLeave: function (args) {send("_o_erff");}});

var _o_erfl = Module.findExportByName("ucrtbased.dll", "_o_erfl")
Interceptor.attach(_o_erfl, {onLeave: function (args) {send("_o_erfl");}});

var _o_exit = Module.findExportByName("ucrtbased.dll", "_o_exit")
Interceptor.attach(_o_exit, {onLeave: function (args) {send("_o_exit");}});

var _o_exp = Module.findExportByName("ucrtbased.dll", "_o_exp")
Interceptor.attach(_o_exp, {onLeave: function (args) {send("_o_exp");}});

var _o_exp2 = Module.findExportByName("ucrtbased.dll", "_o_exp2")
Interceptor.attach(_o_exp2, {onLeave: function (args) {send("_o_exp2");}});

var _o_exp2f = Module.findExportByName("ucrtbased.dll", "_o_exp2f")
Interceptor.attach(_o_exp2f, {onLeave: function (args) {send("_o_exp2f");}});

var _o_exp2l = Module.findExportByName("ucrtbased.dll", "_o_exp2l")
Interceptor.attach(_o_exp2l, {onLeave: function (args) {send("_o_exp2l");}});

var _o_expf = Module.findExportByName("ucrtbased.dll", "_o_expf")
Interceptor.attach(_o_expf, {onLeave: function (args) {send("_o_expf");}});

var _o_fabs = Module.findExportByName("ucrtbased.dll", "_o_fabs")
Interceptor.attach(_o_fabs, {onLeave: function (args) {send("_o_fabs");}});

var _o_fclose = Module.findExportByName("ucrtbased.dll", "_o_fclose")
Interceptor.attach(_o_fclose, {onLeave: function (args) {send("_o_fclose");}});

var _o_feof = Module.findExportByName("ucrtbased.dll", "_o_feof")
Interceptor.attach(_o_feof, {onLeave: function (args) {send("_o_feof");}});

var _o_ferror = Module.findExportByName("ucrtbased.dll", "_o_ferror")
Interceptor.attach(_o_ferror, {onLeave: function (args) {send("_o_ferror");}});

var _o_fflush = Module.findExportByName("ucrtbased.dll", "_o_fflush")
Interceptor.attach(_o_fflush, {onLeave: function (args) {send("_o_fflush");}});

var _o_fgetc = Module.findExportByName("ucrtbased.dll", "_o_fgetc")
Interceptor.attach(_o_fgetc, {onLeave: function (args) {send("_o_fgetc");}});

var _o_fgetpos = Module.findExportByName("ucrtbased.dll", "_o_fgetpos")
Interceptor.attach(_o_fgetpos, {onLeave: function (args) {send("_o_fgetpos");}});

var _o_fgets = Module.findExportByName("ucrtbased.dll", "_o_fgets")
Interceptor.attach(_o_fgets, {onLeave: function (args) {send("_o_fgets");}});

var _o_fgetwc = Module.findExportByName("ucrtbased.dll", "_o_fgetwc")
Interceptor.attach(_o_fgetwc, {onLeave: function (args) {send("_o_fgetwc");}});

var _o_fgetws = Module.findExportByName("ucrtbased.dll", "_o_fgetws")
Interceptor.attach(_o_fgetws, {onLeave: function (args) {send("_o_fgetws");}});

var _o_floor = Module.findExportByName("ucrtbased.dll", "_o_floor")
Interceptor.attach(_o_floor, {onLeave: function (args) {send("_o_floor");}});

var _o_floorf = Module.findExportByName("ucrtbased.dll", "_o_floorf")
Interceptor.attach(_o_floorf, {onLeave: function (args) {send("_o_floorf");}});

var _o_fma = Module.findExportByName("ucrtbased.dll", "_o_fma")
Interceptor.attach(_o_fma, {onLeave: function (args) {send("_o_fma");}});

var _o_fmaf = Module.findExportByName("ucrtbased.dll", "_o_fmaf")
Interceptor.attach(_o_fmaf, {onLeave: function (args) {send("_o_fmaf");}});

var _o_fmal = Module.findExportByName("ucrtbased.dll", "_o_fmal")
Interceptor.attach(_o_fmal, {onLeave: function (args) {send("_o_fmal");}});

var _o_fmod = Module.findExportByName("ucrtbased.dll", "_o_fmod")
Interceptor.attach(_o_fmod, {onLeave: function (args) {send("_o_fmod");}});

var _o_fmodf = Module.findExportByName("ucrtbased.dll", "_o_fmodf")
Interceptor.attach(_o_fmodf, {onLeave: function (args) {send("_o_fmodf");}});

var _o_fopen = Module.findExportByName("ucrtbased.dll", "_o_fopen")
Interceptor.attach(_o_fopen, {onLeave: function (args) {send("_o_fopen");}});

var _o_fopen_s = Module.findExportByName("ucrtbased.dll", "_o_fopen_s")
Interceptor.attach(_o_fopen_s, {onLeave: function (args) {send("_o_fopen_s");}});

var _o_fputc = Module.findExportByName("ucrtbased.dll", "_o_fputc")
Interceptor.attach(_o_fputc, {onLeave: function (args) {send("_o_fputc");}});

var _o_fputs = Module.findExportByName("ucrtbased.dll", "_o_fputs")
Interceptor.attach(_o_fputs, {onLeave: function (args) {send("_o_fputs");}});

var _o_fputwc = Module.findExportByName("ucrtbased.dll", "_o_fputwc")
Interceptor.attach(_o_fputwc, {onLeave: function (args) {send("_o_fputwc");}});

var _o_fputws = Module.findExportByName("ucrtbased.dll", "_o_fputws")
Interceptor.attach(_o_fputws, {onLeave: function (args) {send("_o_fputws");}});

var _o_fread = Module.findExportByName("ucrtbased.dll", "_o_fread")
Interceptor.attach(_o_fread, {onLeave: function (args) {send("_o_fread");}});

var _o_fread_s = Module.findExportByName("ucrtbased.dll", "_o_fread_s")
Interceptor.attach(_o_fread_s, {onLeave: function (args) {send("_o_fread_s");}});

var _o_free = Module.findExportByName("ucrtbased.dll", "_o_free")
Interceptor.attach(_o_free, {onLeave: function (args) {send("_o_free");}});

var _o_freopen = Module.findExportByName("ucrtbased.dll", "_o_freopen")
Interceptor.attach(_o_freopen, {onLeave: function (args) {send("_o_freopen");}});

var _o_freopen_s = Module.findExportByName("ucrtbased.dll", "_o_freopen_s")
Interceptor.attach(_o_freopen_s, {onLeave: function (args) {send("_o_freopen_s");}});

var _o_frexp = Module.findExportByName("ucrtbased.dll", "_o_frexp")
Interceptor.attach(_o_frexp, {onLeave: function (args) {send("_o_frexp");}});

var _o_fseek = Module.findExportByName("ucrtbased.dll", "_o_fseek")
Interceptor.attach(_o_fseek, {onLeave: function (args) {send("_o_fseek");}});

var _o_fsetpos = Module.findExportByName("ucrtbased.dll", "_o_fsetpos")
Interceptor.attach(_o_fsetpos, {onLeave: function (args) {send("_o_fsetpos");}});

var _o_ftell = Module.findExportByName("ucrtbased.dll", "_o_ftell")
Interceptor.attach(_o_ftell, {onLeave: function (args) {send("_o_ftell");}});

var _o_fwrite = Module.findExportByName("ucrtbased.dll", "_o_fwrite")
Interceptor.attach(_o_fwrite, {onLeave: function (args) {send("_o_fwrite");}});

var _o_getc = Module.findExportByName("ucrtbased.dll", "_o_getc")
Interceptor.attach(_o_getc, {onLeave: function (args) {send("_o_getc");}});

var _o_getchar = Module.findExportByName("ucrtbased.dll", "_o_getchar")
Interceptor.attach(_o_getchar, {onLeave: function (args) {send("_o_getchar");}});

var _o_getenv = Module.findExportByName("ucrtbased.dll", "_o_getenv")
Interceptor.attach(_o_getenv, {onLeave: function (args) {send("_o_getenv");}});

var _o_getenv_s = Module.findExportByName("ucrtbased.dll", "_o_getenv_s")
Interceptor.attach(_o_getenv_s, {onLeave: function (args) {send("_o_getenv_s");}});

var _o_gets = Module.findExportByName("ucrtbased.dll", "_o_gets")
Interceptor.attach(_o_gets, {onLeave: function (args) {send("_o_gets");}});

var _o_gets_s = Module.findExportByName("ucrtbased.dll", "_o_gets_s")
Interceptor.attach(_o_gets_s, {onLeave: function (args) {send("_o_gets_s");}});

var _o_getwc = Module.findExportByName("ucrtbased.dll", "_o_getwc")
Interceptor.attach(_o_getwc, {onLeave: function (args) {send("_o_getwc");}});

var _o_getwchar = Module.findExportByName("ucrtbased.dll", "_o_getwchar")
Interceptor.attach(_o_getwchar, {onLeave: function (args) {send("_o_getwchar");}});

var _o_hypot = Module.findExportByName("ucrtbased.dll", "_o_hypot")
Interceptor.attach(_o_hypot, {onLeave: function (args) {send("_o_hypot");}});

var _o_is_wctype = Module.findExportByName("ucrtbased.dll", "_o_is_wctype")
Interceptor.attach(_o_is_wctype, {onLeave: function (args) {send("_o_is_wctype");}});

var _o_isalnum = Module.findExportByName("ucrtbased.dll", "_o_isalnum")
Interceptor.attach(_o_isalnum, {onLeave: function (args) {send("_o_isalnum");}});

var _o_isalpha = Module.findExportByName("ucrtbased.dll", "_o_isalpha")
Interceptor.attach(_o_isalpha, {onLeave: function (args) {send("_o_isalpha");}});

var _o_isblank = Module.findExportByName("ucrtbased.dll", "_o_isblank")
Interceptor.attach(_o_isblank, {onLeave: function (args) {send("_o_isblank");}});

var _o_iscntrl = Module.findExportByName("ucrtbased.dll", "_o_iscntrl")
Interceptor.attach(_o_iscntrl, {onLeave: function (args) {send("_o_iscntrl");}});

var _o_isdigit = Module.findExportByName("ucrtbased.dll", "_o_isdigit")
Interceptor.attach(_o_isdigit, {onLeave: function (args) {send("_o_isdigit");}});

var _o_isgraph = Module.findExportByName("ucrtbased.dll", "_o_isgraph")
Interceptor.attach(_o_isgraph, {onLeave: function (args) {send("_o_isgraph");}});

var _o_isleadbyte = Module.findExportByName("ucrtbased.dll", "_o_isleadbyte")
Interceptor.attach(_o_isleadbyte, {onLeave: function (args) {send("_o_isleadbyte");}});

var _o_islower = Module.findExportByName("ucrtbased.dll", "_o_islower")
Interceptor.attach(_o_islower, {onLeave: function (args) {send("_o_islower");}});

var _o_isprint = Module.findExportByName("ucrtbased.dll", "_o_isprint")
Interceptor.attach(_o_isprint, {onLeave: function (args) {send("_o_isprint");}});

var _o_ispunct = Module.findExportByName("ucrtbased.dll", "_o_ispunct")
Interceptor.attach(_o_ispunct, {onLeave: function (args) {send("_o_ispunct");}});

var _o_isspace = Module.findExportByName("ucrtbased.dll", "_o_isspace")
Interceptor.attach(_o_isspace, {onLeave: function (args) {send("_o_isspace");}});

var _o_isupper = Module.findExportByName("ucrtbased.dll", "_o_isupper")
Interceptor.attach(_o_isupper, {onLeave: function (args) {send("_o_isupper");}});

var _o_iswalnum = Module.findExportByName("ucrtbased.dll", "_o_iswalnum")
Interceptor.attach(_o_iswalnum, {onLeave: function (args) {send("_o_iswalnum");}});

var _o_iswalpha = Module.findExportByName("ucrtbased.dll", "_o_iswalpha")
Interceptor.attach(_o_iswalpha, {onLeave: function (args) {send("_o_iswalpha");}});

var _o_iswascii = Module.findExportByName("ucrtbased.dll", "_o_iswascii")
Interceptor.attach(_o_iswascii, {onLeave: function (args) {send("_o_iswascii");}});

var _o_iswblank = Module.findExportByName("ucrtbased.dll", "_o_iswblank")
Interceptor.attach(_o_iswblank, {onLeave: function (args) {send("_o_iswblank");}});

var _o_iswcntrl = Module.findExportByName("ucrtbased.dll", "_o_iswcntrl")
Interceptor.attach(_o_iswcntrl, {onLeave: function (args) {send("_o_iswcntrl");}});

var _o_iswctype = Module.findExportByName("ucrtbased.dll", "_o_iswctype")
Interceptor.attach(_o_iswctype, {onLeave: function (args) {send("_o_iswctype");}});

var _o_iswdigit = Module.findExportByName("ucrtbased.dll", "_o_iswdigit")
Interceptor.attach(_o_iswdigit, {onLeave: function (args) {send("_o_iswdigit");}});

var _o_iswgraph = Module.findExportByName("ucrtbased.dll", "_o_iswgraph")
Interceptor.attach(_o_iswgraph, {onLeave: function (args) {send("_o_iswgraph");}});

var _o_iswlower = Module.findExportByName("ucrtbased.dll", "_o_iswlower")
Interceptor.attach(_o_iswlower, {onLeave: function (args) {send("_o_iswlower");}});

var _o_iswprint = Module.findExportByName("ucrtbased.dll", "_o_iswprint")
Interceptor.attach(_o_iswprint, {onLeave: function (args) {send("_o_iswprint");}});

var _o_iswpunct = Module.findExportByName("ucrtbased.dll", "_o_iswpunct")
Interceptor.attach(_o_iswpunct, {onLeave: function (args) {send("_o_iswpunct");}});

var _o_iswspace = Module.findExportByName("ucrtbased.dll", "_o_iswspace")
Interceptor.attach(_o_iswspace, {onLeave: function (args) {send("_o_iswspace");}});

var _o_iswupper = Module.findExportByName("ucrtbased.dll", "_o_iswupper")
Interceptor.attach(_o_iswupper, {onLeave: function (args) {send("_o_iswupper");}});

var _o_iswxdigit = Module.findExportByName("ucrtbased.dll", "_o_iswxdigit")
Interceptor.attach(_o_iswxdigit, {onLeave: function (args) {send("_o_iswxdigit");}});

var _o_isxdigit = Module.findExportByName("ucrtbased.dll", "_o_isxdigit")
Interceptor.attach(_o_isxdigit, {onLeave: function (args) {send("_o_isxdigit");}});

var _o_ldexp = Module.findExportByName("ucrtbased.dll", "_o_ldexp")
Interceptor.attach(_o_ldexp, {onLeave: function (args) {send("_o_ldexp");}});

var _o_lgamma = Module.findExportByName("ucrtbased.dll", "_o_lgamma")
Interceptor.attach(_o_lgamma, {onLeave: function (args) {send("_o_lgamma");}});

var _o_lgammaf = Module.findExportByName("ucrtbased.dll", "_o_lgammaf")
Interceptor.attach(_o_lgammaf, {onLeave: function (args) {send("_o_lgammaf");}});

var _o_lgammal = Module.findExportByName("ucrtbased.dll", "_o_lgammal")
Interceptor.attach(_o_lgammal, {onLeave: function (args) {send("_o_lgammal");}});

var _o_llrint = Module.findExportByName("ucrtbased.dll", "_o_llrint")
Interceptor.attach(_o_llrint, {onLeave: function (args) {send("_o_llrint");}});

var _o_llrintf = Module.findExportByName("ucrtbased.dll", "_o_llrintf")
Interceptor.attach(_o_llrintf, {onLeave: function (args) {send("_o_llrintf");}});

var _o_llrintl = Module.findExportByName("ucrtbased.dll", "_o_llrintl")
Interceptor.attach(_o_llrintl, {onLeave: function (args) {send("_o_llrintl");}});

var _o_llround = Module.findExportByName("ucrtbased.dll", "_o_llround")
Interceptor.attach(_o_llround, {onLeave: function (args) {send("_o_llround");}});

var _o_llroundf = Module.findExportByName("ucrtbased.dll", "_o_llroundf")
Interceptor.attach(_o_llroundf, {onLeave: function (args) {send("_o_llroundf");}});

var _o_llroundl = Module.findExportByName("ucrtbased.dll", "_o_llroundl")
Interceptor.attach(_o_llroundl, {onLeave: function (args) {send("_o_llroundl");}});

var _o_localeconv = Module.findExportByName("ucrtbased.dll", "_o_localeconv")
Interceptor.attach(_o_localeconv, {onLeave: function (args) {send("_o_localeconv");}});

var _o_log = Module.findExportByName("ucrtbased.dll", "_o_log")
Interceptor.attach(_o_log, {onLeave: function (args) {send("_o_log");}});

var _o_log10 = Module.findExportByName("ucrtbased.dll", "_o_log10")
Interceptor.attach(_o_log10, {onLeave: function (args) {send("_o_log10");}});

var _o_log10f = Module.findExportByName("ucrtbased.dll", "_o_log10f")
Interceptor.attach(_o_log10f, {onLeave: function (args) {send("_o_log10f");}});

var _o_log1p = Module.findExportByName("ucrtbased.dll", "_o_log1p")
Interceptor.attach(_o_log1p, {onLeave: function (args) {send("_o_log1p");}});

var _o_log1pf = Module.findExportByName("ucrtbased.dll", "_o_log1pf")
Interceptor.attach(_o_log1pf, {onLeave: function (args) {send("_o_log1pf");}});

var _o_log1pl = Module.findExportByName("ucrtbased.dll", "_o_log1pl")
Interceptor.attach(_o_log1pl, {onLeave: function (args) {send("_o_log1pl");}});

var _o_log2 = Module.findExportByName("ucrtbased.dll", "_o_log2")
Interceptor.attach(_o_log2, {onLeave: function (args) {send("_o_log2");}});

var _o_log2f = Module.findExportByName("ucrtbased.dll", "_o_log2f")
Interceptor.attach(_o_log2f, {onLeave: function (args) {send("_o_log2f");}});

var _o_log2l = Module.findExportByName("ucrtbased.dll", "_o_log2l")
Interceptor.attach(_o_log2l, {onLeave: function (args) {send("_o_log2l");}});

var _o_logb = Module.findExportByName("ucrtbased.dll", "_o_logb")
Interceptor.attach(_o_logb, {onLeave: function (args) {send("_o_logb");}});

var _o_logbf = Module.findExportByName("ucrtbased.dll", "_o_logbf")
Interceptor.attach(_o_logbf, {onLeave: function (args) {send("_o_logbf");}});

var _o_logbl = Module.findExportByName("ucrtbased.dll", "_o_logbl")
Interceptor.attach(_o_logbl, {onLeave: function (args) {send("_o_logbl");}});

var _o_logf = Module.findExportByName("ucrtbased.dll", "_o_logf")
Interceptor.attach(_o_logf, {onLeave: function (args) {send("_o_logf");}});

var _o_lrint = Module.findExportByName("ucrtbased.dll", "_o_lrint")
Interceptor.attach(_o_lrint, {onLeave: function (args) {send("_o_lrint");}});

var _o_lrintf = Module.findExportByName("ucrtbased.dll", "_o_lrintf")
Interceptor.attach(_o_lrintf, {onLeave: function (args) {send("_o_lrintf");}});

var _o_lrintl = Module.findExportByName("ucrtbased.dll", "_o_lrintl")
Interceptor.attach(_o_lrintl, {onLeave: function (args) {send("_o_lrintl");}});

var _o_lround = Module.findExportByName("ucrtbased.dll", "_o_lround")
Interceptor.attach(_o_lround, {onLeave: function (args) {send("_o_lround");}});

var _o_lroundf = Module.findExportByName("ucrtbased.dll", "_o_lroundf")
Interceptor.attach(_o_lroundf, {onLeave: function (args) {send("_o_lroundf");}});

var _o_lroundl = Module.findExportByName("ucrtbased.dll", "_o_lroundl")
Interceptor.attach(_o_lroundl, {onLeave: function (args) {send("_o_lroundl");}});

var _o_malloc = Module.findExportByName("ucrtbased.dll", "_o_malloc")
Interceptor.attach(_o_malloc, {onLeave: function (args) {send("_o_malloc");}});

var _o_mblen = Module.findExportByName("ucrtbased.dll", "_o_mblen")
Interceptor.attach(_o_mblen, {onLeave: function (args) {send("_o_mblen");}});

var _o_mbrlen = Module.findExportByName("ucrtbased.dll", "_o_mbrlen")
Interceptor.attach(_o_mbrlen, {onLeave: function (args) {send("_o_mbrlen");}});

var _o_mbrtoc16 = Module.findExportByName("ucrtbased.dll", "_o_mbrtoc16")
Interceptor.attach(_o_mbrtoc16, {onLeave: function (args) {send("_o_mbrtoc16");}});

var _o_mbrtoc32 = Module.findExportByName("ucrtbased.dll", "_o_mbrtoc32")
Interceptor.attach(_o_mbrtoc32, {onLeave: function (args) {send("_o_mbrtoc32");}});

var _o_mbrtowc = Module.findExportByName("ucrtbased.dll", "_o_mbrtowc")
Interceptor.attach(_o_mbrtowc, {onLeave: function (args) {send("_o_mbrtowc");}});

var _o_mbsrtowcs = Module.findExportByName("ucrtbased.dll", "_o_mbsrtowcs")
Interceptor.attach(_o_mbsrtowcs, {onLeave: function (args) {send("_o_mbsrtowcs");}});

var _o_mbsrtowcs_s = Module.findExportByName("ucrtbased.dll", "_o_mbsrtowcs_s")
Interceptor.attach(_o_mbsrtowcs_s, {onLeave: function (args) {send("_o_mbsrtowcs_s");}});

var _o_mbstowcs = Module.findExportByName("ucrtbased.dll", "_o_mbstowcs")
Interceptor.attach(_o_mbstowcs, {onLeave: function (args) {send("_o_mbstowcs");}});

var _o_mbstowcs_s = Module.findExportByName("ucrtbased.dll", "_o_mbstowcs_s")
Interceptor.attach(_o_mbstowcs_s, {onLeave: function (args) {send("_o_mbstowcs_s");}});

var _o_mbtowc = Module.findExportByName("ucrtbased.dll", "_o_mbtowc")
Interceptor.attach(_o_mbtowc, {onLeave: function (args) {send("_o_mbtowc");}});

var _o_memcpy_s = Module.findExportByName("ucrtbased.dll", "_o_memcpy_s")
Interceptor.attach(_o_memcpy_s, {onLeave: function (args) {send("_o_memcpy_s");}});

var _o_memset = Module.findExportByName("ucrtbased.dll", "_o_memset")
Interceptor.attach(_o_memset, {onLeave: function (args) {send("_o_memset");}});

var _o_modf = Module.findExportByName("ucrtbased.dll", "_o_modf")
Interceptor.attach(_o_modf, {onLeave: function (args) {send("_o_modf");}});

var _o_modff = Module.findExportByName("ucrtbased.dll", "_o_modff")
Interceptor.attach(_o_modff, {onLeave: function (args) {send("_o_modff");}});

var _o_nan = Module.findExportByName("ucrtbased.dll", "_o_nan")
Interceptor.attach(_o_nan, {onLeave: function (args) {send("_o_nan");}});

var _o_nanf = Module.findExportByName("ucrtbased.dll", "_o_nanf")
Interceptor.attach(_o_nanf, {onLeave: function (args) {send("_o_nanf");}});

var _o_nanl = Module.findExportByName("ucrtbased.dll", "_o_nanl")
Interceptor.attach(_o_nanl, {onLeave: function (args) {send("_o_nanl");}});

var _o_nearbyint = Module.findExportByName("ucrtbased.dll", "_o_nearbyint")
Interceptor.attach(_o_nearbyint, {onLeave: function (args) {send("_o_nearbyint");}});

var _o_nearbyintf = Module.findExportByName("ucrtbased.dll", "_o_nearbyintf")
Interceptor.attach(_o_nearbyintf, {onLeave: function (args) {send("_o_nearbyintf");}});

var _o_nearbyintl = Module.findExportByName("ucrtbased.dll", "_o_nearbyintl")
Interceptor.attach(_o_nearbyintl, {onLeave: function (args) {send("_o_nearbyintl");}});

var _o_nextafter = Module.findExportByName("ucrtbased.dll", "_o_nextafter")
Interceptor.attach(_o_nextafter, {onLeave: function (args) {send("_o_nextafter");}});

var _o_nextafterf = Module.findExportByName("ucrtbased.dll", "_o_nextafterf")
Interceptor.attach(_o_nextafterf, {onLeave: function (args) {send("_o_nextafterf");}});

var _o_nextafterl = Module.findExportByName("ucrtbased.dll", "_o_nextafterl")
Interceptor.attach(_o_nextafterl, {onLeave: function (args) {send("_o_nextafterl");}});

var _o_nexttoward = Module.findExportByName("ucrtbased.dll", "_o_nexttoward")
Interceptor.attach(_o_nexttoward, {onLeave: function (args) {send("_o_nexttoward");}});

var _o_nexttowardf = Module.findExportByName("ucrtbased.dll", "_o_nexttowardf")
Interceptor.attach(_o_nexttowardf, {onLeave: function (args) {send("_o_nexttowardf");}});

var _o_nexttowardl = Module.findExportByName("ucrtbased.dll", "_o_nexttowardl")
Interceptor.attach(_o_nexttowardl, {onLeave: function (args) {send("_o_nexttowardl");}});

var _o_pow = Module.findExportByName("ucrtbased.dll", "_o_pow")
Interceptor.attach(_o_pow, {onLeave: function (args) {send("_o_pow");}});

var _o_powf = Module.findExportByName("ucrtbased.dll", "_o_powf")
Interceptor.attach(_o_powf, {onLeave: function (args) {send("_o_powf");}});

var _o_putc = Module.findExportByName("ucrtbased.dll", "_o_putc")
Interceptor.attach(_o_putc, {onLeave: function (args) {send("_o_putc");}});

var _o_putchar = Module.findExportByName("ucrtbased.dll", "_o_putchar")
Interceptor.attach(_o_putchar, {onLeave: function (args) {send("_o_putchar");}});

var _o_puts = Module.findExportByName("ucrtbased.dll", "_o_puts")
Interceptor.attach(_o_puts, {onLeave: function (args) {send("_o_puts");}});

var _o_putwc = Module.findExportByName("ucrtbased.dll", "_o_putwc")
Interceptor.attach(_o_putwc, {onLeave: function (args) {send("_o_putwc");}});

var _o_putwchar = Module.findExportByName("ucrtbased.dll", "_o_putwchar")
Interceptor.attach(_o_putwchar, {onLeave: function (args) {send("_o_putwchar");}});

var _o_qsort = Module.findExportByName("ucrtbased.dll", "_o_qsort")
Interceptor.attach(_o_qsort, {onLeave: function (args) {send("_o_qsort");}});

var _o_qsort_s = Module.findExportByName("ucrtbased.dll", "_o_qsort_s")
Interceptor.attach(_o_qsort_s, {onLeave: function (args) {send("_o_qsort_s");}});

var _o_raise = Module.findExportByName("ucrtbased.dll", "_o_raise")
Interceptor.attach(_o_raise, {onLeave: function (args) {send("_o_raise");}});

var _o_rand = Module.findExportByName("ucrtbased.dll", "_o_rand")
Interceptor.attach(_o_rand, {onLeave: function (args) {send("_o_rand");}});

var _o_rand_s = Module.findExportByName("ucrtbased.dll", "_o_rand_s")
Interceptor.attach(_o_rand_s, {onLeave: function (args) {send("_o_rand_s");}});

var _o_realloc = Module.findExportByName("ucrtbased.dll", "_o_realloc")
Interceptor.attach(_o_realloc, {onLeave: function (args) {send("_o_realloc");}});

var _o_remainder = Module.findExportByName("ucrtbased.dll", "_o_remainder")
Interceptor.attach(_o_remainder, {onLeave: function (args) {send("_o_remainder");}});

var _o_remainderf = Module.findExportByName("ucrtbased.dll", "_o_remainderf")
Interceptor.attach(_o_remainderf, {onLeave: function (args) {send("_o_remainderf");}});

var _o_remainderl = Module.findExportByName("ucrtbased.dll", "_o_remainderl")
Interceptor.attach(_o_remainderl, {onLeave: function (args) {send("_o_remainderl");}});

var _o_remove = Module.findExportByName("ucrtbased.dll", "_o_remove")
Interceptor.attach(_o_remove, {onLeave: function (args) {send("_o_remove");}});

var _o_remquo = Module.findExportByName("ucrtbased.dll", "_o_remquo")
Interceptor.attach(_o_remquo, {onLeave: function (args) {send("_o_remquo");}});

var _o_remquof = Module.findExportByName("ucrtbased.dll", "_o_remquof")
Interceptor.attach(_o_remquof, {onLeave: function (args) {send("_o_remquof");}});

var _o_remquol = Module.findExportByName("ucrtbased.dll", "_o_remquol")
Interceptor.attach(_o_remquol, {onLeave: function (args) {send("_o_remquol");}});

var _o_rename = Module.findExportByName("ucrtbased.dll", "_o_rename")
Interceptor.attach(_o_rename, {onLeave: function (args) {send("_o_rename");}});

var _o_rewind = Module.findExportByName("ucrtbased.dll", "_o_rewind")
Interceptor.attach(_o_rewind, {onLeave: function (args) {send("_o_rewind");}});

var _o_rint = Module.findExportByName("ucrtbased.dll", "_o_rint")
Interceptor.attach(_o_rint, {onLeave: function (args) {send("_o_rint");}});

var _o_rintf = Module.findExportByName("ucrtbased.dll", "_o_rintf")
Interceptor.attach(_o_rintf, {onLeave: function (args) {send("_o_rintf");}});

var _o_rintl = Module.findExportByName("ucrtbased.dll", "_o_rintl")
Interceptor.attach(_o_rintl, {onLeave: function (args) {send("_o_rintl");}});

var _o_round = Module.findExportByName("ucrtbased.dll", "_o_round")
Interceptor.attach(_o_round, {onLeave: function (args) {send("_o_round");}});

var _o_roundf = Module.findExportByName("ucrtbased.dll", "_o_roundf")
Interceptor.attach(_o_roundf, {onLeave: function (args) {send("_o_roundf");}});

var _o_roundl = Module.findExportByName("ucrtbased.dll", "_o_roundl")
Interceptor.attach(_o_roundl, {onLeave: function (args) {send("_o_roundl");}});

var _o_scalbln = Module.findExportByName("ucrtbased.dll", "_o_scalbln")
Interceptor.attach(_o_scalbln, {onLeave: function (args) {send("_o_scalbln");}});

var _o_scalblnf = Module.findExportByName("ucrtbased.dll", "_o_scalblnf")
Interceptor.attach(_o_scalblnf, {onLeave: function (args) {send("_o_scalblnf");}});

var _o_scalblnl = Module.findExportByName("ucrtbased.dll", "_o_scalblnl")
Interceptor.attach(_o_scalblnl, {onLeave: function (args) {send("_o_scalblnl");}});

var _o_scalbn = Module.findExportByName("ucrtbased.dll", "_o_scalbn")
Interceptor.attach(_o_scalbn, {onLeave: function (args) {send("_o_scalbn");}});

var _o_scalbnf = Module.findExportByName("ucrtbased.dll", "_o_scalbnf")
Interceptor.attach(_o_scalbnf, {onLeave: function (args) {send("_o_scalbnf");}});

var _o_scalbnl = Module.findExportByName("ucrtbased.dll", "_o_scalbnl")
Interceptor.attach(_o_scalbnl, {onLeave: function (args) {send("_o_scalbnl");}});

var _o_set_terminate = Module.findExportByName("ucrtbased.dll", "_o_set_terminate")
Interceptor.attach(_o_set_terminate, {onLeave: function (args) {send("_o_set_terminate");}});

var _o_setbuf = Module.findExportByName("ucrtbased.dll", "_o_setbuf")
Interceptor.attach(_o_setbuf, {onLeave: function (args) {send("_o_setbuf");}});

var _o_setlocale = Module.findExportByName("ucrtbased.dll", "_o_setlocale")
Interceptor.attach(_o_setlocale, {onLeave: function (args) {send("_o_setlocale");}});

var _o_setvbuf = Module.findExportByName("ucrtbased.dll", "_o_setvbuf")
Interceptor.attach(_o_setvbuf, {onLeave: function (args) {send("_o_setvbuf");}});

var _o_sin = Module.findExportByName("ucrtbased.dll", "_o_sin")
Interceptor.attach(_o_sin, {onLeave: function (args) {send("_o_sin");}});

var _o_sinf = Module.findExportByName("ucrtbased.dll", "_o_sinf")
Interceptor.attach(_o_sinf, {onLeave: function (args) {send("_o_sinf");}});

var _o_sinh = Module.findExportByName("ucrtbased.dll", "_o_sinh")
Interceptor.attach(_o_sinh, {onLeave: function (args) {send("_o_sinh");}});

var _o_sinhf = Module.findExportByName("ucrtbased.dll", "_o_sinhf")
Interceptor.attach(_o_sinhf, {onLeave: function (args) {send("_o_sinhf");}});

var _o_sqrt = Module.findExportByName("ucrtbased.dll", "_o_sqrt")
Interceptor.attach(_o_sqrt, {onLeave: function (args) {send("_o_sqrt");}});

var _o_sqrtf = Module.findExportByName("ucrtbased.dll", "_o_sqrtf")
Interceptor.attach(_o_sqrtf, {onLeave: function (args) {send("_o_sqrtf");}});

var _o_srand = Module.findExportByName("ucrtbased.dll", "_o_srand")
Interceptor.attach(_o_srand, {onLeave: function (args) {send("_o_srand");}});

var _o_strcat_s = Module.findExportByName("ucrtbased.dll", "_o_strcat_s")
Interceptor.attach(_o_strcat_s, {onLeave: function (args) {send("_o_strcat_s");}});

var _o_strcoll = Module.findExportByName("ucrtbased.dll", "_o_strcoll")
Interceptor.attach(_o_strcoll, {onLeave: function (args) {send("_o_strcoll");}});

var _o_strcpy_s = Module.findExportByName("ucrtbased.dll", "_o_strcpy_s")
Interceptor.attach(_o_strcpy_s, {onLeave: function (args) {send("_o_strcpy_s");}});

var _o_strerror = Module.findExportByName("ucrtbased.dll", "_o_strerror")
Interceptor.attach(_o_strerror, {onLeave: function (args) {send("_o_strerror");}});

var _o_strerror_s = Module.findExportByName("ucrtbased.dll", "_o_strerror_s")
Interceptor.attach(_o_strerror_s, {onLeave: function (args) {send("_o_strerror_s");}});

var _o_strftime = Module.findExportByName("ucrtbased.dll", "_o_strftime")
Interceptor.attach(_o_strftime, {onLeave: function (args) {send("_o_strftime");}});

var _o_strncat_s = Module.findExportByName("ucrtbased.dll", "_o_strncat_s")
Interceptor.attach(_o_strncat_s, {onLeave: function (args) {send("_o_strncat_s");}});

var _o_strncpy_s = Module.findExportByName("ucrtbased.dll", "_o_strncpy_s")
Interceptor.attach(_o_strncpy_s, {onLeave: function (args) {send("_o_strncpy_s");}});

var _o_strtod = Module.findExportByName("ucrtbased.dll", "_o_strtod")
Interceptor.attach(_o_strtod, {onLeave: function (args) {send("_o_strtod");}});

var _o_strtof = Module.findExportByName("ucrtbased.dll", "_o_strtof")
Interceptor.attach(_o_strtof, {onLeave: function (args) {send("_o_strtof");}});

var _o_strtok = Module.findExportByName("ucrtbased.dll", "_o_strtok")
Interceptor.attach(_o_strtok, {onLeave: function (args) {send("_o_strtok");}});

var _o_strtok_s = Module.findExportByName("ucrtbased.dll", "_o_strtok_s")
Interceptor.attach(_o_strtok_s, {onLeave: function (args) {send("_o_strtok_s");}});

var _o_strtol = Module.findExportByName("ucrtbased.dll", "_o_strtol")
Interceptor.attach(_o_strtol, {onLeave: function (args) {send("_o_strtol");}});

var _o_strtold = Module.findExportByName("ucrtbased.dll", "_o_strtold")
Interceptor.attach(_o_strtold, {onLeave: function (args) {send("_o_strtold");}});

var _o_strtoll = Module.findExportByName("ucrtbased.dll", "_o_strtoll")
Interceptor.attach(_o_strtoll, {onLeave: function (args) {send("_o_strtoll");}});

var _o_strtoul = Module.findExportByName("ucrtbased.dll", "_o_strtoul")
Interceptor.attach(_o_strtoul, {onLeave: function (args) {send("_o_strtoul");}});

var _o_strtoull = Module.findExportByName("ucrtbased.dll", "_o_strtoull")
Interceptor.attach(_o_strtoull, {onLeave: function (args) {send("_o_strtoull");}});

var _o_system = Module.findExportByName("ucrtbased.dll", "_o_system")
Interceptor.attach(_o_system, {onLeave: function (args) {send("_o_system");}});

var _o_tan = Module.findExportByName("ucrtbased.dll", "_o_tan")
Interceptor.attach(_o_tan, {onLeave: function (args) {send("_o_tan");}});

var _o_tanf = Module.findExportByName("ucrtbased.dll", "_o_tanf")
Interceptor.attach(_o_tanf, {onLeave: function (args) {send("_o_tanf");}});

var _o_tanh = Module.findExportByName("ucrtbased.dll", "_o_tanh")
Interceptor.attach(_o_tanh, {onLeave: function (args) {send("_o_tanh");}});

var _o_tanhf = Module.findExportByName("ucrtbased.dll", "_o_tanhf")
Interceptor.attach(_o_tanhf, {onLeave: function (args) {send("_o_tanhf");}});

var _o_terminate = Module.findExportByName("ucrtbased.dll", "_o_terminate")
Interceptor.attach(_o_terminate, {onLeave: function (args) {send("_o_terminate");}});

var _o_tgamma = Module.findExportByName("ucrtbased.dll", "_o_tgamma")
Interceptor.attach(_o_tgamma, {onLeave: function (args) {send("_o_tgamma");}});

var _o_tgammaf = Module.findExportByName("ucrtbased.dll", "_o_tgammaf")
Interceptor.attach(_o_tgammaf, {onLeave: function (args) {send("_o_tgammaf");}});

var _o_tgammal = Module.findExportByName("ucrtbased.dll", "_o_tgammal")
Interceptor.attach(_o_tgammal, {onLeave: function (args) {send("_o_tgammal");}});

var _o_tmpfile_s = Module.findExportByName("ucrtbased.dll", "_o_tmpfile_s")
Interceptor.attach(_o_tmpfile_s, {onLeave: function (args) {send("_o_tmpfile_s");}});

var _o_tmpnam_s = Module.findExportByName("ucrtbased.dll", "_o_tmpnam_s")
Interceptor.attach(_o_tmpnam_s, {onLeave: function (args) {send("_o_tmpnam_s");}});

var _o_tolower = Module.findExportByName("ucrtbased.dll", "_o_tolower")
Interceptor.attach(_o_tolower, {onLeave: function (args) {send("_o_tolower");}});

var _o_toupper = Module.findExportByName("ucrtbased.dll", "_o_toupper")
Interceptor.attach(_o_toupper, {onLeave: function (args) {send("_o_toupper");}});

var _o_towlower = Module.findExportByName("ucrtbased.dll", "_o_towlower")
Interceptor.attach(_o_towlower, {onLeave: function (args) {send("_o_towlower");}});

var _o_towupper = Module.findExportByName("ucrtbased.dll", "_o_towupper")
Interceptor.attach(_o_towupper, {onLeave: function (args) {send("_o_towupper");}});

var _o_ungetc = Module.findExportByName("ucrtbased.dll", "_o_ungetc")
Interceptor.attach(_o_ungetc, {onLeave: function (args) {send("_o_ungetc");}});

var _o_ungetwc = Module.findExportByName("ucrtbased.dll", "_o_ungetwc")
Interceptor.attach(_o_ungetwc, {onLeave: function (args) {send("_o_ungetwc");}});

var _o_wcrtomb = Module.findExportByName("ucrtbased.dll", "_o_wcrtomb")
Interceptor.attach(_o_wcrtomb, {onLeave: function (args) {send("_o_wcrtomb");}});

var _o_wcrtomb_s = Module.findExportByName("ucrtbased.dll", "_o_wcrtomb_s")
Interceptor.attach(_o_wcrtomb_s, {onLeave: function (args) {send("_o_wcrtomb_s");}});

var _o_wcscat_s = Module.findExportByName("ucrtbased.dll", "_o_wcscat_s")
Interceptor.attach(_o_wcscat_s, {onLeave: function (args) {send("_o_wcscat_s");}});

var _o_wcscoll = Module.findExportByName("ucrtbased.dll", "_o_wcscoll")
Interceptor.attach(_o_wcscoll, {onLeave: function (args) {send("_o_wcscoll");}});

var _o_wcscpy = Module.findExportByName("ucrtbased.dll", "_o_wcscpy")
Interceptor.attach(_o_wcscpy, {onLeave: function (args) {send("_o_wcscpy");}});

var _o_wcscpy_s = Module.findExportByName("ucrtbased.dll", "_o_wcscpy_s")
Interceptor.attach(_o_wcscpy_s, {onLeave: function (args) {send("_o_wcscpy_s");}});

var _o_wcsftime = Module.findExportByName("ucrtbased.dll", "_o_wcsftime")
Interceptor.attach(_o_wcsftime, {onLeave: function (args) {send("_o_wcsftime");}});

var _o_wcsncat_s = Module.findExportByName("ucrtbased.dll", "_o_wcsncat_s")
Interceptor.attach(_o_wcsncat_s, {onLeave: function (args) {send("_o_wcsncat_s");}});

var _o_wcsncpy_s = Module.findExportByName("ucrtbased.dll", "_o_wcsncpy_s")
Interceptor.attach(_o_wcsncpy_s, {onLeave: function (args) {send("_o_wcsncpy_s");}});

var _o_wcsrtombs = Module.findExportByName("ucrtbased.dll", "_o_wcsrtombs")
Interceptor.attach(_o_wcsrtombs, {onLeave: function (args) {send("_o_wcsrtombs");}});

var _o_wcsrtombs_s = Module.findExportByName("ucrtbased.dll", "_o_wcsrtombs_s")
Interceptor.attach(_o_wcsrtombs_s, {onLeave: function (args) {send("_o_wcsrtombs_s");}});

var _o_wcstod = Module.findExportByName("ucrtbased.dll", "_o_wcstod")
Interceptor.attach(_o_wcstod, {onLeave: function (args) {send("_o_wcstod");}});

var _o_wcstof = Module.findExportByName("ucrtbased.dll", "_o_wcstof")
Interceptor.attach(_o_wcstof, {onLeave: function (args) {send("_o_wcstof");}});

var _o_wcstok = Module.findExportByName("ucrtbased.dll", "_o_wcstok")
Interceptor.attach(_o_wcstok, {onLeave: function (args) {send("_o_wcstok");}});

var _o_wcstok_s = Module.findExportByName("ucrtbased.dll", "_o_wcstok_s")
Interceptor.attach(_o_wcstok_s, {onLeave: function (args) {send("_o_wcstok_s");}});

var _o_wcstol = Module.findExportByName("ucrtbased.dll", "_o_wcstol")
Interceptor.attach(_o_wcstol, {onLeave: function (args) {send("_o_wcstol");}});

var _o_wcstold = Module.findExportByName("ucrtbased.dll", "_o_wcstold")
Interceptor.attach(_o_wcstold, {onLeave: function (args) {send("_o_wcstold");}});

var _o_wcstoll = Module.findExportByName("ucrtbased.dll", "_o_wcstoll")
Interceptor.attach(_o_wcstoll, {onLeave: function (args) {send("_o_wcstoll");}});

var _o_wcstombs = Module.findExportByName("ucrtbased.dll", "_o_wcstombs")
Interceptor.attach(_o_wcstombs, {onLeave: function (args) {send("_o_wcstombs");}});

var _o_wcstombs_s = Module.findExportByName("ucrtbased.dll", "_o_wcstombs_s")
Interceptor.attach(_o_wcstombs_s, {onLeave: function (args) {send("_o_wcstombs_s");}});

var _o_wcstoul = Module.findExportByName("ucrtbased.dll", "_o_wcstoul")
Interceptor.attach(_o_wcstoul, {onLeave: function (args) {send("_o_wcstoul");}});

var _o_wcstoull = Module.findExportByName("ucrtbased.dll", "_o_wcstoull")
Interceptor.attach(_o_wcstoull, {onLeave: function (args) {send("_o_wcstoull");}});

var _o_wctob = Module.findExportByName("ucrtbased.dll", "_o_wctob")
Interceptor.attach(_o_wctob, {onLeave: function (args) {send("_o_wctob");}});

var _o_wctomb = Module.findExportByName("ucrtbased.dll", "_o_wctomb")
Interceptor.attach(_o_wctomb, {onLeave: function (args) {send("_o_wctomb");}});

var _o_wctomb_s = Module.findExportByName("ucrtbased.dll", "_o_wctomb_s")
Interceptor.attach(_o_wctomb_s, {onLeave: function (args) {send("_o_wctomb_s");}});

var _o_wmemcpy_s = Module.findExportByName("ucrtbased.dll", "_o_wmemcpy_s")
Interceptor.attach(_o_wmemcpy_s, {onLeave: function (args) {send("_o_wmemcpy_s");}});

var _o_wmemmove_s = Module.findExportByName("ucrtbased.dll", "_o_wmemmove_s")
Interceptor.attach(_o_wmemmove_s, {onLeave: function (args) {send("_o_wmemmove_s");}});

var _open = Module.findExportByName("ucrtbased.dll", "_open")
Interceptor.attach(_open, {onLeave: function (args) {send("_open");}});

var _open_osfhandle = Module.findExportByName("ucrtbased.dll", "_open_osfhandle")
Interceptor.attach(_open_osfhandle, {onLeave: function (args) {send("_open_osfhandle");}});

var _pclose = Module.findExportByName("ucrtbased.dll", "_pclose")
Interceptor.attach(_pclose, {onLeave: function (args) {send("_pclose");}});

var _pipe = Module.findExportByName("ucrtbased.dll", "_pipe")
Interceptor.attach(_pipe, {onLeave: function (args) {send("_pipe");}});

var _popen = Module.findExportByName("ucrtbased.dll", "_popen")
Interceptor.attach(_popen, {onLeave: function (args) {send("_popen");}});

var _purecall = Module.findExportByName("ucrtbased.dll", "_purecall")
Interceptor.attach(_purecall, {onLeave: function (args) {send("_purecall");}});

var _putc_nolock = Module.findExportByName("ucrtbased.dll", "_putc_nolock")
Interceptor.attach(_putc_nolock, {onLeave: function (args) {send("_putc_nolock");}});

var _putch = Module.findExportByName("ucrtbased.dll", "_putch")
Interceptor.attach(_putch, {onLeave: function (args) {send("_putch");}});

var _putch_nolock = Module.findExportByName("ucrtbased.dll", "_putch_nolock")
Interceptor.attach(_putch_nolock, {onLeave: function (args) {send("_putch_nolock");}});

var _putenv = Module.findExportByName("ucrtbased.dll", "_putenv")
Interceptor.attach(_putenv, {onLeave: function (args) {send("_putenv");}});

var _putenv_s = Module.findExportByName("ucrtbased.dll", "_putenv_s")
Interceptor.attach(_putenv_s, {onLeave: function (args) {send("_putenv_s");}});

var _putw = Module.findExportByName("ucrtbased.dll", "_putw")
Interceptor.attach(_putw, {onLeave: function (args) {send("_putw");}});

var _putwc_nolock = Module.findExportByName("ucrtbased.dll", "_putwc_nolock")
Interceptor.attach(_putwc_nolock, {onLeave: function (args) {send("_putwc_nolock");}});

var _putwch = Module.findExportByName("ucrtbased.dll", "_putwch")
Interceptor.attach(_putwch, {onLeave: function (args) {send("_putwch");}});

var _putwch_nolock = Module.findExportByName("ucrtbased.dll", "_putwch_nolock")
Interceptor.attach(_putwch_nolock, {onLeave: function (args) {send("_putwch_nolock");}});

var _putws = Module.findExportByName("ucrtbased.dll", "_putws")
Interceptor.attach(_putws, {onLeave: function (args) {send("_putws");}});

var _query_app_type = Module.findExportByName("ucrtbased.dll", "_query_app_type")
Interceptor.attach(_query_app_type, {onLeave: function (args) {send("_query_app_type");}});

var _query_new_handler = Module.findExportByName("ucrtbased.dll", "_query_new_handler")
Interceptor.attach(_query_new_handler, {onLeave: function (args) {send("_query_new_handler");}});

var _query_new_mode = Module.findExportByName("ucrtbased.dll", "_query_new_mode")
Interceptor.attach(_query_new_mode, {onLeave: function (args) {send("_query_new_mode");}});

var _read = Module.findExportByName("ucrtbased.dll", "_read")
Interceptor.attach(_read, {onLeave: function (args) {send("_read");}});

var _realloc_base = Module.findExportByName("ucrtbased.dll", "_realloc_base")
Interceptor.attach(_realloc_base, {onLeave: function (args) {send("_realloc_base");}});

var _realloc_dbg = Module.findExportByName("ucrtbased.dll", "_realloc_dbg")
Interceptor.attach(_realloc_dbg, {onLeave: function (args) {send("_realloc_dbg");}});

var _recalloc = Module.findExportByName("ucrtbased.dll", "_recalloc")
Interceptor.attach(_recalloc, {onLeave: function (args) {send("_recalloc");}});

var _recalloc_dbg = Module.findExportByName("ucrtbased.dll", "_recalloc_dbg")
Interceptor.attach(_recalloc_dbg, {onLeave: function (args) {send("_recalloc_dbg");}});

var _register_onexit_function = Module.findExportByName("ucrtbased.dll", "_register_onexit_function")
Interceptor.attach(_register_onexit_function, {onLeave: function (args) {send("_register_onexit_function");}});

var _register_thread_local_exe_atexit_callback = Module.findExportByName("ucrtbased.dll", "_register_thread_local_exe_atexit_callback")
Interceptor.attach(_register_thread_local_exe_atexit_callback, {onLeave: function (args) {send("_register_thread_local_exe_atexit_callback");}});

var _resetstkoflw = Module.findExportByName("ucrtbased.dll", "_resetstkoflw")
Interceptor.attach(_resetstkoflw, {onLeave: function (args) {send("_resetstkoflw");}});

var _rmdir = Module.findExportByName("ucrtbased.dll", "_rmdir")
Interceptor.attach(_rmdir, {onLeave: function (args) {send("_rmdir");}});

var _rmtmp = Module.findExportByName("ucrtbased.dll", "_rmtmp")
Interceptor.attach(_rmtmp, {onLeave: function (args) {send("_rmtmp");}});

var _rotl = Module.findExportByName("ucrtbased.dll", "_rotl")
Interceptor.attach(_rotl, {onLeave: function (args) {send("_rotl");}});

var _rotl64 = Module.findExportByName("ucrtbased.dll", "_rotl64")
Interceptor.attach(_rotl64, {onLeave: function (args) {send("_rotl64");}});

var _rotr = Module.findExportByName("ucrtbased.dll", "_rotr")
Interceptor.attach(_rotr, {onLeave: function (args) {send("_rotr");}});

var _rotr64 = Module.findExportByName("ucrtbased.dll", "_rotr64")
Interceptor.attach(_rotr64, {onLeave: function (args) {send("_rotr64");}});

var _scalb = Module.findExportByName("ucrtbased.dll", "_scalb")
Interceptor.attach(_scalb, {onLeave: function (args) {send("_scalb");}});

var _scalbf = Module.findExportByName("ucrtbased.dll", "_scalbf")
Interceptor.attach(_scalbf, {onLeave: function (args) {send("_scalbf");}});

var _searchenv = Module.findExportByName("ucrtbased.dll", "_searchenv")
Interceptor.attach(_searchenv, {onLeave: function (args) {send("_searchenv");}});

var _searchenv_s = Module.findExportByName("ucrtbased.dll", "_searchenv_s")
Interceptor.attach(_searchenv_s, {onLeave: function (args) {send("_searchenv_s");}});

var _seh_filter_dll = Module.findExportByName("ucrtbased.dll", "_seh_filter_dll")
Interceptor.attach(_seh_filter_dll, {onLeave: function (args) {send("_seh_filter_dll");}});

var _seh_filter_exe = Module.findExportByName("ucrtbased.dll", "_seh_filter_exe")
Interceptor.attach(_seh_filter_exe, {onLeave: function (args) {send("_seh_filter_exe");}});

var _set_FMA3_enable = Module.findExportByName("ucrtbased.dll", "_set_FMA3_enable")
Interceptor.attach(_set_FMA3_enable, {onLeave: function (args) {send("_set_FMA3_enable");}});

var _set_abort_behavior = Module.findExportByName("ucrtbased.dll", "_set_abort_behavior")
Interceptor.attach(_set_abort_behavior, {onLeave: function (args) {send("_set_abort_behavior");}});

var _set_app_type = Module.findExportByName("ucrtbased.dll", "_set_app_type")
Interceptor.attach(_set_app_type, {onLeave: function (args) {send("_set_app_type");}});

var _set_controlfp = Module.findExportByName("ucrtbased.dll", "_set_controlfp")
Interceptor.attach(_set_controlfp, {onLeave: function (args) {send("_set_controlfp");}});

var _set_doserrno = Module.findExportByName("ucrtbased.dll", "_set_doserrno")
Interceptor.attach(_set_doserrno, {onLeave: function (args) {send("_set_doserrno");}});

var _set_errno = Module.findExportByName("ucrtbased.dll", "_set_errno")
Interceptor.attach(_set_errno, {onLeave: function (args) {send("_set_errno");}});

var _set_error_mode = Module.findExportByName("ucrtbased.dll", "_set_error_mode")
Interceptor.attach(_set_error_mode, {onLeave: function (args) {send("_set_error_mode");}});

var _set_fmode = Module.findExportByName("ucrtbased.dll", "_set_fmode")
Interceptor.attach(_set_fmode, {onLeave: function (args) {send("_set_fmode");}});

var _set_invalid_parameter_handler = Module.findExportByName("ucrtbased.dll", "_set_invalid_parameter_handler")
Interceptor.attach(_set_invalid_parameter_handler, {onLeave: function (args) {send("_set_invalid_parameter_handler");}});

var _set_new_handler = Module.findExportByName("ucrtbased.dll", "_set_new_handler")
Interceptor.attach(_set_new_handler, {onLeave: function (args) {send("_set_new_handler");}});

var _set_new_mode = Module.findExportByName("ucrtbased.dll", "_set_new_mode")
Interceptor.attach(_set_new_mode, {onLeave: function (args) {send("_set_new_mode");}});

var _set_printf_count_output = Module.findExportByName("ucrtbased.dll", "_set_printf_count_output")
Interceptor.attach(_set_printf_count_output, {onLeave: function (args) {send("_set_printf_count_output");}});

var _set_purecall_handler = Module.findExportByName("ucrtbased.dll", "_set_purecall_handler")
Interceptor.attach(_set_purecall_handler, {onLeave: function (args) {send("_set_purecall_handler");}});

var _set_se_translator = Module.findExportByName("ucrtbased.dll", "_set_se_translator")
Interceptor.attach(_set_se_translator, {onLeave: function (args) {send("_set_se_translator");}});

var _set_thread_local_invalid_parameter_handler = Module.findExportByName("ucrtbased.dll", "_set_thread_local_invalid_parameter_handler")
Interceptor.attach(_set_thread_local_invalid_parameter_handler, {onLeave: function (args) {send("_set_thread_local_invalid_parameter_handler");}});

var _seterrormode = Module.findExportByName("ucrtbased.dll", "_seterrormode")
Interceptor.attach(_seterrormode, {onLeave: function (args) {send("_seterrormode");}});

var _setmaxstdio = Module.findExportByName("ucrtbased.dll", "_setmaxstdio")
Interceptor.attach(_setmaxstdio, {onLeave: function (args) {send("_setmaxstdio");}});

var _setmbcp = Module.findExportByName("ucrtbased.dll", "_setmbcp")
Interceptor.attach(_setmbcp, {onLeave: function (args) {send("_setmbcp");}});

var _setmode = Module.findExportByName("ucrtbased.dll", "_setmode")
Interceptor.attach(_setmode, {onLeave: function (args) {send("_setmode");}});

var _setsystime = Module.findExportByName("ucrtbased.dll", "_setsystime")
Interceptor.attach(_setsystime, {onLeave: function (args) {send("_setsystime");}});

var _sleep = Module.findExportByName("ucrtbased.dll", "_sleep")
Interceptor.attach(_sleep, {onLeave: function (args) {send("_sleep");}});

var _sopen = Module.findExportByName("ucrtbased.dll", "_sopen")
Interceptor.attach(_sopen, {onLeave: function (args) {send("_sopen");}});

var _sopen_dispatch = Module.findExportByName("ucrtbased.dll", "_sopen_dispatch")
Interceptor.attach(_sopen_dispatch, {onLeave: function (args) {send("_sopen_dispatch");}});

var _sopen_s = Module.findExportByName("ucrtbased.dll", "_sopen_s")
Interceptor.attach(_sopen_s, {onLeave: function (args) {send("_sopen_s");}});

var _spawnl = Module.findExportByName("ucrtbased.dll", "_spawnl")
Interceptor.attach(_spawnl, {onLeave: function (args) {send("_spawnl");}});

var _spawnle = Module.findExportByName("ucrtbased.dll", "_spawnle")
Interceptor.attach(_spawnle, {onLeave: function (args) {send("_spawnle");}});

var _spawnlp = Module.findExportByName("ucrtbased.dll", "_spawnlp")
Interceptor.attach(_spawnlp, {onLeave: function (args) {send("_spawnlp");}});

var _spawnlpe = Module.findExportByName("ucrtbased.dll", "_spawnlpe")
Interceptor.attach(_spawnlpe, {onLeave: function (args) {send("_spawnlpe");}});

var _spawnv = Module.findExportByName("ucrtbased.dll", "_spawnv")
Interceptor.attach(_spawnv, {onLeave: function (args) {send("_spawnv");}});

var _spawnve = Module.findExportByName("ucrtbased.dll", "_spawnve")
Interceptor.attach(_spawnve, {onLeave: function (args) {send("_spawnve");}});

var _spawnvp = Module.findExportByName("ucrtbased.dll", "_spawnvp")
Interceptor.attach(_spawnvp, {onLeave: function (args) {send("_spawnvp");}});

var _spawnvpe = Module.findExportByName("ucrtbased.dll", "_spawnvpe")
Interceptor.attach(_spawnvpe, {onLeave: function (args) {send("_spawnvpe");}});

var _splitpath = Module.findExportByName("ucrtbased.dll", "_splitpath")
Interceptor.attach(_splitpath, {onLeave: function (args) {send("_splitpath");}});

var _splitpath_s = Module.findExportByName("ucrtbased.dll", "_splitpath_s")
Interceptor.attach(_splitpath_s, {onLeave: function (args) {send("_splitpath_s");}});

var _stat32 = Module.findExportByName("ucrtbased.dll", "_stat32")
Interceptor.attach(_stat32, {onLeave: function (args) {send("_stat32");}});

var _stat32i64 = Module.findExportByName("ucrtbased.dll", "_stat32i64")
Interceptor.attach(_stat32i64, {onLeave: function (args) {send("_stat32i64");}});

var _stat64 = Module.findExportByName("ucrtbased.dll", "_stat64")
Interceptor.attach(_stat64, {onLeave: function (args) {send("_stat64");}});

var _stat64i32 = Module.findExportByName("ucrtbased.dll", "_stat64i32")
Interceptor.attach(_stat64i32, {onLeave: function (args) {send("_stat64i32");}});

var _statusfp = Module.findExportByName("ucrtbased.dll", "_statusfp")
Interceptor.attach(_statusfp, {onLeave: function (args) {send("_statusfp");}});

var _strcoll_l = Module.findExportByName("ucrtbased.dll", "_strcoll_l")
Interceptor.attach(_strcoll_l, {onLeave: function (args) {send("_strcoll_l");}});

var _strdate = Module.findExportByName("ucrtbased.dll", "_strdate")
Interceptor.attach(_strdate, {onLeave: function (args) {send("_strdate");}});

var _strdate_s = Module.findExportByName("ucrtbased.dll", "_strdate_s")
Interceptor.attach(_strdate_s, {onLeave: function (args) {send("_strdate_s");}});

var _strdup = Module.findExportByName("ucrtbased.dll", "_strdup")
Interceptor.attach(_strdup, {onLeave: function (args) {send("_strdup");}});

var _strdup_dbg = Module.findExportByName("ucrtbased.dll", "_strdup_dbg")
Interceptor.attach(_strdup_dbg, {onLeave: function (args) {send("_strdup_dbg");}});

var _strerror = Module.findExportByName("ucrtbased.dll", "_strerror")
Interceptor.attach(_strerror, {onLeave: function (args) {send("_strerror");}});

var _strerror_s = Module.findExportByName("ucrtbased.dll", "_strerror_s")
Interceptor.attach(_strerror_s, {onLeave: function (args) {send("_strerror_s");}});

var _strftime_l = Module.findExportByName("ucrtbased.dll", "_strftime_l")
Interceptor.attach(_strftime_l, {onLeave: function (args) {send("_strftime_l");}});

var _stricmp = Module.findExportByName("ucrtbased.dll", "_stricmp")
Interceptor.attach(_stricmp, {onLeave: function (args) {send("_stricmp");}});

var _stricmp_l = Module.findExportByName("ucrtbased.dll", "_stricmp_l")
Interceptor.attach(_stricmp_l, {onLeave: function (args) {send("_stricmp_l");}});

var _stricoll = Module.findExportByName("ucrtbased.dll", "_stricoll")
Interceptor.attach(_stricoll, {onLeave: function (args) {send("_stricoll");}});

var _stricoll_l = Module.findExportByName("ucrtbased.dll", "_stricoll_l")
Interceptor.attach(_stricoll_l, {onLeave: function (args) {send("_stricoll_l");}});

var _strlwr = Module.findExportByName("ucrtbased.dll", "_strlwr")
Interceptor.attach(_strlwr, {onLeave: function (args) {send("_strlwr");}});

var _strlwr_l = Module.findExportByName("ucrtbased.dll", "_strlwr_l")
Interceptor.attach(_strlwr_l, {onLeave: function (args) {send("_strlwr_l");}});

var _strlwr_s = Module.findExportByName("ucrtbased.dll", "_strlwr_s")
Interceptor.attach(_strlwr_s, {onLeave: function (args) {send("_strlwr_s");}});

var _strlwr_s_l = Module.findExportByName("ucrtbased.dll", "_strlwr_s_l")
Interceptor.attach(_strlwr_s_l, {onLeave: function (args) {send("_strlwr_s_l");}});

var _strncoll = Module.findExportByName("ucrtbased.dll", "_strncoll")
Interceptor.attach(_strncoll, {onLeave: function (args) {send("_strncoll");}});

var _strncoll_l = Module.findExportByName("ucrtbased.dll", "_strncoll_l")
Interceptor.attach(_strncoll_l, {onLeave: function (args) {send("_strncoll_l");}});

var _strnicmp = Module.findExportByName("ucrtbased.dll", "_strnicmp")
Interceptor.attach(_strnicmp, {onLeave: function (args) {send("_strnicmp");}});

var _strnicmp_l = Module.findExportByName("ucrtbased.dll", "_strnicmp_l")
Interceptor.attach(_strnicmp_l, {onLeave: function (args) {send("_strnicmp_l");}});

var _strnicoll = Module.findExportByName("ucrtbased.dll", "_strnicoll")
Interceptor.attach(_strnicoll, {onLeave: function (args) {send("_strnicoll");}});

var _strnicoll_l = Module.findExportByName("ucrtbased.dll", "_strnicoll_l")
Interceptor.attach(_strnicoll_l, {onLeave: function (args) {send("_strnicoll_l");}});

var _strnset = Module.findExportByName("ucrtbased.dll", "_strnset")
Interceptor.attach(_strnset, {onLeave: function (args) {send("_strnset");}});

var _strnset_s = Module.findExportByName("ucrtbased.dll", "_strnset_s")
Interceptor.attach(_strnset_s, {onLeave: function (args) {send("_strnset_s");}});

var _strrev = Module.findExportByName("ucrtbased.dll", "_strrev")
Interceptor.attach(_strrev, {onLeave: function (args) {send("_strrev");}});

var _strset = Module.findExportByName("ucrtbased.dll", "_strset")
Interceptor.attach(_strset, {onLeave: function (args) {send("_strset");}});

var _strset_s = Module.findExportByName("ucrtbased.dll", "_strset_s")
Interceptor.attach(_strset_s, {onLeave: function (args) {send("_strset_s");}});

var _strtime = Module.findExportByName("ucrtbased.dll", "_strtime")
Interceptor.attach(_strtime, {onLeave: function (args) {send("_strtime");}});

var _strtime_s = Module.findExportByName("ucrtbased.dll", "_strtime_s")
Interceptor.attach(_strtime_s, {onLeave: function (args) {send("_strtime_s");}});

var _strtod_l = Module.findExportByName("ucrtbased.dll", "_strtod_l")
Interceptor.attach(_strtod_l, {onLeave: function (args) {send("_strtod_l");}});

var _strtof_l = Module.findExportByName("ucrtbased.dll", "_strtof_l")
Interceptor.attach(_strtof_l, {onLeave: function (args) {send("_strtof_l");}});

var _strtoi64 = Module.findExportByName("ucrtbased.dll", "_strtoi64")
Interceptor.attach(_strtoi64, {onLeave: function (args) {send("_strtoi64");}});

var _strtoi64_l = Module.findExportByName("ucrtbased.dll", "_strtoi64_l")
Interceptor.attach(_strtoi64_l, {onLeave: function (args) {send("_strtoi64_l");}});

var _strtoimax_l = Module.findExportByName("ucrtbased.dll", "_strtoimax_l")
Interceptor.attach(_strtoimax_l, {onLeave: function (args) {send("_strtoimax_l");}});

var _strtol_l = Module.findExportByName("ucrtbased.dll", "_strtol_l")
Interceptor.attach(_strtol_l, {onLeave: function (args) {send("_strtol_l");}});

var _strtold_l = Module.findExportByName("ucrtbased.dll", "_strtold_l")
Interceptor.attach(_strtold_l, {onLeave: function (args) {send("_strtold_l");}});

var _strtoll_l = Module.findExportByName("ucrtbased.dll", "_strtoll_l")
Interceptor.attach(_strtoll_l, {onLeave: function (args) {send("_strtoll_l");}});

var _strtoui64 = Module.findExportByName("ucrtbased.dll", "_strtoui64")
Interceptor.attach(_strtoui64, {onLeave: function (args) {send("_strtoui64");}});

var _strtoui64_l = Module.findExportByName("ucrtbased.dll", "_strtoui64_l")
Interceptor.attach(_strtoui64_l, {onLeave: function (args) {send("_strtoui64_l");}});

var _strtoul_l = Module.findExportByName("ucrtbased.dll", "_strtoul_l")
Interceptor.attach(_strtoul_l, {onLeave: function (args) {send("_strtoul_l");}});

var _strtoull_l = Module.findExportByName("ucrtbased.dll", "_strtoull_l")
Interceptor.attach(_strtoull_l, {onLeave: function (args) {send("_strtoull_l");}});

var _strtoumax_l = Module.findExportByName("ucrtbased.dll", "_strtoumax_l")
Interceptor.attach(_strtoumax_l, {onLeave: function (args) {send("_strtoumax_l");}});

var _strupr = Module.findExportByName("ucrtbased.dll", "_strupr")
Interceptor.attach(_strupr, {onLeave: function (args) {send("_strupr");}});

var _strupr_l = Module.findExportByName("ucrtbased.dll", "_strupr_l")
Interceptor.attach(_strupr_l, {onLeave: function (args) {send("_strupr_l");}});

var _strupr_s = Module.findExportByName("ucrtbased.dll", "_strupr_s")
Interceptor.attach(_strupr_s, {onLeave: function (args) {send("_strupr_s");}});

var _strupr_s_l = Module.findExportByName("ucrtbased.dll", "_strupr_s_l")
Interceptor.attach(_strupr_s_l, {onLeave: function (args) {send("_strupr_s_l");}});

var _strxfrm_l = Module.findExportByName("ucrtbased.dll", "_strxfrm_l")
Interceptor.attach(_strxfrm_l, {onLeave: function (args) {send("_strxfrm_l");}});

var _swab = Module.findExportByName("ucrtbased.dll", "_swab")
Interceptor.attach(_swab, {onLeave: function (args) {send("_swab");}});

var _tell = Module.findExportByName("ucrtbased.dll", "_tell")
Interceptor.attach(_tell, {onLeave: function (args) {send("_tell");}});

var _telli64 = Module.findExportByName("ucrtbased.dll", "_telli64")
Interceptor.attach(_telli64, {onLeave: function (args) {send("_telli64");}});

var _tempnam = Module.findExportByName("ucrtbased.dll", "_tempnam")
Interceptor.attach(_tempnam, {onLeave: function (args) {send("_tempnam");}});

var _tempnam_dbg = Module.findExportByName("ucrtbased.dll", "_tempnam_dbg")
Interceptor.attach(_tempnam_dbg, {onLeave: function (args) {send("_tempnam_dbg");}});

var _time32 = Module.findExportByName("ucrtbased.dll", "_time32")
Interceptor.attach(_time32, {onLeave: function (args) {send("_time32");}});

var _time64 = Module.findExportByName("ucrtbased.dll", "_time64")
Interceptor.attach(_time64, {onLeave: function (args) {send("_time64");}});

var _timespec32_get = Module.findExportByName("ucrtbased.dll", "_timespec32_get")
Interceptor.attach(_timespec32_get, {onLeave: function (args) {send("_timespec32_get");}});

var _timespec64_get = Module.findExportByName("ucrtbased.dll", "_timespec64_get")
Interceptor.attach(_timespec64_get, {onLeave: function (args) {send("_timespec64_get");}});

var _tolower = Module.findExportByName("ucrtbased.dll", "_tolower")
Interceptor.attach(_tolower, {onLeave: function (args) {send("_tolower");}});

var _tolower_l = Module.findExportByName("ucrtbased.dll", "_tolower_l")
Interceptor.attach(_tolower_l, {onLeave: function (args) {send("_tolower_l");}});

var _toupper = Module.findExportByName("ucrtbased.dll", "_toupper")
Interceptor.attach(_toupper, {onLeave: function (args) {send("_toupper");}});

var _toupper_l = Module.findExportByName("ucrtbased.dll", "_toupper_l")
Interceptor.attach(_toupper_l, {onLeave: function (args) {send("_toupper_l");}});

var _towlower_l = Module.findExportByName("ucrtbased.dll", "_towlower_l")
Interceptor.attach(_towlower_l, {onLeave: function (args) {send("_towlower_l");}});

var _towupper_l = Module.findExportByName("ucrtbased.dll", "_towupper_l")
Interceptor.attach(_towupper_l, {onLeave: function (args) {send("_towupper_l");}});

var _tzset = Module.findExportByName("ucrtbased.dll", "_tzset")
Interceptor.attach(_tzset, {onLeave: function (args) {send("_tzset");}});

var _ui64toa = Module.findExportByName("ucrtbased.dll", "_ui64toa")
Interceptor.attach(_ui64toa, {onLeave: function (args) {send("_ui64toa");}});

var _ui64toa_s = Module.findExportByName("ucrtbased.dll", "_ui64toa_s")
Interceptor.attach(_ui64toa_s, {onLeave: function (args) {send("_ui64toa_s");}});

var _ui64tow = Module.findExportByName("ucrtbased.dll", "_ui64tow")
Interceptor.attach(_ui64tow, {onLeave: function (args) {send("_ui64tow");}});

var _ui64tow_s = Module.findExportByName("ucrtbased.dll", "_ui64tow_s")
Interceptor.attach(_ui64tow_s, {onLeave: function (args) {send("_ui64tow_s");}});

var _ultoa = Module.findExportByName("ucrtbased.dll", "_ultoa")
Interceptor.attach(_ultoa, {onLeave: function (args) {send("_ultoa");}});

var _ultoa_s = Module.findExportByName("ucrtbased.dll", "_ultoa_s")
Interceptor.attach(_ultoa_s, {onLeave: function (args) {send("_ultoa_s");}});

var _ultow = Module.findExportByName("ucrtbased.dll", "_ultow")
Interceptor.attach(_ultow, {onLeave: function (args) {send("_ultow");}});

var _ultow_s = Module.findExportByName("ucrtbased.dll", "_ultow_s")
Interceptor.attach(_ultow_s, {onLeave: function (args) {send("_ultow_s");}});

var _umask = Module.findExportByName("ucrtbased.dll", "_umask")
Interceptor.attach(_umask, {onLeave: function (args) {send("_umask");}});

var _umask_s = Module.findExportByName("ucrtbased.dll", "_umask_s")
Interceptor.attach(_umask_s, {onLeave: function (args) {send("_umask_s");}});

var _ungetc_nolock = Module.findExportByName("ucrtbased.dll", "_ungetc_nolock")
Interceptor.attach(_ungetc_nolock, {onLeave: function (args) {send("_ungetc_nolock");}});

var _ungetch = Module.findExportByName("ucrtbased.dll", "_ungetch")
Interceptor.attach(_ungetch, {onLeave: function (args) {send("_ungetch");}});

var _ungetch_nolock = Module.findExportByName("ucrtbased.dll", "_ungetch_nolock")
Interceptor.attach(_ungetch_nolock, {onLeave: function (args) {send("_ungetch_nolock");}});

var _ungetwc_nolock = Module.findExportByName("ucrtbased.dll", "_ungetwc_nolock")
Interceptor.attach(_ungetwc_nolock, {onLeave: function (args) {send("_ungetwc_nolock");}});

var _ungetwch = Module.findExportByName("ucrtbased.dll", "_ungetwch")
Interceptor.attach(_ungetwch, {onLeave: function (args) {send("_ungetwch");}});

var _ungetwch_nolock = Module.findExportByName("ucrtbased.dll", "_ungetwch_nolock")
Interceptor.attach(_ungetwch_nolock, {onLeave: function (args) {send("_ungetwch_nolock");}});

var _unlink = Module.findExportByName("ucrtbased.dll", "_unlink")
Interceptor.attach(_unlink, {onLeave: function (args) {send("_unlink");}});

var _unloaddll = Module.findExportByName("ucrtbased.dll", "_unloaddll")
Interceptor.attach(_unloaddll, {onLeave: function (args) {send("_unloaddll");}});

var _unlock_file = Module.findExportByName("ucrtbased.dll", "_unlock_file")
Interceptor.attach(_unlock_file, {onLeave: function (args) {send("_unlock_file");}});

var _unlock_locales = Module.findExportByName("ucrtbased.dll", "_unlock_locales")
Interceptor.attach(_unlock_locales, {onLeave: function (args) {send("_unlock_locales");}});

var _utime32 = Module.findExportByName("ucrtbased.dll", "_utime32")
Interceptor.attach(_utime32, {onLeave: function (args) {send("_utime32");}});

var _utime64 = Module.findExportByName("ucrtbased.dll", "_utime64")
Interceptor.attach(_utime64, {onLeave: function (args) {send("_utime64");}});

var _waccess = Module.findExportByName("ucrtbased.dll", "_waccess")
Interceptor.attach(_waccess, {onLeave: function (args) {send("_waccess");}});

var _waccess_s = Module.findExportByName("ucrtbased.dll", "_waccess_s")
Interceptor.attach(_waccess_s, {onLeave: function (args) {send("_waccess_s");}});

var _wasctime = Module.findExportByName("ucrtbased.dll", "_wasctime")
Interceptor.attach(_wasctime, {onLeave: function (args) {send("_wasctime");}});

var _wasctime_s = Module.findExportByName("ucrtbased.dll", "_wasctime_s")
Interceptor.attach(_wasctime_s, {onLeave: function (args) {send("_wasctime_s");}});

var _wassert = Module.findExportByName("ucrtbased.dll", "_wassert")
Interceptor.attach(_wassert, {onLeave: function (args) {send("_wassert");}});

var _wchdir = Module.findExportByName("ucrtbased.dll", "_wchdir")
Interceptor.attach(_wchdir, {onLeave: function (args) {send("_wchdir");}});

var _wchmod = Module.findExportByName("ucrtbased.dll", "_wchmod")
Interceptor.attach(_wchmod, {onLeave: function (args) {send("_wchmod");}});

var _wcreat = Module.findExportByName("ucrtbased.dll", "_wcreat")
Interceptor.attach(_wcreat, {onLeave: function (args) {send("_wcreat");}});

var _wcreate_locale = Module.findExportByName("ucrtbased.dll", "_wcreate_locale")
Interceptor.attach(_wcreate_locale, {onLeave: function (args) {send("_wcreate_locale");}});

var _wcscoll_l = Module.findExportByName("ucrtbased.dll", "_wcscoll_l")
Interceptor.attach(_wcscoll_l, {onLeave: function (args) {send("_wcscoll_l");}});

var _wcsdup = Module.findExportByName("ucrtbased.dll", "_wcsdup")
Interceptor.attach(_wcsdup, {onLeave: function (args) {send("_wcsdup");}});

var _wcsdup_dbg = Module.findExportByName("ucrtbased.dll", "_wcsdup_dbg")
Interceptor.attach(_wcsdup_dbg, {onLeave: function (args) {send("_wcsdup_dbg");}});

var _wcserror = Module.findExportByName("ucrtbased.dll", "_wcserror")
Interceptor.attach(_wcserror, {onLeave: function (args) {send("_wcserror");}});

var _wcserror_s = Module.findExportByName("ucrtbased.dll", "_wcserror_s")
Interceptor.attach(_wcserror_s, {onLeave: function (args) {send("_wcserror_s");}});

var _wcsftime_l = Module.findExportByName("ucrtbased.dll", "_wcsftime_l")
Interceptor.attach(_wcsftime_l, {onLeave: function (args) {send("_wcsftime_l");}});

var _wcsicmp = Module.findExportByName("ucrtbased.dll", "_wcsicmp")
Interceptor.attach(_wcsicmp, {onLeave: function (args) {send("_wcsicmp");}});

var _wcsicmp_l = Module.findExportByName("ucrtbased.dll", "_wcsicmp_l")
Interceptor.attach(_wcsicmp_l, {onLeave: function (args) {send("_wcsicmp_l");}});

var _wcsicoll = Module.findExportByName("ucrtbased.dll", "_wcsicoll")
Interceptor.attach(_wcsicoll, {onLeave: function (args) {send("_wcsicoll");}});

var _wcsicoll_l = Module.findExportByName("ucrtbased.dll", "_wcsicoll_l")
Interceptor.attach(_wcsicoll_l, {onLeave: function (args) {send("_wcsicoll_l");}});

var _wcslwr = Module.findExportByName("ucrtbased.dll", "_wcslwr")
Interceptor.attach(_wcslwr, {onLeave: function (args) {send("_wcslwr");}});

var _wcslwr_l = Module.findExportByName("ucrtbased.dll", "_wcslwr_l")
Interceptor.attach(_wcslwr_l, {onLeave: function (args) {send("_wcslwr_l");}});

var _wcslwr_s = Module.findExportByName("ucrtbased.dll", "_wcslwr_s")
Interceptor.attach(_wcslwr_s, {onLeave: function (args) {send("_wcslwr_s");}});

var _wcslwr_s_l = Module.findExportByName("ucrtbased.dll", "_wcslwr_s_l")
Interceptor.attach(_wcslwr_s_l, {onLeave: function (args) {send("_wcslwr_s_l");}});

var _wcsncoll = Module.findExportByName("ucrtbased.dll", "_wcsncoll")
Interceptor.attach(_wcsncoll, {onLeave: function (args) {send("_wcsncoll");}});

var _wcsncoll_l = Module.findExportByName("ucrtbased.dll", "_wcsncoll_l")
Interceptor.attach(_wcsncoll_l, {onLeave: function (args) {send("_wcsncoll_l");}});

var _wcsnicmp = Module.findExportByName("ucrtbased.dll", "_wcsnicmp")
Interceptor.attach(_wcsnicmp, {onLeave: function (args) {send("_wcsnicmp");}});

var _wcsnicmp_l = Module.findExportByName("ucrtbased.dll", "_wcsnicmp_l")
Interceptor.attach(_wcsnicmp_l, {onLeave: function (args) {send("_wcsnicmp_l");}});

var _wcsnicoll = Module.findExportByName("ucrtbased.dll", "_wcsnicoll")
Interceptor.attach(_wcsnicoll, {onLeave: function (args) {send("_wcsnicoll");}});

var _wcsnicoll_l = Module.findExportByName("ucrtbased.dll", "_wcsnicoll_l")
Interceptor.attach(_wcsnicoll_l, {onLeave: function (args) {send("_wcsnicoll_l");}});

var _wcsnset = Module.findExportByName("ucrtbased.dll", "_wcsnset")
Interceptor.attach(_wcsnset, {onLeave: function (args) {send("_wcsnset");}});

var _wcsnset_s = Module.findExportByName("ucrtbased.dll", "_wcsnset_s")
Interceptor.attach(_wcsnset_s, {onLeave: function (args) {send("_wcsnset_s");}});

var _wcsrev = Module.findExportByName("ucrtbased.dll", "_wcsrev")
Interceptor.attach(_wcsrev, {onLeave: function (args) {send("_wcsrev");}});

var _wcsset = Module.findExportByName("ucrtbased.dll", "_wcsset")
Interceptor.attach(_wcsset, {onLeave: function (args) {send("_wcsset");}});

var _wcsset_s = Module.findExportByName("ucrtbased.dll", "_wcsset_s")
Interceptor.attach(_wcsset_s, {onLeave: function (args) {send("_wcsset_s");}});

var _wcstod_l = Module.findExportByName("ucrtbased.dll", "_wcstod_l")
Interceptor.attach(_wcstod_l, {onLeave: function (args) {send("_wcstod_l");}});

var _wcstof_l = Module.findExportByName("ucrtbased.dll", "_wcstof_l")
Interceptor.attach(_wcstof_l, {onLeave: function (args) {send("_wcstof_l");}});

var _wcstoi64 = Module.findExportByName("ucrtbased.dll", "_wcstoi64")
Interceptor.attach(_wcstoi64, {onLeave: function (args) {send("_wcstoi64");}});

var _wcstoi64_l = Module.findExportByName("ucrtbased.dll", "_wcstoi64_l")
Interceptor.attach(_wcstoi64_l, {onLeave: function (args) {send("_wcstoi64_l");}});

var _wcstoimax_l = Module.findExportByName("ucrtbased.dll", "_wcstoimax_l")
Interceptor.attach(_wcstoimax_l, {onLeave: function (args) {send("_wcstoimax_l");}});

var _wcstol_l = Module.findExportByName("ucrtbased.dll", "_wcstol_l")
Interceptor.attach(_wcstol_l, {onLeave: function (args) {send("_wcstol_l");}});

var _wcstold_l = Module.findExportByName("ucrtbased.dll", "_wcstold_l")
Interceptor.attach(_wcstold_l, {onLeave: function (args) {send("_wcstold_l");}});

var _wcstoll_l = Module.findExportByName("ucrtbased.dll", "_wcstoll_l")
Interceptor.attach(_wcstoll_l, {onLeave: function (args) {send("_wcstoll_l");}});

var _wcstombs_l = Module.findExportByName("ucrtbased.dll", "_wcstombs_l")
Interceptor.attach(_wcstombs_l, {onLeave: function (args) {send("_wcstombs_l");}});

var _wcstombs_s_l = Module.findExportByName("ucrtbased.dll", "_wcstombs_s_l")
Interceptor.attach(_wcstombs_s_l, {onLeave: function (args) {send("_wcstombs_s_l");}});

var _wcstoui64 = Module.findExportByName("ucrtbased.dll", "_wcstoui64")
Interceptor.attach(_wcstoui64, {onLeave: function (args) {send("_wcstoui64");}});

var _wcstoui64_l = Module.findExportByName("ucrtbased.dll", "_wcstoui64_l")
Interceptor.attach(_wcstoui64_l, {onLeave: function (args) {send("_wcstoui64_l");}});

var _wcstoul_l = Module.findExportByName("ucrtbased.dll", "_wcstoul_l")
Interceptor.attach(_wcstoul_l, {onLeave: function (args) {send("_wcstoul_l");}});

var _wcstoull_l = Module.findExportByName("ucrtbased.dll", "_wcstoull_l")
Interceptor.attach(_wcstoull_l, {onLeave: function (args) {send("_wcstoull_l");}});

var _wcstoumax_l = Module.findExportByName("ucrtbased.dll", "_wcstoumax_l")
Interceptor.attach(_wcstoumax_l, {onLeave: function (args) {send("_wcstoumax_l");}});

var _wcsupr = Module.findExportByName("ucrtbased.dll", "_wcsupr")
Interceptor.attach(_wcsupr, {onLeave: function (args) {send("_wcsupr");}});

var _wcsupr_l = Module.findExportByName("ucrtbased.dll", "_wcsupr_l")
Interceptor.attach(_wcsupr_l, {onLeave: function (args) {send("_wcsupr_l");}});

var _wcsupr_s = Module.findExportByName("ucrtbased.dll", "_wcsupr_s")
Interceptor.attach(_wcsupr_s, {onLeave: function (args) {send("_wcsupr_s");}});

var _wcsupr_s_l = Module.findExportByName("ucrtbased.dll", "_wcsupr_s_l")
Interceptor.attach(_wcsupr_s_l, {onLeave: function (args) {send("_wcsupr_s_l");}});

var _wcsxfrm_l = Module.findExportByName("ucrtbased.dll", "_wcsxfrm_l")
Interceptor.attach(_wcsxfrm_l, {onLeave: function (args) {send("_wcsxfrm_l");}});

var _wctime32 = Module.findExportByName("ucrtbased.dll", "_wctime32")
Interceptor.attach(_wctime32, {onLeave: function (args) {send("_wctime32");}});

var _wctime32_s = Module.findExportByName("ucrtbased.dll", "_wctime32_s")
Interceptor.attach(_wctime32_s, {onLeave: function (args) {send("_wctime32_s");}});

var _wctime64 = Module.findExportByName("ucrtbased.dll", "_wctime64")
Interceptor.attach(_wctime64, {onLeave: function (args) {send("_wctime64");}});

var _wctime64_s = Module.findExportByName("ucrtbased.dll", "_wctime64_s")
Interceptor.attach(_wctime64_s, {onLeave: function (args) {send("_wctime64_s");}});

var _wctomb_l = Module.findExportByName("ucrtbased.dll", "_wctomb_l")
Interceptor.attach(_wctomb_l, {onLeave: function (args) {send("_wctomb_l");}});

var _wctomb_s_l = Module.findExportByName("ucrtbased.dll", "_wctomb_s_l")
Interceptor.attach(_wctomb_s_l, {onLeave: function (args) {send("_wctomb_s_l");}});

var _wctype = Module.findExportByName("ucrtbased.dll", "_wctype")
Interceptor.attach(_wctype, {onLeave: function (args) {send("_wctype");}});

var _wdupenv_s = Module.findExportByName("ucrtbased.dll", "_wdupenv_s")
Interceptor.attach(_wdupenv_s, {onLeave: function (args) {send("_wdupenv_s");}});

var _wdupenv_s_dbg = Module.findExportByName("ucrtbased.dll", "_wdupenv_s_dbg")
Interceptor.attach(_wdupenv_s_dbg, {onLeave: function (args) {send("_wdupenv_s_dbg");}});

var _wexecl = Module.findExportByName("ucrtbased.dll", "_wexecl")
Interceptor.attach(_wexecl, {onLeave: function (args) {send("_wexecl");}});

var _wexecle = Module.findExportByName("ucrtbased.dll", "_wexecle")
Interceptor.attach(_wexecle, {onLeave: function (args) {send("_wexecle");}});

var _wexeclp = Module.findExportByName("ucrtbased.dll", "_wexeclp")
Interceptor.attach(_wexeclp, {onLeave: function (args) {send("_wexeclp");}});

var _wexeclpe = Module.findExportByName("ucrtbased.dll", "_wexeclpe")
Interceptor.attach(_wexeclpe, {onLeave: function (args) {send("_wexeclpe");}});

var _wexecv = Module.findExportByName("ucrtbased.dll", "_wexecv")
Interceptor.attach(_wexecv, {onLeave: function (args) {send("_wexecv");}});

var _wexecve = Module.findExportByName("ucrtbased.dll", "_wexecve")
Interceptor.attach(_wexecve, {onLeave: function (args) {send("_wexecve");}});

var _wexecvp = Module.findExportByName("ucrtbased.dll", "_wexecvp")
Interceptor.attach(_wexecvp, {onLeave: function (args) {send("_wexecvp");}});

var _wexecvpe = Module.findExportByName("ucrtbased.dll", "_wexecvpe")
Interceptor.attach(_wexecvpe, {onLeave: function (args) {send("_wexecvpe");}});

var _wfdopen = Module.findExportByName("ucrtbased.dll", "_wfdopen")
Interceptor.attach(_wfdopen, {onLeave: function (args) {send("_wfdopen");}});

var _wfindfirst32 = Module.findExportByName("ucrtbased.dll", "_wfindfirst32")
Interceptor.attach(_wfindfirst32, {onLeave: function (args) {send("_wfindfirst32");}});

var _wfindfirst32i64 = Module.findExportByName("ucrtbased.dll", "_wfindfirst32i64")
Interceptor.attach(_wfindfirst32i64, {onLeave: function (args) {send("_wfindfirst32i64");}});

var _wfindfirst64 = Module.findExportByName("ucrtbased.dll", "_wfindfirst64")
Interceptor.attach(_wfindfirst64, {onLeave: function (args) {send("_wfindfirst64");}});

var _wfindfirst64i32 = Module.findExportByName("ucrtbased.dll", "_wfindfirst64i32")
Interceptor.attach(_wfindfirst64i32, {onLeave: function (args) {send("_wfindfirst64i32");}});

var _wfindnext32 = Module.findExportByName("ucrtbased.dll", "_wfindnext32")
Interceptor.attach(_wfindnext32, {onLeave: function (args) {send("_wfindnext32");}});

var _wfindnext32i64 = Module.findExportByName("ucrtbased.dll", "_wfindnext32i64")
Interceptor.attach(_wfindnext32i64, {onLeave: function (args) {send("_wfindnext32i64");}});

var _wfindnext64 = Module.findExportByName("ucrtbased.dll", "_wfindnext64")
Interceptor.attach(_wfindnext64, {onLeave: function (args) {send("_wfindnext64");}});

var _wfindnext64i32 = Module.findExportByName("ucrtbased.dll", "_wfindnext64i32")
Interceptor.attach(_wfindnext64i32, {onLeave: function (args) {send("_wfindnext64i32");}});

var _wfopen = Module.findExportByName("ucrtbased.dll", "_wfopen")
Interceptor.attach(_wfopen, {onLeave: function (args) {send("_wfopen");}});

var _wfopen_s = Module.findExportByName("ucrtbased.dll", "_wfopen_s")
Interceptor.attach(_wfopen_s, {onLeave: function (args) {send("_wfopen_s");}});

var _wfreopen = Module.findExportByName("ucrtbased.dll", "_wfreopen")
Interceptor.attach(_wfreopen, {onLeave: function (args) {send("_wfreopen");}});

var _wfreopen_s = Module.findExportByName("ucrtbased.dll", "_wfreopen_s")
Interceptor.attach(_wfreopen_s, {onLeave: function (args) {send("_wfreopen_s");}});

var _wfsopen = Module.findExportByName("ucrtbased.dll", "_wfsopen")
Interceptor.attach(_wfsopen, {onLeave: function (args) {send("_wfsopen");}});

var _wfullpath = Module.findExportByName("ucrtbased.dll", "_wfullpath")
Interceptor.attach(_wfullpath, {onLeave: function (args) {send("_wfullpath");}});

var _wfullpath_dbg = Module.findExportByName("ucrtbased.dll", "_wfullpath_dbg")
Interceptor.attach(_wfullpath_dbg, {onLeave: function (args) {send("_wfullpath_dbg");}});

var _wgetcwd = Module.findExportByName("ucrtbased.dll", "_wgetcwd")
Interceptor.attach(_wgetcwd, {onLeave: function (args) {send("_wgetcwd");}});

var _wgetcwd_dbg = Module.findExportByName("ucrtbased.dll", "_wgetcwd_dbg")
Interceptor.attach(_wgetcwd_dbg, {onLeave: function (args) {send("_wgetcwd_dbg");}});

var _wgetdcwd = Module.findExportByName("ucrtbased.dll", "_wgetdcwd")
Interceptor.attach(_wgetdcwd, {onLeave: function (args) {send("_wgetdcwd");}});

var _wgetdcwd_dbg = Module.findExportByName("ucrtbased.dll", "_wgetdcwd_dbg")
Interceptor.attach(_wgetdcwd_dbg, {onLeave: function (args) {send("_wgetdcwd_dbg");}});

var _wgetenv = Module.findExportByName("ucrtbased.dll", "_wgetenv")
Interceptor.attach(_wgetenv, {onLeave: function (args) {send("_wgetenv");}});

var _wgetenv_s = Module.findExportByName("ucrtbased.dll", "_wgetenv_s")
Interceptor.attach(_wgetenv_s, {onLeave: function (args) {send("_wgetenv_s");}});

var _wmakepath = Module.findExportByName("ucrtbased.dll", "_wmakepath")
Interceptor.attach(_wmakepath, {onLeave: function (args) {send("_wmakepath");}});

var _wmakepath_s = Module.findExportByName("ucrtbased.dll", "_wmakepath_s")
Interceptor.attach(_wmakepath_s, {onLeave: function (args) {send("_wmakepath_s");}});

var _wmkdir = Module.findExportByName("ucrtbased.dll", "_wmkdir")
Interceptor.attach(_wmkdir, {onLeave: function (args) {send("_wmkdir");}});

var _wmktemp = Module.findExportByName("ucrtbased.dll", "_wmktemp")
Interceptor.attach(_wmktemp, {onLeave: function (args) {send("_wmktemp");}});

var _wmktemp_s = Module.findExportByName("ucrtbased.dll", "_wmktemp_s")
Interceptor.attach(_wmktemp_s, {onLeave: function (args) {send("_wmktemp_s");}});

var _wopen = Module.findExportByName("ucrtbased.dll", "_wopen")
Interceptor.attach(_wopen, {onLeave: function (args) {send("_wopen");}});

var _wperror = Module.findExportByName("ucrtbased.dll", "_wperror")
Interceptor.attach(_wperror, {onLeave: function (args) {send("_wperror");}});

var _wpopen = Module.findExportByName("ucrtbased.dll", "_wpopen")
Interceptor.attach(_wpopen, {onLeave: function (args) {send("_wpopen");}});

var _wputenv = Module.findExportByName("ucrtbased.dll", "_wputenv")
Interceptor.attach(_wputenv, {onLeave: function (args) {send("_wputenv");}});

var _wputenv_s = Module.findExportByName("ucrtbased.dll", "_wputenv_s")
Interceptor.attach(_wputenv_s, {onLeave: function (args) {send("_wputenv_s");}});

var _wremove = Module.findExportByName("ucrtbased.dll", "_wremove")
Interceptor.attach(_wremove, {onLeave: function (args) {send("_wremove");}});

var _wrename = Module.findExportByName("ucrtbased.dll", "_wrename")
Interceptor.attach(_wrename, {onLeave: function (args) {send("_wrename");}});

var _write = Module.findExportByName("ucrtbased.dll", "_write")
Interceptor.attach(_write, {onLeave: function (args) {send("_write");}});

var _wrmdir = Module.findExportByName("ucrtbased.dll", "_wrmdir")
Interceptor.attach(_wrmdir, {onLeave: function (args) {send("_wrmdir");}});

var _wsearchenv = Module.findExportByName("ucrtbased.dll", "_wsearchenv")
Interceptor.attach(_wsearchenv, {onLeave: function (args) {send("_wsearchenv");}});

var _wsearchenv_s = Module.findExportByName("ucrtbased.dll", "_wsearchenv_s")
Interceptor.attach(_wsearchenv_s, {onLeave: function (args) {send("_wsearchenv_s");}});

var _wsetlocale = Module.findExportByName("ucrtbased.dll", "_wsetlocale")
Interceptor.attach(_wsetlocale, {onLeave: function (args) {send("_wsetlocale");}});

var _wsopen = Module.findExportByName("ucrtbased.dll", "_wsopen")
Interceptor.attach(_wsopen, {onLeave: function (args) {send("_wsopen");}});

var _wsopen_dispatch = Module.findExportByName("ucrtbased.dll", "_wsopen_dispatch")
Interceptor.attach(_wsopen_dispatch, {onLeave: function (args) {send("_wsopen_dispatch");}});

var _wsopen_s = Module.findExportByName("ucrtbased.dll", "_wsopen_s")
Interceptor.attach(_wsopen_s, {onLeave: function (args) {send("_wsopen_s");}});

var _wspawnl = Module.findExportByName("ucrtbased.dll", "_wspawnl")
Interceptor.attach(_wspawnl, {onLeave: function (args) {send("_wspawnl");}});

var _wspawnle = Module.findExportByName("ucrtbased.dll", "_wspawnle")
Interceptor.attach(_wspawnle, {onLeave: function (args) {send("_wspawnle");}});

var _wspawnlp = Module.findExportByName("ucrtbased.dll", "_wspawnlp")
Interceptor.attach(_wspawnlp, {onLeave: function (args) {send("_wspawnlp");}});

var _wspawnlpe = Module.findExportByName("ucrtbased.dll", "_wspawnlpe")
Interceptor.attach(_wspawnlpe, {onLeave: function (args) {send("_wspawnlpe");}});

var _wspawnv = Module.findExportByName("ucrtbased.dll", "_wspawnv")
Interceptor.attach(_wspawnv, {onLeave: function (args) {send("_wspawnv");}});

var _wspawnve = Module.findExportByName("ucrtbased.dll", "_wspawnve")
Interceptor.attach(_wspawnve, {onLeave: function (args) {send("_wspawnve");}});

var _wspawnvp = Module.findExportByName("ucrtbased.dll", "_wspawnvp")
Interceptor.attach(_wspawnvp, {onLeave: function (args) {send("_wspawnvp");}});

var _wspawnvpe = Module.findExportByName("ucrtbased.dll", "_wspawnvpe")
Interceptor.attach(_wspawnvpe, {onLeave: function (args) {send("_wspawnvpe");}});

var _wsplitpath = Module.findExportByName("ucrtbased.dll", "_wsplitpath")
Interceptor.attach(_wsplitpath, {onLeave: function (args) {send("_wsplitpath");}});

var _wsplitpath_s = Module.findExportByName("ucrtbased.dll", "_wsplitpath_s")
Interceptor.attach(_wsplitpath_s, {onLeave: function (args) {send("_wsplitpath_s");}});

var _wstat32 = Module.findExportByName("ucrtbased.dll", "_wstat32")
Interceptor.attach(_wstat32, {onLeave: function (args) {send("_wstat32");}});

var _wstat32i64 = Module.findExportByName("ucrtbased.dll", "_wstat32i64")
Interceptor.attach(_wstat32i64, {onLeave: function (args) {send("_wstat32i64");}});

var _wstat64 = Module.findExportByName("ucrtbased.dll", "_wstat64")
Interceptor.attach(_wstat64, {onLeave: function (args) {send("_wstat64");}});

var _wstat64i32 = Module.findExportByName("ucrtbased.dll", "_wstat64i32")
Interceptor.attach(_wstat64i32, {onLeave: function (args) {send("_wstat64i32");}});

var _wstrdate = Module.findExportByName("ucrtbased.dll", "_wstrdate")
Interceptor.attach(_wstrdate, {onLeave: function (args) {send("_wstrdate");}});

var _wstrdate_s = Module.findExportByName("ucrtbased.dll", "_wstrdate_s")
Interceptor.attach(_wstrdate_s, {onLeave: function (args) {send("_wstrdate_s");}});

var _wstrtime = Module.findExportByName("ucrtbased.dll", "_wstrtime")
Interceptor.attach(_wstrtime, {onLeave: function (args) {send("_wstrtime");}});

var _wstrtime_s = Module.findExportByName("ucrtbased.dll", "_wstrtime_s")
Interceptor.attach(_wstrtime_s, {onLeave: function (args) {send("_wstrtime_s");}});

var _wsystem = Module.findExportByName("ucrtbased.dll", "_wsystem")
Interceptor.attach(_wsystem, {onLeave: function (args) {send("_wsystem");}});

var _wtempnam = Module.findExportByName("ucrtbased.dll", "_wtempnam")
Interceptor.attach(_wtempnam, {onLeave: function (args) {send("_wtempnam");}});

var _wtempnam_dbg = Module.findExportByName("ucrtbased.dll", "_wtempnam_dbg")
Interceptor.attach(_wtempnam_dbg, {onLeave: function (args) {send("_wtempnam_dbg");}});

var _wtmpnam = Module.findExportByName("ucrtbased.dll", "_wtmpnam")
Interceptor.attach(_wtmpnam, {onLeave: function (args) {send("_wtmpnam");}});

var _wtmpnam_s = Module.findExportByName("ucrtbased.dll", "_wtmpnam_s")
Interceptor.attach(_wtmpnam_s, {onLeave: function (args) {send("_wtmpnam_s");}});

var _wtof = Module.findExportByName("ucrtbased.dll", "_wtof")
Interceptor.attach(_wtof, {onLeave: function (args) {send("_wtof");}});

var _wtof_l = Module.findExportByName("ucrtbased.dll", "_wtof_l")
Interceptor.attach(_wtof_l, {onLeave: function (args) {send("_wtof_l");}});

var _wtoi = Module.findExportByName("ucrtbased.dll", "_wtoi")
Interceptor.attach(_wtoi, {onLeave: function (args) {send("_wtoi");}});

var _wtoi64 = Module.findExportByName("ucrtbased.dll", "_wtoi64")
Interceptor.attach(_wtoi64, {onLeave: function (args) {send("_wtoi64");}});

var _wtoi64_l = Module.findExportByName("ucrtbased.dll", "_wtoi64_l")
Interceptor.attach(_wtoi64_l, {onLeave: function (args) {send("_wtoi64_l");}});

var _wtoi_l = Module.findExportByName("ucrtbased.dll", "_wtoi_l")
Interceptor.attach(_wtoi_l, {onLeave: function (args) {send("_wtoi_l");}});

var _wtol = Module.findExportByName("ucrtbased.dll", "_wtol")
Interceptor.attach(_wtol, {onLeave: function (args) {send("_wtol");}});

var _wtol_l = Module.findExportByName("ucrtbased.dll", "_wtol_l")
Interceptor.attach(_wtol_l, {onLeave: function (args) {send("_wtol_l");}});

var _wtoll = Module.findExportByName("ucrtbased.dll", "_wtoll")
Interceptor.attach(_wtoll, {onLeave: function (args) {send("_wtoll");}});

var _wtoll_l = Module.findExportByName("ucrtbased.dll", "_wtoll_l")
Interceptor.attach(_wtoll_l, {onLeave: function (args) {send("_wtoll_l");}});

var _wunlink = Module.findExportByName("ucrtbased.dll", "_wunlink")
Interceptor.attach(_wunlink, {onLeave: function (args) {send("_wunlink");}});

var _wutime32 = Module.findExportByName("ucrtbased.dll", "_wutime32")
Interceptor.attach(_wutime32, {onLeave: function (args) {send("_wutime32");}});

var _wutime64 = Module.findExportByName("ucrtbased.dll", "_wutime64")
Interceptor.attach(_wutime64, {onLeave: function (args) {send("_wutime64");}});

var _y0 = Module.findExportByName("ucrtbased.dll", "_y0")
Interceptor.attach(_y0, {onLeave: function (args) {send("_y0");}});

var _y1 = Module.findExportByName("ucrtbased.dll", "_y1")
Interceptor.attach(_y1, {onLeave: function (args) {send("_y1");}});

var _yn = Module.findExportByName("ucrtbased.dll", "_yn")
Interceptor.attach(_yn, {onLeave: function (args) {send("_yn");}});

var abort = Module.findExportByName("ucrtbased.dll", "abort")
Interceptor.attach(abort, {onLeave: function (args) {send("abort");}});

var abs = Module.findExportByName("ucrtbased.dll", "abs")
Interceptor.attach(abs, {onLeave: function (args) {send("abs");}});

var acos = Module.findExportByName("ucrtbased.dll", "acos")
Interceptor.attach(acos, {onLeave: function (args) {send("acos");}});

var acosf = Module.findExportByName("ucrtbased.dll", "acosf")
Interceptor.attach(acosf, {onLeave: function (args) {send("acosf");}});

var acosh = Module.findExportByName("ucrtbased.dll", "acosh")
Interceptor.attach(acosh, {onLeave: function (args) {send("acosh");}});

var acoshf = Module.findExportByName("ucrtbased.dll", "acoshf")
Interceptor.attach(acoshf, {onLeave: function (args) {send("acoshf");}});

var acoshl = Module.findExportByName("ucrtbased.dll", "acoshl")
Interceptor.attach(acoshl, {onLeave: function (args) {send("acoshl");}});

var asctime = Module.findExportByName("ucrtbased.dll", "asctime")
Interceptor.attach(asctime, {onLeave: function (args) {send("asctime");}});

var asctime_s = Module.findExportByName("ucrtbased.dll", "asctime_s")
Interceptor.attach(asctime_s, {onLeave: function (args) {send("asctime_s");}});

var asin = Module.findExportByName("ucrtbased.dll", "asin")
Interceptor.attach(asin, {onLeave: function (args) {send("asin");}});

var asinf = Module.findExportByName("ucrtbased.dll", "asinf")
Interceptor.attach(asinf, {onLeave: function (args) {send("asinf");}});

var asinh = Module.findExportByName("ucrtbased.dll", "asinh")
Interceptor.attach(asinh, {onLeave: function (args) {send("asinh");}});

var asinhf = Module.findExportByName("ucrtbased.dll", "asinhf")
Interceptor.attach(asinhf, {onLeave: function (args) {send("asinhf");}});

var asinhl = Module.findExportByName("ucrtbased.dll", "asinhl")
Interceptor.attach(asinhl, {onLeave: function (args) {send("asinhl");}});

var atan = Module.findExportByName("ucrtbased.dll", "atan")
Interceptor.attach(atan, {onLeave: function (args) {send("atan");}});

var atan2 = Module.findExportByName("ucrtbased.dll", "atan2")
Interceptor.attach(atan2, {onLeave: function (args) {send("atan2");}});

var atan2f = Module.findExportByName("ucrtbased.dll", "atan2f")
Interceptor.attach(atan2f, {onLeave: function (args) {send("atan2f");}});

var atanf = Module.findExportByName("ucrtbased.dll", "atanf")
Interceptor.attach(atanf, {onLeave: function (args) {send("atanf");}});

var atanh = Module.findExportByName("ucrtbased.dll", "atanh")
Interceptor.attach(atanh, {onLeave: function (args) {send("atanh");}});

var atanhf = Module.findExportByName("ucrtbased.dll", "atanhf")
Interceptor.attach(atanhf, {onLeave: function (args) {send("atanhf");}});

var atanhl = Module.findExportByName("ucrtbased.dll", "atanhl")
Interceptor.attach(atanhl, {onLeave: function (args) {send("atanhl");}});

var atof = Module.findExportByName("ucrtbased.dll", "atof")
Interceptor.attach(atof, {onLeave: function (args) {send("atof");}});

var atoi = Module.findExportByName("ucrtbased.dll", "atoi")
Interceptor.attach(atoi, {onLeave: function (args) {send("atoi");}});

var atol = Module.findExportByName("ucrtbased.dll", "atol")
Interceptor.attach(atol, {onLeave: function (args) {send("atol");}});

var atoll = Module.findExportByName("ucrtbased.dll", "atoll")
Interceptor.attach(atoll, {onLeave: function (args) {send("atoll");}});

var bsearch = Module.findExportByName("ucrtbased.dll", "bsearch")
Interceptor.attach(bsearch, {onLeave: function (args) {send("bsearch");}});

var bsearch_s = Module.findExportByName("ucrtbased.dll", "bsearch_s")
Interceptor.attach(bsearch_s, {onLeave: function (args) {send("bsearch_s");}});

var btowc = Module.findExportByName("ucrtbased.dll", "btowc")
Interceptor.attach(btowc, {onLeave: function (args) {send("btowc");}});

var c16rtomb = Module.findExportByName("ucrtbased.dll", "c16rtomb")
Interceptor.attach(c16rtomb, {onLeave: function (args) {send("c16rtomb");}});

var c32rtomb = Module.findExportByName("ucrtbased.dll", "c32rtomb")
Interceptor.attach(c32rtomb, {onLeave: function (args) {send("c32rtomb");}});

var cabs = Module.findExportByName("ucrtbased.dll", "cabs")
Interceptor.attach(cabs, {onLeave: function (args) {send("cabs");}});

var cabsf = Module.findExportByName("ucrtbased.dll", "cabsf")
Interceptor.attach(cabsf, {onLeave: function (args) {send("cabsf");}});

var cabsl = Module.findExportByName("ucrtbased.dll", "cabsl")
Interceptor.attach(cabsl, {onLeave: function (args) {send("cabsl");}});

var cacos = Module.findExportByName("ucrtbased.dll", "cacos")
Interceptor.attach(cacos, {onLeave: function (args) {send("cacos");}});

var cacosf = Module.findExportByName("ucrtbased.dll", "cacosf")
Interceptor.attach(cacosf, {onLeave: function (args) {send("cacosf");}});

var cacosh = Module.findExportByName("ucrtbased.dll", "cacosh")
Interceptor.attach(cacosh, {onLeave: function (args) {send("cacosh");}});

var cacoshf = Module.findExportByName("ucrtbased.dll", "cacoshf")
Interceptor.attach(cacoshf, {onLeave: function (args) {send("cacoshf");}});

var cacoshl = Module.findExportByName("ucrtbased.dll", "cacoshl")
Interceptor.attach(cacoshl, {onLeave: function (args) {send("cacoshl");}});

var cacosl = Module.findExportByName("ucrtbased.dll", "cacosl")
Interceptor.attach(cacosl, {onLeave: function (args) {send("cacosl");}});

var calloc = Module.findExportByName("ucrtbased.dll", "calloc")
Interceptor.attach(calloc, {onLeave: function (args) {send("calloc");}});

var carg = Module.findExportByName("ucrtbased.dll", "carg")
Interceptor.attach(carg, {onLeave: function (args) {send("carg");}});

var cargf = Module.findExportByName("ucrtbased.dll", "cargf")
Interceptor.attach(cargf, {onLeave: function (args) {send("cargf");}});

var cargl = Module.findExportByName("ucrtbased.dll", "cargl")
Interceptor.attach(cargl, {onLeave: function (args) {send("cargl");}});

var casin = Module.findExportByName("ucrtbased.dll", "casin")
Interceptor.attach(casin, {onLeave: function (args) {send("casin");}});

var casinf = Module.findExportByName("ucrtbased.dll", "casinf")
Interceptor.attach(casinf, {onLeave: function (args) {send("casinf");}});

var casinh = Module.findExportByName("ucrtbased.dll", "casinh")
Interceptor.attach(casinh, {onLeave: function (args) {send("casinh");}});

var casinhf = Module.findExportByName("ucrtbased.dll", "casinhf")
Interceptor.attach(casinhf, {onLeave: function (args) {send("casinhf");}});

var casinhl = Module.findExportByName("ucrtbased.dll", "casinhl")
Interceptor.attach(casinhl, {onLeave: function (args) {send("casinhl");}});

var casinl = Module.findExportByName("ucrtbased.dll", "casinl")
Interceptor.attach(casinl, {onLeave: function (args) {send("casinl");}});

var catan = Module.findExportByName("ucrtbased.dll", "catan")
Interceptor.attach(catan, {onLeave: function (args) {send("catan");}});

var catanf = Module.findExportByName("ucrtbased.dll", "catanf")
Interceptor.attach(catanf, {onLeave: function (args) {send("catanf");}});

var catanh = Module.findExportByName("ucrtbased.dll", "catanh")
Interceptor.attach(catanh, {onLeave: function (args) {send("catanh");}});

var catanhf = Module.findExportByName("ucrtbased.dll", "catanhf")
Interceptor.attach(catanhf, {onLeave: function (args) {send("catanhf");}});

var catanhl = Module.findExportByName("ucrtbased.dll", "catanhl")
Interceptor.attach(catanhl, {onLeave: function (args) {send("catanhl");}});

var catanl = Module.findExportByName("ucrtbased.dll", "catanl")
Interceptor.attach(catanl, {onLeave: function (args) {send("catanl");}});

var cbrt = Module.findExportByName("ucrtbased.dll", "cbrt")
Interceptor.attach(cbrt, {onLeave: function (args) {send("cbrt");}});

var cbrtf = Module.findExportByName("ucrtbased.dll", "cbrtf")
Interceptor.attach(cbrtf, {onLeave: function (args) {send("cbrtf");}});

var cbrtl = Module.findExportByName("ucrtbased.dll", "cbrtl")
Interceptor.attach(cbrtl, {onLeave: function (args) {send("cbrtl");}});

var ccos = Module.findExportByName("ucrtbased.dll", "ccos")
Interceptor.attach(ccos, {onLeave: function (args) {send("ccos");}});

var ccosf = Module.findExportByName("ucrtbased.dll", "ccosf")
Interceptor.attach(ccosf, {onLeave: function (args) {send("ccosf");}});

var ccosh = Module.findExportByName("ucrtbased.dll", "ccosh")
Interceptor.attach(ccosh, {onLeave: function (args) {send("ccosh");}});

var ccoshf = Module.findExportByName("ucrtbased.dll", "ccoshf")
Interceptor.attach(ccoshf, {onLeave: function (args) {send("ccoshf");}});

var ccoshl = Module.findExportByName("ucrtbased.dll", "ccoshl")
Interceptor.attach(ccoshl, {onLeave: function (args) {send("ccoshl");}});

var ccosl = Module.findExportByName("ucrtbased.dll", "ccosl")
Interceptor.attach(ccosl, {onLeave: function (args) {send("ccosl");}});

var ceil = Module.findExportByName("ucrtbased.dll", "ceil")
Interceptor.attach(ceil, {onLeave: function (args) {send("ceil");}});

var ceilf = Module.findExportByName("ucrtbased.dll", "ceilf")
Interceptor.attach(ceilf, {onLeave: function (args) {send("ceilf");}});

var cexp = Module.findExportByName("ucrtbased.dll", "cexp")
Interceptor.attach(cexp, {onLeave: function (args) {send("cexp");}});

var cexpf = Module.findExportByName("ucrtbased.dll", "cexpf")
Interceptor.attach(cexpf, {onLeave: function (args) {send("cexpf");}});

var cexpl = Module.findExportByName("ucrtbased.dll", "cexpl")
Interceptor.attach(cexpl, {onLeave: function (args) {send("cexpl");}});

var cimag = Module.findExportByName("ucrtbased.dll", "cimag")
Interceptor.attach(cimag, {onLeave: function (args) {send("cimag");}});

var cimagf = Module.findExportByName("ucrtbased.dll", "cimagf")
Interceptor.attach(cimagf, {onLeave: function (args) {send("cimagf");}});

var cimagl = Module.findExportByName("ucrtbased.dll", "cimagl")
Interceptor.attach(cimagl, {onLeave: function (args) {send("cimagl");}});

var clearerr = Module.findExportByName("ucrtbased.dll", "clearerr")
Interceptor.attach(clearerr, {onLeave: function (args) {send("clearerr");}});

var clearerr_s = Module.findExportByName("ucrtbased.dll", "clearerr_s")
Interceptor.attach(clearerr_s, {onLeave: function (args) {send("clearerr_s");}});

var clock = Module.findExportByName("ucrtbased.dll", "clock")
Interceptor.attach(clock, {onLeave: function (args) {send("clock");}});

var clog = Module.findExportByName("ucrtbased.dll", "clog")
Interceptor.attach(clog, {onLeave: function (args) {send("clog");}});

var clog10 = Module.findExportByName("ucrtbased.dll", "clog10")
Interceptor.attach(clog10, {onLeave: function (args) {send("clog10");}});

var clog10f = Module.findExportByName("ucrtbased.dll", "clog10f")
Interceptor.attach(clog10f, {onLeave: function (args) {send("clog10f");}});

var clog10l = Module.findExportByName("ucrtbased.dll", "clog10l")
Interceptor.attach(clog10l, {onLeave: function (args) {send("clog10l");}});

var clogf = Module.findExportByName("ucrtbased.dll", "clogf")
Interceptor.attach(clogf, {onLeave: function (args) {send("clogf");}});

var clogl = Module.findExportByName("ucrtbased.dll", "clogl")
Interceptor.attach(clogl, {onLeave: function (args) {send("clogl");}});

var conj = Module.findExportByName("ucrtbased.dll", "conj")
Interceptor.attach(conj, {onLeave: function (args) {send("conj");}});

var conjf = Module.findExportByName("ucrtbased.dll", "conjf")
Interceptor.attach(conjf, {onLeave: function (args) {send("conjf");}});

var conjl = Module.findExportByName("ucrtbased.dll", "conjl")
Interceptor.attach(conjl, {onLeave: function (args) {send("conjl");}});

var copysign = Module.findExportByName("ucrtbased.dll", "copysign")
Interceptor.attach(copysign, {onLeave: function (args) {send("copysign");}});

var copysignf = Module.findExportByName("ucrtbased.dll", "copysignf")
Interceptor.attach(copysignf, {onLeave: function (args) {send("copysignf");}});

var copysignl = Module.findExportByName("ucrtbased.dll", "copysignl")
Interceptor.attach(copysignl, {onLeave: function (args) {send("copysignl");}});

var cos = Module.findExportByName("ucrtbased.dll", "cos")
Interceptor.attach(cos, {onLeave: function (args) {send("cos");}});

var cosf = Module.findExportByName("ucrtbased.dll", "cosf")
Interceptor.attach(cosf, {onLeave: function (args) {send("cosf");}});

var cosh = Module.findExportByName("ucrtbased.dll", "cosh")
Interceptor.attach(cosh, {onLeave: function (args) {send("cosh");}});

var coshf = Module.findExportByName("ucrtbased.dll", "coshf")
Interceptor.attach(coshf, {onLeave: function (args) {send("coshf");}});

var cpow = Module.findExportByName("ucrtbased.dll", "cpow")
Interceptor.attach(cpow, {onLeave: function (args) {send("cpow");}});

var cpowf = Module.findExportByName("ucrtbased.dll", "cpowf")
Interceptor.attach(cpowf, {onLeave: function (args) {send("cpowf");}});

var cpowl = Module.findExportByName("ucrtbased.dll", "cpowl")
Interceptor.attach(cpowl, {onLeave: function (args) {send("cpowl");}});

var cproj = Module.findExportByName("ucrtbased.dll", "cproj")
Interceptor.attach(cproj, {onLeave: function (args) {send("cproj");}});

var cprojf = Module.findExportByName("ucrtbased.dll", "cprojf")
Interceptor.attach(cprojf, {onLeave: function (args) {send("cprojf");}});

var cprojl = Module.findExportByName("ucrtbased.dll", "cprojl")
Interceptor.attach(cprojl, {onLeave: function (args) {send("cprojl");}});

var creal = Module.findExportByName("ucrtbased.dll", "creal")
Interceptor.attach(creal, {onLeave: function (args) {send("creal");}});

var crealf = Module.findExportByName("ucrtbased.dll", "crealf")
Interceptor.attach(crealf, {onLeave: function (args) {send("crealf");}});

var creall = Module.findExportByName("ucrtbased.dll", "creall")
Interceptor.attach(creall, {onLeave: function (args) {send("creall");}});

var csin = Module.findExportByName("ucrtbased.dll", "csin")
Interceptor.attach(csin, {onLeave: function (args) {send("csin");}});

var csinf = Module.findExportByName("ucrtbased.dll", "csinf")
Interceptor.attach(csinf, {onLeave: function (args) {send("csinf");}});

var csinh = Module.findExportByName("ucrtbased.dll", "csinh")
Interceptor.attach(csinh, {onLeave: function (args) {send("csinh");}});

var csinhf = Module.findExportByName("ucrtbased.dll", "csinhf")
Interceptor.attach(csinhf, {onLeave: function (args) {send("csinhf");}});

var csinhl = Module.findExportByName("ucrtbased.dll", "csinhl")
Interceptor.attach(csinhl, {onLeave: function (args) {send("csinhl");}});

var csinl = Module.findExportByName("ucrtbased.dll", "csinl")
Interceptor.attach(csinl, {onLeave: function (args) {send("csinl");}});

var csqrt = Module.findExportByName("ucrtbased.dll", "csqrt")
Interceptor.attach(csqrt, {onLeave: function (args) {send("csqrt");}});

var csqrtf = Module.findExportByName("ucrtbased.dll", "csqrtf")
Interceptor.attach(csqrtf, {onLeave: function (args) {send("csqrtf");}});

var csqrtl = Module.findExportByName("ucrtbased.dll", "csqrtl")
Interceptor.attach(csqrtl, {onLeave: function (args) {send("csqrtl");}});

var ctan = Module.findExportByName("ucrtbased.dll", "ctan")
Interceptor.attach(ctan, {onLeave: function (args) {send("ctan");}});

var ctanf = Module.findExportByName("ucrtbased.dll", "ctanf")
Interceptor.attach(ctanf, {onLeave: function (args) {send("ctanf");}});

var ctanh = Module.findExportByName("ucrtbased.dll", "ctanh")
Interceptor.attach(ctanh, {onLeave: function (args) {send("ctanh");}});

var ctanhf = Module.findExportByName("ucrtbased.dll", "ctanhf")
Interceptor.attach(ctanhf, {onLeave: function (args) {send("ctanhf");}});

var ctanhl = Module.findExportByName("ucrtbased.dll", "ctanhl")
Interceptor.attach(ctanhl, {onLeave: function (args) {send("ctanhl");}});

var ctanl = Module.findExportByName("ucrtbased.dll", "ctanl")
Interceptor.attach(ctanl, {onLeave: function (args) {send("ctanl");}});

var div = Module.findExportByName("ucrtbased.dll", "div")
Interceptor.attach(div, {onLeave: function (args) {send("div");}});

var erf = Module.findExportByName("ucrtbased.dll", "erf")
Interceptor.attach(erf, {onLeave: function (args) {send("erf");}});

var erfc = Module.findExportByName("ucrtbased.dll", "erfc")
Interceptor.attach(erfc, {onLeave: function (args) {send("erfc");}});

var erfcf = Module.findExportByName("ucrtbased.dll", "erfcf")
Interceptor.attach(erfcf, {onLeave: function (args) {send("erfcf");}});

var erfcl = Module.findExportByName("ucrtbased.dll", "erfcl")
Interceptor.attach(erfcl, {onLeave: function (args) {send("erfcl");}});

var erff = Module.findExportByName("ucrtbased.dll", "erff")
Interceptor.attach(erff, {onLeave: function (args) {send("erff");}});

var erfl = Module.findExportByName("ucrtbased.dll", "erfl")
Interceptor.attach(erfl, {onLeave: function (args) {send("erfl");}});

var exit = Module.findExportByName("ucrtbased.dll", "exit")
Interceptor.attach(exit, {onLeave: function (args) {send("exit");}});

var exp = Module.findExportByName("ucrtbased.dll", "exp")
Interceptor.attach(exp, {onLeave: function (args) {send("exp");}});

var exp2 = Module.findExportByName("ucrtbased.dll", "exp2")
Interceptor.attach(exp2, {onLeave: function (args) {send("exp2");}});

var exp2f = Module.findExportByName("ucrtbased.dll", "exp2f")
Interceptor.attach(exp2f, {onLeave: function (args) {send("exp2f");}});

var exp2l = Module.findExportByName("ucrtbased.dll", "exp2l")
Interceptor.attach(exp2l, {onLeave: function (args) {send("exp2l");}});

var expf = Module.findExportByName("ucrtbased.dll", "expf")
Interceptor.attach(expf, {onLeave: function (args) {send("expf");}});

var expm1 = Module.findExportByName("ucrtbased.dll", "expm1")
Interceptor.attach(expm1, {onLeave: function (args) {send("expm1");}});

var expm1f = Module.findExportByName("ucrtbased.dll", "expm1f")
Interceptor.attach(expm1f, {onLeave: function (args) {send("expm1f");}});

var expm1l = Module.findExportByName("ucrtbased.dll", "expm1l")
Interceptor.attach(expm1l, {onLeave: function (args) {send("expm1l");}});

var fabs = Module.findExportByName("ucrtbased.dll", "fabs")
Interceptor.attach(fabs, {onLeave: function (args) {send("fabs");}});

var fclose = Module.findExportByName("ucrtbased.dll", "fclose")
Interceptor.attach(fclose, {onLeave: function (args) {send("fclose");}});

var fdim = Module.findExportByName("ucrtbased.dll", "fdim")
Interceptor.attach(fdim, {onLeave: function (args) {send("fdim");}});

var fdimf = Module.findExportByName("ucrtbased.dll", "fdimf")
Interceptor.attach(fdimf, {onLeave: function (args) {send("fdimf");}});

var fdiml = Module.findExportByName("ucrtbased.dll", "fdiml")
Interceptor.attach(fdiml, {onLeave: function (args) {send("fdiml");}});

var feclearexcept = Module.findExportByName("ucrtbased.dll", "feclearexcept")
Interceptor.attach(feclearexcept, {onLeave: function (args) {send("feclearexcept");}});

var fegetenv = Module.findExportByName("ucrtbased.dll", "fegetenv")
Interceptor.attach(fegetenv, {onLeave: function (args) {send("fegetenv");}});

var fegetexceptflag = Module.findExportByName("ucrtbased.dll", "fegetexceptflag")
Interceptor.attach(fegetexceptflag, {onLeave: function (args) {send("fegetexceptflag");}});

var fegetround = Module.findExportByName("ucrtbased.dll", "fegetround")
Interceptor.attach(fegetround, {onLeave: function (args) {send("fegetround");}});

var feholdexcept = Module.findExportByName("ucrtbased.dll", "feholdexcept")
Interceptor.attach(feholdexcept, {onLeave: function (args) {send("feholdexcept");}});

var feof = Module.findExportByName("ucrtbased.dll", "feof")
Interceptor.attach(feof, {onLeave: function (args) {send("feof");}});

var ferror = Module.findExportByName("ucrtbased.dll", "ferror")
Interceptor.attach(ferror, {onLeave: function (args) {send("ferror");}});

var fesetenv = Module.findExportByName("ucrtbased.dll", "fesetenv")
Interceptor.attach(fesetenv, {onLeave: function (args) {send("fesetenv");}});

var fesetexceptflag = Module.findExportByName("ucrtbased.dll", "fesetexceptflag")
Interceptor.attach(fesetexceptflag, {onLeave: function (args) {send("fesetexceptflag");}});

var fesetround = Module.findExportByName("ucrtbased.dll", "fesetround")
Interceptor.attach(fesetround, {onLeave: function (args) {send("fesetround");}});

var fetestexcept = Module.findExportByName("ucrtbased.dll", "fetestexcept")
Interceptor.attach(fetestexcept, {onLeave: function (args) {send("fetestexcept");}});

var fflush = Module.findExportByName("ucrtbased.dll", "fflush")
Interceptor.attach(fflush, {onLeave: function (args) {send("fflush");}});

var fgetc = Module.findExportByName("ucrtbased.dll", "fgetc")
Interceptor.attach(fgetc, {onLeave: function (args) {send("fgetc");}});

var fgetpos = Module.findExportByName("ucrtbased.dll", "fgetpos")
Interceptor.attach(fgetpos, {onLeave: function (args) {send("fgetpos");}});

var fgets = Module.findExportByName("ucrtbased.dll", "fgets")
Interceptor.attach(fgets, {onLeave: function (args) {send("fgets");}});

var fgetwc = Module.findExportByName("ucrtbased.dll", "fgetwc")
Interceptor.attach(fgetwc, {onLeave: function (args) {send("fgetwc");}});

var fgetws = Module.findExportByName("ucrtbased.dll", "fgetws")
Interceptor.attach(fgetws, {onLeave: function (args) {send("fgetws");}});

var floor = Module.findExportByName("ucrtbased.dll", "floor")
Interceptor.attach(floor, {onLeave: function (args) {send("floor");}});

var floorf = Module.findExportByName("ucrtbased.dll", "floorf")
Interceptor.attach(floorf, {onLeave: function (args) {send("floorf");}});

var fma = Module.findExportByName("ucrtbased.dll", "fma")
Interceptor.attach(fma, {onLeave: function (args) {send("fma");}});

var fmaf = Module.findExportByName("ucrtbased.dll", "fmaf")
Interceptor.attach(fmaf, {onLeave: function (args) {send("fmaf");}});

var fmal = Module.findExportByName("ucrtbased.dll", "fmal")
Interceptor.attach(fmal, {onLeave: function (args) {send("fmal");}});

var fmax = Module.findExportByName("ucrtbased.dll", "fmax")
Interceptor.attach(fmax, {onLeave: function (args) {send("fmax");}});

var fmaxf = Module.findExportByName("ucrtbased.dll", "fmaxf")
Interceptor.attach(fmaxf, {onLeave: function (args) {send("fmaxf");}});

var fmaxl = Module.findExportByName("ucrtbased.dll", "fmaxl")
Interceptor.attach(fmaxl, {onLeave: function (args) {send("fmaxl");}});

var fmin = Module.findExportByName("ucrtbased.dll", "fmin")
Interceptor.attach(fmin, {onLeave: function (args) {send("fmin");}});

var fminf = Module.findExportByName("ucrtbased.dll", "fminf")
Interceptor.attach(fminf, {onLeave: function (args) {send("fminf");}});

var fminl = Module.findExportByName("ucrtbased.dll", "fminl")
Interceptor.attach(fminl, {onLeave: function (args) {send("fminl");}});

var fmod = Module.findExportByName("ucrtbased.dll", "fmod")
Interceptor.attach(fmod, {onLeave: function (args) {send("fmod");}});

var fmodf = Module.findExportByName("ucrtbased.dll", "fmodf")
Interceptor.attach(fmodf, {onLeave: function (args) {send("fmodf");}});

var fopen = Module.findExportByName("ucrtbased.dll", "fopen")
Interceptor.attach(fopen, {onLeave: function (args) {send("fopen");}});

var fopen_s = Module.findExportByName("ucrtbased.dll", "fopen_s")
Interceptor.attach(fopen_s, {onLeave: function (args) {send("fopen_s");}});

var fputc = Module.findExportByName("ucrtbased.dll", "fputc")
Interceptor.attach(fputc, {onLeave: function (args) {send("fputc");}});

var fputs = Module.findExportByName("ucrtbased.dll", "fputs")
Interceptor.attach(fputs, {onLeave: function (args) {send("fputs");}});

var fputwc = Module.findExportByName("ucrtbased.dll", "fputwc")
Interceptor.attach(fputwc, {onLeave: function (args) {send("fputwc");}});

var fputws = Module.findExportByName("ucrtbased.dll", "fputws")
Interceptor.attach(fputws, {onLeave: function (args) {send("fputws");}});

var fread = Module.findExportByName("ucrtbased.dll", "fread")
Interceptor.attach(fread, {onLeave: function (args) {send("fread");}});

var fread_s = Module.findExportByName("ucrtbased.dll", "fread_s")
Interceptor.attach(fread_s, {onLeave: function (args) {send("fread_s");}});

var free = Module.findExportByName("ucrtbased.dll", "free")
Interceptor.attach(free, {onLeave: function (args) {send("free");}});

var freopen = Module.findExportByName("ucrtbased.dll", "freopen")
Interceptor.attach(freopen, {onLeave: function (args) {send("freopen");}});

var freopen_s = Module.findExportByName("ucrtbased.dll", "freopen_s")
Interceptor.attach(freopen_s, {onLeave: function (args) {send("freopen_s");}});

var frexp = Module.findExportByName("ucrtbased.dll", "frexp")
Interceptor.attach(frexp, {onLeave: function (args) {send("frexp");}});

var fseek = Module.findExportByName("ucrtbased.dll", "fseek")
Interceptor.attach(fseek, {onLeave: function (args) {send("fseek");}});

var fsetpos = Module.findExportByName("ucrtbased.dll", "fsetpos")
Interceptor.attach(fsetpos, {onLeave: function (args) {send("fsetpos");}});

var ftell = Module.findExportByName("ucrtbased.dll", "ftell")
Interceptor.attach(ftell, {onLeave: function (args) {send("ftell");}});

var fwrite = Module.findExportByName("ucrtbased.dll", "fwrite")
Interceptor.attach(fwrite, {onLeave: function (args) {send("fwrite");}});

var getc = Module.findExportByName("ucrtbased.dll", "getc")
Interceptor.attach(getc, {onLeave: function (args) {send("getc");}});

var getchar = Module.findExportByName("ucrtbased.dll", "getchar")
Interceptor.attach(getchar, {onLeave: function (args) {send("getchar");}});

var getenv = Module.findExportByName("ucrtbased.dll", "getenv")
Interceptor.attach(getenv, {onLeave: function (args) {send("getenv");}});

var getenv_s = Module.findExportByName("ucrtbased.dll", "getenv_s")
Interceptor.attach(getenv_s, {onLeave: function (args) {send("getenv_s");}});

var gets = Module.findExportByName("ucrtbased.dll", "gets")
Interceptor.attach(gets, {onLeave: function (args) {send("gets");}});

var gets_s = Module.findExportByName("ucrtbased.dll", "gets_s")
Interceptor.attach(gets_s, {onLeave: function (args) {send("gets_s");}});

var getwc = Module.findExportByName("ucrtbased.dll", "getwc")
Interceptor.attach(getwc, {onLeave: function (args) {send("getwc");}});

var getwchar = Module.findExportByName("ucrtbased.dll", "getwchar")
Interceptor.attach(getwchar, {onLeave: function (args) {send("getwchar");}});

var hypot = Module.findExportByName("ucrtbased.dll", "hypot")
Interceptor.attach(hypot, {onLeave: function (args) {send("hypot");}});

var ilogb = Module.findExportByName("ucrtbased.dll", "ilogb")
Interceptor.attach(ilogb, {onLeave: function (args) {send("ilogb");}});

var ilogbf = Module.findExportByName("ucrtbased.dll", "ilogbf")
Interceptor.attach(ilogbf, {onLeave: function (args) {send("ilogbf");}});

var ilogbl = Module.findExportByName("ucrtbased.dll", "ilogbl")
Interceptor.attach(ilogbl, {onLeave: function (args) {send("ilogbl");}});

var imaxabs = Module.findExportByName("ucrtbased.dll", "imaxabs")
Interceptor.attach(imaxabs, {onLeave: function (args) {send("imaxabs");}});

var imaxdiv = Module.findExportByName("ucrtbased.dll", "imaxdiv")
Interceptor.attach(imaxdiv, {onLeave: function (args) {send("imaxdiv");}});

var is_wctype = Module.findExportByName("ucrtbased.dll", "is_wctype")
Interceptor.attach(is_wctype, {onLeave: function (args) {send("is_wctype");}});

var isalnum = Module.findExportByName("ucrtbased.dll", "isalnum")
Interceptor.attach(isalnum, {onLeave: function (args) {send("isalnum");}});

var isalpha = Module.findExportByName("ucrtbased.dll", "isalpha")
Interceptor.attach(isalpha, {onLeave: function (args) {send("isalpha");}});

var isblank = Module.findExportByName("ucrtbased.dll", "isblank")
Interceptor.attach(isblank, {onLeave: function (args) {send("isblank");}});

var iscntrl = Module.findExportByName("ucrtbased.dll", "iscntrl")
Interceptor.attach(iscntrl, {onLeave: function (args) {send("iscntrl");}});

var isdigit = Module.findExportByName("ucrtbased.dll", "isdigit")
Interceptor.attach(isdigit, {onLeave: function (args) {send("isdigit");}});

var isgraph = Module.findExportByName("ucrtbased.dll", "isgraph")
Interceptor.attach(isgraph, {onLeave: function (args) {send("isgraph");}});

var isleadbyte = Module.findExportByName("ucrtbased.dll", "isleadbyte")
Interceptor.attach(isleadbyte, {onLeave: function (args) {send("isleadbyte");}});

var islower = Module.findExportByName("ucrtbased.dll", "islower")
Interceptor.attach(islower, {onLeave: function (args) {send("islower");}});

var isprint = Module.findExportByName("ucrtbased.dll", "isprint")
Interceptor.attach(isprint, {onLeave: function (args) {send("isprint");}});

var ispunct = Module.findExportByName("ucrtbased.dll", "ispunct")
Interceptor.attach(ispunct, {onLeave: function (args) {send("ispunct");}});

var isspace = Module.findExportByName("ucrtbased.dll", "isspace")
Interceptor.attach(isspace, {onLeave: function (args) {send("isspace");}});

var isupper = Module.findExportByName("ucrtbased.dll", "isupper")
Interceptor.attach(isupper, {onLeave: function (args) {send("isupper");}});

var iswalnum = Module.findExportByName("ucrtbased.dll", "iswalnum")
Interceptor.attach(iswalnum, {onLeave: function (args) {send("iswalnum");}});

var iswalpha = Module.findExportByName("ucrtbased.dll", "iswalpha")
Interceptor.attach(iswalpha, {onLeave: function (args) {send("iswalpha");}});

var iswascii = Module.findExportByName("ucrtbased.dll", "iswascii")
Interceptor.attach(iswascii, {onLeave: function (args) {send("iswascii");}});

var iswblank = Module.findExportByName("ucrtbased.dll", "iswblank")
Interceptor.attach(iswblank, {onLeave: function (args) {send("iswblank");}});

var iswcntrl = Module.findExportByName("ucrtbased.dll", "iswcntrl")
Interceptor.attach(iswcntrl, {onLeave: function (args) {send("iswcntrl");}});

var iswctype = Module.findExportByName("ucrtbased.dll", "iswctype")
Interceptor.attach(iswctype, {onLeave: function (args) {send("iswctype");}});

var iswdigit = Module.findExportByName("ucrtbased.dll", "iswdigit")
Interceptor.attach(iswdigit, {onLeave: function (args) {send("iswdigit");}});

var iswgraph = Module.findExportByName("ucrtbased.dll", "iswgraph")
Interceptor.attach(iswgraph, {onLeave: function (args) {send("iswgraph");}});

var iswlower = Module.findExportByName("ucrtbased.dll", "iswlower")
Interceptor.attach(iswlower, {onLeave: function (args) {send("iswlower");}});

var iswprint = Module.findExportByName("ucrtbased.dll", "iswprint")
Interceptor.attach(iswprint, {onLeave: function (args) {send("iswprint");}});

var iswpunct = Module.findExportByName("ucrtbased.dll", "iswpunct")
Interceptor.attach(iswpunct, {onLeave: function (args) {send("iswpunct");}});

var iswspace = Module.findExportByName("ucrtbased.dll", "iswspace")
Interceptor.attach(iswspace, {onLeave: function (args) {send("iswspace");}});

var iswupper = Module.findExportByName("ucrtbased.dll", "iswupper")
Interceptor.attach(iswupper, {onLeave: function (args) {send("iswupper");}});

var iswxdigit = Module.findExportByName("ucrtbased.dll", "iswxdigit")
Interceptor.attach(iswxdigit, {onLeave: function (args) {send("iswxdigit");}});

var isxdigit = Module.findExportByName("ucrtbased.dll", "isxdigit")
Interceptor.attach(isxdigit, {onLeave: function (args) {send("isxdigit");}});

var labs = Module.findExportByName("ucrtbased.dll", "labs")
Interceptor.attach(labs, {onLeave: function (args) {send("labs");}});

var ldexp = Module.findExportByName("ucrtbased.dll", "ldexp")
Interceptor.attach(ldexp, {onLeave: function (args) {send("ldexp");}});

var ldiv = Module.findExportByName("ucrtbased.dll", "ldiv")
Interceptor.attach(ldiv, {onLeave: function (args) {send("ldiv");}});

var lgamma = Module.findExportByName("ucrtbased.dll", "lgamma")
Interceptor.attach(lgamma, {onLeave: function (args) {send("lgamma");}});

var lgammaf = Module.findExportByName("ucrtbased.dll", "lgammaf")
Interceptor.attach(lgammaf, {onLeave: function (args) {send("lgammaf");}});

var lgammal = Module.findExportByName("ucrtbased.dll", "lgammal")
Interceptor.attach(lgammal, {onLeave: function (args) {send("lgammal");}});

var llabs = Module.findExportByName("ucrtbased.dll", "llabs")
Interceptor.attach(llabs, {onLeave: function (args) {send("llabs");}});

var lldiv = Module.findExportByName("ucrtbased.dll", "lldiv")
Interceptor.attach(lldiv, {onLeave: function (args) {send("lldiv");}});

var llrint = Module.findExportByName("ucrtbased.dll", "llrint")
Interceptor.attach(llrint, {onLeave: function (args) {send("llrint");}});

var llrintf = Module.findExportByName("ucrtbased.dll", "llrintf")
Interceptor.attach(llrintf, {onLeave: function (args) {send("llrintf");}});

var llrintl = Module.findExportByName("ucrtbased.dll", "llrintl")
Interceptor.attach(llrintl, {onLeave: function (args) {send("llrintl");}});

var llround = Module.findExportByName("ucrtbased.dll", "llround")
Interceptor.attach(llround, {onLeave: function (args) {send("llround");}});

var llroundf = Module.findExportByName("ucrtbased.dll", "llroundf")
Interceptor.attach(llroundf, {onLeave: function (args) {send("llroundf");}});

var llroundl = Module.findExportByName("ucrtbased.dll", "llroundl")
Interceptor.attach(llroundl, {onLeave: function (args) {send("llroundl");}});

var localeconv = Module.findExportByName("ucrtbased.dll", "localeconv")
Interceptor.attach(localeconv, {onLeave: function (args) {send("localeconv");}});

var log = Module.findExportByName("ucrtbased.dll", "log")
Interceptor.attach(log, {onLeave: function (args) {send("log");}});

var log10 = Module.findExportByName("ucrtbased.dll", "log10")
Interceptor.attach(log10, {onLeave: function (args) {send("log10");}});

var log10f = Module.findExportByName("ucrtbased.dll", "log10f")
Interceptor.attach(log10f, {onLeave: function (args) {send("log10f");}});

var log1p = Module.findExportByName("ucrtbased.dll", "log1p")
Interceptor.attach(log1p, {onLeave: function (args) {send("log1p");}});

var log1pf = Module.findExportByName("ucrtbased.dll", "log1pf")
Interceptor.attach(log1pf, {onLeave: function (args) {send("log1pf");}});

var log1pl = Module.findExportByName("ucrtbased.dll", "log1pl")
Interceptor.attach(log1pl, {onLeave: function (args) {send("log1pl");}});

var log2 = Module.findExportByName("ucrtbased.dll", "log2")
Interceptor.attach(log2, {onLeave: function (args) {send("log2");}});

var log2f = Module.findExportByName("ucrtbased.dll", "log2f")
Interceptor.attach(log2f, {onLeave: function (args) {send("log2f");}});

var log2l = Module.findExportByName("ucrtbased.dll", "log2l")
Interceptor.attach(log2l, {onLeave: function (args) {send("log2l");}});

var logb = Module.findExportByName("ucrtbased.dll", "logb")
Interceptor.attach(logb, {onLeave: function (args) {send("logb");}});

var logbf = Module.findExportByName("ucrtbased.dll", "logbf")
Interceptor.attach(logbf, {onLeave: function (args) {send("logbf");}});

var logbl = Module.findExportByName("ucrtbased.dll", "logbl")
Interceptor.attach(logbl, {onLeave: function (args) {send("logbl");}});

var logf = Module.findExportByName("ucrtbased.dll", "logf")
Interceptor.attach(logf, {onLeave: function (args) {send("logf");}});

var longjmp = Module.findExportByName("ucrtbased.dll", "longjmp")
Interceptor.attach(longjmp, {onLeave: function (args) {send("longjmp");}});

var lrint = Module.findExportByName("ucrtbased.dll", "lrint")
Interceptor.attach(lrint, {onLeave: function (args) {send("lrint");}});

var lrintf = Module.findExportByName("ucrtbased.dll", "lrintf")
Interceptor.attach(lrintf, {onLeave: function (args) {send("lrintf");}});

var lrintl = Module.findExportByName("ucrtbased.dll", "lrintl")
Interceptor.attach(lrintl, {onLeave: function (args) {send("lrintl");}});

var lround = Module.findExportByName("ucrtbased.dll", "lround")
Interceptor.attach(lround, {onLeave: function (args) {send("lround");}});

var lroundf = Module.findExportByName("ucrtbased.dll", "lroundf")
Interceptor.attach(lroundf, {onLeave: function (args) {send("lroundf");}});

var lroundl = Module.findExportByName("ucrtbased.dll", "lroundl")
Interceptor.attach(lroundl, {onLeave: function (args) {send("lroundl");}});

var malloc = Module.findExportByName("ucrtbased.dll", "malloc")
Interceptor.attach(malloc, {onLeave: function (args) {send("malloc");}});

var mblen = Module.findExportByName("ucrtbased.dll", "mblen")
Interceptor.attach(mblen, {onLeave: function (args) {send("mblen");}});

var mbrlen = Module.findExportByName("ucrtbased.dll", "mbrlen")
Interceptor.attach(mbrlen, {onLeave: function (args) {send("mbrlen");}});

var mbrtoc16 = Module.findExportByName("ucrtbased.dll", "mbrtoc16")
Interceptor.attach(mbrtoc16, {onLeave: function (args) {send("mbrtoc16");}});

var mbrtoc32 = Module.findExportByName("ucrtbased.dll", "mbrtoc32")
Interceptor.attach(mbrtoc32, {onLeave: function (args) {send("mbrtoc32");}});

var mbrtowc = Module.findExportByName("ucrtbased.dll", "mbrtowc")
Interceptor.attach(mbrtowc, {onLeave: function (args) {send("mbrtowc");}});

var mbsrtowcs = Module.findExportByName("ucrtbased.dll", "mbsrtowcs")
Interceptor.attach(mbsrtowcs, {onLeave: function (args) {send("mbsrtowcs");}});

var mbsrtowcs_s = Module.findExportByName("ucrtbased.dll", "mbsrtowcs_s")
Interceptor.attach(mbsrtowcs_s, {onLeave: function (args) {send("mbsrtowcs_s");}});

var mbstowcs = Module.findExportByName("ucrtbased.dll", "mbstowcs")
Interceptor.attach(mbstowcs, {onLeave: function (args) {send("mbstowcs");}});

var mbstowcs_s = Module.findExportByName("ucrtbased.dll", "mbstowcs_s")
Interceptor.attach(mbstowcs_s, {onLeave: function (args) {send("mbstowcs_s");}});

var mbtowc = Module.findExportByName("ucrtbased.dll", "mbtowc")
Interceptor.attach(mbtowc, {onLeave: function (args) {send("mbtowc");}});

var memchr = Module.findExportByName("ucrtbased.dll", "memchr")
Interceptor.attach(memchr, {onLeave: function (args) {send("memchr");}});

var memcmp = Module.findExportByName("ucrtbased.dll", "memcmp")
Interceptor.attach(memcmp, {onLeave: function (args) {send("memcmp");}});

var memcpy = Module.findExportByName("ucrtbased.dll", "memcpy")
Interceptor.attach(memcpy, {onLeave: function (args) {send("memcpy");}});

var memcpy_s = Module.findExportByName("ucrtbased.dll", "memcpy_s")
Interceptor.attach(memcpy_s, {onLeave: function (args) {send("memcpy_s");}});

var memmove = Module.findExportByName("ucrtbased.dll", "memmove")
Interceptor.attach(memmove, {onLeave: function (args) {send("memmove");}});

var memmove_s = Module.findExportByName("ucrtbased.dll", "memmove_s")
Interceptor.attach(memmove_s, {onLeave: function (args) {send("memmove_s");}});

var memset = Module.findExportByName("ucrtbased.dll", "memset")
Interceptor.attach(memset, {onLeave: function (args) {send("memset");}});

var modf = Module.findExportByName("ucrtbased.dll", "modf")
Interceptor.attach(modf, {onLeave: function (args) {send("modf");}});

var modff = Module.findExportByName("ucrtbased.dll", "modff")
Interceptor.attach(modff, {onLeave: function (args) {send("modff");}});

var nan = Module.findExportByName("ucrtbased.dll", "nan")
Interceptor.attach(nan, {onLeave: function (args) {send("nan");}});

var nanf = Module.findExportByName("ucrtbased.dll", "nanf")
Interceptor.attach(nanf, {onLeave: function (args) {send("nanf");}});

var nanl = Module.findExportByName("ucrtbased.dll", "nanl")
Interceptor.attach(nanl, {onLeave: function (args) {send("nanl");}});

var nearbyint = Module.findExportByName("ucrtbased.dll", "nearbyint")
Interceptor.attach(nearbyint, {onLeave: function (args) {send("nearbyint");}});

var nearbyintf = Module.findExportByName("ucrtbased.dll", "nearbyintf")
Interceptor.attach(nearbyintf, {onLeave: function (args) {send("nearbyintf");}});

var nearbyintl = Module.findExportByName("ucrtbased.dll", "nearbyintl")
Interceptor.attach(nearbyintl, {onLeave: function (args) {send("nearbyintl");}});

var nextafter = Module.findExportByName("ucrtbased.dll", "nextafter")
Interceptor.attach(nextafter, {onLeave: function (args) {send("nextafter");}});

var nextafterf = Module.findExportByName("ucrtbased.dll", "nextafterf")
Interceptor.attach(nextafterf, {onLeave: function (args) {send("nextafterf");}});

var nextafterl = Module.findExportByName("ucrtbased.dll", "nextafterl")
Interceptor.attach(nextafterl, {onLeave: function (args) {send("nextafterl");}});

var nexttoward = Module.findExportByName("ucrtbased.dll", "nexttoward")
Interceptor.attach(nexttoward, {onLeave: function (args) {send("nexttoward");}});

var nexttowardf = Module.findExportByName("ucrtbased.dll", "nexttowardf")
Interceptor.attach(nexttowardf, {onLeave: function (args) {send("nexttowardf");}});

var nexttowardl = Module.findExportByName("ucrtbased.dll", "nexttowardl")
Interceptor.attach(nexttowardl, {onLeave: function (args) {send("nexttowardl");}});

var norm = Module.findExportByName("ucrtbased.dll", "norm")
Interceptor.attach(norm, {onLeave: function (args) {send("norm");}});

var normf = Module.findExportByName("ucrtbased.dll", "normf")
Interceptor.attach(normf, {onLeave: function (args) {send("normf");}});

var norml = Module.findExportByName("ucrtbased.dll", "norml")
Interceptor.attach(norml, {onLeave: function (args) {send("norml");}});

var perror = Module.findExportByName("ucrtbased.dll", "perror")
Interceptor.attach(perror, {onLeave: function (args) {send("perror");}});

var pow = Module.findExportByName("ucrtbased.dll", "pow")
Interceptor.attach(pow, {onLeave: function (args) {send("pow");}});

var powf = Module.findExportByName("ucrtbased.dll", "powf")
Interceptor.attach(powf, {onLeave: function (args) {send("powf");}});

var putc = Module.findExportByName("ucrtbased.dll", "putc")
Interceptor.attach(putc, {onLeave: function (args) {send("putc");}});

var putchar = Module.findExportByName("ucrtbased.dll", "putchar")
Interceptor.attach(putchar, {onLeave: function (args) {send("putchar");}});

var puts = Module.findExportByName("ucrtbased.dll", "puts")
Interceptor.attach(puts, {onLeave: function (args) {send("puts");}});

var putwc = Module.findExportByName("ucrtbased.dll", "putwc")
Interceptor.attach(putwc, {onLeave: function (args) {send("putwc");}});

var putwchar = Module.findExportByName("ucrtbased.dll", "putwchar")
Interceptor.attach(putwchar, {onLeave: function (args) {send("putwchar");}});

var qsort = Module.findExportByName("ucrtbased.dll", "qsort")
Interceptor.attach(qsort, {onLeave: function (args) {send("qsort");}});

var qsort_s = Module.findExportByName("ucrtbased.dll", "qsort_s")
Interceptor.attach(qsort_s, {onLeave: function (args) {send("qsort_s");}});

var quick_exit = Module.findExportByName("ucrtbased.dll", "quick_exit")
Interceptor.attach(quick_exit, {onLeave: function (args) {send("quick_exit");}});

var raise = Module.findExportByName("ucrtbased.dll", "raise")
Interceptor.attach(raise, {onLeave: function (args) {send("raise");}});

var rand = Module.findExportByName("ucrtbased.dll", "rand")
Interceptor.attach(rand, {onLeave: function (args) {send("rand");}});

var rand_s = Module.findExportByName("ucrtbased.dll", "rand_s")
Interceptor.attach(rand_s, {onLeave: function (args) {send("rand_s");}});

var realloc = Module.findExportByName("ucrtbased.dll", "realloc")
Interceptor.attach(realloc, {onLeave: function (args) {send("realloc");}});

var remainder = Module.findExportByName("ucrtbased.dll", "remainder")
Interceptor.attach(remainder, {onLeave: function (args) {send("remainder");}});

var remainderf = Module.findExportByName("ucrtbased.dll", "remainderf")
Interceptor.attach(remainderf, {onLeave: function (args) {send("remainderf");}});

var remainderl = Module.findExportByName("ucrtbased.dll", "remainderl")
Interceptor.attach(remainderl, {onLeave: function (args) {send("remainderl");}});

var remove = Module.findExportByName("ucrtbased.dll", "remove")
Interceptor.attach(remove, {onLeave: function (args) {send("remove");}});

var remquo = Module.findExportByName("ucrtbased.dll", "remquo")
Interceptor.attach(remquo, {onLeave: function (args) {send("remquo");}});

var remquof = Module.findExportByName("ucrtbased.dll", "remquof")
Interceptor.attach(remquof, {onLeave: function (args) {send("remquof");}});

var remquol = Module.findExportByName("ucrtbased.dll", "remquol")
Interceptor.attach(remquol, {onLeave: function (args) {send("remquol");}});

var rename = Module.findExportByName("ucrtbased.dll", "rename")
Interceptor.attach(rename, {onLeave: function (args) {send("rename");}});

var rewind = Module.findExportByName("ucrtbased.dll", "rewind")
Interceptor.attach(rewind, {onLeave: function (args) {send("rewind");}});

var rint = Module.findExportByName("ucrtbased.dll", "rint")
Interceptor.attach(rint, {onLeave: function (args) {send("rint");}});

var rintf = Module.findExportByName("ucrtbased.dll", "rintf")
Interceptor.attach(rintf, {onLeave: function (args) {send("rintf");}});

var rintl = Module.findExportByName("ucrtbased.dll", "rintl")
Interceptor.attach(rintl, {onLeave: function (args) {send("rintl");}});

var round = Module.findExportByName("ucrtbased.dll", "round")
Interceptor.attach(round, {onLeave: function (args) {send("round");}});

var roundf = Module.findExportByName("ucrtbased.dll", "roundf")
Interceptor.attach(roundf, {onLeave: function (args) {send("roundf");}});

var roundl = Module.findExportByName("ucrtbased.dll", "roundl")
Interceptor.attach(roundl, {onLeave: function (args) {send("roundl");}});

var scalbln = Module.findExportByName("ucrtbased.dll", "scalbln")
Interceptor.attach(scalbln, {onLeave: function (args) {send("scalbln");}});

var scalblnf = Module.findExportByName("ucrtbased.dll", "scalblnf")
Interceptor.attach(scalblnf, {onLeave: function (args) {send("scalblnf");}});

var scalblnl = Module.findExportByName("ucrtbased.dll", "scalblnl")
Interceptor.attach(scalblnl, {onLeave: function (args) {send("scalblnl");}});

var scalbn = Module.findExportByName("ucrtbased.dll", "scalbn")
Interceptor.attach(scalbn, {onLeave: function (args) {send("scalbn");}});

var scalbnf = Module.findExportByName("ucrtbased.dll", "scalbnf")
Interceptor.attach(scalbnf, {onLeave: function (args) {send("scalbnf");}});

var scalbnl = Module.findExportByName("ucrtbased.dll", "scalbnl")
Interceptor.attach(scalbnl, {onLeave: function (args) {send("scalbnl");}});

var set_terminate = Module.findExportByName("ucrtbased.dll", "set_terminate")
Interceptor.attach(set_terminate, {onLeave: function (args) {send("set_terminate");}});

var set_unexpected = Module.findExportByName("ucrtbased.dll", "set_unexpected")
Interceptor.attach(set_unexpected, {onLeave: function (args) {send("set_unexpected");}});

var setbuf = Module.findExportByName("ucrtbased.dll", "setbuf")
Interceptor.attach(setbuf, {onLeave: function (args) {send("setbuf");}});

var setjmp = Module.findExportByName("ucrtbased.dll", "setjmp")
Interceptor.attach(setjmp, {onLeave: function (args) {send("setjmp");}});

var setlocale = Module.findExportByName("ucrtbased.dll", "setlocale")
Interceptor.attach(setlocale, {onLeave: function (args) {send("setlocale");}});

var setvbuf = Module.findExportByName("ucrtbased.dll", "setvbuf")
Interceptor.attach(setvbuf, {onLeave: function (args) {send("setvbuf");}});

var signal = Module.findExportByName("ucrtbased.dll", "signal")
Interceptor.attach(signal, {onLeave: function (args) {send("signal");}});

var sin = Module.findExportByName("ucrtbased.dll", "sin")
Interceptor.attach(sin, {onLeave: function (args) {send("sin");}});

var sinf = Module.findExportByName("ucrtbased.dll", "sinf")
Interceptor.attach(sinf, {onLeave: function (args) {send("sinf");}});

var sinh = Module.findExportByName("ucrtbased.dll", "sinh")
Interceptor.attach(sinh, {onLeave: function (args) {send("sinh");}});

var sinhf = Module.findExportByName("ucrtbased.dll", "sinhf")
Interceptor.attach(sinhf, {onLeave: function (args) {send("sinhf");}});

var sqrt = Module.findExportByName("ucrtbased.dll", "sqrt")
Interceptor.attach(sqrt, {onLeave: function (args) {send("sqrt");}});

var sqrtf = Module.findExportByName("ucrtbased.dll", "sqrtf")
Interceptor.attach(sqrtf, {onLeave: function (args) {send("sqrtf");}});

var srand = Module.findExportByName("ucrtbased.dll", "srand")
Interceptor.attach(srand, {onLeave: function (args) {send("srand");}});

var strcat = Module.findExportByName("ucrtbased.dll", "strcat")
Interceptor.attach(strcat, {onLeave: function (args) {send("strcat");}});

var strcat_s = Module.findExportByName("ucrtbased.dll", "strcat_s")
Interceptor.attach(strcat_s, {onLeave: function (args) {send("strcat_s");}});

var strchr = Module.findExportByName("ucrtbased.dll", "strchr")
Interceptor.attach(strchr, {onLeave: function (args) {send("strchr");}});

var strcmp = Module.findExportByName("ucrtbased.dll", "strcmp")
Interceptor.attach(strcmp, {onLeave: function (args) {send("strcmp");}});

var strcoll = Module.findExportByName("ucrtbased.dll", "strcoll")
Interceptor.attach(strcoll, {onLeave: function (args) {send("strcoll");}});

var strcpy = Module.findExportByName("ucrtbased.dll", "strcpy")
Interceptor.attach(strcpy, {onLeave: function (args) {send("strcpy");}});

var strcpy_s = Module.findExportByName("ucrtbased.dll", "strcpy_s")
Interceptor.attach(strcpy_s, {onLeave: function (args) {send("strcpy_s");}});

var strcspn = Module.findExportByName("ucrtbased.dll", "strcspn")
Interceptor.attach(strcspn, {onLeave: function (args) {send("strcspn");}});

var strerror = Module.findExportByName("ucrtbased.dll", "strerror")
Interceptor.attach(strerror, {onLeave: function (args) {send("strerror");}});

var strerror_s = Module.findExportByName("ucrtbased.dll", "strerror_s")
Interceptor.attach(strerror_s, {onLeave: function (args) {send("strerror_s");}});

var strftime = Module.findExportByName("ucrtbased.dll", "strftime")
Interceptor.attach(strftime, {onLeave: function (args) {send("strftime");}});

var strlen = Module.findExportByName("ucrtbased.dll", "strlen")
Interceptor.attach(strlen, {onLeave: function (args) {send("strlen");}});

var strncat = Module.findExportByName("ucrtbased.dll", "strncat")
Interceptor.attach(strncat, {onLeave: function (args) {send("strncat");}});

var strncat_s = Module.findExportByName("ucrtbased.dll", "strncat_s")
Interceptor.attach(strncat_s, {onLeave: function (args) {send("strncat_s");}});

var strncmp = Module.findExportByName("ucrtbased.dll", "strncmp")
Interceptor.attach(strncmp, {onLeave: function (args) {send("strncmp");}});

var strncpy = Module.findExportByName("ucrtbased.dll", "strncpy")
Interceptor.attach(strncpy, {onLeave: function (args) {send("strncpy");}});

var strncpy_s = Module.findExportByName("ucrtbased.dll", "strncpy_s")
Interceptor.attach(strncpy_s, {onLeave: function (args) {send("strncpy_s");}});

var strnlen = Module.findExportByName("ucrtbased.dll", "strnlen")
Interceptor.attach(strnlen, {onLeave: function (args) {send("strnlen");}});

var strpbrk = Module.findExportByName("ucrtbased.dll", "strpbrk")
Interceptor.attach(strpbrk, {onLeave: function (args) {send("strpbrk");}});

var strrchr = Module.findExportByName("ucrtbased.dll", "strrchr")
Interceptor.attach(strrchr, {onLeave: function (args) {send("strrchr");}});

var strspn = Module.findExportByName("ucrtbased.dll", "strspn")
Interceptor.attach(strspn, {onLeave: function (args) {send("strspn");}});

var strstr = Module.findExportByName("ucrtbased.dll", "strstr")
Interceptor.attach(strstr, {onLeave: function (args) {send("strstr");}});

var strtod = Module.findExportByName("ucrtbased.dll", "strtod")
Interceptor.attach(strtod, {onLeave: function (args) {send("strtod");}});

var strtof = Module.findExportByName("ucrtbased.dll", "strtof")
Interceptor.attach(strtof, {onLeave: function (args) {send("strtof");}});

var strtoimax = Module.findExportByName("ucrtbased.dll", "strtoimax")
Interceptor.attach(strtoimax, {onLeave: function (args) {send("strtoimax");}});

var strtok = Module.findExportByName("ucrtbased.dll", "strtok")
Interceptor.attach(strtok, {onLeave: function (args) {send("strtok");}});

var strtok_s = Module.findExportByName("ucrtbased.dll", "strtok_s")
Interceptor.attach(strtok_s, {onLeave: function (args) {send("strtok_s");}});

var strtol = Module.findExportByName("ucrtbased.dll", "strtol")
Interceptor.attach(strtol, {onLeave: function (args) {send("strtol");}});

var strtold = Module.findExportByName("ucrtbased.dll", "strtold")
Interceptor.attach(strtold, {onLeave: function (args) {send("strtold");}});

var strtoll = Module.findExportByName("ucrtbased.dll", "strtoll")
Interceptor.attach(strtoll, {onLeave: function (args) {send("strtoll");}});

var strtoul = Module.findExportByName("ucrtbased.dll", "strtoul")
Interceptor.attach(strtoul, {onLeave: function (args) {send("strtoul");}});

var strtoull = Module.findExportByName("ucrtbased.dll", "strtoull")
Interceptor.attach(strtoull, {onLeave: function (args) {send("strtoull");}});

var strtoumax = Module.findExportByName("ucrtbased.dll", "strtoumax")
Interceptor.attach(strtoumax, {onLeave: function (args) {send("strtoumax");}});

var strxfrm = Module.findExportByName("ucrtbased.dll", "strxfrm")
Interceptor.attach(strxfrm, {onLeave: function (args) {send("strxfrm");}});

var system = Module.findExportByName("ucrtbased.dll", "system")
Interceptor.attach(system, {onLeave: function (args) {send("system");}});

var tan = Module.findExportByName("ucrtbased.dll", "tan")
Interceptor.attach(tan, {onLeave: function (args) {send("tan");}});

var tanf = Module.findExportByName("ucrtbased.dll", "tanf")
Interceptor.attach(tanf, {onLeave: function (args) {send("tanf");}});

var tanh = Module.findExportByName("ucrtbased.dll", "tanh")
Interceptor.attach(tanh, {onLeave: function (args) {send("tanh");}});

var tanhf = Module.findExportByName("ucrtbased.dll", "tanhf")
Interceptor.attach(tanhf, {onLeave: function (args) {send("tanhf");}});

var terminate = Module.findExportByName("ucrtbased.dll", "terminate")
Interceptor.attach(terminate, {onLeave: function (args) {send("terminate");}});

var tgamma = Module.findExportByName("ucrtbased.dll", "tgamma")
Interceptor.attach(tgamma, {onLeave: function (args) {send("tgamma");}});

var tgammaf = Module.findExportByName("ucrtbased.dll", "tgammaf")
Interceptor.attach(tgammaf, {onLeave: function (args) {send("tgammaf");}});

var tgammal = Module.findExportByName("ucrtbased.dll", "tgammal")
Interceptor.attach(tgammal, {onLeave: function (args) {send("tgammal");}});

var tmpfile = Module.findExportByName("ucrtbased.dll", "tmpfile")
Interceptor.attach(tmpfile, {onLeave: function (args) {send("tmpfile");}});

var tmpfile_s = Module.findExportByName("ucrtbased.dll", "tmpfile_s")
Interceptor.attach(tmpfile_s, {onLeave: function (args) {send("tmpfile_s");}});

var tmpnam = Module.findExportByName("ucrtbased.dll", "tmpnam")
Interceptor.attach(tmpnam, {onLeave: function (args) {send("tmpnam");}});

var tmpnam_s = Module.findExportByName("ucrtbased.dll", "tmpnam_s")
Interceptor.attach(tmpnam_s, {onLeave: function (args) {send("tmpnam_s");}});

var tolower = Module.findExportByName("ucrtbased.dll", "tolower")
Interceptor.attach(tolower, {onLeave: function (args) {send("tolower");}});

var toupper = Module.findExportByName("ucrtbased.dll", "toupper")
Interceptor.attach(toupper, {onLeave: function (args) {send("toupper");}});

var towctrans = Module.findExportByName("ucrtbased.dll", "towctrans")
Interceptor.attach(towctrans, {onLeave: function (args) {send("towctrans");}});

var towlower = Module.findExportByName("ucrtbased.dll", "towlower")
Interceptor.attach(towlower, {onLeave: function (args) {send("towlower");}});

var towupper = Module.findExportByName("ucrtbased.dll", "towupper")
Interceptor.attach(towupper, {onLeave: function (args) {send("towupper");}});

var trunc = Module.findExportByName("ucrtbased.dll", "trunc")
Interceptor.attach(trunc, {onLeave: function (args) {send("trunc");}});

var truncf = Module.findExportByName("ucrtbased.dll", "truncf")
Interceptor.attach(truncf, {onLeave: function (args) {send("truncf");}});

var truncl = Module.findExportByName("ucrtbased.dll", "truncl")
Interceptor.attach(truncl, {onLeave: function (args) {send("truncl");}});

var unexpected = Module.findExportByName("ucrtbased.dll", "unexpected")
Interceptor.attach(unexpected, {onLeave: function (args) {send("unexpected");}});

var ungetc = Module.findExportByName("ucrtbased.dll", "ungetc")
Interceptor.attach(ungetc, {onLeave: function (args) {send("ungetc");}});

var ungetwc = Module.findExportByName("ucrtbased.dll", "ungetwc")
Interceptor.attach(ungetwc, {onLeave: function (args) {send("ungetwc");}});

var wcrtomb = Module.findExportByName("ucrtbased.dll", "wcrtomb")
Interceptor.attach(wcrtomb, {onLeave: function (args) {send("wcrtomb");}});

var wcrtomb_s = Module.findExportByName("ucrtbased.dll", "wcrtomb_s")
Interceptor.attach(wcrtomb_s, {onLeave: function (args) {send("wcrtomb_s");}});

var wcscat = Module.findExportByName("ucrtbased.dll", "wcscat")
Interceptor.attach(wcscat, {onLeave: function (args) {send("wcscat");}});

var wcscat_s = Module.findExportByName("ucrtbased.dll", "wcscat_s")
Interceptor.attach(wcscat_s, {onLeave: function (args) {send("wcscat_s");}});

var wcschr = Module.findExportByName("ucrtbased.dll", "wcschr")
Interceptor.attach(wcschr, {onLeave: function (args) {send("wcschr");}});

var wcscmp = Module.findExportByName("ucrtbased.dll", "wcscmp")
Interceptor.attach(wcscmp, {onLeave: function (args) {send("wcscmp");}});

var wcscoll = Module.findExportByName("ucrtbased.dll", "wcscoll")
Interceptor.attach(wcscoll, {onLeave: function (args) {send("wcscoll");}});

var wcscpy = Module.findExportByName("ucrtbased.dll", "wcscpy")
Interceptor.attach(wcscpy, {onLeave: function (args) {send("wcscpy");}});

var wcscpy_s = Module.findExportByName("ucrtbased.dll", "wcscpy_s")
Interceptor.attach(wcscpy_s, {onLeave: function (args) {send("wcscpy_s");}});

var wcscspn = Module.findExportByName("ucrtbased.dll", "wcscspn")
Interceptor.attach(wcscspn, {onLeave: function (args) {send("wcscspn");}});

var wcsftime = Module.findExportByName("ucrtbased.dll", "wcsftime")
Interceptor.attach(wcsftime, {onLeave: function (args) {send("wcsftime");}});

var wcslen = Module.findExportByName("ucrtbased.dll", "wcslen")
Interceptor.attach(wcslen, {onLeave: function (args) {send("wcslen");}});

var wcsncat = Module.findExportByName("ucrtbased.dll", "wcsncat")
Interceptor.attach(wcsncat, {onLeave: function (args) {send("wcsncat");}});

var wcsncat_s = Module.findExportByName("ucrtbased.dll", "wcsncat_s")
Interceptor.attach(wcsncat_s, {onLeave: function (args) {send("wcsncat_s");}});

var wcsncmp = Module.findExportByName("ucrtbased.dll", "wcsncmp")
Interceptor.attach(wcsncmp, {onLeave: function (args) {send("wcsncmp");}});

var wcsncpy = Module.findExportByName("ucrtbased.dll", "wcsncpy")
Interceptor.attach(wcsncpy, {onLeave: function (args) {send("wcsncpy");}});

var wcsncpy_s = Module.findExportByName("ucrtbased.dll", "wcsncpy_s")
Interceptor.attach(wcsncpy_s, {onLeave: function (args) {send("wcsncpy_s");}});

var wcsnlen = Module.findExportByName("ucrtbased.dll", "wcsnlen")
Interceptor.attach(wcsnlen, {onLeave: function (args) {send("wcsnlen");}});

var wcspbrk = Module.findExportByName("ucrtbased.dll", "wcspbrk")
Interceptor.attach(wcspbrk, {onLeave: function (args) {send("wcspbrk");}});

var wcsrchr = Module.findExportByName("ucrtbased.dll", "wcsrchr")
Interceptor.attach(wcsrchr, {onLeave: function (args) {send("wcsrchr");}});

var wcsrtombs = Module.findExportByName("ucrtbased.dll", "wcsrtombs")
Interceptor.attach(wcsrtombs, {onLeave: function (args) {send("wcsrtombs");}});

var wcsrtombs_s = Module.findExportByName("ucrtbased.dll", "wcsrtombs_s")
Interceptor.attach(wcsrtombs_s, {onLeave: function (args) {send("wcsrtombs_s");}});

var wcsspn = Module.findExportByName("ucrtbased.dll", "wcsspn")
Interceptor.attach(wcsspn, {onLeave: function (args) {send("wcsspn");}});

var wcsstr = Module.findExportByName("ucrtbased.dll", "wcsstr")
Interceptor.attach(wcsstr, {onLeave: function (args) {send("wcsstr");}});

var wcstod = Module.findExportByName("ucrtbased.dll", "wcstod")
Interceptor.attach(wcstod, {onLeave: function (args) {send("wcstod");}});

var wcstof = Module.findExportByName("ucrtbased.dll", "wcstof")
Interceptor.attach(wcstof, {onLeave: function (args) {send("wcstof");}});

var wcstoimax = Module.findExportByName("ucrtbased.dll", "wcstoimax")
Interceptor.attach(wcstoimax, {onLeave: function (args) {send("wcstoimax");}});

var wcstok = Module.findExportByName("ucrtbased.dll", "wcstok")
Interceptor.attach(wcstok, {onLeave: function (args) {send("wcstok");}});

var wcstok_s = Module.findExportByName("ucrtbased.dll", "wcstok_s")
Interceptor.attach(wcstok_s, {onLeave: function (args) {send("wcstok_s");}});

var wcstol = Module.findExportByName("ucrtbased.dll", "wcstol")
Interceptor.attach(wcstol, {onLeave: function (args) {send("wcstol");}});

var wcstold = Module.findExportByName("ucrtbased.dll", "wcstold")
Interceptor.attach(wcstold, {onLeave: function (args) {send("wcstold");}});

var wcstoll = Module.findExportByName("ucrtbased.dll", "wcstoll")
Interceptor.attach(wcstoll, {onLeave: function (args) {send("wcstoll");}});

var wcstombs = Module.findExportByName("ucrtbased.dll", "wcstombs")
Interceptor.attach(wcstombs, {onLeave: function (args) {send("wcstombs");}});

var wcstombs_s = Module.findExportByName("ucrtbased.dll", "wcstombs_s")
Interceptor.attach(wcstombs_s, {onLeave: function (args) {send("wcstombs_s");}});

var wcstoul = Module.findExportByName("ucrtbased.dll", "wcstoul")
Interceptor.attach(wcstoul, {onLeave: function (args) {send("wcstoul");}});

var wcstoull = Module.findExportByName("ucrtbased.dll", "wcstoull")
Interceptor.attach(wcstoull, {onLeave: function (args) {send("wcstoull");}});

var wcstoumax = Module.findExportByName("ucrtbased.dll", "wcstoumax")
Interceptor.attach(wcstoumax, {onLeave: function (args) {send("wcstoumax");}});

var wcsxfrm = Module.findExportByName("ucrtbased.dll", "wcsxfrm")
Interceptor.attach(wcsxfrm, {onLeave: function (args) {send("wcsxfrm");}});

var wctob = Module.findExportByName("ucrtbased.dll", "wctob")
Interceptor.attach(wctob, {onLeave: function (args) {send("wctob");}});

var wctomb = Module.findExportByName("ucrtbased.dll", "wctomb")
Interceptor.attach(wctomb, {onLeave: function (args) {send("wctomb");}});

var wctomb_s = Module.findExportByName("ucrtbased.dll", "wctomb_s")
Interceptor.attach(wctomb_s, {onLeave: function (args) {send("wctomb_s");}});

var wctrans = Module.findExportByName("ucrtbased.dll", "wctrans")
Interceptor.attach(wctrans, {onLeave: function (args) {send("wctrans");}});

var wctype = Module.findExportByName("ucrtbased.dll", "wctype")
Interceptor.attach(wctype, {onLeave: function (args) {send("wctype");}});

var wmemcpy_s = Module.findExportByName("ucrtbased.dll", "wmemcpy_s")
Interceptor.attach(wmemcpy_s, {onLeave: function (args) {send("wmemcpy_s");}});

var wmemmove_s = Module.findExportByName("ucrtbased.dll", "wmemmove_s")
Interceptor.attach(wmemmove_s, {onLeave: function (args) {send("wmemmove_s");}});

