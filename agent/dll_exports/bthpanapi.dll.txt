var BluetoothCloseNetworkHandle = Module.findExportByName("bthpanapi.dll", "BluetoothCloseNetworkHandle")
Interceptor.attach(BluetoothCloseNetworkHandle, {onLeave: function (args) {send("BluetoothCloseNetworkHandle");}});

var BluetoothConnectToNetwork = Module.findExportByName("bthpanapi.dll", "BluetoothConnectToNetwork")
Interceptor.attach(BluetoothConnectToNetwork, {onLeave: function (args) {send("BluetoothConnectToNetwork");}});

var BluetoothCreateNetworkHandle = Module.findExportByName("bthpanapi.dll", "BluetoothCreateNetworkHandle")
Interceptor.attach(BluetoothCreateNetworkHandle, {onLeave: function (args) {send("BluetoothCreateNetworkHandle");}});

var BluetoothDisconnectFromNetwork = Module.findExportByName("bthpanapi.dll", "BluetoothDisconnectFromNetwork")
Interceptor.attach(BluetoothDisconnectFromNetwork, {onLeave: function (args) {send("BluetoothDisconnectFromNetwork");}});

var BluetoothDuplicateNetworkHandle = Module.findExportByName("bthpanapi.dll", "BluetoothDuplicateNetworkHandle")
Interceptor.attach(BluetoothDuplicateNetworkHandle, {onLeave: function (args) {send("BluetoothDuplicateNetworkHandle");}});

var BluetoothFindFirstNetwork = Module.findExportByName("bthpanapi.dll", "BluetoothFindFirstNetwork")
Interceptor.attach(BluetoothFindFirstNetwork, {onLeave: function (args) {send("BluetoothFindFirstNetwork");}});

var BluetoothFindNetworkClose = Module.findExportByName("bthpanapi.dll", "BluetoothFindNetworkClose")
Interceptor.attach(BluetoothFindNetworkClose, {onLeave: function (args) {send("BluetoothFindNetworkClose");}});

var BluetoothFindNextNetwork = Module.findExportByName("bthpanapi.dll", "BluetoothFindNextNetwork")
Interceptor.attach(BluetoothFindNextNetwork, {onLeave: function (args) {send("BluetoothFindNextNetwork");}});

var BluetoothGetIncompleteConnectedNetworkHandle = Module.findExportByName("bthpanapi.dll", "BluetoothGetIncompleteConnectedNetworkHandle")
Interceptor.attach(BluetoothGetIncompleteConnectedNetworkHandle, {onLeave: function (args) {send("BluetoothGetIncompleteConnectedNetworkHandle");}});

var BluetoothGetNetworkAddress = Module.findExportByName("bthpanapi.dll", "BluetoothGetNetworkAddress")
Interceptor.attach(BluetoothGetNetworkAddress, {onLeave: function (args) {send("BluetoothGetNetworkAddress");}});

var BluetoothGetNetworkAvailableRoles = Module.findExportByName("bthpanapi.dll", "BluetoothGetNetworkAvailableRoles")
Interceptor.attach(BluetoothGetNetworkAvailableRoles, {onLeave: function (args) {send("BluetoothGetNetworkAvailableRoles");}});

var BluetoothGetNetworkContainerId = Module.findExportByName("bthpanapi.dll", "BluetoothGetNetworkContainerId")
Interceptor.attach(BluetoothGetNetworkContainerId, {onLeave: function (args) {send("BluetoothGetNetworkContainerId");}});

var BluetoothGetNetworkInterfaceId = Module.findExportByName("bthpanapi.dll", "BluetoothGetNetworkInterfaceId")
Interceptor.attach(BluetoothGetNetworkInterfaceId, {onLeave: function (args) {send("BluetoothGetNetworkInterfaceId");}});

var BluetoothGetNetworkName = Module.findExportByName("bthpanapi.dll", "BluetoothGetNetworkName")
Interceptor.attach(BluetoothGetNetworkName, {onLeave: function (args) {send("BluetoothGetNetworkName");}});

var BluetoothGetNetworkStatus = Module.findExportByName("bthpanapi.dll", "BluetoothGetNetworkStatus")
Interceptor.attach(BluetoothGetNetworkStatus, {onLeave: function (args) {send("BluetoothGetNetworkStatus");}});

var BluetoothRegisterNetworkNotifications = Module.findExportByName("bthpanapi.dll", "BluetoothRegisterNetworkNotifications")
Interceptor.attach(BluetoothRegisterNetworkNotifications, {onLeave: function (args) {send("BluetoothRegisterNetworkNotifications");}});

var BluetoothUnregisterNetworkNotifications = Module.findExportByName("bthpanapi.dll", "BluetoothUnregisterNetworkNotifications")
Interceptor.attach(BluetoothUnregisterNetworkNotifications, {onLeave: function (args) {send("BluetoothUnregisterNetworkNotifications");}});

