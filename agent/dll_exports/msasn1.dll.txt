var ASN1BERDecBitString = Module.findExportByName("msasn1.dll", "ASN1BERDecBitString")
Interceptor.attach(ASN1BERDecBitString, {onLeave: function (args) {send("ASN1BERDecBitString");}});

var ASN1BERDecBitString2 = Module.findExportByName("msasn1.dll", "ASN1BERDecBitString2")
Interceptor.attach(ASN1BERDecBitString2, {onLeave: function (args) {send("ASN1BERDecBitString2");}});

var ASN1BERDecBool = Module.findExportByName("msasn1.dll", "ASN1BERDecBool")
Interceptor.attach(ASN1BERDecBool, {onLeave: function (args) {send("ASN1BERDecBool");}});

var ASN1BERDecChar16String = Module.findExportByName("msasn1.dll", "ASN1BERDecChar16String")
Interceptor.attach(ASN1BERDecChar16String, {onLeave: function (args) {send("ASN1BERDecChar16String");}});

var ASN1BERDecChar32String = Module.findExportByName("msasn1.dll", "ASN1BERDecChar32String")
Interceptor.attach(ASN1BERDecChar32String, {onLeave: function (args) {send("ASN1BERDecChar32String");}});

var ASN1BERDecCharString = Module.findExportByName("msasn1.dll", "ASN1BERDecCharString")
Interceptor.attach(ASN1BERDecCharString, {onLeave: function (args) {send("ASN1BERDecCharString");}});

var ASN1BERDecCheck = Module.findExportByName("msasn1.dll", "ASN1BERDecCheck")
Interceptor.attach(ASN1BERDecCheck, {onLeave: function (args) {send("ASN1BERDecCheck");}});

var ASN1BERDecDouble = Module.findExportByName("msasn1.dll", "ASN1BERDecDouble")
Interceptor.attach(ASN1BERDecDouble, {onLeave: function (args) {send("ASN1BERDecDouble");}});

var ASN1BERDecEndOfContents = Module.findExportByName("msasn1.dll", "ASN1BERDecEndOfContents")
Interceptor.attach(ASN1BERDecEndOfContents, {onLeave: function (args) {send("ASN1BERDecEndOfContents");}});

var ASN1BERDecEoid = Module.findExportByName("msasn1.dll", "ASN1BERDecEoid")
Interceptor.attach(ASN1BERDecEoid, {onLeave: function (args) {send("ASN1BERDecEoid");}});

var ASN1BERDecExplicitTag = Module.findExportByName("msasn1.dll", "ASN1BERDecExplicitTag")
Interceptor.attach(ASN1BERDecExplicitTag, {onLeave: function (args) {send("ASN1BERDecExplicitTag");}});

var ASN1BERDecFlush = Module.findExportByName("msasn1.dll", "ASN1BERDecFlush")
Interceptor.attach(ASN1BERDecFlush, {onLeave: function (args) {send("ASN1BERDecFlush");}});

var ASN1BERDecGeneralizedTime = Module.findExportByName("msasn1.dll", "ASN1BERDecGeneralizedTime")
Interceptor.attach(ASN1BERDecGeneralizedTime, {onLeave: function (args) {send("ASN1BERDecGeneralizedTime");}});

var ASN1BERDecLength = Module.findExportByName("msasn1.dll", "ASN1BERDecLength")
Interceptor.attach(ASN1BERDecLength, {onLeave: function (args) {send("ASN1BERDecLength");}});

var ASN1BERDecMultibyteString = Module.findExportByName("msasn1.dll", "ASN1BERDecMultibyteString")
Interceptor.attach(ASN1BERDecMultibyteString, {onLeave: function (args) {send("ASN1BERDecMultibyteString");}});

var ASN1BERDecNotEndOfContents = Module.findExportByName("msasn1.dll", "ASN1BERDecNotEndOfContents")
Interceptor.attach(ASN1BERDecNotEndOfContents, {onLeave: function (args) {send("ASN1BERDecNotEndOfContents");}});

var ASN1BERDecNull = Module.findExportByName("msasn1.dll", "ASN1BERDecNull")
Interceptor.attach(ASN1BERDecNull, {onLeave: function (args) {send("ASN1BERDecNull");}});

var ASN1BERDecObjectIdentifier = Module.findExportByName("msasn1.dll", "ASN1BERDecObjectIdentifier")
Interceptor.attach(ASN1BERDecObjectIdentifier, {onLeave: function (args) {send("ASN1BERDecObjectIdentifier");}});

var ASN1BERDecObjectIdentifier2 = Module.findExportByName("msasn1.dll", "ASN1BERDecObjectIdentifier2")
Interceptor.attach(ASN1BERDecObjectIdentifier2, {onLeave: function (args) {send("ASN1BERDecObjectIdentifier2");}});

var ASN1BERDecOctetString = Module.findExportByName("msasn1.dll", "ASN1BERDecOctetString")
Interceptor.attach(ASN1BERDecOctetString, {onLeave: function (args) {send("ASN1BERDecOctetString");}});

var ASN1BERDecOctetString2 = Module.findExportByName("msasn1.dll", "ASN1BERDecOctetString2")
Interceptor.attach(ASN1BERDecOctetString2, {onLeave: function (args) {send("ASN1BERDecOctetString2");}});

var ASN1BERDecOpenType = Module.findExportByName("msasn1.dll", "ASN1BERDecOpenType")
Interceptor.attach(ASN1BERDecOpenType, {onLeave: function (args) {send("ASN1BERDecOpenType");}});

var ASN1BERDecOpenType2 = Module.findExportByName("msasn1.dll", "ASN1BERDecOpenType2")
Interceptor.attach(ASN1BERDecOpenType2, {onLeave: function (args) {send("ASN1BERDecOpenType2");}});

var ASN1BERDecPeekTag = Module.findExportByName("msasn1.dll", "ASN1BERDecPeekTag")
Interceptor.attach(ASN1BERDecPeekTag, {onLeave: function (args) {send("ASN1BERDecPeekTag");}});

var ASN1BERDecS16Val = Module.findExportByName("msasn1.dll", "ASN1BERDecS16Val")
Interceptor.attach(ASN1BERDecS16Val, {onLeave: function (args) {send("ASN1BERDecS16Val");}});

var ASN1BERDecS32Val = Module.findExportByName("msasn1.dll", "ASN1BERDecS32Val")
Interceptor.attach(ASN1BERDecS32Val, {onLeave: function (args) {send("ASN1BERDecS32Val");}});

var ASN1BERDecS8Val = Module.findExportByName("msasn1.dll", "ASN1BERDecS8Val")
Interceptor.attach(ASN1BERDecS8Val, {onLeave: function (args) {send("ASN1BERDecS8Val");}});

var ASN1BERDecSXVal = Module.findExportByName("msasn1.dll", "ASN1BERDecSXVal")
Interceptor.attach(ASN1BERDecSXVal, {onLeave: function (args) {send("ASN1BERDecSXVal");}});

var ASN1BERDecSkip = Module.findExportByName("msasn1.dll", "ASN1BERDecSkip")
Interceptor.attach(ASN1BERDecSkip, {onLeave: function (args) {send("ASN1BERDecSkip");}});

var ASN1BERDecTag = Module.findExportByName("msasn1.dll", "ASN1BERDecTag")
Interceptor.attach(ASN1BERDecTag, {onLeave: function (args) {send("ASN1BERDecTag");}});

var ASN1BERDecU16Val = Module.findExportByName("msasn1.dll", "ASN1BERDecU16Val")
Interceptor.attach(ASN1BERDecU16Val, {onLeave: function (args) {send("ASN1BERDecU16Val");}});

var ASN1BERDecU32Val = Module.findExportByName("msasn1.dll", "ASN1BERDecU32Val")
Interceptor.attach(ASN1BERDecU32Val, {onLeave: function (args) {send("ASN1BERDecU32Val");}});

var ASN1BERDecU8Val = Module.findExportByName("msasn1.dll", "ASN1BERDecU8Val")
Interceptor.attach(ASN1BERDecU8Val, {onLeave: function (args) {send("ASN1BERDecU8Val");}});

var ASN1BERDecUTCTime = Module.findExportByName("msasn1.dll", "ASN1BERDecUTCTime")
Interceptor.attach(ASN1BERDecUTCTime, {onLeave: function (args) {send("ASN1BERDecUTCTime");}});

var ASN1BERDecUTF8String = Module.findExportByName("msasn1.dll", "ASN1BERDecUTF8String")
Interceptor.attach(ASN1BERDecUTF8String, {onLeave: function (args) {send("ASN1BERDecUTF8String");}});

var ASN1BERDecZeroChar16String = Module.findExportByName("msasn1.dll", "ASN1BERDecZeroChar16String")
Interceptor.attach(ASN1BERDecZeroChar16String, {onLeave: function (args) {send("ASN1BERDecZeroChar16String");}});

var ASN1BERDecZeroChar32String = Module.findExportByName("msasn1.dll", "ASN1BERDecZeroChar32String")
Interceptor.attach(ASN1BERDecZeroChar32String, {onLeave: function (args) {send("ASN1BERDecZeroChar32String");}});

var ASN1BERDecZeroCharString = Module.findExportByName("msasn1.dll", "ASN1BERDecZeroCharString")
Interceptor.attach(ASN1BERDecZeroCharString, {onLeave: function (args) {send("ASN1BERDecZeroCharString");}});

var ASN1BERDecZeroMultibyteString = Module.findExportByName("msasn1.dll", "ASN1BERDecZeroMultibyteString")
Interceptor.attach(ASN1BERDecZeroMultibyteString, {onLeave: function (args) {send("ASN1BERDecZeroMultibyteString");}});

var ASN1BERDotVal2Eoid = Module.findExportByName("msasn1.dll", "ASN1BERDotVal2Eoid")
Interceptor.attach(ASN1BERDotVal2Eoid, {onLeave: function (args) {send("ASN1BERDotVal2Eoid");}});

var ASN1BEREncBitString = Module.findExportByName("msasn1.dll", "ASN1BEREncBitString")
Interceptor.attach(ASN1BEREncBitString, {onLeave: function (args) {send("ASN1BEREncBitString");}});

var ASN1BEREncBool = Module.findExportByName("msasn1.dll", "ASN1BEREncBool")
Interceptor.attach(ASN1BEREncBool, {onLeave: function (args) {send("ASN1BEREncBool");}});

var ASN1BEREncChar16String = Module.findExportByName("msasn1.dll", "ASN1BEREncChar16String")
Interceptor.attach(ASN1BEREncChar16String, {onLeave: function (args) {send("ASN1BEREncChar16String");}});

var ASN1BEREncChar32String = Module.findExportByName("msasn1.dll", "ASN1BEREncChar32String")
Interceptor.attach(ASN1BEREncChar32String, {onLeave: function (args) {send("ASN1BEREncChar32String");}});

var ASN1BEREncCharString = Module.findExportByName("msasn1.dll", "ASN1BEREncCharString")
Interceptor.attach(ASN1BEREncCharString, {onLeave: function (args) {send("ASN1BEREncCharString");}});

var ASN1BEREncCheck = Module.findExportByName("msasn1.dll", "ASN1BEREncCheck")
Interceptor.attach(ASN1BEREncCheck, {onLeave: function (args) {send("ASN1BEREncCheck");}});

var ASN1BEREncDouble = Module.findExportByName("msasn1.dll", "ASN1BEREncDouble")
Interceptor.attach(ASN1BEREncDouble, {onLeave: function (args) {send("ASN1BEREncDouble");}});

var ASN1BEREncEndOfContents = Module.findExportByName("msasn1.dll", "ASN1BEREncEndOfContents")
Interceptor.attach(ASN1BEREncEndOfContents, {onLeave: function (args) {send("ASN1BEREncEndOfContents");}});

var ASN1BEREncEoid = Module.findExportByName("msasn1.dll", "ASN1BEREncEoid")
Interceptor.attach(ASN1BEREncEoid, {onLeave: function (args) {send("ASN1BEREncEoid");}});

var ASN1BEREncExplicitTag = Module.findExportByName("msasn1.dll", "ASN1BEREncExplicitTag")
Interceptor.attach(ASN1BEREncExplicitTag, {onLeave: function (args) {send("ASN1BEREncExplicitTag");}});

var ASN1BEREncFlush = Module.findExportByName("msasn1.dll", "ASN1BEREncFlush")
Interceptor.attach(ASN1BEREncFlush, {onLeave: function (args) {send("ASN1BEREncFlush");}});

var ASN1BEREncGeneralizedTime = Module.findExportByName("msasn1.dll", "ASN1BEREncGeneralizedTime")
Interceptor.attach(ASN1BEREncGeneralizedTime, {onLeave: function (args) {send("ASN1BEREncGeneralizedTime");}});

var ASN1BEREncLength = Module.findExportByName("msasn1.dll", "ASN1BEREncLength")
Interceptor.attach(ASN1BEREncLength, {onLeave: function (args) {send("ASN1BEREncLength");}});

var ASN1BEREncMultibyteString = Module.findExportByName("msasn1.dll", "ASN1BEREncMultibyteString")
Interceptor.attach(ASN1BEREncMultibyteString, {onLeave: function (args) {send("ASN1BEREncMultibyteString");}});

var ASN1BEREncNull = Module.findExportByName("msasn1.dll", "ASN1BEREncNull")
Interceptor.attach(ASN1BEREncNull, {onLeave: function (args) {send("ASN1BEREncNull");}});

var ASN1BEREncObjectIdentifier = Module.findExportByName("msasn1.dll", "ASN1BEREncObjectIdentifier")
Interceptor.attach(ASN1BEREncObjectIdentifier, {onLeave: function (args) {send("ASN1BEREncObjectIdentifier");}});

var ASN1BEREncObjectIdentifier2 = Module.findExportByName("msasn1.dll", "ASN1BEREncObjectIdentifier2")
Interceptor.attach(ASN1BEREncObjectIdentifier2, {onLeave: function (args) {send("ASN1BEREncObjectIdentifier2");}});

var ASN1BEREncOctetString = Module.findExportByName("msasn1.dll", "ASN1BEREncOctetString")
Interceptor.attach(ASN1BEREncOctetString, {onLeave: function (args) {send("ASN1BEREncOctetString");}});

var ASN1BEREncOpenType = Module.findExportByName("msasn1.dll", "ASN1BEREncOpenType")
Interceptor.attach(ASN1BEREncOpenType, {onLeave: function (args) {send("ASN1BEREncOpenType");}});

var ASN1BEREncRemoveZeroBits = Module.findExportByName("msasn1.dll", "ASN1BEREncRemoveZeroBits")
Interceptor.attach(ASN1BEREncRemoveZeroBits, {onLeave: function (args) {send("ASN1BEREncRemoveZeroBits");}});

var ASN1BEREncRemoveZeroBits2 = Module.findExportByName("msasn1.dll", "ASN1BEREncRemoveZeroBits2")
Interceptor.attach(ASN1BEREncRemoveZeroBits2, {onLeave: function (args) {send("ASN1BEREncRemoveZeroBits2");}});

var ASN1BEREncS32 = Module.findExportByName("msasn1.dll", "ASN1BEREncS32")
Interceptor.attach(ASN1BEREncS32, {onLeave: function (args) {send("ASN1BEREncS32");}});

var ASN1BEREncSX = Module.findExportByName("msasn1.dll", "ASN1BEREncSX")
Interceptor.attach(ASN1BEREncSX, {onLeave: function (args) {send("ASN1BEREncSX");}});

var ASN1BEREncTag = Module.findExportByName("msasn1.dll", "ASN1BEREncTag")
Interceptor.attach(ASN1BEREncTag, {onLeave: function (args) {send("ASN1BEREncTag");}});

var ASN1BEREncU32 = Module.findExportByName("msasn1.dll", "ASN1BEREncU32")
Interceptor.attach(ASN1BEREncU32, {onLeave: function (args) {send("ASN1BEREncU32");}});

var ASN1BEREncUTCTime = Module.findExportByName("msasn1.dll", "ASN1BEREncUTCTime")
Interceptor.attach(ASN1BEREncUTCTime, {onLeave: function (args) {send("ASN1BEREncUTCTime");}});

var ASN1BEREncUTF8String = Module.findExportByName("msasn1.dll", "ASN1BEREncUTF8String")
Interceptor.attach(ASN1BEREncUTF8String, {onLeave: function (args) {send("ASN1BEREncUTF8String");}});

var ASN1BEREncZeroMultibyteString = Module.findExportByName("msasn1.dll", "ASN1BEREncZeroMultibyteString")
Interceptor.attach(ASN1BEREncZeroMultibyteString, {onLeave: function (args) {send("ASN1BEREncZeroMultibyteString");}});

var ASN1BEREoid2DotVal = Module.findExportByName("msasn1.dll", "ASN1BEREoid2DotVal")
Interceptor.attach(ASN1BEREoid2DotVal, {onLeave: function (args) {send("ASN1BEREoid2DotVal");}});

var ASN1BEREoid_free = Module.findExportByName("msasn1.dll", "ASN1BEREoid_free")
Interceptor.attach(ASN1BEREoid_free, {onLeave: function (args) {send("ASN1BEREoid_free");}});

var ASN1CEREncBeginBlk = Module.findExportByName("msasn1.dll", "ASN1CEREncBeginBlk")
Interceptor.attach(ASN1CEREncBeginBlk, {onLeave: function (args) {send("ASN1CEREncBeginBlk");}});

var ASN1CEREncBitString = Module.findExportByName("msasn1.dll", "ASN1CEREncBitString")
Interceptor.attach(ASN1CEREncBitString, {onLeave: function (args) {send("ASN1CEREncBitString");}});

var ASN1CEREncChar16String = Module.findExportByName("msasn1.dll", "ASN1CEREncChar16String")
Interceptor.attach(ASN1CEREncChar16String, {onLeave: function (args) {send("ASN1CEREncChar16String");}});

var ASN1CEREncChar32String = Module.findExportByName("msasn1.dll", "ASN1CEREncChar32String")
Interceptor.attach(ASN1CEREncChar32String, {onLeave: function (args) {send("ASN1CEREncChar32String");}});

var ASN1CEREncCharString = Module.findExportByName("msasn1.dll", "ASN1CEREncCharString")
Interceptor.attach(ASN1CEREncCharString, {onLeave: function (args) {send("ASN1CEREncCharString");}});

var ASN1CEREncEndBlk = Module.findExportByName("msasn1.dll", "ASN1CEREncEndBlk")
Interceptor.attach(ASN1CEREncEndBlk, {onLeave: function (args) {send("ASN1CEREncEndBlk");}});

var ASN1CEREncFlushBlkElement = Module.findExportByName("msasn1.dll", "ASN1CEREncFlushBlkElement")
Interceptor.attach(ASN1CEREncFlushBlkElement, {onLeave: function (args) {send("ASN1CEREncFlushBlkElement");}});

var ASN1CEREncGeneralizedTime = Module.findExportByName("msasn1.dll", "ASN1CEREncGeneralizedTime")
Interceptor.attach(ASN1CEREncGeneralizedTime, {onLeave: function (args) {send("ASN1CEREncGeneralizedTime");}});

var ASN1CEREncMultibyteString = Module.findExportByName("msasn1.dll", "ASN1CEREncMultibyteString")
Interceptor.attach(ASN1CEREncMultibyteString, {onLeave: function (args) {send("ASN1CEREncMultibyteString");}});

var ASN1CEREncNewBlkElement = Module.findExportByName("msasn1.dll", "ASN1CEREncNewBlkElement")
Interceptor.attach(ASN1CEREncNewBlkElement, {onLeave: function (args) {send("ASN1CEREncNewBlkElement");}});

var ASN1CEREncOctetString = Module.findExportByName("msasn1.dll", "ASN1CEREncOctetString")
Interceptor.attach(ASN1CEREncOctetString, {onLeave: function (args) {send("ASN1CEREncOctetString");}});

var ASN1CEREncUTCTime = Module.findExportByName("msasn1.dll", "ASN1CEREncUTCTime")
Interceptor.attach(ASN1CEREncUTCTime, {onLeave: function (args) {send("ASN1CEREncUTCTime");}});

var ASN1CEREncZeroMultibyteString = Module.findExportByName("msasn1.dll", "ASN1CEREncZeroMultibyteString")
Interceptor.attach(ASN1CEREncZeroMultibyteString, {onLeave: function (args) {send("ASN1CEREncZeroMultibyteString");}});

var ASN1DEREncBeginBlk = Module.findExportByName("msasn1.dll", "ASN1DEREncBeginBlk")
Interceptor.attach(ASN1DEREncBeginBlk, {onLeave: function (args) {send("ASN1DEREncBeginBlk");}});

var ASN1DEREncBitString = Module.findExportByName("msasn1.dll", "ASN1DEREncBitString")
Interceptor.attach(ASN1DEREncBitString, {onLeave: function (args) {send("ASN1DEREncBitString");}});

var ASN1DEREncChar16String = Module.findExportByName("msasn1.dll", "ASN1DEREncChar16String")
Interceptor.attach(ASN1DEREncChar16String, {onLeave: function (args) {send("ASN1DEREncChar16String");}});

var ASN1DEREncChar32String = Module.findExportByName("msasn1.dll", "ASN1DEREncChar32String")
Interceptor.attach(ASN1DEREncChar32String, {onLeave: function (args) {send("ASN1DEREncChar32String");}});

var ASN1DEREncCharString = Module.findExportByName("msasn1.dll", "ASN1DEREncCharString")
Interceptor.attach(ASN1DEREncCharString, {onLeave: function (args) {send("ASN1DEREncCharString");}});

var ASN1DEREncEndBlk = Module.findExportByName("msasn1.dll", "ASN1DEREncEndBlk")
Interceptor.attach(ASN1DEREncEndBlk, {onLeave: function (args) {send("ASN1DEREncEndBlk");}});

var ASN1DEREncFlushBlkElement = Module.findExportByName("msasn1.dll", "ASN1DEREncFlushBlkElement")
Interceptor.attach(ASN1DEREncFlushBlkElement, {onLeave: function (args) {send("ASN1DEREncFlushBlkElement");}});

var ASN1DEREncGeneralizedTime = Module.findExportByName("msasn1.dll", "ASN1DEREncGeneralizedTime")
Interceptor.attach(ASN1DEREncGeneralizedTime, {onLeave: function (args) {send("ASN1DEREncGeneralizedTime");}});

var ASN1DEREncMultibyteString = Module.findExportByName("msasn1.dll", "ASN1DEREncMultibyteString")
Interceptor.attach(ASN1DEREncMultibyteString, {onLeave: function (args) {send("ASN1DEREncMultibyteString");}});

var ASN1DEREncNewBlkElement = Module.findExportByName("msasn1.dll", "ASN1DEREncNewBlkElement")
Interceptor.attach(ASN1DEREncNewBlkElement, {onLeave: function (args) {send("ASN1DEREncNewBlkElement");}});

var ASN1DEREncOctetString = Module.findExportByName("msasn1.dll", "ASN1DEREncOctetString")
Interceptor.attach(ASN1DEREncOctetString, {onLeave: function (args) {send("ASN1DEREncOctetString");}});

var ASN1DEREncUTCTime = Module.findExportByName("msasn1.dll", "ASN1DEREncUTCTime")
Interceptor.attach(ASN1DEREncUTCTime, {onLeave: function (args) {send("ASN1DEREncUTCTime");}});

var ASN1DEREncUTF8String = Module.findExportByName("msasn1.dll", "ASN1DEREncUTF8String")
Interceptor.attach(ASN1DEREncUTF8String, {onLeave: function (args) {send("ASN1DEREncUTF8String");}});

var ASN1DEREncZeroMultibyteString = Module.findExportByName("msasn1.dll", "ASN1DEREncZeroMultibyteString")
Interceptor.attach(ASN1DEREncZeroMultibyteString, {onLeave: function (args) {send("ASN1DEREncZeroMultibyteString");}});

var ASN1DecAlloc = Module.findExportByName("msasn1.dll", "ASN1DecAlloc")
Interceptor.attach(ASN1DecAlloc, {onLeave: function (args) {send("ASN1DecAlloc");}});

var ASN1DecRealloc = Module.findExportByName("msasn1.dll", "ASN1DecRealloc")
Interceptor.attach(ASN1DecRealloc, {onLeave: function (args) {send("ASN1DecRealloc");}});

var ASN1DecSetError = Module.findExportByName("msasn1.dll", "ASN1DecSetError")
Interceptor.attach(ASN1DecSetError, {onLeave: function (args) {send("ASN1DecSetError");}});

var ASN1EncSetError = Module.findExportByName("msasn1.dll", "ASN1EncSetError")
Interceptor.attach(ASN1EncSetError, {onLeave: function (args) {send("ASN1EncSetError");}});

var ASN1Free = Module.findExportByName("msasn1.dll", "ASN1Free")
Interceptor.attach(ASN1Free, {onLeave: function (args) {send("ASN1Free");}});

var ASN1_CloseDecoder = Module.findExportByName("msasn1.dll", "ASN1_CloseDecoder")
Interceptor.attach(ASN1_CloseDecoder, {onLeave: function (args) {send("ASN1_CloseDecoder");}});

var ASN1_CloseEncoder = Module.findExportByName("msasn1.dll", "ASN1_CloseEncoder")
Interceptor.attach(ASN1_CloseEncoder, {onLeave: function (args) {send("ASN1_CloseEncoder");}});

var ASN1_CloseEncoder2 = Module.findExportByName("msasn1.dll", "ASN1_CloseEncoder2")
Interceptor.attach(ASN1_CloseEncoder2, {onLeave: function (args) {send("ASN1_CloseEncoder2");}});

var ASN1_CloseModule = Module.findExportByName("msasn1.dll", "ASN1_CloseModule")
Interceptor.attach(ASN1_CloseModule, {onLeave: function (args) {send("ASN1_CloseModule");}});

var ASN1_CreateDecoder = Module.findExportByName("msasn1.dll", "ASN1_CreateDecoder")
Interceptor.attach(ASN1_CreateDecoder, {onLeave: function (args) {send("ASN1_CreateDecoder");}});

var ASN1_CreateDecoderEx = Module.findExportByName("msasn1.dll", "ASN1_CreateDecoderEx")
Interceptor.attach(ASN1_CreateDecoderEx, {onLeave: function (args) {send("ASN1_CreateDecoderEx");}});

var ASN1_CreateEncoder = Module.findExportByName("msasn1.dll", "ASN1_CreateEncoder")
Interceptor.attach(ASN1_CreateEncoder, {onLeave: function (args) {send("ASN1_CreateEncoder");}});

var ASN1_CreateModule = Module.findExportByName("msasn1.dll", "ASN1_CreateModule")
Interceptor.attach(ASN1_CreateModule, {onLeave: function (args) {send("ASN1_CreateModule");}});

var ASN1_Decode = Module.findExportByName("msasn1.dll", "ASN1_Decode")
Interceptor.attach(ASN1_Decode, {onLeave: function (args) {send("ASN1_Decode");}});

var ASN1_Encode = Module.findExportByName("msasn1.dll", "ASN1_Encode")
Interceptor.attach(ASN1_Encode, {onLeave: function (args) {send("ASN1_Encode");}});

var ASN1_FreeDecoded = Module.findExportByName("msasn1.dll", "ASN1_FreeDecoded")
Interceptor.attach(ASN1_FreeDecoded, {onLeave: function (args) {send("ASN1_FreeDecoded");}});

var ASN1_FreeEncoded = Module.findExportByName("msasn1.dll", "ASN1_FreeEncoded")
Interceptor.attach(ASN1_FreeEncoded, {onLeave: function (args) {send("ASN1_FreeEncoded");}});

var ASN1_GetDecoderOption = Module.findExportByName("msasn1.dll", "ASN1_GetDecoderOption")
Interceptor.attach(ASN1_GetDecoderOption, {onLeave: function (args) {send("ASN1_GetDecoderOption");}});

var ASN1_GetEncoderOption = Module.findExportByName("msasn1.dll", "ASN1_GetEncoderOption")
Interceptor.attach(ASN1_GetEncoderOption, {onLeave: function (args) {send("ASN1_GetEncoderOption");}});

var ASN1_SetDecoderOption = Module.findExportByName("msasn1.dll", "ASN1_SetDecoderOption")
Interceptor.attach(ASN1_SetDecoderOption, {onLeave: function (args) {send("ASN1_SetDecoderOption");}});

var ASN1_SetEncoderOption = Module.findExportByName("msasn1.dll", "ASN1_SetEncoderOption")
Interceptor.attach(ASN1_SetEncoderOption, {onLeave: function (args) {send("ASN1_SetEncoderOption");}});

var ASN1bitstring_cmp = Module.findExportByName("msasn1.dll", "ASN1bitstring_cmp")
Interceptor.attach(ASN1bitstring_cmp, {onLeave: function (args) {send("ASN1bitstring_cmp");}});

var ASN1bitstring_free = Module.findExportByName("msasn1.dll", "ASN1bitstring_free")
Interceptor.attach(ASN1bitstring_free, {onLeave: function (args) {send("ASN1bitstring_free");}});

var ASN1char16string_cmp = Module.findExportByName("msasn1.dll", "ASN1char16string_cmp")
Interceptor.attach(ASN1char16string_cmp, {onLeave: function (args) {send("ASN1char16string_cmp");}});

var ASN1char16string_free = Module.findExportByName("msasn1.dll", "ASN1char16string_free")
Interceptor.attach(ASN1char16string_free, {onLeave: function (args) {send("ASN1char16string_free");}});

var ASN1char32string_cmp = Module.findExportByName("msasn1.dll", "ASN1char32string_cmp")
Interceptor.attach(ASN1char32string_cmp, {onLeave: function (args) {send("ASN1char32string_cmp");}});

var ASN1char32string_free = Module.findExportByName("msasn1.dll", "ASN1char32string_free")
Interceptor.attach(ASN1char32string_free, {onLeave: function (args) {send("ASN1char32string_free");}});

var ASN1charstring_cmp = Module.findExportByName("msasn1.dll", "ASN1charstring_cmp")
Interceptor.attach(ASN1charstring_cmp, {onLeave: function (args) {send("ASN1charstring_cmp");}});

var ASN1charstring_free = Module.findExportByName("msasn1.dll", "ASN1charstring_free")
Interceptor.attach(ASN1charstring_free, {onLeave: function (args) {send("ASN1charstring_free");}});

var ASN1generalizedtime_cmp = Module.findExportByName("msasn1.dll", "ASN1generalizedtime_cmp")
Interceptor.attach(ASN1generalizedtime_cmp, {onLeave: function (args) {send("ASN1generalizedtime_cmp");}});

var ASN1intx2int32 = Module.findExportByName("msasn1.dll", "ASN1intx2int32")
Interceptor.attach(ASN1intx2int32, {onLeave: function (args) {send("ASN1intx2int32");}});

var ASN1intx2uint32 = Module.findExportByName("msasn1.dll", "ASN1intx2uint32")
Interceptor.attach(ASN1intx2uint32, {onLeave: function (args) {send("ASN1intx2uint32");}});

var ASN1intx_add = Module.findExportByName("msasn1.dll", "ASN1intx_add")
Interceptor.attach(ASN1intx_add, {onLeave: function (args) {send("ASN1intx_add");}});

var ASN1intx_cmp = Module.findExportByName("msasn1.dll", "ASN1intx_cmp")
Interceptor.attach(ASN1intx_cmp, {onLeave: function (args) {send("ASN1intx_cmp");}});

var ASN1intx_free = Module.findExportByName("msasn1.dll", "ASN1intx_free")
Interceptor.attach(ASN1intx_free, {onLeave: function (args) {send("ASN1intx_free");}});

var ASN1intx_setuint32 = Module.findExportByName("msasn1.dll", "ASN1intx_setuint32")
Interceptor.attach(ASN1intx_setuint32, {onLeave: function (args) {send("ASN1intx_setuint32");}});

var ASN1intx_sub = Module.findExportByName("msasn1.dll", "ASN1intx_sub")
Interceptor.attach(ASN1intx_sub, {onLeave: function (args) {send("ASN1intx_sub");}});

var ASN1intx_uoctets = Module.findExportByName("msasn1.dll", "ASN1intx_uoctets")
Interceptor.attach(ASN1intx_uoctets, {onLeave: function (args) {send("ASN1intx_uoctets");}});

var ASN1intxisuint32 = Module.findExportByName("msasn1.dll", "ASN1intxisuint32")
Interceptor.attach(ASN1intxisuint32, {onLeave: function (args) {send("ASN1intxisuint32");}});

var ASN1objectidentifier2_cmp = Module.findExportByName("msasn1.dll", "ASN1objectidentifier2_cmp")
Interceptor.attach(ASN1objectidentifier2_cmp, {onLeave: function (args) {send("ASN1objectidentifier2_cmp");}});

var ASN1objectidentifier_cmp = Module.findExportByName("msasn1.dll", "ASN1objectidentifier_cmp")
Interceptor.attach(ASN1objectidentifier_cmp, {onLeave: function (args) {send("ASN1objectidentifier_cmp");}});

var ASN1objectidentifier_free = Module.findExportByName("msasn1.dll", "ASN1objectidentifier_free")
Interceptor.attach(ASN1objectidentifier_free, {onLeave: function (args) {send("ASN1objectidentifier_free");}});

var ASN1octetstring_cmp = Module.findExportByName("msasn1.dll", "ASN1octetstring_cmp")
Interceptor.attach(ASN1octetstring_cmp, {onLeave: function (args) {send("ASN1octetstring_cmp");}});

var ASN1octetstring_free = Module.findExportByName("msasn1.dll", "ASN1octetstring_free")
Interceptor.attach(ASN1octetstring_free, {onLeave: function (args) {send("ASN1octetstring_free");}});

var ASN1open_cmp = Module.findExportByName("msasn1.dll", "ASN1open_cmp")
Interceptor.attach(ASN1open_cmp, {onLeave: function (args) {send("ASN1open_cmp");}});

var ASN1open_free = Module.findExportByName("msasn1.dll", "ASN1open_free")
Interceptor.attach(ASN1open_free, {onLeave: function (args) {send("ASN1open_free");}});

var ASN1uint32_uoctets = Module.findExportByName("msasn1.dll", "ASN1uint32_uoctets")
Interceptor.attach(ASN1uint32_uoctets, {onLeave: function (args) {send("ASN1uint32_uoctets");}});

var ASN1utctime_cmp = Module.findExportByName("msasn1.dll", "ASN1utctime_cmp")
Interceptor.attach(ASN1utctime_cmp, {onLeave: function (args) {send("ASN1utctime_cmp");}});

var ASN1utf8string_free = Module.findExportByName("msasn1.dll", "ASN1utf8string_free")
Interceptor.attach(ASN1utf8string_free, {onLeave: function (args) {send("ASN1utf8string_free");}});

var ASN1ztchar16string_cmp = Module.findExportByName("msasn1.dll", "ASN1ztchar16string_cmp")
Interceptor.attach(ASN1ztchar16string_cmp, {onLeave: function (args) {send("ASN1ztchar16string_cmp");}});

var ASN1ztchar16string_free = Module.findExportByName("msasn1.dll", "ASN1ztchar16string_free")
Interceptor.attach(ASN1ztchar16string_free, {onLeave: function (args) {send("ASN1ztchar16string_free");}});

var ASN1ztchar32string_cmp = Module.findExportByName("msasn1.dll", "ASN1ztchar32string_cmp")
Interceptor.attach(ASN1ztchar32string_cmp, {onLeave: function (args) {send("ASN1ztchar32string_cmp");}});

var ASN1ztchar32string_free = Module.findExportByName("msasn1.dll", "ASN1ztchar32string_free")
Interceptor.attach(ASN1ztchar32string_free, {onLeave: function (args) {send("ASN1ztchar32string_free");}});

var ASN1ztcharstring_cmp = Module.findExportByName("msasn1.dll", "ASN1ztcharstring_cmp")
Interceptor.attach(ASN1ztcharstring_cmp, {onLeave: function (args) {send("ASN1ztcharstring_cmp");}});

var ASN1ztcharstring_free = Module.findExportByName("msasn1.dll", "ASN1ztcharstring_free")
Interceptor.attach(ASN1ztcharstring_free, {onLeave: function (args) {send("ASN1ztcharstring_free");}});

