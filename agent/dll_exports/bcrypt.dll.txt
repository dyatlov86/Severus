var BCryptAddContextFunction = Module.findExportByName("bcrypt.dll", "BCryptAddContextFunction")
Interceptor.attach(BCryptAddContextFunction, {onLeave: function (args) {send("BCryptAddContextFunction");}});

var BCryptAddContextFunctionProvider = Module.findExportByName("bcrypt.dll", "BCryptAddContextFunctionProvider")
Interceptor.attach(BCryptAddContextFunctionProvider, {onLeave: function (args) {send("BCryptAddContextFunctionProvider");}});

var BCryptCloseAlgorithmProvider = Module.findExportByName("bcrypt.dll", "BCryptCloseAlgorithmProvider")
Interceptor.attach(BCryptCloseAlgorithmProvider, {onLeave: function (args) {send("BCryptCloseAlgorithmProvider");}});

var BCryptConfigureContext = Module.findExportByName("bcrypt.dll", "BCryptConfigureContext")
Interceptor.attach(BCryptConfigureContext, {onLeave: function (args) {send("BCryptConfigureContext");}});

var BCryptConfigureContextFunction = Module.findExportByName("bcrypt.dll", "BCryptConfigureContextFunction")
Interceptor.attach(BCryptConfigureContextFunction, {onLeave: function (args) {send("BCryptConfigureContextFunction");}});

var BCryptCreateContext = Module.findExportByName("bcrypt.dll", "BCryptCreateContext")
Interceptor.attach(BCryptCreateContext, {onLeave: function (args) {send("BCryptCreateContext");}});

var BCryptCreateHash = Module.findExportByName("bcrypt.dll", "BCryptCreateHash")
Interceptor.attach(BCryptCreateHash, {onLeave: function (args) {send("BCryptCreateHash");}});

var BCryptCreateMultiHash = Module.findExportByName("bcrypt.dll", "BCryptCreateMultiHash")
Interceptor.attach(BCryptCreateMultiHash, {onLeave: function (args) {send("BCryptCreateMultiHash");}});

var BCryptDecrypt = Module.findExportByName("bcrypt.dll", "BCryptDecrypt")
Interceptor.attach(BCryptDecrypt, {onLeave: function (args) {send("BCryptDecrypt");}});

var BCryptDeleteContext = Module.findExportByName("bcrypt.dll", "BCryptDeleteContext")
Interceptor.attach(BCryptDeleteContext, {onLeave: function (args) {send("BCryptDeleteContext");}});

var BCryptDeriveKey = Module.findExportByName("bcrypt.dll", "BCryptDeriveKey")
Interceptor.attach(BCryptDeriveKey, {onLeave: function (args) {send("BCryptDeriveKey");}});

var BCryptDeriveKeyCapi = Module.findExportByName("bcrypt.dll", "BCryptDeriveKeyCapi")
Interceptor.attach(BCryptDeriveKeyCapi, {onLeave: function (args) {send("BCryptDeriveKeyCapi");}});

var BCryptDeriveKeyPBKDF2 = Module.findExportByName("bcrypt.dll", "BCryptDeriveKeyPBKDF2")
Interceptor.attach(BCryptDeriveKeyPBKDF2, {onLeave: function (args) {send("BCryptDeriveKeyPBKDF2");}});

var BCryptDestroyHash = Module.findExportByName("bcrypt.dll", "BCryptDestroyHash")
Interceptor.attach(BCryptDestroyHash, {onLeave: function (args) {send("BCryptDestroyHash");}});

var BCryptDestroyKey = Module.findExportByName("bcrypt.dll", "BCryptDestroyKey")
Interceptor.attach(BCryptDestroyKey, {onLeave: function (args) {send("BCryptDestroyKey");}});

var BCryptDestroySecret = Module.findExportByName("bcrypt.dll", "BCryptDestroySecret")
Interceptor.attach(BCryptDestroySecret, {onLeave: function (args) {send("BCryptDestroySecret");}});

var BCryptDuplicateHash = Module.findExportByName("bcrypt.dll", "BCryptDuplicateHash")
Interceptor.attach(BCryptDuplicateHash, {onLeave: function (args) {send("BCryptDuplicateHash");}});

var BCryptDuplicateKey = Module.findExportByName("bcrypt.dll", "BCryptDuplicateKey")
Interceptor.attach(BCryptDuplicateKey, {onLeave: function (args) {send("BCryptDuplicateKey");}});

var BCryptEncrypt = Module.findExportByName("bcrypt.dll", "BCryptEncrypt")
Interceptor.attach(BCryptEncrypt, {onLeave: function (args) {send("BCryptEncrypt");}});

var BCryptEnumAlgorithms = Module.findExportByName("bcrypt.dll", "BCryptEnumAlgorithms")
Interceptor.attach(BCryptEnumAlgorithms, {onLeave: function (args) {send("BCryptEnumAlgorithms");}});

var BCryptEnumContextFunctionProviders = Module.findExportByName("bcrypt.dll", "BCryptEnumContextFunctionProviders")
Interceptor.attach(BCryptEnumContextFunctionProviders, {onLeave: function (args) {send("BCryptEnumContextFunctionProviders");}});

var BCryptEnumContextFunctions = Module.findExportByName("bcrypt.dll", "BCryptEnumContextFunctions")
Interceptor.attach(BCryptEnumContextFunctions, {onLeave: function (args) {send("BCryptEnumContextFunctions");}});

var BCryptEnumContexts = Module.findExportByName("bcrypt.dll", "BCryptEnumContexts")
Interceptor.attach(BCryptEnumContexts, {onLeave: function (args) {send("BCryptEnumContexts");}});

var BCryptEnumProviders = Module.findExportByName("bcrypt.dll", "BCryptEnumProviders")
Interceptor.attach(BCryptEnumProviders, {onLeave: function (args) {send("BCryptEnumProviders");}});

var BCryptEnumRegisteredProviders = Module.findExportByName("bcrypt.dll", "BCryptEnumRegisteredProviders")
Interceptor.attach(BCryptEnumRegisteredProviders, {onLeave: function (args) {send("BCryptEnumRegisteredProviders");}});

var BCryptExportKey = Module.findExportByName("bcrypt.dll", "BCryptExportKey")
Interceptor.attach(BCryptExportKey, {onLeave: function (args) {send("BCryptExportKey");}});

var BCryptFinalizeKeyPair = Module.findExportByName("bcrypt.dll", "BCryptFinalizeKeyPair")
Interceptor.attach(BCryptFinalizeKeyPair, {onLeave: function (args) {send("BCryptFinalizeKeyPair");}});

var BCryptFinishHash = Module.findExportByName("bcrypt.dll", "BCryptFinishHash")
Interceptor.attach(BCryptFinishHash, {onLeave: function (args) {send("BCryptFinishHash");}});

var BCryptFreeBuffer = Module.findExportByName("bcrypt.dll", "BCryptFreeBuffer")
Interceptor.attach(BCryptFreeBuffer, {onLeave: function (args) {send("BCryptFreeBuffer");}});

var BCryptGenRandom = Module.findExportByName("bcrypt.dll", "BCryptGenRandom")
Interceptor.attach(BCryptGenRandom, {onLeave: function (args) {send("BCryptGenRandom");}});

var BCryptGenerateKeyPair = Module.findExportByName("bcrypt.dll", "BCryptGenerateKeyPair")
Interceptor.attach(BCryptGenerateKeyPair, {onLeave: function (args) {send("BCryptGenerateKeyPair");}});

var BCryptGenerateSymmetricKey = Module.findExportByName("bcrypt.dll", "BCryptGenerateSymmetricKey")
Interceptor.attach(BCryptGenerateSymmetricKey, {onLeave: function (args) {send("BCryptGenerateSymmetricKey");}});

var BCryptGetFipsAlgorithmMode = Module.findExportByName("bcrypt.dll", "BCryptGetFipsAlgorithmMode")
Interceptor.attach(BCryptGetFipsAlgorithmMode, {onLeave: function (args) {send("BCryptGetFipsAlgorithmMode");}});

var BCryptGetProperty = Module.findExportByName("bcrypt.dll", "BCryptGetProperty")
Interceptor.attach(BCryptGetProperty, {onLeave: function (args) {send("BCryptGetProperty");}});

var BCryptHash = Module.findExportByName("bcrypt.dll", "BCryptHash")
Interceptor.attach(BCryptHash, {onLeave: function (args) {send("BCryptHash");}});

var BCryptHashData = Module.findExportByName("bcrypt.dll", "BCryptHashData")
Interceptor.attach(BCryptHashData, {onLeave: function (args) {send("BCryptHashData");}});

var BCryptImportKey = Module.findExportByName("bcrypt.dll", "BCryptImportKey")
Interceptor.attach(BCryptImportKey, {onLeave: function (args) {send("BCryptImportKey");}});

var BCryptImportKeyPair = Module.findExportByName("bcrypt.dll", "BCryptImportKeyPair")
Interceptor.attach(BCryptImportKeyPair, {onLeave: function (args) {send("BCryptImportKeyPair");}});

var BCryptKeyDerivation = Module.findExportByName("bcrypt.dll", "BCryptKeyDerivation")
Interceptor.attach(BCryptKeyDerivation, {onLeave: function (args) {send("BCryptKeyDerivation");}});

var BCryptOpenAlgorithmProvider = Module.findExportByName("bcrypt.dll", "BCryptOpenAlgorithmProvider")
Interceptor.attach(BCryptOpenAlgorithmProvider, {onLeave: function (args) {send("BCryptOpenAlgorithmProvider");}});

var BCryptProcessMultiOperations = Module.findExportByName("bcrypt.dll", "BCryptProcessMultiOperations")
Interceptor.attach(BCryptProcessMultiOperations, {onLeave: function (args) {send("BCryptProcessMultiOperations");}});

var BCryptQueryContextConfiguration = Module.findExportByName("bcrypt.dll", "BCryptQueryContextConfiguration")
Interceptor.attach(BCryptQueryContextConfiguration, {onLeave: function (args) {send("BCryptQueryContextConfiguration");}});

var BCryptQueryContextFunctionConfiguration = Module.findExportByName("bcrypt.dll", "BCryptQueryContextFunctionConfiguration")
Interceptor.attach(BCryptQueryContextFunctionConfiguration, {onLeave: function (args) {send("BCryptQueryContextFunctionConfiguration");}});

var BCryptQueryContextFunctionProperty = Module.findExportByName("bcrypt.dll", "BCryptQueryContextFunctionProperty")
Interceptor.attach(BCryptQueryContextFunctionProperty, {onLeave: function (args) {send("BCryptQueryContextFunctionProperty");}});

var BCryptQueryProviderRegistration = Module.findExportByName("bcrypt.dll", "BCryptQueryProviderRegistration")
Interceptor.attach(BCryptQueryProviderRegistration, {onLeave: function (args) {send("BCryptQueryProviderRegistration");}});

var BCryptRegisterConfigChangeNotify = Module.findExportByName("bcrypt.dll", "BCryptRegisterConfigChangeNotify")
Interceptor.attach(BCryptRegisterConfigChangeNotify, {onLeave: function (args) {send("BCryptRegisterConfigChangeNotify");}});

var BCryptRegisterProvider = Module.findExportByName("bcrypt.dll", "BCryptRegisterProvider")
Interceptor.attach(BCryptRegisterProvider, {onLeave: function (args) {send("BCryptRegisterProvider");}});

var BCryptRemoveContextFunction = Module.findExportByName("bcrypt.dll", "BCryptRemoveContextFunction")
Interceptor.attach(BCryptRemoveContextFunction, {onLeave: function (args) {send("BCryptRemoveContextFunction");}});

var BCryptRemoveContextFunctionProvider = Module.findExportByName("bcrypt.dll", "BCryptRemoveContextFunctionProvider")
Interceptor.attach(BCryptRemoveContextFunctionProvider, {onLeave: function (args) {send("BCryptRemoveContextFunctionProvider");}});

var BCryptResolveProviders = Module.findExportByName("bcrypt.dll", "BCryptResolveProviders")
Interceptor.attach(BCryptResolveProviders, {onLeave: function (args) {send("BCryptResolveProviders");}});

var BCryptSecretAgreement = Module.findExportByName("bcrypt.dll", "BCryptSecretAgreement")
Interceptor.attach(BCryptSecretAgreement, {onLeave: function (args) {send("BCryptSecretAgreement");}});

var BCryptSetAuditingInterface = Module.findExportByName("bcrypt.dll", "BCryptSetAuditingInterface")
Interceptor.attach(BCryptSetAuditingInterface, {onLeave: function (args) {send("BCryptSetAuditingInterface");}});

var BCryptSetContextFunctionProperty = Module.findExportByName("bcrypt.dll", "BCryptSetContextFunctionProperty")
Interceptor.attach(BCryptSetContextFunctionProperty, {onLeave: function (args) {send("BCryptSetContextFunctionProperty");}});

var BCryptSetProperty = Module.findExportByName("bcrypt.dll", "BCryptSetProperty")
Interceptor.attach(BCryptSetProperty, {onLeave: function (args) {send("BCryptSetProperty");}});

var BCryptSignHash = Module.findExportByName("bcrypt.dll", "BCryptSignHash")
Interceptor.attach(BCryptSignHash, {onLeave: function (args) {send("BCryptSignHash");}});

var BCryptUnregisterConfigChangeNotify = Module.findExportByName("bcrypt.dll", "BCryptUnregisterConfigChangeNotify")
Interceptor.attach(BCryptUnregisterConfigChangeNotify, {onLeave: function (args) {send("BCryptUnregisterConfigChangeNotify");}});

var BCryptUnregisterProvider = Module.findExportByName("bcrypt.dll", "BCryptUnregisterProvider")
Interceptor.attach(BCryptUnregisterProvider, {onLeave: function (args) {send("BCryptUnregisterProvider");}});

var BCryptVerifySignature = Module.findExportByName("bcrypt.dll", "BCryptVerifySignature")
Interceptor.attach(BCryptVerifySignature, {onLeave: function (args) {send("BCryptVerifySignature");}});

