var CloseDefaultICUGroupingLetters = Module.findExportByName("icu.dll", "CloseDefaultICUGroupingLetters")
Interceptor.attach(CloseDefaultICUGroupingLetters, {onLeave: function (args) {send("CloseDefaultICUGroupingLetters");}});

var GetDefaultICUGroupingLetters = Module.findExportByName("icu.dll", "GetDefaultICUGroupingLetters")
Interceptor.attach(GetDefaultICUGroupingLetters, {onLeave: function (args) {send("GetDefaultICUGroupingLetters");}});

var GetICUGroupingLetter = Module.findExportByName("icu.dll", "GetICUGroupingLetter")
Interceptor.attach(GetICUGroupingLetter, {onLeave: function (args) {send("GetICUGroupingLetter");}});

var SortCloseHandle = Module.findExportByName("icu.dll", "SortCloseHandle")
Interceptor.attach(SortCloseHandle, {onLeave: function (args) {send("SortCloseHandle");}});

var SortGetHandle = Module.findExportByName("icu.dll", "SortGetHandle")
Interceptor.attach(SortGetHandle, {onLeave: function (args) {send("SortGetHandle");}});

var SortGetSearchKey = Module.findExportByName("icu.dll", "SortGetSearchKey")
Interceptor.attach(SortGetSearchKey, {onLeave: function (args) {send("SortGetSearchKey");}});

var UCNV_FROM_U_CALLBACK_ESCAPE = Module.findExportByName("icu.dll", "UCNV_FROM_U_CALLBACK_ESCAPE")
Interceptor.attach(UCNV_FROM_U_CALLBACK_ESCAPE, {onLeave: function (args) {send("UCNV_FROM_U_CALLBACK_ESCAPE");}});

var UCNV_FROM_U_CALLBACK_SKIP = Module.findExportByName("icu.dll", "UCNV_FROM_U_CALLBACK_SKIP")
Interceptor.attach(UCNV_FROM_U_CALLBACK_SKIP, {onLeave: function (args) {send("UCNV_FROM_U_CALLBACK_SKIP");}});

var UCNV_FROM_U_CALLBACK_STOP = Module.findExportByName("icu.dll", "UCNV_FROM_U_CALLBACK_STOP")
Interceptor.attach(UCNV_FROM_U_CALLBACK_STOP, {onLeave: function (args) {send("UCNV_FROM_U_CALLBACK_STOP");}});

var UCNV_FROM_U_CALLBACK_SUBSTITUTE = Module.findExportByName("icu.dll", "UCNV_FROM_U_CALLBACK_SUBSTITUTE")
Interceptor.attach(UCNV_FROM_U_CALLBACK_SUBSTITUTE, {onLeave: function (args) {send("UCNV_FROM_U_CALLBACK_SUBSTITUTE");}});

var UCNV_TO_U_CALLBACK_ESCAPE = Module.findExportByName("icu.dll", "UCNV_TO_U_CALLBACK_ESCAPE")
Interceptor.attach(UCNV_TO_U_CALLBACK_ESCAPE, {onLeave: function (args) {send("UCNV_TO_U_CALLBACK_ESCAPE");}});

var UCNV_TO_U_CALLBACK_SKIP = Module.findExportByName("icu.dll", "UCNV_TO_U_CALLBACK_SKIP")
Interceptor.attach(UCNV_TO_U_CALLBACK_SKIP, {onLeave: function (args) {send("UCNV_TO_U_CALLBACK_SKIP");}});

var UCNV_TO_U_CALLBACK_STOP = Module.findExportByName("icu.dll", "UCNV_TO_U_CALLBACK_STOP")
Interceptor.attach(UCNV_TO_U_CALLBACK_STOP, {onLeave: function (args) {send("UCNV_TO_U_CALLBACK_STOP");}});

var UCNV_TO_U_CALLBACK_SUBSTITUTE = Module.findExportByName("icu.dll", "UCNV_TO_U_CALLBACK_SUBSTITUTE")
Interceptor.attach(UCNV_TO_U_CALLBACK_SUBSTITUTE, {onLeave: function (args) {send("UCNV_TO_U_CALLBACK_SUBSTITUTE");}});

var u_UCharsToChars = Module.findExportByName("icu.dll", "u_UCharsToChars")
Interceptor.attach(u_UCharsToChars, {onLeave: function (args) {send("u_UCharsToChars");}});

var u_austrcpy = Module.findExportByName("icu.dll", "u_austrcpy")
Interceptor.attach(u_austrcpy, {onLeave: function (args) {send("u_austrcpy");}});

var u_austrncpy = Module.findExportByName("icu.dll", "u_austrncpy")
Interceptor.attach(u_austrncpy, {onLeave: function (args) {send("u_austrncpy");}});

var u_catclose = Module.findExportByName("icu.dll", "u_catclose")
Interceptor.attach(u_catclose, {onLeave: function (args) {send("u_catclose");}});

var u_catgets = Module.findExportByName("icu.dll", "u_catgets")
Interceptor.attach(u_catgets, {onLeave: function (args) {send("u_catgets");}});

var u_catopen = Module.findExportByName("icu.dll", "u_catopen")
Interceptor.attach(u_catopen, {onLeave: function (args) {send("u_catopen");}});

var u_charAge = Module.findExportByName("icu.dll", "u_charAge")
Interceptor.attach(u_charAge, {onLeave: function (args) {send("u_charAge");}});

var u_charDigitValue = Module.findExportByName("icu.dll", "u_charDigitValue")
Interceptor.attach(u_charDigitValue, {onLeave: function (args) {send("u_charDigitValue");}});

var u_charDirection = Module.findExportByName("icu.dll", "u_charDirection")
Interceptor.attach(u_charDirection, {onLeave: function (args) {send("u_charDirection");}});

var u_charFromName = Module.findExportByName("icu.dll", "u_charFromName")
Interceptor.attach(u_charFromName, {onLeave: function (args) {send("u_charFromName");}});

var u_charMirror = Module.findExportByName("icu.dll", "u_charMirror")
Interceptor.attach(u_charMirror, {onLeave: function (args) {send("u_charMirror");}});

var u_charName = Module.findExportByName("icu.dll", "u_charName")
Interceptor.attach(u_charName, {onLeave: function (args) {send("u_charName");}});

var u_charType = Module.findExportByName("icu.dll", "u_charType")
Interceptor.attach(u_charType, {onLeave: function (args) {send("u_charType");}});

var u_charsToUChars = Module.findExportByName("icu.dll", "u_charsToUChars")
Interceptor.attach(u_charsToUChars, {onLeave: function (args) {send("u_charsToUChars");}});

var u_cleanup = Module.findExportByName("icu.dll", "u_cleanup")
Interceptor.attach(u_cleanup, {onLeave: function (args) {send("u_cleanup");}});

var u_countChar32 = Module.findExportByName("icu.dll", "u_countChar32")
Interceptor.attach(u_countChar32, {onLeave: function (args) {send("u_countChar32");}});

var u_digit = Module.findExportByName("icu.dll", "u_digit")
Interceptor.attach(u_digit, {onLeave: function (args) {send("u_digit");}});

var u_enumCharNames = Module.findExportByName("icu.dll", "u_enumCharNames")
Interceptor.attach(u_enumCharNames, {onLeave: function (args) {send("u_enumCharNames");}});

var u_enumCharTypes = Module.findExportByName("icu.dll", "u_enumCharTypes")
Interceptor.attach(u_enumCharTypes, {onLeave: function (args) {send("u_enumCharTypes");}});

var u_errorName = Module.findExportByName("icu.dll", "u_errorName")
Interceptor.attach(u_errorName, {onLeave: function (args) {send("u_errorName");}});

var u_foldCase = Module.findExportByName("icu.dll", "u_foldCase")
Interceptor.attach(u_foldCase, {onLeave: function (args) {send("u_foldCase");}});

var u_forDigit = Module.findExportByName("icu.dll", "u_forDigit")
Interceptor.attach(u_forDigit, {onLeave: function (args) {send("u_forDigit");}});

var u_formatMessage = Module.findExportByName("icu.dll", "u_formatMessage")
Interceptor.attach(u_formatMessage, {onLeave: function (args) {send("u_formatMessage");}});

var u_formatMessageWithError = Module.findExportByName("icu.dll", "u_formatMessageWithError")
Interceptor.attach(u_formatMessageWithError, {onLeave: function (args) {send("u_formatMessageWithError");}});

var u_getBidiPairedBracket = Module.findExportByName("icu.dll", "u_getBidiPairedBracket")
Interceptor.attach(u_getBidiPairedBracket, {onLeave: function (args) {send("u_getBidiPairedBracket");}});

var u_getBinaryPropertySet = Module.findExportByName("icu.dll", "u_getBinaryPropertySet")
Interceptor.attach(u_getBinaryPropertySet, {onLeave: function (args) {send("u_getBinaryPropertySet");}});

var u_getCombiningClass = Module.findExportByName("icu.dll", "u_getCombiningClass")
Interceptor.attach(u_getCombiningClass, {onLeave: function (args) {send("u_getCombiningClass");}});

var u_getDataVersion = Module.findExportByName("icu.dll", "u_getDataVersion")
Interceptor.attach(u_getDataVersion, {onLeave: function (args) {send("u_getDataVersion");}});

var u_getFC_NFKC_Closure = Module.findExportByName("icu.dll", "u_getFC_NFKC_Closure")
Interceptor.attach(u_getFC_NFKC_Closure, {onLeave: function (args) {send("u_getFC_NFKC_Closure");}});

var u_getIntPropertyMap = Module.findExportByName("icu.dll", "u_getIntPropertyMap")
Interceptor.attach(u_getIntPropertyMap, {onLeave: function (args) {send("u_getIntPropertyMap");}});

var u_getIntPropertyMaxValue = Module.findExportByName("icu.dll", "u_getIntPropertyMaxValue")
Interceptor.attach(u_getIntPropertyMaxValue, {onLeave: function (args) {send("u_getIntPropertyMaxValue");}});

var u_getIntPropertyMinValue = Module.findExportByName("icu.dll", "u_getIntPropertyMinValue")
Interceptor.attach(u_getIntPropertyMinValue, {onLeave: function (args) {send("u_getIntPropertyMinValue");}});

var u_getIntPropertyValue = Module.findExportByName("icu.dll", "u_getIntPropertyValue")
Interceptor.attach(u_getIntPropertyValue, {onLeave: function (args) {send("u_getIntPropertyValue");}});

var u_getNumericValue = Module.findExportByName("icu.dll", "u_getNumericValue")
Interceptor.attach(u_getNumericValue, {onLeave: function (args) {send("u_getNumericValue");}});

var u_getPropertyEnum = Module.findExportByName("icu.dll", "u_getPropertyEnum")
Interceptor.attach(u_getPropertyEnum, {onLeave: function (args) {send("u_getPropertyEnum");}});

var u_getPropertyName = Module.findExportByName("icu.dll", "u_getPropertyName")
Interceptor.attach(u_getPropertyName, {onLeave: function (args) {send("u_getPropertyName");}});

var u_getPropertyValueEnum = Module.findExportByName("icu.dll", "u_getPropertyValueEnum")
Interceptor.attach(u_getPropertyValueEnum, {onLeave: function (args) {send("u_getPropertyValueEnum");}});

var u_getPropertyValueName = Module.findExportByName("icu.dll", "u_getPropertyValueName")
Interceptor.attach(u_getPropertyValueName, {onLeave: function (args) {send("u_getPropertyValueName");}});

var u_getUnicodeVersion = Module.findExportByName("icu.dll", "u_getUnicodeVersion")
Interceptor.attach(u_getUnicodeVersion, {onLeave: function (args) {send("u_getUnicodeVersion");}});

var u_getVersion = Module.findExportByName("icu.dll", "u_getVersion")
Interceptor.attach(u_getVersion, {onLeave: function (args) {send("u_getVersion");}});

var u_hasBinaryProperty = Module.findExportByName("icu.dll", "u_hasBinaryProperty")
Interceptor.attach(u_hasBinaryProperty, {onLeave: function (args) {send("u_hasBinaryProperty");}});

var u_init = Module.findExportByName("icu.dll", "u_init")
Interceptor.attach(u_init, {onLeave: function (args) {send("u_init");}});

var u_isIDIgnorable = Module.findExportByName("icu.dll", "u_isIDIgnorable")
Interceptor.attach(u_isIDIgnorable, {onLeave: function (args) {send("u_isIDIgnorable");}});

var u_isIDPart = Module.findExportByName("icu.dll", "u_isIDPart")
Interceptor.attach(u_isIDPart, {onLeave: function (args) {send("u_isIDPart");}});

var u_isIDStart = Module.findExportByName("icu.dll", "u_isIDStart")
Interceptor.attach(u_isIDStart, {onLeave: function (args) {send("u_isIDStart");}});

var u_isISOControl = Module.findExportByName("icu.dll", "u_isISOControl")
Interceptor.attach(u_isISOControl, {onLeave: function (args) {send("u_isISOControl");}});

var u_isJavaIDPart = Module.findExportByName("icu.dll", "u_isJavaIDPart")
Interceptor.attach(u_isJavaIDPart, {onLeave: function (args) {send("u_isJavaIDPart");}});

var u_isJavaIDStart = Module.findExportByName("icu.dll", "u_isJavaIDStart")
Interceptor.attach(u_isJavaIDStart, {onLeave: function (args) {send("u_isJavaIDStart");}});

var u_isJavaSpaceChar = Module.findExportByName("icu.dll", "u_isJavaSpaceChar")
Interceptor.attach(u_isJavaSpaceChar, {onLeave: function (args) {send("u_isJavaSpaceChar");}});

var u_isMirrored = Module.findExportByName("icu.dll", "u_isMirrored")
Interceptor.attach(u_isMirrored, {onLeave: function (args) {send("u_isMirrored");}});

var u_isUAlphabetic = Module.findExportByName("icu.dll", "u_isUAlphabetic")
Interceptor.attach(u_isUAlphabetic, {onLeave: function (args) {send("u_isUAlphabetic");}});

var u_isULowercase = Module.findExportByName("icu.dll", "u_isULowercase")
Interceptor.attach(u_isULowercase, {onLeave: function (args) {send("u_isULowercase");}});

var u_isUUppercase = Module.findExportByName("icu.dll", "u_isUUppercase")
Interceptor.attach(u_isUUppercase, {onLeave: function (args) {send("u_isUUppercase");}});

var u_isUWhiteSpace = Module.findExportByName("icu.dll", "u_isUWhiteSpace")
Interceptor.attach(u_isUWhiteSpace, {onLeave: function (args) {send("u_isUWhiteSpace");}});

var u_isWhitespace = Module.findExportByName("icu.dll", "u_isWhitespace")
Interceptor.attach(u_isWhitespace, {onLeave: function (args) {send("u_isWhitespace");}});

var u_isalnum = Module.findExportByName("icu.dll", "u_isalnum")
Interceptor.attach(u_isalnum, {onLeave: function (args) {send("u_isalnum");}});

var u_isalpha = Module.findExportByName("icu.dll", "u_isalpha")
Interceptor.attach(u_isalpha, {onLeave: function (args) {send("u_isalpha");}});

var u_isbase = Module.findExportByName("icu.dll", "u_isbase")
Interceptor.attach(u_isbase, {onLeave: function (args) {send("u_isbase");}});

var u_isblank = Module.findExportByName("icu.dll", "u_isblank")
Interceptor.attach(u_isblank, {onLeave: function (args) {send("u_isblank");}});

var u_iscntrl = Module.findExportByName("icu.dll", "u_iscntrl")
Interceptor.attach(u_iscntrl, {onLeave: function (args) {send("u_iscntrl");}});

var u_isdefined = Module.findExportByName("icu.dll", "u_isdefined")
Interceptor.attach(u_isdefined, {onLeave: function (args) {send("u_isdefined");}});

var u_isdigit = Module.findExportByName("icu.dll", "u_isdigit")
Interceptor.attach(u_isdigit, {onLeave: function (args) {send("u_isdigit");}});

var u_isgraph = Module.findExportByName("icu.dll", "u_isgraph")
Interceptor.attach(u_isgraph, {onLeave: function (args) {send("u_isgraph");}});

var u_islower = Module.findExportByName("icu.dll", "u_islower")
Interceptor.attach(u_islower, {onLeave: function (args) {send("u_islower");}});

var u_isprint = Module.findExportByName("icu.dll", "u_isprint")
Interceptor.attach(u_isprint, {onLeave: function (args) {send("u_isprint");}});

var u_ispunct = Module.findExportByName("icu.dll", "u_ispunct")
Interceptor.attach(u_ispunct, {onLeave: function (args) {send("u_ispunct");}});

var u_isspace = Module.findExportByName("icu.dll", "u_isspace")
Interceptor.attach(u_isspace, {onLeave: function (args) {send("u_isspace");}});

var u_istitle = Module.findExportByName("icu.dll", "u_istitle")
Interceptor.attach(u_istitle, {onLeave: function (args) {send("u_istitle");}});

var u_isupper = Module.findExportByName("icu.dll", "u_isupper")
Interceptor.attach(u_isupper, {onLeave: function (args) {send("u_isupper");}});

var u_isxdigit = Module.findExportByName("icu.dll", "u_isxdigit")
Interceptor.attach(u_isxdigit, {onLeave: function (args) {send("u_isxdigit");}});

var u_memcasecmp = Module.findExportByName("icu.dll", "u_memcasecmp")
Interceptor.attach(u_memcasecmp, {onLeave: function (args) {send("u_memcasecmp");}});

var u_memchr = Module.findExportByName("icu.dll", "u_memchr")
Interceptor.attach(u_memchr, {onLeave: function (args) {send("u_memchr");}});

var u_memchr32 = Module.findExportByName("icu.dll", "u_memchr32")
Interceptor.attach(u_memchr32, {onLeave: function (args) {send("u_memchr32");}});

var u_memcmp = Module.findExportByName("icu.dll", "u_memcmp")
Interceptor.attach(u_memcmp, {onLeave: function (args) {send("u_memcmp");}});

var u_memcmpCodePointOrder = Module.findExportByName("icu.dll", "u_memcmpCodePointOrder")
Interceptor.attach(u_memcmpCodePointOrder, {onLeave: function (args) {send("u_memcmpCodePointOrder");}});

var u_memcpy = Module.findExportByName("icu.dll", "u_memcpy")
Interceptor.attach(u_memcpy, {onLeave: function (args) {send("u_memcpy");}});

var u_memmove = Module.findExportByName("icu.dll", "u_memmove")
Interceptor.attach(u_memmove, {onLeave: function (args) {send("u_memmove");}});

var u_memrchr = Module.findExportByName("icu.dll", "u_memrchr")
Interceptor.attach(u_memrchr, {onLeave: function (args) {send("u_memrchr");}});

var u_memrchr32 = Module.findExportByName("icu.dll", "u_memrchr32")
Interceptor.attach(u_memrchr32, {onLeave: function (args) {send("u_memrchr32");}});

var u_memset = Module.findExportByName("icu.dll", "u_memset")
Interceptor.attach(u_memset, {onLeave: function (args) {send("u_memset");}});

var u_parseMessage = Module.findExportByName("icu.dll", "u_parseMessage")
Interceptor.attach(u_parseMessage, {onLeave: function (args) {send("u_parseMessage");}});

var u_parseMessageWithError = Module.findExportByName("icu.dll", "u_parseMessageWithError")
Interceptor.attach(u_parseMessageWithError, {onLeave: function (args) {send("u_parseMessageWithError");}});

var u_setMemoryFunctions = Module.findExportByName("icu.dll", "u_setMemoryFunctions")
Interceptor.attach(u_setMemoryFunctions, {onLeave: function (args) {send("u_setMemoryFunctions");}});

var u_shapeArabic = Module.findExportByName("icu.dll", "u_shapeArabic")
Interceptor.attach(u_shapeArabic, {onLeave: function (args) {send("u_shapeArabic");}});

var u_strCaseCompare = Module.findExportByName("icu.dll", "u_strCaseCompare")
Interceptor.attach(u_strCaseCompare, {onLeave: function (args) {send("u_strCaseCompare");}});

var u_strCompare = Module.findExportByName("icu.dll", "u_strCompare")
Interceptor.attach(u_strCompare, {onLeave: function (args) {send("u_strCompare");}});

var u_strCompareIter = Module.findExportByName("icu.dll", "u_strCompareIter")
Interceptor.attach(u_strCompareIter, {onLeave: function (args) {send("u_strCompareIter");}});

var u_strFindFirst = Module.findExportByName("icu.dll", "u_strFindFirst")
Interceptor.attach(u_strFindFirst, {onLeave: function (args) {send("u_strFindFirst");}});

var u_strFindLast = Module.findExportByName("icu.dll", "u_strFindLast")
Interceptor.attach(u_strFindLast, {onLeave: function (args) {send("u_strFindLast");}});

var u_strFoldCase = Module.findExportByName("icu.dll", "u_strFoldCase")
Interceptor.attach(u_strFoldCase, {onLeave: function (args) {send("u_strFoldCase");}});

var u_strFromJavaModifiedUTF8WithSub = Module.findExportByName("icu.dll", "u_strFromJavaModifiedUTF8WithSub")
Interceptor.attach(u_strFromJavaModifiedUTF8WithSub, {onLeave: function (args) {send("u_strFromJavaModifiedUTF8WithSub");}});

var u_strFromUTF32 = Module.findExportByName("icu.dll", "u_strFromUTF32")
Interceptor.attach(u_strFromUTF32, {onLeave: function (args) {send("u_strFromUTF32");}});

var u_strFromUTF32WithSub = Module.findExportByName("icu.dll", "u_strFromUTF32WithSub")
Interceptor.attach(u_strFromUTF32WithSub, {onLeave: function (args) {send("u_strFromUTF32WithSub");}});

var u_strFromUTF8 = Module.findExportByName("icu.dll", "u_strFromUTF8")
Interceptor.attach(u_strFromUTF8, {onLeave: function (args) {send("u_strFromUTF8");}});

var u_strFromUTF8Lenient = Module.findExportByName("icu.dll", "u_strFromUTF8Lenient")
Interceptor.attach(u_strFromUTF8Lenient, {onLeave: function (args) {send("u_strFromUTF8Lenient");}});

var u_strFromUTF8WithSub = Module.findExportByName("icu.dll", "u_strFromUTF8WithSub")
Interceptor.attach(u_strFromUTF8WithSub, {onLeave: function (args) {send("u_strFromUTF8WithSub");}});

var u_strFromWCS = Module.findExportByName("icu.dll", "u_strFromWCS")
Interceptor.attach(u_strFromWCS, {onLeave: function (args) {send("u_strFromWCS");}});

var u_strHasMoreChar32Than = Module.findExportByName("icu.dll", "u_strHasMoreChar32Than")
Interceptor.attach(u_strHasMoreChar32Than, {onLeave: function (args) {send("u_strHasMoreChar32Than");}});

var u_strToJavaModifiedUTF8 = Module.findExportByName("icu.dll", "u_strToJavaModifiedUTF8")
Interceptor.attach(u_strToJavaModifiedUTF8, {onLeave: function (args) {send("u_strToJavaModifiedUTF8");}});

var u_strToLower = Module.findExportByName("icu.dll", "u_strToLower")
Interceptor.attach(u_strToLower, {onLeave: function (args) {send("u_strToLower");}});

var u_strToTitle = Module.findExportByName("icu.dll", "u_strToTitle")
Interceptor.attach(u_strToTitle, {onLeave: function (args) {send("u_strToTitle");}});

var u_strToUTF32 = Module.findExportByName("icu.dll", "u_strToUTF32")
Interceptor.attach(u_strToUTF32, {onLeave: function (args) {send("u_strToUTF32");}});

var u_strToUTF32WithSub = Module.findExportByName("icu.dll", "u_strToUTF32WithSub")
Interceptor.attach(u_strToUTF32WithSub, {onLeave: function (args) {send("u_strToUTF32WithSub");}});

var u_strToUTF8 = Module.findExportByName("icu.dll", "u_strToUTF8")
Interceptor.attach(u_strToUTF8, {onLeave: function (args) {send("u_strToUTF8");}});

var u_strToUTF8WithSub = Module.findExportByName("icu.dll", "u_strToUTF8WithSub")
Interceptor.attach(u_strToUTF8WithSub, {onLeave: function (args) {send("u_strToUTF8WithSub");}});

var u_strToUpper = Module.findExportByName("icu.dll", "u_strToUpper")
Interceptor.attach(u_strToUpper, {onLeave: function (args) {send("u_strToUpper");}});

var u_strToWCS = Module.findExportByName("icu.dll", "u_strToWCS")
Interceptor.attach(u_strToWCS, {onLeave: function (args) {send("u_strToWCS");}});

var u_strcasecmp = Module.findExportByName("icu.dll", "u_strcasecmp")
Interceptor.attach(u_strcasecmp, {onLeave: function (args) {send("u_strcasecmp");}});

var u_strcat = Module.findExportByName("icu.dll", "u_strcat")
Interceptor.attach(u_strcat, {onLeave: function (args) {send("u_strcat");}});

var u_strchr = Module.findExportByName("icu.dll", "u_strchr")
Interceptor.attach(u_strchr, {onLeave: function (args) {send("u_strchr");}});

var u_strchr32 = Module.findExportByName("icu.dll", "u_strchr32")
Interceptor.attach(u_strchr32, {onLeave: function (args) {send("u_strchr32");}});

var u_strcmp = Module.findExportByName("icu.dll", "u_strcmp")
Interceptor.attach(u_strcmp, {onLeave: function (args) {send("u_strcmp");}});

var u_strcmpCodePointOrder = Module.findExportByName("icu.dll", "u_strcmpCodePointOrder")
Interceptor.attach(u_strcmpCodePointOrder, {onLeave: function (args) {send("u_strcmpCodePointOrder");}});

var u_strcpy = Module.findExportByName("icu.dll", "u_strcpy")
Interceptor.attach(u_strcpy, {onLeave: function (args) {send("u_strcpy");}});

var u_strcspn = Module.findExportByName("icu.dll", "u_strcspn")
Interceptor.attach(u_strcspn, {onLeave: function (args) {send("u_strcspn");}});

var u_strlen = Module.findExportByName("icu.dll", "u_strlen")
Interceptor.attach(u_strlen, {onLeave: function (args) {send("u_strlen");}});

var u_strncasecmp = Module.findExportByName("icu.dll", "u_strncasecmp")
Interceptor.attach(u_strncasecmp, {onLeave: function (args) {send("u_strncasecmp");}});

var u_strncat = Module.findExportByName("icu.dll", "u_strncat")
Interceptor.attach(u_strncat, {onLeave: function (args) {send("u_strncat");}});

var u_strncmp = Module.findExportByName("icu.dll", "u_strncmp")
Interceptor.attach(u_strncmp, {onLeave: function (args) {send("u_strncmp");}});

var u_strncmpCodePointOrder = Module.findExportByName("icu.dll", "u_strncmpCodePointOrder")
Interceptor.attach(u_strncmpCodePointOrder, {onLeave: function (args) {send("u_strncmpCodePointOrder");}});

var u_strncpy = Module.findExportByName("icu.dll", "u_strncpy")
Interceptor.attach(u_strncpy, {onLeave: function (args) {send("u_strncpy");}});

var u_strpbrk = Module.findExportByName("icu.dll", "u_strpbrk")
Interceptor.attach(u_strpbrk, {onLeave: function (args) {send("u_strpbrk");}});

var u_strrchr = Module.findExportByName("icu.dll", "u_strrchr")
Interceptor.attach(u_strrchr, {onLeave: function (args) {send("u_strrchr");}});

var u_strrchr32 = Module.findExportByName("icu.dll", "u_strrchr32")
Interceptor.attach(u_strrchr32, {onLeave: function (args) {send("u_strrchr32");}});

var u_strrstr = Module.findExportByName("icu.dll", "u_strrstr")
Interceptor.attach(u_strrstr, {onLeave: function (args) {send("u_strrstr");}});

var u_strspn = Module.findExportByName("icu.dll", "u_strspn")
Interceptor.attach(u_strspn, {onLeave: function (args) {send("u_strspn");}});

var u_strstr = Module.findExportByName("icu.dll", "u_strstr")
Interceptor.attach(u_strstr, {onLeave: function (args) {send("u_strstr");}});

var u_strtok_r = Module.findExportByName("icu.dll", "u_strtok_r")
Interceptor.attach(u_strtok_r, {onLeave: function (args) {send("u_strtok_r");}});

var u_tolower = Module.findExportByName("icu.dll", "u_tolower")
Interceptor.attach(u_tolower, {onLeave: function (args) {send("u_tolower");}});

var u_totitle = Module.findExportByName("icu.dll", "u_totitle")
Interceptor.attach(u_totitle, {onLeave: function (args) {send("u_totitle");}});

var u_toupper = Module.findExportByName("icu.dll", "u_toupper")
Interceptor.attach(u_toupper, {onLeave: function (args) {send("u_toupper");}});

var u_uastrcpy = Module.findExportByName("icu.dll", "u_uastrcpy")
Interceptor.attach(u_uastrcpy, {onLeave: function (args) {send("u_uastrcpy");}});

var u_uastrncpy = Module.findExportByName("icu.dll", "u_uastrncpy")
Interceptor.attach(u_uastrncpy, {onLeave: function (args) {send("u_uastrncpy");}});

var u_unescape = Module.findExportByName("icu.dll", "u_unescape")
Interceptor.attach(u_unescape, {onLeave: function (args) {send("u_unescape");}});

var u_unescapeAt = Module.findExportByName("icu.dll", "u_unescapeAt")
Interceptor.attach(u_unescapeAt, {onLeave: function (args) {send("u_unescapeAt");}});

var u_versionFromString = Module.findExportByName("icu.dll", "u_versionFromString")
Interceptor.attach(u_versionFromString, {onLeave: function (args) {send("u_versionFromString");}});

var u_versionFromUString = Module.findExportByName("icu.dll", "u_versionFromUString")
Interceptor.attach(u_versionFromUString, {onLeave: function (args) {send("u_versionFromUString");}});

var u_versionToString = Module.findExportByName("icu.dll", "u_versionToString")
Interceptor.attach(u_versionToString, {onLeave: function (args) {send("u_versionToString");}});

var u_vformatMessage = Module.findExportByName("icu.dll", "u_vformatMessage")
Interceptor.attach(u_vformatMessage, {onLeave: function (args) {send("u_vformatMessage");}});

var u_vformatMessageWithError = Module.findExportByName("icu.dll", "u_vformatMessageWithError")
Interceptor.attach(u_vformatMessageWithError, {onLeave: function (args) {send("u_vformatMessageWithError");}});

var u_vparseMessage = Module.findExportByName("icu.dll", "u_vparseMessage")
Interceptor.attach(u_vparseMessage, {onLeave: function (args) {send("u_vparseMessage");}});

var u_vparseMessageWithError = Module.findExportByName("icu.dll", "u_vparseMessageWithError")
Interceptor.attach(u_vparseMessageWithError, {onLeave: function (args) {send("u_vparseMessageWithError");}});

var ubidi_close = Module.findExportByName("icu.dll", "ubidi_close")
Interceptor.attach(ubidi_close, {onLeave: function (args) {send("ubidi_close");}});

var ubidi_countParagraphs = Module.findExportByName("icu.dll", "ubidi_countParagraphs")
Interceptor.attach(ubidi_countParagraphs, {onLeave: function (args) {send("ubidi_countParagraphs");}});

var ubidi_countRuns = Module.findExportByName("icu.dll", "ubidi_countRuns")
Interceptor.attach(ubidi_countRuns, {onLeave: function (args) {send("ubidi_countRuns");}});

var ubidi_getBaseDirection = Module.findExportByName("icu.dll", "ubidi_getBaseDirection")
Interceptor.attach(ubidi_getBaseDirection, {onLeave: function (args) {send("ubidi_getBaseDirection");}});

var ubidi_getClassCallback = Module.findExportByName("icu.dll", "ubidi_getClassCallback")
Interceptor.attach(ubidi_getClassCallback, {onLeave: function (args) {send("ubidi_getClassCallback");}});

var ubidi_getCustomizedClass = Module.findExportByName("icu.dll", "ubidi_getCustomizedClass")
Interceptor.attach(ubidi_getCustomizedClass, {onLeave: function (args) {send("ubidi_getCustomizedClass");}});

var ubidi_getDirection = Module.findExportByName("icu.dll", "ubidi_getDirection")
Interceptor.attach(ubidi_getDirection, {onLeave: function (args) {send("ubidi_getDirection");}});

var ubidi_getLength = Module.findExportByName("icu.dll", "ubidi_getLength")
Interceptor.attach(ubidi_getLength, {onLeave: function (args) {send("ubidi_getLength");}});

var ubidi_getLevelAt = Module.findExportByName("icu.dll", "ubidi_getLevelAt")
Interceptor.attach(ubidi_getLevelAt, {onLeave: function (args) {send("ubidi_getLevelAt");}});

var ubidi_getLevels = Module.findExportByName("icu.dll", "ubidi_getLevels")
Interceptor.attach(ubidi_getLevels, {onLeave: function (args) {send("ubidi_getLevels");}});

var ubidi_getLogicalIndex = Module.findExportByName("icu.dll", "ubidi_getLogicalIndex")
Interceptor.attach(ubidi_getLogicalIndex, {onLeave: function (args) {send("ubidi_getLogicalIndex");}});

var ubidi_getLogicalMap = Module.findExportByName("icu.dll", "ubidi_getLogicalMap")
Interceptor.attach(ubidi_getLogicalMap, {onLeave: function (args) {send("ubidi_getLogicalMap");}});

var ubidi_getLogicalRun = Module.findExportByName("icu.dll", "ubidi_getLogicalRun")
Interceptor.attach(ubidi_getLogicalRun, {onLeave: function (args) {send("ubidi_getLogicalRun");}});

var ubidi_getParaLevel = Module.findExportByName("icu.dll", "ubidi_getParaLevel")
Interceptor.attach(ubidi_getParaLevel, {onLeave: function (args) {send("ubidi_getParaLevel");}});

var ubidi_getParagraph = Module.findExportByName("icu.dll", "ubidi_getParagraph")
Interceptor.attach(ubidi_getParagraph, {onLeave: function (args) {send("ubidi_getParagraph");}});

var ubidi_getParagraphByIndex = Module.findExportByName("icu.dll", "ubidi_getParagraphByIndex")
Interceptor.attach(ubidi_getParagraphByIndex, {onLeave: function (args) {send("ubidi_getParagraphByIndex");}});

var ubidi_getProcessedLength = Module.findExportByName("icu.dll", "ubidi_getProcessedLength")
Interceptor.attach(ubidi_getProcessedLength, {onLeave: function (args) {send("ubidi_getProcessedLength");}});

var ubidi_getReorderingMode = Module.findExportByName("icu.dll", "ubidi_getReorderingMode")
Interceptor.attach(ubidi_getReorderingMode, {onLeave: function (args) {send("ubidi_getReorderingMode");}});

var ubidi_getReorderingOptions = Module.findExportByName("icu.dll", "ubidi_getReorderingOptions")
Interceptor.attach(ubidi_getReorderingOptions, {onLeave: function (args) {send("ubidi_getReorderingOptions");}});

var ubidi_getResultLength = Module.findExportByName("icu.dll", "ubidi_getResultLength")
Interceptor.attach(ubidi_getResultLength, {onLeave: function (args) {send("ubidi_getResultLength");}});

var ubidi_getText = Module.findExportByName("icu.dll", "ubidi_getText")
Interceptor.attach(ubidi_getText, {onLeave: function (args) {send("ubidi_getText");}});

var ubidi_getVisualIndex = Module.findExportByName("icu.dll", "ubidi_getVisualIndex")
Interceptor.attach(ubidi_getVisualIndex, {onLeave: function (args) {send("ubidi_getVisualIndex");}});

var ubidi_getVisualMap = Module.findExportByName("icu.dll", "ubidi_getVisualMap")
Interceptor.attach(ubidi_getVisualMap, {onLeave: function (args) {send("ubidi_getVisualMap");}});

var ubidi_getVisualRun = Module.findExportByName("icu.dll", "ubidi_getVisualRun")
Interceptor.attach(ubidi_getVisualRun, {onLeave: function (args) {send("ubidi_getVisualRun");}});

var ubidi_invertMap = Module.findExportByName("icu.dll", "ubidi_invertMap")
Interceptor.attach(ubidi_invertMap, {onLeave: function (args) {send("ubidi_invertMap");}});

var ubidi_isInverse = Module.findExportByName("icu.dll", "ubidi_isInverse")
Interceptor.attach(ubidi_isInverse, {onLeave: function (args) {send("ubidi_isInverse");}});

var ubidi_isOrderParagraphsLTR = Module.findExportByName("icu.dll", "ubidi_isOrderParagraphsLTR")
Interceptor.attach(ubidi_isOrderParagraphsLTR, {onLeave: function (args) {send("ubidi_isOrderParagraphsLTR");}});

var ubidi_open = Module.findExportByName("icu.dll", "ubidi_open")
Interceptor.attach(ubidi_open, {onLeave: function (args) {send("ubidi_open");}});

var ubidi_openSized = Module.findExportByName("icu.dll", "ubidi_openSized")
Interceptor.attach(ubidi_openSized, {onLeave: function (args) {send("ubidi_openSized");}});

var ubidi_orderParagraphsLTR = Module.findExportByName("icu.dll", "ubidi_orderParagraphsLTR")
Interceptor.attach(ubidi_orderParagraphsLTR, {onLeave: function (args) {send("ubidi_orderParagraphsLTR");}});

var ubidi_reorderLogical = Module.findExportByName("icu.dll", "ubidi_reorderLogical")
Interceptor.attach(ubidi_reorderLogical, {onLeave: function (args) {send("ubidi_reorderLogical");}});

var ubidi_reorderVisual = Module.findExportByName("icu.dll", "ubidi_reorderVisual")
Interceptor.attach(ubidi_reorderVisual, {onLeave: function (args) {send("ubidi_reorderVisual");}});

var ubidi_setClassCallback = Module.findExportByName("icu.dll", "ubidi_setClassCallback")
Interceptor.attach(ubidi_setClassCallback, {onLeave: function (args) {send("ubidi_setClassCallback");}});

var ubidi_setContext = Module.findExportByName("icu.dll", "ubidi_setContext")
Interceptor.attach(ubidi_setContext, {onLeave: function (args) {send("ubidi_setContext");}});

var ubidi_setInverse = Module.findExportByName("icu.dll", "ubidi_setInverse")
Interceptor.attach(ubidi_setInverse, {onLeave: function (args) {send("ubidi_setInverse");}});

var ubidi_setLine = Module.findExportByName("icu.dll", "ubidi_setLine")
Interceptor.attach(ubidi_setLine, {onLeave: function (args) {send("ubidi_setLine");}});

var ubidi_setPara = Module.findExportByName("icu.dll", "ubidi_setPara")
Interceptor.attach(ubidi_setPara, {onLeave: function (args) {send("ubidi_setPara");}});

var ubidi_setReorderingMode = Module.findExportByName("icu.dll", "ubidi_setReorderingMode")
Interceptor.attach(ubidi_setReorderingMode, {onLeave: function (args) {send("ubidi_setReorderingMode");}});

var ubidi_setReorderingOptions = Module.findExportByName("icu.dll", "ubidi_setReorderingOptions")
Interceptor.attach(ubidi_setReorderingOptions, {onLeave: function (args) {send("ubidi_setReorderingOptions");}});

var ubidi_writeReordered = Module.findExportByName("icu.dll", "ubidi_writeReordered")
Interceptor.attach(ubidi_writeReordered, {onLeave: function (args) {send("ubidi_writeReordered");}});

var ubidi_writeReverse = Module.findExportByName("icu.dll", "ubidi_writeReverse")
Interceptor.attach(ubidi_writeReverse, {onLeave: function (args) {send("ubidi_writeReverse");}});

var ubiditransform_close = Module.findExportByName("icu.dll", "ubiditransform_close")
Interceptor.attach(ubiditransform_close, {onLeave: function (args) {send("ubiditransform_close");}});

var ubiditransform_open = Module.findExportByName("icu.dll", "ubiditransform_open")
Interceptor.attach(ubiditransform_open, {onLeave: function (args) {send("ubiditransform_open");}});

var ubiditransform_transform = Module.findExportByName("icu.dll", "ubiditransform_transform")
Interceptor.attach(ubiditransform_transform, {onLeave: function (args) {send("ubiditransform_transform");}});

var ublock_getCode = Module.findExportByName("icu.dll", "ublock_getCode")
Interceptor.attach(ublock_getCode, {onLeave: function (args) {send("ublock_getCode");}});

var ubrk_close = Module.findExportByName("icu.dll", "ubrk_close")
Interceptor.attach(ubrk_close, {onLeave: function (args) {send("ubrk_close");}});

var ubrk_countAvailable = Module.findExportByName("icu.dll", "ubrk_countAvailable")
Interceptor.attach(ubrk_countAvailable, {onLeave: function (args) {send("ubrk_countAvailable");}});

var ubrk_current = Module.findExportByName("icu.dll", "ubrk_current")
Interceptor.attach(ubrk_current, {onLeave: function (args) {send("ubrk_current");}});

var ubrk_first = Module.findExportByName("icu.dll", "ubrk_first")
Interceptor.attach(ubrk_first, {onLeave: function (args) {send("ubrk_first");}});

var ubrk_following = Module.findExportByName("icu.dll", "ubrk_following")
Interceptor.attach(ubrk_following, {onLeave: function (args) {send("ubrk_following");}});

var ubrk_getAvailable = Module.findExportByName("icu.dll", "ubrk_getAvailable")
Interceptor.attach(ubrk_getAvailable, {onLeave: function (args) {send("ubrk_getAvailable");}});

var ubrk_getBinaryRules = Module.findExportByName("icu.dll", "ubrk_getBinaryRules")
Interceptor.attach(ubrk_getBinaryRules, {onLeave: function (args) {send("ubrk_getBinaryRules");}});

var ubrk_getLocaleByType = Module.findExportByName("icu.dll", "ubrk_getLocaleByType")
Interceptor.attach(ubrk_getLocaleByType, {onLeave: function (args) {send("ubrk_getLocaleByType");}});

var ubrk_getRuleStatus = Module.findExportByName("icu.dll", "ubrk_getRuleStatus")
Interceptor.attach(ubrk_getRuleStatus, {onLeave: function (args) {send("ubrk_getRuleStatus");}});

var ubrk_getRuleStatusVec = Module.findExportByName("icu.dll", "ubrk_getRuleStatusVec")
Interceptor.attach(ubrk_getRuleStatusVec, {onLeave: function (args) {send("ubrk_getRuleStatusVec");}});

var ubrk_isBoundary = Module.findExportByName("icu.dll", "ubrk_isBoundary")
Interceptor.attach(ubrk_isBoundary, {onLeave: function (args) {send("ubrk_isBoundary");}});

var ubrk_last = Module.findExportByName("icu.dll", "ubrk_last")
Interceptor.attach(ubrk_last, {onLeave: function (args) {send("ubrk_last");}});

var ubrk_next = Module.findExportByName("icu.dll", "ubrk_next")
Interceptor.attach(ubrk_next, {onLeave: function (args) {send("ubrk_next");}});

var ubrk_open = Module.findExportByName("icu.dll", "ubrk_open")
Interceptor.attach(ubrk_open, {onLeave: function (args) {send("ubrk_open");}});

var ubrk_openBinaryRules = Module.findExportByName("icu.dll", "ubrk_openBinaryRules")
Interceptor.attach(ubrk_openBinaryRules, {onLeave: function (args) {send("ubrk_openBinaryRules");}});

var ubrk_openRules = Module.findExportByName("icu.dll", "ubrk_openRules")
Interceptor.attach(ubrk_openRules, {onLeave: function (args) {send("ubrk_openRules");}});

var ubrk_preceding = Module.findExportByName("icu.dll", "ubrk_preceding")
Interceptor.attach(ubrk_preceding, {onLeave: function (args) {send("ubrk_preceding");}});

var ubrk_previous = Module.findExportByName("icu.dll", "ubrk_previous")
Interceptor.attach(ubrk_previous, {onLeave: function (args) {send("ubrk_previous");}});

var ubrk_refreshUText = Module.findExportByName("icu.dll", "ubrk_refreshUText")
Interceptor.attach(ubrk_refreshUText, {onLeave: function (args) {send("ubrk_refreshUText");}});

var ubrk_safeClone = Module.findExportByName("icu.dll", "ubrk_safeClone")
Interceptor.attach(ubrk_safeClone, {onLeave: function (args) {send("ubrk_safeClone");}});

var ubrk_setText = Module.findExportByName("icu.dll", "ubrk_setText")
Interceptor.attach(ubrk_setText, {onLeave: function (args) {send("ubrk_setText");}});

var ubrk_setUText = Module.findExportByName("icu.dll", "ubrk_setUText")
Interceptor.attach(ubrk_setUText, {onLeave: function (args) {send("ubrk_setUText");}});

var ucal_add = Module.findExportByName("icu.dll", "ucal_add")
Interceptor.attach(ucal_add, {onLeave: function (args) {send("ucal_add");}});

var ucal_clear = Module.findExportByName("icu.dll", "ucal_clear")
Interceptor.attach(ucal_clear, {onLeave: function (args) {send("ucal_clear");}});

var ucal_clearField = Module.findExportByName("icu.dll", "ucal_clearField")
Interceptor.attach(ucal_clearField, {onLeave: function (args) {send("ucal_clearField");}});

var ucal_clone = Module.findExportByName("icu.dll", "ucal_clone")
Interceptor.attach(ucal_clone, {onLeave: function (args) {send("ucal_clone");}});

var ucal_close = Module.findExportByName("icu.dll", "ucal_close")
Interceptor.attach(ucal_close, {onLeave: function (args) {send("ucal_close");}});

var ucal_countAvailable = Module.findExportByName("icu.dll", "ucal_countAvailable")
Interceptor.attach(ucal_countAvailable, {onLeave: function (args) {send("ucal_countAvailable");}});

var ucal_equivalentTo = Module.findExportByName("icu.dll", "ucal_equivalentTo")
Interceptor.attach(ucal_equivalentTo, {onLeave: function (args) {send("ucal_equivalentTo");}});

var ucal_get = Module.findExportByName("icu.dll", "ucal_get")
Interceptor.attach(ucal_get, {onLeave: function (args) {send("ucal_get");}});

var ucal_getAttribute = Module.findExportByName("icu.dll", "ucal_getAttribute")
Interceptor.attach(ucal_getAttribute, {onLeave: function (args) {send("ucal_getAttribute");}});

var ucal_getAvailable = Module.findExportByName("icu.dll", "ucal_getAvailable")
Interceptor.attach(ucal_getAvailable, {onLeave: function (args) {send("ucal_getAvailable");}});

var ucal_getCanonicalTimeZoneID = Module.findExportByName("icu.dll", "ucal_getCanonicalTimeZoneID")
Interceptor.attach(ucal_getCanonicalTimeZoneID, {onLeave: function (args) {send("ucal_getCanonicalTimeZoneID");}});

var ucal_getDSTSavings = Module.findExportByName("icu.dll", "ucal_getDSTSavings")
Interceptor.attach(ucal_getDSTSavings, {onLeave: function (args) {send("ucal_getDSTSavings");}});

var ucal_getDayOfWeekType = Module.findExportByName("icu.dll", "ucal_getDayOfWeekType")
Interceptor.attach(ucal_getDayOfWeekType, {onLeave: function (args) {send("ucal_getDayOfWeekType");}});

var ucal_getDefaultTimeZone = Module.findExportByName("icu.dll", "ucal_getDefaultTimeZone")
Interceptor.attach(ucal_getDefaultTimeZone, {onLeave: function (args) {send("ucal_getDefaultTimeZone");}});

var ucal_getFieldDifference = Module.findExportByName("icu.dll", "ucal_getFieldDifference")
Interceptor.attach(ucal_getFieldDifference, {onLeave: function (args) {send("ucal_getFieldDifference");}});

var ucal_getGregorianChange = Module.findExportByName("icu.dll", "ucal_getGregorianChange")
Interceptor.attach(ucal_getGregorianChange, {onLeave: function (args) {send("ucal_getGregorianChange");}});

var ucal_getHostTimeZone = Module.findExportByName("icu.dll", "ucal_getHostTimeZone")
Interceptor.attach(ucal_getHostTimeZone, {onLeave: function (args) {send("ucal_getHostTimeZone");}});

var ucal_getKeywordValuesForLocale = Module.findExportByName("icu.dll", "ucal_getKeywordValuesForLocale")
Interceptor.attach(ucal_getKeywordValuesForLocale, {onLeave: function (args) {send("ucal_getKeywordValuesForLocale");}});

var ucal_getLimit = Module.findExportByName("icu.dll", "ucal_getLimit")
Interceptor.attach(ucal_getLimit, {onLeave: function (args) {send("ucal_getLimit");}});

var ucal_getLocaleByType = Module.findExportByName("icu.dll", "ucal_getLocaleByType")
Interceptor.attach(ucal_getLocaleByType, {onLeave: function (args) {send("ucal_getLocaleByType");}});

var ucal_getMillis = Module.findExportByName("icu.dll", "ucal_getMillis")
Interceptor.attach(ucal_getMillis, {onLeave: function (args) {send("ucal_getMillis");}});

var ucal_getNow = Module.findExportByName("icu.dll", "ucal_getNow")
Interceptor.attach(ucal_getNow, {onLeave: function (args) {send("ucal_getNow");}});

var ucal_getTZDataVersion = Module.findExportByName("icu.dll", "ucal_getTZDataVersion")
Interceptor.attach(ucal_getTZDataVersion, {onLeave: function (args) {send("ucal_getTZDataVersion");}});

var ucal_getTimeZoneDisplayName = Module.findExportByName("icu.dll", "ucal_getTimeZoneDisplayName")
Interceptor.attach(ucal_getTimeZoneDisplayName, {onLeave: function (args) {send("ucal_getTimeZoneDisplayName");}});

var ucal_getTimeZoneID = Module.findExportByName("icu.dll", "ucal_getTimeZoneID")
Interceptor.attach(ucal_getTimeZoneID, {onLeave: function (args) {send("ucal_getTimeZoneID");}});

var ucal_getTimeZoneIDForWindowsID = Module.findExportByName("icu.dll", "ucal_getTimeZoneIDForWindowsID")
Interceptor.attach(ucal_getTimeZoneIDForWindowsID, {onLeave: function (args) {send("ucal_getTimeZoneIDForWindowsID");}});

var ucal_getTimeZoneTransitionDate = Module.findExportByName("icu.dll", "ucal_getTimeZoneTransitionDate")
Interceptor.attach(ucal_getTimeZoneTransitionDate, {onLeave: function (args) {send("ucal_getTimeZoneTransitionDate");}});

var ucal_getType = Module.findExportByName("icu.dll", "ucal_getType")
Interceptor.attach(ucal_getType, {onLeave: function (args) {send("ucal_getType");}});

var ucal_getWeekendTransition = Module.findExportByName("icu.dll", "ucal_getWeekendTransition")
Interceptor.attach(ucal_getWeekendTransition, {onLeave: function (args) {send("ucal_getWeekendTransition");}});

var ucal_getWindowsTimeZoneID = Module.findExportByName("icu.dll", "ucal_getWindowsTimeZoneID")
Interceptor.attach(ucal_getWindowsTimeZoneID, {onLeave: function (args) {send("ucal_getWindowsTimeZoneID");}});

var ucal_inDaylightTime = Module.findExportByName("icu.dll", "ucal_inDaylightTime")
Interceptor.attach(ucal_inDaylightTime, {onLeave: function (args) {send("ucal_inDaylightTime");}});

var ucal_isSet = Module.findExportByName("icu.dll", "ucal_isSet")
Interceptor.attach(ucal_isSet, {onLeave: function (args) {send("ucal_isSet");}});

var ucal_isWeekend = Module.findExportByName("icu.dll", "ucal_isWeekend")
Interceptor.attach(ucal_isWeekend, {onLeave: function (args) {send("ucal_isWeekend");}});

var ucal_open = Module.findExportByName("icu.dll", "ucal_open")
Interceptor.attach(ucal_open, {onLeave: function (args) {send("ucal_open");}});

var ucal_openCountryTimeZones = Module.findExportByName("icu.dll", "ucal_openCountryTimeZones")
Interceptor.attach(ucal_openCountryTimeZones, {onLeave: function (args) {send("ucal_openCountryTimeZones");}});

var ucal_openTimeZoneIDEnumeration = Module.findExportByName("icu.dll", "ucal_openTimeZoneIDEnumeration")
Interceptor.attach(ucal_openTimeZoneIDEnumeration, {onLeave: function (args) {send("ucal_openTimeZoneIDEnumeration");}});

var ucal_openTimeZones = Module.findExportByName("icu.dll", "ucal_openTimeZones")
Interceptor.attach(ucal_openTimeZones, {onLeave: function (args) {send("ucal_openTimeZones");}});

var ucal_roll = Module.findExportByName("icu.dll", "ucal_roll")
Interceptor.attach(ucal_roll, {onLeave: function (args) {send("ucal_roll");}});

var ucal_set = Module.findExportByName("icu.dll", "ucal_set")
Interceptor.attach(ucal_set, {onLeave: function (args) {send("ucal_set");}});

var ucal_setAttribute = Module.findExportByName("icu.dll", "ucal_setAttribute")
Interceptor.attach(ucal_setAttribute, {onLeave: function (args) {send("ucal_setAttribute");}});

var ucal_setDate = Module.findExportByName("icu.dll", "ucal_setDate")
Interceptor.attach(ucal_setDate, {onLeave: function (args) {send("ucal_setDate");}});

var ucal_setDateTime = Module.findExportByName("icu.dll", "ucal_setDateTime")
Interceptor.attach(ucal_setDateTime, {onLeave: function (args) {send("ucal_setDateTime");}});

var ucal_setDefaultTimeZone = Module.findExportByName("icu.dll", "ucal_setDefaultTimeZone")
Interceptor.attach(ucal_setDefaultTimeZone, {onLeave: function (args) {send("ucal_setDefaultTimeZone");}});

var ucal_setGregorianChange = Module.findExportByName("icu.dll", "ucal_setGregorianChange")
Interceptor.attach(ucal_setGregorianChange, {onLeave: function (args) {send("ucal_setGregorianChange");}});

var ucal_setMillis = Module.findExportByName("icu.dll", "ucal_setMillis")
Interceptor.attach(ucal_setMillis, {onLeave: function (args) {send("ucal_setMillis");}});

var ucal_setTimeZone = Module.findExportByName("icu.dll", "ucal_setTimeZone")
Interceptor.attach(ucal_setTimeZone, {onLeave: function (args) {send("ucal_setTimeZone");}});

var ucasemap_close = Module.findExportByName("icu.dll", "ucasemap_close")
Interceptor.attach(ucasemap_close, {onLeave: function (args) {send("ucasemap_close");}});

var ucasemap_getBreakIterator = Module.findExportByName("icu.dll", "ucasemap_getBreakIterator")
Interceptor.attach(ucasemap_getBreakIterator, {onLeave: function (args) {send("ucasemap_getBreakIterator");}});

var ucasemap_getLocale = Module.findExportByName("icu.dll", "ucasemap_getLocale")
Interceptor.attach(ucasemap_getLocale, {onLeave: function (args) {send("ucasemap_getLocale");}});

var ucasemap_getOptions = Module.findExportByName("icu.dll", "ucasemap_getOptions")
Interceptor.attach(ucasemap_getOptions, {onLeave: function (args) {send("ucasemap_getOptions");}});

var ucasemap_open = Module.findExportByName("icu.dll", "ucasemap_open")
Interceptor.attach(ucasemap_open, {onLeave: function (args) {send("ucasemap_open");}});

var ucasemap_setBreakIterator = Module.findExportByName("icu.dll", "ucasemap_setBreakIterator")
Interceptor.attach(ucasemap_setBreakIterator, {onLeave: function (args) {send("ucasemap_setBreakIterator");}});

var ucasemap_setLocale = Module.findExportByName("icu.dll", "ucasemap_setLocale")
Interceptor.attach(ucasemap_setLocale, {onLeave: function (args) {send("ucasemap_setLocale");}});

var ucasemap_setOptions = Module.findExportByName("icu.dll", "ucasemap_setOptions")
Interceptor.attach(ucasemap_setOptions, {onLeave: function (args) {send("ucasemap_setOptions");}});

var ucasemap_toTitle = Module.findExportByName("icu.dll", "ucasemap_toTitle")
Interceptor.attach(ucasemap_toTitle, {onLeave: function (args) {send("ucasemap_toTitle");}});

var ucasemap_utf8FoldCase = Module.findExportByName("icu.dll", "ucasemap_utf8FoldCase")
Interceptor.attach(ucasemap_utf8FoldCase, {onLeave: function (args) {send("ucasemap_utf8FoldCase");}});

var ucasemap_utf8ToLower = Module.findExportByName("icu.dll", "ucasemap_utf8ToLower")
Interceptor.attach(ucasemap_utf8ToLower, {onLeave: function (args) {send("ucasemap_utf8ToLower");}});

var ucasemap_utf8ToTitle = Module.findExportByName("icu.dll", "ucasemap_utf8ToTitle")
Interceptor.attach(ucasemap_utf8ToTitle, {onLeave: function (args) {send("ucasemap_utf8ToTitle");}});

var ucasemap_utf8ToUpper = Module.findExportByName("icu.dll", "ucasemap_utf8ToUpper")
Interceptor.attach(ucasemap_utf8ToUpper, {onLeave: function (args) {send("ucasemap_utf8ToUpper");}});

var ucfpos_close = Module.findExportByName("icu.dll", "ucfpos_close")
Interceptor.attach(ucfpos_close, {onLeave: function (args) {send("ucfpos_close");}});

var ucfpos_constrainCategory = Module.findExportByName("icu.dll", "ucfpos_constrainCategory")
Interceptor.attach(ucfpos_constrainCategory, {onLeave: function (args) {send("ucfpos_constrainCategory");}});

var ucfpos_constrainField = Module.findExportByName("icu.dll", "ucfpos_constrainField")
Interceptor.attach(ucfpos_constrainField, {onLeave: function (args) {send("ucfpos_constrainField");}});

var ucfpos_getCategory = Module.findExportByName("icu.dll", "ucfpos_getCategory")
Interceptor.attach(ucfpos_getCategory, {onLeave: function (args) {send("ucfpos_getCategory");}});

var ucfpos_getField = Module.findExportByName("icu.dll", "ucfpos_getField")
Interceptor.attach(ucfpos_getField, {onLeave: function (args) {send("ucfpos_getField");}});

var ucfpos_getIndexes = Module.findExportByName("icu.dll", "ucfpos_getIndexes")
Interceptor.attach(ucfpos_getIndexes, {onLeave: function (args) {send("ucfpos_getIndexes");}});

var ucfpos_getInt64IterationContext = Module.findExportByName("icu.dll", "ucfpos_getInt64IterationContext")
Interceptor.attach(ucfpos_getInt64IterationContext, {onLeave: function (args) {send("ucfpos_getInt64IterationContext");}});

var ucfpos_matchesField = Module.findExportByName("icu.dll", "ucfpos_matchesField")
Interceptor.attach(ucfpos_matchesField, {onLeave: function (args) {send("ucfpos_matchesField");}});

var ucfpos_open = Module.findExportByName("icu.dll", "ucfpos_open")
Interceptor.attach(ucfpos_open, {onLeave: function (args) {send("ucfpos_open");}});

var ucfpos_reset = Module.findExportByName("icu.dll", "ucfpos_reset")
Interceptor.attach(ucfpos_reset, {onLeave: function (args) {send("ucfpos_reset");}});

var ucfpos_setInt64IterationContext = Module.findExportByName("icu.dll", "ucfpos_setInt64IterationContext")
Interceptor.attach(ucfpos_setInt64IterationContext, {onLeave: function (args) {send("ucfpos_setInt64IterationContext");}});

var ucfpos_setState = Module.findExportByName("icu.dll", "ucfpos_setState")
Interceptor.attach(ucfpos_setState, {onLeave: function (args) {send("ucfpos_setState");}});

var ucnv_cbFromUWriteBytes = Module.findExportByName("icu.dll", "ucnv_cbFromUWriteBytes")
Interceptor.attach(ucnv_cbFromUWriteBytes, {onLeave: function (args) {send("ucnv_cbFromUWriteBytes");}});

var ucnv_cbFromUWriteSub = Module.findExportByName("icu.dll", "ucnv_cbFromUWriteSub")
Interceptor.attach(ucnv_cbFromUWriteSub, {onLeave: function (args) {send("ucnv_cbFromUWriteSub");}});

var ucnv_cbFromUWriteUChars = Module.findExportByName("icu.dll", "ucnv_cbFromUWriteUChars")
Interceptor.attach(ucnv_cbFromUWriteUChars, {onLeave: function (args) {send("ucnv_cbFromUWriteUChars");}});

var ucnv_cbToUWriteSub = Module.findExportByName("icu.dll", "ucnv_cbToUWriteSub")
Interceptor.attach(ucnv_cbToUWriteSub, {onLeave: function (args) {send("ucnv_cbToUWriteSub");}});

var ucnv_cbToUWriteUChars = Module.findExportByName("icu.dll", "ucnv_cbToUWriteUChars")
Interceptor.attach(ucnv_cbToUWriteUChars, {onLeave: function (args) {send("ucnv_cbToUWriteUChars");}});

var ucnv_close = Module.findExportByName("icu.dll", "ucnv_close")
Interceptor.attach(ucnv_close, {onLeave: function (args) {send("ucnv_close");}});

var ucnv_compareNames = Module.findExportByName("icu.dll", "ucnv_compareNames")
Interceptor.attach(ucnv_compareNames, {onLeave: function (args) {send("ucnv_compareNames");}});

var ucnv_convert = Module.findExportByName("icu.dll", "ucnv_convert")
Interceptor.attach(ucnv_convert, {onLeave: function (args) {send("ucnv_convert");}});

var ucnv_convertEx = Module.findExportByName("icu.dll", "ucnv_convertEx")
Interceptor.attach(ucnv_convertEx, {onLeave: function (args) {send("ucnv_convertEx");}});

var ucnv_countAliases = Module.findExportByName("icu.dll", "ucnv_countAliases")
Interceptor.attach(ucnv_countAliases, {onLeave: function (args) {send("ucnv_countAliases");}});

var ucnv_countAvailable = Module.findExportByName("icu.dll", "ucnv_countAvailable")
Interceptor.attach(ucnv_countAvailable, {onLeave: function (args) {send("ucnv_countAvailable");}});

var ucnv_countStandards = Module.findExportByName("icu.dll", "ucnv_countStandards")
Interceptor.attach(ucnv_countStandards, {onLeave: function (args) {send("ucnv_countStandards");}});

var ucnv_detectUnicodeSignature = Module.findExportByName("icu.dll", "ucnv_detectUnicodeSignature")
Interceptor.attach(ucnv_detectUnicodeSignature, {onLeave: function (args) {send("ucnv_detectUnicodeSignature");}});

var ucnv_fixFileSeparator = Module.findExportByName("icu.dll", "ucnv_fixFileSeparator")
Interceptor.attach(ucnv_fixFileSeparator, {onLeave: function (args) {send("ucnv_fixFileSeparator");}});

var ucnv_flushCache = Module.findExportByName("icu.dll", "ucnv_flushCache")
Interceptor.attach(ucnv_flushCache, {onLeave: function (args) {send("ucnv_flushCache");}});

var ucnv_fromAlgorithmic = Module.findExportByName("icu.dll", "ucnv_fromAlgorithmic")
Interceptor.attach(ucnv_fromAlgorithmic, {onLeave: function (args) {send("ucnv_fromAlgorithmic");}});

var ucnv_fromUChars = Module.findExportByName("icu.dll", "ucnv_fromUChars")
Interceptor.attach(ucnv_fromUChars, {onLeave: function (args) {send("ucnv_fromUChars");}});

var ucnv_fromUCountPending = Module.findExportByName("icu.dll", "ucnv_fromUCountPending")
Interceptor.attach(ucnv_fromUCountPending, {onLeave: function (args) {send("ucnv_fromUCountPending");}});

var ucnv_fromUnicode = Module.findExportByName("icu.dll", "ucnv_fromUnicode")
Interceptor.attach(ucnv_fromUnicode, {onLeave: function (args) {send("ucnv_fromUnicode");}});

var ucnv_getAlias = Module.findExportByName("icu.dll", "ucnv_getAlias")
Interceptor.attach(ucnv_getAlias, {onLeave: function (args) {send("ucnv_getAlias");}});

var ucnv_getAliases = Module.findExportByName("icu.dll", "ucnv_getAliases")
Interceptor.attach(ucnv_getAliases, {onLeave: function (args) {send("ucnv_getAliases");}});

var ucnv_getAvailableName = Module.findExportByName("icu.dll", "ucnv_getAvailableName")
Interceptor.attach(ucnv_getAvailableName, {onLeave: function (args) {send("ucnv_getAvailableName");}});

var ucnv_getCCSID = Module.findExportByName("icu.dll", "ucnv_getCCSID")
Interceptor.attach(ucnv_getCCSID, {onLeave: function (args) {send("ucnv_getCCSID");}});

var ucnv_getCanonicalName = Module.findExportByName("icu.dll", "ucnv_getCanonicalName")
Interceptor.attach(ucnv_getCanonicalName, {onLeave: function (args) {send("ucnv_getCanonicalName");}});

var ucnv_getDefaultName = Module.findExportByName("icu.dll", "ucnv_getDefaultName")
Interceptor.attach(ucnv_getDefaultName, {onLeave: function (args) {send("ucnv_getDefaultName");}});

var ucnv_getDisplayName = Module.findExportByName("icu.dll", "ucnv_getDisplayName")
Interceptor.attach(ucnv_getDisplayName, {onLeave: function (args) {send("ucnv_getDisplayName");}});

var ucnv_getFromUCallBack = Module.findExportByName("icu.dll", "ucnv_getFromUCallBack")
Interceptor.attach(ucnv_getFromUCallBack, {onLeave: function (args) {send("ucnv_getFromUCallBack");}});

var ucnv_getInvalidChars = Module.findExportByName("icu.dll", "ucnv_getInvalidChars")
Interceptor.attach(ucnv_getInvalidChars, {onLeave: function (args) {send("ucnv_getInvalidChars");}});

var ucnv_getInvalidUChars = Module.findExportByName("icu.dll", "ucnv_getInvalidUChars")
Interceptor.attach(ucnv_getInvalidUChars, {onLeave: function (args) {send("ucnv_getInvalidUChars");}});

var ucnv_getMaxCharSize = Module.findExportByName("icu.dll", "ucnv_getMaxCharSize")
Interceptor.attach(ucnv_getMaxCharSize, {onLeave: function (args) {send("ucnv_getMaxCharSize");}});

var ucnv_getMinCharSize = Module.findExportByName("icu.dll", "ucnv_getMinCharSize")
Interceptor.attach(ucnv_getMinCharSize, {onLeave: function (args) {send("ucnv_getMinCharSize");}});

var ucnv_getName = Module.findExportByName("icu.dll", "ucnv_getName")
Interceptor.attach(ucnv_getName, {onLeave: function (args) {send("ucnv_getName");}});

var ucnv_getNextUChar = Module.findExportByName("icu.dll", "ucnv_getNextUChar")
Interceptor.attach(ucnv_getNextUChar, {onLeave: function (args) {send("ucnv_getNextUChar");}});

var ucnv_getPlatform = Module.findExportByName("icu.dll", "ucnv_getPlatform")
Interceptor.attach(ucnv_getPlatform, {onLeave: function (args) {send("ucnv_getPlatform");}});

var ucnv_getStandard = Module.findExportByName("icu.dll", "ucnv_getStandard")
Interceptor.attach(ucnv_getStandard, {onLeave: function (args) {send("ucnv_getStandard");}});

var ucnv_getStandardName = Module.findExportByName("icu.dll", "ucnv_getStandardName")
Interceptor.attach(ucnv_getStandardName, {onLeave: function (args) {send("ucnv_getStandardName");}});

var ucnv_getStarters = Module.findExportByName("icu.dll", "ucnv_getStarters")
Interceptor.attach(ucnv_getStarters, {onLeave: function (args) {send("ucnv_getStarters");}});

var ucnv_getSubstChars = Module.findExportByName("icu.dll", "ucnv_getSubstChars")
Interceptor.attach(ucnv_getSubstChars, {onLeave: function (args) {send("ucnv_getSubstChars");}});

var ucnv_getToUCallBack = Module.findExportByName("icu.dll", "ucnv_getToUCallBack")
Interceptor.attach(ucnv_getToUCallBack, {onLeave: function (args) {send("ucnv_getToUCallBack");}});

var ucnv_getType = Module.findExportByName("icu.dll", "ucnv_getType")
Interceptor.attach(ucnv_getType, {onLeave: function (args) {send("ucnv_getType");}});

var ucnv_getUnicodeSet = Module.findExportByName("icu.dll", "ucnv_getUnicodeSet")
Interceptor.attach(ucnv_getUnicodeSet, {onLeave: function (args) {send("ucnv_getUnicodeSet");}});

var ucnv_isAmbiguous = Module.findExportByName("icu.dll", "ucnv_isAmbiguous")
Interceptor.attach(ucnv_isAmbiguous, {onLeave: function (args) {send("ucnv_isAmbiguous");}});

var ucnv_isFixedWidth = Module.findExportByName("icu.dll", "ucnv_isFixedWidth")
Interceptor.attach(ucnv_isFixedWidth, {onLeave: function (args) {send("ucnv_isFixedWidth");}});

var ucnv_open = Module.findExportByName("icu.dll", "ucnv_open")
Interceptor.attach(ucnv_open, {onLeave: function (args) {send("ucnv_open");}});

var ucnv_openAllNames = Module.findExportByName("icu.dll", "ucnv_openAllNames")
Interceptor.attach(ucnv_openAllNames, {onLeave: function (args) {send("ucnv_openAllNames");}});

var ucnv_openCCSID = Module.findExportByName("icu.dll", "ucnv_openCCSID")
Interceptor.attach(ucnv_openCCSID, {onLeave: function (args) {send("ucnv_openCCSID");}});

var ucnv_openPackage = Module.findExportByName("icu.dll", "ucnv_openPackage")
Interceptor.attach(ucnv_openPackage, {onLeave: function (args) {send("ucnv_openPackage");}});

var ucnv_openStandardNames = Module.findExportByName("icu.dll", "ucnv_openStandardNames")
Interceptor.attach(ucnv_openStandardNames, {onLeave: function (args) {send("ucnv_openStandardNames");}});

var ucnv_openU = Module.findExportByName("icu.dll", "ucnv_openU")
Interceptor.attach(ucnv_openU, {onLeave: function (args) {send("ucnv_openU");}});

var ucnv_reset = Module.findExportByName("icu.dll", "ucnv_reset")
Interceptor.attach(ucnv_reset, {onLeave: function (args) {send("ucnv_reset");}});

var ucnv_resetFromUnicode = Module.findExportByName("icu.dll", "ucnv_resetFromUnicode")
Interceptor.attach(ucnv_resetFromUnicode, {onLeave: function (args) {send("ucnv_resetFromUnicode");}});

var ucnv_resetToUnicode = Module.findExportByName("icu.dll", "ucnv_resetToUnicode")
Interceptor.attach(ucnv_resetToUnicode, {onLeave: function (args) {send("ucnv_resetToUnicode");}});

var ucnv_safeClone = Module.findExportByName("icu.dll", "ucnv_safeClone")
Interceptor.attach(ucnv_safeClone, {onLeave: function (args) {send("ucnv_safeClone");}});

var ucnv_setDefaultName = Module.findExportByName("icu.dll", "ucnv_setDefaultName")
Interceptor.attach(ucnv_setDefaultName, {onLeave: function (args) {send("ucnv_setDefaultName");}});

var ucnv_setFallback = Module.findExportByName("icu.dll", "ucnv_setFallback")
Interceptor.attach(ucnv_setFallback, {onLeave: function (args) {send("ucnv_setFallback");}});

var ucnv_setFromUCallBack = Module.findExportByName("icu.dll", "ucnv_setFromUCallBack")
Interceptor.attach(ucnv_setFromUCallBack, {onLeave: function (args) {send("ucnv_setFromUCallBack");}});

var ucnv_setSubstChars = Module.findExportByName("icu.dll", "ucnv_setSubstChars")
Interceptor.attach(ucnv_setSubstChars, {onLeave: function (args) {send("ucnv_setSubstChars");}});

var ucnv_setSubstString = Module.findExportByName("icu.dll", "ucnv_setSubstString")
Interceptor.attach(ucnv_setSubstString, {onLeave: function (args) {send("ucnv_setSubstString");}});

var ucnv_setToUCallBack = Module.findExportByName("icu.dll", "ucnv_setToUCallBack")
Interceptor.attach(ucnv_setToUCallBack, {onLeave: function (args) {send("ucnv_setToUCallBack");}});

var ucnv_toAlgorithmic = Module.findExportByName("icu.dll", "ucnv_toAlgorithmic")
Interceptor.attach(ucnv_toAlgorithmic, {onLeave: function (args) {send("ucnv_toAlgorithmic");}});

var ucnv_toUChars = Module.findExportByName("icu.dll", "ucnv_toUChars")
Interceptor.attach(ucnv_toUChars, {onLeave: function (args) {send("ucnv_toUChars");}});

var ucnv_toUCountPending = Module.findExportByName("icu.dll", "ucnv_toUCountPending")
Interceptor.attach(ucnv_toUCountPending, {onLeave: function (args) {send("ucnv_toUCountPending");}});

var ucnv_toUnicode = Module.findExportByName("icu.dll", "ucnv_toUnicode")
Interceptor.attach(ucnv_toUnicode, {onLeave: function (args) {send("ucnv_toUnicode");}});

var ucnv_usesFallback = Module.findExportByName("icu.dll", "ucnv_usesFallback")
Interceptor.attach(ucnv_usesFallback, {onLeave: function (args) {send("ucnv_usesFallback");}});

var ucnvsel_close = Module.findExportByName("icu.dll", "ucnvsel_close")
Interceptor.attach(ucnvsel_close, {onLeave: function (args) {send("ucnvsel_close");}});

var ucnvsel_open = Module.findExportByName("icu.dll", "ucnvsel_open")
Interceptor.attach(ucnvsel_open, {onLeave: function (args) {send("ucnvsel_open");}});

var ucnvsel_openFromSerialized = Module.findExportByName("icu.dll", "ucnvsel_openFromSerialized")
Interceptor.attach(ucnvsel_openFromSerialized, {onLeave: function (args) {send("ucnvsel_openFromSerialized");}});

var ucnvsel_selectForString = Module.findExportByName("icu.dll", "ucnvsel_selectForString")
Interceptor.attach(ucnvsel_selectForString, {onLeave: function (args) {send("ucnvsel_selectForString");}});

var ucnvsel_selectForUTF8 = Module.findExportByName("icu.dll", "ucnvsel_selectForUTF8")
Interceptor.attach(ucnvsel_selectForUTF8, {onLeave: function (args) {send("ucnvsel_selectForUTF8");}});

var ucnvsel_serialize = Module.findExportByName("icu.dll", "ucnvsel_serialize")
Interceptor.attach(ucnvsel_serialize, {onLeave: function (args) {send("ucnvsel_serialize");}});

var ucol_cloneBinary = Module.findExportByName("icu.dll", "ucol_cloneBinary")
Interceptor.attach(ucol_cloneBinary, {onLeave: function (args) {send("ucol_cloneBinary");}});

var ucol_close = Module.findExportByName("icu.dll", "ucol_close")
Interceptor.attach(ucol_close, {onLeave: function (args) {send("ucol_close");}});

var ucol_closeElements = Module.findExportByName("icu.dll", "ucol_closeElements")
Interceptor.attach(ucol_closeElements, {onLeave: function (args) {send("ucol_closeElements");}});

var ucol_countAvailable = Module.findExportByName("icu.dll", "ucol_countAvailable")
Interceptor.attach(ucol_countAvailable, {onLeave: function (args) {send("ucol_countAvailable");}});

var ucol_equal = Module.findExportByName("icu.dll", "ucol_equal")
Interceptor.attach(ucol_equal, {onLeave: function (args) {send("ucol_equal");}});

var ucol_getAttribute = Module.findExportByName("icu.dll", "ucol_getAttribute")
Interceptor.attach(ucol_getAttribute, {onLeave: function (args) {send("ucol_getAttribute");}});

var ucol_getAvailable = Module.findExportByName("icu.dll", "ucol_getAvailable")
Interceptor.attach(ucol_getAvailable, {onLeave: function (args) {send("ucol_getAvailable");}});

var ucol_getBound = Module.findExportByName("icu.dll", "ucol_getBound")
Interceptor.attach(ucol_getBound, {onLeave: function (args) {send("ucol_getBound");}});

var ucol_getContractionsAndExpansions = Module.findExportByName("icu.dll", "ucol_getContractionsAndExpansions")
Interceptor.attach(ucol_getContractionsAndExpansions, {onLeave: function (args) {send("ucol_getContractionsAndExpansions");}});

var ucol_getDisplayName = Module.findExportByName("icu.dll", "ucol_getDisplayName")
Interceptor.attach(ucol_getDisplayName, {onLeave: function (args) {send("ucol_getDisplayName");}});

var ucol_getEquivalentReorderCodes = Module.findExportByName("icu.dll", "ucol_getEquivalentReorderCodes")
Interceptor.attach(ucol_getEquivalentReorderCodes, {onLeave: function (args) {send("ucol_getEquivalentReorderCodes");}});

var ucol_getFunctionalEquivalent = Module.findExportByName("icu.dll", "ucol_getFunctionalEquivalent")
Interceptor.attach(ucol_getFunctionalEquivalent, {onLeave: function (args) {send("ucol_getFunctionalEquivalent");}});

var ucol_getKeywordValues = Module.findExportByName("icu.dll", "ucol_getKeywordValues")
Interceptor.attach(ucol_getKeywordValues, {onLeave: function (args) {send("ucol_getKeywordValues");}});

var ucol_getKeywordValuesForLocale = Module.findExportByName("icu.dll", "ucol_getKeywordValuesForLocale")
Interceptor.attach(ucol_getKeywordValuesForLocale, {onLeave: function (args) {send("ucol_getKeywordValuesForLocale");}});

var ucol_getKeywords = Module.findExportByName("icu.dll", "ucol_getKeywords")
Interceptor.attach(ucol_getKeywords, {onLeave: function (args) {send("ucol_getKeywords");}});

var ucol_getLocaleByType = Module.findExportByName("icu.dll", "ucol_getLocaleByType")
Interceptor.attach(ucol_getLocaleByType, {onLeave: function (args) {send("ucol_getLocaleByType");}});

var ucol_getMaxExpansion = Module.findExportByName("icu.dll", "ucol_getMaxExpansion")
Interceptor.attach(ucol_getMaxExpansion, {onLeave: function (args) {send("ucol_getMaxExpansion");}});

var ucol_getMaxVariable = Module.findExportByName("icu.dll", "ucol_getMaxVariable")
Interceptor.attach(ucol_getMaxVariable, {onLeave: function (args) {send("ucol_getMaxVariable");}});

var ucol_getOffset = Module.findExportByName("icu.dll", "ucol_getOffset")
Interceptor.attach(ucol_getOffset, {onLeave: function (args) {send("ucol_getOffset");}});

var ucol_getReorderCodes = Module.findExportByName("icu.dll", "ucol_getReorderCodes")
Interceptor.attach(ucol_getReorderCodes, {onLeave: function (args) {send("ucol_getReorderCodes");}});

var ucol_getRules = Module.findExportByName("icu.dll", "ucol_getRules")
Interceptor.attach(ucol_getRules, {onLeave: function (args) {send("ucol_getRules");}});

var ucol_getRulesEx = Module.findExportByName("icu.dll", "ucol_getRulesEx")
Interceptor.attach(ucol_getRulesEx, {onLeave: function (args) {send("ucol_getRulesEx");}});

var ucol_getSortKey = Module.findExportByName("icu.dll", "ucol_getSortKey")
Interceptor.attach(ucol_getSortKey, {onLeave: function (args) {send("ucol_getSortKey");}});

var ucol_getStrength = Module.findExportByName("icu.dll", "ucol_getStrength")
Interceptor.attach(ucol_getStrength, {onLeave: function (args) {send("ucol_getStrength");}});

var ucol_getTailoredSet = Module.findExportByName("icu.dll", "ucol_getTailoredSet")
Interceptor.attach(ucol_getTailoredSet, {onLeave: function (args) {send("ucol_getTailoredSet");}});

var ucol_getUCAVersion = Module.findExportByName("icu.dll", "ucol_getUCAVersion")
Interceptor.attach(ucol_getUCAVersion, {onLeave: function (args) {send("ucol_getUCAVersion");}});

var ucol_getVariableTop = Module.findExportByName("icu.dll", "ucol_getVariableTop")
Interceptor.attach(ucol_getVariableTop, {onLeave: function (args) {send("ucol_getVariableTop");}});

var ucol_getVersion = Module.findExportByName("icu.dll", "ucol_getVersion")
Interceptor.attach(ucol_getVersion, {onLeave: function (args) {send("ucol_getVersion");}});

var ucol_greater = Module.findExportByName("icu.dll", "ucol_greater")
Interceptor.attach(ucol_greater, {onLeave: function (args) {send("ucol_greater");}});

var ucol_greaterOrEqual = Module.findExportByName("icu.dll", "ucol_greaterOrEqual")
Interceptor.attach(ucol_greaterOrEqual, {onLeave: function (args) {send("ucol_greaterOrEqual");}});

var ucol_keyHashCode = Module.findExportByName("icu.dll", "ucol_keyHashCode")
Interceptor.attach(ucol_keyHashCode, {onLeave: function (args) {send("ucol_keyHashCode");}});

var ucol_mergeSortkeys = Module.findExportByName("icu.dll", "ucol_mergeSortkeys")
Interceptor.attach(ucol_mergeSortkeys, {onLeave: function (args) {send("ucol_mergeSortkeys");}});

var ucol_next = Module.findExportByName("icu.dll", "ucol_next")
Interceptor.attach(ucol_next, {onLeave: function (args) {send("ucol_next");}});

var ucol_nextSortKeyPart = Module.findExportByName("icu.dll", "ucol_nextSortKeyPart")
Interceptor.attach(ucol_nextSortKeyPart, {onLeave: function (args) {send("ucol_nextSortKeyPart");}});

var ucol_open = Module.findExportByName("icu.dll", "ucol_open")
Interceptor.attach(ucol_open, {onLeave: function (args) {send("ucol_open");}});

var ucol_openAvailableLocales = Module.findExportByName("icu.dll", "ucol_openAvailableLocales")
Interceptor.attach(ucol_openAvailableLocales, {onLeave: function (args) {send("ucol_openAvailableLocales");}});

var ucol_openBinary = Module.findExportByName("icu.dll", "ucol_openBinary")
Interceptor.attach(ucol_openBinary, {onLeave: function (args) {send("ucol_openBinary");}});

var ucol_openElements = Module.findExportByName("icu.dll", "ucol_openElements")
Interceptor.attach(ucol_openElements, {onLeave: function (args) {send("ucol_openElements");}});

var ucol_openRules = Module.findExportByName("icu.dll", "ucol_openRules")
Interceptor.attach(ucol_openRules, {onLeave: function (args) {send("ucol_openRules");}});

var ucol_previous = Module.findExportByName("icu.dll", "ucol_previous")
Interceptor.attach(ucol_previous, {onLeave: function (args) {send("ucol_previous");}});

var ucol_primaryOrder = Module.findExportByName("icu.dll", "ucol_primaryOrder")
Interceptor.attach(ucol_primaryOrder, {onLeave: function (args) {send("ucol_primaryOrder");}});

var ucol_reset = Module.findExportByName("icu.dll", "ucol_reset")
Interceptor.attach(ucol_reset, {onLeave: function (args) {send("ucol_reset");}});

var ucol_safeClone = Module.findExportByName("icu.dll", "ucol_safeClone")
Interceptor.attach(ucol_safeClone, {onLeave: function (args) {send("ucol_safeClone");}});

var ucol_secondaryOrder = Module.findExportByName("icu.dll", "ucol_secondaryOrder")
Interceptor.attach(ucol_secondaryOrder, {onLeave: function (args) {send("ucol_secondaryOrder");}});

var ucol_setAttribute = Module.findExportByName("icu.dll", "ucol_setAttribute")
Interceptor.attach(ucol_setAttribute, {onLeave: function (args) {send("ucol_setAttribute");}});

var ucol_setMaxVariable = Module.findExportByName("icu.dll", "ucol_setMaxVariable")
Interceptor.attach(ucol_setMaxVariable, {onLeave: function (args) {send("ucol_setMaxVariable");}});

var ucol_setOffset = Module.findExportByName("icu.dll", "ucol_setOffset")
Interceptor.attach(ucol_setOffset, {onLeave: function (args) {send("ucol_setOffset");}});

var ucol_setReorderCodes = Module.findExportByName("icu.dll", "ucol_setReorderCodes")
Interceptor.attach(ucol_setReorderCodes, {onLeave: function (args) {send("ucol_setReorderCodes");}});

var ucol_setStrength = Module.findExportByName("icu.dll", "ucol_setStrength")
Interceptor.attach(ucol_setStrength, {onLeave: function (args) {send("ucol_setStrength");}});

var ucol_setText = Module.findExportByName("icu.dll", "ucol_setText")
Interceptor.attach(ucol_setText, {onLeave: function (args) {send("ucol_setText");}});

var ucol_strcoll = Module.findExportByName("icu.dll", "ucol_strcoll")
Interceptor.attach(ucol_strcoll, {onLeave: function (args) {send("ucol_strcoll");}});

var ucol_strcollIter = Module.findExportByName("icu.dll", "ucol_strcollIter")
Interceptor.attach(ucol_strcollIter, {onLeave: function (args) {send("ucol_strcollIter");}});

var ucol_strcollUTF8 = Module.findExportByName("icu.dll", "ucol_strcollUTF8")
Interceptor.attach(ucol_strcollUTF8, {onLeave: function (args) {send("ucol_strcollUTF8");}});

var ucol_tertiaryOrder = Module.findExportByName("icu.dll", "ucol_tertiaryOrder")
Interceptor.attach(ucol_tertiaryOrder, {onLeave: function (args) {send("ucol_tertiaryOrder");}});

var ucpmap_get = Module.findExportByName("icu.dll", "ucpmap_get")
Interceptor.attach(ucpmap_get, {onLeave: function (args) {send("ucpmap_get");}});

var ucpmap_getRange = Module.findExportByName("icu.dll", "ucpmap_getRange")
Interceptor.attach(ucpmap_getRange, {onLeave: function (args) {send("ucpmap_getRange");}});

var ucptrie_close = Module.findExportByName("icu.dll", "ucptrie_close")
Interceptor.attach(ucptrie_close, {onLeave: function (args) {send("ucptrie_close");}});

var ucptrie_get = Module.findExportByName("icu.dll", "ucptrie_get")
Interceptor.attach(ucptrie_get, {onLeave: function (args) {send("ucptrie_get");}});

var ucptrie_getRange = Module.findExportByName("icu.dll", "ucptrie_getRange")
Interceptor.attach(ucptrie_getRange, {onLeave: function (args) {send("ucptrie_getRange");}});

var ucptrie_getType = Module.findExportByName("icu.dll", "ucptrie_getType")
Interceptor.attach(ucptrie_getType, {onLeave: function (args) {send("ucptrie_getType");}});

var ucptrie_getValueWidth = Module.findExportByName("icu.dll", "ucptrie_getValueWidth")
Interceptor.attach(ucptrie_getValueWidth, {onLeave: function (args) {send("ucptrie_getValueWidth");}});

var ucptrie_internalSmallIndex = Module.findExportByName("icu.dll", "ucptrie_internalSmallIndex")
Interceptor.attach(ucptrie_internalSmallIndex, {onLeave: function (args) {send("ucptrie_internalSmallIndex");}});

var ucptrie_internalSmallU8Index = Module.findExportByName("icu.dll", "ucptrie_internalSmallU8Index")
Interceptor.attach(ucptrie_internalSmallU8Index, {onLeave: function (args) {send("ucptrie_internalSmallU8Index");}});

var ucptrie_internalU8PrevIndex = Module.findExportByName("icu.dll", "ucptrie_internalU8PrevIndex")
Interceptor.attach(ucptrie_internalU8PrevIndex, {onLeave: function (args) {send("ucptrie_internalU8PrevIndex");}});

var ucptrie_openFromBinary = Module.findExportByName("icu.dll", "ucptrie_openFromBinary")
Interceptor.attach(ucptrie_openFromBinary, {onLeave: function (args) {send("ucptrie_openFromBinary");}});

var ucptrie_toBinary = Module.findExportByName("icu.dll", "ucptrie_toBinary")
Interceptor.attach(ucptrie_toBinary, {onLeave: function (args) {send("ucptrie_toBinary");}});

var ucsdet_close = Module.findExportByName("icu.dll", "ucsdet_close")
Interceptor.attach(ucsdet_close, {onLeave: function (args) {send("ucsdet_close");}});

var ucsdet_detect = Module.findExportByName("icu.dll", "ucsdet_detect")
Interceptor.attach(ucsdet_detect, {onLeave: function (args) {send("ucsdet_detect");}});

var ucsdet_detectAll = Module.findExportByName("icu.dll", "ucsdet_detectAll")
Interceptor.attach(ucsdet_detectAll, {onLeave: function (args) {send("ucsdet_detectAll");}});

var ucsdet_enableInputFilter = Module.findExportByName("icu.dll", "ucsdet_enableInputFilter")
Interceptor.attach(ucsdet_enableInputFilter, {onLeave: function (args) {send("ucsdet_enableInputFilter");}});

var ucsdet_getAllDetectableCharsets = Module.findExportByName("icu.dll", "ucsdet_getAllDetectableCharsets")
Interceptor.attach(ucsdet_getAllDetectableCharsets, {onLeave: function (args) {send("ucsdet_getAllDetectableCharsets");}});

var ucsdet_getConfidence = Module.findExportByName("icu.dll", "ucsdet_getConfidence")
Interceptor.attach(ucsdet_getConfidence, {onLeave: function (args) {send("ucsdet_getConfidence");}});

var ucsdet_getLanguage = Module.findExportByName("icu.dll", "ucsdet_getLanguage")
Interceptor.attach(ucsdet_getLanguage, {onLeave: function (args) {send("ucsdet_getLanguage");}});

var ucsdet_getName = Module.findExportByName("icu.dll", "ucsdet_getName")
Interceptor.attach(ucsdet_getName, {onLeave: function (args) {send("ucsdet_getName");}});

var ucsdet_getUChars = Module.findExportByName("icu.dll", "ucsdet_getUChars")
Interceptor.attach(ucsdet_getUChars, {onLeave: function (args) {send("ucsdet_getUChars");}});

var ucsdet_isInputFilterEnabled = Module.findExportByName("icu.dll", "ucsdet_isInputFilterEnabled")
Interceptor.attach(ucsdet_isInputFilterEnabled, {onLeave: function (args) {send("ucsdet_isInputFilterEnabled");}});

var ucsdet_open = Module.findExportByName("icu.dll", "ucsdet_open")
Interceptor.attach(ucsdet_open, {onLeave: function (args) {send("ucsdet_open");}});

var ucsdet_setDeclaredEncoding = Module.findExportByName("icu.dll", "ucsdet_setDeclaredEncoding")
Interceptor.attach(ucsdet_setDeclaredEncoding, {onLeave: function (args) {send("ucsdet_setDeclaredEncoding");}});

var ucsdet_setText = Module.findExportByName("icu.dll", "ucsdet_setText")
Interceptor.attach(ucsdet_setText, {onLeave: function (args) {send("ucsdet_setText");}});

var ucurr_countCurrencies = Module.findExportByName("icu.dll", "ucurr_countCurrencies")
Interceptor.attach(ucurr_countCurrencies, {onLeave: function (args) {send("ucurr_countCurrencies");}});

var ucurr_forLocale = Module.findExportByName("icu.dll", "ucurr_forLocale")
Interceptor.attach(ucurr_forLocale, {onLeave: function (args) {send("ucurr_forLocale");}});

var ucurr_forLocaleAndDate = Module.findExportByName("icu.dll", "ucurr_forLocaleAndDate")
Interceptor.attach(ucurr_forLocaleAndDate, {onLeave: function (args) {send("ucurr_forLocaleAndDate");}});

var ucurr_getDefaultFractionDigits = Module.findExportByName("icu.dll", "ucurr_getDefaultFractionDigits")
Interceptor.attach(ucurr_getDefaultFractionDigits, {onLeave: function (args) {send("ucurr_getDefaultFractionDigits");}});

var ucurr_getDefaultFractionDigitsForUsage = Module.findExportByName("icu.dll", "ucurr_getDefaultFractionDigitsForUsage")
Interceptor.attach(ucurr_getDefaultFractionDigitsForUsage, {onLeave: function (args) {send("ucurr_getDefaultFractionDigitsForUsage");}});

var ucurr_getKeywordValuesForLocale = Module.findExportByName("icu.dll", "ucurr_getKeywordValuesForLocale")
Interceptor.attach(ucurr_getKeywordValuesForLocale, {onLeave: function (args) {send("ucurr_getKeywordValuesForLocale");}});

var ucurr_getName = Module.findExportByName("icu.dll", "ucurr_getName")
Interceptor.attach(ucurr_getName, {onLeave: function (args) {send("ucurr_getName");}});

var ucurr_getNumericCode = Module.findExportByName("icu.dll", "ucurr_getNumericCode")
Interceptor.attach(ucurr_getNumericCode, {onLeave: function (args) {send("ucurr_getNumericCode");}});

var ucurr_getPluralName = Module.findExportByName("icu.dll", "ucurr_getPluralName")
Interceptor.attach(ucurr_getPluralName, {onLeave: function (args) {send("ucurr_getPluralName");}});

var ucurr_getRoundingIncrement = Module.findExportByName("icu.dll", "ucurr_getRoundingIncrement")
Interceptor.attach(ucurr_getRoundingIncrement, {onLeave: function (args) {send("ucurr_getRoundingIncrement");}});

var ucurr_getRoundingIncrementForUsage = Module.findExportByName("icu.dll", "ucurr_getRoundingIncrementForUsage")
Interceptor.attach(ucurr_getRoundingIncrementForUsage, {onLeave: function (args) {send("ucurr_getRoundingIncrementForUsage");}});

var ucurr_isAvailable = Module.findExportByName("icu.dll", "ucurr_isAvailable")
Interceptor.attach(ucurr_isAvailable, {onLeave: function (args) {send("ucurr_isAvailable");}});

var ucurr_openISOCurrencies = Module.findExportByName("icu.dll", "ucurr_openISOCurrencies")
Interceptor.attach(ucurr_openISOCurrencies, {onLeave: function (args) {send("ucurr_openISOCurrencies");}});

var ucurr_register = Module.findExportByName("icu.dll", "ucurr_register")
Interceptor.attach(ucurr_register, {onLeave: function (args) {send("ucurr_register");}});

var ucurr_unregister = Module.findExportByName("icu.dll", "ucurr_unregister")
Interceptor.attach(ucurr_unregister, {onLeave: function (args) {send("ucurr_unregister");}});

var udat_adoptNumberFormat = Module.findExportByName("icu.dll", "udat_adoptNumberFormat")
Interceptor.attach(udat_adoptNumberFormat, {onLeave: function (args) {send("udat_adoptNumberFormat");}});

var udat_adoptNumberFormatForFields = Module.findExportByName("icu.dll", "udat_adoptNumberFormatForFields")
Interceptor.attach(udat_adoptNumberFormatForFields, {onLeave: function (args) {send("udat_adoptNumberFormatForFields");}});

var udat_applyPattern = Module.findExportByName("icu.dll", "udat_applyPattern")
Interceptor.attach(udat_applyPattern, {onLeave: function (args) {send("udat_applyPattern");}});

var udat_clone = Module.findExportByName("icu.dll", "udat_clone")
Interceptor.attach(udat_clone, {onLeave: function (args) {send("udat_clone");}});

var udat_close = Module.findExportByName("icu.dll", "udat_close")
Interceptor.attach(udat_close, {onLeave: function (args) {send("udat_close");}});

var udat_countAvailable = Module.findExportByName("icu.dll", "udat_countAvailable")
Interceptor.attach(udat_countAvailable, {onLeave: function (args) {send("udat_countAvailable");}});

var udat_countSymbols = Module.findExportByName("icu.dll", "udat_countSymbols")
Interceptor.attach(udat_countSymbols, {onLeave: function (args) {send("udat_countSymbols");}});

var udat_format = Module.findExportByName("icu.dll", "udat_format")
Interceptor.attach(udat_format, {onLeave: function (args) {send("udat_format");}});

var udat_formatCalendar = Module.findExportByName("icu.dll", "udat_formatCalendar")
Interceptor.attach(udat_formatCalendar, {onLeave: function (args) {send("udat_formatCalendar");}});

var udat_formatCalendarForFields = Module.findExportByName("icu.dll", "udat_formatCalendarForFields")
Interceptor.attach(udat_formatCalendarForFields, {onLeave: function (args) {send("udat_formatCalendarForFields");}});

var udat_formatForFields = Module.findExportByName("icu.dll", "udat_formatForFields")
Interceptor.attach(udat_formatForFields, {onLeave: function (args) {send("udat_formatForFields");}});

var udat_get2DigitYearStart = Module.findExportByName("icu.dll", "udat_get2DigitYearStart")
Interceptor.attach(udat_get2DigitYearStart, {onLeave: function (args) {send("udat_get2DigitYearStart");}});

var udat_getAvailable = Module.findExportByName("icu.dll", "udat_getAvailable")
Interceptor.attach(udat_getAvailable, {onLeave: function (args) {send("udat_getAvailable");}});

var udat_getBooleanAttribute = Module.findExportByName("icu.dll", "udat_getBooleanAttribute")
Interceptor.attach(udat_getBooleanAttribute, {onLeave: function (args) {send("udat_getBooleanAttribute");}});

var udat_getCalendar = Module.findExportByName("icu.dll", "udat_getCalendar")
Interceptor.attach(udat_getCalendar, {onLeave: function (args) {send("udat_getCalendar");}});

var udat_getContext = Module.findExportByName("icu.dll", "udat_getContext")
Interceptor.attach(udat_getContext, {onLeave: function (args) {send("udat_getContext");}});

var udat_getLocaleByType = Module.findExportByName("icu.dll", "udat_getLocaleByType")
Interceptor.attach(udat_getLocaleByType, {onLeave: function (args) {send("udat_getLocaleByType");}});

var udat_getNumberFormat = Module.findExportByName("icu.dll", "udat_getNumberFormat")
Interceptor.attach(udat_getNumberFormat, {onLeave: function (args) {send("udat_getNumberFormat");}});

var udat_getNumberFormatForField = Module.findExportByName("icu.dll", "udat_getNumberFormatForField")
Interceptor.attach(udat_getNumberFormatForField, {onLeave: function (args) {send("udat_getNumberFormatForField");}});

var udat_getSymbols = Module.findExportByName("icu.dll", "udat_getSymbols")
Interceptor.attach(udat_getSymbols, {onLeave: function (args) {send("udat_getSymbols");}});

var udat_isLenient = Module.findExportByName("icu.dll", "udat_isLenient")
Interceptor.attach(udat_isLenient, {onLeave: function (args) {send("udat_isLenient");}});

var udat_open = Module.findExportByName("icu.dll", "udat_open")
Interceptor.attach(udat_open, {onLeave: function (args) {send("udat_open");}});

var udat_parse = Module.findExportByName("icu.dll", "udat_parse")
Interceptor.attach(udat_parse, {onLeave: function (args) {send("udat_parse");}});

var udat_parseCalendar = Module.findExportByName("icu.dll", "udat_parseCalendar")
Interceptor.attach(udat_parseCalendar, {onLeave: function (args) {send("udat_parseCalendar");}});

var udat_set2DigitYearStart = Module.findExportByName("icu.dll", "udat_set2DigitYearStart")
Interceptor.attach(udat_set2DigitYearStart, {onLeave: function (args) {send("udat_set2DigitYearStart");}});

var udat_setBooleanAttribute = Module.findExportByName("icu.dll", "udat_setBooleanAttribute")
Interceptor.attach(udat_setBooleanAttribute, {onLeave: function (args) {send("udat_setBooleanAttribute");}});

var udat_setCalendar = Module.findExportByName("icu.dll", "udat_setCalendar")
Interceptor.attach(udat_setCalendar, {onLeave: function (args) {send("udat_setCalendar");}});

var udat_setContext = Module.findExportByName("icu.dll", "udat_setContext")
Interceptor.attach(udat_setContext, {onLeave: function (args) {send("udat_setContext");}});

var udat_setLenient = Module.findExportByName("icu.dll", "udat_setLenient")
Interceptor.attach(udat_setLenient, {onLeave: function (args) {send("udat_setLenient");}});

var udat_setNumberFormat = Module.findExportByName("icu.dll", "udat_setNumberFormat")
Interceptor.attach(udat_setNumberFormat, {onLeave: function (args) {send("udat_setNumberFormat");}});

var udat_setSymbols = Module.findExportByName("icu.dll", "udat_setSymbols")
Interceptor.attach(udat_setSymbols, {onLeave: function (args) {send("udat_setSymbols");}});

var udat_toCalendarDateField = Module.findExportByName("icu.dll", "udat_toCalendarDateField")
Interceptor.attach(udat_toCalendarDateField, {onLeave: function (args) {send("udat_toCalendarDateField");}});

var udat_toPattern = Module.findExportByName("icu.dll", "udat_toPattern")
Interceptor.attach(udat_toPattern, {onLeave: function (args) {send("udat_toPattern");}});

var udatpg_addPattern = Module.findExportByName("icu.dll", "udatpg_addPattern")
Interceptor.attach(udatpg_addPattern, {onLeave: function (args) {send("udatpg_addPattern");}});

var udatpg_clone = Module.findExportByName("icu.dll", "udatpg_clone")
Interceptor.attach(udatpg_clone, {onLeave: function (args) {send("udatpg_clone");}});

var udatpg_close = Module.findExportByName("icu.dll", "udatpg_close")
Interceptor.attach(udatpg_close, {onLeave: function (args) {send("udatpg_close");}});

var udatpg_getAppendItemFormat = Module.findExportByName("icu.dll", "udatpg_getAppendItemFormat")
Interceptor.attach(udatpg_getAppendItemFormat, {onLeave: function (args) {send("udatpg_getAppendItemFormat");}});

var udatpg_getAppendItemName = Module.findExportByName("icu.dll", "udatpg_getAppendItemName")
Interceptor.attach(udatpg_getAppendItemName, {onLeave: function (args) {send("udatpg_getAppendItemName");}});

var udatpg_getBaseSkeleton = Module.findExportByName("icu.dll", "udatpg_getBaseSkeleton")
Interceptor.attach(udatpg_getBaseSkeleton, {onLeave: function (args) {send("udatpg_getBaseSkeleton");}});

var udatpg_getBestPattern = Module.findExportByName("icu.dll", "udatpg_getBestPattern")
Interceptor.attach(udatpg_getBestPattern, {onLeave: function (args) {send("udatpg_getBestPattern");}});

var udatpg_getBestPatternWithOptions = Module.findExportByName("icu.dll", "udatpg_getBestPatternWithOptions")
Interceptor.attach(udatpg_getBestPatternWithOptions, {onLeave: function (args) {send("udatpg_getBestPatternWithOptions");}});

var udatpg_getDateTimeFormat = Module.findExportByName("icu.dll", "udatpg_getDateTimeFormat")
Interceptor.attach(udatpg_getDateTimeFormat, {onLeave: function (args) {send("udatpg_getDateTimeFormat");}});

var udatpg_getDecimal = Module.findExportByName("icu.dll", "udatpg_getDecimal")
Interceptor.attach(udatpg_getDecimal, {onLeave: function (args) {send("udatpg_getDecimal");}});

var udatpg_getFieldDisplayName = Module.findExportByName("icu.dll", "udatpg_getFieldDisplayName")
Interceptor.attach(udatpg_getFieldDisplayName, {onLeave: function (args) {send("udatpg_getFieldDisplayName");}});

var udatpg_getPatternForSkeleton = Module.findExportByName("icu.dll", "udatpg_getPatternForSkeleton")
Interceptor.attach(udatpg_getPatternForSkeleton, {onLeave: function (args) {send("udatpg_getPatternForSkeleton");}});

var udatpg_getSkeleton = Module.findExportByName("icu.dll", "udatpg_getSkeleton")
Interceptor.attach(udatpg_getSkeleton, {onLeave: function (args) {send("udatpg_getSkeleton");}});

var udatpg_open = Module.findExportByName("icu.dll", "udatpg_open")
Interceptor.attach(udatpg_open, {onLeave: function (args) {send("udatpg_open");}});

var udatpg_openBaseSkeletons = Module.findExportByName("icu.dll", "udatpg_openBaseSkeletons")
Interceptor.attach(udatpg_openBaseSkeletons, {onLeave: function (args) {send("udatpg_openBaseSkeletons");}});

var udatpg_openEmpty = Module.findExportByName("icu.dll", "udatpg_openEmpty")
Interceptor.attach(udatpg_openEmpty, {onLeave: function (args) {send("udatpg_openEmpty");}});

var udatpg_openSkeletons = Module.findExportByName("icu.dll", "udatpg_openSkeletons")
Interceptor.attach(udatpg_openSkeletons, {onLeave: function (args) {send("udatpg_openSkeletons");}});

var udatpg_replaceFieldTypes = Module.findExportByName("icu.dll", "udatpg_replaceFieldTypes")
Interceptor.attach(udatpg_replaceFieldTypes, {onLeave: function (args) {send("udatpg_replaceFieldTypes");}});

var udatpg_replaceFieldTypesWithOptions = Module.findExportByName("icu.dll", "udatpg_replaceFieldTypesWithOptions")
Interceptor.attach(udatpg_replaceFieldTypesWithOptions, {onLeave: function (args) {send("udatpg_replaceFieldTypesWithOptions");}});

var udatpg_setAppendItemFormat = Module.findExportByName("icu.dll", "udatpg_setAppendItemFormat")
Interceptor.attach(udatpg_setAppendItemFormat, {onLeave: function (args) {send("udatpg_setAppendItemFormat");}});

var udatpg_setAppendItemName = Module.findExportByName("icu.dll", "udatpg_setAppendItemName")
Interceptor.attach(udatpg_setAppendItemName, {onLeave: function (args) {send("udatpg_setAppendItemName");}});

var udatpg_setDateTimeFormat = Module.findExportByName("icu.dll", "udatpg_setDateTimeFormat")
Interceptor.attach(udatpg_setDateTimeFormat, {onLeave: function (args) {send("udatpg_setDateTimeFormat");}});

var udatpg_setDecimal = Module.findExportByName("icu.dll", "udatpg_setDecimal")
Interceptor.attach(udatpg_setDecimal, {onLeave: function (args) {send("udatpg_setDecimal");}});

var udtitvfmt_close = Module.findExportByName("icu.dll", "udtitvfmt_close")
Interceptor.attach(udtitvfmt_close, {onLeave: function (args) {send("udtitvfmt_close");}});

var udtitvfmt_closeResult = Module.findExportByName("icu.dll", "udtitvfmt_closeResult")
Interceptor.attach(udtitvfmt_closeResult, {onLeave: function (args) {send("udtitvfmt_closeResult");}});

var udtitvfmt_format = Module.findExportByName("icu.dll", "udtitvfmt_format")
Interceptor.attach(udtitvfmt_format, {onLeave: function (args) {send("udtitvfmt_format");}});

var udtitvfmt_open = Module.findExportByName("icu.dll", "udtitvfmt_open")
Interceptor.attach(udtitvfmt_open, {onLeave: function (args) {send("udtitvfmt_open");}});

var udtitvfmt_openResult = Module.findExportByName("icu.dll", "udtitvfmt_openResult")
Interceptor.attach(udtitvfmt_openResult, {onLeave: function (args) {send("udtitvfmt_openResult");}});

var udtitvfmt_resultAsValue = Module.findExportByName("icu.dll", "udtitvfmt_resultAsValue")
Interceptor.attach(udtitvfmt_resultAsValue, {onLeave: function (args) {send("udtitvfmt_resultAsValue");}});

var uenum_close = Module.findExportByName("icu.dll", "uenum_close")
Interceptor.attach(uenum_close, {onLeave: function (args) {send("uenum_close");}});

var uenum_count = Module.findExportByName("icu.dll", "uenum_count")
Interceptor.attach(uenum_count, {onLeave: function (args) {send("uenum_count");}});

var uenum_next = Module.findExportByName("icu.dll", "uenum_next")
Interceptor.attach(uenum_next, {onLeave: function (args) {send("uenum_next");}});

var uenum_openCharStringsEnumeration = Module.findExportByName("icu.dll", "uenum_openCharStringsEnumeration")
Interceptor.attach(uenum_openCharStringsEnumeration, {onLeave: function (args) {send("uenum_openCharStringsEnumeration");}});

var uenum_openUCharStringsEnumeration = Module.findExportByName("icu.dll", "uenum_openUCharStringsEnumeration")
Interceptor.attach(uenum_openUCharStringsEnumeration, {onLeave: function (args) {send("uenum_openUCharStringsEnumeration");}});

var uenum_reset = Module.findExportByName("icu.dll", "uenum_reset")
Interceptor.attach(uenum_reset, {onLeave: function (args) {send("uenum_reset");}});

var uenum_unext = Module.findExportByName("icu.dll", "uenum_unext")
Interceptor.attach(uenum_unext, {onLeave: function (args) {send("uenum_unext");}});

var ufieldpositer_close = Module.findExportByName("icu.dll", "ufieldpositer_close")
Interceptor.attach(ufieldpositer_close, {onLeave: function (args) {send("ufieldpositer_close");}});

var ufieldpositer_next = Module.findExportByName("icu.dll", "ufieldpositer_next")
Interceptor.attach(ufieldpositer_next, {onLeave: function (args) {send("ufieldpositer_next");}});

var ufieldpositer_open = Module.findExportByName("icu.dll", "ufieldpositer_open")
Interceptor.attach(ufieldpositer_open, {onLeave: function (args) {send("ufieldpositer_open");}});

var ufmt_close = Module.findExportByName("icu.dll", "ufmt_close")
Interceptor.attach(ufmt_close, {onLeave: function (args) {send("ufmt_close");}});

var ufmt_getArrayItemByIndex = Module.findExportByName("icu.dll", "ufmt_getArrayItemByIndex")
Interceptor.attach(ufmt_getArrayItemByIndex, {onLeave: function (args) {send("ufmt_getArrayItemByIndex");}});

var ufmt_getArrayLength = Module.findExportByName("icu.dll", "ufmt_getArrayLength")
Interceptor.attach(ufmt_getArrayLength, {onLeave: function (args) {send("ufmt_getArrayLength");}});

var ufmt_getDate = Module.findExportByName("icu.dll", "ufmt_getDate")
Interceptor.attach(ufmt_getDate, {onLeave: function (args) {send("ufmt_getDate");}});

var ufmt_getDecNumChars = Module.findExportByName("icu.dll", "ufmt_getDecNumChars")
Interceptor.attach(ufmt_getDecNumChars, {onLeave: function (args) {send("ufmt_getDecNumChars");}});

var ufmt_getDouble = Module.findExportByName("icu.dll", "ufmt_getDouble")
Interceptor.attach(ufmt_getDouble, {onLeave: function (args) {send("ufmt_getDouble");}});

var ufmt_getInt64 = Module.findExportByName("icu.dll", "ufmt_getInt64")
Interceptor.attach(ufmt_getInt64, {onLeave: function (args) {send("ufmt_getInt64");}});

var ufmt_getLong = Module.findExportByName("icu.dll", "ufmt_getLong")
Interceptor.attach(ufmt_getLong, {onLeave: function (args) {send("ufmt_getLong");}});

var ufmt_getObject = Module.findExportByName("icu.dll", "ufmt_getObject")
Interceptor.attach(ufmt_getObject, {onLeave: function (args) {send("ufmt_getObject");}});

var ufmt_getType = Module.findExportByName("icu.dll", "ufmt_getType")
Interceptor.attach(ufmt_getType, {onLeave: function (args) {send("ufmt_getType");}});

var ufmt_getUChars = Module.findExportByName("icu.dll", "ufmt_getUChars")
Interceptor.attach(ufmt_getUChars, {onLeave: function (args) {send("ufmt_getUChars");}});

var ufmt_isNumeric = Module.findExportByName("icu.dll", "ufmt_isNumeric")
Interceptor.attach(ufmt_isNumeric, {onLeave: function (args) {send("ufmt_isNumeric");}});

var ufmt_open = Module.findExportByName("icu.dll", "ufmt_open")
Interceptor.attach(ufmt_open, {onLeave: function (args) {send("ufmt_open");}});

var ufmtval_getString = Module.findExportByName("icu.dll", "ufmtval_getString")
Interceptor.attach(ufmtval_getString, {onLeave: function (args) {send("ufmtval_getString");}});

var ufmtval_nextPosition = Module.findExportByName("icu.dll", "ufmtval_nextPosition")
Interceptor.attach(ufmtval_nextPosition, {onLeave: function (args) {send("ufmtval_nextPosition");}});

var ugender_getInstance = Module.findExportByName("icu.dll", "ugender_getInstance")
Interceptor.attach(ugender_getInstance, {onLeave: function (args) {send("ugender_getInstance");}});

var ugender_getListGender = Module.findExportByName("icu.dll", "ugender_getListGender")
Interceptor.attach(ugender_getListGender, {onLeave: function (args) {send("ugender_getListGender");}});

var uidna_close = Module.findExportByName("icu.dll", "uidna_close")
Interceptor.attach(uidna_close, {onLeave: function (args) {send("uidna_close");}});

var uidna_labelToASCII = Module.findExportByName("icu.dll", "uidna_labelToASCII")
Interceptor.attach(uidna_labelToASCII, {onLeave: function (args) {send("uidna_labelToASCII");}});

var uidna_labelToASCII_UTF8 = Module.findExportByName("icu.dll", "uidna_labelToASCII_UTF8")
Interceptor.attach(uidna_labelToASCII_UTF8, {onLeave: function (args) {send("uidna_labelToASCII_UTF8");}});

var uidna_labelToUnicode = Module.findExportByName("icu.dll", "uidna_labelToUnicode")
Interceptor.attach(uidna_labelToUnicode, {onLeave: function (args) {send("uidna_labelToUnicode");}});

var uidna_labelToUnicodeUTF8 = Module.findExportByName("icu.dll", "uidna_labelToUnicodeUTF8")
Interceptor.attach(uidna_labelToUnicodeUTF8, {onLeave: function (args) {send("uidna_labelToUnicodeUTF8");}});

var uidna_nameToASCII = Module.findExportByName("icu.dll", "uidna_nameToASCII")
Interceptor.attach(uidna_nameToASCII, {onLeave: function (args) {send("uidna_nameToASCII");}});

var uidna_nameToASCII_UTF8 = Module.findExportByName("icu.dll", "uidna_nameToASCII_UTF8")
Interceptor.attach(uidna_nameToASCII_UTF8, {onLeave: function (args) {send("uidna_nameToASCII_UTF8");}});

var uidna_nameToUnicode = Module.findExportByName("icu.dll", "uidna_nameToUnicode")
Interceptor.attach(uidna_nameToUnicode, {onLeave: function (args) {send("uidna_nameToUnicode");}});

var uidna_nameToUnicodeUTF8 = Module.findExportByName("icu.dll", "uidna_nameToUnicodeUTF8")
Interceptor.attach(uidna_nameToUnicodeUTF8, {onLeave: function (args) {send("uidna_nameToUnicodeUTF8");}});

var uidna_openUTS46 = Module.findExportByName("icu.dll", "uidna_openUTS46")
Interceptor.attach(uidna_openUTS46, {onLeave: function (args) {send("uidna_openUTS46");}});

var uiter_current32 = Module.findExportByName("icu.dll", "uiter_current32")
Interceptor.attach(uiter_current32, {onLeave: function (args) {send("uiter_current32");}});

var uiter_getState = Module.findExportByName("icu.dll", "uiter_getState")
Interceptor.attach(uiter_getState, {onLeave: function (args) {send("uiter_getState");}});

var uiter_next32 = Module.findExportByName("icu.dll", "uiter_next32")
Interceptor.attach(uiter_next32, {onLeave: function (args) {send("uiter_next32");}});

var uiter_previous32 = Module.findExportByName("icu.dll", "uiter_previous32")
Interceptor.attach(uiter_previous32, {onLeave: function (args) {send("uiter_previous32");}});

var uiter_setState = Module.findExportByName("icu.dll", "uiter_setState")
Interceptor.attach(uiter_setState, {onLeave: function (args) {send("uiter_setState");}});

var uiter_setString = Module.findExportByName("icu.dll", "uiter_setString")
Interceptor.attach(uiter_setString, {onLeave: function (args) {send("uiter_setString");}});

var uiter_setUTF16BE = Module.findExportByName("icu.dll", "uiter_setUTF16BE")
Interceptor.attach(uiter_setUTF16BE, {onLeave: function (args) {send("uiter_setUTF16BE");}});

var uiter_setUTF8 = Module.findExportByName("icu.dll", "uiter_setUTF8")
Interceptor.attach(uiter_setUTF8, {onLeave: function (args) {send("uiter_setUTF8");}});

var uldn_close = Module.findExportByName("icu.dll", "uldn_close")
Interceptor.attach(uldn_close, {onLeave: function (args) {send("uldn_close");}});

var uldn_getContext = Module.findExportByName("icu.dll", "uldn_getContext")
Interceptor.attach(uldn_getContext, {onLeave: function (args) {send("uldn_getContext");}});

var uldn_getDialectHandling = Module.findExportByName("icu.dll", "uldn_getDialectHandling")
Interceptor.attach(uldn_getDialectHandling, {onLeave: function (args) {send("uldn_getDialectHandling");}});

var uldn_getLocale = Module.findExportByName("icu.dll", "uldn_getLocale")
Interceptor.attach(uldn_getLocale, {onLeave: function (args) {send("uldn_getLocale");}});

var uldn_keyDisplayName = Module.findExportByName("icu.dll", "uldn_keyDisplayName")
Interceptor.attach(uldn_keyDisplayName, {onLeave: function (args) {send("uldn_keyDisplayName");}});

var uldn_keyValueDisplayName = Module.findExportByName("icu.dll", "uldn_keyValueDisplayName")
Interceptor.attach(uldn_keyValueDisplayName, {onLeave: function (args) {send("uldn_keyValueDisplayName");}});

var uldn_languageDisplayName = Module.findExportByName("icu.dll", "uldn_languageDisplayName")
Interceptor.attach(uldn_languageDisplayName, {onLeave: function (args) {send("uldn_languageDisplayName");}});

var uldn_localeDisplayName = Module.findExportByName("icu.dll", "uldn_localeDisplayName")
Interceptor.attach(uldn_localeDisplayName, {onLeave: function (args) {send("uldn_localeDisplayName");}});

var uldn_open = Module.findExportByName("icu.dll", "uldn_open")
Interceptor.attach(uldn_open, {onLeave: function (args) {send("uldn_open");}});

var uldn_openForContext = Module.findExportByName("icu.dll", "uldn_openForContext")
Interceptor.attach(uldn_openForContext, {onLeave: function (args) {send("uldn_openForContext");}});

var uldn_regionDisplayName = Module.findExportByName("icu.dll", "uldn_regionDisplayName")
Interceptor.attach(uldn_regionDisplayName, {onLeave: function (args) {send("uldn_regionDisplayName");}});

var uldn_scriptCodeDisplayName = Module.findExportByName("icu.dll", "uldn_scriptCodeDisplayName")
Interceptor.attach(uldn_scriptCodeDisplayName, {onLeave: function (args) {send("uldn_scriptCodeDisplayName");}});

var uldn_scriptDisplayName = Module.findExportByName("icu.dll", "uldn_scriptDisplayName")
Interceptor.attach(uldn_scriptDisplayName, {onLeave: function (args) {send("uldn_scriptDisplayName");}});

var uldn_variantDisplayName = Module.findExportByName("icu.dll", "uldn_variantDisplayName")
Interceptor.attach(uldn_variantDisplayName, {onLeave: function (args) {send("uldn_variantDisplayName");}});

var ulistfmt_close = Module.findExportByName("icu.dll", "ulistfmt_close")
Interceptor.attach(ulistfmt_close, {onLeave: function (args) {send("ulistfmt_close");}});

var ulistfmt_closeResult = Module.findExportByName("icu.dll", "ulistfmt_closeResult")
Interceptor.attach(ulistfmt_closeResult, {onLeave: function (args) {send("ulistfmt_closeResult");}});

var ulistfmt_format = Module.findExportByName("icu.dll", "ulistfmt_format")
Interceptor.attach(ulistfmt_format, {onLeave: function (args) {send("ulistfmt_format");}});

var ulistfmt_formatStringsToResult = Module.findExportByName("icu.dll", "ulistfmt_formatStringsToResult")
Interceptor.attach(ulistfmt_formatStringsToResult, {onLeave: function (args) {send("ulistfmt_formatStringsToResult");}});

var ulistfmt_open = Module.findExportByName("icu.dll", "ulistfmt_open")
Interceptor.attach(ulistfmt_open, {onLeave: function (args) {send("ulistfmt_open");}});

var ulistfmt_openForType = Module.findExportByName("icu.dll", "ulistfmt_openForType")
Interceptor.attach(ulistfmt_openForType, {onLeave: function (args) {send("ulistfmt_openForType");}});

var ulistfmt_openResult = Module.findExportByName("icu.dll", "ulistfmt_openResult")
Interceptor.attach(ulistfmt_openResult, {onLeave: function (args) {send("ulistfmt_openResult");}});

var ulistfmt_resultAsValue = Module.findExportByName("icu.dll", "ulistfmt_resultAsValue")
Interceptor.attach(ulistfmt_resultAsValue, {onLeave: function (args) {send("ulistfmt_resultAsValue");}});

var uloc_acceptLanguage = Module.findExportByName("icu.dll", "uloc_acceptLanguage")
Interceptor.attach(uloc_acceptLanguage, {onLeave: function (args) {send("uloc_acceptLanguage");}});

var uloc_acceptLanguageFromHTTP = Module.findExportByName("icu.dll", "uloc_acceptLanguageFromHTTP")
Interceptor.attach(uloc_acceptLanguageFromHTTP, {onLeave: function (args) {send("uloc_acceptLanguageFromHTTP");}});

var uloc_addLikelySubtags = Module.findExportByName("icu.dll", "uloc_addLikelySubtags")
Interceptor.attach(uloc_addLikelySubtags, {onLeave: function (args) {send("uloc_addLikelySubtags");}});

var uloc_canonicalize = Module.findExportByName("icu.dll", "uloc_canonicalize")
Interceptor.attach(uloc_canonicalize, {onLeave: function (args) {send("uloc_canonicalize");}});

var uloc_countAvailable = Module.findExportByName("icu.dll", "uloc_countAvailable")
Interceptor.attach(uloc_countAvailable, {onLeave: function (args) {send("uloc_countAvailable");}});

var uloc_forLanguageTag = Module.findExportByName("icu.dll", "uloc_forLanguageTag")
Interceptor.attach(uloc_forLanguageTag, {onLeave: function (args) {send("uloc_forLanguageTag");}});

var uloc_getAvailable = Module.findExportByName("icu.dll", "uloc_getAvailable")
Interceptor.attach(uloc_getAvailable, {onLeave: function (args) {send("uloc_getAvailable");}});

var uloc_getBaseName = Module.findExportByName("icu.dll", "uloc_getBaseName")
Interceptor.attach(uloc_getBaseName, {onLeave: function (args) {send("uloc_getBaseName");}});

var uloc_getCharacterOrientation = Module.findExportByName("icu.dll", "uloc_getCharacterOrientation")
Interceptor.attach(uloc_getCharacterOrientation, {onLeave: function (args) {send("uloc_getCharacterOrientation");}});

var uloc_getCountry = Module.findExportByName("icu.dll", "uloc_getCountry")
Interceptor.attach(uloc_getCountry, {onLeave: function (args) {send("uloc_getCountry");}});

var uloc_getDefault = Module.findExportByName("icu.dll", "uloc_getDefault")
Interceptor.attach(uloc_getDefault, {onLeave: function (args) {send("uloc_getDefault");}});

var uloc_getDisplayCountry = Module.findExportByName("icu.dll", "uloc_getDisplayCountry")
Interceptor.attach(uloc_getDisplayCountry, {onLeave: function (args) {send("uloc_getDisplayCountry");}});

var uloc_getDisplayKeyword = Module.findExportByName("icu.dll", "uloc_getDisplayKeyword")
Interceptor.attach(uloc_getDisplayKeyword, {onLeave: function (args) {send("uloc_getDisplayKeyword");}});

var uloc_getDisplayKeywordValue = Module.findExportByName("icu.dll", "uloc_getDisplayKeywordValue")
Interceptor.attach(uloc_getDisplayKeywordValue, {onLeave: function (args) {send("uloc_getDisplayKeywordValue");}});

var uloc_getDisplayLanguage = Module.findExportByName("icu.dll", "uloc_getDisplayLanguage")
Interceptor.attach(uloc_getDisplayLanguage, {onLeave: function (args) {send("uloc_getDisplayLanguage");}});

var uloc_getDisplayName = Module.findExportByName("icu.dll", "uloc_getDisplayName")
Interceptor.attach(uloc_getDisplayName, {onLeave: function (args) {send("uloc_getDisplayName");}});

var uloc_getDisplayScript = Module.findExportByName("icu.dll", "uloc_getDisplayScript")
Interceptor.attach(uloc_getDisplayScript, {onLeave: function (args) {send("uloc_getDisplayScript");}});

var uloc_getDisplayVariant = Module.findExportByName("icu.dll", "uloc_getDisplayVariant")
Interceptor.attach(uloc_getDisplayVariant, {onLeave: function (args) {send("uloc_getDisplayVariant");}});

var uloc_getISO3Country = Module.findExportByName("icu.dll", "uloc_getISO3Country")
Interceptor.attach(uloc_getISO3Country, {onLeave: function (args) {send("uloc_getISO3Country");}});

var uloc_getISO3Language = Module.findExportByName("icu.dll", "uloc_getISO3Language")
Interceptor.attach(uloc_getISO3Language, {onLeave: function (args) {send("uloc_getISO3Language");}});

var uloc_getISOCountries = Module.findExportByName("icu.dll", "uloc_getISOCountries")
Interceptor.attach(uloc_getISOCountries, {onLeave: function (args) {send("uloc_getISOCountries");}});

var uloc_getISOLanguages = Module.findExportByName("icu.dll", "uloc_getISOLanguages")
Interceptor.attach(uloc_getISOLanguages, {onLeave: function (args) {send("uloc_getISOLanguages");}});

var uloc_getKeywordValue = Module.findExportByName("icu.dll", "uloc_getKeywordValue")
Interceptor.attach(uloc_getKeywordValue, {onLeave: function (args) {send("uloc_getKeywordValue");}});

var uloc_getLCID = Module.findExportByName("icu.dll", "uloc_getLCID")
Interceptor.attach(uloc_getLCID, {onLeave: function (args) {send("uloc_getLCID");}});

var uloc_getLanguage = Module.findExportByName("icu.dll", "uloc_getLanguage")
Interceptor.attach(uloc_getLanguage, {onLeave: function (args) {send("uloc_getLanguage");}});

var uloc_getLineOrientation = Module.findExportByName("icu.dll", "uloc_getLineOrientation")
Interceptor.attach(uloc_getLineOrientation, {onLeave: function (args) {send("uloc_getLineOrientation");}});

var uloc_getLocaleForLCID = Module.findExportByName("icu.dll", "uloc_getLocaleForLCID")
Interceptor.attach(uloc_getLocaleForLCID, {onLeave: function (args) {send("uloc_getLocaleForLCID");}});

var uloc_getName = Module.findExportByName("icu.dll", "uloc_getName")
Interceptor.attach(uloc_getName, {onLeave: function (args) {send("uloc_getName");}});

var uloc_getParent = Module.findExportByName("icu.dll", "uloc_getParent")
Interceptor.attach(uloc_getParent, {onLeave: function (args) {send("uloc_getParent");}});

var uloc_getScript = Module.findExportByName("icu.dll", "uloc_getScript")
Interceptor.attach(uloc_getScript, {onLeave: function (args) {send("uloc_getScript");}});

var uloc_getVariant = Module.findExportByName("icu.dll", "uloc_getVariant")
Interceptor.attach(uloc_getVariant, {onLeave: function (args) {send("uloc_getVariant");}});

var uloc_isRightToLeft = Module.findExportByName("icu.dll", "uloc_isRightToLeft")
Interceptor.attach(uloc_isRightToLeft, {onLeave: function (args) {send("uloc_isRightToLeft");}});

var uloc_minimizeSubtags = Module.findExportByName("icu.dll", "uloc_minimizeSubtags")
Interceptor.attach(uloc_minimizeSubtags, {onLeave: function (args) {send("uloc_minimizeSubtags");}});

var uloc_openAvailableByType = Module.findExportByName("icu.dll", "uloc_openAvailableByType")
Interceptor.attach(uloc_openAvailableByType, {onLeave: function (args) {send("uloc_openAvailableByType");}});

var uloc_openKeywords = Module.findExportByName("icu.dll", "uloc_openKeywords")
Interceptor.attach(uloc_openKeywords, {onLeave: function (args) {send("uloc_openKeywords");}});

var uloc_setDefault = Module.findExportByName("icu.dll", "uloc_setDefault")
Interceptor.attach(uloc_setDefault, {onLeave: function (args) {send("uloc_setDefault");}});

var uloc_setKeywordValue = Module.findExportByName("icu.dll", "uloc_setKeywordValue")
Interceptor.attach(uloc_setKeywordValue, {onLeave: function (args) {send("uloc_setKeywordValue");}});

var uloc_toLanguageTag = Module.findExportByName("icu.dll", "uloc_toLanguageTag")
Interceptor.attach(uloc_toLanguageTag, {onLeave: function (args) {send("uloc_toLanguageTag");}});

var uloc_toLegacyKey = Module.findExportByName("icu.dll", "uloc_toLegacyKey")
Interceptor.attach(uloc_toLegacyKey, {onLeave: function (args) {send("uloc_toLegacyKey");}});

var uloc_toLegacyType = Module.findExportByName("icu.dll", "uloc_toLegacyType")
Interceptor.attach(uloc_toLegacyType, {onLeave: function (args) {send("uloc_toLegacyType");}});

var uloc_toUnicodeLocaleKey = Module.findExportByName("icu.dll", "uloc_toUnicodeLocaleKey")
Interceptor.attach(uloc_toUnicodeLocaleKey, {onLeave: function (args) {send("uloc_toUnicodeLocaleKey");}});

var uloc_toUnicodeLocaleType = Module.findExportByName("icu.dll", "uloc_toUnicodeLocaleType")
Interceptor.attach(uloc_toUnicodeLocaleType, {onLeave: function (args) {send("uloc_toUnicodeLocaleType");}});

var ulocdata_close = Module.findExportByName("icu.dll", "ulocdata_close")
Interceptor.attach(ulocdata_close, {onLeave: function (args) {send("ulocdata_close");}});

var ulocdata_getCLDRVersion = Module.findExportByName("icu.dll", "ulocdata_getCLDRVersion")
Interceptor.attach(ulocdata_getCLDRVersion, {onLeave: function (args) {send("ulocdata_getCLDRVersion");}});

var ulocdata_getDelimiter = Module.findExportByName("icu.dll", "ulocdata_getDelimiter")
Interceptor.attach(ulocdata_getDelimiter, {onLeave: function (args) {send("ulocdata_getDelimiter");}});

var ulocdata_getExemplarSet = Module.findExportByName("icu.dll", "ulocdata_getExemplarSet")
Interceptor.attach(ulocdata_getExemplarSet, {onLeave: function (args) {send("ulocdata_getExemplarSet");}});

var ulocdata_getLocaleDisplayPattern = Module.findExportByName("icu.dll", "ulocdata_getLocaleDisplayPattern")
Interceptor.attach(ulocdata_getLocaleDisplayPattern, {onLeave: function (args) {send("ulocdata_getLocaleDisplayPattern");}});

var ulocdata_getLocaleSeparator = Module.findExportByName("icu.dll", "ulocdata_getLocaleSeparator")
Interceptor.attach(ulocdata_getLocaleSeparator, {onLeave: function (args) {send("ulocdata_getLocaleSeparator");}});

var ulocdata_getMeasurementSystem = Module.findExportByName("icu.dll", "ulocdata_getMeasurementSystem")
Interceptor.attach(ulocdata_getMeasurementSystem, {onLeave: function (args) {send("ulocdata_getMeasurementSystem");}});

var ulocdata_getNoSubstitute = Module.findExportByName("icu.dll", "ulocdata_getNoSubstitute")
Interceptor.attach(ulocdata_getNoSubstitute, {onLeave: function (args) {send("ulocdata_getNoSubstitute");}});

var ulocdata_getPaperSize = Module.findExportByName("icu.dll", "ulocdata_getPaperSize")
Interceptor.attach(ulocdata_getPaperSize, {onLeave: function (args) {send("ulocdata_getPaperSize");}});

var ulocdata_open = Module.findExportByName("icu.dll", "ulocdata_open")
Interceptor.attach(ulocdata_open, {onLeave: function (args) {send("ulocdata_open");}});

var ulocdata_setNoSubstitute = Module.findExportByName("icu.dll", "ulocdata_setNoSubstitute")
Interceptor.attach(ulocdata_setNoSubstitute, {onLeave: function (args) {send("ulocdata_setNoSubstitute");}});

var umsg_applyPattern = Module.findExportByName("icu.dll", "umsg_applyPattern")
Interceptor.attach(umsg_applyPattern, {onLeave: function (args) {send("umsg_applyPattern");}});

var umsg_autoQuoteApostrophe = Module.findExportByName("icu.dll", "umsg_autoQuoteApostrophe")
Interceptor.attach(umsg_autoQuoteApostrophe, {onLeave: function (args) {send("umsg_autoQuoteApostrophe");}});

var umsg_clone = Module.findExportByName("icu.dll", "umsg_clone")
Interceptor.attach(umsg_clone, {onLeave: function (args) {send("umsg_clone");}});

var umsg_close = Module.findExportByName("icu.dll", "umsg_close")
Interceptor.attach(umsg_close, {onLeave: function (args) {send("umsg_close");}});

var umsg_format = Module.findExportByName("icu.dll", "umsg_format")
Interceptor.attach(umsg_format, {onLeave: function (args) {send("umsg_format");}});

var umsg_getLocale = Module.findExportByName("icu.dll", "umsg_getLocale")
Interceptor.attach(umsg_getLocale, {onLeave: function (args) {send("umsg_getLocale");}});

var umsg_open = Module.findExportByName("icu.dll", "umsg_open")
Interceptor.attach(umsg_open, {onLeave: function (args) {send("umsg_open");}});

var umsg_parse = Module.findExportByName("icu.dll", "umsg_parse")
Interceptor.attach(umsg_parse, {onLeave: function (args) {send("umsg_parse");}});

var umsg_setLocale = Module.findExportByName("icu.dll", "umsg_setLocale")
Interceptor.attach(umsg_setLocale, {onLeave: function (args) {send("umsg_setLocale");}});

var umsg_toPattern = Module.findExportByName("icu.dll", "umsg_toPattern")
Interceptor.attach(umsg_toPattern, {onLeave: function (args) {send("umsg_toPattern");}});

var umsg_vformat = Module.findExportByName("icu.dll", "umsg_vformat")
Interceptor.attach(umsg_vformat, {onLeave: function (args) {send("umsg_vformat");}});

var umsg_vparse = Module.findExportByName("icu.dll", "umsg_vparse")
Interceptor.attach(umsg_vparse, {onLeave: function (args) {send("umsg_vparse");}});

var umutablecptrie_buildImmutable = Module.findExportByName("icu.dll", "umutablecptrie_buildImmutable")
Interceptor.attach(umutablecptrie_buildImmutable, {onLeave: function (args) {send("umutablecptrie_buildImmutable");}});

var umutablecptrie_clone = Module.findExportByName("icu.dll", "umutablecptrie_clone")
Interceptor.attach(umutablecptrie_clone, {onLeave: function (args) {send("umutablecptrie_clone");}});

var umutablecptrie_close = Module.findExportByName("icu.dll", "umutablecptrie_close")
Interceptor.attach(umutablecptrie_close, {onLeave: function (args) {send("umutablecptrie_close");}});

var umutablecptrie_fromUCPMap = Module.findExportByName("icu.dll", "umutablecptrie_fromUCPMap")
Interceptor.attach(umutablecptrie_fromUCPMap, {onLeave: function (args) {send("umutablecptrie_fromUCPMap");}});

var umutablecptrie_fromUCPTrie = Module.findExportByName("icu.dll", "umutablecptrie_fromUCPTrie")
Interceptor.attach(umutablecptrie_fromUCPTrie, {onLeave: function (args) {send("umutablecptrie_fromUCPTrie");}});

var umutablecptrie_get = Module.findExportByName("icu.dll", "umutablecptrie_get")
Interceptor.attach(umutablecptrie_get, {onLeave: function (args) {send("umutablecptrie_get");}});

var umutablecptrie_getRange = Module.findExportByName("icu.dll", "umutablecptrie_getRange")
Interceptor.attach(umutablecptrie_getRange, {onLeave: function (args) {send("umutablecptrie_getRange");}});

var umutablecptrie_open = Module.findExportByName("icu.dll", "umutablecptrie_open")
Interceptor.attach(umutablecptrie_open, {onLeave: function (args) {send("umutablecptrie_open");}});

var umutablecptrie_set = Module.findExportByName("icu.dll", "umutablecptrie_set")
Interceptor.attach(umutablecptrie_set, {onLeave: function (args) {send("umutablecptrie_set");}});

var umutablecptrie_setRange = Module.findExportByName("icu.dll", "umutablecptrie_setRange")
Interceptor.attach(umutablecptrie_setRange, {onLeave: function (args) {send("umutablecptrie_setRange");}});

var unorm2_append = Module.findExportByName("icu.dll", "unorm2_append")
Interceptor.attach(unorm2_append, {onLeave: function (args) {send("unorm2_append");}});

var unorm2_close = Module.findExportByName("icu.dll", "unorm2_close")
Interceptor.attach(unorm2_close, {onLeave: function (args) {send("unorm2_close");}});

var unorm2_composePair = Module.findExportByName("icu.dll", "unorm2_composePair")
Interceptor.attach(unorm2_composePair, {onLeave: function (args) {send("unorm2_composePair");}});

var unorm2_getCombiningClass = Module.findExportByName("icu.dll", "unorm2_getCombiningClass")
Interceptor.attach(unorm2_getCombiningClass, {onLeave: function (args) {send("unorm2_getCombiningClass");}});

var unorm2_getDecomposition = Module.findExportByName("icu.dll", "unorm2_getDecomposition")
Interceptor.attach(unorm2_getDecomposition, {onLeave: function (args) {send("unorm2_getDecomposition");}});

var unorm2_getInstance = Module.findExportByName("icu.dll", "unorm2_getInstance")
Interceptor.attach(unorm2_getInstance, {onLeave: function (args) {send("unorm2_getInstance");}});

var unorm2_getNFCInstance = Module.findExportByName("icu.dll", "unorm2_getNFCInstance")
Interceptor.attach(unorm2_getNFCInstance, {onLeave: function (args) {send("unorm2_getNFCInstance");}});

var unorm2_getNFDInstance = Module.findExportByName("icu.dll", "unorm2_getNFDInstance")
Interceptor.attach(unorm2_getNFDInstance, {onLeave: function (args) {send("unorm2_getNFDInstance");}});

var unorm2_getNFKCCasefoldInstance = Module.findExportByName("icu.dll", "unorm2_getNFKCCasefoldInstance")
Interceptor.attach(unorm2_getNFKCCasefoldInstance, {onLeave: function (args) {send("unorm2_getNFKCCasefoldInstance");}});

var unorm2_getNFKCInstance = Module.findExportByName("icu.dll", "unorm2_getNFKCInstance")
Interceptor.attach(unorm2_getNFKCInstance, {onLeave: function (args) {send("unorm2_getNFKCInstance");}});

var unorm2_getNFKDInstance = Module.findExportByName("icu.dll", "unorm2_getNFKDInstance")
Interceptor.attach(unorm2_getNFKDInstance, {onLeave: function (args) {send("unorm2_getNFKDInstance");}});

var unorm2_getRawDecomposition = Module.findExportByName("icu.dll", "unorm2_getRawDecomposition")
Interceptor.attach(unorm2_getRawDecomposition, {onLeave: function (args) {send("unorm2_getRawDecomposition");}});

var unorm2_hasBoundaryAfter = Module.findExportByName("icu.dll", "unorm2_hasBoundaryAfter")
Interceptor.attach(unorm2_hasBoundaryAfter, {onLeave: function (args) {send("unorm2_hasBoundaryAfter");}});

var unorm2_hasBoundaryBefore = Module.findExportByName("icu.dll", "unorm2_hasBoundaryBefore")
Interceptor.attach(unorm2_hasBoundaryBefore, {onLeave: function (args) {send("unorm2_hasBoundaryBefore");}});

var unorm2_isInert = Module.findExportByName("icu.dll", "unorm2_isInert")
Interceptor.attach(unorm2_isInert, {onLeave: function (args) {send("unorm2_isInert");}});

var unorm2_isNormalized = Module.findExportByName("icu.dll", "unorm2_isNormalized")
Interceptor.attach(unorm2_isNormalized, {onLeave: function (args) {send("unorm2_isNormalized");}});

var unorm2_normalize = Module.findExportByName("icu.dll", "unorm2_normalize")
Interceptor.attach(unorm2_normalize, {onLeave: function (args) {send("unorm2_normalize");}});

var unorm2_normalizeSecondAndAppend = Module.findExportByName("icu.dll", "unorm2_normalizeSecondAndAppend")
Interceptor.attach(unorm2_normalizeSecondAndAppend, {onLeave: function (args) {send("unorm2_normalizeSecondAndAppend");}});

var unorm2_openFiltered = Module.findExportByName("icu.dll", "unorm2_openFiltered")
Interceptor.attach(unorm2_openFiltered, {onLeave: function (args) {send("unorm2_openFiltered");}});

var unorm2_quickCheck = Module.findExportByName("icu.dll", "unorm2_quickCheck")
Interceptor.attach(unorm2_quickCheck, {onLeave: function (args) {send("unorm2_quickCheck");}});

var unorm2_spanQuickCheckYes = Module.findExportByName("icu.dll", "unorm2_spanQuickCheckYes")
Interceptor.attach(unorm2_spanQuickCheckYes, {onLeave: function (args) {send("unorm2_spanQuickCheckYes");}});

var unorm_compare = Module.findExportByName("icu.dll", "unorm_compare")
Interceptor.attach(unorm_compare, {onLeave: function (args) {send("unorm_compare");}});

var unum_applyPattern = Module.findExportByName("icu.dll", "unum_applyPattern")
Interceptor.attach(unum_applyPattern, {onLeave: function (args) {send("unum_applyPattern");}});

var unum_clone = Module.findExportByName("icu.dll", "unum_clone")
Interceptor.attach(unum_clone, {onLeave: function (args) {send("unum_clone");}});

var unum_close = Module.findExportByName("icu.dll", "unum_close")
Interceptor.attach(unum_close, {onLeave: function (args) {send("unum_close");}});

var unum_countAvailable = Module.findExportByName("icu.dll", "unum_countAvailable")
Interceptor.attach(unum_countAvailable, {onLeave: function (args) {send("unum_countAvailable");}});

var unum_format = Module.findExportByName("icu.dll", "unum_format")
Interceptor.attach(unum_format, {onLeave: function (args) {send("unum_format");}});

var unum_formatDecimal = Module.findExportByName("icu.dll", "unum_formatDecimal")
Interceptor.attach(unum_formatDecimal, {onLeave: function (args) {send("unum_formatDecimal");}});

var unum_formatDouble = Module.findExportByName("icu.dll", "unum_formatDouble")
Interceptor.attach(unum_formatDouble, {onLeave: function (args) {send("unum_formatDouble");}});

var unum_formatDoubleCurrency = Module.findExportByName("icu.dll", "unum_formatDoubleCurrency")
Interceptor.attach(unum_formatDoubleCurrency, {onLeave: function (args) {send("unum_formatDoubleCurrency");}});

var unum_formatDoubleForFields = Module.findExportByName("icu.dll", "unum_formatDoubleForFields")
Interceptor.attach(unum_formatDoubleForFields, {onLeave: function (args) {send("unum_formatDoubleForFields");}});

var unum_formatInt64 = Module.findExportByName("icu.dll", "unum_formatInt64")
Interceptor.attach(unum_formatInt64, {onLeave: function (args) {send("unum_formatInt64");}});

var unum_formatUFormattable = Module.findExportByName("icu.dll", "unum_formatUFormattable")
Interceptor.attach(unum_formatUFormattable, {onLeave: function (args) {send("unum_formatUFormattable");}});

var unum_getAttribute = Module.findExportByName("icu.dll", "unum_getAttribute")
Interceptor.attach(unum_getAttribute, {onLeave: function (args) {send("unum_getAttribute");}});

var unum_getAvailable = Module.findExportByName("icu.dll", "unum_getAvailable")
Interceptor.attach(unum_getAvailable, {onLeave: function (args) {send("unum_getAvailable");}});

var unum_getContext = Module.findExportByName("icu.dll", "unum_getContext")
Interceptor.attach(unum_getContext, {onLeave: function (args) {send("unum_getContext");}});

var unum_getDoubleAttribute = Module.findExportByName("icu.dll", "unum_getDoubleAttribute")
Interceptor.attach(unum_getDoubleAttribute, {onLeave: function (args) {send("unum_getDoubleAttribute");}});

var unum_getLocaleByType = Module.findExportByName("icu.dll", "unum_getLocaleByType")
Interceptor.attach(unum_getLocaleByType, {onLeave: function (args) {send("unum_getLocaleByType");}});

var unum_getSymbol = Module.findExportByName("icu.dll", "unum_getSymbol")
Interceptor.attach(unum_getSymbol, {onLeave: function (args) {send("unum_getSymbol");}});

var unum_getTextAttribute = Module.findExportByName("icu.dll", "unum_getTextAttribute")
Interceptor.attach(unum_getTextAttribute, {onLeave: function (args) {send("unum_getTextAttribute");}});

var unum_open = Module.findExportByName("icu.dll", "unum_open")
Interceptor.attach(unum_open, {onLeave: function (args) {send("unum_open");}});

var unum_parse = Module.findExportByName("icu.dll", "unum_parse")
Interceptor.attach(unum_parse, {onLeave: function (args) {send("unum_parse");}});

var unum_parseDecimal = Module.findExportByName("icu.dll", "unum_parseDecimal")
Interceptor.attach(unum_parseDecimal, {onLeave: function (args) {send("unum_parseDecimal");}});

var unum_parseDouble = Module.findExportByName("icu.dll", "unum_parseDouble")
Interceptor.attach(unum_parseDouble, {onLeave: function (args) {send("unum_parseDouble");}});

var unum_parseDoubleCurrency = Module.findExportByName("icu.dll", "unum_parseDoubleCurrency")
Interceptor.attach(unum_parseDoubleCurrency, {onLeave: function (args) {send("unum_parseDoubleCurrency");}});

var unum_parseInt64 = Module.findExportByName("icu.dll", "unum_parseInt64")
Interceptor.attach(unum_parseInt64, {onLeave: function (args) {send("unum_parseInt64");}});

var unum_parseToUFormattable = Module.findExportByName("icu.dll", "unum_parseToUFormattable")
Interceptor.attach(unum_parseToUFormattable, {onLeave: function (args) {send("unum_parseToUFormattable");}});

var unum_setAttribute = Module.findExportByName("icu.dll", "unum_setAttribute")
Interceptor.attach(unum_setAttribute, {onLeave: function (args) {send("unum_setAttribute");}});

var unum_setContext = Module.findExportByName("icu.dll", "unum_setContext")
Interceptor.attach(unum_setContext, {onLeave: function (args) {send("unum_setContext");}});

var unum_setDoubleAttribute = Module.findExportByName("icu.dll", "unum_setDoubleAttribute")
Interceptor.attach(unum_setDoubleAttribute, {onLeave: function (args) {send("unum_setDoubleAttribute");}});

var unum_setSymbol = Module.findExportByName("icu.dll", "unum_setSymbol")
Interceptor.attach(unum_setSymbol, {onLeave: function (args) {send("unum_setSymbol");}});

var unum_setTextAttribute = Module.findExportByName("icu.dll", "unum_setTextAttribute")
Interceptor.attach(unum_setTextAttribute, {onLeave: function (args) {send("unum_setTextAttribute");}});

var unum_toPattern = Module.findExportByName("icu.dll", "unum_toPattern")
Interceptor.attach(unum_toPattern, {onLeave: function (args) {send("unum_toPattern");}});

var unumf_close = Module.findExportByName("icu.dll", "unumf_close")
Interceptor.attach(unumf_close, {onLeave: function (args) {send("unumf_close");}});

var unumf_closeResult = Module.findExportByName("icu.dll", "unumf_closeResult")
Interceptor.attach(unumf_closeResult, {onLeave: function (args) {send("unumf_closeResult");}});

var unumf_formatDecimal = Module.findExportByName("icu.dll", "unumf_formatDecimal")
Interceptor.attach(unumf_formatDecimal, {onLeave: function (args) {send("unumf_formatDecimal");}});

var unumf_formatDouble = Module.findExportByName("icu.dll", "unumf_formatDouble")
Interceptor.attach(unumf_formatDouble, {onLeave: function (args) {send("unumf_formatDouble");}});

var unumf_formatInt = Module.findExportByName("icu.dll", "unumf_formatInt")
Interceptor.attach(unumf_formatInt, {onLeave: function (args) {send("unumf_formatInt");}});

var unumf_openForSkeletonAndLocale = Module.findExportByName("icu.dll", "unumf_openForSkeletonAndLocale")
Interceptor.attach(unumf_openForSkeletonAndLocale, {onLeave: function (args) {send("unumf_openForSkeletonAndLocale");}});

var unumf_openForSkeletonAndLocaleWithError = Module.findExportByName("icu.dll", "unumf_openForSkeletonAndLocaleWithError")
Interceptor.attach(unumf_openForSkeletonAndLocaleWithError, {onLeave: function (args) {send("unumf_openForSkeletonAndLocaleWithError");}});

var unumf_openResult = Module.findExportByName("icu.dll", "unumf_openResult")
Interceptor.attach(unumf_openResult, {onLeave: function (args) {send("unumf_openResult");}});

var unumf_resultAsValue = Module.findExportByName("icu.dll", "unumf_resultAsValue")
Interceptor.attach(unumf_resultAsValue, {onLeave: function (args) {send("unumf_resultAsValue");}});

var unumf_resultGetAllFieldPositions = Module.findExportByName("icu.dll", "unumf_resultGetAllFieldPositions")
Interceptor.attach(unumf_resultGetAllFieldPositions, {onLeave: function (args) {send("unumf_resultGetAllFieldPositions");}});

var unumf_resultNextFieldPosition = Module.findExportByName("icu.dll", "unumf_resultNextFieldPosition")
Interceptor.attach(unumf_resultNextFieldPosition, {onLeave: function (args) {send("unumf_resultNextFieldPosition");}});

var unumf_resultToString = Module.findExportByName("icu.dll", "unumf_resultToString")
Interceptor.attach(unumf_resultToString, {onLeave: function (args) {send("unumf_resultToString");}});

var unumsys_close = Module.findExportByName("icu.dll", "unumsys_close")
Interceptor.attach(unumsys_close, {onLeave: function (args) {send("unumsys_close");}});

var unumsys_getDescription = Module.findExportByName("icu.dll", "unumsys_getDescription")
Interceptor.attach(unumsys_getDescription, {onLeave: function (args) {send("unumsys_getDescription");}});

var unumsys_getName = Module.findExportByName("icu.dll", "unumsys_getName")
Interceptor.attach(unumsys_getName, {onLeave: function (args) {send("unumsys_getName");}});

var unumsys_getRadix = Module.findExportByName("icu.dll", "unumsys_getRadix")
Interceptor.attach(unumsys_getRadix, {onLeave: function (args) {send("unumsys_getRadix");}});

var unumsys_isAlgorithmic = Module.findExportByName("icu.dll", "unumsys_isAlgorithmic")
Interceptor.attach(unumsys_isAlgorithmic, {onLeave: function (args) {send("unumsys_isAlgorithmic");}});

var unumsys_open = Module.findExportByName("icu.dll", "unumsys_open")
Interceptor.attach(unumsys_open, {onLeave: function (args) {send("unumsys_open");}});

var unumsys_openAvailableNames = Module.findExportByName("icu.dll", "unumsys_openAvailableNames")
Interceptor.attach(unumsys_openAvailableNames, {onLeave: function (args) {send("unumsys_openAvailableNames");}});

var unumsys_openByName = Module.findExportByName("icu.dll", "unumsys_openByName")
Interceptor.attach(unumsys_openByName, {onLeave: function (args) {send("unumsys_openByName");}});

var uplrules_close = Module.findExportByName("icu.dll", "uplrules_close")
Interceptor.attach(uplrules_close, {onLeave: function (args) {send("uplrules_close");}});

var uplrules_getKeywords = Module.findExportByName("icu.dll", "uplrules_getKeywords")
Interceptor.attach(uplrules_getKeywords, {onLeave: function (args) {send("uplrules_getKeywords");}});

var uplrules_open = Module.findExportByName("icu.dll", "uplrules_open")
Interceptor.attach(uplrules_open, {onLeave: function (args) {send("uplrules_open");}});

var uplrules_openForType = Module.findExportByName("icu.dll", "uplrules_openForType")
Interceptor.attach(uplrules_openForType, {onLeave: function (args) {send("uplrules_openForType");}});

var uplrules_select = Module.findExportByName("icu.dll", "uplrules_select")
Interceptor.attach(uplrules_select, {onLeave: function (args) {send("uplrules_select");}});

var uplrules_selectFormatted = Module.findExportByName("icu.dll", "uplrules_selectFormatted")
Interceptor.attach(uplrules_selectFormatted, {onLeave: function (args) {send("uplrules_selectFormatted");}});

var uregex_appendReplacement = Module.findExportByName("icu.dll", "uregex_appendReplacement")
Interceptor.attach(uregex_appendReplacement, {onLeave: function (args) {send("uregex_appendReplacement");}});

var uregex_appendReplacementUText = Module.findExportByName("icu.dll", "uregex_appendReplacementUText")
Interceptor.attach(uregex_appendReplacementUText, {onLeave: function (args) {send("uregex_appendReplacementUText");}});

var uregex_appendTail = Module.findExportByName("icu.dll", "uregex_appendTail")
Interceptor.attach(uregex_appendTail, {onLeave: function (args) {send("uregex_appendTail");}});

var uregex_appendTailUText = Module.findExportByName("icu.dll", "uregex_appendTailUText")
Interceptor.attach(uregex_appendTailUText, {onLeave: function (args) {send("uregex_appendTailUText");}});

var uregex_clone = Module.findExportByName("icu.dll", "uregex_clone")
Interceptor.attach(uregex_clone, {onLeave: function (args) {send("uregex_clone");}});

var uregex_close = Module.findExportByName("icu.dll", "uregex_close")
Interceptor.attach(uregex_close, {onLeave: function (args) {send("uregex_close");}});

var uregex_end = Module.findExportByName("icu.dll", "uregex_end")
Interceptor.attach(uregex_end, {onLeave: function (args) {send("uregex_end");}});

var uregex_end64 = Module.findExportByName("icu.dll", "uregex_end64")
Interceptor.attach(uregex_end64, {onLeave: function (args) {send("uregex_end64");}});

var uregex_find = Module.findExportByName("icu.dll", "uregex_find")
Interceptor.attach(uregex_find, {onLeave: function (args) {send("uregex_find");}});

var uregex_find64 = Module.findExportByName("icu.dll", "uregex_find64")
Interceptor.attach(uregex_find64, {onLeave: function (args) {send("uregex_find64");}});

var uregex_findNext = Module.findExportByName("icu.dll", "uregex_findNext")
Interceptor.attach(uregex_findNext, {onLeave: function (args) {send("uregex_findNext");}});

var uregex_flags = Module.findExportByName("icu.dll", "uregex_flags")
Interceptor.attach(uregex_flags, {onLeave: function (args) {send("uregex_flags");}});

var uregex_getFindProgressCallback = Module.findExportByName("icu.dll", "uregex_getFindProgressCallback")
Interceptor.attach(uregex_getFindProgressCallback, {onLeave: function (args) {send("uregex_getFindProgressCallback");}});

var uregex_getMatchCallback = Module.findExportByName("icu.dll", "uregex_getMatchCallback")
Interceptor.attach(uregex_getMatchCallback, {onLeave: function (args) {send("uregex_getMatchCallback");}});

var uregex_getStackLimit = Module.findExportByName("icu.dll", "uregex_getStackLimit")
Interceptor.attach(uregex_getStackLimit, {onLeave: function (args) {send("uregex_getStackLimit");}});

var uregex_getText = Module.findExportByName("icu.dll", "uregex_getText")
Interceptor.attach(uregex_getText, {onLeave: function (args) {send("uregex_getText");}});

var uregex_getTimeLimit = Module.findExportByName("icu.dll", "uregex_getTimeLimit")
Interceptor.attach(uregex_getTimeLimit, {onLeave: function (args) {send("uregex_getTimeLimit");}});

var uregex_getUText = Module.findExportByName("icu.dll", "uregex_getUText")
Interceptor.attach(uregex_getUText, {onLeave: function (args) {send("uregex_getUText");}});

var uregex_group = Module.findExportByName("icu.dll", "uregex_group")
Interceptor.attach(uregex_group, {onLeave: function (args) {send("uregex_group");}});

var uregex_groupCount = Module.findExportByName("icu.dll", "uregex_groupCount")
Interceptor.attach(uregex_groupCount, {onLeave: function (args) {send("uregex_groupCount");}});

var uregex_groupNumberFromCName = Module.findExportByName("icu.dll", "uregex_groupNumberFromCName")
Interceptor.attach(uregex_groupNumberFromCName, {onLeave: function (args) {send("uregex_groupNumberFromCName");}});

var uregex_groupNumberFromName = Module.findExportByName("icu.dll", "uregex_groupNumberFromName")
Interceptor.attach(uregex_groupNumberFromName, {onLeave: function (args) {send("uregex_groupNumberFromName");}});

var uregex_groupUText = Module.findExportByName("icu.dll", "uregex_groupUText")
Interceptor.attach(uregex_groupUText, {onLeave: function (args) {send("uregex_groupUText");}});

var uregex_hasAnchoringBounds = Module.findExportByName("icu.dll", "uregex_hasAnchoringBounds")
Interceptor.attach(uregex_hasAnchoringBounds, {onLeave: function (args) {send("uregex_hasAnchoringBounds");}});

var uregex_hasTransparentBounds = Module.findExportByName("icu.dll", "uregex_hasTransparentBounds")
Interceptor.attach(uregex_hasTransparentBounds, {onLeave: function (args) {send("uregex_hasTransparentBounds");}});

var uregex_hitEnd = Module.findExportByName("icu.dll", "uregex_hitEnd")
Interceptor.attach(uregex_hitEnd, {onLeave: function (args) {send("uregex_hitEnd");}});

var uregex_lookingAt = Module.findExportByName("icu.dll", "uregex_lookingAt")
Interceptor.attach(uregex_lookingAt, {onLeave: function (args) {send("uregex_lookingAt");}});

var uregex_lookingAt64 = Module.findExportByName("icu.dll", "uregex_lookingAt64")
Interceptor.attach(uregex_lookingAt64, {onLeave: function (args) {send("uregex_lookingAt64");}});

var uregex_matches = Module.findExportByName("icu.dll", "uregex_matches")
Interceptor.attach(uregex_matches, {onLeave: function (args) {send("uregex_matches");}});

var uregex_matches64 = Module.findExportByName("icu.dll", "uregex_matches64")
Interceptor.attach(uregex_matches64, {onLeave: function (args) {send("uregex_matches64");}});

var uregex_open = Module.findExportByName("icu.dll", "uregex_open")
Interceptor.attach(uregex_open, {onLeave: function (args) {send("uregex_open");}});

var uregex_openC = Module.findExportByName("icu.dll", "uregex_openC")
Interceptor.attach(uregex_openC, {onLeave: function (args) {send("uregex_openC");}});

var uregex_openUText = Module.findExportByName("icu.dll", "uregex_openUText")
Interceptor.attach(uregex_openUText, {onLeave: function (args) {send("uregex_openUText");}});

var uregex_pattern = Module.findExportByName("icu.dll", "uregex_pattern")
Interceptor.attach(uregex_pattern, {onLeave: function (args) {send("uregex_pattern");}});

var uregex_patternUText = Module.findExportByName("icu.dll", "uregex_patternUText")
Interceptor.attach(uregex_patternUText, {onLeave: function (args) {send("uregex_patternUText");}});

var uregex_refreshUText = Module.findExportByName("icu.dll", "uregex_refreshUText")
Interceptor.attach(uregex_refreshUText, {onLeave: function (args) {send("uregex_refreshUText");}});

var uregex_regionEnd = Module.findExportByName("icu.dll", "uregex_regionEnd")
Interceptor.attach(uregex_regionEnd, {onLeave: function (args) {send("uregex_regionEnd");}});

var uregex_regionEnd64 = Module.findExportByName("icu.dll", "uregex_regionEnd64")
Interceptor.attach(uregex_regionEnd64, {onLeave: function (args) {send("uregex_regionEnd64");}});

var uregex_regionStart = Module.findExportByName("icu.dll", "uregex_regionStart")
Interceptor.attach(uregex_regionStart, {onLeave: function (args) {send("uregex_regionStart");}});

var uregex_regionStart64 = Module.findExportByName("icu.dll", "uregex_regionStart64")
Interceptor.attach(uregex_regionStart64, {onLeave: function (args) {send("uregex_regionStart64");}});

var uregex_replaceAll = Module.findExportByName("icu.dll", "uregex_replaceAll")
Interceptor.attach(uregex_replaceAll, {onLeave: function (args) {send("uregex_replaceAll");}});

var uregex_replaceAllUText = Module.findExportByName("icu.dll", "uregex_replaceAllUText")
Interceptor.attach(uregex_replaceAllUText, {onLeave: function (args) {send("uregex_replaceAllUText");}});

var uregex_replaceFirst = Module.findExportByName("icu.dll", "uregex_replaceFirst")
Interceptor.attach(uregex_replaceFirst, {onLeave: function (args) {send("uregex_replaceFirst");}});

var uregex_replaceFirstUText = Module.findExportByName("icu.dll", "uregex_replaceFirstUText")
Interceptor.attach(uregex_replaceFirstUText, {onLeave: function (args) {send("uregex_replaceFirstUText");}});

var uregex_requireEnd = Module.findExportByName("icu.dll", "uregex_requireEnd")
Interceptor.attach(uregex_requireEnd, {onLeave: function (args) {send("uregex_requireEnd");}});

var uregex_reset = Module.findExportByName("icu.dll", "uregex_reset")
Interceptor.attach(uregex_reset, {onLeave: function (args) {send("uregex_reset");}});

var uregex_reset64 = Module.findExportByName("icu.dll", "uregex_reset64")
Interceptor.attach(uregex_reset64, {onLeave: function (args) {send("uregex_reset64");}});

var uregex_setFindProgressCallback = Module.findExportByName("icu.dll", "uregex_setFindProgressCallback")
Interceptor.attach(uregex_setFindProgressCallback, {onLeave: function (args) {send("uregex_setFindProgressCallback");}});

var uregex_setMatchCallback = Module.findExportByName("icu.dll", "uregex_setMatchCallback")
Interceptor.attach(uregex_setMatchCallback, {onLeave: function (args) {send("uregex_setMatchCallback");}});

var uregex_setRegion = Module.findExportByName("icu.dll", "uregex_setRegion")
Interceptor.attach(uregex_setRegion, {onLeave: function (args) {send("uregex_setRegion");}});

var uregex_setRegion64 = Module.findExportByName("icu.dll", "uregex_setRegion64")
Interceptor.attach(uregex_setRegion64, {onLeave: function (args) {send("uregex_setRegion64");}});

var uregex_setRegionAndStart = Module.findExportByName("icu.dll", "uregex_setRegionAndStart")
Interceptor.attach(uregex_setRegionAndStart, {onLeave: function (args) {send("uregex_setRegionAndStart");}});

var uregex_setStackLimit = Module.findExportByName("icu.dll", "uregex_setStackLimit")
Interceptor.attach(uregex_setStackLimit, {onLeave: function (args) {send("uregex_setStackLimit");}});

var uregex_setText = Module.findExportByName("icu.dll", "uregex_setText")
Interceptor.attach(uregex_setText, {onLeave: function (args) {send("uregex_setText");}});

var uregex_setTimeLimit = Module.findExportByName("icu.dll", "uregex_setTimeLimit")
Interceptor.attach(uregex_setTimeLimit, {onLeave: function (args) {send("uregex_setTimeLimit");}});

var uregex_setUText = Module.findExportByName("icu.dll", "uregex_setUText")
Interceptor.attach(uregex_setUText, {onLeave: function (args) {send("uregex_setUText");}});

var uregex_split = Module.findExportByName("icu.dll", "uregex_split")
Interceptor.attach(uregex_split, {onLeave: function (args) {send("uregex_split");}});

var uregex_splitUText = Module.findExportByName("icu.dll", "uregex_splitUText")
Interceptor.attach(uregex_splitUText, {onLeave: function (args) {send("uregex_splitUText");}});

var uregex_start = Module.findExportByName("icu.dll", "uregex_start")
Interceptor.attach(uregex_start, {onLeave: function (args) {send("uregex_start");}});

var uregex_start64 = Module.findExportByName("icu.dll", "uregex_start64")
Interceptor.attach(uregex_start64, {onLeave: function (args) {send("uregex_start64");}});

var uregex_useAnchoringBounds = Module.findExportByName("icu.dll", "uregex_useAnchoringBounds")
Interceptor.attach(uregex_useAnchoringBounds, {onLeave: function (args) {send("uregex_useAnchoringBounds");}});

var uregex_useTransparentBounds = Module.findExportByName("icu.dll", "uregex_useTransparentBounds")
Interceptor.attach(uregex_useTransparentBounds, {onLeave: function (args) {send("uregex_useTransparentBounds");}});

var uregion_areEqual = Module.findExportByName("icu.dll", "uregion_areEqual")
Interceptor.attach(uregion_areEqual, {onLeave: function (args) {send("uregion_areEqual");}});

var uregion_contains = Module.findExportByName("icu.dll", "uregion_contains")
Interceptor.attach(uregion_contains, {onLeave: function (args) {send("uregion_contains");}});

var uregion_getAvailable = Module.findExportByName("icu.dll", "uregion_getAvailable")
Interceptor.attach(uregion_getAvailable, {onLeave: function (args) {send("uregion_getAvailable");}});

var uregion_getContainedRegions = Module.findExportByName("icu.dll", "uregion_getContainedRegions")
Interceptor.attach(uregion_getContainedRegions, {onLeave: function (args) {send("uregion_getContainedRegions");}});

var uregion_getContainedRegionsOfType = Module.findExportByName("icu.dll", "uregion_getContainedRegionsOfType")
Interceptor.attach(uregion_getContainedRegionsOfType, {onLeave: function (args) {send("uregion_getContainedRegionsOfType");}});

var uregion_getContainingRegion = Module.findExportByName("icu.dll", "uregion_getContainingRegion")
Interceptor.attach(uregion_getContainingRegion, {onLeave: function (args) {send("uregion_getContainingRegion");}});

var uregion_getContainingRegionOfType = Module.findExportByName("icu.dll", "uregion_getContainingRegionOfType")
Interceptor.attach(uregion_getContainingRegionOfType, {onLeave: function (args) {send("uregion_getContainingRegionOfType");}});

var uregion_getNumericCode = Module.findExportByName("icu.dll", "uregion_getNumericCode")
Interceptor.attach(uregion_getNumericCode, {onLeave: function (args) {send("uregion_getNumericCode");}});

var uregion_getPreferredValues = Module.findExportByName("icu.dll", "uregion_getPreferredValues")
Interceptor.attach(uregion_getPreferredValues, {onLeave: function (args) {send("uregion_getPreferredValues");}});

var uregion_getRegionCode = Module.findExportByName("icu.dll", "uregion_getRegionCode")
Interceptor.attach(uregion_getRegionCode, {onLeave: function (args) {send("uregion_getRegionCode");}});

var uregion_getRegionFromCode = Module.findExportByName("icu.dll", "uregion_getRegionFromCode")
Interceptor.attach(uregion_getRegionFromCode, {onLeave: function (args) {send("uregion_getRegionFromCode");}});

var uregion_getRegionFromNumericCode = Module.findExportByName("icu.dll", "uregion_getRegionFromNumericCode")
Interceptor.attach(uregion_getRegionFromNumericCode, {onLeave: function (args) {send("uregion_getRegionFromNumericCode");}});

var uregion_getType = Module.findExportByName("icu.dll", "uregion_getType")
Interceptor.attach(uregion_getType, {onLeave: function (args) {send("uregion_getType");}});

var ureldatefmt_close = Module.findExportByName("icu.dll", "ureldatefmt_close")
Interceptor.attach(ureldatefmt_close, {onLeave: function (args) {send("ureldatefmt_close");}});

var ureldatefmt_closeResult = Module.findExportByName("icu.dll", "ureldatefmt_closeResult")
Interceptor.attach(ureldatefmt_closeResult, {onLeave: function (args) {send("ureldatefmt_closeResult");}});

var ureldatefmt_combineDateAndTime = Module.findExportByName("icu.dll", "ureldatefmt_combineDateAndTime")
Interceptor.attach(ureldatefmt_combineDateAndTime, {onLeave: function (args) {send("ureldatefmt_combineDateAndTime");}});

var ureldatefmt_format = Module.findExportByName("icu.dll", "ureldatefmt_format")
Interceptor.attach(ureldatefmt_format, {onLeave: function (args) {send("ureldatefmt_format");}});

var ureldatefmt_formatNumeric = Module.findExportByName("icu.dll", "ureldatefmt_formatNumeric")
Interceptor.attach(ureldatefmt_formatNumeric, {onLeave: function (args) {send("ureldatefmt_formatNumeric");}});

var ureldatefmt_formatNumericToResult = Module.findExportByName("icu.dll", "ureldatefmt_formatNumericToResult")
Interceptor.attach(ureldatefmt_formatNumericToResult, {onLeave: function (args) {send("ureldatefmt_formatNumericToResult");}});

var ureldatefmt_formatToResult = Module.findExportByName("icu.dll", "ureldatefmt_formatToResult")
Interceptor.attach(ureldatefmt_formatToResult, {onLeave: function (args) {send("ureldatefmt_formatToResult");}});

var ureldatefmt_open = Module.findExportByName("icu.dll", "ureldatefmt_open")
Interceptor.attach(ureldatefmt_open, {onLeave: function (args) {send("ureldatefmt_open");}});

var ureldatefmt_openResult = Module.findExportByName("icu.dll", "ureldatefmt_openResult")
Interceptor.attach(ureldatefmt_openResult, {onLeave: function (args) {send("ureldatefmt_openResult");}});

var ureldatefmt_resultAsValue = Module.findExportByName("icu.dll", "ureldatefmt_resultAsValue")
Interceptor.attach(ureldatefmt_resultAsValue, {onLeave: function (args) {send("ureldatefmt_resultAsValue");}});

var ures_close = Module.findExportByName("icu.dll", "ures_close")
Interceptor.attach(ures_close, {onLeave: function (args) {send("ures_close");}});

var ures_getBinary = Module.findExportByName("icu.dll", "ures_getBinary")
Interceptor.attach(ures_getBinary, {onLeave: function (args) {send("ures_getBinary");}});

var ures_getByIndex = Module.findExportByName("icu.dll", "ures_getByIndex")
Interceptor.attach(ures_getByIndex, {onLeave: function (args) {send("ures_getByIndex");}});

var ures_getByKey = Module.findExportByName("icu.dll", "ures_getByKey")
Interceptor.attach(ures_getByKey, {onLeave: function (args) {send("ures_getByKey");}});

var ures_getInt = Module.findExportByName("icu.dll", "ures_getInt")
Interceptor.attach(ures_getInt, {onLeave: function (args) {send("ures_getInt");}});

var ures_getIntVector = Module.findExportByName("icu.dll", "ures_getIntVector")
Interceptor.attach(ures_getIntVector, {onLeave: function (args) {send("ures_getIntVector");}});

var ures_getKey = Module.findExportByName("icu.dll", "ures_getKey")
Interceptor.attach(ures_getKey, {onLeave: function (args) {send("ures_getKey");}});

var ures_getLocaleByType = Module.findExportByName("icu.dll", "ures_getLocaleByType")
Interceptor.attach(ures_getLocaleByType, {onLeave: function (args) {send("ures_getLocaleByType");}});

var ures_getNextResource = Module.findExportByName("icu.dll", "ures_getNextResource")
Interceptor.attach(ures_getNextResource, {onLeave: function (args) {send("ures_getNextResource");}});

var ures_getNextString = Module.findExportByName("icu.dll", "ures_getNextString")
Interceptor.attach(ures_getNextString, {onLeave: function (args) {send("ures_getNextString");}});

var ures_getSize = Module.findExportByName("icu.dll", "ures_getSize")
Interceptor.attach(ures_getSize, {onLeave: function (args) {send("ures_getSize");}});

var ures_getString = Module.findExportByName("icu.dll", "ures_getString")
Interceptor.attach(ures_getString, {onLeave: function (args) {send("ures_getString");}});

var ures_getStringByIndex = Module.findExportByName("icu.dll", "ures_getStringByIndex")
Interceptor.attach(ures_getStringByIndex, {onLeave: function (args) {send("ures_getStringByIndex");}});

var ures_getStringByKey = Module.findExportByName("icu.dll", "ures_getStringByKey")
Interceptor.attach(ures_getStringByKey, {onLeave: function (args) {send("ures_getStringByKey");}});

var ures_getType = Module.findExportByName("icu.dll", "ures_getType")
Interceptor.attach(ures_getType, {onLeave: function (args) {send("ures_getType");}});

var ures_getUInt = Module.findExportByName("icu.dll", "ures_getUInt")
Interceptor.attach(ures_getUInt, {onLeave: function (args) {send("ures_getUInt");}});

var ures_getUTF8String = Module.findExportByName("icu.dll", "ures_getUTF8String")
Interceptor.attach(ures_getUTF8String, {onLeave: function (args) {send("ures_getUTF8String");}});

var ures_getUTF8StringByIndex = Module.findExportByName("icu.dll", "ures_getUTF8StringByIndex")
Interceptor.attach(ures_getUTF8StringByIndex, {onLeave: function (args) {send("ures_getUTF8StringByIndex");}});

var ures_getUTF8StringByKey = Module.findExportByName("icu.dll", "ures_getUTF8StringByKey")
Interceptor.attach(ures_getUTF8StringByKey, {onLeave: function (args) {send("ures_getUTF8StringByKey");}});

var ures_getVersion = Module.findExportByName("icu.dll", "ures_getVersion")
Interceptor.attach(ures_getVersion, {onLeave: function (args) {send("ures_getVersion");}});

var ures_hasNext = Module.findExportByName("icu.dll", "ures_hasNext")
Interceptor.attach(ures_hasNext, {onLeave: function (args) {send("ures_hasNext");}});

var ures_open = Module.findExportByName("icu.dll", "ures_open")
Interceptor.attach(ures_open, {onLeave: function (args) {send("ures_open");}});

var ures_openAvailableLocales = Module.findExportByName("icu.dll", "ures_openAvailableLocales")
Interceptor.attach(ures_openAvailableLocales, {onLeave: function (args) {send("ures_openAvailableLocales");}});

var ures_openDirect = Module.findExportByName("icu.dll", "ures_openDirect")
Interceptor.attach(ures_openDirect, {onLeave: function (args) {send("ures_openDirect");}});

var ures_openU = Module.findExportByName("icu.dll", "ures_openU")
Interceptor.attach(ures_openU, {onLeave: function (args) {send("ures_openU");}});

var ures_resetIterator = Module.findExportByName("icu.dll", "ures_resetIterator")
Interceptor.attach(ures_resetIterator, {onLeave: function (args) {send("ures_resetIterator");}});

var uscript_breaksBetweenLetters = Module.findExportByName("icu.dll", "uscript_breaksBetweenLetters")
Interceptor.attach(uscript_breaksBetweenLetters, {onLeave: function (args) {send("uscript_breaksBetweenLetters");}});

var uscript_getCode = Module.findExportByName("icu.dll", "uscript_getCode")
Interceptor.attach(uscript_getCode, {onLeave: function (args) {send("uscript_getCode");}});

var uscript_getName = Module.findExportByName("icu.dll", "uscript_getName")
Interceptor.attach(uscript_getName, {onLeave: function (args) {send("uscript_getName");}});

var uscript_getSampleString = Module.findExportByName("icu.dll", "uscript_getSampleString")
Interceptor.attach(uscript_getSampleString, {onLeave: function (args) {send("uscript_getSampleString");}});

var uscript_getScript = Module.findExportByName("icu.dll", "uscript_getScript")
Interceptor.attach(uscript_getScript, {onLeave: function (args) {send("uscript_getScript");}});

var uscript_getScriptExtensions = Module.findExportByName("icu.dll", "uscript_getScriptExtensions")
Interceptor.attach(uscript_getScriptExtensions, {onLeave: function (args) {send("uscript_getScriptExtensions");}});

var uscript_getShortName = Module.findExportByName("icu.dll", "uscript_getShortName")
Interceptor.attach(uscript_getShortName, {onLeave: function (args) {send("uscript_getShortName");}});

var uscript_getUsage = Module.findExportByName("icu.dll", "uscript_getUsage")
Interceptor.attach(uscript_getUsage, {onLeave: function (args) {send("uscript_getUsage");}});

var uscript_hasScript = Module.findExportByName("icu.dll", "uscript_hasScript")
Interceptor.attach(uscript_hasScript, {onLeave: function (args) {send("uscript_hasScript");}});

var uscript_isCased = Module.findExportByName("icu.dll", "uscript_isCased")
Interceptor.attach(uscript_isCased, {onLeave: function (args) {send("uscript_isCased");}});

var uscript_isRightToLeft = Module.findExportByName("icu.dll", "uscript_isRightToLeft")
Interceptor.attach(uscript_isRightToLeft, {onLeave: function (args) {send("uscript_isRightToLeft");}});

var usearch_close = Module.findExportByName("icu.dll", "usearch_close")
Interceptor.attach(usearch_close, {onLeave: function (args) {send("usearch_close");}});

var usearch_first = Module.findExportByName("icu.dll", "usearch_first")
Interceptor.attach(usearch_first, {onLeave: function (args) {send("usearch_first");}});

var usearch_following = Module.findExportByName("icu.dll", "usearch_following")
Interceptor.attach(usearch_following, {onLeave: function (args) {send("usearch_following");}});

var usearch_getAttribute = Module.findExportByName("icu.dll", "usearch_getAttribute")
Interceptor.attach(usearch_getAttribute, {onLeave: function (args) {send("usearch_getAttribute");}});

var usearch_getBreakIterator = Module.findExportByName("icu.dll", "usearch_getBreakIterator")
Interceptor.attach(usearch_getBreakIterator, {onLeave: function (args) {send("usearch_getBreakIterator");}});

var usearch_getCollator = Module.findExportByName("icu.dll", "usearch_getCollator")
Interceptor.attach(usearch_getCollator, {onLeave: function (args) {send("usearch_getCollator");}});

var usearch_getMatchedLength = Module.findExportByName("icu.dll", "usearch_getMatchedLength")
Interceptor.attach(usearch_getMatchedLength, {onLeave: function (args) {send("usearch_getMatchedLength");}});

var usearch_getMatchedStart = Module.findExportByName("icu.dll", "usearch_getMatchedStart")
Interceptor.attach(usearch_getMatchedStart, {onLeave: function (args) {send("usearch_getMatchedStart");}});

var usearch_getMatchedText = Module.findExportByName("icu.dll", "usearch_getMatchedText")
Interceptor.attach(usearch_getMatchedText, {onLeave: function (args) {send("usearch_getMatchedText");}});

var usearch_getOffset = Module.findExportByName("icu.dll", "usearch_getOffset")
Interceptor.attach(usearch_getOffset, {onLeave: function (args) {send("usearch_getOffset");}});

var usearch_getPattern = Module.findExportByName("icu.dll", "usearch_getPattern")
Interceptor.attach(usearch_getPattern, {onLeave: function (args) {send("usearch_getPattern");}});

var usearch_getText = Module.findExportByName("icu.dll", "usearch_getText")
Interceptor.attach(usearch_getText, {onLeave: function (args) {send("usearch_getText");}});

var usearch_last = Module.findExportByName("icu.dll", "usearch_last")
Interceptor.attach(usearch_last, {onLeave: function (args) {send("usearch_last");}});

var usearch_next = Module.findExportByName("icu.dll", "usearch_next")
Interceptor.attach(usearch_next, {onLeave: function (args) {send("usearch_next");}});

var usearch_open = Module.findExportByName("icu.dll", "usearch_open")
Interceptor.attach(usearch_open, {onLeave: function (args) {send("usearch_open");}});

var usearch_openFromCollator = Module.findExportByName("icu.dll", "usearch_openFromCollator")
Interceptor.attach(usearch_openFromCollator, {onLeave: function (args) {send("usearch_openFromCollator");}});

var usearch_preceding = Module.findExportByName("icu.dll", "usearch_preceding")
Interceptor.attach(usearch_preceding, {onLeave: function (args) {send("usearch_preceding");}});

var usearch_previous = Module.findExportByName("icu.dll", "usearch_previous")
Interceptor.attach(usearch_previous, {onLeave: function (args) {send("usearch_previous");}});

var usearch_reset = Module.findExportByName("icu.dll", "usearch_reset")
Interceptor.attach(usearch_reset, {onLeave: function (args) {send("usearch_reset");}});

var usearch_setAttribute = Module.findExportByName("icu.dll", "usearch_setAttribute")
Interceptor.attach(usearch_setAttribute, {onLeave: function (args) {send("usearch_setAttribute");}});

var usearch_setBreakIterator = Module.findExportByName("icu.dll", "usearch_setBreakIterator")
Interceptor.attach(usearch_setBreakIterator, {onLeave: function (args) {send("usearch_setBreakIterator");}});

var usearch_setCollator = Module.findExportByName("icu.dll", "usearch_setCollator")
Interceptor.attach(usearch_setCollator, {onLeave: function (args) {send("usearch_setCollator");}});

var usearch_setOffset = Module.findExportByName("icu.dll", "usearch_setOffset")
Interceptor.attach(usearch_setOffset, {onLeave: function (args) {send("usearch_setOffset");}});

var usearch_setPattern = Module.findExportByName("icu.dll", "usearch_setPattern")
Interceptor.attach(usearch_setPattern, {onLeave: function (args) {send("usearch_setPattern");}});

var usearch_setText = Module.findExportByName("icu.dll", "usearch_setText")
Interceptor.attach(usearch_setText, {onLeave: function (args) {send("usearch_setText");}});

var uset_add = Module.findExportByName("icu.dll", "uset_add")
Interceptor.attach(uset_add, {onLeave: function (args) {send("uset_add");}});

var uset_addAll = Module.findExportByName("icu.dll", "uset_addAll")
Interceptor.attach(uset_addAll, {onLeave: function (args) {send("uset_addAll");}});

var uset_addAllCodePoints = Module.findExportByName("icu.dll", "uset_addAllCodePoints")
Interceptor.attach(uset_addAllCodePoints, {onLeave: function (args) {send("uset_addAllCodePoints");}});

var uset_addRange = Module.findExportByName("icu.dll", "uset_addRange")
Interceptor.attach(uset_addRange, {onLeave: function (args) {send("uset_addRange");}});

var uset_addString = Module.findExportByName("icu.dll", "uset_addString")
Interceptor.attach(uset_addString, {onLeave: function (args) {send("uset_addString");}});

var uset_applyIntPropertyValue = Module.findExportByName("icu.dll", "uset_applyIntPropertyValue")
Interceptor.attach(uset_applyIntPropertyValue, {onLeave: function (args) {send("uset_applyIntPropertyValue");}});

var uset_applyPattern = Module.findExportByName("icu.dll", "uset_applyPattern")
Interceptor.attach(uset_applyPattern, {onLeave: function (args) {send("uset_applyPattern");}});

var uset_applyPropertyAlias = Module.findExportByName("icu.dll", "uset_applyPropertyAlias")
Interceptor.attach(uset_applyPropertyAlias, {onLeave: function (args) {send("uset_applyPropertyAlias");}});

var uset_charAt = Module.findExportByName("icu.dll", "uset_charAt")
Interceptor.attach(uset_charAt, {onLeave: function (args) {send("uset_charAt");}});

var uset_clear = Module.findExportByName("icu.dll", "uset_clear")
Interceptor.attach(uset_clear, {onLeave: function (args) {send("uset_clear");}});

var uset_clone = Module.findExportByName("icu.dll", "uset_clone")
Interceptor.attach(uset_clone, {onLeave: function (args) {send("uset_clone");}});

var uset_cloneAsThawed = Module.findExportByName("icu.dll", "uset_cloneAsThawed")
Interceptor.attach(uset_cloneAsThawed, {onLeave: function (args) {send("uset_cloneAsThawed");}});

var uset_close = Module.findExportByName("icu.dll", "uset_close")
Interceptor.attach(uset_close, {onLeave: function (args) {send("uset_close");}});

var uset_closeOver = Module.findExportByName("icu.dll", "uset_closeOver")
Interceptor.attach(uset_closeOver, {onLeave: function (args) {send("uset_closeOver");}});

var uset_compact = Module.findExportByName("icu.dll", "uset_compact")
Interceptor.attach(uset_compact, {onLeave: function (args) {send("uset_compact");}});

var uset_complement = Module.findExportByName("icu.dll", "uset_complement")
Interceptor.attach(uset_complement, {onLeave: function (args) {send("uset_complement");}});

var uset_complementAll = Module.findExportByName("icu.dll", "uset_complementAll")
Interceptor.attach(uset_complementAll, {onLeave: function (args) {send("uset_complementAll");}});

var uset_contains = Module.findExportByName("icu.dll", "uset_contains")
Interceptor.attach(uset_contains, {onLeave: function (args) {send("uset_contains");}});

var uset_containsAll = Module.findExportByName("icu.dll", "uset_containsAll")
Interceptor.attach(uset_containsAll, {onLeave: function (args) {send("uset_containsAll");}});

var uset_containsAllCodePoints = Module.findExportByName("icu.dll", "uset_containsAllCodePoints")
Interceptor.attach(uset_containsAllCodePoints, {onLeave: function (args) {send("uset_containsAllCodePoints");}});

var uset_containsNone = Module.findExportByName("icu.dll", "uset_containsNone")
Interceptor.attach(uset_containsNone, {onLeave: function (args) {send("uset_containsNone");}});

var uset_containsRange = Module.findExportByName("icu.dll", "uset_containsRange")
Interceptor.attach(uset_containsRange, {onLeave: function (args) {send("uset_containsRange");}});

var uset_containsSome = Module.findExportByName("icu.dll", "uset_containsSome")
Interceptor.attach(uset_containsSome, {onLeave: function (args) {send("uset_containsSome");}});

var uset_containsString = Module.findExportByName("icu.dll", "uset_containsString")
Interceptor.attach(uset_containsString, {onLeave: function (args) {send("uset_containsString");}});

var uset_equals = Module.findExportByName("icu.dll", "uset_equals")
Interceptor.attach(uset_equals, {onLeave: function (args) {send("uset_equals");}});

var uset_freeze = Module.findExportByName("icu.dll", "uset_freeze")
Interceptor.attach(uset_freeze, {onLeave: function (args) {send("uset_freeze");}});

var uset_getItem = Module.findExportByName("icu.dll", "uset_getItem")
Interceptor.attach(uset_getItem, {onLeave: function (args) {send("uset_getItem");}});

var uset_getItemCount = Module.findExportByName("icu.dll", "uset_getItemCount")
Interceptor.attach(uset_getItemCount, {onLeave: function (args) {send("uset_getItemCount");}});

var uset_getSerializedRange = Module.findExportByName("icu.dll", "uset_getSerializedRange")
Interceptor.attach(uset_getSerializedRange, {onLeave: function (args) {send("uset_getSerializedRange");}});

var uset_getSerializedRangeCount = Module.findExportByName("icu.dll", "uset_getSerializedRangeCount")
Interceptor.attach(uset_getSerializedRangeCount, {onLeave: function (args) {send("uset_getSerializedRangeCount");}});

var uset_getSerializedSet = Module.findExportByName("icu.dll", "uset_getSerializedSet")
Interceptor.attach(uset_getSerializedSet, {onLeave: function (args) {send("uset_getSerializedSet");}});

var uset_indexOf = Module.findExportByName("icu.dll", "uset_indexOf")
Interceptor.attach(uset_indexOf, {onLeave: function (args) {send("uset_indexOf");}});

var uset_isEmpty = Module.findExportByName("icu.dll", "uset_isEmpty")
Interceptor.attach(uset_isEmpty, {onLeave: function (args) {send("uset_isEmpty");}});

var uset_isFrozen = Module.findExportByName("icu.dll", "uset_isFrozen")
Interceptor.attach(uset_isFrozen, {onLeave: function (args) {send("uset_isFrozen");}});

var uset_open = Module.findExportByName("icu.dll", "uset_open")
Interceptor.attach(uset_open, {onLeave: function (args) {send("uset_open");}});

var uset_openEmpty = Module.findExportByName("icu.dll", "uset_openEmpty")
Interceptor.attach(uset_openEmpty, {onLeave: function (args) {send("uset_openEmpty");}});

var uset_openPattern = Module.findExportByName("icu.dll", "uset_openPattern")
Interceptor.attach(uset_openPattern, {onLeave: function (args) {send("uset_openPattern");}});

var uset_openPatternOptions = Module.findExportByName("icu.dll", "uset_openPatternOptions")
Interceptor.attach(uset_openPatternOptions, {onLeave: function (args) {send("uset_openPatternOptions");}});

var uset_remove = Module.findExportByName("icu.dll", "uset_remove")
Interceptor.attach(uset_remove, {onLeave: function (args) {send("uset_remove");}});

var uset_removeAll = Module.findExportByName("icu.dll", "uset_removeAll")
Interceptor.attach(uset_removeAll, {onLeave: function (args) {send("uset_removeAll");}});

var uset_removeAllStrings = Module.findExportByName("icu.dll", "uset_removeAllStrings")
Interceptor.attach(uset_removeAllStrings, {onLeave: function (args) {send("uset_removeAllStrings");}});

var uset_removeRange = Module.findExportByName("icu.dll", "uset_removeRange")
Interceptor.attach(uset_removeRange, {onLeave: function (args) {send("uset_removeRange");}});

var uset_removeString = Module.findExportByName("icu.dll", "uset_removeString")
Interceptor.attach(uset_removeString, {onLeave: function (args) {send("uset_removeString");}});

var uset_resemblesPattern = Module.findExportByName("icu.dll", "uset_resemblesPattern")
Interceptor.attach(uset_resemblesPattern, {onLeave: function (args) {send("uset_resemblesPattern");}});

var uset_retain = Module.findExportByName("icu.dll", "uset_retain")
Interceptor.attach(uset_retain, {onLeave: function (args) {send("uset_retain");}});

var uset_retainAll = Module.findExportByName("icu.dll", "uset_retainAll")
Interceptor.attach(uset_retainAll, {onLeave: function (args) {send("uset_retainAll");}});

var uset_serialize = Module.findExportByName("icu.dll", "uset_serialize")
Interceptor.attach(uset_serialize, {onLeave: function (args) {send("uset_serialize");}});

var uset_serializedContains = Module.findExportByName("icu.dll", "uset_serializedContains")
Interceptor.attach(uset_serializedContains, {onLeave: function (args) {send("uset_serializedContains");}});

var uset_set = Module.findExportByName("icu.dll", "uset_set")
Interceptor.attach(uset_set, {onLeave: function (args) {send("uset_set");}});

var uset_setSerializedToOne = Module.findExportByName("icu.dll", "uset_setSerializedToOne")
Interceptor.attach(uset_setSerializedToOne, {onLeave: function (args) {send("uset_setSerializedToOne");}});

var uset_size = Module.findExportByName("icu.dll", "uset_size")
Interceptor.attach(uset_size, {onLeave: function (args) {send("uset_size");}});

var uset_span = Module.findExportByName("icu.dll", "uset_span")
Interceptor.attach(uset_span, {onLeave: function (args) {send("uset_span");}});

var uset_spanBack = Module.findExportByName("icu.dll", "uset_spanBack")
Interceptor.attach(uset_spanBack, {onLeave: function (args) {send("uset_spanBack");}});

var uset_spanBackUTF8 = Module.findExportByName("icu.dll", "uset_spanBackUTF8")
Interceptor.attach(uset_spanBackUTF8, {onLeave: function (args) {send("uset_spanBackUTF8");}});

var uset_spanUTF8 = Module.findExportByName("icu.dll", "uset_spanUTF8")
Interceptor.attach(uset_spanUTF8, {onLeave: function (args) {send("uset_spanUTF8");}});

var uset_toPattern = Module.findExportByName("icu.dll", "uset_toPattern")
Interceptor.attach(uset_toPattern, {onLeave: function (args) {send("uset_toPattern");}});

var uspoof_areConfusable = Module.findExportByName("icu.dll", "uspoof_areConfusable")
Interceptor.attach(uspoof_areConfusable, {onLeave: function (args) {send("uspoof_areConfusable");}});

var uspoof_areConfusableUTF8 = Module.findExportByName("icu.dll", "uspoof_areConfusableUTF8")
Interceptor.attach(uspoof_areConfusableUTF8, {onLeave: function (args) {send("uspoof_areConfusableUTF8");}});

var uspoof_check = Module.findExportByName("icu.dll", "uspoof_check")
Interceptor.attach(uspoof_check, {onLeave: function (args) {send("uspoof_check");}});

var uspoof_check2 = Module.findExportByName("icu.dll", "uspoof_check2")
Interceptor.attach(uspoof_check2, {onLeave: function (args) {send("uspoof_check2");}});

var uspoof_check2UTF8 = Module.findExportByName("icu.dll", "uspoof_check2UTF8")
Interceptor.attach(uspoof_check2UTF8, {onLeave: function (args) {send("uspoof_check2UTF8");}});

var uspoof_checkUTF8 = Module.findExportByName("icu.dll", "uspoof_checkUTF8")
Interceptor.attach(uspoof_checkUTF8, {onLeave: function (args) {send("uspoof_checkUTF8");}});

var uspoof_clone = Module.findExportByName("icu.dll", "uspoof_clone")
Interceptor.attach(uspoof_clone, {onLeave: function (args) {send("uspoof_clone");}});

var uspoof_close = Module.findExportByName("icu.dll", "uspoof_close")
Interceptor.attach(uspoof_close, {onLeave: function (args) {send("uspoof_close");}});

var uspoof_closeCheckResult = Module.findExportByName("icu.dll", "uspoof_closeCheckResult")
Interceptor.attach(uspoof_closeCheckResult, {onLeave: function (args) {send("uspoof_closeCheckResult");}});

var uspoof_getAllowedChars = Module.findExportByName("icu.dll", "uspoof_getAllowedChars")
Interceptor.attach(uspoof_getAllowedChars, {onLeave: function (args) {send("uspoof_getAllowedChars");}});

var uspoof_getAllowedLocales = Module.findExportByName("icu.dll", "uspoof_getAllowedLocales")
Interceptor.attach(uspoof_getAllowedLocales, {onLeave: function (args) {send("uspoof_getAllowedLocales");}});

var uspoof_getCheckResultChecks = Module.findExportByName("icu.dll", "uspoof_getCheckResultChecks")
Interceptor.attach(uspoof_getCheckResultChecks, {onLeave: function (args) {send("uspoof_getCheckResultChecks");}});

var uspoof_getCheckResultNumerics = Module.findExportByName("icu.dll", "uspoof_getCheckResultNumerics")
Interceptor.attach(uspoof_getCheckResultNumerics, {onLeave: function (args) {send("uspoof_getCheckResultNumerics");}});

var uspoof_getCheckResultRestrictionLevel = Module.findExportByName("icu.dll", "uspoof_getCheckResultRestrictionLevel")
Interceptor.attach(uspoof_getCheckResultRestrictionLevel, {onLeave: function (args) {send("uspoof_getCheckResultRestrictionLevel");}});

var uspoof_getChecks = Module.findExportByName("icu.dll", "uspoof_getChecks")
Interceptor.attach(uspoof_getChecks, {onLeave: function (args) {send("uspoof_getChecks");}});

var uspoof_getInclusionSet = Module.findExportByName("icu.dll", "uspoof_getInclusionSet")
Interceptor.attach(uspoof_getInclusionSet, {onLeave: function (args) {send("uspoof_getInclusionSet");}});

var uspoof_getRecommendedSet = Module.findExportByName("icu.dll", "uspoof_getRecommendedSet")
Interceptor.attach(uspoof_getRecommendedSet, {onLeave: function (args) {send("uspoof_getRecommendedSet");}});

var uspoof_getRestrictionLevel = Module.findExportByName("icu.dll", "uspoof_getRestrictionLevel")
Interceptor.attach(uspoof_getRestrictionLevel, {onLeave: function (args) {send("uspoof_getRestrictionLevel");}});

var uspoof_getSkeleton = Module.findExportByName("icu.dll", "uspoof_getSkeleton")
Interceptor.attach(uspoof_getSkeleton, {onLeave: function (args) {send("uspoof_getSkeleton");}});

var uspoof_getSkeletonUTF8 = Module.findExportByName("icu.dll", "uspoof_getSkeletonUTF8")
Interceptor.attach(uspoof_getSkeletonUTF8, {onLeave: function (args) {send("uspoof_getSkeletonUTF8");}});

var uspoof_open = Module.findExportByName("icu.dll", "uspoof_open")
Interceptor.attach(uspoof_open, {onLeave: function (args) {send("uspoof_open");}});

var uspoof_openCheckResult = Module.findExportByName("icu.dll", "uspoof_openCheckResult")
Interceptor.attach(uspoof_openCheckResult, {onLeave: function (args) {send("uspoof_openCheckResult");}});

var uspoof_openFromSerialized = Module.findExportByName("icu.dll", "uspoof_openFromSerialized")
Interceptor.attach(uspoof_openFromSerialized, {onLeave: function (args) {send("uspoof_openFromSerialized");}});

var uspoof_openFromSource = Module.findExportByName("icu.dll", "uspoof_openFromSource")
Interceptor.attach(uspoof_openFromSource, {onLeave: function (args) {send("uspoof_openFromSource");}});

var uspoof_serialize = Module.findExportByName("icu.dll", "uspoof_serialize")
Interceptor.attach(uspoof_serialize, {onLeave: function (args) {send("uspoof_serialize");}});

var uspoof_setAllowedChars = Module.findExportByName("icu.dll", "uspoof_setAllowedChars")
Interceptor.attach(uspoof_setAllowedChars, {onLeave: function (args) {send("uspoof_setAllowedChars");}});

var uspoof_setAllowedLocales = Module.findExportByName("icu.dll", "uspoof_setAllowedLocales")
Interceptor.attach(uspoof_setAllowedLocales, {onLeave: function (args) {send("uspoof_setAllowedLocales");}});

var uspoof_setChecks = Module.findExportByName("icu.dll", "uspoof_setChecks")
Interceptor.attach(uspoof_setChecks, {onLeave: function (args) {send("uspoof_setChecks");}});

var uspoof_setRestrictionLevel = Module.findExportByName("icu.dll", "uspoof_setRestrictionLevel")
Interceptor.attach(uspoof_setRestrictionLevel, {onLeave: function (args) {send("uspoof_setRestrictionLevel");}});

var usprep_close = Module.findExportByName("icu.dll", "usprep_close")
Interceptor.attach(usprep_close, {onLeave: function (args) {send("usprep_close");}});

var usprep_open = Module.findExportByName("icu.dll", "usprep_open")
Interceptor.attach(usprep_open, {onLeave: function (args) {send("usprep_open");}});

var usprep_openByType = Module.findExportByName("icu.dll", "usprep_openByType")
Interceptor.attach(usprep_openByType, {onLeave: function (args) {send("usprep_openByType");}});

var usprep_prepare = Module.findExportByName("icu.dll", "usprep_prepare")
Interceptor.attach(usprep_prepare, {onLeave: function (args) {send("usprep_prepare");}});

var utext_char32At = Module.findExportByName("icu.dll", "utext_char32At")
Interceptor.attach(utext_char32At, {onLeave: function (args) {send("utext_char32At");}});

var utext_clone = Module.findExportByName("icu.dll", "utext_clone")
Interceptor.attach(utext_clone, {onLeave: function (args) {send("utext_clone");}});

var utext_close = Module.findExportByName("icu.dll", "utext_close")
Interceptor.attach(utext_close, {onLeave: function (args) {send("utext_close");}});

var utext_copy = Module.findExportByName("icu.dll", "utext_copy")
Interceptor.attach(utext_copy, {onLeave: function (args) {send("utext_copy");}});

var utext_current32 = Module.findExportByName("icu.dll", "utext_current32")
Interceptor.attach(utext_current32, {onLeave: function (args) {send("utext_current32");}});

var utext_equals = Module.findExportByName("icu.dll", "utext_equals")
Interceptor.attach(utext_equals, {onLeave: function (args) {send("utext_equals");}});

var utext_extract = Module.findExportByName("icu.dll", "utext_extract")
Interceptor.attach(utext_extract, {onLeave: function (args) {send("utext_extract");}});

var utext_freeze = Module.findExportByName("icu.dll", "utext_freeze")
Interceptor.attach(utext_freeze, {onLeave: function (args) {send("utext_freeze");}});

var utext_getNativeIndex = Module.findExportByName("icu.dll", "utext_getNativeIndex")
Interceptor.attach(utext_getNativeIndex, {onLeave: function (args) {send("utext_getNativeIndex");}});

var utext_getPreviousNativeIndex = Module.findExportByName("icu.dll", "utext_getPreviousNativeIndex")
Interceptor.attach(utext_getPreviousNativeIndex, {onLeave: function (args) {send("utext_getPreviousNativeIndex");}});

var utext_hasMetaData = Module.findExportByName("icu.dll", "utext_hasMetaData")
Interceptor.attach(utext_hasMetaData, {onLeave: function (args) {send("utext_hasMetaData");}});

var utext_isLengthExpensive = Module.findExportByName("icu.dll", "utext_isLengthExpensive")
Interceptor.attach(utext_isLengthExpensive, {onLeave: function (args) {send("utext_isLengthExpensive");}});

var utext_isWritable = Module.findExportByName("icu.dll", "utext_isWritable")
Interceptor.attach(utext_isWritable, {onLeave: function (args) {send("utext_isWritable");}});

var utext_moveIndex32 = Module.findExportByName("icu.dll", "utext_moveIndex32")
Interceptor.attach(utext_moveIndex32, {onLeave: function (args) {send("utext_moveIndex32");}});

var utext_nativeLength = Module.findExportByName("icu.dll", "utext_nativeLength")
Interceptor.attach(utext_nativeLength, {onLeave: function (args) {send("utext_nativeLength");}});

var utext_next32 = Module.findExportByName("icu.dll", "utext_next32")
Interceptor.attach(utext_next32, {onLeave: function (args) {send("utext_next32");}});

var utext_next32From = Module.findExportByName("icu.dll", "utext_next32From")
Interceptor.attach(utext_next32From, {onLeave: function (args) {send("utext_next32From");}});

var utext_openUChars = Module.findExportByName("icu.dll", "utext_openUChars")
Interceptor.attach(utext_openUChars, {onLeave: function (args) {send("utext_openUChars");}});

var utext_openUTF8 = Module.findExportByName("icu.dll", "utext_openUTF8")
Interceptor.attach(utext_openUTF8, {onLeave: function (args) {send("utext_openUTF8");}});

var utext_previous32 = Module.findExportByName("icu.dll", "utext_previous32")
Interceptor.attach(utext_previous32, {onLeave: function (args) {send("utext_previous32");}});

var utext_previous32From = Module.findExportByName("icu.dll", "utext_previous32From")
Interceptor.attach(utext_previous32From, {onLeave: function (args) {send("utext_previous32From");}});

var utext_replace = Module.findExportByName("icu.dll", "utext_replace")
Interceptor.attach(utext_replace, {onLeave: function (args) {send("utext_replace");}});

var utext_setNativeIndex = Module.findExportByName("icu.dll", "utext_setNativeIndex")
Interceptor.attach(utext_setNativeIndex, {onLeave: function (args) {send("utext_setNativeIndex");}});

var utext_setup = Module.findExportByName("icu.dll", "utext_setup")
Interceptor.attach(utext_setup, {onLeave: function (args) {send("utext_setup");}});

var utf8_appendCharSafeBody = Module.findExportByName("icu.dll", "utf8_appendCharSafeBody")
Interceptor.attach(utf8_appendCharSafeBody, {onLeave: function (args) {send("utf8_appendCharSafeBody");}});

var utf8_back1SafeBody = Module.findExportByName("icu.dll", "utf8_back1SafeBody")
Interceptor.attach(utf8_back1SafeBody, {onLeave: function (args) {send("utf8_back1SafeBody");}});

var utf8_nextCharSafeBody = Module.findExportByName("icu.dll", "utf8_nextCharSafeBody")
Interceptor.attach(utf8_nextCharSafeBody, {onLeave: function (args) {send("utf8_nextCharSafeBody");}});

var utf8_prevCharSafeBody = Module.findExportByName("icu.dll", "utf8_prevCharSafeBody")
Interceptor.attach(utf8_prevCharSafeBody, {onLeave: function (args) {send("utf8_prevCharSafeBody");}});

var utmscale_fromInt64 = Module.findExportByName("icu.dll", "utmscale_fromInt64")
Interceptor.attach(utmscale_fromInt64, {onLeave: function (args) {send("utmscale_fromInt64");}});

var utmscale_getTimeScaleValue = Module.findExportByName("icu.dll", "utmscale_getTimeScaleValue")
Interceptor.attach(utmscale_getTimeScaleValue, {onLeave: function (args) {send("utmscale_getTimeScaleValue");}});

var utmscale_toInt64 = Module.findExportByName("icu.dll", "utmscale_toInt64")
Interceptor.attach(utmscale_toInt64, {onLeave: function (args) {send("utmscale_toInt64");}});

var utrace_format = Module.findExportByName("icu.dll", "utrace_format")
Interceptor.attach(utrace_format, {onLeave: function (args) {send("utrace_format");}});

var utrace_functionName = Module.findExportByName("icu.dll", "utrace_functionName")
Interceptor.attach(utrace_functionName, {onLeave: function (args) {send("utrace_functionName");}});

var utrace_getFunctions = Module.findExportByName("icu.dll", "utrace_getFunctions")
Interceptor.attach(utrace_getFunctions, {onLeave: function (args) {send("utrace_getFunctions");}});

var utrace_getLevel = Module.findExportByName("icu.dll", "utrace_getLevel")
Interceptor.attach(utrace_getLevel, {onLeave: function (args) {send("utrace_getLevel");}});

var utrace_setFunctions = Module.findExportByName("icu.dll", "utrace_setFunctions")
Interceptor.attach(utrace_setFunctions, {onLeave: function (args) {send("utrace_setFunctions");}});

var utrace_setLevel = Module.findExportByName("icu.dll", "utrace_setLevel")
Interceptor.attach(utrace_setLevel, {onLeave: function (args) {send("utrace_setLevel");}});

var utrace_vformat = Module.findExportByName("icu.dll", "utrace_vformat")
Interceptor.attach(utrace_vformat, {onLeave: function (args) {send("utrace_vformat");}});

var utrans_clone = Module.findExportByName("icu.dll", "utrans_clone")
Interceptor.attach(utrans_clone, {onLeave: function (args) {send("utrans_clone");}});

var utrans_close = Module.findExportByName("icu.dll", "utrans_close")
Interceptor.attach(utrans_close, {onLeave: function (args) {send("utrans_close");}});

var utrans_countAvailableIDs = Module.findExportByName("icu.dll", "utrans_countAvailableIDs")
Interceptor.attach(utrans_countAvailableIDs, {onLeave: function (args) {send("utrans_countAvailableIDs");}});

var utrans_getSourceSet = Module.findExportByName("icu.dll", "utrans_getSourceSet")
Interceptor.attach(utrans_getSourceSet, {onLeave: function (args) {send("utrans_getSourceSet");}});

var utrans_getUnicodeID = Module.findExportByName("icu.dll", "utrans_getUnicodeID")
Interceptor.attach(utrans_getUnicodeID, {onLeave: function (args) {send("utrans_getUnicodeID");}});

var utrans_openIDs = Module.findExportByName("icu.dll", "utrans_openIDs")
Interceptor.attach(utrans_openIDs, {onLeave: function (args) {send("utrans_openIDs");}});

var utrans_openInverse = Module.findExportByName("icu.dll", "utrans_openInverse")
Interceptor.attach(utrans_openInverse, {onLeave: function (args) {send("utrans_openInverse");}});

var utrans_openU = Module.findExportByName("icu.dll", "utrans_openU")
Interceptor.attach(utrans_openU, {onLeave: function (args) {send("utrans_openU");}});

var utrans_register = Module.findExportByName("icu.dll", "utrans_register")
Interceptor.attach(utrans_register, {onLeave: function (args) {send("utrans_register");}});

var utrans_setFilter = Module.findExportByName("icu.dll", "utrans_setFilter")
Interceptor.attach(utrans_setFilter, {onLeave: function (args) {send("utrans_setFilter");}});

var utrans_toRules = Module.findExportByName("icu.dll", "utrans_toRules")
Interceptor.attach(utrans_toRules, {onLeave: function (args) {send("utrans_toRules");}});

var utrans_trans = Module.findExportByName("icu.dll", "utrans_trans")
Interceptor.attach(utrans_trans, {onLeave: function (args) {send("utrans_trans");}});

var utrans_transIncremental = Module.findExportByName("icu.dll", "utrans_transIncremental")
Interceptor.attach(utrans_transIncremental, {onLeave: function (args) {send("utrans_transIncremental");}});

var utrans_transIncrementalUChars = Module.findExportByName("icu.dll", "utrans_transIncrementalUChars")
Interceptor.attach(utrans_transIncrementalUChars, {onLeave: function (args) {send("utrans_transIncrementalUChars");}});

var utrans_transUChars = Module.findExportByName("icu.dll", "utrans_transUChars")
Interceptor.attach(utrans_transUChars, {onLeave: function (args) {send("utrans_transUChars");}});

var utrans_unregisterID = Module.findExportByName("icu.dll", "utrans_unregisterID")
Interceptor.attach(utrans_unregisterID, {onLeave: function (args) {send("utrans_unregisterID");}});

