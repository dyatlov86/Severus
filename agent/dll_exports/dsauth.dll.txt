var DhcpAddServerDS = Module.findExportByName("dsauth.dll", "DhcpAddServerDS")
Interceptor.attach(DhcpAddServerDS, {onLeave: function (args) {send("DhcpAddServerDS");}});

var DhcpDeleteServerDS = Module.findExportByName("dsauth.dll", "DhcpDeleteServerDS")
Interceptor.attach(DhcpDeleteServerDS, {onLeave: function (args) {send("DhcpDeleteServerDS");}});

var DhcpDsAddServer = Module.findExportByName("dsauth.dll", "DhcpDsAddServer")
Interceptor.attach(DhcpDsAddServer, {onLeave: function (args) {send("DhcpDsAddServer");}});

var DhcpDsCleanupDS = Module.findExportByName("dsauth.dll", "DhcpDsCleanupDS")
Interceptor.attach(DhcpDsCleanupDS, {onLeave: function (args) {send("DhcpDsCleanupDS");}});

var DhcpDsDelServer = Module.findExportByName("dsauth.dll", "DhcpDsDelServer")
Interceptor.attach(DhcpDsDelServer, {onLeave: function (args) {send("DhcpDsDelServer");}});

var DhcpDsEnumServers = Module.findExportByName("dsauth.dll", "DhcpDsEnumServers")
Interceptor.attach(DhcpDsEnumServers, {onLeave: function (args) {send("DhcpDsEnumServers");}});

var DhcpDsGetAttribs = Module.findExportByName("dsauth.dll", "DhcpDsGetAttribs")
Interceptor.attach(DhcpDsGetAttribs, {onLeave: function (args) {send("DhcpDsGetAttribs");}});

var DhcpDsGetLists = Module.findExportByName("dsauth.dll", "DhcpDsGetLists")
Interceptor.attach(DhcpDsGetLists, {onLeave: function (args) {send("DhcpDsGetLists");}});

var DhcpDsGetRoot = Module.findExportByName("dsauth.dll", "DhcpDsGetRoot")
Interceptor.attach(DhcpDsGetRoot, {onLeave: function (args) {send("DhcpDsGetRoot");}});

var DhcpDsInitDS = Module.findExportByName("dsauth.dll", "DhcpDsInitDS")
Interceptor.attach(DhcpDsInitDS, {onLeave: function (args) {send("DhcpDsInitDS");}});

var DhcpDsSetLists = Module.findExportByName("dsauth.dll", "DhcpDsSetLists")
Interceptor.attach(DhcpDsSetLists, {onLeave: function (args) {send("DhcpDsSetLists");}});

var DhcpDsValidateService = Module.findExportByName("dsauth.dll", "DhcpDsValidateService")
Interceptor.attach(DhcpDsValidateService, {onLeave: function (args) {send("DhcpDsValidateService");}});

var DhcpEnumServersDS = Module.findExportByName("dsauth.dll", "DhcpEnumServersDS")
Interceptor.attach(DhcpEnumServersDS, {onLeave: function (args) {send("DhcpEnumServersDS");}});

var StoreBeginSearch = Module.findExportByName("dsauth.dll", "StoreBeginSearch")
Interceptor.attach(StoreBeginSearch, {onLeave: function (args) {send("StoreBeginSearch");}});

var StoreCleanupHandle = Module.findExportByName("dsauth.dll", "StoreCleanupHandle")
Interceptor.attach(StoreCleanupHandle, {onLeave: function (args) {send("StoreCleanupHandle");}});

var StoreCollectAttributes = Module.findExportByName("dsauth.dll", "StoreCollectAttributes")
Interceptor.attach(StoreCollectAttributes, {onLeave: function (args) {send("StoreCollectAttributes");}});

var StoreCreateObjectVA = Module.findExportByName("dsauth.dll", "StoreCreateObjectVA")
Interceptor.attach(StoreCreateObjectVA, {onLeave: function (args) {send("StoreCreateObjectVA");}});

var StoreDeleteObject = Module.findExportByName("dsauth.dll", "StoreDeleteObject")
Interceptor.attach(StoreDeleteObject, {onLeave: function (args) {send("StoreDeleteObject");}});

var StoreEndSearch = Module.findExportByName("dsauth.dll", "StoreEndSearch")
Interceptor.attach(StoreEndSearch, {onLeave: function (args) {send("StoreEndSearch");}});

var StoreGetHandle = Module.findExportByName("dsauth.dll", "StoreGetHandle")
Interceptor.attach(StoreGetHandle, {onLeave: function (args) {send("StoreGetHandle");}});

var StoreInitHandle = Module.findExportByName("dsauth.dll", "StoreInitHandle")
Interceptor.attach(StoreInitHandle, {onLeave: function (args) {send("StoreInitHandle");}});

var StoreSearchGetNext = Module.findExportByName("dsauth.dll", "StoreSearchGetNext")
Interceptor.attach(StoreSearchGetNext, {onLeave: function (args) {send("StoreSearchGetNext");}});

var StoreSetSearchOneLevel = Module.findExportByName("dsauth.dll", "StoreSetSearchOneLevel")
Interceptor.attach(StoreSetSearchOneLevel, {onLeave: function (args) {send("StoreSetSearchOneLevel");}});

var StoreSetSearchSubTree = Module.findExportByName("dsauth.dll", "StoreSetSearchSubTree")
Interceptor.attach(StoreSetSearchSubTree, {onLeave: function (args) {send("StoreSetSearchSubTree");}});

