var Dhcpv6AcquireParameters = Module.findExportByName("dhcpcsvc6.dll", "Dhcpv6AcquireParameters")
Interceptor.attach(Dhcpv6AcquireParameters, {onLeave: function (args) {send("Dhcpv6AcquireParameters");}});

var Dhcpv6CApiCleanup = Module.findExportByName("dhcpcsvc6.dll", "Dhcpv6CApiCleanup")
Interceptor.attach(Dhcpv6CApiCleanup, {onLeave: function (args) {send("Dhcpv6CApiCleanup");}});

var Dhcpv6CApiInitialize = Module.findExportByName("dhcpcsvc6.dll", "Dhcpv6CApiInitialize")
Interceptor.attach(Dhcpv6CApiInitialize, {onLeave: function (args) {send("Dhcpv6CApiInitialize");}});

var Dhcpv6CancelOperation = Module.findExportByName("dhcpcsvc6.dll", "Dhcpv6CancelOperation")
Interceptor.attach(Dhcpv6CancelOperation, {onLeave: function (args) {send("Dhcpv6CancelOperation");}});

var Dhcpv6EnableDhcp = Module.findExportByName("dhcpcsvc6.dll", "Dhcpv6EnableDhcp")
Interceptor.attach(Dhcpv6EnableDhcp, {onLeave: function (args) {send("Dhcpv6EnableDhcp");}});

var Dhcpv6EnableTracing = Module.findExportByName("dhcpcsvc6.dll", "Dhcpv6EnableTracing")
Interceptor.attach(Dhcpv6EnableTracing, {onLeave: function (args) {send("Dhcpv6EnableTracing");}});

var Dhcpv6FreeLeaseInfo = Module.findExportByName("dhcpcsvc6.dll", "Dhcpv6FreeLeaseInfo")
Interceptor.attach(Dhcpv6FreeLeaseInfo, {onLeave: function (args) {send("Dhcpv6FreeLeaseInfo");}});

var Dhcpv6FreeLeaseInfoArray = Module.findExportByName("dhcpcsvc6.dll", "Dhcpv6FreeLeaseInfoArray")
Interceptor.attach(Dhcpv6FreeLeaseInfoArray, {onLeave: function (args) {send("Dhcpv6FreeLeaseInfoArray");}});

var Dhcpv6GetTraceArray = Module.findExportByName("dhcpcsvc6.dll", "Dhcpv6GetTraceArray")
Interceptor.attach(Dhcpv6GetTraceArray, {onLeave: function (args) {send("Dhcpv6GetTraceArray");}});

var Dhcpv6GetUserClasses = Module.findExportByName("dhcpcsvc6.dll", "Dhcpv6GetUserClasses")
Interceptor.attach(Dhcpv6GetUserClasses, {onLeave: function (args) {send("Dhcpv6GetUserClasses");}});

var Dhcpv6IsEnabled = Module.findExportByName("dhcpcsvc6.dll", "Dhcpv6IsEnabled")
Interceptor.attach(Dhcpv6IsEnabled, {onLeave: function (args) {send("Dhcpv6IsEnabled");}});

var Dhcpv6QueryLeaseInfo = Module.findExportByName("dhcpcsvc6.dll", "Dhcpv6QueryLeaseInfo")
Interceptor.attach(Dhcpv6QueryLeaseInfo, {onLeave: function (args) {send("Dhcpv6QueryLeaseInfo");}});

var Dhcpv6QueryLeaseInfoArray = Module.findExportByName("dhcpcsvc6.dll", "Dhcpv6QueryLeaseInfoArray")
Interceptor.attach(Dhcpv6QueryLeaseInfoArray, {onLeave: function (args) {send("Dhcpv6QueryLeaseInfoArray");}});

var Dhcpv6ReleaseParameters = Module.findExportByName("dhcpcsvc6.dll", "Dhcpv6ReleaseParameters")
Interceptor.attach(Dhcpv6ReleaseParameters, {onLeave: function (args) {send("Dhcpv6ReleaseParameters");}});

var Dhcpv6ReleasePrefix = Module.findExportByName("dhcpcsvc6.dll", "Dhcpv6ReleasePrefix")
Interceptor.attach(Dhcpv6ReleasePrefix, {onLeave: function (args) {send("Dhcpv6ReleasePrefix");}});

var Dhcpv6ReleasePrefixEx = Module.findExportByName("dhcpcsvc6.dll", "Dhcpv6ReleasePrefixEx")
Interceptor.attach(Dhcpv6ReleasePrefixEx, {onLeave: function (args) {send("Dhcpv6ReleasePrefixEx");}});

var Dhcpv6RenewPrefix = Module.findExportByName("dhcpcsvc6.dll", "Dhcpv6RenewPrefix")
Interceptor.attach(Dhcpv6RenewPrefix, {onLeave: function (args) {send("Dhcpv6RenewPrefix");}});

var Dhcpv6RenewPrefixEx = Module.findExportByName("dhcpcsvc6.dll", "Dhcpv6RenewPrefixEx")
Interceptor.attach(Dhcpv6RenewPrefixEx, {onLeave: function (args) {send("Dhcpv6RenewPrefixEx");}});

var Dhcpv6RequestParams = Module.findExportByName("dhcpcsvc6.dll", "Dhcpv6RequestParams")
Interceptor.attach(Dhcpv6RequestParams, {onLeave: function (args) {send("Dhcpv6RequestParams");}});

var Dhcpv6RequestPrefix = Module.findExportByName("dhcpcsvc6.dll", "Dhcpv6RequestPrefix")
Interceptor.attach(Dhcpv6RequestPrefix, {onLeave: function (args) {send("Dhcpv6RequestPrefix");}});

var Dhcpv6RequestPrefixEx = Module.findExportByName("dhcpcsvc6.dll", "Dhcpv6RequestPrefixEx")
Interceptor.attach(Dhcpv6RequestPrefixEx, {onLeave: function (args) {send("Dhcpv6RequestPrefixEx");}});

var Dhcpv6SetUserClass = Module.findExportByName("dhcpcsvc6.dll", "Dhcpv6SetUserClass")
Interceptor.attach(Dhcpv6SetUserClass, {onLeave: function (args) {send("Dhcpv6SetUserClass");}});

