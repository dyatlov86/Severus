var PdcAcquireRwLockExclusive = Module.findExportByName("umpdc.dll", "PdcAcquireRwLockExclusive")
Interceptor.attach(PdcAcquireRwLockExclusive, {onLeave: function (args) {send("PdcAcquireRwLockExclusive");}});

var PdcActivationClientActivityRequest = Module.findExportByName("umpdc.dll", "PdcActivationClientActivityRequest")
Interceptor.attach(PdcActivationClientActivityRequest, {onLeave: function (args) {send("PdcActivationClientActivityRequest");}});

var PdcActivationClientRegister = Module.findExportByName("umpdc.dll", "PdcActivationClientRegister")
Interceptor.attach(PdcActivationClientRegister, {onLeave: function (args) {send("PdcActivationClientRegister");}});

var PdcActivationClientUnregister = Module.findExportByName("umpdc.dll", "PdcActivationClientUnregister")
Interceptor.attach(PdcActivationClientUnregister, {onLeave: function (args) {send("PdcActivationClientUnregister");}});

var PdcAllocate = Module.findExportByName("umpdc.dll", "PdcAllocate")
Interceptor.attach(PdcAllocate, {onLeave: function (args) {send("PdcAllocate");}});

var PdcFree = Module.findExportByName("umpdc.dll", "PdcFree")
Interceptor.attach(PdcFree, {onLeave: function (args) {send("PdcFree");}});

var PdcNotificationClientAcknowledge = Module.findExportByName("umpdc.dll", "PdcNotificationClientAcknowledge")
Interceptor.attach(PdcNotificationClientAcknowledge, {onLeave: function (args) {send("PdcNotificationClientAcknowledge");}});

var PdcNotificationClientRegister = Module.findExportByName("umpdc.dll", "PdcNotificationClientRegister")
Interceptor.attach(PdcNotificationClientRegister, {onLeave: function (args) {send("PdcNotificationClientRegister");}});

var PdcNotificationClientUnregister = Module.findExportByName("umpdc.dll", "PdcNotificationClientUnregister")
Interceptor.attach(PdcNotificationClientUnregister, {onLeave: function (args) {send("PdcNotificationClientUnregister");}});

var PdcPortClose = Module.findExportByName("umpdc.dll", "PdcPortClose")
Interceptor.attach(PdcPortClose, {onLeave: function (args) {send("PdcPortClose");}});

var PdcPortOpen = Module.findExportByName("umpdc.dll", "PdcPortOpen")
Interceptor.attach(PdcPortOpen, {onLeave: function (args) {send("PdcPortOpen");}});

var PdcPortSendMessage = Module.findExportByName("umpdc.dll", "PdcPortSendMessage")
Interceptor.attach(PdcPortSendMessage, {onLeave: function (args) {send("PdcPortSendMessage");}});

var PdcPortSendMessageSynchronously = Module.findExportByName("umpdc.dll", "PdcPortSendMessageSynchronously")
Interceptor.attach(PdcPortSendMessageSynchronously, {onLeave: function (args) {send("PdcPortSendMessageSynchronously");}});

var PdcPpmProfileClientRegister = Module.findExportByName("umpdc.dll", "PdcPpmProfileClientRegister")
Interceptor.attach(PdcPpmProfileClientRegister, {onLeave: function (args) {send("PdcPpmProfileClientRegister");}});

var PdcPpmProfileClientUnregister = Module.findExportByName("umpdc.dll", "PdcPpmProfileClientUnregister")
Interceptor.attach(PdcPpmProfileClientUnregister, {onLeave: function (args) {send("PdcPpmProfileClientUnregister");}});

var PdcPpmProfileDisable = Module.findExportByName("umpdc.dll", "PdcPpmProfileDisable")
Interceptor.attach(PdcPpmProfileDisable, {onLeave: function (args) {send("PdcPpmProfileDisable");}});

var PdcPpmProfileEnable = Module.findExportByName("umpdc.dll", "PdcPpmProfileEnable")
Interceptor.attach(PdcPpmProfileEnable, {onLeave: function (args) {send("PdcPpmProfileEnable");}});

var PdcReleaseRwLockExclusive = Module.findExportByName("umpdc.dll", "PdcReleaseRwLockExclusive")
Interceptor.attach(PdcReleaseRwLockExclusive, {onLeave: function (args) {send("PdcReleaseRwLockExclusive");}});

var PdcResiliencyClientAcknowledge = Module.findExportByName("umpdc.dll", "PdcResiliencyClientAcknowledge")
Interceptor.attach(PdcResiliencyClientAcknowledge, {onLeave: function (args) {send("PdcResiliencyClientAcknowledge");}});

var PdcResiliencyClientRegister = Module.findExportByName("umpdc.dll", "PdcResiliencyClientRegister")
Interceptor.attach(PdcResiliencyClientRegister, {onLeave: function (args) {send("PdcResiliencyClientRegister");}});

var PdcResiliencyClientUnregister = Module.findExportByName("umpdc.dll", "PdcResiliencyClientUnregister")
Interceptor.attach(PdcResiliencyClientUnregister, {onLeave: function (args) {send("PdcResiliencyClientUnregister");}});

var PdcRwLockInitialize = Module.findExportByName("umpdc.dll", "PdcRwLockInitialize")
Interceptor.attach(PdcRwLockInitialize, {onLeave: function (args) {send("PdcRwLockInitialize");}});

var PdcSignalClientPulse = Module.findExportByName("umpdc.dll", "PdcSignalClientPulse")
Interceptor.attach(PdcSignalClientPulse, {onLeave: function (args) {send("PdcSignalClientPulse");}});

var PdcSignalClientRegister = Module.findExportByName("umpdc.dll", "PdcSignalClientRegister")
Interceptor.attach(PdcSignalClientRegister, {onLeave: function (args) {send("PdcSignalClientRegister");}});

var PdcSignalClientSetActive = Module.findExportByName("umpdc.dll", "PdcSignalClientSetActive")
Interceptor.attach(PdcSignalClientSetActive, {onLeave: function (args) {send("PdcSignalClientSetActive");}});

var PdcSignalClientUnregister = Module.findExportByName("umpdc.dll", "PdcSignalClientUnregister")
Interceptor.attach(PdcSignalClientUnregister, {onLeave: function (args) {send("PdcSignalClientUnregister");}});

var PdcSleep = Module.findExportByName("umpdc.dll", "PdcSleep")
Interceptor.attach(PdcSleep, {onLeave: function (args) {send("PdcSleep");}});

var PdcTaskClientRegister = Module.findExportByName("umpdc.dll", "PdcTaskClientRegister")
Interceptor.attach(PdcTaskClientRegister, {onLeave: function (args) {send("PdcTaskClientRegister");}});

var PdcTaskClientRequest = Module.findExportByName("umpdc.dll", "PdcTaskClientRequest")
Interceptor.attach(PdcTaskClientRequest, {onLeave: function (args) {send("PdcTaskClientRequest");}});

var PdcTaskClientUnregister = Module.findExportByName("umpdc.dll", "PdcTaskClientUnregister")
Interceptor.attach(PdcTaskClientUnregister, {onLeave: function (args) {send("PdcTaskClientUnregister");}});

var Pdcv2ActivationClientActivate = Module.findExportByName("umpdc.dll", "Pdcv2ActivationClientActivate")
Interceptor.attach(Pdcv2ActivationClientActivate, {onLeave: function (args) {send("Pdcv2ActivationClientActivate");}});

var Pdcv2ActivationClientDeactivate = Module.findExportByName("umpdc.dll", "Pdcv2ActivationClientDeactivate")
Interceptor.attach(Pdcv2ActivationClientDeactivate, {onLeave: function (args) {send("Pdcv2ActivationClientDeactivate");}});

var Pdcv2ActivationClientRegister = Module.findExportByName("umpdc.dll", "Pdcv2ActivationClientRegister")
Interceptor.attach(Pdcv2ActivationClientRegister, {onLeave: function (args) {send("Pdcv2ActivationClientRegister");}});

var Pdcv2ActivationClientRenewActivation = Module.findExportByName("umpdc.dll", "Pdcv2ActivationClientRenewActivation")
Interceptor.attach(Pdcv2ActivationClientRenewActivation, {onLeave: function (args) {send("Pdcv2ActivationClientRenewActivation");}});

var Pdcv2ActivationClientSetBrokeredProcessId = Module.findExportByName("umpdc.dll", "Pdcv2ActivationClientSetBrokeredProcessId")
Interceptor.attach(Pdcv2ActivationClientSetBrokeredProcessId, {onLeave: function (args) {send("Pdcv2ActivationClientSetBrokeredProcessId");}});

var Pdcv2ActivationClientUnregister = Module.findExportByName("umpdc.dll", "Pdcv2ActivationClientUnregister")
Interceptor.attach(Pdcv2ActivationClientUnregister, {onLeave: function (args) {send("Pdcv2ActivationClientUnregister");}});

var SleepstudyHelperBlockerActiveDereference = Module.findExportByName("umpdc.dll", "SleepstudyHelperBlockerActiveDereference")
Interceptor.attach(SleepstudyHelperBlockerActiveDereference, {onLeave: function (args) {send("SleepstudyHelperBlockerActiveDereference");}});

var SleepstudyHelperBlockerActiveReference = Module.findExportByName("umpdc.dll", "SleepstudyHelperBlockerActiveReference")
Interceptor.attach(SleepstudyHelperBlockerActiveReference, {onLeave: function (args) {send("SleepstudyHelperBlockerActiveReference");}});

var SleepstudyHelperBuildBlocker = Module.findExportByName("umpdc.dll", "SleepstudyHelperBuildBlocker")
Interceptor.attach(SleepstudyHelperBuildBlocker, {onLeave: function (args) {send("SleepstudyHelperBuildBlocker");}});

var SleepstudyHelperCreateBlockerFromGuid = Module.findExportByName("umpdc.dll", "SleepstudyHelperCreateBlockerFromGuid")
Interceptor.attach(SleepstudyHelperCreateBlockerFromGuid, {onLeave: function (args) {send("SleepstudyHelperCreateBlockerFromGuid");}});

var SleepstudyHelperCreateLibrary = Module.findExportByName("umpdc.dll", "SleepstudyHelperCreateLibrary")
Interceptor.attach(SleepstudyHelperCreateLibrary, {onLeave: function (args) {send("SleepstudyHelperCreateLibrary");}});

var SleepstudyHelperDestroyBlocker = Module.findExportByName("umpdc.dll", "SleepstudyHelperDestroyBlocker")
Interceptor.attach(SleepstudyHelperDestroyBlocker, {onLeave: function (args) {send("SleepstudyHelperDestroyBlocker");}});

var SleepstudyHelperDestroyBlockerBuilder = Module.findExportByName("umpdc.dll", "SleepstudyHelperDestroyBlockerBuilder")
Interceptor.attach(SleepstudyHelperDestroyBlockerBuilder, {onLeave: function (args) {send("SleepstudyHelperDestroyBlockerBuilder");}});

var SleepstudyHelperDestroyLibrary = Module.findExportByName("umpdc.dll", "SleepstudyHelperDestroyLibrary")
Interceptor.attach(SleepstudyHelperDestroyLibrary, {onLeave: function (args) {send("SleepstudyHelperDestroyLibrary");}});

var SleepstudyHelperGetBlockerGuid = Module.findExportByName("umpdc.dll", "SleepstudyHelperGetBlockerGuid")
Interceptor.attach(SleepstudyHelperGetBlockerGuid, {onLeave: function (args) {send("SleepstudyHelperGetBlockerGuid");}});

var SleepstudyHelperSetBlockerFriendlyName = Module.findExportByName("umpdc.dll", "SleepstudyHelperSetBlockerFriendlyName")
Interceptor.attach(SleepstudyHelperSetBlockerFriendlyName, {onLeave: function (args) {send("SleepstudyHelperSetBlockerFriendlyName");}});

var SleepstudyHelperSetBlockerParentHandle = Module.findExportByName("umpdc.dll", "SleepstudyHelperSetBlockerParentHandle")
Interceptor.attach(SleepstudyHelperSetBlockerParentHandle, {onLeave: function (args) {send("SleepstudyHelperSetBlockerParentHandle");}});

var SleepstudyHelperSetBlockerVisible = Module.findExportByName("umpdc.dll", "SleepstudyHelperSetBlockerVisible")
Interceptor.attach(SleepstudyHelperSetBlockerVisible, {onLeave: function (args) {send("SleepstudyHelperSetBlockerVisible");}});

