var AppCompat_RunDLLW = Module.findExportByName("shell32.dll", "AppCompat_RunDLLW")
Interceptor.attach(AppCompat_RunDLLW, {onLeave: function (args) {send("AppCompat_RunDLLW");}});

var AssocCreateForClasses = Module.findExportByName("shell32.dll", "AssocCreateForClasses")
Interceptor.attach(AssocCreateForClasses, {onLeave: function (args) {send("AssocCreateForClasses");}});

var AssocElemCreateForKey = Module.findExportByName("shell32.dll", "AssocElemCreateForKey")
Interceptor.attach(AssocElemCreateForKey, {onLeave: function (args) {send("AssocElemCreateForKey");}});

var AssocGetDetailsOfPropKey = Module.findExportByName("shell32.dll", "AssocGetDetailsOfPropKey")
Interceptor.attach(AssocGetDetailsOfPropKey, {onLeave: function (args) {send("AssocGetDetailsOfPropKey");}});

var CDefFolderMenu_Create2 = Module.findExportByName("shell32.dll", "CDefFolderMenu_Create2")
Interceptor.attach(CDefFolderMenu_Create2, {onLeave: function (args) {send("CDefFolderMenu_Create2");}});

var CIDLData_CreateFromIDArray = Module.findExportByName("shell32.dll", "CIDLData_CreateFromIDArray")
Interceptor.attach(CIDLData_CreateFromIDArray, {onLeave: function (args) {send("CIDLData_CreateFromIDArray");}});

var CStorageItem_GetValidatedStorageItemObject = Module.findExportByName("shell32.dll", "CStorageItem_GetValidatedStorageItemObject")
Interceptor.attach(CStorageItem_GetValidatedStorageItemObject, {onLeave: function (args) {send("CStorageItem_GetValidatedStorageItemObject");}});

var CallFileCopyHook = Module.findExportByName("shell32.dll", "CallFileCopyHook")
Interceptor.attach(CallFileCopyHook, {onLeave: function (args) {send("CallFileCopyHook");}});

var CheckEscapesW = Module.findExportByName("shell32.dll", "CheckEscapesW")
Interceptor.attach(CheckEscapesW, {onLeave: function (args) {send("CheckEscapesW");}});

var CommandLineToArgvW = Module.findExportByName("shell32.dll", "CommandLineToArgvW")
Interceptor.attach(CommandLineToArgvW, {onLeave: function (args) {send("CommandLineToArgvW");}});

var Control_RunDLL = Module.findExportByName("shell32.dll", "Control_RunDLL")
Interceptor.attach(Control_RunDLL, {onLeave: function (args) {send("Control_RunDLL");}});

var Control_RunDLLA = Module.findExportByName("shell32.dll", "Control_RunDLLA")
Interceptor.attach(Control_RunDLLA, {onLeave: function (args) {send("Control_RunDLLA");}});

var Control_RunDLLAsUserW = Module.findExportByName("shell32.dll", "Control_RunDLLAsUserW")
Interceptor.attach(Control_RunDLLAsUserW, {onLeave: function (args) {send("Control_RunDLLAsUserW");}});

var Control_RunDLLW = Module.findExportByName("shell32.dll", "Control_RunDLLW")
Interceptor.attach(Control_RunDLLW, {onLeave: function (args) {send("Control_RunDLLW");}});

var CreateStorageItemFromPath_FullTrustCaller = Module.findExportByName("shell32.dll", "CreateStorageItemFromPath_FullTrustCaller")
Interceptor.attach(CreateStorageItemFromPath_FullTrustCaller, {onLeave: function (args) {send("CreateStorageItemFromPath_FullTrustCaller");}});

var CreateStorageItemFromPath_FullTrustCaller_ForPackage = Module.findExportByName("shell32.dll", "CreateStorageItemFromPath_FullTrustCaller_ForPackage")
Interceptor.attach(CreateStorageItemFromPath_FullTrustCaller_ForPackage, {onLeave: function (args) {send("CreateStorageItemFromPath_FullTrustCaller_ForPackage");}});

var CreateStorageItemFromPath_PartialTrustCaller = Module.findExportByName("shell32.dll", "CreateStorageItemFromPath_PartialTrustCaller")
Interceptor.attach(CreateStorageItemFromPath_PartialTrustCaller, {onLeave: function (args) {send("CreateStorageItemFromPath_PartialTrustCaller");}});

var CreateStorageItemFromShellItem_FullTrustCaller = Module.findExportByName("shell32.dll", "CreateStorageItemFromShellItem_FullTrustCaller")
Interceptor.attach(CreateStorageItemFromShellItem_FullTrustCaller, {onLeave: function (args) {send("CreateStorageItemFromShellItem_FullTrustCaller");}});

var CreateStorageItemFromShellItem_FullTrustCaller_ForPackage = Module.findExportByName("shell32.dll", "CreateStorageItemFromShellItem_FullTrustCaller_ForPackage")
Interceptor.attach(CreateStorageItemFromShellItem_FullTrustCaller_ForPackage, {onLeave: function (args) {send("CreateStorageItemFromShellItem_FullTrustCaller_ForPackage");}});

var CreateStorageItemFromShellItem_FullTrustCaller_ForPackage_WithProcessHandle = Module.findExportByName("shell32.dll", "CreateStorageItemFromShellItem_FullTrustCaller_ForPackage_WithProcessHandle")
Interceptor.attach(CreateStorageItemFromShellItem_FullTrustCaller_ForPackage_WithProcessHandle, {onLeave: function (args) {send("CreateStorageItemFromShellItem_FullTrustCaller_ForPackage_WithProcessHandle");}});

var CreateStorageItemFromShellItem_FullTrustCaller_UseImplicitFlagsAndPackage = Module.findExportByName("shell32.dll", "CreateStorageItemFromShellItem_FullTrustCaller_UseImplicitFlagsAndPackage")
Interceptor.attach(CreateStorageItemFromShellItem_FullTrustCaller_UseImplicitFlagsAndPackage, {onLeave: function (args) {send("CreateStorageItemFromShellItem_FullTrustCaller_UseImplicitFlagsAndPackage");}});

var DAD_AutoScroll = Module.findExportByName("shell32.dll", "DAD_AutoScroll")
Interceptor.attach(DAD_AutoScroll, {onLeave: function (args) {send("DAD_AutoScroll");}});

var DAD_DragEnterEx = Module.findExportByName("shell32.dll", "DAD_DragEnterEx")
Interceptor.attach(DAD_DragEnterEx, {onLeave: function (args) {send("DAD_DragEnterEx");}});

var DAD_DragEnterEx2 = Module.findExportByName("shell32.dll", "DAD_DragEnterEx2")
Interceptor.attach(DAD_DragEnterEx2, {onLeave: function (args) {send("DAD_DragEnterEx2");}});

var DAD_DragLeave = Module.findExportByName("shell32.dll", "DAD_DragLeave")
Interceptor.attach(DAD_DragLeave, {onLeave: function (args) {send("DAD_DragLeave");}});

var DAD_DragMove = Module.findExportByName("shell32.dll", "DAD_DragMove")
Interceptor.attach(DAD_DragMove, {onLeave: function (args) {send("DAD_DragMove");}});

var DAD_SetDragImage = Module.findExportByName("shell32.dll", "DAD_SetDragImage")
Interceptor.attach(DAD_SetDragImage, {onLeave: function (args) {send("DAD_SetDragImage");}});

var DAD_ShowDragImage = Module.findExportByName("shell32.dll", "DAD_ShowDragImage")
Interceptor.attach(DAD_ShowDragImage, {onLeave: function (args) {send("DAD_ShowDragImage");}});

var DllCanUnloadNow = Module.findExportByName("shell32.dll", "DllCanUnloadNow")
Interceptor.attach(DllCanUnloadNow, {onLeave: function (args) {send("DllCanUnloadNow");}});

var DllGetActivationFactory = Module.findExportByName("shell32.dll", "DllGetActivationFactory")
Interceptor.attach(DllGetActivationFactory, {onLeave: function (args) {send("DllGetActivationFactory");}});

var DllGetClassObject = Module.findExportByName("shell32.dll", "DllGetClassObject")
Interceptor.attach(DllGetClassObject, {onLeave: function (args) {send("DllGetClassObject");}});

var DllGetVersion = Module.findExportByName("shell32.dll", "DllGetVersion")
Interceptor.attach(DllGetVersion, {onLeave: function (args) {send("DllGetVersion");}});

var DllInstall = Module.findExportByName("shell32.dll", "DllInstall")
Interceptor.attach(DllInstall, {onLeave: function (args) {send("DllInstall");}});

var DllRegisterServer = Module.findExportByName("shell32.dll", "DllRegisterServer")
Interceptor.attach(DllRegisterServer, {onLeave: function (args) {send("DllRegisterServer");}});

var DllUnregisterServer = Module.findExportByName("shell32.dll", "DllUnregisterServer")
Interceptor.attach(DllUnregisterServer, {onLeave: function (args) {send("DllUnregisterServer");}});

var DoEnvironmentSubstA = Module.findExportByName("shell32.dll", "DoEnvironmentSubstA")
Interceptor.attach(DoEnvironmentSubstA, {onLeave: function (args) {send("DoEnvironmentSubstA");}});

var DoEnvironmentSubstW = Module.findExportByName("shell32.dll", "DoEnvironmentSubstW")
Interceptor.attach(DoEnvironmentSubstW, {onLeave: function (args) {send("DoEnvironmentSubstW");}});

var DragAcceptFiles = Module.findExportByName("shell32.dll", "DragAcceptFiles")
Interceptor.attach(DragAcceptFiles, {onLeave: function (args) {send("DragAcceptFiles");}});

var DragFinish = Module.findExportByName("shell32.dll", "DragFinish")
Interceptor.attach(DragFinish, {onLeave: function (args) {send("DragFinish");}});

var DragQueryFile = Module.findExportByName("shell32.dll", "DragQueryFile")
Interceptor.attach(DragQueryFile, {onLeave: function (args) {send("DragQueryFile");}});

var DragQueryFileA = Module.findExportByName("shell32.dll", "DragQueryFileA")
Interceptor.attach(DragQueryFileA, {onLeave: function (args) {send("DragQueryFileA");}});

var DragQueryFileAorW = Module.findExportByName("shell32.dll", "DragQueryFileAorW")
Interceptor.attach(DragQueryFileAorW, {onLeave: function (args) {send("DragQueryFileAorW");}});

var DragQueryFileW = Module.findExportByName("shell32.dll", "DragQueryFileW")
Interceptor.attach(DragQueryFileW, {onLeave: function (args) {send("DragQueryFileW");}});

var DragQueryPoint = Module.findExportByName("shell32.dll", "DragQueryPoint")
Interceptor.attach(DragQueryPoint, {onLeave: function (args) {send("DragQueryPoint");}});

var DriveType = Module.findExportByName("shell32.dll", "DriveType")
Interceptor.attach(DriveType, {onLeave: function (args) {send("DriveType");}});

var DuplicateIcon = Module.findExportByName("shell32.dll", "DuplicateIcon")
Interceptor.attach(DuplicateIcon, {onLeave: function (args) {send("DuplicateIcon");}});

var ExtractAssociatedIconA = Module.findExportByName("shell32.dll", "ExtractAssociatedIconA")
Interceptor.attach(ExtractAssociatedIconA, {onLeave: function (args) {send("ExtractAssociatedIconA");}});

var ExtractAssociatedIconExA = Module.findExportByName("shell32.dll", "ExtractAssociatedIconExA")
Interceptor.attach(ExtractAssociatedIconExA, {onLeave: function (args) {send("ExtractAssociatedIconExA");}});

var ExtractAssociatedIconExW = Module.findExportByName("shell32.dll", "ExtractAssociatedIconExW")
Interceptor.attach(ExtractAssociatedIconExW, {onLeave: function (args) {send("ExtractAssociatedIconExW");}});

var ExtractAssociatedIconW = Module.findExportByName("shell32.dll", "ExtractAssociatedIconW")
Interceptor.attach(ExtractAssociatedIconW, {onLeave: function (args) {send("ExtractAssociatedIconW");}});

var ExtractIconA = Module.findExportByName("shell32.dll", "ExtractIconA")
Interceptor.attach(ExtractIconA, {onLeave: function (args) {send("ExtractIconA");}});

var ExtractIconEx = Module.findExportByName("shell32.dll", "ExtractIconEx")
Interceptor.attach(ExtractIconEx, {onLeave: function (args) {send("ExtractIconEx");}});

var ExtractIconExA = Module.findExportByName("shell32.dll", "ExtractIconExA")
Interceptor.attach(ExtractIconExA, {onLeave: function (args) {send("ExtractIconExA");}});

var ExtractIconExW = Module.findExportByName("shell32.dll", "ExtractIconExW")
Interceptor.attach(ExtractIconExW, {onLeave: function (args) {send("ExtractIconExW");}});

var ExtractIconW = Module.findExportByName("shell32.dll", "ExtractIconW")
Interceptor.attach(ExtractIconW, {onLeave: function (args) {send("ExtractIconW");}});

var FindExecutableA = Module.findExportByName("shell32.dll", "FindExecutableA")
Interceptor.attach(FindExecutableA, {onLeave: function (args) {send("FindExecutableA");}});

var FindExecutableW = Module.findExportByName("shell32.dll", "FindExecutableW")
Interceptor.attach(FindExecutableW, {onLeave: function (args) {send("FindExecutableW");}});

var FreeIconList = Module.findExportByName("shell32.dll", "FreeIconList")
Interceptor.attach(FreeIconList, {onLeave: function (args) {send("FreeIconList");}});

var GetCurrentProcessExplicitAppUserModelID = Module.findExportByName("shell32.dll", "GetCurrentProcessExplicitAppUserModelID")
Interceptor.attach(GetCurrentProcessExplicitAppUserModelID, {onLeave: function (args) {send("GetCurrentProcessExplicitAppUserModelID");}});

var GetFileNameFromBrowse = Module.findExportByName("shell32.dll", "GetFileNameFromBrowse")
Interceptor.attach(GetFileNameFromBrowse, {onLeave: function (args) {send("GetFileNameFromBrowse");}});

var GetSystemPersistedStorageItemList = Module.findExportByName("shell32.dll", "GetSystemPersistedStorageItemList")
Interceptor.attach(GetSystemPersistedStorageItemList, {onLeave: function (args) {send("GetSystemPersistedStorageItemList");}});

var ILAppendID = Module.findExportByName("shell32.dll", "ILAppendID")
Interceptor.attach(ILAppendID, {onLeave: function (args) {send("ILAppendID");}});

var ILClone = Module.findExportByName("shell32.dll", "ILClone")
Interceptor.attach(ILClone, {onLeave: function (args) {send("ILClone");}});

var ILCloneFirst = Module.findExportByName("shell32.dll", "ILCloneFirst")
Interceptor.attach(ILCloneFirst, {onLeave: function (args) {send("ILCloneFirst");}});

var ILCombine = Module.findExportByName("shell32.dll", "ILCombine")
Interceptor.attach(ILCombine, {onLeave: function (args) {send("ILCombine");}});

var ILCreateFromPath = Module.findExportByName("shell32.dll", "ILCreateFromPath")
Interceptor.attach(ILCreateFromPath, {onLeave: function (args) {send("ILCreateFromPath");}});

var ILCreateFromPathA = Module.findExportByName("shell32.dll", "ILCreateFromPathA")
Interceptor.attach(ILCreateFromPathA, {onLeave: function (args) {send("ILCreateFromPathA");}});

var ILCreateFromPathW = Module.findExportByName("shell32.dll", "ILCreateFromPathW")
Interceptor.attach(ILCreateFromPathW, {onLeave: function (args) {send("ILCreateFromPathW");}});

var ILFindChild = Module.findExportByName("shell32.dll", "ILFindChild")
Interceptor.attach(ILFindChild, {onLeave: function (args) {send("ILFindChild");}});

var ILFindLastID = Module.findExportByName("shell32.dll", "ILFindLastID")
Interceptor.attach(ILFindLastID, {onLeave: function (args) {send("ILFindLastID");}});

var ILFree = Module.findExportByName("shell32.dll", "ILFree")
Interceptor.attach(ILFree, {onLeave: function (args) {send("ILFree");}});

var ILGetNext = Module.findExportByName("shell32.dll", "ILGetNext")
Interceptor.attach(ILGetNext, {onLeave: function (args) {send("ILGetNext");}});

var ILGetSize = Module.findExportByName("shell32.dll", "ILGetSize")
Interceptor.attach(ILGetSize, {onLeave: function (args) {send("ILGetSize");}});

var ILIsEqual = Module.findExportByName("shell32.dll", "ILIsEqual")
Interceptor.attach(ILIsEqual, {onLeave: function (args) {send("ILIsEqual");}});

var ILIsParent = Module.findExportByName("shell32.dll", "ILIsParent")
Interceptor.attach(ILIsParent, {onLeave: function (args) {send("ILIsParent");}});

var ILLoadFromStreamEx = Module.findExportByName("shell32.dll", "ILLoadFromStreamEx")
Interceptor.attach(ILLoadFromStreamEx, {onLeave: function (args) {send("ILLoadFromStreamEx");}});

var ILRemoveLastID = Module.findExportByName("shell32.dll", "ILRemoveLastID")
Interceptor.attach(ILRemoveLastID, {onLeave: function (args) {send("ILRemoveLastID");}});

var ILSaveToStream = Module.findExportByName("shell32.dll", "ILSaveToStream")
Interceptor.attach(ILSaveToStream, {onLeave: function (args) {send("ILSaveToStream");}});

var InitNetworkAddressControl = Module.findExportByName("shell32.dll", "InitNetworkAddressControl")
Interceptor.attach(InitNetworkAddressControl, {onLeave: function (args) {send("InitNetworkAddressControl");}});

var InternalExtractIconListA = Module.findExportByName("shell32.dll", "InternalExtractIconListA")
Interceptor.attach(InternalExtractIconListA, {onLeave: function (args) {send("InternalExtractIconListA");}});

var InternalExtractIconListW = Module.findExportByName("shell32.dll", "InternalExtractIconListW")
Interceptor.attach(InternalExtractIconListW, {onLeave: function (args) {send("InternalExtractIconListW");}});

var IsDesktopExplorerProcess = Module.findExportByName("shell32.dll", "IsDesktopExplorerProcess")
Interceptor.attach(IsDesktopExplorerProcess, {onLeave: function (args) {send("IsDesktopExplorerProcess");}});

var IsLFNDrive = Module.findExportByName("shell32.dll", "IsLFNDrive")
Interceptor.attach(IsLFNDrive, {onLeave: function (args) {send("IsLFNDrive");}});

var IsLFNDriveA = Module.findExportByName("shell32.dll", "IsLFNDriveA")
Interceptor.attach(IsLFNDriveA, {onLeave: function (args) {send("IsLFNDriveA");}});

var IsLFNDriveW = Module.findExportByName("shell32.dll", "IsLFNDriveW")
Interceptor.attach(IsLFNDriveW, {onLeave: function (args) {send("IsLFNDriveW");}});

var IsNetDrive = Module.findExportByName("shell32.dll", "IsNetDrive")
Interceptor.attach(IsNetDrive, {onLeave: function (args) {send("IsNetDrive");}});

var IsProcessAnExplorer = Module.findExportByName("shell32.dll", "IsProcessAnExplorer")
Interceptor.attach(IsProcessAnExplorer, {onLeave: function (args) {send("IsProcessAnExplorer");}});

var IsUserAnAdmin = Module.findExportByName("shell32.dll", "IsUserAnAdmin")
Interceptor.attach(IsUserAnAdmin, {onLeave: function (args) {send("IsUserAnAdmin");}});

var LaunchMSHelp_RunDLLW = Module.findExportByName("shell32.dll", "LaunchMSHelp_RunDLLW")
Interceptor.attach(LaunchMSHelp_RunDLLW, {onLeave: function (args) {send("LaunchMSHelp_RunDLLW");}});

var OpenAs_RunDLL = Module.findExportByName("shell32.dll", "OpenAs_RunDLL")
Interceptor.attach(OpenAs_RunDLL, {onLeave: function (args) {send("OpenAs_RunDLL");}});

var OpenAs_RunDLLA = Module.findExportByName("shell32.dll", "OpenAs_RunDLLA")
Interceptor.attach(OpenAs_RunDLLA, {onLeave: function (args) {send("OpenAs_RunDLLA");}});

var OpenAs_RunDLLW = Module.findExportByName("shell32.dll", "OpenAs_RunDLLW")
Interceptor.attach(OpenAs_RunDLLW, {onLeave: function (args) {send("OpenAs_RunDLLW");}});

var OpenRegStream = Module.findExportByName("shell32.dll", "OpenRegStream")
Interceptor.attach(OpenRegStream, {onLeave: function (args) {send("OpenRegStream");}});

var Options_RunDLL = Module.findExportByName("shell32.dll", "Options_RunDLL")
Interceptor.attach(Options_RunDLL, {onLeave: function (args) {send("Options_RunDLL");}});

var Options_RunDLLA = Module.findExportByName("shell32.dll", "Options_RunDLLA")
Interceptor.attach(Options_RunDLLA, {onLeave: function (args) {send("Options_RunDLLA");}});

var Options_RunDLLW = Module.findExportByName("shell32.dll", "Options_RunDLLW")
Interceptor.attach(Options_RunDLLW, {onLeave: function (args) {send("Options_RunDLLW");}});

var PathCleanupSpec = Module.findExportByName("shell32.dll", "PathCleanupSpec")
Interceptor.attach(PathCleanupSpec, {onLeave: function (args) {send("PathCleanupSpec");}});

var PathGetShortPath = Module.findExportByName("shell32.dll", "PathGetShortPath")
Interceptor.attach(PathGetShortPath, {onLeave: function (args) {send("PathGetShortPath");}});

var PathIsExe = Module.findExportByName("shell32.dll", "PathIsExe")
Interceptor.attach(PathIsExe, {onLeave: function (args) {send("PathIsExe");}});

var PathIsSlowA = Module.findExportByName("shell32.dll", "PathIsSlowA")
Interceptor.attach(PathIsSlowA, {onLeave: function (args) {send("PathIsSlowA");}});

var PathIsSlowW = Module.findExportByName("shell32.dll", "PathIsSlowW")
Interceptor.attach(PathIsSlowW, {onLeave: function (args) {send("PathIsSlowW");}});

var PathMakeUniqueName = Module.findExportByName("shell32.dll", "PathMakeUniqueName")
Interceptor.attach(PathMakeUniqueName, {onLeave: function (args) {send("PathMakeUniqueName");}});

var PathQualify = Module.findExportByName("shell32.dll", "PathQualify")
Interceptor.attach(PathQualify, {onLeave: function (args) {send("PathQualify");}});

var PathResolve = Module.findExportByName("shell32.dll", "PathResolve")
Interceptor.attach(PathResolve, {onLeave: function (args) {send("PathResolve");}});

var PathYetAnotherMakeUniqueName = Module.findExportByName("shell32.dll", "PathYetAnotherMakeUniqueName")
Interceptor.attach(PathYetAnotherMakeUniqueName, {onLeave: function (args) {send("PathYetAnotherMakeUniqueName");}});

var PickIconDlg = Module.findExportByName("shell32.dll", "PickIconDlg")
Interceptor.attach(PickIconDlg, {onLeave: function (args) {send("PickIconDlg");}});

var PifMgr_CloseProperties = Module.findExportByName("shell32.dll", "PifMgr_CloseProperties")
Interceptor.attach(PifMgr_CloseProperties, {onLeave: function (args) {send("PifMgr_CloseProperties");}});

var PifMgr_GetProperties = Module.findExportByName("shell32.dll", "PifMgr_GetProperties")
Interceptor.attach(PifMgr_GetProperties, {onLeave: function (args) {send("PifMgr_GetProperties");}});

var PifMgr_OpenProperties = Module.findExportByName("shell32.dll", "PifMgr_OpenProperties")
Interceptor.attach(PifMgr_OpenProperties, {onLeave: function (args) {send("PifMgr_OpenProperties");}});

var PifMgr_SetProperties = Module.findExportByName("shell32.dll", "PifMgr_SetProperties")
Interceptor.attach(PifMgr_SetProperties, {onLeave: function (args) {send("PifMgr_SetProperties");}});

var PrepareDiscForBurnRunDllW = Module.findExportByName("shell32.dll", "PrepareDiscForBurnRunDllW")
Interceptor.attach(PrepareDiscForBurnRunDllW, {onLeave: function (args) {send("PrepareDiscForBurnRunDllW");}});

var PrintersGetCommand_RunDLL = Module.findExportByName("shell32.dll", "PrintersGetCommand_RunDLL")
Interceptor.attach(PrintersGetCommand_RunDLL, {onLeave: function (args) {send("PrintersGetCommand_RunDLL");}});

var PrintersGetCommand_RunDLLA = Module.findExportByName("shell32.dll", "PrintersGetCommand_RunDLLA")
Interceptor.attach(PrintersGetCommand_RunDLLA, {onLeave: function (args) {send("PrintersGetCommand_RunDLLA");}});

var PrintersGetCommand_RunDLLW = Module.findExportByName("shell32.dll", "PrintersGetCommand_RunDLLW")
Interceptor.attach(PrintersGetCommand_RunDLLW, {onLeave: function (args) {send("PrintersGetCommand_RunDLLW");}});

var ReadCabinetState = Module.findExportByName("shell32.dll", "ReadCabinetState")
Interceptor.attach(ReadCabinetState, {onLeave: function (args) {send("ReadCabinetState");}});

var RealDriveType = Module.findExportByName("shell32.dll", "RealDriveType")
Interceptor.attach(RealDriveType, {onLeave: function (args) {send("RealDriveType");}});

var RealShellExecuteA = Module.findExportByName("shell32.dll", "RealShellExecuteA")
Interceptor.attach(RealShellExecuteA, {onLeave: function (args) {send("RealShellExecuteA");}});

var RealShellExecuteExA = Module.findExportByName("shell32.dll", "RealShellExecuteExA")
Interceptor.attach(RealShellExecuteExA, {onLeave: function (args) {send("RealShellExecuteExA");}});

var RealShellExecuteExW = Module.findExportByName("shell32.dll", "RealShellExecuteExW")
Interceptor.attach(RealShellExecuteExW, {onLeave: function (args) {send("RealShellExecuteExW");}});

var RealShellExecuteW = Module.findExportByName("shell32.dll", "RealShellExecuteW")
Interceptor.attach(RealShellExecuteW, {onLeave: function (args) {send("RealShellExecuteW");}});

var RegenerateUserEnvironment = Module.findExportByName("shell32.dll", "RegenerateUserEnvironment")
Interceptor.attach(RegenerateUserEnvironment, {onLeave: function (args) {send("RegenerateUserEnvironment");}});

var RestartDialog = Module.findExportByName("shell32.dll", "RestartDialog")
Interceptor.attach(RestartDialog, {onLeave: function (args) {send("RestartDialog");}});

var RestartDialogEx = Module.findExportByName("shell32.dll", "RestartDialogEx")
Interceptor.attach(RestartDialogEx, {onLeave: function (args) {send("RestartDialogEx");}});

var RunAsNewUser_RunDLLW = Module.findExportByName("shell32.dll", "RunAsNewUser_RunDLLW")
Interceptor.attach(RunAsNewUser_RunDLLW, {onLeave: function (args) {send("RunAsNewUser_RunDLLW");}});

var SHAddDefaultPropertiesByExt = Module.findExportByName("shell32.dll", "SHAddDefaultPropertiesByExt")
Interceptor.attach(SHAddDefaultPropertiesByExt, {onLeave: function (args) {send("SHAddDefaultPropertiesByExt");}});

var SHAddFromPropSheetExtArray = Module.findExportByName("shell32.dll", "SHAddFromPropSheetExtArray")
Interceptor.attach(SHAddFromPropSheetExtArray, {onLeave: function (args) {send("SHAddFromPropSheetExtArray");}});

var SHAddToRecentDocs = Module.findExportByName("shell32.dll", "SHAddToRecentDocs")
Interceptor.attach(SHAddToRecentDocs, {onLeave: function (args) {send("SHAddToRecentDocs");}});

var SHAlloc = Module.findExportByName("shell32.dll", "SHAlloc")
Interceptor.attach(SHAlloc, {onLeave: function (args) {send("SHAlloc");}});

var SHAppBarMessage = Module.findExportByName("shell32.dll", "SHAppBarMessage")
Interceptor.attach(SHAppBarMessage, {onLeave: function (args) {send("SHAppBarMessage");}});

var SHAssocEnumHandlers = Module.findExportByName("shell32.dll", "SHAssocEnumHandlers")
Interceptor.attach(SHAssocEnumHandlers, {onLeave: function (args) {send("SHAssocEnumHandlers");}});

var SHAssocEnumHandlersForProtocolByApplication = Module.findExportByName("shell32.dll", "SHAssocEnumHandlersForProtocolByApplication")
Interceptor.attach(SHAssocEnumHandlersForProtocolByApplication, {onLeave: function (args) {send("SHAssocEnumHandlersForProtocolByApplication");}});

var SHBindToFolderIDListParent = Module.findExportByName("shell32.dll", "SHBindToFolderIDListParent")
Interceptor.attach(SHBindToFolderIDListParent, {onLeave: function (args) {send("SHBindToFolderIDListParent");}});

var SHBindToFolderIDListParentEx = Module.findExportByName("shell32.dll", "SHBindToFolderIDListParentEx")
Interceptor.attach(SHBindToFolderIDListParentEx, {onLeave: function (args) {send("SHBindToFolderIDListParentEx");}});

var SHBindToObject = Module.findExportByName("shell32.dll", "SHBindToObject")
Interceptor.attach(SHBindToObject, {onLeave: function (args) {send("SHBindToObject");}});

var SHBindToParent = Module.findExportByName("shell32.dll", "SHBindToParent")
Interceptor.attach(SHBindToParent, {onLeave: function (args) {send("SHBindToParent");}});

var SHBrowseForFolder = Module.findExportByName("shell32.dll", "SHBrowseForFolder")
Interceptor.attach(SHBrowseForFolder, {onLeave: function (args) {send("SHBrowseForFolder");}});

var SHBrowseForFolderA = Module.findExportByName("shell32.dll", "SHBrowseForFolderA")
Interceptor.attach(SHBrowseForFolderA, {onLeave: function (args) {send("SHBrowseForFolderA");}});

var SHBrowseForFolderW = Module.findExportByName("shell32.dll", "SHBrowseForFolderW")
Interceptor.attach(SHBrowseForFolderW, {onLeave: function (args) {send("SHBrowseForFolderW");}});

var SHCLSIDFromString = Module.findExportByName("shell32.dll", "SHCLSIDFromString")
Interceptor.attach(SHCLSIDFromString, {onLeave: function (args) {send("SHCLSIDFromString");}});

var SHChangeNotification_Lock = Module.findExportByName("shell32.dll", "SHChangeNotification_Lock")
Interceptor.attach(SHChangeNotification_Lock, {onLeave: function (args) {send("SHChangeNotification_Lock");}});

var SHChangeNotification_Unlock = Module.findExportByName("shell32.dll", "SHChangeNotification_Unlock")
Interceptor.attach(SHChangeNotification_Unlock, {onLeave: function (args) {send("SHChangeNotification_Unlock");}});

var SHChangeNotify = Module.findExportByName("shell32.dll", "SHChangeNotify")
Interceptor.attach(SHChangeNotify, {onLeave: function (args) {send("SHChangeNotify");}});

var SHChangeNotifyDeregister = Module.findExportByName("shell32.dll", "SHChangeNotifyDeregister")
Interceptor.attach(SHChangeNotifyDeregister, {onLeave: function (args) {send("SHChangeNotifyDeregister");}});

var SHChangeNotifyRegister = Module.findExportByName("shell32.dll", "SHChangeNotifyRegister")
Interceptor.attach(SHChangeNotifyRegister, {onLeave: function (args) {send("SHChangeNotifyRegister");}});

var SHChangeNotifyRegisterThread = Module.findExportByName("shell32.dll", "SHChangeNotifyRegisterThread")
Interceptor.attach(SHChangeNotifyRegisterThread, {onLeave: function (args) {send("SHChangeNotifyRegisterThread");}});

var SHChangeNotifySuspendResume = Module.findExportByName("shell32.dll", "SHChangeNotifySuspendResume")
Interceptor.attach(SHChangeNotifySuspendResume, {onLeave: function (args) {send("SHChangeNotifySuspendResume");}});

var SHCloneSpecialIDList = Module.findExportByName("shell32.dll", "SHCloneSpecialIDList")
Interceptor.attach(SHCloneSpecialIDList, {onLeave: function (args) {send("SHCloneSpecialIDList");}});

var SHCoCreateInstance = Module.findExportByName("shell32.dll", "SHCoCreateInstance")
Interceptor.attach(SHCoCreateInstance, {onLeave: function (args) {send("SHCoCreateInstance");}});

var SHCoCreateInstanceWorker = Module.findExportByName("shell32.dll", "SHCoCreateInstanceWorker")
Interceptor.attach(SHCoCreateInstanceWorker, {onLeave: function (args) {send("SHCoCreateInstanceWorker");}});

var SHCreateAssociationRegistration = Module.findExportByName("shell32.dll", "SHCreateAssociationRegistration")
Interceptor.attach(SHCreateAssociationRegistration, {onLeave: function (args) {send("SHCreateAssociationRegistration");}});

var SHCreateCategoryEnum = Module.findExportByName("shell32.dll", "SHCreateCategoryEnum")
Interceptor.attach(SHCreateCategoryEnum, {onLeave: function (args) {send("SHCreateCategoryEnum");}});

var SHCreateDataObject = Module.findExportByName("shell32.dll", "SHCreateDataObject")
Interceptor.attach(SHCreateDataObject, {onLeave: function (args) {send("SHCreateDataObject");}});

var SHCreateDefaultContextMenu = Module.findExportByName("shell32.dll", "SHCreateDefaultContextMenu")
Interceptor.attach(SHCreateDefaultContextMenu, {onLeave: function (args) {send("SHCreateDefaultContextMenu");}});

var SHCreateDefaultExtractIcon = Module.findExportByName("shell32.dll", "SHCreateDefaultExtractIcon")
Interceptor.attach(SHCreateDefaultExtractIcon, {onLeave: function (args) {send("SHCreateDefaultExtractIcon");}});

var SHCreateDefaultPropertiesOp = Module.findExportByName("shell32.dll", "SHCreateDefaultPropertiesOp")
Interceptor.attach(SHCreateDefaultPropertiesOp, {onLeave: function (args) {send("SHCreateDefaultPropertiesOp");}});

var SHCreateDirectory = Module.findExportByName("shell32.dll", "SHCreateDirectory")
Interceptor.attach(SHCreateDirectory, {onLeave: function (args) {send("SHCreateDirectory");}});

var SHCreateDirectoryExA = Module.findExportByName("shell32.dll", "SHCreateDirectoryExA")
Interceptor.attach(SHCreateDirectoryExA, {onLeave: function (args) {send("SHCreateDirectoryExA");}});

var SHCreateDirectoryExW = Module.findExportByName("shell32.dll", "SHCreateDirectoryExW")
Interceptor.attach(SHCreateDirectoryExW, {onLeave: function (args) {send("SHCreateDirectoryExW");}});

var SHCreateDrvExtIcon = Module.findExportByName("shell32.dll", "SHCreateDrvExtIcon")
Interceptor.attach(SHCreateDrvExtIcon, {onLeave: function (args) {send("SHCreateDrvExtIcon");}});

var SHCreateFileExtractIconW = Module.findExportByName("shell32.dll", "SHCreateFileExtractIconW")
Interceptor.attach(SHCreateFileExtractIconW, {onLeave: function (args) {send("SHCreateFileExtractIconW");}});

var SHCreateItemFromIDList = Module.findExportByName("shell32.dll", "SHCreateItemFromIDList")
Interceptor.attach(SHCreateItemFromIDList, {onLeave: function (args) {send("SHCreateItemFromIDList");}});

var SHCreateItemFromParsingName = Module.findExportByName("shell32.dll", "SHCreateItemFromParsingName")
Interceptor.attach(SHCreateItemFromParsingName, {onLeave: function (args) {send("SHCreateItemFromParsingName");}});

var SHCreateItemFromRelativeName = Module.findExportByName("shell32.dll", "SHCreateItemFromRelativeName")
Interceptor.attach(SHCreateItemFromRelativeName, {onLeave: function (args) {send("SHCreateItemFromRelativeName");}});

var SHCreateItemInKnownFolder = Module.findExportByName("shell32.dll", "SHCreateItemInKnownFolder")
Interceptor.attach(SHCreateItemInKnownFolder, {onLeave: function (args) {send("SHCreateItemInKnownFolder");}});

var SHCreateItemWithParent = Module.findExportByName("shell32.dll", "SHCreateItemWithParent")
Interceptor.attach(SHCreateItemWithParent, {onLeave: function (args) {send("SHCreateItemWithParent");}});

var SHCreateLocalServerRunDll = Module.findExportByName("shell32.dll", "SHCreateLocalServerRunDll")
Interceptor.attach(SHCreateLocalServerRunDll, {onLeave: function (args) {send("SHCreateLocalServerRunDll");}});

var SHCreateProcessAsUserW = Module.findExportByName("shell32.dll", "SHCreateProcessAsUserW")
Interceptor.attach(SHCreateProcessAsUserW, {onLeave: function (args) {send("SHCreateProcessAsUserW");}});

var SHCreatePropSheetExtArray = Module.findExportByName("shell32.dll", "SHCreatePropSheetExtArray")
Interceptor.attach(SHCreatePropSheetExtArray, {onLeave: function (args) {send("SHCreatePropSheetExtArray");}});

var SHCreateQueryCancelAutoPlayMoniker = Module.findExportByName("shell32.dll", "SHCreateQueryCancelAutoPlayMoniker")
Interceptor.attach(SHCreateQueryCancelAutoPlayMoniker, {onLeave: function (args) {send("SHCreateQueryCancelAutoPlayMoniker");}});

var SHCreateShellFolderView = Module.findExportByName("shell32.dll", "SHCreateShellFolderView")
Interceptor.attach(SHCreateShellFolderView, {onLeave: function (args) {send("SHCreateShellFolderView");}});

var SHCreateShellFolderViewEx = Module.findExportByName("shell32.dll", "SHCreateShellFolderViewEx")
Interceptor.attach(SHCreateShellFolderViewEx, {onLeave: function (args) {send("SHCreateShellFolderViewEx");}});

var SHCreateShellItem = Module.findExportByName("shell32.dll", "SHCreateShellItem")
Interceptor.attach(SHCreateShellItem, {onLeave: function (args) {send("SHCreateShellItem");}});

var SHCreateShellItemArray = Module.findExportByName("shell32.dll", "SHCreateShellItemArray")
Interceptor.attach(SHCreateShellItemArray, {onLeave: function (args) {send("SHCreateShellItemArray");}});

var SHCreateShellItemArrayFromDataObject = Module.findExportByName("shell32.dll", "SHCreateShellItemArrayFromDataObject")
Interceptor.attach(SHCreateShellItemArrayFromDataObject, {onLeave: function (args) {send("SHCreateShellItemArrayFromDataObject");}});

var SHCreateShellItemArrayFromIDLists = Module.findExportByName("shell32.dll", "SHCreateShellItemArrayFromIDLists")
Interceptor.attach(SHCreateShellItemArrayFromIDLists, {onLeave: function (args) {send("SHCreateShellItemArrayFromIDLists");}});

var SHCreateShellItemArrayFromShellItem = Module.findExportByName("shell32.dll", "SHCreateShellItemArrayFromShellItem")
Interceptor.attach(SHCreateShellItemArrayFromShellItem, {onLeave: function (args) {send("SHCreateShellItemArrayFromShellItem");}});

var SHCreateStdEnumFmtEtc = Module.findExportByName("shell32.dll", "SHCreateStdEnumFmtEtc")
Interceptor.attach(SHCreateStdEnumFmtEtc, {onLeave: function (args) {send("SHCreateStdEnumFmtEtc");}});

var SHDefExtractIconA = Module.findExportByName("shell32.dll", "SHDefExtractIconA")
Interceptor.attach(SHDefExtractIconA, {onLeave: function (args) {send("SHDefExtractIconA");}});

var SHDefExtractIconW = Module.findExportByName("shell32.dll", "SHDefExtractIconW")
Interceptor.attach(SHDefExtractIconW, {onLeave: function (args) {send("SHDefExtractIconW");}});

var SHDestroyPropSheetExtArray = Module.findExportByName("shell32.dll", "SHDestroyPropSheetExtArray")
Interceptor.attach(SHDestroyPropSheetExtArray, {onLeave: function (args) {send("SHDestroyPropSheetExtArray");}});

var SHDoDragDrop = Module.findExportByName("shell32.dll", "SHDoDragDrop")
Interceptor.attach(SHDoDragDrop, {onLeave: function (args) {send("SHDoDragDrop");}});

var SHELL32_AddToBackIconTable = Module.findExportByName("shell32.dll", "SHELL32_AddToBackIconTable")
Interceptor.attach(SHELL32_AddToBackIconTable, {onLeave: function (args) {send("SHELL32_AddToBackIconTable");}});

var SHELL32_AddToFrontIconTable = Module.findExportByName("shell32.dll", "SHELL32_AddToFrontIconTable")
Interceptor.attach(SHELL32_AddToFrontIconTable, {onLeave: function (args) {send("SHELL32_AddToFrontIconTable");}});

var SHELL32_AreAllItemsAvailable = Module.findExportByName("shell32.dll", "SHELL32_AreAllItemsAvailable")
Interceptor.attach(SHELL32_AreAllItemsAvailable, {onLeave: function (args) {send("SHELL32_AreAllItemsAvailable");}});

var SHELL32_CCommonPlacesFolder_CreateInstance = Module.findExportByName("shell32.dll", "SHELL32_CCommonPlacesFolder_CreateInstance")
Interceptor.attach(SHELL32_CCommonPlacesFolder_CreateInstance, {onLeave: function (args) {send("SHELL32_CCommonPlacesFolder_CreateInstance");}});

var SHELL32_CDBurn_CloseSession = Module.findExportByName("shell32.dll", "SHELL32_CDBurn_CloseSession")
Interceptor.attach(SHELL32_CDBurn_CloseSession, {onLeave: function (args) {send("SHELL32_CDBurn_CloseSession");}});

var SHELL32_CDBurn_DriveSupportedForDataBurn = Module.findExportByName("shell32.dll", "SHELL32_CDBurn_DriveSupportedForDataBurn")
Interceptor.attach(SHELL32_CDBurn_DriveSupportedForDataBurn, {onLeave: function (args) {send("SHELL32_CDBurn_DriveSupportedForDataBurn");}});

var SHELL32_CDBurn_Erase = Module.findExportByName("shell32.dll", "SHELL32_CDBurn_Erase")
Interceptor.attach(SHELL32_CDBurn_Erase, {onLeave: function (args) {send("SHELL32_CDBurn_Erase");}});

var SHELL32_CDBurn_GetCDInfo = Module.findExportByName("shell32.dll", "SHELL32_CDBurn_GetCDInfo")
Interceptor.attach(SHELL32_CDBurn_GetCDInfo, {onLeave: function (args) {send("SHELL32_CDBurn_GetCDInfo");}});

var SHELL32_CDBurn_GetLiveFSDiscInfo = Module.findExportByName("shell32.dll", "SHELL32_CDBurn_GetLiveFSDiscInfo")
Interceptor.attach(SHELL32_CDBurn_GetLiveFSDiscInfo, {onLeave: function (args) {send("SHELL32_CDBurn_GetLiveFSDiscInfo");}});

var SHELL32_CDBurn_GetStagingPathOrNormalPath = Module.findExportByName("shell32.dll", "SHELL32_CDBurn_GetStagingPathOrNormalPath")
Interceptor.attach(SHELL32_CDBurn_GetStagingPathOrNormalPath, {onLeave: function (args) {send("SHELL32_CDBurn_GetStagingPathOrNormalPath");}});

var SHELL32_CDBurn_GetTaskInfo = Module.findExportByName("shell32.dll", "SHELL32_CDBurn_GetTaskInfo")
Interceptor.attach(SHELL32_CDBurn_GetTaskInfo, {onLeave: function (args) {send("SHELL32_CDBurn_GetTaskInfo");}});

var SHELL32_CDBurn_IsBlankDisc = Module.findExportByName("shell32.dll", "SHELL32_CDBurn_IsBlankDisc")
Interceptor.attach(SHELL32_CDBurn_IsBlankDisc, {onLeave: function (args) {send("SHELL32_CDBurn_IsBlankDisc");}});

var SHELL32_CDBurn_IsBlankDisc2 = Module.findExportByName("shell32.dll", "SHELL32_CDBurn_IsBlankDisc2")
Interceptor.attach(SHELL32_CDBurn_IsBlankDisc2, {onLeave: function (args) {send("SHELL32_CDBurn_IsBlankDisc2");}});

var SHELL32_CDBurn_IsLiveFS = Module.findExportByName("shell32.dll", "SHELL32_CDBurn_IsLiveFS")
Interceptor.attach(SHELL32_CDBurn_IsLiveFS, {onLeave: function (args) {send("SHELL32_CDBurn_IsLiveFS");}});

var SHELL32_CDBurn_OnDeviceChange = Module.findExportByName("shell32.dll", "SHELL32_CDBurn_OnDeviceChange")
Interceptor.attach(SHELL32_CDBurn_OnDeviceChange, {onLeave: function (args) {send("SHELL32_CDBurn_OnDeviceChange");}});

var SHELL32_CDBurn_OnEject = Module.findExportByName("shell32.dll", "SHELL32_CDBurn_OnEject")
Interceptor.attach(SHELL32_CDBurn_OnEject, {onLeave: function (args) {send("SHELL32_CDBurn_OnEject");}});

var SHELL32_CDBurn_OnMediaChange = Module.findExportByName("shell32.dll", "SHELL32_CDBurn_OnMediaChange")
Interceptor.attach(SHELL32_CDBurn_OnMediaChange, {onLeave: function (args) {send("SHELL32_CDBurn_OnMediaChange");}});

var SHELL32_CDefFolderMenu_Create2 = Module.findExportByName("shell32.dll", "SHELL32_CDefFolderMenu_Create2")
Interceptor.attach(SHELL32_CDefFolderMenu_Create2, {onLeave: function (args) {send("SHELL32_CDefFolderMenu_Create2");}});

var SHELL32_CDefFolderMenu_Create2Ex = Module.findExportByName("shell32.dll", "SHELL32_CDefFolderMenu_Create2Ex")
Interceptor.attach(SHELL32_CDefFolderMenu_Create2Ex, {onLeave: function (args) {send("SHELL32_CDefFolderMenu_Create2Ex");}});

var SHELL32_CDefFolderMenu_MergeMenu = Module.findExportByName("shell32.dll", "SHELL32_CDefFolderMenu_MergeMenu")
Interceptor.attach(SHELL32_CDefFolderMenu_MergeMenu, {onLeave: function (args) {send("SHELL32_CDefFolderMenu_MergeMenu");}});

var SHELL32_CDrivesContextMenu_Create = Module.findExportByName("shell32.dll", "SHELL32_CDrivesContextMenu_Create")
Interceptor.attach(SHELL32_CDrivesContextMenu_Create, {onLeave: function (args) {send("SHELL32_CDrivesContextMenu_Create");}});

var SHELL32_CDrivesDropTarget_Create = Module.findExportByName("shell32.dll", "SHELL32_CDrivesDropTarget_Create")
Interceptor.attach(SHELL32_CDrivesDropTarget_Create, {onLeave: function (args) {send("SHELL32_CDrivesDropTarget_Create");}});

var SHELL32_CDrives_CreateSFVCB = Module.findExportByName("shell32.dll", "SHELL32_CDrives_CreateSFVCB")
Interceptor.attach(SHELL32_CDrives_CreateSFVCB, {onLeave: function (args) {send("SHELL32_CDrives_CreateSFVCB");}});

var SHELL32_CFSDropTarget_CreateInstance = Module.findExportByName("shell32.dll", "SHELL32_CFSDropTarget_CreateInstance")
Interceptor.attach(SHELL32_CFSDropTarget_CreateInstance, {onLeave: function (args) {send("SHELL32_CFSDropTarget_CreateInstance");}});

var SHELL32_CFSFolderCallback_Create = Module.findExportByName("shell32.dll", "SHELL32_CFSFolderCallback_Create")
Interceptor.attach(SHELL32_CFSFolderCallback_Create, {onLeave: function (args) {send("SHELL32_CFSFolderCallback_Create");}});

var SHELL32_CFillPropertiesTask_CreateInstance = Module.findExportByName("shell32.dll", "SHELL32_CFillPropertiesTask_CreateInstance")
Interceptor.attach(SHELL32_CFillPropertiesTask_CreateInstance, {onLeave: function (args) {send("SHELL32_CFillPropertiesTask_CreateInstance");}});

var SHELL32_CLibraryDropTarget_CreateInstance = Module.findExportByName("shell32.dll", "SHELL32_CLibraryDropTarget_CreateInstance")
Interceptor.attach(SHELL32_CLibraryDropTarget_CreateInstance, {onLeave: function (args) {send("SHELL32_CLibraryDropTarget_CreateInstance");}});

var SHELL32_CLocationContextMenu_Create = Module.findExportByName("shell32.dll", "SHELL32_CLocationContextMenu_Create")
Interceptor.attach(SHELL32_CLocationContextMenu_Create, {onLeave: function (args) {send("SHELL32_CLocationContextMenu_Create");}});

var SHELL32_CLocationFolderUI_CreateInstance = Module.findExportByName("shell32.dll", "SHELL32_CLocationFolderUI_CreateInstance")
Interceptor.attach(SHELL32_CLocationFolderUI_CreateInstance, {onLeave: function (args) {send("SHELL32_CLocationFolderUI_CreateInstance");}});

var SHELL32_CMountPoint_DoAutorun = Module.findExportByName("shell32.dll", "SHELL32_CMountPoint_DoAutorun")
Interceptor.attach(SHELL32_CMountPoint_DoAutorun, {onLeave: function (args) {send("SHELL32_CMountPoint_DoAutorun");}});

var SHELL32_CMountPoint_DoAutorunPrompt = Module.findExportByName("shell32.dll", "SHELL32_CMountPoint_DoAutorunPrompt")
Interceptor.attach(SHELL32_CMountPoint_DoAutorunPrompt, {onLeave: function (args) {send("SHELL32_CMountPoint_DoAutorunPrompt");}});

var SHELL32_CMountPoint_IsAutoRunDriveAndEnabledByPolicy = Module.findExportByName("shell32.dll", "SHELL32_CMountPoint_IsAutoRunDriveAndEnabledByPolicy")
Interceptor.attach(SHELL32_CMountPoint_IsAutoRunDriveAndEnabledByPolicy, {onLeave: function (args) {send("SHELL32_CMountPoint_IsAutoRunDriveAndEnabledByPolicy");}});

var SHELL32_CMountPoint_ProcessAutoRunFile = Module.findExportByName("shell32.dll", "SHELL32_CMountPoint_ProcessAutoRunFile")
Interceptor.attach(SHELL32_CMountPoint_ProcessAutoRunFile, {onLeave: function (args) {send("SHELL32_CMountPoint_ProcessAutoRunFile");}});

var SHELL32_CMountPoint_WantAutorunUI = Module.findExportByName("shell32.dll", "SHELL32_CMountPoint_WantAutorunUI")
Interceptor.attach(SHELL32_CMountPoint_WantAutorunUI, {onLeave: function (args) {send("SHELL32_CMountPoint_WantAutorunUI");}});

var SHELL32_CMountPoint_WantAutorunUIGetReady = Module.findExportByName("shell32.dll", "SHELL32_CMountPoint_WantAutorunUIGetReady")
Interceptor.attach(SHELL32_CMountPoint_WantAutorunUIGetReady, {onLeave: function (args) {send("SHELL32_CMountPoint_WantAutorunUIGetReady");}});

var SHELL32_CNetFolderUI_CreateInstance = Module.findExportByName("shell32.dll", "SHELL32_CNetFolderUI_CreateInstance")
Interceptor.attach(SHELL32_CNetFolderUI_CreateInstance, {onLeave: function (args) {send("SHELL32_CNetFolderUI_CreateInstance");}});

var SHELL32_CPL_CategoryIdArrayFromVariant = Module.findExportByName("shell32.dll", "SHELL32_CPL_CategoryIdArrayFromVariant")
Interceptor.attach(SHELL32_CPL_CategoryIdArrayFromVariant, {onLeave: function (args) {send("SHELL32_CPL_CategoryIdArrayFromVariant");}});

var SHELL32_CPL_IsLegacyCanonicalNameListedUnderKey = Module.findExportByName("shell32.dll", "SHELL32_CPL_IsLegacyCanonicalNameListedUnderKey")
Interceptor.attach(SHELL32_CPL_IsLegacyCanonicalNameListedUnderKey, {onLeave: function (args) {send("SHELL32_CPL_IsLegacyCanonicalNameListedUnderKey");}});

var SHELL32_CPL_ModifyWowDisplayName = Module.findExportByName("shell32.dll", "SHELL32_CPL_ModifyWowDisplayName")
Interceptor.attach(SHELL32_CPL_ModifyWowDisplayName, {onLeave: function (args) {send("SHELL32_CPL_ModifyWowDisplayName");}});

var SHELL32_CRecentDocsContextMenu_CreateInstance = Module.findExportByName("shell32.dll", "SHELL32_CRecentDocsContextMenu_CreateInstance")
Interceptor.attach(SHELL32_CRecentDocsContextMenu_CreateInstance, {onLeave: function (args) {send("SHELL32_CRecentDocsContextMenu_CreateInstance");}});

var SHELL32_CTransferConfirmation_CreateInstance = Module.findExportByName("shell32.dll", "SHELL32_CTransferConfirmation_CreateInstance")
Interceptor.attach(SHELL32_CTransferConfirmation_CreateInstance, {onLeave: function (args) {send("SHELL32_CTransferConfirmation_CreateInstance");}});

var SHELL32_CallFileCopyHooks = Module.findExportByName("shell32.dll", "SHELL32_CallFileCopyHooks")
Interceptor.attach(SHELL32_CallFileCopyHooks, {onLeave: function (args) {send("SHELL32_CallFileCopyHooks");}});

var SHELL32_CanDisplayWin8CopyDialog = Module.findExportByName("shell32.dll", "SHELL32_CanDisplayWin8CopyDialog")
Interceptor.attach(SHELL32_CanDisplayWin8CopyDialog, {onLeave: function (args) {send("SHELL32_CanDisplayWin8CopyDialog");}});

var SHELL32_CloseAutoplayPrompt = Module.findExportByName("shell32.dll", "SHELL32_CloseAutoplayPrompt")
Interceptor.attach(SHELL32_CloseAutoplayPrompt, {onLeave: function (args) {send("SHELL32_CloseAutoplayPrompt");}});

var SHELL32_CommandLineFromMsiDescriptor = Module.findExportByName("shell32.dll", "SHELL32_CommandLineFromMsiDescriptor")
Interceptor.attach(SHELL32_CommandLineFromMsiDescriptor, {onLeave: function (args) {send("SHELL32_CommandLineFromMsiDescriptor");}});

var SHELL32_CopySecondaryTiles = Module.findExportByName("shell32.dll", "SHELL32_CopySecondaryTiles")
Interceptor.attach(SHELL32_CopySecondaryTiles, {onLeave: function (args) {send("SHELL32_CopySecondaryTiles");}});

var SHELL32_CreateConfirmationInterrupt = Module.findExportByName("shell32.dll", "SHELL32_CreateConfirmationInterrupt")
Interceptor.attach(SHELL32_CreateConfirmationInterrupt, {onLeave: function (args) {send("SHELL32_CreateConfirmationInterrupt");}});

var SHELL32_CreateConflictInterrupt = Module.findExportByName("shell32.dll", "SHELL32_CreateConflictInterrupt")
Interceptor.attach(SHELL32_CreateConflictInterrupt, {onLeave: function (args) {send("SHELL32_CreateConflictInterrupt");}});

var SHELL32_CreateDefaultOperationDataProvider = Module.findExportByName("shell32.dll", "SHELL32_CreateDefaultOperationDataProvider")
Interceptor.attach(SHELL32_CreateDefaultOperationDataProvider, {onLeave: function (args) {send("SHELL32_CreateDefaultOperationDataProvider");}});

var SHELL32_CreateFileFolderContextMenu = Module.findExportByName("shell32.dll", "SHELL32_CreateFileFolderContextMenu")
Interceptor.attach(SHELL32_CreateFileFolderContextMenu, {onLeave: function (args) {send("SHELL32_CreateFileFolderContextMenu");}});

var SHELL32_CreateLinkInfoW = Module.findExportByName("shell32.dll", "SHELL32_CreateLinkInfoW")
Interceptor.attach(SHELL32_CreateLinkInfoW, {onLeave: function (args) {send("SHELL32_CreateLinkInfoW");}});

var SHELL32_CreateQosRecorder = Module.findExportByName("shell32.dll", "SHELL32_CreateQosRecorder")
Interceptor.attach(SHELL32_CreateQosRecorder, {onLeave: function (args) {send("SHELL32_CreateQosRecorder");}});

var SHELL32_CreateSharePointView = Module.findExportByName("shell32.dll", "SHELL32_CreateSharePointView")
Interceptor.attach(SHELL32_CreateSharePointView, {onLeave: function (args) {send("SHELL32_CreateSharePointView");}});

var SHELL32_Create_IEnumUICommand = Module.findExportByName("shell32.dll", "SHELL32_Create_IEnumUICommand")
Interceptor.attach(SHELL32_Create_IEnumUICommand, {onLeave: function (args) {send("SHELL32_Create_IEnumUICommand");}});

var SHELL32_DestroyLinkInfo = Module.findExportByName("shell32.dll", "SHELL32_DestroyLinkInfo")
Interceptor.attach(SHELL32_DestroyLinkInfo, {onLeave: function (args) {send("SHELL32_DestroyLinkInfo");}});

var SHELL32_EncryptDirectory = Module.findExportByName("shell32.dll", "SHELL32_EncryptDirectory")
Interceptor.attach(SHELL32_EncryptDirectory, {onLeave: function (args) {send("SHELL32_EncryptDirectory");}});

var SHELL32_EncryptedFileKeyInfo = Module.findExportByName("shell32.dll", "SHELL32_EncryptedFileKeyInfo")
Interceptor.attach(SHELL32_EncryptedFileKeyInfo, {onLeave: function (args) {send("SHELL32_EncryptedFileKeyInfo");}});

var SHELL32_EnumCommonTasks = Module.findExportByName("shell32.dll", "SHELL32_EnumCommonTasks")
Interceptor.attach(SHELL32_EnumCommonTasks, {onLeave: function (args) {send("SHELL32_EnumCommonTasks");}});

var SHELL32_FreeEncryptedFileKeyInfo = Module.findExportByName("shell32.dll", "SHELL32_FreeEncryptedFileKeyInfo")
Interceptor.attach(SHELL32_FreeEncryptedFileKeyInfo, {onLeave: function (args) {send("SHELL32_FreeEncryptedFileKeyInfo");}});

var SHELL32_GenerateAppID = Module.findExportByName("shell32.dll", "SHELL32_GenerateAppID")
Interceptor.attach(SHELL32_GenerateAppID, {onLeave: function (args) {send("SHELL32_GenerateAppID");}});

var SHELL32_GetAppIDRoot = Module.findExportByName("shell32.dll", "SHELL32_GetAppIDRoot")
Interceptor.attach(SHELL32_GetAppIDRoot, {onLeave: function (args) {send("SHELL32_GetAppIDRoot");}});

var SHELL32_GetCommandProviderForFolderType = Module.findExportByName("shell32.dll", "SHELL32_GetCommandProviderForFolderType")
Interceptor.attach(SHELL32_GetCommandProviderForFolderType, {onLeave: function (args) {send("SHELL32_GetCommandProviderForFolderType");}});

var SHELL32_GetDPIAdjustedLogicalSize = Module.findExportByName("shell32.dll", "SHELL32_GetDPIAdjustedLogicalSize")
Interceptor.attach(SHELL32_GetDPIAdjustedLogicalSize, {onLeave: function (args) {send("SHELL32_GetDPIAdjustedLogicalSize");}});

var SHELL32_GetDiskCleanupPath = Module.findExportByName("shell32.dll", "SHELL32_GetDiskCleanupPath")
Interceptor.attach(SHELL32_GetDiskCleanupPath, {onLeave: function (args) {send("SHELL32_GetDiskCleanupPath");}});

var SHELL32_GetFileNameFromBrowse = Module.findExportByName("shell32.dll", "SHELL32_GetFileNameFromBrowse")
Interceptor.attach(SHELL32_GetFileNameFromBrowse, {onLeave: function (args) {send("SHELL32_GetFileNameFromBrowse");}});

var SHELL32_GetIconOverlayManager = Module.findExportByName("shell32.dll", "SHELL32_GetIconOverlayManager")
Interceptor.attach(SHELL32_GetIconOverlayManager, {onLeave: function (args) {send("SHELL32_GetIconOverlayManager");}});

var SHELL32_GetLinkInfoData = Module.findExportByName("shell32.dll", "SHELL32_GetLinkInfoData")
Interceptor.attach(SHELL32_GetLinkInfoData, {onLeave: function (args) {send("SHELL32_GetLinkInfoData");}});

var SHELL32_GetRatingBucket = Module.findExportByName("shell32.dll", "SHELL32_GetRatingBucket")
Interceptor.attach(SHELL32_GetRatingBucket, {onLeave: function (args) {send("SHELL32_GetRatingBucket");}});

var SHELL32_GetSqmableFileName = Module.findExportByName("shell32.dll", "SHELL32_GetSqmableFileName")
Interceptor.attach(SHELL32_GetSqmableFileName, {onLeave: function (args) {send("SHELL32_GetSqmableFileName");}});

var SHELL32_GetThumbnailAdornerFromFactory = Module.findExportByName("shell32.dll", "SHELL32_GetThumbnailAdornerFromFactory")
Interceptor.attach(SHELL32_GetThumbnailAdornerFromFactory, {onLeave: function (args) {send("SHELL32_GetThumbnailAdornerFromFactory");}});

var SHELL32_GetThumbnailAdornerFromFactory2 = Module.findExportByName("shell32.dll", "SHELL32_GetThumbnailAdornerFromFactory2")
Interceptor.attach(SHELL32_GetThumbnailAdornerFromFactory2, {onLeave: function (args) {send("SHELL32_GetThumbnailAdornerFromFactory2");}});

var SHELL32_HandleUnrecognizedFileSystem = Module.findExportByName("shell32.dll", "SHELL32_HandleUnrecognizedFileSystem")
Interceptor.attach(SHELL32_HandleUnrecognizedFileSystem, {onLeave: function (args) {send("SHELL32_HandleUnrecognizedFileSystem");}});

var SHELL32_IconCacheCreate = Module.findExportByName("shell32.dll", "SHELL32_IconCacheCreate")
Interceptor.attach(SHELL32_IconCacheCreate, {onLeave: function (args) {send("SHELL32_IconCacheCreate");}});

var SHELL32_IconCacheDestroy = Module.findExportByName("shell32.dll", "SHELL32_IconCacheDestroy")
Interceptor.attach(SHELL32_IconCacheDestroy, {onLeave: function (args) {send("SHELL32_IconCacheDestroy");}});

var SHELL32_IconCacheHandleAssociationChanged = Module.findExportByName("shell32.dll", "SHELL32_IconCacheHandleAssociationChanged")
Interceptor.attach(SHELL32_IconCacheHandleAssociationChanged, {onLeave: function (args) {send("SHELL32_IconCacheHandleAssociationChanged");}});

var SHELL32_IconCacheRestore = Module.findExportByName("shell32.dll", "SHELL32_IconCacheRestore")
Interceptor.attach(SHELL32_IconCacheRestore, {onLeave: function (args) {send("SHELL32_IconCacheRestore");}});

var SHELL32_IconCache_AboutToExtractIcons = Module.findExportByName("shell32.dll", "SHELL32_IconCache_AboutToExtractIcons")
Interceptor.attach(SHELL32_IconCache_AboutToExtractIcons, {onLeave: function (args) {send("SHELL32_IconCache_AboutToExtractIcons");}});

var SHELL32_IconCache_DoneExtractingIcons = Module.findExportByName("shell32.dll", "SHELL32_IconCache_DoneExtractingIcons")
Interceptor.attach(SHELL32_IconCache_DoneExtractingIcons, {onLeave: function (args) {send("SHELL32_IconCache_DoneExtractingIcons");}});

var SHELL32_IconCache_ExpandEnvAndSearchPath = Module.findExportByName("shell32.dll", "SHELL32_IconCache_ExpandEnvAndSearchPath")
Interceptor.attach(SHELL32_IconCache_ExpandEnvAndSearchPath, {onLeave: function (args) {send("SHELL32_IconCache_ExpandEnvAndSearchPath");}});

var SHELL32_IconCache_RememberRecentlyExtractedIconsW = Module.findExportByName("shell32.dll", "SHELL32_IconCache_RememberRecentlyExtractedIconsW")
Interceptor.attach(SHELL32_IconCache_RememberRecentlyExtractedIconsW, {onLeave: function (args) {send("SHELL32_IconCache_RememberRecentlyExtractedIconsW");}});

var SHELL32_IconOverlayManagerInit = Module.findExportByName("shell32.dll", "SHELL32_IconOverlayManagerInit")
Interceptor.attach(SHELL32_IconOverlayManagerInit, {onLeave: function (args) {send("SHELL32_IconOverlayManagerInit");}});

var SHELL32_IsGetKeyboardLayoutPresent = Module.findExportByName("shell32.dll", "SHELL32_IsGetKeyboardLayoutPresent")
Interceptor.attach(SHELL32_IsGetKeyboardLayoutPresent, {onLeave: function (args) {send("SHELL32_IsGetKeyboardLayoutPresent");}});

var SHELL32_IsSystemUpgradeInProgress = Module.findExportByName("shell32.dll", "SHELL32_IsSystemUpgradeInProgress")
Interceptor.attach(SHELL32_IsSystemUpgradeInProgress, {onLeave: function (args) {send("SHELL32_IsSystemUpgradeInProgress");}});

var SHELL32_IsValidLinkInfo = Module.findExportByName("shell32.dll", "SHELL32_IsValidLinkInfo")
Interceptor.attach(SHELL32_IsValidLinkInfo, {onLeave: function (args) {send("SHELL32_IsValidLinkInfo");}});

var SHELL32_LegacyEnumSpecialTasksByType = Module.findExportByName("shell32.dll", "SHELL32_LegacyEnumSpecialTasksByType")
Interceptor.attach(SHELL32_LegacyEnumSpecialTasksByType, {onLeave: function (args) {send("SHELL32_LegacyEnumSpecialTasksByType");}});

var SHELL32_LegacyEnumTasks = Module.findExportByName("shell32.dll", "SHELL32_LegacyEnumTasks")
Interceptor.attach(SHELL32_LegacyEnumTasks, {onLeave: function (args) {send("SHELL32_LegacyEnumTasks");}});

var SHELL32_LookupBackIconIndex = Module.findExportByName("shell32.dll", "SHELL32_LookupBackIconIndex")
Interceptor.attach(SHELL32_LookupBackIconIndex, {onLeave: function (args) {send("SHELL32_LookupBackIconIndex");}});

var SHELL32_LookupFrontIconIndex = Module.findExportByName("shell32.dll", "SHELL32_LookupFrontIconIndex")
Interceptor.attach(SHELL32_LookupFrontIconIndex, {onLeave: function (args) {send("SHELL32_LookupFrontIconIndex");}});

var SHELL32_NormalizeRating = Module.findExportByName("shell32.dll", "SHELL32_NormalizeRating")
Interceptor.attach(SHELL32_NormalizeRating, {onLeave: function (args) {send("SHELL32_NormalizeRating");}});

var SHELL32_NotifyLinkTrackingServiceOfMove = Module.findExportByName("shell32.dll", "SHELL32_NotifyLinkTrackingServiceOfMove")
Interceptor.attach(SHELL32_NotifyLinkTrackingServiceOfMove, {onLeave: function (args) {send("SHELL32_NotifyLinkTrackingServiceOfMove");}});

var SHELL32_PifMgr_CloseProperties = Module.findExportByName("shell32.dll", "SHELL32_PifMgr_CloseProperties")
Interceptor.attach(SHELL32_PifMgr_CloseProperties, {onLeave: function (args) {send("SHELL32_PifMgr_CloseProperties");}});

var SHELL32_PifMgr_GetProperties = Module.findExportByName("shell32.dll", "SHELL32_PifMgr_GetProperties")
Interceptor.attach(SHELL32_PifMgr_GetProperties, {onLeave: function (args) {send("SHELL32_PifMgr_GetProperties");}});

var SHELL32_PifMgr_OpenProperties = Module.findExportByName("shell32.dll", "SHELL32_PifMgr_OpenProperties")
Interceptor.attach(SHELL32_PifMgr_OpenProperties, {onLeave: function (args) {send("SHELL32_PifMgr_OpenProperties");}});

var SHELL32_PifMgr_SetProperties = Module.findExportByName("shell32.dll", "SHELL32_PifMgr_SetProperties")
Interceptor.attach(SHELL32_PifMgr_SetProperties, {onLeave: function (args) {send("SHELL32_PifMgr_SetProperties");}});

var SHELL32_Printers_CreateBindInfo = Module.findExportByName("shell32.dll", "SHELL32_Printers_CreateBindInfo")
Interceptor.attach(SHELL32_Printers_CreateBindInfo, {onLeave: function (args) {send("SHELL32_Printers_CreateBindInfo");}});

var SHELL32_Printjob_GetPidl = Module.findExportByName("shell32.dll", "SHELL32_Printjob_GetPidl")
Interceptor.attach(SHELL32_Printjob_GetPidl, {onLeave: function (args) {send("SHELL32_Printjob_GetPidl");}});

var SHELL32_PurgeSystemIcon = Module.findExportByName("shell32.dll", "SHELL32_PurgeSystemIcon")
Interceptor.attach(SHELL32_PurgeSystemIcon, {onLeave: function (args) {send("SHELL32_PurgeSystemIcon");}});

var SHELL32_RefreshOverlayImages = Module.findExportByName("shell32.dll", "SHELL32_RefreshOverlayImages")
Interceptor.attach(SHELL32_RefreshOverlayImages, {onLeave: function (args) {send("SHELL32_RefreshOverlayImages");}});

var SHELL32_ResolveLinkInfoW = Module.findExportByName("shell32.dll", "SHELL32_ResolveLinkInfoW")
Interceptor.attach(SHELL32_ResolveLinkInfoW, {onLeave: function (args) {send("SHELL32_ResolveLinkInfoW");}});

var SHELL32_SHAddSparseIcon = Module.findExportByName("shell32.dll", "SHELL32_SHAddSparseIcon")
Interceptor.attach(SHELL32_SHAddSparseIcon, {onLeave: function (args) {send("SHELL32_SHAddSparseIcon");}});

var SHELL32_SHCreateByValueOperationInterrupt = Module.findExportByName("shell32.dll", "SHELL32_SHCreateByValueOperationInterrupt")
Interceptor.attach(SHELL32_SHCreateByValueOperationInterrupt, {onLeave: function (args) {send("SHELL32_SHCreateByValueOperationInterrupt");}});

var SHELL32_SHCreateDefaultContextMenu = Module.findExportByName("shell32.dll", "SHELL32_SHCreateDefaultContextMenu")
Interceptor.attach(SHELL32_SHCreateDefaultContextMenu, {onLeave: function (args) {send("SHELL32_SHCreateDefaultContextMenu");}});

var SHELL32_SHCreateLocalServer = Module.findExportByName("shell32.dll", "SHELL32_SHCreateLocalServer")
Interceptor.attach(SHELL32_SHCreateLocalServer, {onLeave: function (args) {send("SHELL32_SHCreateLocalServer");}});

var SHELL32_SHCreateShellFolderView = Module.findExportByName("shell32.dll", "SHELL32_SHCreateShellFolderView")
Interceptor.attach(SHELL32_SHCreateShellFolderView, {onLeave: function (args) {send("SHELL32_SHCreateShellFolderView");}});

var SHELL32_SHDuplicateEncryptionInfoFile = Module.findExportByName("shell32.dll", "SHELL32_SHDuplicateEncryptionInfoFile")
Interceptor.attach(SHELL32_SHDuplicateEncryptionInfoFile, {onLeave: function (args) {send("SHELL32_SHDuplicateEncryptionInfoFile");}});

var SHELL32_SHEncryptFile = Module.findExportByName("shell32.dll", "SHELL32_SHEncryptFile")
Interceptor.attach(SHELL32_SHEncryptFile, {onLeave: function (args) {send("SHELL32_SHEncryptFile");}});

var SHELL32_SHFormatDriveAsync = Module.findExportByName("shell32.dll", "SHELL32_SHFormatDriveAsync")
Interceptor.attach(SHELL32_SHFormatDriveAsync, {onLeave: function (args) {send("SHELL32_SHFormatDriveAsync");}});

var SHELL32_SHGetThreadUndoManager = Module.findExportByName("shell32.dll", "SHELL32_SHGetThreadUndoManager")
Interceptor.attach(SHELL32_SHGetThreadUndoManager, {onLeave: function (args) {send("SHELL32_SHGetThreadUndoManager");}});

var SHELL32_SHGetUserNameW = Module.findExportByName("shell32.dll", "SHELL32_SHGetUserNameW")
Interceptor.attach(SHELL32_SHGetUserNameW, {onLeave: function (args) {send("SHELL32_SHGetUserNameW");}});

var SHELL32_SHIsVirtualDevice = Module.findExportByName("shell32.dll", "SHELL32_SHIsVirtualDevice")
Interceptor.attach(SHELL32_SHIsVirtualDevice, {onLeave: function (args) {send("SHELL32_SHIsVirtualDevice");}});

var SHELL32_SHLaunchPropSheet = Module.findExportByName("shell32.dll", "SHELL32_SHLaunchPropSheet")
Interceptor.attach(SHELL32_SHLaunchPropSheet, {onLeave: function (args) {send("SHELL32_SHLaunchPropSheet");}});

var SHELL32_SHLogILFromFSIL = Module.findExportByName("shell32.dll", "SHELL32_SHLogILFromFSIL")
Interceptor.attach(SHELL32_SHLogILFromFSIL, {onLeave: function (args) {send("SHELL32_SHLogILFromFSIL");}});

var SHELL32_SHOpenWithDialog = Module.findExportByName("shell32.dll", "SHELL32_SHOpenWithDialog")
Interceptor.attach(SHELL32_SHOpenWithDialog, {onLeave: function (args) {send("SHELL32_SHOpenWithDialog");}});

var SHELL32_SHStartNetConnectionDialogW = Module.findExportByName("shell32.dll", "SHELL32_SHStartNetConnectionDialogW")
Interceptor.attach(SHELL32_SHStartNetConnectionDialogW, {onLeave: function (args) {send("SHELL32_SHStartNetConnectionDialogW");}});

var SHELL32_SHUICommandFromGUID = Module.findExportByName("shell32.dll", "SHELL32_SHUICommandFromGUID")
Interceptor.attach(SHELL32_SHUICommandFromGUID, {onLeave: function (args) {send("SHELL32_SHUICommandFromGUID");}});

var SHELL32_SendToMenu_InvokeTargetedCommand = Module.findExportByName("shell32.dll", "SHELL32_SendToMenu_InvokeTargetedCommand")
Interceptor.attach(SHELL32_SendToMenu_InvokeTargetedCommand, {onLeave: function (args) {send("SHELL32_SendToMenu_InvokeTargetedCommand");}});

var SHELL32_SendToMenu_VerifyTargetedCommand = Module.findExportByName("shell32.dll", "SHELL32_SendToMenu_VerifyTargetedCommand")
Interceptor.attach(SHELL32_SendToMenu_VerifyTargetedCommand, {onLeave: function (args) {send("SHELL32_SendToMenu_VerifyTargetedCommand");}});

var SHELL32_ShowHideIconOnlyOnDesktop = Module.findExportByName("shell32.dll", "SHELL32_ShowHideIconOnlyOnDesktop")
Interceptor.attach(SHELL32_ShowHideIconOnlyOnDesktop, {onLeave: function (args) {send("SHELL32_ShowHideIconOnlyOnDesktop");}});

var SHELL32_SimpleRatingToFilterCondition = Module.findExportByName("shell32.dll", "SHELL32_SimpleRatingToFilterCondition")
Interceptor.attach(SHELL32_SimpleRatingToFilterCondition, {onLeave: function (args) {send("SHELL32_SimpleRatingToFilterCondition");}});

var SHELL32_StampIconForFile = Module.findExportByName("shell32.dll", "SHELL32_StampIconForFile")
Interceptor.attach(SHELL32_StampIconForFile, {onLeave: function (args) {send("SHELL32_StampIconForFile");}});

var SHELL32_SuspendUndo = Module.findExportByName("shell32.dll", "SHELL32_SuspendUndo")
Interceptor.attach(SHELL32_SuspendUndo, {onLeave: function (args) {send("SHELL32_SuspendUndo");}});

var SHELL32_TryVirtualDiscImageDriveEject = Module.findExportByName("shell32.dll", "SHELL32_TryVirtualDiscImageDriveEject")
Interceptor.attach(SHELL32_TryVirtualDiscImageDriveEject, {onLeave: function (args) {send("SHELL32_TryVirtualDiscImageDriveEject");}});

var SHELL32_VerifySaferTrust = Module.findExportByName("shell32.dll", "SHELL32_VerifySaferTrust")
Interceptor.attach(SHELL32_VerifySaferTrust, {onLeave: function (args) {send("SHELL32_VerifySaferTrust");}});

var SHEmptyRecycleBinA = Module.findExportByName("shell32.dll", "SHEmptyRecycleBinA")
Interceptor.attach(SHEmptyRecycleBinA, {onLeave: function (args) {send("SHEmptyRecycleBinA");}});

var SHEmptyRecycleBinW = Module.findExportByName("shell32.dll", "SHEmptyRecycleBinW")
Interceptor.attach(SHEmptyRecycleBinW, {onLeave: function (args) {send("SHEmptyRecycleBinW");}});

var SHEnableServiceObject = Module.findExportByName("shell32.dll", "SHEnableServiceObject")
Interceptor.attach(SHEnableServiceObject, {onLeave: function (args) {send("SHEnableServiceObject");}});

var SHEnumerateUnreadMailAccountsW = Module.findExportByName("shell32.dll", "SHEnumerateUnreadMailAccountsW")
Interceptor.attach(SHEnumerateUnreadMailAccountsW, {onLeave: function (args) {send("SHEnumerateUnreadMailAccountsW");}});

var SHEvaluateSystemCommandTemplate = Module.findExportByName("shell32.dll", "SHEvaluateSystemCommandTemplate")
Interceptor.attach(SHEvaluateSystemCommandTemplate, {onLeave: function (args) {send("SHEvaluateSystemCommandTemplate");}});

var SHExecuteErrorMessageBox = Module.findExportByName("shell32.dll", "SHExecuteErrorMessageBox")
Interceptor.attach(SHExecuteErrorMessageBox, {onLeave: function (args) {send("SHExecuteErrorMessageBox");}});

var SHExtractIconsW = Module.findExportByName("shell32.dll", "SHExtractIconsW")
Interceptor.attach(SHExtractIconsW, {onLeave: function (args) {send("SHExtractIconsW");}});

var SHFileOperation = Module.findExportByName("shell32.dll", "SHFileOperation")
Interceptor.attach(SHFileOperation, {onLeave: function (args) {send("SHFileOperation");}});

var SHFileOperationA = Module.findExportByName("shell32.dll", "SHFileOperationA")
Interceptor.attach(SHFileOperationA, {onLeave: function (args) {send("SHFileOperationA");}});

var SHFileOperationW = Module.findExportByName("shell32.dll", "SHFileOperationW")
Interceptor.attach(SHFileOperationW, {onLeave: function (args) {send("SHFileOperationW");}});

var SHFindFiles = Module.findExportByName("shell32.dll", "SHFindFiles")
Interceptor.attach(SHFindFiles, {onLeave: function (args) {send("SHFindFiles");}});

var SHFind_InitMenuPopup = Module.findExportByName("shell32.dll", "SHFind_InitMenuPopup")
Interceptor.attach(SHFind_InitMenuPopup, {onLeave: function (args) {send("SHFind_InitMenuPopup");}});

var SHFlushSFCache = Module.findExportByName("shell32.dll", "SHFlushSFCache")
Interceptor.attach(SHFlushSFCache, {onLeave: function (args) {send("SHFlushSFCache");}});

var SHFormatDrive = Module.findExportByName("shell32.dll", "SHFormatDrive")
Interceptor.attach(SHFormatDrive, {onLeave: function (args) {send("SHFormatDrive");}});

var SHFree = Module.findExportByName("shell32.dll", "SHFree")
Interceptor.attach(SHFree, {onLeave: function (args) {send("SHFree");}});

var SHFreeNameMappings = Module.findExportByName("shell32.dll", "SHFreeNameMappings")
Interceptor.attach(SHFreeNameMappings, {onLeave: function (args) {send("SHFreeNameMappings");}});

var SHGetAttributesFromDataObject = Module.findExportByName("shell32.dll", "SHGetAttributesFromDataObject")
Interceptor.attach(SHGetAttributesFromDataObject, {onLeave: function (args) {send("SHGetAttributesFromDataObject");}});

var SHGetDataFromIDListA = Module.findExportByName("shell32.dll", "SHGetDataFromIDListA")
Interceptor.attach(SHGetDataFromIDListA, {onLeave: function (args) {send("SHGetDataFromIDListA");}});

var SHGetDataFromIDListW = Module.findExportByName("shell32.dll", "SHGetDataFromIDListW")
Interceptor.attach(SHGetDataFromIDListW, {onLeave: function (args) {send("SHGetDataFromIDListW");}});

var SHGetDesktopFolder = Module.findExportByName("shell32.dll", "SHGetDesktopFolder")
Interceptor.attach(SHGetDesktopFolder, {onLeave: function (args) {send("SHGetDesktopFolder");}});

var SHGetDiskFreeSpaceA = Module.findExportByName("shell32.dll", "SHGetDiskFreeSpaceA")
Interceptor.attach(SHGetDiskFreeSpaceA, {onLeave: function (args) {send("SHGetDiskFreeSpaceA");}});

var SHGetDiskFreeSpaceExA = Module.findExportByName("shell32.dll", "SHGetDiskFreeSpaceExA")
Interceptor.attach(SHGetDiskFreeSpaceExA, {onLeave: function (args) {send("SHGetDiskFreeSpaceExA");}});

var SHGetDiskFreeSpaceExW = Module.findExportByName("shell32.dll", "SHGetDiskFreeSpaceExW")
Interceptor.attach(SHGetDiskFreeSpaceExW, {onLeave: function (args) {send("SHGetDiskFreeSpaceExW");}});

var SHGetDriveMedia = Module.findExportByName("shell32.dll", "SHGetDriveMedia")
Interceptor.attach(SHGetDriveMedia, {onLeave: function (args) {send("SHGetDriveMedia");}});

var SHGetFileInfo = Module.findExportByName("shell32.dll", "SHGetFileInfo")
Interceptor.attach(SHGetFileInfo, {onLeave: function (args) {send("SHGetFileInfo");}});

var SHGetFileInfoA = Module.findExportByName("shell32.dll", "SHGetFileInfoA")
Interceptor.attach(SHGetFileInfoA, {onLeave: function (args) {send("SHGetFileInfoA");}});

var SHGetFileInfoW = Module.findExportByName("shell32.dll", "SHGetFileInfoW")
Interceptor.attach(SHGetFileInfoW, {onLeave: function (args) {send("SHGetFileInfoW");}});

var SHGetFolderLocation = Module.findExportByName("shell32.dll", "SHGetFolderLocation")
Interceptor.attach(SHGetFolderLocation, {onLeave: function (args) {send("SHGetFolderLocation");}});

var SHGetFolderPathA = Module.findExportByName("shell32.dll", "SHGetFolderPathA")
Interceptor.attach(SHGetFolderPathA, {onLeave: function (args) {send("SHGetFolderPathA");}});

var SHGetFolderPathAndSubDirA = Module.findExportByName("shell32.dll", "SHGetFolderPathAndSubDirA")
Interceptor.attach(SHGetFolderPathAndSubDirA, {onLeave: function (args) {send("SHGetFolderPathAndSubDirA");}});

var SHGetFolderPathAndSubDirW = Module.findExportByName("shell32.dll", "SHGetFolderPathAndSubDirW")
Interceptor.attach(SHGetFolderPathAndSubDirW, {onLeave: function (args) {send("SHGetFolderPathAndSubDirW");}});

var SHGetFolderPathEx = Module.findExportByName("shell32.dll", "SHGetFolderPathEx")
Interceptor.attach(SHGetFolderPathEx, {onLeave: function (args) {send("SHGetFolderPathEx");}});

var SHGetFolderPathW = Module.findExportByName("shell32.dll", "SHGetFolderPathW")
Interceptor.attach(SHGetFolderPathW, {onLeave: function (args) {send("SHGetFolderPathW");}});

var SHGetIDListFromObject = Module.findExportByName("shell32.dll", "SHGetIDListFromObject")
Interceptor.attach(SHGetIDListFromObject, {onLeave: function (args) {send("SHGetIDListFromObject");}});

var SHGetIconOverlayIndexA = Module.findExportByName("shell32.dll", "SHGetIconOverlayIndexA")
Interceptor.attach(SHGetIconOverlayIndexA, {onLeave: function (args) {send("SHGetIconOverlayIndexA");}});

var SHGetIconOverlayIndexW = Module.findExportByName("shell32.dll", "SHGetIconOverlayIndexW")
Interceptor.attach(SHGetIconOverlayIndexW, {onLeave: function (args) {send("SHGetIconOverlayIndexW");}});

var SHGetImageList = Module.findExportByName("shell32.dll", "SHGetImageList")
Interceptor.attach(SHGetImageList, {onLeave: function (args) {send("SHGetImageList");}});

var SHGetInstanceExplorer = Module.findExportByName("shell32.dll", "SHGetInstanceExplorer")
Interceptor.attach(SHGetInstanceExplorer, {onLeave: function (args) {send("SHGetInstanceExplorer");}});

var SHGetItemFromDataObject = Module.findExportByName("shell32.dll", "SHGetItemFromDataObject")
Interceptor.attach(SHGetItemFromDataObject, {onLeave: function (args) {send("SHGetItemFromDataObject");}});

var SHGetItemFromObject = Module.findExportByName("shell32.dll", "SHGetItemFromObject")
Interceptor.attach(SHGetItemFromObject, {onLeave: function (args) {send("SHGetItemFromObject");}});

var SHGetKnownFolderIDList = Module.findExportByName("shell32.dll", "SHGetKnownFolderIDList")
Interceptor.attach(SHGetKnownFolderIDList, {onLeave: function (args) {send("SHGetKnownFolderIDList");}});

var SHGetKnownFolderItem = Module.findExportByName("shell32.dll", "SHGetKnownFolderItem")
Interceptor.attach(SHGetKnownFolderItem, {onLeave: function (args) {send("SHGetKnownFolderItem");}});

var SHGetKnownFolderPath = Module.findExportByName("shell32.dll", "SHGetKnownFolderPath")
Interceptor.attach(SHGetKnownFolderPath, {onLeave: function (args) {send("SHGetKnownFolderPath");}});

var SHGetLocalizedName = Module.findExportByName("shell32.dll", "SHGetLocalizedName")
Interceptor.attach(SHGetLocalizedName, {onLeave: function (args) {send("SHGetLocalizedName");}});

var SHGetMalloc = Module.findExportByName("shell32.dll", "SHGetMalloc")
Interceptor.attach(SHGetMalloc, {onLeave: function (args) {send("SHGetMalloc");}});

var SHGetNameFromIDList = Module.findExportByName("shell32.dll", "SHGetNameFromIDList")
Interceptor.attach(SHGetNameFromIDList, {onLeave: function (args) {send("SHGetNameFromIDList");}});

var SHGetNewLinkInfo = Module.findExportByName("shell32.dll", "SHGetNewLinkInfo")
Interceptor.attach(SHGetNewLinkInfo, {onLeave: function (args) {send("SHGetNewLinkInfo");}});

var SHGetNewLinkInfoA = Module.findExportByName("shell32.dll", "SHGetNewLinkInfoA")
Interceptor.attach(SHGetNewLinkInfoA, {onLeave: function (args) {send("SHGetNewLinkInfoA");}});

var SHGetNewLinkInfoW = Module.findExportByName("shell32.dll", "SHGetNewLinkInfoW")
Interceptor.attach(SHGetNewLinkInfoW, {onLeave: function (args) {send("SHGetNewLinkInfoW");}});

var SHGetPathFromIDList = Module.findExportByName("shell32.dll", "SHGetPathFromIDList")
Interceptor.attach(SHGetPathFromIDList, {onLeave: function (args) {send("SHGetPathFromIDList");}});

var SHGetPathFromIDListA = Module.findExportByName("shell32.dll", "SHGetPathFromIDListA")
Interceptor.attach(SHGetPathFromIDListA, {onLeave: function (args) {send("SHGetPathFromIDListA");}});

var SHGetPathFromIDListEx = Module.findExportByName("shell32.dll", "SHGetPathFromIDListEx")
Interceptor.attach(SHGetPathFromIDListEx, {onLeave: function (args) {send("SHGetPathFromIDListEx");}});

var SHGetPathFromIDListW = Module.findExportByName("shell32.dll", "SHGetPathFromIDListW")
Interceptor.attach(SHGetPathFromIDListW, {onLeave: function (args) {send("SHGetPathFromIDListW");}});

var SHGetPropertyStoreForWindow = Module.findExportByName("shell32.dll", "SHGetPropertyStoreForWindow")
Interceptor.attach(SHGetPropertyStoreForWindow, {onLeave: function (args) {send("SHGetPropertyStoreForWindow");}});

var SHGetPropertyStoreFromIDList = Module.findExportByName("shell32.dll", "SHGetPropertyStoreFromIDList")
Interceptor.attach(SHGetPropertyStoreFromIDList, {onLeave: function (args) {send("SHGetPropertyStoreFromIDList");}});

var SHGetPropertyStoreFromParsingName = Module.findExportByName("shell32.dll", "SHGetPropertyStoreFromParsingName")
Interceptor.attach(SHGetPropertyStoreFromParsingName, {onLeave: function (args) {send("SHGetPropertyStoreFromParsingName");}});

var SHGetRealIDL = Module.findExportByName("shell32.dll", "SHGetRealIDL")
Interceptor.attach(SHGetRealIDL, {onLeave: function (args) {send("SHGetRealIDL");}});

var SHGetSetFolderCustomSettings = Module.findExportByName("shell32.dll", "SHGetSetFolderCustomSettings")
Interceptor.attach(SHGetSetFolderCustomSettings, {onLeave: function (args) {send("SHGetSetFolderCustomSettings");}});

var SHGetSetSettings = Module.findExportByName("shell32.dll", "SHGetSetSettings")
Interceptor.attach(SHGetSetSettings, {onLeave: function (args) {send("SHGetSetSettings");}});

var SHGetSettings = Module.findExportByName("shell32.dll", "SHGetSettings")
Interceptor.attach(SHGetSettings, {onLeave: function (args) {send("SHGetSettings");}});

var SHGetSpecialFolderLocation = Module.findExportByName("shell32.dll", "SHGetSpecialFolderLocation")
Interceptor.attach(SHGetSpecialFolderLocation, {onLeave: function (args) {send("SHGetSpecialFolderLocation");}});

var SHGetSpecialFolderPathA = Module.findExportByName("shell32.dll", "SHGetSpecialFolderPathA")
Interceptor.attach(SHGetSpecialFolderPathA, {onLeave: function (args) {send("SHGetSpecialFolderPathA");}});

var SHGetSpecialFolderPathW = Module.findExportByName("shell32.dll", "SHGetSpecialFolderPathW")
Interceptor.attach(SHGetSpecialFolderPathW, {onLeave: function (args) {send("SHGetSpecialFolderPathW");}});

var SHGetStockIconInfo = Module.findExportByName("shell32.dll", "SHGetStockIconInfo")
Interceptor.attach(SHGetStockIconInfo, {onLeave: function (args) {send("SHGetStockIconInfo");}});

var SHGetTemporaryPropertyForItem = Module.findExportByName("shell32.dll", "SHGetTemporaryPropertyForItem")
Interceptor.attach(SHGetTemporaryPropertyForItem, {onLeave: function (args) {send("SHGetTemporaryPropertyForItem");}});

var SHGetUnreadMailCountW = Module.findExportByName("shell32.dll", "SHGetUnreadMailCountW")
Interceptor.attach(SHGetUnreadMailCountW, {onLeave: function (args) {send("SHGetUnreadMailCountW");}});

var SHHandleUpdateImage = Module.findExportByName("shell32.dll", "SHHandleUpdateImage")
Interceptor.attach(SHHandleUpdateImage, {onLeave: function (args) {send("SHHandleUpdateImage");}});

var SHHelpShortcuts_RunDLL = Module.findExportByName("shell32.dll", "SHHelpShortcuts_RunDLL")
Interceptor.attach(SHHelpShortcuts_RunDLL, {onLeave: function (args) {send("SHHelpShortcuts_RunDLL");}});

var SHHelpShortcuts_RunDLLA = Module.findExportByName("shell32.dll", "SHHelpShortcuts_RunDLLA")
Interceptor.attach(SHHelpShortcuts_RunDLLA, {onLeave: function (args) {send("SHHelpShortcuts_RunDLLA");}});

var SHHelpShortcuts_RunDLLW = Module.findExportByName("shell32.dll", "SHHelpShortcuts_RunDLLW")
Interceptor.attach(SHHelpShortcuts_RunDLLW, {onLeave: function (args) {send("SHHelpShortcuts_RunDLLW");}});

var SHILCreateFromPath = Module.findExportByName("shell32.dll", "SHILCreateFromPath")
Interceptor.attach(SHILCreateFromPath, {onLeave: function (args) {send("SHILCreateFromPath");}});

var SHInvokePrinterCommandA = Module.findExportByName("shell32.dll", "SHInvokePrinterCommandA")
Interceptor.attach(SHInvokePrinterCommandA, {onLeave: function (args) {send("SHInvokePrinterCommandA");}});

var SHInvokePrinterCommandW = Module.findExportByName("shell32.dll", "SHInvokePrinterCommandW")
Interceptor.attach(SHInvokePrinterCommandW, {onLeave: function (args) {send("SHInvokePrinterCommandW");}});

var SHIsFileAvailableOffline = Module.findExportByName("shell32.dll", "SHIsFileAvailableOffline")
Interceptor.attach(SHIsFileAvailableOffline, {onLeave: function (args) {send("SHIsFileAvailableOffline");}});

var SHLimitInputEdit = Module.findExportByName("shell32.dll", "SHLimitInputEdit")
Interceptor.attach(SHLimitInputEdit, {onLeave: function (args) {send("SHLimitInputEdit");}});

var SHLoadInProc = Module.findExportByName("shell32.dll", "SHLoadInProc")
Interceptor.attach(SHLoadInProc, {onLeave: function (args) {send("SHLoadInProc");}});

var SHLoadNonloadedIconOverlayIdentifiers = Module.findExportByName("shell32.dll", "SHLoadNonloadedIconOverlayIdentifiers")
Interceptor.attach(SHLoadNonloadedIconOverlayIdentifiers, {onLeave: function (args) {send("SHLoadNonloadedIconOverlayIdentifiers");}});

var SHMapPIDLToSystemImageListIndex = Module.findExportByName("shell32.dll", "SHMapPIDLToSystemImageListIndex")
Interceptor.attach(SHMapPIDLToSystemImageListIndex, {onLeave: function (args) {send("SHMapPIDLToSystemImageListIndex");}});

var SHMultiFileProperties = Module.findExportByName("shell32.dll", "SHMultiFileProperties")
Interceptor.attach(SHMultiFileProperties, {onLeave: function (args) {send("SHMultiFileProperties");}});

var SHObjectProperties = Module.findExportByName("shell32.dll", "SHObjectProperties")
Interceptor.attach(SHObjectProperties, {onLeave: function (args) {send("SHObjectProperties");}});

var SHOpenFolderAndSelectItems = Module.findExportByName("shell32.dll", "SHOpenFolderAndSelectItems")
Interceptor.attach(SHOpenFolderAndSelectItems, {onLeave: function (args) {send("SHOpenFolderAndSelectItems");}});

var SHOpenOrGetFolderView = Module.findExportByName("shell32.dll", "SHOpenOrGetFolderView")
Interceptor.attach(SHOpenOrGetFolderView, {onLeave: function (args) {send("SHOpenOrGetFolderView");}});

var SHOpenPropSheetW = Module.findExportByName("shell32.dll", "SHOpenPropSheetW")
Interceptor.attach(SHOpenPropSheetW, {onLeave: function (args) {send("SHOpenPropSheetW");}});

var SHOpenWithDialog = Module.findExportByName("shell32.dll", "SHOpenWithDialog")
Interceptor.attach(SHOpenWithDialog, {onLeave: function (args) {send("SHOpenWithDialog");}});

var SHParseDisplayName = Module.findExportByName("shell32.dll", "SHParseDisplayName")
Interceptor.attach(SHParseDisplayName, {onLeave: function (args) {send("SHParseDisplayName");}});

var SHPathPrepareForWriteA = Module.findExportByName("shell32.dll", "SHPathPrepareForWriteA")
Interceptor.attach(SHPathPrepareForWriteA, {onLeave: function (args) {send("SHPathPrepareForWriteA");}});

var SHPathPrepareForWriteW = Module.findExportByName("shell32.dll", "SHPathPrepareForWriteW")
Interceptor.attach(SHPathPrepareForWriteW, {onLeave: function (args) {send("SHPathPrepareForWriteW");}});

var SHPropStgCreate = Module.findExportByName("shell32.dll", "SHPropStgCreate")
Interceptor.attach(SHPropStgCreate, {onLeave: function (args) {send("SHPropStgCreate");}});

var SHPropStgReadMultiple = Module.findExportByName("shell32.dll", "SHPropStgReadMultiple")
Interceptor.attach(SHPropStgReadMultiple, {onLeave: function (args) {send("SHPropStgReadMultiple");}});

var SHPropStgWriteMultiple = Module.findExportByName("shell32.dll", "SHPropStgWriteMultiple")
Interceptor.attach(SHPropStgWriteMultiple, {onLeave: function (args) {send("SHPropStgWriteMultiple");}});

var SHQueryRecycleBinA = Module.findExportByName("shell32.dll", "SHQueryRecycleBinA")
Interceptor.attach(SHQueryRecycleBinA, {onLeave: function (args) {send("SHQueryRecycleBinA");}});

var SHQueryRecycleBinW = Module.findExportByName("shell32.dll", "SHQueryRecycleBinW")
Interceptor.attach(SHQueryRecycleBinW, {onLeave: function (args) {send("SHQueryRecycleBinW");}});

var SHQueryUserNotificationState = Module.findExportByName("shell32.dll", "SHQueryUserNotificationState")
Interceptor.attach(SHQueryUserNotificationState, {onLeave: function (args) {send("SHQueryUserNotificationState");}});

var SHRemoveLocalizedName = Module.findExportByName("shell32.dll", "SHRemoveLocalizedName")
Interceptor.attach(SHRemoveLocalizedName, {onLeave: function (args) {send("SHRemoveLocalizedName");}});

var SHReplaceFromPropSheetExtArray = Module.findExportByName("shell32.dll", "SHReplaceFromPropSheetExtArray")
Interceptor.attach(SHReplaceFromPropSheetExtArray, {onLeave: function (args) {send("SHReplaceFromPropSheetExtArray");}});

var SHResolveLibrary = Module.findExportByName("shell32.dll", "SHResolveLibrary")
Interceptor.attach(SHResolveLibrary, {onLeave: function (args) {send("SHResolveLibrary");}});

var SHRestricted = Module.findExportByName("shell32.dll", "SHRestricted")
Interceptor.attach(SHRestricted, {onLeave: function (args) {send("SHRestricted");}});

var SHSetDefaultProperties = Module.findExportByName("shell32.dll", "SHSetDefaultProperties")
Interceptor.attach(SHSetDefaultProperties, {onLeave: function (args) {send("SHSetDefaultProperties");}});

var SHSetFolderPathA = Module.findExportByName("shell32.dll", "SHSetFolderPathA")
Interceptor.attach(SHSetFolderPathA, {onLeave: function (args) {send("SHSetFolderPathA");}});

var SHSetFolderPathW = Module.findExportByName("shell32.dll", "SHSetFolderPathW")
Interceptor.attach(SHSetFolderPathW, {onLeave: function (args) {send("SHSetFolderPathW");}});

var SHSetInstanceExplorer = Module.findExportByName("shell32.dll", "SHSetInstanceExplorer")
Interceptor.attach(SHSetInstanceExplorer, {onLeave: function (args) {send("SHSetInstanceExplorer");}});

var SHSetKnownFolderPath = Module.findExportByName("shell32.dll", "SHSetKnownFolderPath")
Interceptor.attach(SHSetKnownFolderPath, {onLeave: function (args) {send("SHSetKnownFolderPath");}});

var SHSetLocalizedName = Module.findExportByName("shell32.dll", "SHSetLocalizedName")
Interceptor.attach(SHSetLocalizedName, {onLeave: function (args) {send("SHSetLocalizedName");}});

var SHSetTemporaryPropertyForItem = Module.findExportByName("shell32.dll", "SHSetTemporaryPropertyForItem")
Interceptor.attach(SHSetTemporaryPropertyForItem, {onLeave: function (args) {send("SHSetTemporaryPropertyForItem");}});

var SHSetUnreadMailCountW = Module.findExportByName("shell32.dll", "SHSetUnreadMailCountW")
Interceptor.attach(SHSetUnreadMailCountW, {onLeave: function (args) {send("SHSetUnreadMailCountW");}});

var SHShellFolderView_Message = Module.findExportByName("shell32.dll", "SHShellFolderView_Message")
Interceptor.attach(SHShellFolderView_Message, {onLeave: function (args) {send("SHShellFolderView_Message");}});

var SHShowManageLibraryUI = Module.findExportByName("shell32.dll", "SHShowManageLibraryUI")
Interceptor.attach(SHShowManageLibraryUI, {onLeave: function (args) {send("SHShowManageLibraryUI");}});

var SHSimpleIDListFromPath = Module.findExportByName("shell32.dll", "SHSimpleIDListFromPath")
Interceptor.attach(SHSimpleIDListFromPath, {onLeave: function (args) {send("SHSimpleIDListFromPath");}});

var SHStartNetConnectionDialogW = Module.findExportByName("shell32.dll", "SHStartNetConnectionDialogW")
Interceptor.attach(SHStartNetConnectionDialogW, {onLeave: function (args) {send("SHStartNetConnectionDialogW");}});

var SHTestTokenMembership = Module.findExportByName("shell32.dll", "SHTestTokenMembership")
Interceptor.attach(SHTestTokenMembership, {onLeave: function (args) {send("SHTestTokenMembership");}});

var SHUpdateImageA = Module.findExportByName("shell32.dll", "SHUpdateImageA")
Interceptor.attach(SHUpdateImageA, {onLeave: function (args) {send("SHUpdateImageA");}});

var SHUpdateImageW = Module.findExportByName("shell32.dll", "SHUpdateImageW")
Interceptor.attach(SHUpdateImageW, {onLeave: function (args) {send("SHUpdateImageW");}});

var SHUpdateRecycleBinIcon = Module.findExportByName("shell32.dll", "SHUpdateRecycleBinIcon")
Interceptor.attach(SHUpdateRecycleBinIcon, {onLeave: function (args) {send("SHUpdateRecycleBinIcon");}});

var SHValidateUNC = Module.findExportByName("shell32.dll", "SHValidateUNC")
Interceptor.attach(SHValidateUNC, {onLeave: function (args) {send("SHValidateUNC");}});

var SetCurrentProcessExplicitAppUserModelID = Module.findExportByName("shell32.dll", "SetCurrentProcessExplicitAppUserModelID")
Interceptor.attach(SetCurrentProcessExplicitAppUserModelID, {onLeave: function (args) {send("SetCurrentProcessExplicitAppUserModelID");}});

var SheChangeDirA = Module.findExportByName("shell32.dll", "SheChangeDirA")
Interceptor.attach(SheChangeDirA, {onLeave: function (args) {send("SheChangeDirA");}});

var SheChangeDirExW = Module.findExportByName("shell32.dll", "SheChangeDirExW")
Interceptor.attach(SheChangeDirExW, {onLeave: function (args) {send("SheChangeDirExW");}});

var SheGetDirA = Module.findExportByName("shell32.dll", "SheGetDirA")
Interceptor.attach(SheGetDirA, {onLeave: function (args) {send("SheGetDirA");}});

var SheSetCurDrive = Module.findExportByName("shell32.dll", "SheSetCurDrive")
Interceptor.attach(SheSetCurDrive, {onLeave: function (args) {send("SheSetCurDrive");}});

var ShellAboutA = Module.findExportByName("shell32.dll", "ShellAboutA")
Interceptor.attach(ShellAboutA, {onLeave: function (args) {send("ShellAboutA");}});

var ShellAboutW = Module.findExportByName("shell32.dll", "ShellAboutW")
Interceptor.attach(ShellAboutW, {onLeave: function (args) {send("ShellAboutW");}});

var ShellExec_RunDLL = Module.findExportByName("shell32.dll", "ShellExec_RunDLL")
Interceptor.attach(ShellExec_RunDLL, {onLeave: function (args) {send("ShellExec_RunDLL");}});

var ShellExec_RunDLLA = Module.findExportByName("shell32.dll", "ShellExec_RunDLLA")
Interceptor.attach(ShellExec_RunDLLA, {onLeave: function (args) {send("ShellExec_RunDLLA");}});

var ShellExec_RunDLLW = Module.findExportByName("shell32.dll", "ShellExec_RunDLLW")
Interceptor.attach(ShellExec_RunDLLW, {onLeave: function (args) {send("ShellExec_RunDLLW");}});

var ShellExecuteA = Module.findExportByName("shell32.dll", "ShellExecuteA")
Interceptor.attach(ShellExecuteA, {onLeave: function (args) {send("ShellExecuteA");}});

var ShellExecuteEx = Module.findExportByName("shell32.dll", "ShellExecuteEx")
Interceptor.attach(ShellExecuteEx, {onLeave: function (args) {send("ShellExecuteEx");}});

var ShellExecuteExA = Module.findExportByName("shell32.dll", "ShellExecuteExA")
Interceptor.attach(ShellExecuteExA, {onLeave: function (args) {send("ShellExecuteExA");}});

var ShellExecuteExW = Module.findExportByName("shell32.dll", "ShellExecuteExW")
Interceptor.attach(ShellExecuteExW, {onLeave: function (args) {send("ShellExecuteExW");}});

var ShellExecuteW = Module.findExportByName("shell32.dll", "ShellExecuteW")
Interceptor.attach(ShellExecuteW, {onLeave: function (args) {send("ShellExecuteW");}});

var ShellHookProc = Module.findExportByName("shell32.dll", "ShellHookProc")
Interceptor.attach(ShellHookProc, {onLeave: function (args) {send("ShellHookProc");}});

var ShellMessageBoxA = Module.findExportByName("shell32.dll", "ShellMessageBoxA")
Interceptor.attach(ShellMessageBoxA, {onLeave: function (args) {send("ShellMessageBoxA");}});

var ShellMessageBoxW = Module.findExportByName("shell32.dll", "ShellMessageBoxW")
Interceptor.attach(ShellMessageBoxW, {onLeave: function (args) {send("ShellMessageBoxW");}});

var Shell_GetCachedImageIndex = Module.findExportByName("shell32.dll", "Shell_GetCachedImageIndex")
Interceptor.attach(Shell_GetCachedImageIndex, {onLeave: function (args) {send("Shell_GetCachedImageIndex");}});

var Shell_GetCachedImageIndexA = Module.findExportByName("shell32.dll", "Shell_GetCachedImageIndexA")
Interceptor.attach(Shell_GetCachedImageIndexA, {onLeave: function (args) {send("Shell_GetCachedImageIndexA");}});

var Shell_GetCachedImageIndexW = Module.findExportByName("shell32.dll", "Shell_GetCachedImageIndexW")
Interceptor.attach(Shell_GetCachedImageIndexW, {onLeave: function (args) {send("Shell_GetCachedImageIndexW");}});

var Shell_GetImageLists = Module.findExportByName("shell32.dll", "Shell_GetImageLists")
Interceptor.attach(Shell_GetImageLists, {onLeave: function (args) {send("Shell_GetImageLists");}});

var Shell_MergeMenus = Module.findExportByName("shell32.dll", "Shell_MergeMenus")
Interceptor.attach(Shell_MergeMenus, {onLeave: function (args) {send("Shell_MergeMenus");}});

var Shell_NotifyIcon = Module.findExportByName("shell32.dll", "Shell_NotifyIcon")
Interceptor.attach(Shell_NotifyIcon, {onLeave: function (args) {send("Shell_NotifyIcon");}});

var Shell_NotifyIconA = Module.findExportByName("shell32.dll", "Shell_NotifyIconA")
Interceptor.attach(Shell_NotifyIconA, {onLeave: function (args) {send("Shell_NotifyIconA");}});

var Shell_NotifyIconGetRect = Module.findExportByName("shell32.dll", "Shell_NotifyIconGetRect")
Interceptor.attach(Shell_NotifyIconGetRect, {onLeave: function (args) {send("Shell_NotifyIconGetRect");}});

var Shell_NotifyIconW = Module.findExportByName("shell32.dll", "Shell_NotifyIconW")
Interceptor.attach(Shell_NotifyIconW, {onLeave: function (args) {send("Shell_NotifyIconW");}});

var SignalFileOpen = Module.findExportByName("shell32.dll", "SignalFileOpen")
Interceptor.attach(SignalFileOpen, {onLeave: function (args) {send("SignalFileOpen");}});

var StateRepoNewMenuCache_EnsureCacheAsync = Module.findExportByName("shell32.dll", "StateRepoNewMenuCache_EnsureCacheAsync")
Interceptor.attach(StateRepoNewMenuCache_EnsureCacheAsync, {onLeave: function (args) {send("StateRepoNewMenuCache_EnsureCacheAsync");}});

var StateRepoNewMenuCache_RebuildCacheAsync = Module.findExportByName("shell32.dll", "StateRepoNewMenuCache_RebuildCacheAsync")
Interceptor.attach(StateRepoNewMenuCache_RebuildCacheAsync, {onLeave: function (args) {send("StateRepoNewMenuCache_RebuildCacheAsync");}});

var StgMakeUniqueName = Module.findExportByName("shell32.dll", "StgMakeUniqueName")
Interceptor.attach(StgMakeUniqueName, {onLeave: function (args) {send("StgMakeUniqueName");}});

var StrChrA = Module.findExportByName("shell32.dll", "StrChrA")
Interceptor.attach(StrChrA, {onLeave: function (args) {send("StrChrA");}});

var StrChrIA = Module.findExportByName("shell32.dll", "StrChrIA")
Interceptor.attach(StrChrIA, {onLeave: function (args) {send("StrChrIA");}});

var StrChrIW = Module.findExportByName("shell32.dll", "StrChrIW")
Interceptor.attach(StrChrIW, {onLeave: function (args) {send("StrChrIW");}});

var StrChrW = Module.findExportByName("shell32.dll", "StrChrW")
Interceptor.attach(StrChrW, {onLeave: function (args) {send("StrChrW");}});

var StrCmpNA = Module.findExportByName("shell32.dll", "StrCmpNA")
Interceptor.attach(StrCmpNA, {onLeave: function (args) {send("StrCmpNA");}});

var StrCmpNIA = Module.findExportByName("shell32.dll", "StrCmpNIA")
Interceptor.attach(StrCmpNIA, {onLeave: function (args) {send("StrCmpNIA");}});

var StrCmpNIW = Module.findExportByName("shell32.dll", "StrCmpNIW")
Interceptor.attach(StrCmpNIW, {onLeave: function (args) {send("StrCmpNIW");}});

var StrCmpNW = Module.findExportByName("shell32.dll", "StrCmpNW")
Interceptor.attach(StrCmpNW, {onLeave: function (args) {send("StrCmpNW");}});

var StrNCmpA = Module.findExportByName("shell32.dll", "StrNCmpA")
Interceptor.attach(StrNCmpA, {onLeave: function (args) {send("StrNCmpA");}});

var StrNCmpIA = Module.findExportByName("shell32.dll", "StrNCmpIA")
Interceptor.attach(StrNCmpIA, {onLeave: function (args) {send("StrNCmpIA");}});

var StrNCmpIW = Module.findExportByName("shell32.dll", "StrNCmpIW")
Interceptor.attach(StrNCmpIW, {onLeave: function (args) {send("StrNCmpIW");}});

var StrNCmpW = Module.findExportByName("shell32.dll", "StrNCmpW")
Interceptor.attach(StrNCmpW, {onLeave: function (args) {send("StrNCmpW");}});

var StrRChrA = Module.findExportByName("shell32.dll", "StrRChrA")
Interceptor.attach(StrRChrA, {onLeave: function (args) {send("StrRChrA");}});

var StrRChrIA = Module.findExportByName("shell32.dll", "StrRChrIA")
Interceptor.attach(StrRChrIA, {onLeave: function (args) {send("StrRChrIA");}});

var StrRChrIW = Module.findExportByName("shell32.dll", "StrRChrIW")
Interceptor.attach(StrRChrIW, {onLeave: function (args) {send("StrRChrIW");}});

var StrRChrW = Module.findExportByName("shell32.dll", "StrRChrW")
Interceptor.attach(StrRChrW, {onLeave: function (args) {send("StrRChrW");}});

var StrRStrA = Module.findExportByName("shell32.dll", "StrRStrA")
Interceptor.attach(StrRStrA, {onLeave: function (args) {send("StrRStrA");}});

var StrRStrIA = Module.findExportByName("shell32.dll", "StrRStrIA")
Interceptor.attach(StrRStrIA, {onLeave: function (args) {send("StrRStrIA");}});

var StrRStrIW = Module.findExportByName("shell32.dll", "StrRStrIW")
Interceptor.attach(StrRStrIW, {onLeave: function (args) {send("StrRStrIW");}});

var StrRStrW = Module.findExportByName("shell32.dll", "StrRStrW")
Interceptor.attach(StrRStrW, {onLeave: function (args) {send("StrRStrW");}});

var StrStrA = Module.findExportByName("shell32.dll", "StrStrA")
Interceptor.attach(StrStrA, {onLeave: function (args) {send("StrStrA");}});

var StrStrIA = Module.findExportByName("shell32.dll", "StrStrIA")
Interceptor.attach(StrStrIA, {onLeave: function (args) {send("StrStrIA");}});

var StrStrIW = Module.findExportByName("shell32.dll", "StrStrIW")
Interceptor.attach(StrStrIW, {onLeave: function (args) {send("StrStrIW");}});

var StrStrW = Module.findExportByName("shell32.dll", "StrStrW")
Interceptor.attach(StrStrW, {onLeave: function (args) {send("StrStrW");}});

var UsersLibrariesFolderUI_CreateInstance = Module.findExportByName("shell32.dll", "UsersLibrariesFolderUI_CreateInstance")
Interceptor.attach(UsersLibrariesFolderUI_CreateInstance, {onLeave: function (args) {send("UsersLibrariesFolderUI_CreateInstance");}});

var WOWShellExecute = Module.findExportByName("shell32.dll", "WOWShellExecute")
Interceptor.attach(WOWShellExecute, {onLeave: function (args) {send("WOWShellExecute");}});

var WaitForExplorerRestartW = Module.findExportByName("shell32.dll", "WaitForExplorerRestartW")
Interceptor.attach(WaitForExplorerRestartW, {onLeave: function (args) {send("WaitForExplorerRestartW");}});

var Win32DeleteFile = Module.findExportByName("shell32.dll", "Win32DeleteFile")
Interceptor.attach(Win32DeleteFile, {onLeave: function (args) {send("Win32DeleteFile");}});

var WriteCabinetState = Module.findExportByName("shell32.dll", "WriteCabinetState")
Interceptor.attach(WriteCabinetState, {onLeave: function (args) {send("WriteCabinetState");}});

