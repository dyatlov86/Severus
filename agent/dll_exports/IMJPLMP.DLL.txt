var CJDictsCommentDictionary_CreateInstance = Module.findExportByName("IMJPLMP.DLL", "CJDictsCommentDictionary_CreateInstance")
Interceptor.attach(CJDictsCommentDictionary_CreateInstance, {onLeave: function (args) {send("CJDictsCommentDictionary_CreateInstance");}});

var CJDictsDataForDWORD_CreateInstance = Module.findExportByName("IMJPLMP.DLL", "CJDictsDataForDWORD_CreateInstance")
Interceptor.attach(CJDictsDataForDWORD_CreateInstance, {onLeave: function (args) {send("CJDictsDataForDWORD_CreateInstance");}});

var CJDictsDictionaryManifest_CreateInstance = Module.findExportByName("IMJPLMP.DLL", "CJDictsDictionaryManifest_CreateInstance")
Interceptor.attach(CJDictsDictionaryManifest_CreateInstance, {onLeave: function (args) {send("CJDictsDictionaryManifest_CreateInstance");}});

var CJDictsIndexerSatori_CreateInstance = Module.findExportByName("IMJPLMP.DLL", "CJDictsIndexerSatori_CreateInstance")
Interceptor.attach(CJDictsIndexerSatori_CreateInstance, {onLeave: function (args) {send("CJDictsIndexerSatori_CreateInstance");}});

var CJDictsSystemLexiconStoreDelayLoad__CreateInstance = Module.findExportByName("IMJPLMP.DLL", "CJDictsSystemLexiconStoreDelayLoad__CreateInstance")
Interceptor.attach(CJDictsSystemLexiconStoreDelayLoad__CreateInstance, {onLeave: function (args) {send("CJDictsSystemLexiconStoreDelayLoad__CreateInstance");}});

var CJDictsUserDictionary_CreateInstance = Module.findExportByName("IMJPLMP.DLL", "CJDictsUserDictionary_CreateInstance")
Interceptor.attach(CJDictsUserDictionary_CreateInstance, {onLeave: function (args) {send("CJDictsUserDictionary_CreateInstance");}});

var CJDictsUserDictionary_FillByDummyHeader = Module.findExportByName("IMJPLMP.DLL", "CJDictsUserDictionary_FillByDummyHeader")
Interceptor.attach(CJDictsUserDictionary_FillByDummyHeader, {onLeave: function (args) {send("CJDictsUserDictionary_FillByDummyHeader");}});

var DllCanUnloadNow = Module.findExportByName("IMJPLMP.DLL", "DllCanUnloadNow")
Interceptor.attach(DllCanUnloadNow, {onLeave: function (args) {send("DllCanUnloadNow");}});

var DllGetClassObject = Module.findExportByName("IMJPLMP.DLL", "DllGetClassObject")
Interceptor.attach(DllGetClassObject, {onLeave: function (args) {send("DllGetClassObject");}});

var DllRegisterServer = Module.findExportByName("IMJPLMP.DLL", "DllRegisterServer")
Interceptor.attach(DllRegisterServer, {onLeave: function (args) {send("DllRegisterServer");}});

var DllUnregisterServer = Module.findExportByName("IMJPLMP.DLL", "DllUnregisterServer")
Interceptor.attach(DllUnregisterServer, {onLeave: function (args) {send("DllUnregisterServer");}});

var GetSegmentedStr = Module.findExportByName("IMJPLMP.DLL", "GetSegmentedStr")
Interceptor.attach(GetSegmentedStr, {onLeave: function (args) {send("GetSegmentedStr");}});

var IMECFM_AddJpnWordInfoAndLmContextForWatsonReport = Module.findExportByName("IMJPLMP.DLL", "IMECFM_AddJpnWordInfoAndLmContextForWatsonReport")
Interceptor.attach(IMECFM_AddJpnWordInfoAndLmContextForWatsonReport, {onLeave: function (args) {send("IMECFM_AddJpnWordInfoAndLmContextForWatsonReport");}});

var InitGetSegmentedStr = Module.findExportByName("IMJPLMP.DLL", "InitGetSegmentedStr")
Interceptor.attach(InitGetSegmentedStr, {onLeave: function (args) {send("InitGetSegmentedStr");}});

var UnInitGetSegmentedStr = Module.findExportByName("IMJPLMP.DLL", "UnInitGetSegmentedStr")
Interceptor.attach(UnInitGetSegmentedStr, {onLeave: function (args) {send("UnInitGetSegmentedStr");}});

