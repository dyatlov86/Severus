var MapsPackageAddMapPackageAsync = Module.findExportByName("MosHostClient.dll", "MapsPackageAddMapPackageAsync")
Interceptor.attach(MapsPackageAddMapPackageAsync, {onLeave: function (args) {send("MapsPackageAddMapPackageAsync");}});

var MapsPackageClose = Module.findExportByName("MosHostClient.dll", "MapsPackageClose")
Interceptor.attach(MapsPackageClose, {onLeave: function (args) {send("MapsPackageClose");}});

var MapsPackageFindNearbyPackagesAsync = Module.findExportByName("MosHostClient.dll", "MapsPackageFindNearbyPackagesAsync")
Interceptor.attach(MapsPackageFindNearbyPackagesAsync, {onLeave: function (args) {send("MapsPackageFindNearbyPackagesAsync");}});

var MapsPackageFree = Module.findExportByName("MosHostClient.dll", "MapsPackageFree")
Interceptor.attach(MapsPackageFree, {onLeave: function (args) {send("MapsPackageFree");}});

var MapsPackageGetPackages = Module.findExportByName("MosHostClient.dll", "MapsPackageGetPackages")
Interceptor.attach(MapsPackageGetPackages, {onLeave: function (args) {send("MapsPackageGetPackages");}});

var MapsPackageOpen = Module.findExportByName("MosHostClient.dll", "MapsPackageOpen")
Interceptor.attach(MapsPackageOpen, {onLeave: function (args) {send("MapsPackageOpen");}});

var MapsStorageClose = Module.findExportByName("MosHostClient.dll", "MapsStorageClose")
Interceptor.attach(MapsStorageClose, {onLeave: function (args) {send("MapsStorageClose");}});

var MapsStorageFree = Module.findExportByName("MosHostClient.dll", "MapsStorageFree")
Interceptor.attach(MapsStorageFree, {onLeave: function (args) {send("MapsStorageFree");}});

var MapsStorageGetCurrentLocation = Module.findExportByName("MosHostClient.dll", "MapsStorageGetCurrentLocation")
Interceptor.attach(MapsStorageGetCurrentLocation, {onLeave: function (args) {send("MapsStorageGetCurrentLocation");}});

var MapsStorageGetDataDirectory = Module.findExportByName("MosHostClient.dll", "MapsStorageGetDataDirectory")
Interceptor.attach(MapsStorageGetDataDirectory, {onLeave: function (args) {send("MapsStorageGetDataDirectory");}});

var MapsStorageGetLocations = Module.findExportByName("MosHostClient.dll", "MapsStorageGetLocations")
Interceptor.attach(MapsStorageGetLocations, {onLeave: function (args) {send("MapsStorageGetLocations");}});

var MapsStorageGetMigrationState = Module.findExportByName("MosHostClient.dll", "MapsStorageGetMigrationState")
Interceptor.attach(MapsStorageGetMigrationState, {onLeave: function (args) {send("MapsStorageGetMigrationState");}});

var MapsStorageOpen = Module.findExportByName("MosHostClient.dll", "MapsStorageOpen")
Interceptor.attach(MapsStorageOpen, {onLeave: function (args) {send("MapsStorageOpen");}});

var MapsStorageQueueSwitchToDefaultExternalStorage = Module.findExportByName("MosHostClient.dll", "MapsStorageQueueSwitchToDefaultExternalStorage")
Interceptor.attach(MapsStorageQueueSwitchToDefaultExternalStorage, {onLeave: function (args) {send("MapsStorageQueueSwitchToDefaultExternalStorage");}});

var MapsStorageUseDefaultExternalStorage = Module.findExportByName("MosHostClient.dll", "MapsStorageUseDefaultExternalStorage")
Interceptor.attach(MapsStorageUseDefaultExternalStorage, {onLeave: function (args) {send("MapsStorageUseDefaultExternalStorage");}});

var MapsStorageValidateLocationAsync = Module.findExportByName("MosHostClient.dll", "MapsStorageValidateLocationAsync")
Interceptor.attach(MapsStorageValidateLocationAsync, {onLeave: function (args) {send("MapsStorageValidateLocationAsync");}});

var MosCacheStateGetSizes = Module.findExportByName("MosHostClient.dll", "MosCacheStateGetSizes")
Interceptor.attach(MosCacheStateGetSizes, {onLeave: function (args) {send("MosCacheStateGetSizes");}});

var MosCacheStateSetMaxSize = Module.findExportByName("MosHostClient.dll", "MosCacheStateSetMaxSize")
Interceptor.attach(MosCacheStateSetMaxSize, {onLeave: function (args) {send("MosCacheStateSetMaxSize");}});

var MosCacheStateSetSlotSize = Module.findExportByName("MosHostClient.dll", "MosCacheStateSetSlotSize")
Interceptor.attach(MosCacheStateSetSlotSize, {onLeave: function (args) {send("MosCacheStateSetSlotSize");}});

var MosCacheStateSnapshot = Module.findExportByName("MosHostClient.dll", "MosCacheStateSnapshot")
Interceptor.attach(MosCacheStateSnapshot, {onLeave: function (args) {send("MosCacheStateSnapshot");}});

var MosCacheStateUnuseSlot = Module.findExportByName("MosHostClient.dll", "MosCacheStateUnuseSlot")
Interceptor.attach(MosCacheStateUnuseSlot, {onLeave: function (args) {send("MosCacheStateUnuseSlot");}});

var MosCacheStateUseSlot = Module.findExportByName("MosHostClient.dll", "MosCacheStateUseSlot")
Interceptor.attach(MosCacheStateUseSlot, {onLeave: function (args) {send("MosCacheStateUseSlot");}});

var MosDeleteDataAsyncOperation = Module.findExportByName("MosHostClient.dll", "MosDeleteDataAsyncOperation")
Interceptor.attach(MosDeleteDataAsyncOperation, {onLeave: function (args) {send("MosDeleteDataAsyncOperation");}});

var MosGetBrowseCacheSizeInMBytes = Module.findExportByName("MosHostClient.dll", "MosGetBrowseCacheSizeInMBytes")
Interceptor.attach(MosGetBrowseCacheSizeInMBytes, {onLeave: function (args) {send("MosGetBrowseCacheSizeInMBytes");}});

var MosGetCopyrightString = Module.findExportByName("MosHostClient.dll", "MosGetCopyrightString")
Interceptor.attach(MosGetCopyrightString, {onLeave: function (args) {send("MosGetCopyrightString");}});

var MosGetDataAsync = Module.findExportByName("MosHostClient.dll", "MosGetDataAsync")
Interceptor.attach(MosGetDataAsync, {onLeave: function (args) {send("MosGetDataAsync");}});

var MosGetDataAsyncOperation = Module.findExportByName("MosHostClient.dll", "MosGetDataAsyncOperation")
Interceptor.attach(MosGetDataAsyncOperation, {onLeave: function (args) {send("MosGetDataAsyncOperation");}});

var MosGetDataDirectory = Module.findExportByName("MosHostClient.dll", "MosGetDataDirectory")
Interceptor.attach(MosGetDataDirectory, {onLeave: function (args) {send("MosGetDataDirectory");}});

var MosGetResourceDirectory = Module.findExportByName("MosHostClient.dll", "MosGetResourceDirectory")
Interceptor.attach(MosGetResourceDirectory, {onLeave: function (args) {send("MosGetResourceDirectory");}});

var MosHostClose = Module.findExportByName("MosHostClient.dll", "MosHostClose")
Interceptor.attach(MosHostClose, {onLeave: function (args) {send("MosHostClose");}});

var MosHostFree = Module.findExportByName("MosHostClient.dll", "MosHostFree")
Interceptor.attach(MosHostFree, {onLeave: function (args) {send("MosHostFree");}});

var MosHostOpen = Module.findExportByName("MosHostClient.dll", "MosHostOpen")
Interceptor.attach(MosHostOpen, {onLeave: function (args) {send("MosHostOpen");}});

var MosReportCacheMiss = Module.findExportByName("MosHostClient.dll", "MosReportCacheMiss")
Interceptor.attach(MosReportCacheMiss, {onLeave: function (args) {send("MosReportCacheMiss");}});

var MosRequestResourceLock = Module.findExportByName("MosHostClient.dll", "MosRequestResourceLock")
Interceptor.attach(MosRequestResourceLock, {onLeave: function (args) {send("MosRequestResourceLock");}});

var MosRequestResourceUnlock = Module.findExportByName("MosHostClient.dll", "MosRequestResourceUnlock")
Interceptor.attach(MosRequestResourceUnlock, {onLeave: function (args) {send("MosRequestResourceUnlock");}});

var OdmlAddMapPackages = Module.findExportByName("MosHostClient.dll", "OdmlAddMapPackages")
Interceptor.attach(OdmlAddMapPackages, {onLeave: function (args) {send("OdmlAddMapPackages");}});

var OdmlCancelMapDataMigration = Module.findExportByName("MosHostClient.dll", "OdmlCancelMapDataMigration")
Interceptor.attach(OdmlCancelMapDataMigration, {onLeave: function (args) {send("OdmlCancelMapDataMigration");}});

var OdmlCancelMapPackage = Module.findExportByName("MosHostClient.dll", "OdmlCancelMapPackage")
Interceptor.attach(OdmlCancelMapPackage, {onLeave: function (args) {send("OdmlCancelMapPackage");}});

var OdmlClose = Module.findExportByName("MosHostClient.dll", "OdmlClose")
Interceptor.attach(OdmlClose, {onLeave: function (args) {send("OdmlClose");}});

var OdmlDeleteAllMaps = Module.findExportByName("MosHostClient.dll", "OdmlDeleteAllMaps")
Interceptor.attach(OdmlDeleteAllMaps, {onLeave: function (args) {send("OdmlDeleteAllMaps");}});

var OdmlFindNearbyPackagesAsync = Module.findExportByName("MosHostClient.dll", "OdmlFindNearbyPackagesAsync")
Interceptor.attach(OdmlFindNearbyPackagesAsync, {onLeave: function (args) {send("OdmlFindNearbyPackagesAsync");}});

var OdmlFree = Module.findExportByName("MosHostClient.dll", "OdmlFree")
Interceptor.attach(OdmlFree, {onLeave: function (args) {send("OdmlFree");}});

var OdmlGetAutoUpdateEnabled = Module.findExportByName("MosHostClient.dll", "OdmlGetAutoUpdateEnabled")
Interceptor.attach(OdmlGetAutoUpdateEnabled, {onLeave: function (args) {send("OdmlGetAutoUpdateEnabled");}});

var OdmlGetAvailablePackages = Module.findExportByName("MosHostClient.dll", "OdmlGetAvailablePackages")
Interceptor.attach(OdmlGetAvailablePackages, {onLeave: function (args) {send("OdmlGetAvailablePackages");}});

var OdmlGetCopyrightString = Module.findExportByName("MosHostClient.dll", "OdmlGetCopyrightString")
Interceptor.attach(OdmlGetCopyrightString, {onLeave: function (args) {send("OdmlGetCopyrightString");}});

var OdmlGetIsStorageStateValid = Module.findExportByName("MosHostClient.dll", "OdmlGetIsStorageStateValid")
Interceptor.attach(OdmlGetIsStorageStateValid, {onLeave: function (args) {send("OdmlGetIsStorageStateValid");}});

var OdmlGetShouldUseWlanString = Module.findExportByName("MosHostClient.dll", "OdmlGetShouldUseWlanString")
Interceptor.attach(OdmlGetShouldUseWlanString, {onLeave: function (args) {send("OdmlGetShouldUseWlanString");}});

var OdmlGetUpdateOnlyOnWifi = Module.findExportByName("MosHostClient.dll", "OdmlGetUpdateOnlyOnWifi")
Interceptor.attach(OdmlGetUpdateOnlyOnWifi, {onLeave: function (args) {send("OdmlGetUpdateOnlyOnWifi");}});

var OdmlGetUserPackages = Module.findExportByName("MosHostClient.dll", "OdmlGetUserPackages")
Interceptor.attach(OdmlGetUserPackages, {onLeave: function (args) {send("OdmlGetUserPackages");}});

var OdmlOpen = Module.findExportByName("MosHostClient.dll", "OdmlOpen")
Interceptor.attach(OdmlOpen, {onLeave: function (args) {send("OdmlOpen");}});

var OdmlRemoveMapPackages = Module.findExportByName("MosHostClient.dll", "OdmlRemoveMapPackages")
Interceptor.attach(OdmlRemoveMapPackages, {onLeave: function (args) {send("OdmlRemoveMapPackages");}});

var OdmlSetAutoUpdateEnabled = Module.findExportByName("MosHostClient.dll", "OdmlSetAutoUpdateEnabled")
Interceptor.attach(OdmlSetAutoUpdateEnabled, {onLeave: function (args) {send("OdmlSetAutoUpdateEnabled");}});

var OdmlSetUpdateOnlyOnWifi = Module.findExportByName("MosHostClient.dll", "OdmlSetUpdateOnlyOnWifi")
Interceptor.attach(OdmlSetUpdateOnlyOnWifi, {onLeave: function (args) {send("OdmlSetUpdateOnlyOnWifi");}});

var OdmlStartCheckForUpdates = Module.findExportByName("MosHostClient.dll", "OdmlStartCheckForUpdates")
Interceptor.attach(OdmlStartCheckForUpdates, {onLeave: function (args) {send("OdmlStartCheckForUpdates");}});

var OdmlStartInstallUpdate = Module.findExportByName("MosHostClient.dll", "OdmlStartInstallUpdate")
Interceptor.attach(OdmlStartInstallUpdate, {onLeave: function (args) {send("OdmlStartInstallUpdate");}});

var OdmlStartMapDataMigration = Module.findExportByName("MosHostClient.dll", "OdmlStartMapDataMigration")
Interceptor.attach(OdmlStartMapDataMigration, {onLeave: function (args) {send("OdmlStartMapDataMigration");}});

