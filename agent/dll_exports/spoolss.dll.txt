var AbortPrinter = Module.findExportByName("spoolss.dll", "AbortPrinter")
Interceptor.attach(AbortPrinter, {onLeave: function (args) {send("AbortPrinter");}});

var AddFormW = Module.findExportByName("spoolss.dll", "AddFormW")
Interceptor.attach(AddFormW, {onLeave: function (args) {send("AddFormW");}});

var AddJobW = Module.findExportByName("spoolss.dll", "AddJobW")
Interceptor.attach(AddJobW, {onLeave: function (args) {send("AddJobW");}});

var AddMonitorW = Module.findExportByName("spoolss.dll", "AddMonitorW")
Interceptor.attach(AddMonitorW, {onLeave: function (args) {send("AddMonitorW");}});

var AddPerMachineConnectionW = Module.findExportByName("spoolss.dll", "AddPerMachineConnectionW")
Interceptor.attach(AddPerMachineConnectionW, {onLeave: function (args) {send("AddPerMachineConnectionW");}});

var AddPortExW = Module.findExportByName("spoolss.dll", "AddPortExW")
Interceptor.attach(AddPortExW, {onLeave: function (args) {send("AddPortExW");}});

var AddPortW = Module.findExportByName("spoolss.dll", "AddPortW")
Interceptor.attach(AddPortW, {onLeave: function (args) {send("AddPortW");}});

var AddPrintDeviceObject = Module.findExportByName("spoolss.dll", "AddPrintDeviceObject")
Interceptor.attach(AddPrintDeviceObject, {onLeave: function (args) {send("AddPrintDeviceObject");}});

var AddPrintProcessorW = Module.findExportByName("spoolss.dll", "AddPrintProcessorW")
Interceptor.attach(AddPrintProcessorW, {onLeave: function (args) {send("AddPrintProcessorW");}});

var AddPrintProvidorW = Module.findExportByName("spoolss.dll", "AddPrintProvidorW")
Interceptor.attach(AddPrintProvidorW, {onLeave: function (args) {send("AddPrintProvidorW");}});

var AddPrinterConnectionW = Module.findExportByName("spoolss.dll", "AddPrinterConnectionW")
Interceptor.attach(AddPrinterConnectionW, {onLeave: function (args) {send("AddPrinterConnectionW");}});

var AddPrinterDriverExW = Module.findExportByName("spoolss.dll", "AddPrinterDriverExW")
Interceptor.attach(AddPrinterDriverExW, {onLeave: function (args) {send("AddPrinterDriverExW");}});

var AddPrinterDriverW = Module.findExportByName("spoolss.dll", "AddPrinterDriverW")
Interceptor.attach(AddPrinterDriverW, {onLeave: function (args) {send("AddPrinterDriverW");}});

var AddPrinterExW = Module.findExportByName("spoolss.dll", "AddPrinterExW")
Interceptor.attach(AddPrinterExW, {onLeave: function (args) {send("AddPrinterExW");}});

var AddPrinterW = Module.findExportByName("spoolss.dll", "AddPrinterW")
Interceptor.attach(AddPrinterW, {onLeave: function (args) {send("AddPrinterW");}});

var AdjustPointers = Module.findExportByName("spoolss.dll", "AdjustPointers")
Interceptor.attach(AdjustPointers, {onLeave: function (args) {send("AdjustPointers");}});

var AdjustPointersInStructuresArray = Module.findExportByName("spoolss.dll", "AdjustPointersInStructuresArray")
Interceptor.attach(AdjustPointersInStructuresArray, {onLeave: function (args) {send("AdjustPointersInStructuresArray");}});

var AlignKMPtr = Module.findExportByName("spoolss.dll", "AlignKMPtr")
Interceptor.attach(AlignKMPtr, {onLeave: function (args) {send("AlignKMPtr");}});

var AlignRpcPtr = Module.findExportByName("spoolss.dll", "AlignRpcPtr")
Interceptor.attach(AlignRpcPtr, {onLeave: function (args) {send("AlignRpcPtr");}});

var AllocSplStr = Module.findExportByName("spoolss.dll", "AllocSplStr")
Interceptor.attach(AllocSplStr, {onLeave: function (args) {send("AllocSplStr");}});

var AllowRemoteCalls = Module.findExportByName("spoolss.dll", "AllowRemoteCalls")
Interceptor.attach(AllowRemoteCalls, {onLeave: function (args) {send("AllowRemoteCalls");}});

var AppendPrinterNotifyInfoData = Module.findExportByName("spoolss.dll", "AppendPrinterNotifyInfoData")
Interceptor.attach(AppendPrinterNotifyInfoData, {onLeave: function (args) {send("AppendPrinterNotifyInfoData");}});

var BuildOtherNamesFromMachineName = Module.findExportByName("spoolss.dll", "BuildOtherNamesFromMachineName")
Interceptor.attach(BuildOtherNamesFromMachineName, {onLeave: function (args) {send("BuildOtherNamesFromMachineName");}});

var CacheAddName = Module.findExportByName("spoolss.dll", "CacheAddName")
Interceptor.attach(CacheAddName, {onLeave: function (args) {send("CacheAddName");}});

var CacheCreateAndAddNode = Module.findExportByName("spoolss.dll", "CacheCreateAndAddNode")
Interceptor.attach(CacheCreateAndAddNode, {onLeave: function (args) {send("CacheCreateAndAddNode");}});

var CacheCreateAndAddNodeWithIPAddresses = Module.findExportByName("spoolss.dll", "CacheCreateAndAddNodeWithIPAddresses")
Interceptor.attach(CacheCreateAndAddNodeWithIPAddresses, {onLeave: function (args) {send("CacheCreateAndAddNodeWithIPAddresses");}});

var CacheDeleteNode = Module.findExportByName("spoolss.dll", "CacheDeleteNode")
Interceptor.attach(CacheDeleteNode, {onLeave: function (args) {send("CacheDeleteNode");}});

var CacheIsNameCluster = Module.findExportByName("spoolss.dll", "CacheIsNameCluster")
Interceptor.attach(CacheIsNameCluster, {onLeave: function (args) {send("CacheIsNameCluster");}});

var CacheIsNameInNodeList = Module.findExportByName("spoolss.dll", "CacheIsNameInNodeList")
Interceptor.attach(CacheIsNameInNodeList, {onLeave: function (args) {send("CacheIsNameInNodeList");}});

var CallDrvDevModeConversion = Module.findExportByName("spoolss.dll", "CallDrvDevModeConversion")
Interceptor.attach(CallDrvDevModeConversion, {onLeave: function (args) {send("CallDrvDevModeConversion");}});

var CallRouterFindFirstPrinterChangeNotification = Module.findExportByName("spoolss.dll", "CallRouterFindFirstPrinterChangeNotification")
Interceptor.attach(CallRouterFindFirstPrinterChangeNotification, {onLeave: function (args) {send("CallRouterFindFirstPrinterChangeNotification");}});

var CheckLocalCall = Module.findExportByName("spoolss.dll", "CheckLocalCall")
Interceptor.attach(CheckLocalCall, {onLeave: function (args) {send("CheckLocalCall");}});

var ClosePrinter = Module.findExportByName("spoolss.dll", "ClosePrinter")
Interceptor.attach(ClosePrinter, {onLeave: function (args) {send("ClosePrinter");}});

var ConfigurePortW = Module.findExportByName("spoolss.dll", "ConfigurePortW")
Interceptor.attach(ConfigurePortW, {onLeave: function (args) {send("ConfigurePortW");}});

var CreatePrinterIC = Module.findExportByName("spoolss.dll", "CreatePrinterIC")
Interceptor.attach(CreatePrinterIC, {onLeave: function (args) {send("CreatePrinterIC");}});

var DeleteFormW = Module.findExportByName("spoolss.dll", "DeleteFormW")
Interceptor.attach(DeleteFormW, {onLeave: function (args) {send("DeleteFormW");}});

var DeleteJobNamedProperty = Module.findExportByName("spoolss.dll", "DeleteJobNamedProperty")
Interceptor.attach(DeleteJobNamedProperty, {onLeave: function (args) {send("DeleteJobNamedProperty");}});

var DeleteMonitorW = Module.findExportByName("spoolss.dll", "DeleteMonitorW")
Interceptor.attach(DeleteMonitorW, {onLeave: function (args) {send("DeleteMonitorW");}});

var DeletePerMachineConnectionW = Module.findExportByName("spoolss.dll", "DeletePerMachineConnectionW")
Interceptor.attach(DeletePerMachineConnectionW, {onLeave: function (args) {send("DeletePerMachineConnectionW");}});

var DeletePortW = Module.findExportByName("spoolss.dll", "DeletePortW")
Interceptor.attach(DeletePortW, {onLeave: function (args) {send("DeletePortW");}});

var DeletePrintProcessorW = Module.findExportByName("spoolss.dll", "DeletePrintProcessorW")
Interceptor.attach(DeletePrintProcessorW, {onLeave: function (args) {send("DeletePrintProcessorW");}});

var DeletePrintProvidorW = Module.findExportByName("spoolss.dll", "DeletePrintProvidorW")
Interceptor.attach(DeletePrintProvidorW, {onLeave: function (args) {send("DeletePrintProvidorW");}});

var DeletePrinter = Module.findExportByName("spoolss.dll", "DeletePrinter")
Interceptor.attach(DeletePrinter, {onLeave: function (args) {send("DeletePrinter");}});

var DeletePrinterConnectionW = Module.findExportByName("spoolss.dll", "DeletePrinterConnectionW")
Interceptor.attach(DeletePrinterConnectionW, {onLeave: function (args) {send("DeletePrinterConnectionW");}});

var DeletePrinterDataExW = Module.findExportByName("spoolss.dll", "DeletePrinterDataExW")
Interceptor.attach(DeletePrinterDataExW, {onLeave: function (args) {send("DeletePrinterDataExW");}});

var DeletePrinterDataW = Module.findExportByName("spoolss.dll", "DeletePrinterDataW")
Interceptor.attach(DeletePrinterDataW, {onLeave: function (args) {send("DeletePrinterDataW");}});

var DeletePrinterDriverExW = Module.findExportByName("spoolss.dll", "DeletePrinterDriverExW")
Interceptor.attach(DeletePrinterDriverExW, {onLeave: function (args) {send("DeletePrinterDriverExW");}});

var DeletePrinterDriverW = Module.findExportByName("spoolss.dll", "DeletePrinterDriverW")
Interceptor.attach(DeletePrinterDriverW, {onLeave: function (args) {send("DeletePrinterDriverW");}});

var DeletePrinterIC = Module.findExportByName("spoolss.dll", "DeletePrinterIC")
Interceptor.attach(DeletePrinterIC, {onLeave: function (args) {send("DeletePrinterIC");}});

var DeletePrinterKeyW = Module.findExportByName("spoolss.dll", "DeletePrinterKeyW")
Interceptor.attach(DeletePrinterKeyW, {onLeave: function (args) {send("DeletePrinterKeyW");}});

var DllAllocSplMem = Module.findExportByName("spoolss.dll", "DllAllocSplMem")
Interceptor.attach(DllAllocSplMem, {onLeave: function (args) {send("DllAllocSplMem");}});

var DllAllocSplStr = Module.findExportByName("spoolss.dll", "DllAllocSplStr")
Interceptor.attach(DllAllocSplStr, {onLeave: function (args) {send("DllAllocSplStr");}});

var DllFreeSplMem = Module.findExportByName("spoolss.dll", "DllFreeSplMem")
Interceptor.attach(DllFreeSplMem, {onLeave: function (args) {send("DllFreeSplMem");}});

var DllFreeSplStr = Module.findExportByName("spoolss.dll", "DllFreeSplStr")
Interceptor.attach(DllFreeSplStr, {onLeave: function (args) {send("DllFreeSplStr");}});

var DllMain = Module.findExportByName("spoolss.dll", "DllMain")
Interceptor.attach(DllMain, {onLeave: function (args) {send("DllMain");}});

var DllReallocSplMem = Module.findExportByName("spoolss.dll", "DllReallocSplMem")
Interceptor.attach(DllReallocSplMem, {onLeave: function (args) {send("DllReallocSplMem");}});

var DllReallocSplStr = Module.findExportByName("spoolss.dll", "DllReallocSplStr")
Interceptor.attach(DllReallocSplStr, {onLeave: function (args) {send("DllReallocSplStr");}});

var EndDocPrinter = Module.findExportByName("spoolss.dll", "EndDocPrinter")
Interceptor.attach(EndDocPrinter, {onLeave: function (args) {send("EndDocPrinter");}});

var EndPagePrinter = Module.findExportByName("spoolss.dll", "EndPagePrinter")
Interceptor.attach(EndPagePrinter, {onLeave: function (args) {send("EndPagePrinter");}});

var EnumFormsW = Module.findExportByName("spoolss.dll", "EnumFormsW")
Interceptor.attach(EnumFormsW, {onLeave: function (args) {send("EnumFormsW");}});

var EnumJobsW = Module.findExportByName("spoolss.dll", "EnumJobsW")
Interceptor.attach(EnumJobsW, {onLeave: function (args) {send("EnumJobsW");}});

var EnumMonitorsW = Module.findExportByName("spoolss.dll", "EnumMonitorsW")
Interceptor.attach(EnumMonitorsW, {onLeave: function (args) {send("EnumMonitorsW");}});

var EnumPerMachineConnectionsW = Module.findExportByName("spoolss.dll", "EnumPerMachineConnectionsW")
Interceptor.attach(EnumPerMachineConnectionsW, {onLeave: function (args) {send("EnumPerMachineConnectionsW");}});

var EnumPortsW = Module.findExportByName("spoolss.dll", "EnumPortsW")
Interceptor.attach(EnumPortsW, {onLeave: function (args) {send("EnumPortsW");}});

var EnumPrintProcessorDatatypesW = Module.findExportByName("spoolss.dll", "EnumPrintProcessorDatatypesW")
Interceptor.attach(EnumPrintProcessorDatatypesW, {onLeave: function (args) {send("EnumPrintProcessorDatatypesW");}});

var EnumPrintProcessorsW = Module.findExportByName("spoolss.dll", "EnumPrintProcessorsW")
Interceptor.attach(EnumPrintProcessorsW, {onLeave: function (args) {send("EnumPrintProcessorsW");}});

var EnumPrinterDataExW = Module.findExportByName("spoolss.dll", "EnumPrinterDataExW")
Interceptor.attach(EnumPrinterDataExW, {onLeave: function (args) {send("EnumPrinterDataExW");}});

var EnumPrinterDataW = Module.findExportByName("spoolss.dll", "EnumPrinterDataW")
Interceptor.attach(EnumPrinterDataW, {onLeave: function (args) {send("EnumPrinterDataW");}});

var EnumPrinterDriversW = Module.findExportByName("spoolss.dll", "EnumPrinterDriversW")
Interceptor.attach(EnumPrinterDriversW, {onLeave: function (args) {send("EnumPrinterDriversW");}});

var EnumPrinterKeyW = Module.findExportByName("spoolss.dll", "EnumPrinterKeyW")
Interceptor.attach(EnumPrinterKeyW, {onLeave: function (args) {send("EnumPrinterKeyW");}});

var EnumPrintersW = Module.findExportByName("spoolss.dll", "EnumPrintersW")
Interceptor.attach(EnumPrintersW, {onLeave: function (args) {send("EnumPrintersW");}});

var FindClosePrinterChangeNotification = Module.findExportByName("spoolss.dll", "FindClosePrinterChangeNotification")
Interceptor.attach(FindClosePrinterChangeNotification, {onLeave: function (args) {send("FindClosePrinterChangeNotification");}});

var FlushPrinter = Module.findExportByName("spoolss.dll", "FlushPrinter")
Interceptor.attach(FlushPrinter, {onLeave: function (args) {send("FlushPrinter");}});

var FormatPrinterForRegistryKey = Module.findExportByName("spoolss.dll", "FormatPrinterForRegistryKey")
Interceptor.attach(FormatPrinterForRegistryKey, {onLeave: function (args) {send("FormatPrinterForRegistryKey");}});

var FormatRegistryKeyForPrinter = Module.findExportByName("spoolss.dll", "FormatRegistryKeyForPrinter")
Interceptor.attach(FormatRegistryKeyForPrinter, {onLeave: function (args) {send("FormatRegistryKeyForPrinter");}});

var FreeOtherNames = Module.findExportByName("spoolss.dll", "FreeOtherNames")
Interceptor.attach(FreeOtherNames, {onLeave: function (args) {send("FreeOtherNames");}});

var FreePrintPropertyValue = Module.findExportByName("spoolss.dll", "FreePrintPropertyValue")
Interceptor.attach(FreePrintPropertyValue, {onLeave: function (args) {send("FreePrintPropertyValue");}});

var GetFormW = Module.findExportByName("spoolss.dll", "GetFormW")
Interceptor.attach(GetFormW, {onLeave: function (args) {send("GetFormW");}});

var GetJobAttributes = Module.findExportByName("spoolss.dll", "GetJobAttributes")
Interceptor.attach(GetJobAttributes, {onLeave: function (args) {send("GetJobAttributes");}});

var GetJobAttributesEx = Module.findExportByName("spoolss.dll", "GetJobAttributesEx")
Interceptor.attach(GetJobAttributesEx, {onLeave: function (args) {send("GetJobAttributesEx");}});

var GetJobNamedPropertyValue = Module.findExportByName("spoolss.dll", "GetJobNamedPropertyValue")
Interceptor.attach(GetJobNamedPropertyValue, {onLeave: function (args) {send("GetJobNamedPropertyValue");}});

var GetJobW = Module.findExportByName("spoolss.dll", "GetJobW")
Interceptor.attach(GetJobW, {onLeave: function (args) {send("GetJobW");}});

var GetNetworkId = Module.findExportByName("spoolss.dll", "GetNetworkId")
Interceptor.attach(GetNetworkId, {onLeave: function (args) {send("GetNetworkId");}});

var GetPrintProcessorDirectoryW = Module.findExportByName("spoolss.dll", "GetPrintProcessorDirectoryW")
Interceptor.attach(GetPrintProcessorDirectoryW, {onLeave: function (args) {send("GetPrintProcessorDirectoryW");}});

var GetPrinterDataExW = Module.findExportByName("spoolss.dll", "GetPrinterDataExW")
Interceptor.attach(GetPrinterDataExW, {onLeave: function (args) {send("GetPrinterDataExW");}});

var GetPrinterDataW = Module.findExportByName("spoolss.dll", "GetPrinterDataW")
Interceptor.attach(GetPrinterDataW, {onLeave: function (args) {send("GetPrinterDataW");}});

var GetPrinterDriverDirectoryW = Module.findExportByName("spoolss.dll", "GetPrinterDriverDirectoryW")
Interceptor.attach(GetPrinterDriverDirectoryW, {onLeave: function (args) {send("GetPrinterDriverDirectoryW");}});

var GetPrinterDriverExW = Module.findExportByName("spoolss.dll", "GetPrinterDriverExW")
Interceptor.attach(GetPrinterDriverExW, {onLeave: function (args) {send("GetPrinterDriverExW");}});

var GetPrinterDriverW = Module.findExportByName("spoolss.dll", "GetPrinterDriverW")
Interceptor.attach(GetPrinterDriverW, {onLeave: function (args) {send("GetPrinterDriverW");}});

var GetPrinterW = Module.findExportByName("spoolss.dll", "GetPrinterW")
Interceptor.attach(GetPrinterW, {onLeave: function (args) {send("GetPrinterW");}});

var GetServerPolicy = Module.findExportByName("spoolss.dll", "GetServerPolicy")
Interceptor.attach(GetServerPolicy, {onLeave: function (args) {send("GetServerPolicy");}});

var GetShrinkedSize = Module.findExportByName("spoolss.dll", "GetShrinkedSize")
Interceptor.attach(GetShrinkedSize, {onLeave: function (args) {send("GetShrinkedSize");}});

var GetSpoolerTlsIndexes = Module.findExportByName("spoolss.dll", "GetSpoolerTlsIndexes")
Interceptor.attach(GetSpoolerTlsIndexes, {onLeave: function (args) {send("GetSpoolerTlsIndexes");}});

var ImpersonatePrinterClient = Module.findExportByName("spoolss.dll", "ImpersonatePrinterClient")
Interceptor.attach(ImpersonatePrinterClient, {onLeave: function (args) {send("ImpersonatePrinterClient");}});

var InitializeRouter = Module.findExportByName("spoolss.dll", "InitializeRouter")
Interceptor.attach(InitializeRouter, {onLeave: function (args) {send("InitializeRouter");}});

var IsNameTheLocalMachineOrAClusterSpooler = Module.findExportByName("spoolss.dll", "IsNameTheLocalMachineOrAClusterSpooler")
Interceptor.attach(IsNameTheLocalMachineOrAClusterSpooler, {onLeave: function (args) {send("IsNameTheLocalMachineOrAClusterSpooler");}});

var IsNamedPipeRpcCall = Module.findExportByName("spoolss.dll", "IsNamedPipeRpcCall")
Interceptor.attach(IsNamedPipeRpcCall, {onLeave: function (args) {send("IsNamedPipeRpcCall");}});

var MIDL_user_allocate1 = Module.findExportByName("spoolss.dll", "MIDL_user_allocate1")
Interceptor.attach(MIDL_user_allocate1, {onLeave: function (args) {send("MIDL_user_allocate1");}});

var MIDL_user_free1 = Module.findExportByName("spoolss.dll", "MIDL_user_free1")
Interceptor.attach(MIDL_user_free1, {onLeave: function (args) {send("MIDL_user_free1");}});

var MakeOffset = Module.findExportByName("spoolss.dll", "MakeOffset")
Interceptor.attach(MakeOffset, {onLeave: function (args) {send("MakeOffset");}});

var MakePTR = Module.findExportByName("spoolss.dll", "MakePTR")
Interceptor.attach(MakePTR, {onLeave: function (args) {send("MakePTR");}});

var MarshallDownStructure = Module.findExportByName("spoolss.dll", "MarshallDownStructure")
Interceptor.attach(MarshallDownStructure, {onLeave: function (args) {send("MarshallDownStructure");}});

var MarshallDownStructuresArray = Module.findExportByName("spoolss.dll", "MarshallDownStructuresArray")
Interceptor.attach(MarshallDownStructuresArray, {onLeave: function (args) {send("MarshallDownStructuresArray");}});

var MarshallUpStructure = Module.findExportByName("spoolss.dll", "MarshallUpStructure")
Interceptor.attach(MarshallUpStructure, {onLeave: function (args) {send("MarshallUpStructure");}});

var MarshallUpStructuresArray = Module.findExportByName("spoolss.dll", "MarshallUpStructuresArray")
Interceptor.attach(MarshallUpStructuresArray, {onLeave: function (args) {send("MarshallUpStructuresArray");}});

var OldGetPrinterDriverW = Module.findExportByName("spoolss.dll", "OldGetPrinterDriverW")
Interceptor.attach(OldGetPrinterDriverW, {onLeave: function (args) {send("OldGetPrinterDriverW");}});

var OpenPrinter2W = Module.findExportByName("spoolss.dll", "OpenPrinter2W")
Interceptor.attach(OpenPrinter2W, {onLeave: function (args) {send("OpenPrinter2W");}});

var OpenPrinterExW = Module.findExportByName("spoolss.dll", "OpenPrinterExW")
Interceptor.attach(OpenPrinterExW, {onLeave: function (args) {send("OpenPrinterExW");}});

var OpenPrinterPort2W = Module.findExportByName("spoolss.dll", "OpenPrinterPort2W")
Interceptor.attach(OpenPrinterPort2W, {onLeave: function (args) {send("OpenPrinterPort2W");}});

var OpenPrinterPortWithClientInfo = Module.findExportByName("spoolss.dll", "OpenPrinterPortWithClientInfo")
Interceptor.attach(OpenPrinterPortWithClientInfo, {onLeave: function (args) {send("OpenPrinterPortWithClientInfo");}});

var OpenPrinterW = Module.findExportByName("spoolss.dll", "OpenPrinterW")
Interceptor.attach(OpenPrinterW, {onLeave: function (args) {send("OpenPrinterW");}});

var PackStringToEOB = Module.findExportByName("spoolss.dll", "PackStringToEOB")
Interceptor.attach(PackStringToEOB, {onLeave: function (args) {send("PackStringToEOB");}});

var PackStrings = Module.findExportByName("spoolss.dll", "PackStrings")
Interceptor.attach(PackStrings, {onLeave: function (args) {send("PackStrings");}});

var PartialReplyPrinterChangeNotification = Module.findExportByName("spoolss.dll", "PartialReplyPrinterChangeNotification")
Interceptor.attach(PartialReplyPrinterChangeNotification, {onLeave: function (args) {send("PartialReplyPrinterChangeNotification");}});

var PlayGdiScriptOnPrinterIC = Module.findExportByName("spoolss.dll", "PlayGdiScriptOnPrinterIC")
Interceptor.attach(PlayGdiScriptOnPrinterIC, {onLeave: function (args) {send("PlayGdiScriptOnPrinterIC");}});

var PrinterHandleRundown = Module.findExportByName("spoolss.dll", "PrinterHandleRundown")
Interceptor.attach(PrinterHandleRundown, {onLeave: function (args) {send("PrinterHandleRundown");}});

var PrinterMessageBoxW = Module.findExportByName("spoolss.dll", "PrinterMessageBoxW")
Interceptor.attach(PrinterMessageBoxW, {onLeave: function (args) {send("PrinterMessageBoxW");}});

var ProvidorFindClosePrinterChangeNotification = Module.findExportByName("spoolss.dll", "ProvidorFindClosePrinterChangeNotification")
Interceptor.attach(ProvidorFindClosePrinterChangeNotification, {onLeave: function (args) {send("ProvidorFindClosePrinterChangeNotification");}});

var ProvidorFindFirstPrinterChangeNotification = Module.findExportByName("spoolss.dll", "ProvidorFindFirstPrinterChangeNotification")
Interceptor.attach(ProvidorFindFirstPrinterChangeNotification, {onLeave: function (args) {send("ProvidorFindFirstPrinterChangeNotification");}});

var ReadPrinter = Module.findExportByName("spoolss.dll", "ReadPrinter")
Interceptor.attach(ReadPrinter, {onLeave: function (args) {send("ReadPrinter");}});

var ReallocSplMem = Module.findExportByName("spoolss.dll", "ReallocSplMem")
Interceptor.attach(ReallocSplMem, {onLeave: function (args) {send("ReallocSplMem");}});

var ReallocSplStr = Module.findExportByName("spoolss.dll", "ReallocSplStr")
Interceptor.attach(ReallocSplStr, {onLeave: function (args) {send("ReallocSplStr");}});

var RemoteFindFirstPrinterChangeNotification = Module.findExportByName("spoolss.dll", "RemoteFindFirstPrinterChangeNotification")
Interceptor.attach(RemoteFindFirstPrinterChangeNotification, {onLeave: function (args) {send("RemoteFindFirstPrinterChangeNotification");}});

var RemovePrintDeviceObject = Module.findExportByName("spoolss.dll", "RemovePrintDeviceObject")
Interceptor.attach(RemovePrintDeviceObject, {onLeave: function (args) {send("RemovePrintDeviceObject");}});

var ReplyClosePrinter = Module.findExportByName("spoolss.dll", "ReplyClosePrinter")
Interceptor.attach(ReplyClosePrinter, {onLeave: function (args) {send("ReplyClosePrinter");}});

var ReplyOpenPrinter = Module.findExportByName("spoolss.dll", "ReplyOpenPrinter")
Interceptor.attach(ReplyOpenPrinter, {onLeave: function (args) {send("ReplyOpenPrinter");}});

var ReplyPrinterChangeNotification = Module.findExportByName("spoolss.dll", "ReplyPrinterChangeNotification")
Interceptor.attach(ReplyPrinterChangeNotification, {onLeave: function (args) {send("ReplyPrinterChangeNotification");}});

var ReplyPrinterChangeNotificationEx = Module.findExportByName("spoolss.dll", "ReplyPrinterChangeNotificationEx")
Interceptor.attach(ReplyPrinterChangeNotificationEx, {onLeave: function (args) {send("ReplyPrinterChangeNotificationEx");}});

var ReportJobProcessingProgress = Module.findExportByName("spoolss.dll", "ReportJobProcessingProgress")
Interceptor.attach(ReportJobProcessingProgress, {onLeave: function (args) {send("ReportJobProcessingProgress");}});

var ResetPrinterW = Module.findExportByName("spoolss.dll", "ResetPrinterW")
Interceptor.attach(ResetPrinterW, {onLeave: function (args) {send("ResetPrinterW");}});

var RevertToPrinterSelf = Module.findExportByName("spoolss.dll", "RevertToPrinterSelf")
Interceptor.attach(RevertToPrinterSelf, {onLeave: function (args) {send("RevertToPrinterSelf");}});

var RouterAddPrinterConnection2 = Module.findExportByName("spoolss.dll", "RouterAddPrinterConnection2")
Interceptor.attach(RouterAddPrinterConnection2, {onLeave: function (args) {send("RouterAddPrinterConnection2");}});

var RouterAllocBidiMem = Module.findExportByName("spoolss.dll", "RouterAllocBidiMem")
Interceptor.attach(RouterAllocBidiMem, {onLeave: function (args) {send("RouterAllocBidiMem");}});

var RouterAllocBidiResponseContainer = Module.findExportByName("spoolss.dll", "RouterAllocBidiResponseContainer")
Interceptor.attach(RouterAllocBidiResponseContainer, {onLeave: function (args) {send("RouterAllocBidiResponseContainer");}});

var RouterAllocPrinterNotifyInfo = Module.findExportByName("spoolss.dll", "RouterAllocPrinterNotifyInfo")
Interceptor.attach(RouterAllocPrinterNotifyInfo, {onLeave: function (args) {send("RouterAllocPrinterNotifyInfo");}});

var RouterBroadcastMessage = Module.findExportByName("spoolss.dll", "RouterBroadcastMessage")
Interceptor.attach(RouterBroadcastMessage, {onLeave: function (args) {send("RouterBroadcastMessage");}});

var RouterCorePrinterDriverInstalled = Module.findExportByName("spoolss.dll", "RouterCorePrinterDriverInstalled")
Interceptor.attach(RouterCorePrinterDriverInstalled, {onLeave: function (args) {send("RouterCorePrinterDriverInstalled");}});

var RouterCreatePrintAsyncNotificationChannel = Module.findExportByName("spoolss.dll", "RouterCreatePrintAsyncNotificationChannel")
Interceptor.attach(RouterCreatePrintAsyncNotificationChannel, {onLeave: function (args) {send("RouterCreatePrintAsyncNotificationChannel");}});

var RouterDeletePrinterDriverPackage = Module.findExportByName("spoolss.dll", "RouterDeletePrinterDriverPackage")
Interceptor.attach(RouterDeletePrinterDriverPackage, {onLeave: function (args) {send("RouterDeletePrinterDriverPackage");}});

var RouterFindCompatibleDriver = Module.findExportByName("spoolss.dll", "RouterFindCompatibleDriver")
Interceptor.attach(RouterFindCompatibleDriver, {onLeave: function (args) {send("RouterFindCompatibleDriver");}});

var RouterFindFirstPrinterChangeNotification = Module.findExportByName("spoolss.dll", "RouterFindFirstPrinterChangeNotification")
Interceptor.attach(RouterFindFirstPrinterChangeNotification, {onLeave: function (args) {send("RouterFindFirstPrinterChangeNotification");}});

var RouterFindNextPrinterChangeNotification = Module.findExportByName("spoolss.dll", "RouterFindNextPrinterChangeNotification")
Interceptor.attach(RouterFindNextPrinterChangeNotification, {onLeave: function (args) {send("RouterFindNextPrinterChangeNotification");}});

var RouterFreeBidiMem = Module.findExportByName("spoolss.dll", "RouterFreeBidiMem")
Interceptor.attach(RouterFreeBidiMem, {onLeave: function (args) {send("RouterFreeBidiMem");}});

var RouterFreeBidiResponseContainer = Module.findExportByName("spoolss.dll", "RouterFreeBidiResponseContainer")
Interceptor.attach(RouterFreeBidiResponseContainer, {onLeave: function (args) {send("RouterFreeBidiResponseContainer");}});

var RouterFreePrinterNotifyInfo = Module.findExportByName("spoolss.dll", "RouterFreePrinterNotifyInfo")
Interceptor.attach(RouterFreePrinterNotifyInfo, {onLeave: function (args) {send("RouterFreePrinterNotifyInfo");}});

var RouterGetCorePrinterDrivers = Module.findExportByName("spoolss.dll", "RouterGetCorePrinterDrivers")
Interceptor.attach(RouterGetCorePrinterDrivers, {onLeave: function (args) {send("RouterGetCorePrinterDrivers");}});

var RouterGetPrintClassObject = Module.findExportByName("spoolss.dll", "RouterGetPrintClassObject")
Interceptor.attach(RouterGetPrintClassObject, {onLeave: function (args) {send("RouterGetPrintClassObject");}});

var RouterGetPrinterDriverPackagePath = Module.findExportByName("spoolss.dll", "RouterGetPrinterDriverPackagePath")
Interceptor.attach(RouterGetPrinterDriverPackagePath, {onLeave: function (args) {send("RouterGetPrinterDriverPackagePath");}});

var RouterInstallPrinterDriverFromPackage = Module.findExportByName("spoolss.dll", "RouterInstallPrinterDriverFromPackage")
Interceptor.attach(RouterInstallPrinterDriverFromPackage, {onLeave: function (args) {send("RouterInstallPrinterDriverFromPackage");}});

var RouterInstallPrinterDriverPackageFromConnection = Module.findExportByName("spoolss.dll", "RouterInstallPrinterDriverPackageFromConnection")
Interceptor.attach(RouterInstallPrinterDriverPackageFromConnection, {onLeave: function (args) {send("RouterInstallPrinterDriverPackageFromConnection");}});

var RouterInternalGetPrinterDriver = Module.findExportByName("spoolss.dll", "RouterInternalGetPrinterDriver")
Interceptor.attach(RouterInternalGetPrinterDriver, {onLeave: function (args) {send("RouterInternalGetPrinterDriver");}});

var RouterRefreshPrinterChangeNotification = Module.findExportByName("spoolss.dll", "RouterRefreshPrinterChangeNotification")
Interceptor.attach(RouterRefreshPrinterChangeNotification, {onLeave: function (args) {send("RouterRefreshPrinterChangeNotification");}});

var RouterRegisterForPrintAsyncNotifications = Module.findExportByName("spoolss.dll", "RouterRegisterForPrintAsyncNotifications")
Interceptor.attach(RouterRegisterForPrintAsyncNotifications, {onLeave: function (args) {send("RouterRegisterForPrintAsyncNotifications");}});

var RouterReplyPrinter = Module.findExportByName("spoolss.dll", "RouterReplyPrinter")
Interceptor.attach(RouterReplyPrinter, {onLeave: function (args) {send("RouterReplyPrinter");}});

var RouterSpoolerSetPolicy = Module.findExportByName("spoolss.dll", "RouterSpoolerSetPolicy")
Interceptor.attach(RouterSpoolerSetPolicy, {onLeave: function (args) {send("RouterSpoolerSetPolicy");}});

var RouterUnregisterForPrintAsyncNotifications = Module.findExportByName("spoolss.dll", "RouterUnregisterForPrintAsyncNotifications")
Interceptor.attach(RouterUnregisterForPrintAsyncNotifications, {onLeave: function (args) {send("RouterUnregisterForPrintAsyncNotifications");}});

var RouterUploadPrinterDriverPackage = Module.findExportByName("spoolss.dll", "RouterUploadPrinterDriverPackage")
Interceptor.attach(RouterUploadPrinterDriverPackage, {onLeave: function (args) {send("RouterUploadPrinterDriverPackage");}});

var ScheduleJob = Module.findExportByName("spoolss.dll", "ScheduleJob")
Interceptor.attach(ScheduleJob, {onLeave: function (args) {send("ScheduleJob");}});

var SeekPrinter = Module.findExportByName("spoolss.dll", "SeekPrinter")
Interceptor.attach(SeekPrinter, {onLeave: function (args) {send("SeekPrinter");}});

var SendRecvBidiData = Module.findExportByName("spoolss.dll", "SendRecvBidiData")
Interceptor.attach(SendRecvBidiData, {onLeave: function (args) {send("SendRecvBidiData");}});

var SetFormW = Module.findExportByName("spoolss.dll", "SetFormW")
Interceptor.attach(SetFormW, {onLeave: function (args) {send("SetFormW");}});

var SetJobNamedProperty = Module.findExportByName("spoolss.dll", "SetJobNamedProperty")
Interceptor.attach(SetJobNamedProperty, {onLeave: function (args) {send("SetJobNamedProperty");}});

var SetJobW = Module.findExportByName("spoolss.dll", "SetJobW")
Interceptor.attach(SetJobW, {onLeave: function (args) {send("SetJobW");}});

var SetPortW = Module.findExportByName("spoolss.dll", "SetPortW")
Interceptor.attach(SetPortW, {onLeave: function (args) {send("SetPortW");}});

var SetPrinterDataExW = Module.findExportByName("spoolss.dll", "SetPrinterDataExW")
Interceptor.attach(SetPrinterDataExW, {onLeave: function (args) {send("SetPrinterDataExW");}});

var SetPrinterDataW = Module.findExportByName("spoolss.dll", "SetPrinterDataW")
Interceptor.attach(SetPrinterDataW, {onLeave: function (args) {send("SetPrinterDataW");}});

var SetPrinterW = Module.findExportByName("spoolss.dll", "SetPrinterW")
Interceptor.attach(SetPrinterW, {onLeave: function (args) {send("SetPrinterW");}});

var SplCloseSpoolFileHandle = Module.findExportByName("spoolss.dll", "SplCloseSpoolFileHandle")
Interceptor.attach(SplCloseSpoolFileHandle, {onLeave: function (args) {send("SplCloseSpoolFileHandle");}});

var SplCommitSpoolData = Module.findExportByName("spoolss.dll", "SplCommitSpoolData")
Interceptor.attach(SplCommitSpoolData, {onLeave: function (args) {send("SplCommitSpoolData");}});

var SplDriverUnloadComplete = Module.findExportByName("spoolss.dll", "SplDriverUnloadComplete")
Interceptor.attach(SplDriverUnloadComplete, {onLeave: function (args) {send("SplDriverUnloadComplete");}});

var SplGetClientUserHandle = Module.findExportByName("spoolss.dll", "SplGetClientUserHandle")
Interceptor.attach(SplGetClientUserHandle, {onLeave: function (args) {send("SplGetClientUserHandle");}});

var SplGetSpoolFileInfo = Module.findExportByName("spoolss.dll", "SplGetSpoolFileInfo")
Interceptor.attach(SplGetSpoolFileInfo, {onLeave: function (args) {send("SplGetSpoolFileInfo");}});

var SplGetUserSidStringFromToken = Module.findExportByName("spoolss.dll", "SplGetUserSidStringFromToken")
Interceptor.attach(SplGetUserSidStringFromToken, {onLeave: function (args) {send("SplGetUserSidStringFromToken");}});

var SplInitializeWinSpoolDrv = Module.findExportByName("spoolss.dll", "SplInitializeWinSpoolDrv")
Interceptor.attach(SplInitializeWinSpoolDrv, {onLeave: function (args) {send("SplInitializeWinSpoolDrv");}});

var SplIsSessionZero = Module.findExportByName("spoolss.dll", "SplIsSessionZero")
Interceptor.attach(SplIsSessionZero, {onLeave: function (args) {send("SplIsSessionZero");}});

var SplIsUpgrade = Module.findExportByName("spoolss.dll", "SplIsUpgrade")
Interceptor.attach(SplIsUpgrade, {onLeave: function (args) {send("SplIsUpgrade");}});

var SplProcessPnPEvent = Module.findExportByName("spoolss.dll", "SplProcessPnPEvent")
Interceptor.attach(SplProcessPnPEvent, {onLeave: function (args) {send("SplProcessPnPEvent");}});

var SplProcessSessionEvent = Module.findExportByName("spoolss.dll", "SplProcessSessionEvent")
Interceptor.attach(SplProcessSessionEvent, {onLeave: function (args) {send("SplProcessSessionEvent");}});

var SplPromptUIInUsersSession = Module.findExportByName("spoolss.dll", "SplPromptUIInUsersSession")
Interceptor.attach(SplPromptUIInUsersSession, {onLeave: function (args) {send("SplPromptUIInUsersSession");}});

var SplQueryUserInfo = Module.findExportByName("spoolss.dll", "SplQueryUserInfo")
Interceptor.attach(SplQueryUserInfo, {onLeave: function (args) {send("SplQueryUserInfo");}});

var SplReadPrinter = Module.findExportByName("spoolss.dll", "SplReadPrinter")
Interceptor.attach(SplReadPrinter, {onLeave: function (args) {send("SplReadPrinter");}});

var SplRegisterForDeviceEvents = Module.findExportByName("spoolss.dll", "SplRegisterForDeviceEvents")
Interceptor.attach(SplRegisterForDeviceEvents, {onLeave: function (args) {send("SplRegisterForDeviceEvents");}});

var SplRegisterForSessionEvents = Module.findExportByName("spoolss.dll", "SplRegisterForSessionEvents")
Interceptor.attach(SplRegisterForSessionEvents, {onLeave: function (args) {send("SplRegisterForSessionEvents");}});

var SplShutDownRouter = Module.findExportByName("spoolss.dll", "SplShutDownRouter")
Interceptor.attach(SplShutDownRouter, {onLeave: function (args) {send("SplShutDownRouter");}});

var SplUalCollectData = Module.findExportByName("spoolss.dll", "SplUalCollectData")
Interceptor.attach(SplUalCollectData, {onLeave: function (args) {send("SplUalCollectData");}});

var SplUnregisterForDeviceEvents = Module.findExportByName("spoolss.dll", "SplUnregisterForDeviceEvents")
Interceptor.attach(SplUnregisterForDeviceEvents, {onLeave: function (args) {send("SplUnregisterForDeviceEvents");}});

var SplUnregisterForSessionEvents = Module.findExportByName("spoolss.dll", "SplUnregisterForSessionEvents")
Interceptor.attach(SplUnregisterForSessionEvents, {onLeave: function (args) {send("SplUnregisterForSessionEvents");}});

var SpoolerFindClosePrinterChangeNotification = Module.findExportByName("spoolss.dll", "SpoolerFindClosePrinterChangeNotification")
Interceptor.attach(SpoolerFindClosePrinterChangeNotification, {onLeave: function (args) {send("SpoolerFindClosePrinterChangeNotification");}});

var SpoolerFindFirstPrinterChangeNotification = Module.findExportByName("spoolss.dll", "SpoolerFindFirstPrinterChangeNotification")
Interceptor.attach(SpoolerFindFirstPrinterChangeNotification, {onLeave: function (args) {send("SpoolerFindFirstPrinterChangeNotification");}});

var SpoolerFindNextPrinterChangeNotification = Module.findExportByName("spoolss.dll", "SpoolerFindNextPrinterChangeNotification")
Interceptor.attach(SpoolerFindNextPrinterChangeNotification, {onLeave: function (args) {send("SpoolerFindNextPrinterChangeNotification");}});

var SpoolerFreePrinterNotifyInfo = Module.findExportByName("spoolss.dll", "SpoolerFreePrinterNotifyInfo")
Interceptor.attach(SpoolerFreePrinterNotifyInfo, {onLeave: function (args) {send("SpoolerFreePrinterNotifyInfo");}});

var SpoolerHasInitialized = Module.findExportByName("spoolss.dll", "SpoolerHasInitialized")
Interceptor.attach(SpoolerHasInitialized, {onLeave: function (args) {send("SpoolerHasInitialized");}});

var SpoolerInit = Module.findExportByName("spoolss.dll", "SpoolerInit")
Interceptor.attach(SpoolerInit, {onLeave: function (args) {send("SpoolerInit");}});

var SpoolerRefreshPrinterChangeNotification = Module.findExportByName("spoolss.dll", "SpoolerRefreshPrinterChangeNotification")
Interceptor.attach(SpoolerRefreshPrinterChangeNotification, {onLeave: function (args) {send("SpoolerRefreshPrinterChangeNotification");}});

var StartDocPrinterW = Module.findExportByName("spoolss.dll", "StartDocPrinterW")
Interceptor.attach(StartDocPrinterW, {onLeave: function (args) {send("StartDocPrinterW");}});

var StartPagePrinter = Module.findExportByName("spoolss.dll", "StartPagePrinter")
Interceptor.attach(StartPagePrinter, {onLeave: function (args) {send("StartPagePrinter");}});

var UndoAlignKMPtr = Module.findExportByName("spoolss.dll", "UndoAlignKMPtr")
Interceptor.attach(UndoAlignKMPtr, {onLeave: function (args) {send("UndoAlignKMPtr");}});

var UndoAlignRpcPtr = Module.findExportByName("spoolss.dll", "UndoAlignRpcPtr")
Interceptor.attach(UndoAlignRpcPtr, {onLeave: function (args) {send("UndoAlignRpcPtr");}});

var UpdateBufferSize = Module.findExportByName("spoolss.dll", "UpdateBufferSize")
Interceptor.attach(UpdateBufferSize, {onLeave: function (args) {send("UpdateBufferSize");}});

var UpdatePrintDeviceObject = Module.findExportByName("spoolss.dll", "UpdatePrintDeviceObject")
Interceptor.attach(UpdatePrintDeviceObject, {onLeave: function (args) {send("UpdatePrintDeviceObject");}});

var UpdatePrinterRegAll = Module.findExportByName("spoolss.dll", "UpdatePrinterRegAll")
Interceptor.attach(UpdatePrinterRegAll, {onLeave: function (args) {send("UpdatePrinterRegAll");}});

var UpdatePrinterRegAllEx = Module.findExportByName("spoolss.dll", "UpdatePrinterRegAllEx")
Interceptor.attach(UpdatePrinterRegAllEx, {onLeave: function (args) {send("UpdatePrinterRegAllEx");}});

var UpdatePrinterRegUser = Module.findExportByName("spoolss.dll", "UpdatePrinterRegUser")
Interceptor.attach(UpdatePrinterRegUser, {onLeave: function (args) {send("UpdatePrinterRegUser");}});

var WaitForPrinterChange = Module.findExportByName("spoolss.dll", "WaitForPrinterChange")
Interceptor.attach(WaitForPrinterChange, {onLeave: function (args) {send("WaitForPrinterChange");}});

var WaitForSpoolerInitialization = Module.findExportByName("spoolss.dll", "WaitForSpoolerInitialization")
Interceptor.attach(WaitForSpoolerInitialization, {onLeave: function (args) {send("WaitForSpoolerInitialization");}});

var WritePrinter = Module.findExportByName("spoolss.dll", "WritePrinter")
Interceptor.attach(WritePrinter, {onLeave: function (args) {send("WritePrinter");}});

var XcvDataW = Module.findExportByName("spoolss.dll", "XcvDataW")
Interceptor.attach(XcvDataW, {onLeave: function (args) {send("XcvDataW");}});

var bGetDevModePerUser = Module.findExportByName("spoolss.dll", "bGetDevModePerUser")
Interceptor.attach(bGetDevModePerUser, {onLeave: function (args) {send("bGetDevModePerUser");}});

var bSetDevModePerUser = Module.findExportByName("spoolss.dll", "bSetDevModePerUser")
Interceptor.attach(bSetDevModePerUser, {onLeave: function (args) {send("bSetDevModePerUser");}});

