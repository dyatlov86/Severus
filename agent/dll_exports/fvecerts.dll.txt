var FveCertCanCertificateBeAdded = Module.findExportByName("fvecerts.dll", "FveCertCanCertificateBeAdded")
Interceptor.attach(FveCertCanCertificateBeAdded, {onLeave: function (args) {send("FveCertCanCertificateBeAdded");}});

var FveCertCreateCertInfo = Module.findExportByName("fvecerts.dll", "FveCertCreateCertInfo")
Interceptor.attach(FveCertCreateCertInfo, {onLeave: function (args) {send("FveCertCreateCertInfo");}});

var FveCertCreateSelfSignedCertificate = Module.findExportByName("fvecerts.dll", "FveCertCreateSelfSignedCertificate")
Interceptor.attach(FveCertCreateSelfSignedCertificate, {onLeave: function (args) {send("FveCertCreateSelfSignedCertificate");}});

var FveCertFilterForValidCertificates = Module.findExportByName("fvecerts.dll", "FveCertFilterForValidCertificates")
Interceptor.attach(FveCertFilterForValidCertificates, {onLeave: function (args) {send("FveCertFilterForValidCertificates");}});

var FveCertFindValidCertificates = Module.findExportByName("fvecerts.dll", "FveCertFindValidCertificates")
Interceptor.attach(FveCertFindValidCertificates, {onLeave: function (args) {send("FveCertFindValidCertificates");}});

var FveCertFreeCertInfo = Module.findExportByName("fvecerts.dll", "FveCertFreeCertInfo")
Interceptor.attach(FveCertFreeCertInfo, {onLeave: function (args) {send("FveCertFreeCertInfo");}});

var FveCertGetCertContextFromCert = Module.findExportByName("fvecerts.dll", "FveCertGetCertContextFromCert")
Interceptor.attach(FveCertGetCertContextFromCert, {onLeave: function (args) {send("FveCertGetCertContextFromCert");}});

var FveCertGetCertContextFromPfx = Module.findExportByName("fvecerts.dll", "FveCertGetCertContextFromPfx")
Interceptor.attach(FveCertGetCertContextFromPfx, {onLeave: function (args) {send("FveCertGetCertContextFromPfx");}});

var FveCertGetCertHashFromCertContext = Module.findExportByName("fvecerts.dll", "FveCertGetCertHashFromCertContext")
Interceptor.attach(FveCertGetCertHashFromCertContext, {onLeave: function (args) {send("FveCertGetCertHashFromCertContext");}});

var FveCertGetPrivateKeyHandle = Module.findExportByName("fvecerts.dll", "FveCertGetPrivateKeyHandle")
Interceptor.attach(FveCertGetPrivateKeyHandle, {onLeave: function (args) {send("FveCertGetPrivateKeyHandle");}});

var FveCertGetPublicKeyHandle = Module.findExportByName("fvecerts.dll", "FveCertGetPublicKeyHandle")
Interceptor.attach(FveCertGetPublicKeyHandle, {onLeave: function (args) {send("FveCertGetPublicKeyHandle");}});

var FveCertIsAlternateCert = Module.findExportByName("fvecerts.dll", "FveCertIsAlternateCert")
Interceptor.attach(FveCertIsAlternateCert, {onLeave: function (args) {send("FveCertIsAlternateCert");}});

var FveCertIsValidCertInfo = Module.findExportByName("fvecerts.dll", "FveCertIsValidCertInfo")
Interceptor.attach(FveCertIsValidCertInfo, {onLeave: function (args) {send("FveCertIsValidCertInfo");}});

var FveCertSignData = Module.findExportByName("fvecerts.dll", "FveCertSignData")
Interceptor.attach(FveCertSignData, {onLeave: function (args) {send("FveCertSignData");}});

var FveCertWritePfxFromCertContext = Module.findExportByName("fvecerts.dll", "FveCertWritePfxFromCertContext")
Interceptor.attach(FveCertWritePfxFromCertContext, {onLeave: function (args) {send("FveCertWritePfxFromCertContext");}});

