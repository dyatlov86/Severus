var AppendTempFileList = Module.findExportByName("msoert2.dll", "AppendTempFileList")
Interceptor.attach(AppendTempFileList, {onLeave: function (args) {send("AppendTempFileList");}});

var BrowseForFolder = Module.findExportByName("msoert2.dll", "BrowseForFolder")
Interceptor.attach(BrowseForFolder, {onLeave: function (args) {send("BrowseForFolder");}});

var BrowseForFolderW = Module.findExportByName("msoert2.dll", "BrowseForFolderW")
Interceptor.attach(BrowseForFolderW, {onLeave: function (args) {send("BrowseForFolderW");}});

var CchFileTimeToDateTimeSz = Module.findExportByName("msoert2.dll", "CchFileTimeToDateTimeSz")
Interceptor.attach(CchFileTimeToDateTimeSz, {onLeave: function (args) {send("CchFileTimeToDateTimeSz");}});

var CchFileTimeToDateTimeW = Module.findExportByName("msoert2.dll", "CchFileTimeToDateTimeW")
Interceptor.attach(CchFileTimeToDateTimeW, {onLeave: function (args) {send("CchFileTimeToDateTimeW");}});

var CenterDialog = Module.findExportByName("msoert2.dll", "CenterDialog")
Interceptor.attach(CenterDialog, {onLeave: function (args) {send("CenterDialog");}});

var ChConvertFromHex = Module.findExportByName("msoert2.dll", "ChConvertFromHex")
Interceptor.attach(ChConvertFromHex, {onLeave: function (args) {send("ChConvertFromHex");}});

var CleanupFileNameInPlaceA = Module.findExportByName("msoert2.dll", "CleanupFileNameInPlaceA")
Interceptor.attach(CleanupFileNameInPlaceA, {onLeave: function (args) {send("CleanupFileNameInPlaceA");}});

var CleanupFileNameInPlaceW = Module.findExportByName("msoert2.dll", "CleanupFileNameInPlaceW")
Interceptor.attach(CleanupFileNameInPlaceW, {onLeave: function (args) {send("CleanupFileNameInPlaceW");}});

var CleanupGlobalTempFiles = Module.findExportByName("msoert2.dll", "CleanupGlobalTempFiles")
Interceptor.attach(CleanupGlobalTempFiles, {onLeave: function (args) {send("CleanupGlobalTempFiles");}});

var CopyRegistry = Module.findExportByName("msoert2.dll", "CopyRegistry")
Interceptor.attach(CopyRegistry, {onLeave: function (args) {send("CopyRegistry");}});

var CrackNotificationPackage = Module.findExportByName("msoert2.dll", "CrackNotificationPackage")
Interceptor.attach(CrackNotificationPackage, {onLeave: function (args) {send("CrackNotificationPackage");}});

var CreateDataObject = Module.findExportByName("msoert2.dll", "CreateDataObject")
Interceptor.attach(CreateDataObject, {onLeave: function (args) {send("CreateDataObject");}});

var CreateEnumFormatEtc = Module.findExportByName("msoert2.dll", "CreateEnumFormatEtc")
Interceptor.attach(CreateEnumFormatEtc, {onLeave: function (args) {send("CreateEnumFormatEtc");}});

var CreateLogFile = Module.findExportByName("msoert2.dll", "CreateLogFile")
Interceptor.attach(CreateLogFile, {onLeave: function (args) {send("CreateLogFile");}});

var CreateNotify = Module.findExportByName("msoert2.dll", "CreateNotify")
Interceptor.attach(CreateNotify, {onLeave: function (args) {send("CreateNotify");}});

var CreateStreamOnHFile = Module.findExportByName("msoert2.dll", "CreateStreamOnHFile")
Interceptor.attach(CreateStreamOnHFile, {onLeave: function (args) {send("CreateStreamOnHFile");}});

var CreateStreamOnHFileW = Module.findExportByName("msoert2.dll", "CreateStreamOnHFileW")
Interceptor.attach(CreateStreamOnHFileW, {onLeave: function (args) {send("CreateStreamOnHFileW");}});

var CreateSystemHandleName = Module.findExportByName("msoert2.dll", "CreateSystemHandleName")
Interceptor.attach(CreateSystemHandleName, {onLeave: function (args) {send("CreateSystemHandleName");}});

var CreateTempFile = Module.findExportByName("msoert2.dll", "CreateTempFile")
Interceptor.attach(CreateTempFile, {onLeave: function (args) {send("CreateTempFile");}});

var CreateTempFileStream = Module.findExportByName("msoert2.dll", "CreateTempFileStream")
Interceptor.attach(CreateTempFileStream, {onLeave: function (args) {send("CreateTempFileStream");}});

var CreateTempFileW = Module.findExportByName("msoert2.dll", "CreateTempFileW")
Interceptor.attach(CreateTempFileW, {onLeave: function (args) {send("CreateTempFileW");}});

var CryptAllocFunc = Module.findExportByName("msoert2.dll", "CryptAllocFunc")
Interceptor.attach(CryptAllocFunc, {onLeave: function (args) {send("CryptAllocFunc");}});

var CryptFreeFunc = Module.findExportByName("msoert2.dll", "CryptFreeFunc")
Interceptor.attach(CryptFreeFunc, {onLeave: function (args) {send("CryptFreeFunc");}});

var DeleteTempFile = Module.findExportByName("msoert2.dll", "DeleteTempFile")
Interceptor.attach(DeleteTempFile, {onLeave: function (args) {send("DeleteTempFile");}});

var DeleteTempFileOnShutdownEx = Module.findExportByName("msoert2.dll", "DeleteTempFileOnShutdownEx")
Interceptor.attach(DeleteTempFileOnShutdownEx, {onLeave: function (args) {send("DeleteTempFileOnShutdownEx");}});

var DllCanUnloadNow = Module.findExportByName("msoert2.dll", "DllCanUnloadNow")
Interceptor.attach(DllCanUnloadNow, {onLeave: function (args) {send("DllCanUnloadNow");}});

var DllGetClassObject = Module.findExportByName("msoert2.dll", "DllGetClassObject")
Interceptor.attach(DllGetClassObject, {onLeave: function (args) {send("DllGetClassObject");}});

var FBuildTempPath = Module.findExportByName("msoert2.dll", "FBuildTempPath")
Interceptor.attach(FBuildTempPath, {onLeave: function (args) {send("FBuildTempPath");}});

var FBuildTempPathW = Module.findExportByName("msoert2.dll", "FBuildTempPathW")
Interceptor.attach(FBuildTempPathW, {onLeave: function (args) {send("FBuildTempPathW");}});

var FInitializeRichEdit = Module.findExportByName("msoert2.dll", "FInitializeRichEdit")
Interceptor.attach(FInitializeRichEdit, {onLeave: function (args) {send("FInitializeRichEdit");}});

var FIsEmptyA = Module.findExportByName("msoert2.dll", "FIsEmptyA")
Interceptor.attach(FIsEmptyA, {onLeave: function (args) {send("FIsEmptyA");}});

var FIsEmptyW = Module.findExportByName("msoert2.dll", "FIsEmptyW")
Interceptor.attach(FIsEmptyW, {onLeave: function (args) {send("FIsEmptyW");}});

var FIsHTMLFile = Module.findExportByName("msoert2.dll", "FIsHTMLFile")
Interceptor.attach(FIsHTMLFile, {onLeave: function (args) {send("FIsHTMLFile");}});

var FIsHTMLFileW = Module.findExportByName("msoert2.dll", "FIsHTMLFileW")
Interceptor.attach(FIsHTMLFileW, {onLeave: function (args) {send("FIsHTMLFileW");}});

var FIsSpaceA = Module.findExportByName("msoert2.dll", "FIsSpaceA")
Interceptor.attach(FIsSpaceA, {onLeave: function (args) {send("FIsSpaceA");}});

var FIsSpaceW = Module.findExportByName("msoert2.dll", "FIsSpaceW")
Interceptor.attach(FIsSpaceW, {onLeave: function (args) {send("FIsSpaceW");}});

var FIsValidFileNameCharA = Module.findExportByName("msoert2.dll", "FIsValidFileNameCharA")
Interceptor.attach(FIsValidFileNameCharA, {onLeave: function (args) {send("FIsValidFileNameCharA");}});

var FIsValidFileNameCharW = Module.findExportByName("msoert2.dll", "FIsValidFileNameCharW")
Interceptor.attach(FIsValidFileNameCharW, {onLeave: function (args) {send("FIsValidFileNameCharW");}});

var FMissingCert = Module.findExportByName("msoert2.dll", "FMissingCert")
Interceptor.attach(FMissingCert, {onLeave: function (args) {send("FMissingCert");}});

var FreeTempFileList = Module.findExportByName("msoert2.dll", "FreeTempFileList")
Interceptor.attach(FreeTempFileList, {onLeave: function (args) {send("FreeTempFileList");}});

var GenerateUniqueFileName = Module.findExportByName("msoert2.dll", "GenerateUniqueFileName")
Interceptor.attach(GenerateUniqueFileName, {onLeave: function (args) {send("GenerateUniqueFileName");}});

var GenerateUniqueFileNameW = Module.findExportByName("msoert2.dll", "GenerateUniqueFileNameW")
Interceptor.attach(GenerateUniqueFileNameW, {onLeave: function (args) {send("GenerateUniqueFileNameW");}});

var GetDllMajorVersion = Module.findExportByName("msoert2.dll", "GetDllMajorVersion")
Interceptor.attach(GetDllMajorVersion, {onLeave: function (args) {send("GetDllMajorVersion");}});

var GetExePath = Module.findExportByName("msoert2.dll", "GetExePath")
Interceptor.attach(GetExePath, {onLeave: function (args) {send("GetExePath");}});

var GetHtmlCharset = Module.findExportByName("msoert2.dll", "GetHtmlCharset")
Interceptor.attach(GetHtmlCharset, {onLeave: function (args) {send("GetHtmlCharset");}});

var GetRichEdClassStringW = Module.findExportByName("msoert2.dll", "GetRichEdClassStringW")
Interceptor.attach(GetRichEdClassStringW, {onLeave: function (args) {send("GetRichEdClassStringW");}});

var GetStoreRootDirectoryFromRegistryEntry = Module.findExportByName("msoert2.dll", "GetStoreRootDirectoryFromRegistryEntry")
Interceptor.attach(GetStoreRootDirectoryFromRegistryEntry, {onLeave: function (args) {send("GetStoreRootDirectoryFromRegistryEntry");}});

var GetStoreRootDirectoryFromRegistryEntryW = Module.findExportByName("msoert2.dll", "GetStoreRootDirectoryFromRegistryEntryW")
Interceptor.attach(GetStoreRootDirectoryFromRegistryEntryW, {onLeave: function (args) {send("GetStoreRootDirectoryFromRegistryEntryW");}});

var GetTopMostParent = Module.findExportByName("msoert2.dll", "GetTopMostParent")
Interceptor.attach(GetTopMostParent, {onLeave: function (args) {send("GetTopMostParent");}});

var HrBSTRToLPSZ = Module.findExportByName("msoert2.dll", "HrBSTRToLPSZ")
Interceptor.attach(HrBSTRToLPSZ, {onLeave: function (args) {send("HrBSTRToLPSZ");}});

var HrCheckTridentMenu = Module.findExportByName("msoert2.dll", "HrCheckTridentMenu")
Interceptor.attach(HrCheckTridentMenu, {onLeave: function (args) {send("HrCheckTridentMenu");}});

var HrCopyLockBytesToStream = Module.findExportByName("msoert2.dll", "HrCopyLockBytesToStream")
Interceptor.attach(HrCopyLockBytesToStream, {onLeave: function (args) {send("HrCopyLockBytesToStream");}});

var HrCopyStream = Module.findExportByName("msoert2.dll", "HrCopyStream")
Interceptor.attach(HrCopyStream, {onLeave: function (args) {send("HrCopyStream");}});

var HrCopyStreamCB = Module.findExportByName("msoert2.dll", "HrCopyStreamCB")
Interceptor.attach(HrCopyStreamCB, {onLeave: function (args) {send("HrCopyStreamCB");}});

var HrCopyStreamCBEndOnCRLF = Module.findExportByName("msoert2.dll", "HrCopyStreamCBEndOnCRLF")
Interceptor.attach(HrCopyStreamCBEndOnCRLF, {onLeave: function (args) {send("HrCopyStreamCBEndOnCRLF");}});

var HrCopyStreamToByte = Module.findExportByName("msoert2.dll", "HrCopyStreamToByte")
Interceptor.attach(HrCopyStreamToByte, {onLeave: function (args) {send("HrCopyStreamToByte");}});

var HrCreatePhonebookEntry = Module.findExportByName("msoert2.dll", "HrCreatePhonebookEntry")
Interceptor.attach(HrCreatePhonebookEntry, {onLeave: function (args) {send("HrCreatePhonebookEntry");}});

var HrCreateTridentMenu = Module.findExportByName("msoert2.dll", "HrCreateTridentMenu")
Interceptor.attach(HrCreateTridentMenu, {onLeave: function (args) {send("HrCreateTridentMenu");}});

var HrDecodeObject = Module.findExportByName("msoert2.dll", "HrDecodeObject")
Interceptor.attach(HrDecodeObject, {onLeave: function (args) {send("HrDecodeObject");}});

var HrEditPhonebookEntryW = Module.findExportByName("msoert2.dll", "HrEditPhonebookEntryW")
Interceptor.attach(HrEditPhonebookEntryW, {onLeave: function (args) {send("HrEditPhonebookEntryW");}});

var HrFillRasCombo = Module.findExportByName("msoert2.dll", "HrFillRasCombo")
Interceptor.attach(HrFillRasCombo, {onLeave: function (args) {send("HrFillRasCombo");}});

var HrFindInetTimeZone = Module.findExportByName("msoert2.dll", "HrFindInetTimeZone")
Interceptor.attach(HrFindInetTimeZone, {onLeave: function (args) {send("HrFindInetTimeZone");}});

var HrGetBodyElement = Module.findExportByName("msoert2.dll", "HrGetBodyElement")
Interceptor.attach(HrGetBodyElement, {onLeave: function (args) {send("HrGetBodyElement");}});

var HrGetCertKeyUsage = Module.findExportByName("msoert2.dll", "HrGetCertKeyUsage")
Interceptor.attach(HrGetCertKeyUsage, {onLeave: function (args) {send("HrGetCertKeyUsage");}});

var HrGetCertificateParam = Module.findExportByName("msoert2.dll", "HrGetCertificateParam")
Interceptor.attach(HrGetCertificateParam, {onLeave: function (args) {send("HrGetCertificateParam");}});

var HrGetElementImpl = Module.findExportByName("msoert2.dll", "HrGetElementImpl")
Interceptor.attach(HrGetElementImpl, {onLeave: function (args) {send("HrGetElementImpl");}});

var HrGetMsgParam = Module.findExportByName("msoert2.dll", "HrGetMsgParam")
Interceptor.attach(HrGetMsgParam, {onLeave: function (args) {send("HrGetMsgParam");}});

var HrGetStreamPos = Module.findExportByName("msoert2.dll", "HrGetStreamPos")
Interceptor.attach(HrGetStreamPos, {onLeave: function (args) {send("HrGetStreamPos");}});

var HrGetStreamSize = Module.findExportByName("msoert2.dll", "HrGetStreamSize")
Interceptor.attach(HrGetStreamSize, {onLeave: function (args) {send("HrGetStreamSize");}});

var HrGetStyleSheet = Module.findExportByName("msoert2.dll", "HrGetStyleSheet")
Interceptor.attach(HrGetStyleSheet, {onLeave: function (args) {send("HrGetStyleSheet");}});

var HrIStreamToBSTR = Module.findExportByName("msoert2.dll", "HrIStreamToBSTR")
Interceptor.attach(HrIStreamToBSTR, {onLeave: function (args) {send("HrIStreamToBSTR");}});

var HrIStreamWToBSTR = Module.findExportByName("msoert2.dll", "HrIStreamWToBSTR")
Interceptor.attach(HrIStreamWToBSTR, {onLeave: function (args) {send("HrIStreamWToBSTR");}});

var HrIndexOfMonth = Module.findExportByName("msoert2.dll", "HrIndexOfMonth")
Interceptor.attach(HrIndexOfMonth, {onLeave: function (args) {send("HrIndexOfMonth");}});

var HrIndexOfWeek = Module.findExportByName("msoert2.dll", "HrIndexOfWeek")
Interceptor.attach(HrIndexOfWeek, {onLeave: function (args) {send("HrIndexOfWeek");}});

var HrIsStreamUnicode = Module.findExportByName("msoert2.dll", "HrIsStreamUnicode")
Interceptor.attach(HrIsStreamUnicode, {onLeave: function (args) {send("HrIsStreamUnicode");}});

var HrLPSZCPToBSTR = Module.findExportByName("msoert2.dll", "HrLPSZCPToBSTR")
Interceptor.attach(HrLPSZCPToBSTR, {onLeave: function (args) {send("HrLPSZCPToBSTR");}});

var HrLPSZToBSTR = Module.findExportByName("msoert2.dll", "HrLPSZToBSTR")
Interceptor.attach(HrLPSZToBSTR, {onLeave: function (args) {send("HrLPSZToBSTR");}});

var HrRewindStream = Module.findExportByName("msoert2.dll", "HrRewindStream")
Interceptor.attach(HrRewindStream, {onLeave: function (args) {send("HrRewindStream");}});

var HrSafeGetStreamSize = Module.findExportByName("msoert2.dll", "HrSafeGetStreamSize")
Interceptor.attach(HrSafeGetStreamSize, {onLeave: function (args) {send("HrSafeGetStreamSize");}});

var HrSetDirtyFlagImpl = Module.findExportByName("msoert2.dll", "HrSetDirtyFlagImpl")
Interceptor.attach(HrSetDirtyFlagImpl, {onLeave: function (args) {send("HrSetDirtyFlagImpl");}});

var HrStreamSeekBegin = Module.findExportByName("msoert2.dll", "HrStreamSeekBegin")
Interceptor.attach(HrStreamSeekBegin, {onLeave: function (args) {send("HrStreamSeekBegin");}});

var HrStreamSeekCur = Module.findExportByName("msoert2.dll", "HrStreamSeekCur")
Interceptor.attach(HrStreamSeekCur, {onLeave: function (args) {send("HrStreamSeekCur");}});

var HrStreamSeekEnd = Module.findExportByName("msoert2.dll", "HrStreamSeekEnd")
Interceptor.attach(HrStreamSeekEnd, {onLeave: function (args) {send("HrStreamSeekEnd");}});

var HrStreamSeekSet = Module.findExportByName("msoert2.dll", "HrStreamSeekSet")
Interceptor.attach(HrStreamSeekSet, {onLeave: function (args) {send("HrStreamSeekSet");}});

var HrStreamToByte = Module.findExportByName("msoert2.dll", "HrStreamToByte")
Interceptor.attach(HrStreamToByte, {onLeave: function (args) {send("HrStreamToByte");}});

var IDrawText = Module.findExportByName("msoert2.dll", "IDrawText")
Interceptor.attach(IDrawText, {onLeave: function (args) {send("IDrawText");}});

var IUnknownList_CreateInstance = Module.findExportByName("msoert2.dll", "IUnknownList_CreateInstance")
Interceptor.attach(IUnknownList_CreateInstance, {onLeave: function (args) {send("IUnknownList_CreateInstance");}});

var IVoidPtrList_CreateInstance = Module.findExportByName("msoert2.dll", "IVoidPtrList_CreateInstance")
Interceptor.attach(IVoidPtrList_CreateInstance, {onLeave: function (args) {send("IVoidPtrList_CreateInstance");}});

var IsDigit = Module.findExportByName("msoert2.dll", "IsDigit")
Interceptor.attach(IsDigit, {onLeave: function (args) {send("IsDigit");}});

var IsHttpUrlA = Module.findExportByName("msoert2.dll", "IsHttpUrlA")
Interceptor.attach(IsHttpUrlA, {onLeave: function (args) {send("IsHttpUrlA");}});

var IsHttpUrlW = Module.findExportByName("msoert2.dll", "IsHttpUrlW")
Interceptor.attach(IsHttpUrlW, {onLeave: function (args) {send("IsHttpUrlW");}});

var IsPrint = Module.findExportByName("msoert2.dll", "IsPrint")
Interceptor.attach(IsPrint, {onLeave: function (args) {send("IsPrint");}});

var IsUpper = Module.findExportByName("msoert2.dll", "IsUpper")
Interceptor.attach(IsUpper, {onLeave: function (args) {send("IsUpper");}});

var IsValidFileIfFileUrlW = Module.findExportByName("msoert2.dll", "IsValidFileIfFileUrlW")
Interceptor.attach(IsValidFileIfFileUrlW, {onLeave: function (args) {send("IsValidFileIfFileUrlW");}});

var MessageBoxInst = Module.findExportByName("msoert2.dll", "MessageBoxInst")
Interceptor.attach(MessageBoxInst, {onLeave: function (args) {send("MessageBoxInst");}});

var MessageBoxInstW = Module.findExportByName("msoert2.dll", "MessageBoxInstW")
Interceptor.attach(MessageBoxInstW, {onLeave: function (args) {send("MessageBoxInstW");}});

var OpenFileStream = Module.findExportByName("msoert2.dll", "OpenFileStream")
Interceptor.attach(OpenFileStream, {onLeave: function (args) {send("OpenFileStream");}});

var OpenFileStreamShare = Module.findExportByName("msoert2.dll", "OpenFileStreamShare")
Interceptor.attach(OpenFileStreamShare, {onLeave: function (args) {send("OpenFileStreamShare");}});

var OpenFileStreamShareW = Module.findExportByName("msoert2.dll", "OpenFileStreamShareW")
Interceptor.attach(OpenFileStreamShareW, {onLeave: function (args) {send("OpenFileStreamShareW");}});

var OpenFileStreamW = Module.findExportByName("msoert2.dll", "OpenFileStreamW")
Interceptor.attach(OpenFileStreamW, {onLeave: function (args) {send("OpenFileStreamW");}});

var OpenFileStreamWithFlagsW = Module.findExportByName("msoert2.dll", "OpenFileStreamWithFlagsW")
Interceptor.attach(OpenFileStreamWithFlagsW, {onLeave: function (args) {send("OpenFileStreamWithFlagsW");}});

var PVDecodeObject = Module.findExportByName("msoert2.dll", "PVDecodeObject")
Interceptor.attach(PVDecodeObject, {onLeave: function (args) {send("PVDecodeObject");}});

var PVGetCertificateParam = Module.findExportByName("msoert2.dll", "PVGetCertificateParam")
Interceptor.attach(PVGetCertificateParam, {onLeave: function (args) {send("PVGetCertificateParam");}});

var PVGetMsgParam = Module.findExportByName("msoert2.dll", "PVGetMsgParam")
Interceptor.attach(PVGetMsgParam, {onLeave: function (args) {send("PVGetMsgParam");}});

var PszAllocA = Module.findExportByName("msoert2.dll", "PszAllocA")
Interceptor.attach(PszAllocA, {onLeave: function (args) {send("PszAllocA");}});

var PszAllocW = Module.findExportByName("msoert2.dll", "PszAllocW")
Interceptor.attach(PszAllocW, {onLeave: function (args) {send("PszAllocW");}});

var PszDayFromIndex = Module.findExportByName("msoert2.dll", "PszDayFromIndex")
Interceptor.attach(PszDayFromIndex, {onLeave: function (args) {send("PszDayFromIndex");}});

var PszDupA = Module.findExportByName("msoert2.dll", "PszDupA")
Interceptor.attach(PszDupA, {onLeave: function (args) {send("PszDupA");}});

var PszDupW = Module.findExportByName("msoert2.dll", "PszDupW")
Interceptor.attach(PszDupW, {onLeave: function (args) {send("PszDupW");}});

var PszEscapeMenuStringA = Module.findExportByName("msoert2.dll", "PszEscapeMenuStringA")
Interceptor.attach(PszEscapeMenuStringA, {onLeave: function (args) {send("PszEscapeMenuStringA");}});

var PszEscapeMenuStringW = Module.findExportByName("msoert2.dll", "PszEscapeMenuStringW")
Interceptor.attach(PszEscapeMenuStringW, {onLeave: function (args) {send("PszEscapeMenuStringW");}});

var PszFromANSIStreamA = Module.findExportByName("msoert2.dll", "PszFromANSIStreamA")
Interceptor.attach(PszFromANSIStreamA, {onLeave: function (args) {send("PszFromANSIStreamA");}});

var PszMonthFromIndex = Module.findExportByName("msoert2.dll", "PszMonthFromIndex")
Interceptor.attach(PszMonthFromIndex, {onLeave: function (args) {send("PszMonthFromIndex");}});

var PszScanToCharA = Module.findExportByName("msoert2.dll", "PszScanToCharA")
Interceptor.attach(PszScanToCharA, {onLeave: function (args) {send("PszScanToCharA");}});

var PszScanToWhiteA = Module.findExportByName("msoert2.dll", "PszScanToWhiteA")
Interceptor.attach(PszScanToWhiteA, {onLeave: function (args) {send("PszScanToWhiteA");}});

var PszSkipWhiteA = Module.findExportByName("msoert2.dll", "PszSkipWhiteA")
Interceptor.attach(PszSkipWhiteA, {onLeave: function (args) {send("PszSkipWhiteA");}});

var PszSkipWhiteW = Module.findExportByName("msoert2.dll", "PszSkipWhiteW")
Interceptor.attach(PszSkipWhiteW, {onLeave: function (args) {send("PszSkipWhiteW");}});

var PszToANSI = Module.findExportByName("msoert2.dll", "PszToANSI")
Interceptor.attach(PszToANSI, {onLeave: function (args) {send("PszToANSI");}});

var PszToUnicode = Module.findExportByName("msoert2.dll", "PszToUnicode")
Interceptor.attach(PszToUnicode, {onLeave: function (args) {send("PszToUnicode");}});

var ReplaceChars = Module.findExportByName("msoert2.dll", "ReplaceChars")
Interceptor.attach(ReplaceChars, {onLeave: function (args) {send("ReplaceChars");}});

var ReplaceCharsW = Module.findExportByName("msoert2.dll", "ReplaceCharsW")
Interceptor.attach(ReplaceCharsW, {onLeave: function (args) {send("ReplaceCharsW");}});

var RicheditStreamIn = Module.findExportByName("msoert2.dll", "RicheditStreamIn")
Interceptor.attach(RicheditStreamIn, {onLeave: function (args) {send("RicheditStreamIn");}});

var RicheditStreamOut = Module.findExportByName("msoert2.dll", "RicheditStreamOut")
Interceptor.attach(RicheditStreamOut, {onLeave: function (args) {send("RicheditStreamOut");}});

var SetFontOnRichEd = Module.findExportByName("msoert2.dll", "SetFontOnRichEd")
Interceptor.attach(SetFontOnRichEd, {onLeave: function (args) {send("SetFontOnRichEd");}});

var ShellUtil_GetSpecialFolderPath = Module.findExportByName("msoert2.dll", "ShellUtil_GetSpecialFolderPath")
Interceptor.attach(ShellUtil_GetSpecialFolderPath, {onLeave: function (args) {send("ShellUtil_GetSpecialFolderPath");}});

var StrToUintA = Module.findExportByName("msoert2.dll", "StrToUintA")
Interceptor.attach(StrToUintA, {onLeave: function (args) {send("StrToUintA");}});

var StrToUintW = Module.findExportByName("msoert2.dll", "StrToUintW")
Interceptor.attach(StrToUintW, {onLeave: function (args) {send("StrToUintW");}});

var StrTokExA = Module.findExportByName("msoert2.dll", "StrTokExA")
Interceptor.attach(StrTokExA, {onLeave: function (args) {send("StrTokExA");}});

var StrTokExW = Module.findExportByName("msoert2.dll", "StrTokExW")
Interceptor.attach(StrTokExW, {onLeave: function (args) {send("StrTokExW");}});

var StreamSubStringMatchW = Module.findExportByName("msoert2.dll", "StreamSubStringMatchW")
Interceptor.attach(StreamSubStringMatchW, {onLeave: function (args) {send("StreamSubStringMatchW");}});

var StripCRLF = Module.findExportByName("msoert2.dll", "StripCRLF")
Interceptor.attach(StripCRLF, {onLeave: function (args) {send("StripCRLF");}});

var SzGetCertificateEmailAddress = Module.findExportByName("msoert2.dll", "SzGetCertificateEmailAddress")
Interceptor.attach(SzGetCertificateEmailAddress, {onLeave: function (args) {send("SzGetCertificateEmailAddress");}});

var UlStripWhitespace = Module.findExportByName("msoert2.dll", "UlStripWhitespace")
Interceptor.attach(UlStripWhitespace, {onLeave: function (args) {send("UlStripWhitespace");}});

var UlStripWhitespaceW = Module.findExportByName("msoert2.dll", "UlStripWhitespaceW")
Interceptor.attach(UlStripWhitespaceW, {onLeave: function (args) {send("UlStripWhitespaceW");}});

var UnlocStrEqNW = Module.findExportByName("msoert2.dll", "UnlocStrEqNW")
Interceptor.attach(UnlocStrEqNW, {onLeave: function (args) {send("UnlocStrEqNW");}});

var UpdateRebarBandColors = Module.findExportByName("msoert2.dll", "UpdateRebarBandColors")
Interceptor.attach(UpdateRebarBandColors, {onLeave: function (args) {send("UpdateRebarBandColors");}});

var WriteStreamToFile = Module.findExportByName("msoert2.dll", "WriteStreamToFile")
Interceptor.attach(WriteStreamToFile, {onLeave: function (args) {send("WriteStreamToFile");}});

var WriteStreamToFileHandle = Module.findExportByName("msoert2.dll", "WriteStreamToFileHandle")
Interceptor.attach(WriteStreamToFileHandle, {onLeave: function (args) {send("WriteStreamToFileHandle");}});

var WriteStreamToFileW = Module.findExportByName("msoert2.dll", "WriteStreamToFileW")
Interceptor.attach(WriteStreamToFileW, {onLeave: function (args) {send("WriteStreamToFileW");}});

var _MSG = Module.findExportByName("msoert2.dll", "_MSG")
Interceptor.attach(_MSG, {onLeave: function (args) {send("_MSG");}});

var fGetBrowserUrlEncoding = Module.findExportByName("msoert2.dll", "fGetBrowserUrlEncoding")
Interceptor.attach(fGetBrowserUrlEncoding, {onLeave: function (args) {send("fGetBrowserUrlEncoding");}});

var strtrim = Module.findExportByName("msoert2.dll", "strtrim")
Interceptor.attach(strtrim, {onLeave: function (args) {send("strtrim");}});

var strtrimW = Module.findExportByName("msoert2.dll", "strtrimW")
Interceptor.attach(strtrimW, {onLeave: function (args) {send("strtrimW");}});

