var WldpAddDeveloperCertificateForDynamicCodeTrust = Module.findExportByName("wldp.dll", "WldpAddDeveloperCertificateForDynamicCodeTrust")
Interceptor.attach(WldpAddDeveloperCertificateForDynamicCodeTrust, {onLeave: function (args) {send("WldpAddDeveloperCertificateForDynamicCodeTrust");}});

var WldpCanExecuteBuffer = Module.findExportByName("wldp.dll", "WldpCanExecuteBuffer")
Interceptor.attach(WldpCanExecuteBuffer, {onLeave: function (args) {send("WldpCanExecuteBuffer");}});

var WldpCanExecuteFile = Module.findExportByName("wldp.dll", "WldpCanExecuteFile")
Interceptor.attach(WldpCanExecuteFile, {onLeave: function (args) {send("WldpCanExecuteFile");}});

var WldpCanExecuteStream = Module.findExportByName("wldp.dll", "WldpCanExecuteStream")
Interceptor.attach(WldpCanExecuteStream, {onLeave: function (args) {send("WldpCanExecuteStream");}});

var WldpChangeVulnerableDriverBlocklistState = Module.findExportByName("wldp.dll", "WldpChangeVulnerableDriverBlocklistState")
Interceptor.attach(WldpChangeVulnerableDriverBlocklistState, {onLeave: function (args) {send("WldpChangeVulnerableDriverBlocklistState");}});

var WldpCheckDeviceEncryptionNotStarted = Module.findExportByName("wldp.dll", "WldpCheckDeviceEncryptionNotStarted")
Interceptor.attach(WldpCheckDeviceEncryptionNotStarted, {onLeave: function (args) {send("WldpCheckDeviceEncryptionNotStarted");}});

var WldpCheckRetailConfiguration = Module.findExportByName("wldp.dll", "WldpCheckRetailConfiguration")
Interceptor.attach(WldpCheckRetailConfiguration, {onLeave: function (args) {send("WldpCheckRetailConfiguration");}});

var WldpCheckWcosDeviceEncryptionSecure = Module.findExportByName("wldp.dll", "WldpCheckWcosDeviceEncryptionSecure")
Interceptor.attach(WldpCheckWcosDeviceEncryptionSecure, {onLeave: function (args) {send("WldpCheckWcosDeviceEncryptionSecure");}});

var WldpDisableDeveloperMode = Module.findExportByName("wldp.dll", "WldpDisableDeveloperMode")
Interceptor.attach(WldpDisableDeveloperMode, {onLeave: function (args) {send("WldpDisableDeveloperMode");}});

var WldpEnableDeveloperMode = Module.findExportByName("wldp.dll", "WldpEnableDeveloperMode")
Interceptor.attach(WldpEnableDeveloperMode, {onLeave: function (args) {send("WldpEnableDeveloperMode");}});

var WldpGetLockdownPolicy = Module.findExportByName("wldp.dll", "WldpGetLockdownPolicy")
Interceptor.attach(WldpGetLockdownPolicy, {onLeave: function (args) {send("WldpGetLockdownPolicy");}});

var WldpIsAllowedEntryPoint = Module.findExportByName("wldp.dll", "WldpIsAllowedEntryPoint")
Interceptor.attach(WldpIsAllowedEntryPoint, {onLeave: function (args) {send("WldpIsAllowedEntryPoint");}});

var WldpIsAppApprovedByPolicy = Module.findExportByName("wldp.dll", "WldpIsAppApprovedByPolicy")
Interceptor.attach(WldpIsAppApprovedByPolicy, {onLeave: function (args) {send("WldpIsAppApprovedByPolicy");}});

var WldpIsClassInApprovedList = Module.findExportByName("wldp.dll", "WldpIsClassInApprovedList")
Interceptor.attach(WldpIsClassInApprovedList, {onLeave: function (args) {send("WldpIsClassInApprovedList");}});

var WldpIsDebugAllowed = Module.findExportByName("wldp.dll", "WldpIsDebugAllowed")
Interceptor.attach(WldpIsDebugAllowed, {onLeave: function (args) {send("WldpIsDebugAllowed");}});

var WldpIsDynamicCodePolicyEnabled = Module.findExportByName("wldp.dll", "WldpIsDynamicCodePolicyEnabled")
Interceptor.attach(WldpIsDynamicCodePolicyEnabled, {onLeave: function (args) {send("WldpIsDynamicCodePolicyEnabled");}});

var WldpIsProductionConfiguration = Module.findExportByName("wldp.dll", "WldpIsProductionConfiguration")
Interceptor.attach(WldpIsProductionConfiguration, {onLeave: function (args) {send("WldpIsProductionConfiguration");}});

var WldpIsProductionConfigurationInProc = Module.findExportByName("wldp.dll", "WldpIsProductionConfigurationInProc")
Interceptor.attach(WldpIsProductionConfigurationInProc, {onLeave: function (args) {send("WldpIsProductionConfigurationInProc");}});

var WldpIsVulnerableDriverBlocklistDisabled = Module.findExportByName("wldp.dll", "WldpIsVulnerableDriverBlocklistDisabled")
Interceptor.attach(WldpIsVulnerableDriverBlocklistDisabled, {onLeave: function (args) {send("WldpIsVulnerableDriverBlocklistDisabled");}});

var WldpIsVulnerableDriverBlocklistEligibleToDisable = Module.findExportByName("wldp.dll", "WldpIsVulnerableDriverBlocklistEligibleToDisable")
Interceptor.attach(WldpIsVulnerableDriverBlocklistEligibleToDisable, {onLeave: function (args) {send("WldpIsVulnerableDriverBlocklistEligibleToDisable");}});

var WldpIsWcosProductionConfiguration = Module.findExportByName("wldp.dll", "WldpIsWcosProductionConfiguration")
Interceptor.attach(WldpIsWcosProductionConfiguration, {onLeave: function (args) {send("WldpIsWcosProductionConfiguration");}});

var WldpQueryDeviceSecurityInformation = Module.findExportByName("wldp.dll", "WldpQueryDeviceSecurityInformation")
Interceptor.attach(WldpQueryDeviceSecurityInformation, {onLeave: function (args) {send("WldpQueryDeviceSecurityInformation");}});

var WldpQueryDynamicCodeTrust = Module.findExportByName("wldp.dll", "WldpQueryDynamicCodeTrust")
Interceptor.attach(WldpQueryDynamicCodeTrust, {onLeave: function (args) {send("WldpQueryDynamicCodeTrust");}});

var WldpQueryPolicySettingEnabled = Module.findExportByName("wldp.dll", "WldpQueryPolicySettingEnabled")
Interceptor.attach(WldpQueryPolicySettingEnabled, {onLeave: function (args) {send("WldpQueryPolicySettingEnabled");}});

var WldpQueryPolicySettingEnabled2 = Module.findExportByName("wldp.dll", "WldpQueryPolicySettingEnabled2")
Interceptor.attach(WldpQueryPolicySettingEnabled2, {onLeave: function (args) {send("WldpQueryPolicySettingEnabled2");}});

var WldpQueryPolicySettingEnabledInternal = Module.findExportByName("wldp.dll", "WldpQueryPolicySettingEnabledInternal")
Interceptor.attach(WldpQueryPolicySettingEnabledInternal, {onLeave: function (args) {send("WldpQueryPolicySettingEnabledInternal");}});

var WldpQuerySecurityPolicy = Module.findExportByName("wldp.dll", "WldpQuerySecurityPolicy")
Interceptor.attach(WldpQuerySecurityPolicy, {onLeave: function (args) {send("WldpQuerySecurityPolicy");}});

var WldpQueryWindowsLockdownMode = Module.findExportByName("wldp.dll", "WldpQueryWindowsLockdownMode")
Interceptor.attach(WldpQueryWindowsLockdownMode, {onLeave: function (args) {send("WldpQueryWindowsLockdownMode");}});

var WldpQueryWindowsLockdownRestriction = Module.findExportByName("wldp.dll", "WldpQueryWindowsLockdownRestriction")
Interceptor.attach(WldpQueryWindowsLockdownRestriction, {onLeave: function (args) {send("WldpQueryWindowsLockdownRestriction");}});

var WldpResetProductionConfiguration = Module.findExportByName("wldp.dll", "WldpResetProductionConfiguration")
Interceptor.attach(WldpResetProductionConfiguration, {onLeave: function (args) {send("WldpResetProductionConfiguration");}});

var WldpResetWcosProductionConfiguration = Module.findExportByName("wldp.dll", "WldpResetWcosProductionConfiguration")
Interceptor.attach(WldpResetWcosProductionConfiguration, {onLeave: function (args) {send("WldpResetWcosProductionConfiguration");}});

var WldpSendSmartAppControlBlockToast = Module.findExportByName("wldp.dll", "WldpSendSmartAppControlBlockToast")
Interceptor.attach(WldpSendSmartAppControlBlockToast, {onLeave: function (args) {send("WldpSendSmartAppControlBlockToast");}});

var WldpSendSmartAppControlSwitchEnforceToast = Module.findExportByName("wldp.dll", "WldpSendSmartAppControlSwitchEnforceToast")
Interceptor.attach(WldpSendSmartAppControlSwitchEnforceToast, {onLeave: function (args) {send("WldpSendSmartAppControlSwitchEnforceToast");}});

var WldpSetDynamicCodeTrust = Module.findExportByName("wldp.dll", "WldpSetDynamicCodeTrust")
Interceptor.attach(WldpSetDynamicCodeTrust, {onLeave: function (args) {send("WldpSetDynamicCodeTrust");}});

var WldpSetDynamicCodeTrust2 = Module.findExportByName("wldp.dll", "WldpSetDynamicCodeTrust2")
Interceptor.attach(WldpSetDynamicCodeTrust2, {onLeave: function (args) {send("WldpSetDynamicCodeTrust2");}});

var WldpSetWindowsLockdownRestriction = Module.findExportByName("wldp.dll", "WldpSetWindowsLockdownRestriction")
Interceptor.attach(WldpSetWindowsLockdownRestriction, {onLeave: function (args) {send("WldpSetWindowsLockdownRestriction");}});

var WldpTraceLoggingWDACBlockDialogShown = Module.findExportByName("wldp.dll", "WldpTraceLoggingWDACBlockDialogShown")
Interceptor.attach(WldpTraceLoggingWDACBlockDialogShown, {onLeave: function (args) {send("WldpTraceLoggingWDACBlockDialogShown");}});

