var ClassInstall32 = Module.findExportByName("ntprint.dll", "ClassInstall32")
Interceptor.attach(ClassInstall32, {onLeave: function (args) {send("ClassInstall32");}});

var PSetupAssociateICMProfiles = Module.findExportByName("ntprint.dll", "PSetupAssociateICMProfiles")
Interceptor.attach(PSetupAssociateICMProfiles, {onLeave: function (args) {send("PSetupAssociateICMProfiles");}});

var PSetupBuildDriverList = Module.findExportByName("ntprint.dll", "PSetupBuildDriverList")
Interceptor.attach(PSetupBuildDriverList, {onLeave: function (args) {send("PSetupBuildDriverList");}});

var PSetupBuildDriversFromPath = Module.findExportByName("ntprint.dll", "PSetupBuildDriversFromPath")
Interceptor.attach(PSetupBuildDriversFromPath, {onLeave: function (args) {send("PSetupBuildDriversFromPath");}});

var PSetupCheckForDriversInDriverStore = Module.findExportByName("ntprint.dll", "PSetupCheckForDriversInDriverStore")
Interceptor.attach(PSetupCheckForDriversInDriverStore, {onLeave: function (args) {send("PSetupCheckForDriversInDriverStore");}});

var PSetupCopyDriverPackageFiles = Module.findExportByName("ntprint.dll", "PSetupCopyDriverPackageFiles")
Interceptor.attach(PSetupCopyDriverPackageFiles, {onLeave: function (args) {send("PSetupCopyDriverPackageFiles");}});

var PSetupCreateDrvSetupPage = Module.findExportByName("ntprint.dll", "PSetupCreateDrvSetupPage")
Interceptor.attach(PSetupCreateDrvSetupPage, {onLeave: function (args) {send("PSetupCreateDrvSetupPage");}});

var PSetupCreateMonitorInfo = Module.findExportByName("ntprint.dll", "PSetupCreateMonitorInfo")
Interceptor.attach(PSetupCreateMonitorInfo, {onLeave: function (args) {send("PSetupCreateMonitorInfo");}});

var PSetupCreatePrinterDeviceInfoList = Module.findExportByName("ntprint.dll", "PSetupCreatePrinterDeviceInfoList")
Interceptor.attach(PSetupCreatePrinterDeviceInfoList, {onLeave: function (args) {send("PSetupCreatePrinterDeviceInfoList");}});

var PSetupDestroyDriverInfo3 = Module.findExportByName("ntprint.dll", "PSetupDestroyDriverInfo3")
Interceptor.attach(PSetupDestroyDriverInfo3, {onLeave: function (args) {send("PSetupDestroyDriverInfo3");}});

var PSetupDestroyMonitorInfo = Module.findExportByName("ntprint.dll", "PSetupDestroyMonitorInfo")
Interceptor.attach(PSetupDestroyMonitorInfo, {onLeave: function (args) {send("PSetupDestroyMonitorInfo");}});

var PSetupDestroyPrinterDeviceInfoList = Module.findExportByName("ntprint.dll", "PSetupDestroyPrinterDeviceInfoList")
Interceptor.attach(PSetupDestroyPrinterDeviceInfoList, {onLeave: function (args) {send("PSetupDestroyPrinterDeviceInfoList");}});

var PSetupDestroySelectedDriverInfo = Module.findExportByName("ntprint.dll", "PSetupDestroySelectedDriverInfo")
Interceptor.attach(PSetupDestroySelectedDriverInfo, {onLeave: function (args) {send("PSetupDestroySelectedDriverInfo");}});

var PSetupDisassociateICMProfiles = Module.findExportByName("ntprint.dll", "PSetupDisassociateICMProfiles")
Interceptor.attach(PSetupDisassociateICMProfiles, {onLeave: function (args) {send("PSetupDisassociateICMProfiles");}});

var PSetupDownloadAndInstallLegacyDriverW = Module.findExportByName("ntprint.dll", "PSetupDownloadAndInstallLegacyDriverW")
Interceptor.attach(PSetupDownloadAndInstallLegacyDriverW, {onLeave: function (args) {send("PSetupDownloadAndInstallLegacyDriverW");}});

var PSetupDriverInfoFromDeviceID = Module.findExportByName("ntprint.dll", "PSetupDriverInfoFromDeviceID")
Interceptor.attach(PSetupDriverInfoFromDeviceID, {onLeave: function (args) {send("PSetupDriverInfoFromDeviceID");}});

var PSetupDriverInfoFromName = Module.findExportByName("ntprint.dll", "PSetupDriverInfoFromName")
Interceptor.attach(PSetupDriverInfoFromName, {onLeave: function (args) {send("PSetupDriverInfoFromName");}});

var PSetupDriverStoreAddDriverPackage = Module.findExportByName("ntprint.dll", "PSetupDriverStoreAddDriverPackage")
Interceptor.attach(PSetupDriverStoreAddDriverPackage, {onLeave: function (args) {send("PSetupDriverStoreAddDriverPackage");}});

var PSetupDriverStoreFindDriverPackageW = Module.findExportByName("ntprint.dll", "PSetupDriverStoreFindDriverPackageW")
Interceptor.attach(PSetupDriverStoreFindDriverPackageW, {onLeave: function (args) {send("PSetupDriverStoreFindDriverPackageW");}});

var PSetupElevateAndCallDriverStoreAddDriverPackage = Module.findExportByName("ntprint.dll", "PSetupElevateAndCallDriverStoreAddDriverPackage")
Interceptor.attach(PSetupElevateAndCallDriverStoreAddDriverPackage, {onLeave: function (args) {send("PSetupElevateAndCallDriverStoreAddDriverPackage");}});

var PSetupElevatedDriverStoreAddDriverPackageW = Module.findExportByName("ntprint.dll", "PSetupElevatedDriverStoreAddDriverPackageW")
Interceptor.attach(PSetupElevatedDriverStoreAddDriverPackageW, {onLeave: function (args) {send("PSetupElevatedDriverStoreAddDriverPackageW");}});

var PSetupElevatedInstallDownloadedLegacyDriverW = Module.findExportByName("ntprint.dll", "PSetupElevatedInstallDownloadedLegacyDriverW")
Interceptor.attach(PSetupElevatedInstallDownloadedLegacyDriverW, {onLeave: function (args) {send("PSetupElevatedInstallDownloadedLegacyDriverW");}});

var PSetupElevatedInstallDriverPackageFromConnectionW = Module.findExportByName("ntprint.dll", "PSetupElevatedInstallDriverPackageFromConnectionW")
Interceptor.attach(PSetupElevatedInstallDriverPackageFromConnectionW, {onLeave: function (args) {send("PSetupElevatedInstallDriverPackageFromConnectionW");}});

var PSetupElevatedInstallPrinterDriverFromTheWebW = Module.findExportByName("ntprint.dll", "PSetupElevatedInstallPrinterDriverFromTheWebW")
Interceptor.attach(PSetupElevatedInstallPrinterDriverFromTheWebW, {onLeave: function (args) {send("PSetupElevatedInstallPrinterDriverFromTheWebW");}});

var PSetupElevatedLegacyPrintDriverInstallW = Module.findExportByName("ntprint.dll", "PSetupElevatedLegacyPrintDriverInstallW")
Interceptor.attach(PSetupElevatedLegacyPrintDriverInstallW, {onLeave: function (args) {send("PSetupElevatedLegacyPrintDriverInstallW");}});

var PSetupEnumMonitor = Module.findExportByName("ntprint.dll", "PSetupEnumMonitor")
Interceptor.attach(PSetupEnumMonitor, {onLeave: function (args) {send("PSetupEnumMonitor");}});

var PSetupFindCompatibleDriverFromName = Module.findExportByName("ntprint.dll", "PSetupFindCompatibleDriverFromName")
Interceptor.attach(PSetupFindCompatibleDriverFromName, {onLeave: function (args) {send("PSetupFindCompatibleDriverFromName");}});

var PSetupFreeDrvField = Module.findExportByName("ntprint.dll", "PSetupFreeDrvField")
Interceptor.attach(PSetupFreeDrvField, {onLeave: function (args) {send("PSetupFreeDrvField");}});

var PSetupFreeMem = Module.findExportByName("ntprint.dll", "PSetupFreeMem")
Interceptor.attach(PSetupFreeMem, {onLeave: function (args) {send("PSetupFreeMem");}});

var PSetupGetActualInstallSection = Module.findExportByName("ntprint.dll", "PSetupGetActualInstallSection")
Interceptor.attach(PSetupGetActualInstallSection, {onLeave: function (args) {send("PSetupGetActualInstallSection");}});

var PSetupGetCatalogNameFromInfW = Module.findExportByName("ntprint.dll", "PSetupGetCatalogNameFromInfW")
Interceptor.attach(PSetupGetCatalogNameFromInfW, {onLeave: function (args) {send("PSetupGetCatalogNameFromInfW");}});

var PSetupGetDriverInfo3 = Module.findExportByName("ntprint.dll", "PSetupGetDriverInfo3")
Interceptor.attach(PSetupGetDriverInfo3, {onLeave: function (args) {send("PSetupGetDriverInfo3");}});

var PSetupGetInfDriverStoreLocation = Module.findExportByName("ntprint.dll", "PSetupGetInfDriverStoreLocation")
Interceptor.attach(PSetupGetInfDriverStoreLocation, {onLeave: function (args) {send("PSetupGetInfDriverStoreLocation");}});

var PSetupGetLocalDataField = Module.findExportByName("ntprint.dll", "PSetupGetLocalDataField")
Interceptor.attach(PSetupGetLocalDataField, {onLeave: function (args) {send("PSetupGetLocalDataField");}});

var PSetupGetPathToSearch = Module.findExportByName("ntprint.dll", "PSetupGetPathToSearch")
Interceptor.attach(PSetupGetPathToSearch, {onLeave: function (args) {send("PSetupGetPathToSearch");}});

var PSetupGetSelectedDriverInfo = Module.findExportByName("ntprint.dll", "PSetupGetSelectedDriverInfo")
Interceptor.attach(PSetupGetSelectedDriverInfo, {onLeave: function (args) {send("PSetupGetSelectedDriverInfo");}});

var PSetupInstallDriverPackageFromConnection = Module.findExportByName("ntprint.dll", "PSetupInstallDriverPackageFromConnection")
Interceptor.attach(PSetupInstallDriverPackageFromConnection, {onLeave: function (args) {send("PSetupInstallDriverPackageFromConnection");}});

var PSetupInstallICMProfiles = Module.findExportByName("ntprint.dll", "PSetupInstallICMProfiles")
Interceptor.attach(PSetupInstallICMProfiles, {onLeave: function (args) {send("PSetupInstallICMProfiles");}});

var PSetupInstallInboxDriverSilently = Module.findExportByName("ntprint.dll", "PSetupInstallInboxDriverSilently")
Interceptor.attach(PSetupInstallInboxDriverSilently, {onLeave: function (args) {send("PSetupInstallInboxDriverSilently");}});

var PSetupInstallMonitor = Module.findExportByName("ntprint.dll", "PSetupInstallMonitor")
Interceptor.attach(PSetupInstallMonitor, {onLeave: function (args) {send("PSetupInstallMonitor");}});

var PSetupInstallPrinterDriver = Module.findExportByName("ntprint.dll", "PSetupInstallPrinterDriver")
Interceptor.attach(PSetupInstallPrinterDriver, {onLeave: function (args) {send("PSetupInstallPrinterDriver");}});

var PSetupIsCompatibleDriver = Module.findExportByName("ntprint.dll", "PSetupIsCompatibleDriver")
Interceptor.attach(PSetupIsCompatibleDriver, {onLeave: function (args) {send("PSetupIsCompatibleDriver");}});

var PSetupIsDriverInstalled = Module.findExportByName("ntprint.dll", "PSetupIsDriverInstalled")
Interceptor.attach(PSetupIsDriverInstalled, {onLeave: function (args) {send("PSetupIsDriverInstalled");}});

var PSetupIsTheDriverFoundInInfInstalled = Module.findExportByName("ntprint.dll", "PSetupIsTheDriverFoundInInfInstalled")
Interceptor.attach(PSetupIsTheDriverFoundInInfInstalled, {onLeave: function (args) {send("PSetupIsTheDriverFoundInInfInstalled");}});

var PSetupParseInfAndCommitFileQueue = Module.findExportByName("ntprint.dll", "PSetupParseInfAndCommitFileQueue")
Interceptor.attach(PSetupParseInfAndCommitFileQueue, {onLeave: function (args) {send("PSetupParseInfAndCommitFileQueue");}});

var PSetupPreSelectDriver = Module.findExportByName("ntprint.dll", "PSetupPreSelectDriver")
Interceptor.attach(PSetupPreSelectDriver, {onLeave: function (args) {send("PSetupPreSelectDriver");}});

var PSetupProcessPrinterAdded = Module.findExportByName("ntprint.dll", "PSetupProcessPrinterAdded")
Interceptor.attach(PSetupProcessPrinterAdded, {onLeave: function (args) {send("PSetupProcessPrinterAdded");}});

var PSetupSelectDeviceButtons = Module.findExportByName("ntprint.dll", "PSetupSelectDeviceButtons")
Interceptor.attach(PSetupSelectDeviceButtons, {onLeave: function (args) {send("PSetupSelectDeviceButtons");}});

var PSetupSelectDriver = Module.findExportByName("ntprint.dll", "PSetupSelectDriver")
Interceptor.attach(PSetupSelectDriver, {onLeave: function (args) {send("PSetupSelectDriver");}});

var PSetupSetCoreInboxDriverPath = Module.findExportByName("ntprint.dll", "PSetupSetCoreInboxDriverPath")
Interceptor.attach(PSetupSetCoreInboxDriverPath, {onLeave: function (args) {send("PSetupSetCoreInboxDriverPath");}});

var PSetupSetDriverPlatform = Module.findExportByName("ntprint.dll", "PSetupSetDriverPlatform")
Interceptor.attach(PSetupSetDriverPlatform, {onLeave: function (args) {send("PSetupSetDriverPlatform");}});

var PSetupSetNonInteractiveMode = Module.findExportByName("ntprint.dll", "PSetupSetNonInteractiveMode")
Interceptor.attach(PSetupSetNonInteractiveMode, {onLeave: function (args) {send("PSetupSetNonInteractiveMode");}});

var PSetupSetSelectDevTitleAndInstructions = Module.findExportByName("ntprint.dll", "PSetupSetSelectDevTitleAndInstructions")
Interceptor.attach(PSetupSetSelectDevTitleAndInstructions, {onLeave: function (args) {send("PSetupSetSelectDevTitleAndInstructions");}});

var PSetupShowBlockedDriverUI = Module.findExportByName("ntprint.dll", "PSetupShowBlockedDriverUI")
Interceptor.attach(PSetupShowBlockedDriverUI, {onLeave: function (args) {send("PSetupShowBlockedDriverUI");}});

var PSetupThisPlatform = Module.findExportByName("ntprint.dll", "PSetupThisPlatform")
Interceptor.attach(PSetupThisPlatform, {onLeave: function (args) {send("PSetupThisPlatform");}});

var PSetupWebPnpGenerateDownLevelInfForInboxDriver = Module.findExportByName("ntprint.dll", "PSetupWebPnpGenerateDownLevelInfForInboxDriver")
Interceptor.attach(PSetupWebPnpGenerateDownLevelInfForInboxDriver, {onLeave: function (args) {send("PSetupWebPnpGenerateDownLevelInfForInboxDriver");}});

var ServerInstallW = Module.findExportByName("ntprint.dll", "ServerInstallW")
Interceptor.attach(ServerInstallW, {onLeave: function (args) {send("ServerInstallW");}});

