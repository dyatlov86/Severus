var Coml2DllGetClassObject = Module.findExportByName("coml2.dll", "Coml2DllGetClassObject")
Interceptor.attach(Coml2DllGetClassObject, {onLeave: function (args) {send("Coml2DllGetClassObject");}});

var CreateILockBytesOnHGlobal = Module.findExportByName("coml2.dll", "CreateILockBytesOnHGlobal")
Interceptor.attach(CreateILockBytesOnHGlobal, {onLeave: function (args) {send("CreateILockBytesOnHGlobal");}});

var DllGetClassObject = Module.findExportByName("coml2.dll", "DllGetClassObject")
Interceptor.attach(DllGetClassObject, {onLeave: function (args) {send("DllGetClassObject");}});

var FmtIdToPropStgName = Module.findExportByName("coml2.dll", "FmtIdToPropStgName")
Interceptor.attach(FmtIdToPropStgName, {onLeave: function (args) {send("FmtIdToPropStgName");}});

var GetConvertStg = Module.findExportByName("coml2.dll", "GetConvertStg")
Interceptor.attach(GetConvertStg, {onLeave: function (args) {send("GetConvertStg");}});

var GetHGlobalFromILockBytes = Module.findExportByName("coml2.dll", "GetHGlobalFromILockBytes")
Interceptor.attach(GetHGlobalFromILockBytes, {onLeave: function (args) {send("GetHGlobalFromILockBytes");}});

var PropStgNameToFmtId = Module.findExportByName("coml2.dll", "PropStgNameToFmtId")
Interceptor.attach(PropStgNameToFmtId, {onLeave: function (args) {send("PropStgNameToFmtId");}});

var ReadClassStg = Module.findExportByName("coml2.dll", "ReadClassStg")
Interceptor.attach(ReadClassStg, {onLeave: function (args) {send("ReadClassStg");}});

var ReadClassStm = Module.findExportByName("coml2.dll", "ReadClassStm")
Interceptor.attach(ReadClassStm, {onLeave: function (args) {send("ReadClassStm");}});

var StgCreateDocfile = Module.findExportByName("coml2.dll", "StgCreateDocfile")
Interceptor.attach(StgCreateDocfile, {onLeave: function (args) {send("StgCreateDocfile");}});

var StgCreateDocfileOnILockBytes = Module.findExportByName("coml2.dll", "StgCreateDocfileOnILockBytes")
Interceptor.attach(StgCreateDocfileOnILockBytes, {onLeave: function (args) {send("StgCreateDocfileOnILockBytes");}});

var StgCreatePropSetStg = Module.findExportByName("coml2.dll", "StgCreatePropSetStg")
Interceptor.attach(StgCreatePropSetStg, {onLeave: function (args) {send("StgCreatePropSetStg");}});

var StgCreatePropStg = Module.findExportByName("coml2.dll", "StgCreatePropStg")
Interceptor.attach(StgCreatePropStg, {onLeave: function (args) {send("StgCreatePropStg");}});

var StgCreateStorageEx = Module.findExportByName("coml2.dll", "StgCreateStorageEx")
Interceptor.attach(StgCreateStorageEx, {onLeave: function (args) {send("StgCreateStorageEx");}});

var StgIsStorageFile = Module.findExportByName("coml2.dll", "StgIsStorageFile")
Interceptor.attach(StgIsStorageFile, {onLeave: function (args) {send("StgIsStorageFile");}});

var StgIsStorageILockBytes = Module.findExportByName("coml2.dll", "StgIsStorageILockBytes")
Interceptor.attach(StgIsStorageILockBytes, {onLeave: function (args) {send("StgIsStorageILockBytes");}});

var StgOpenPropStg = Module.findExportByName("coml2.dll", "StgOpenPropStg")
Interceptor.attach(StgOpenPropStg, {onLeave: function (args) {send("StgOpenPropStg");}});

var StgOpenStorage = Module.findExportByName("coml2.dll", "StgOpenStorage")
Interceptor.attach(StgOpenStorage, {onLeave: function (args) {send("StgOpenStorage");}});

var StgOpenStorageEx = Module.findExportByName("coml2.dll", "StgOpenStorageEx")
Interceptor.attach(StgOpenStorageEx, {onLeave: function (args) {send("StgOpenStorageEx");}});

var StgOpenStorageOnILockBytes = Module.findExportByName("coml2.dll", "StgOpenStorageOnILockBytes")
Interceptor.attach(StgOpenStorageOnILockBytes, {onLeave: function (args) {send("StgOpenStorageOnILockBytes");}});

var StgSetTimes = Module.findExportByName("coml2.dll", "StgSetTimes")
Interceptor.attach(StgSetTimes, {onLeave: function (args) {send("StgSetTimes");}});

var WriteClassStg = Module.findExportByName("coml2.dll", "WriteClassStg")
Interceptor.attach(WriteClassStg, {onLeave: function (args) {send("WriteClassStg");}});

var WriteClassStm = Module.findExportByName("coml2.dll", "WriteClassStm")
Interceptor.attach(WriteClassStm, {onLeave: function (args) {send("WriteClassStm");}});

