var SnmpSvcAddrIsIpx = Module.findExportByName("snmpapi.dll", "SnmpSvcAddrIsIpx")
Interceptor.attach(SnmpSvcAddrIsIpx, {onLeave: function (args) {send("SnmpSvcAddrIsIpx");}});

var SnmpSvcAddrToSocket = Module.findExportByName("snmpapi.dll", "SnmpSvcAddrToSocket")
Interceptor.attach(SnmpSvcAddrToSocket, {onLeave: function (args) {send("SnmpSvcAddrToSocket");}});

var SnmpSvcGetEnterpriseOID = Module.findExportByName("snmpapi.dll", "SnmpSvcGetEnterpriseOID")
Interceptor.attach(SnmpSvcGetEnterpriseOID, {onLeave: function (args) {send("SnmpSvcGetEnterpriseOID");}});

var SnmpSvcGetUptime = Module.findExportByName("snmpapi.dll", "SnmpSvcGetUptime")
Interceptor.attach(SnmpSvcGetUptime, {onLeave: function (args) {send("SnmpSvcGetUptime");}});

var SnmpSvcGetUptimeFromTime = Module.findExportByName("snmpapi.dll", "SnmpSvcGetUptimeFromTime")
Interceptor.attach(SnmpSvcGetUptimeFromTime, {onLeave: function (args) {send("SnmpSvcGetUptimeFromTime");}});

var SnmpSvcInitUptime = Module.findExportByName("snmpapi.dll", "SnmpSvcInitUptime")
Interceptor.attach(SnmpSvcInitUptime, {onLeave: function (args) {send("SnmpSvcInitUptime");}});

var SnmpSvcSetLogLevel = Module.findExportByName("snmpapi.dll", "SnmpSvcSetLogLevel")
Interceptor.attach(SnmpSvcSetLogLevel, {onLeave: function (args) {send("SnmpSvcSetLogLevel");}});

var SnmpSvcSetLogType = Module.findExportByName("snmpapi.dll", "SnmpSvcSetLogType")
Interceptor.attach(SnmpSvcSetLogType, {onLeave: function (args) {send("SnmpSvcSetLogType");}});

var SnmpTfxClose = Module.findExportByName("snmpapi.dll", "SnmpTfxClose")
Interceptor.attach(SnmpTfxClose, {onLeave: function (args) {send("SnmpTfxClose");}});

var SnmpTfxOpen = Module.findExportByName("snmpapi.dll", "SnmpTfxOpen")
Interceptor.attach(SnmpTfxOpen, {onLeave: function (args) {send("SnmpTfxOpen");}});

var SnmpTfxQuery = Module.findExportByName("snmpapi.dll", "SnmpTfxQuery")
Interceptor.attach(SnmpTfxQuery, {onLeave: function (args) {send("SnmpTfxQuery");}});

var SnmpUtilAnsiToUnicode = Module.findExportByName("snmpapi.dll", "SnmpUtilAnsiToUnicode")
Interceptor.attach(SnmpUtilAnsiToUnicode, {onLeave: function (args) {send("SnmpUtilAnsiToUnicode");}});

var SnmpUtilAsnAnyCpy = Module.findExportByName("snmpapi.dll", "SnmpUtilAsnAnyCpy")
Interceptor.attach(SnmpUtilAsnAnyCpy, {onLeave: function (args) {send("SnmpUtilAsnAnyCpy");}});

var SnmpUtilAsnAnyFree = Module.findExportByName("snmpapi.dll", "SnmpUtilAsnAnyFree")
Interceptor.attach(SnmpUtilAsnAnyFree, {onLeave: function (args) {send("SnmpUtilAsnAnyFree");}});

var SnmpUtilDbgPrint = Module.findExportByName("snmpapi.dll", "SnmpUtilDbgPrint")
Interceptor.attach(SnmpUtilDbgPrint, {onLeave: function (args) {send("SnmpUtilDbgPrint");}});

var SnmpUtilIdsToA = Module.findExportByName("snmpapi.dll", "SnmpUtilIdsToA")
Interceptor.attach(SnmpUtilIdsToA, {onLeave: function (args) {send("SnmpUtilIdsToA");}});

var SnmpUtilMemAlloc = Module.findExportByName("snmpapi.dll", "SnmpUtilMemAlloc")
Interceptor.attach(SnmpUtilMemAlloc, {onLeave: function (args) {send("SnmpUtilMemAlloc");}});

var SnmpUtilMemFree = Module.findExportByName("snmpapi.dll", "SnmpUtilMemFree")
Interceptor.attach(SnmpUtilMemFree, {onLeave: function (args) {send("SnmpUtilMemFree");}});

var SnmpUtilMemReAlloc = Module.findExportByName("snmpapi.dll", "SnmpUtilMemReAlloc")
Interceptor.attach(SnmpUtilMemReAlloc, {onLeave: function (args) {send("SnmpUtilMemReAlloc");}});

var SnmpUtilOctetsCmp = Module.findExportByName("snmpapi.dll", "SnmpUtilOctetsCmp")
Interceptor.attach(SnmpUtilOctetsCmp, {onLeave: function (args) {send("SnmpUtilOctetsCmp");}});

var SnmpUtilOctetsCpy = Module.findExportByName("snmpapi.dll", "SnmpUtilOctetsCpy")
Interceptor.attach(SnmpUtilOctetsCpy, {onLeave: function (args) {send("SnmpUtilOctetsCpy");}});

var SnmpUtilOctetsFree = Module.findExportByName("snmpapi.dll", "SnmpUtilOctetsFree")
Interceptor.attach(SnmpUtilOctetsFree, {onLeave: function (args) {send("SnmpUtilOctetsFree");}});

var SnmpUtilOctetsNCmp = Module.findExportByName("snmpapi.dll", "SnmpUtilOctetsNCmp")
Interceptor.attach(SnmpUtilOctetsNCmp, {onLeave: function (args) {send("SnmpUtilOctetsNCmp");}});

var SnmpUtilOidAppend = Module.findExportByName("snmpapi.dll", "SnmpUtilOidAppend")
Interceptor.attach(SnmpUtilOidAppend, {onLeave: function (args) {send("SnmpUtilOidAppend");}});

var SnmpUtilOidCmp = Module.findExportByName("snmpapi.dll", "SnmpUtilOidCmp")
Interceptor.attach(SnmpUtilOidCmp, {onLeave: function (args) {send("SnmpUtilOidCmp");}});

var SnmpUtilOidCpy = Module.findExportByName("snmpapi.dll", "SnmpUtilOidCpy")
Interceptor.attach(SnmpUtilOidCpy, {onLeave: function (args) {send("SnmpUtilOidCpy");}});

var SnmpUtilOidFree = Module.findExportByName("snmpapi.dll", "SnmpUtilOidFree")
Interceptor.attach(SnmpUtilOidFree, {onLeave: function (args) {send("SnmpUtilOidFree");}});

var SnmpUtilOidNCmp = Module.findExportByName("snmpapi.dll", "SnmpUtilOidNCmp")
Interceptor.attach(SnmpUtilOidNCmp, {onLeave: function (args) {send("SnmpUtilOidNCmp");}});

var SnmpUtilOidToA = Module.findExportByName("snmpapi.dll", "SnmpUtilOidToA")
Interceptor.attach(SnmpUtilOidToA, {onLeave: function (args) {send("SnmpUtilOidToA");}});

var SnmpUtilPrintAsnAny = Module.findExportByName("snmpapi.dll", "SnmpUtilPrintAsnAny")
Interceptor.attach(SnmpUtilPrintAsnAny, {onLeave: function (args) {send("SnmpUtilPrintAsnAny");}});

var SnmpUtilPrintOid = Module.findExportByName("snmpapi.dll", "SnmpUtilPrintOid")
Interceptor.attach(SnmpUtilPrintOid, {onLeave: function (args) {send("SnmpUtilPrintOid");}});

var SnmpUtilUTF8ToUnicode = Module.findExportByName("snmpapi.dll", "SnmpUtilUTF8ToUnicode")
Interceptor.attach(SnmpUtilUTF8ToUnicode, {onLeave: function (args) {send("SnmpUtilUTF8ToUnicode");}});

var SnmpUtilUnicodeToAnsi = Module.findExportByName("snmpapi.dll", "SnmpUtilUnicodeToAnsi")
Interceptor.attach(SnmpUtilUnicodeToAnsi, {onLeave: function (args) {send("SnmpUtilUnicodeToAnsi");}});

var SnmpUtilUnicodeToUTF8 = Module.findExportByName("snmpapi.dll", "SnmpUtilUnicodeToUTF8")
Interceptor.attach(SnmpUtilUnicodeToUTF8, {onLeave: function (args) {send("SnmpUtilUnicodeToUTF8");}});

var SnmpUtilVarBindCpy = Module.findExportByName("snmpapi.dll", "SnmpUtilVarBindCpy")
Interceptor.attach(SnmpUtilVarBindCpy, {onLeave: function (args) {send("SnmpUtilVarBindCpy");}});

var SnmpUtilVarBindFree = Module.findExportByName("snmpapi.dll", "SnmpUtilVarBindFree")
Interceptor.attach(SnmpUtilVarBindFree, {onLeave: function (args) {send("SnmpUtilVarBindFree");}});

var SnmpUtilVarBindListCpy = Module.findExportByName("snmpapi.dll", "SnmpUtilVarBindListCpy")
Interceptor.attach(SnmpUtilVarBindListCpy, {onLeave: function (args) {send("SnmpUtilVarBindListCpy");}});

var SnmpUtilVarBindListFree = Module.findExportByName("snmpapi.dll", "SnmpUtilVarBindListFree")
Interceptor.attach(SnmpUtilVarBindListFree, {onLeave: function (args) {send("SnmpUtilVarBindListFree");}});

