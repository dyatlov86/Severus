var ??2@YAPAXI@Z = Module.findExportByName("crtdll.dll", "??2@YAPAXI@Z")
Interceptor.attach(??2@YAPAXI@Z, {onLeave: function (args) {send("??2@YAPAXI@Z");}});

var ??3@YAXPAX@Z = Module.findExportByName("crtdll.dll", "??3@YAXPAX@Z")
Interceptor.attach(??3@YAXPAX@Z, {onLeave: function (args) {send("??3@YAXPAX@Z");}});

var ?_set_new_handler@@YAP6AHI@ZP6AHI@Z@Z = Module.findExportByName("crtdll.dll", "?_set_new_handler@@YAP6AHI@ZP6AHI@Z@Z")
Interceptor.attach(?_set_new_handler@@YAP6AHI@ZP6AHI@Z@Z, {onLeave: function (args) {send("?_set_new_handler@@YAP6AHI@ZP6AHI@Z@Z");}});

var _CIacos = Module.findExportByName("crtdll.dll", "_CIacos")
Interceptor.attach(_CIacos, {onLeave: function (args) {send("_CIacos");}});

var _CIasin = Module.findExportByName("crtdll.dll", "_CIasin")
Interceptor.attach(_CIasin, {onLeave: function (args) {send("_CIasin");}});

var _CIatan = Module.findExportByName("crtdll.dll", "_CIatan")
Interceptor.attach(_CIatan, {onLeave: function (args) {send("_CIatan");}});

var _CIatan2 = Module.findExportByName("crtdll.dll", "_CIatan2")
Interceptor.attach(_CIatan2, {onLeave: function (args) {send("_CIatan2");}});

var _CIcos = Module.findExportByName("crtdll.dll", "_CIcos")
Interceptor.attach(_CIcos, {onLeave: function (args) {send("_CIcos");}});

var _CIcosh = Module.findExportByName("crtdll.dll", "_CIcosh")
Interceptor.attach(_CIcosh, {onLeave: function (args) {send("_CIcosh");}});

var _CIexp = Module.findExportByName("crtdll.dll", "_CIexp")
Interceptor.attach(_CIexp, {onLeave: function (args) {send("_CIexp");}});

var _CIfmod = Module.findExportByName("crtdll.dll", "_CIfmod")
Interceptor.attach(_CIfmod, {onLeave: function (args) {send("_CIfmod");}});

var _CIlog = Module.findExportByName("crtdll.dll", "_CIlog")
Interceptor.attach(_CIlog, {onLeave: function (args) {send("_CIlog");}});

var _CIlog10 = Module.findExportByName("crtdll.dll", "_CIlog10")
Interceptor.attach(_CIlog10, {onLeave: function (args) {send("_CIlog10");}});

var _CIpow = Module.findExportByName("crtdll.dll", "_CIpow")
Interceptor.attach(_CIpow, {onLeave: function (args) {send("_CIpow");}});

var _CIsin = Module.findExportByName("crtdll.dll", "_CIsin")
Interceptor.attach(_CIsin, {onLeave: function (args) {send("_CIsin");}});

var _CIsinh = Module.findExportByName("crtdll.dll", "_CIsinh")
Interceptor.attach(_CIsinh, {onLeave: function (args) {send("_CIsinh");}});

var _CIsqrt = Module.findExportByName("crtdll.dll", "_CIsqrt")
Interceptor.attach(_CIsqrt, {onLeave: function (args) {send("_CIsqrt");}});

var _CItan = Module.findExportByName("crtdll.dll", "_CItan")
Interceptor.attach(_CItan, {onLeave: function (args) {send("_CItan");}});

var _CItanh = Module.findExportByName("crtdll.dll", "_CItanh")
Interceptor.attach(_CItanh, {onLeave: function (args) {send("_CItanh");}});

var _HUGE_dll = Module.findExportByName("crtdll.dll", "_HUGE_dll")
Interceptor.attach(_HUGE_dll, {onLeave: function (args) {send("_HUGE_dll");}});

var _XcptFilter = Module.findExportByName("crtdll.dll", "_XcptFilter")
Interceptor.attach(_XcptFilter, {onLeave: function (args) {send("_XcptFilter");}});

var __GetMainArgs = Module.findExportByName("crtdll.dll", "__GetMainArgs")
Interceptor.attach(__GetMainArgs, {onLeave: function (args) {send("__GetMainArgs");}});

var __argc_dll = Module.findExportByName("crtdll.dll", "__argc_dll")
Interceptor.attach(__argc_dll, {onLeave: function (args) {send("__argc_dll");}});

var __argv_dll = Module.findExportByName("crtdll.dll", "__argv_dll")
Interceptor.attach(__argv_dll, {onLeave: function (args) {send("__argv_dll");}});

var __dllonexit = Module.findExportByName("crtdll.dll", "__dllonexit")
Interceptor.attach(__dllonexit, {onLeave: function (args) {send("__dllonexit");}});

var __doserrno = Module.findExportByName("crtdll.dll", "__doserrno")
Interceptor.attach(__doserrno, {onLeave: function (args) {send("__doserrno");}});

var __fpecode = Module.findExportByName("crtdll.dll", "__fpecode")
Interceptor.attach(__fpecode, {onLeave: function (args) {send("__fpecode");}});

var __isascii = Module.findExportByName("crtdll.dll", "__isascii")
Interceptor.attach(__isascii, {onLeave: function (args) {send("__isascii");}});

var __iscsym = Module.findExportByName("crtdll.dll", "__iscsym")
Interceptor.attach(__iscsym, {onLeave: function (args) {send("__iscsym");}});

var __iscsymf = Module.findExportByName("crtdll.dll", "__iscsymf")
Interceptor.attach(__iscsymf, {onLeave: function (args) {send("__iscsymf");}});

var __mb_cur_max_dll = Module.findExportByName("crtdll.dll", "__mb_cur_max_dll")
Interceptor.attach(__mb_cur_max_dll, {onLeave: function (args) {send("__mb_cur_max_dll");}});

var __pxcptinfoptrs = Module.findExportByName("crtdll.dll", "__pxcptinfoptrs")
Interceptor.attach(__pxcptinfoptrs, {onLeave: function (args) {send("__pxcptinfoptrs");}});

var __threadhandle = Module.findExportByName("crtdll.dll", "__threadhandle")
Interceptor.attach(__threadhandle, {onLeave: function (args) {send("__threadhandle");}});

var __threadid = Module.findExportByName("crtdll.dll", "__threadid")
Interceptor.attach(__threadid, {onLeave: function (args) {send("__threadid");}});

var __toascii = Module.findExportByName("crtdll.dll", "__toascii")
Interceptor.attach(__toascii, {onLeave: function (args) {send("__toascii");}});

var _abnormal_termination = Module.findExportByName("crtdll.dll", "_abnormal_termination")
Interceptor.attach(_abnormal_termination, {onLeave: function (args) {send("_abnormal_termination");}});

var _access = Module.findExportByName("crtdll.dll", "_access")
Interceptor.attach(_access, {onLeave: function (args) {send("_access");}});

var _acmdln_dll = Module.findExportByName("crtdll.dll", "_acmdln_dll")
Interceptor.attach(_acmdln_dll, {onLeave: function (args) {send("_acmdln_dll");}});

var _aexit_rtn_dll = Module.findExportByName("crtdll.dll", "_aexit_rtn_dll")
Interceptor.attach(_aexit_rtn_dll, {onLeave: function (args) {send("_aexit_rtn_dll");}});

var _amsg_exit = Module.findExportByName("crtdll.dll", "_amsg_exit")
Interceptor.attach(_amsg_exit, {onLeave: function (args) {send("_amsg_exit");}});

var _assert = Module.findExportByName("crtdll.dll", "_assert")
Interceptor.attach(_assert, {onLeave: function (args) {send("_assert");}});

var _basemajor_dll = Module.findExportByName("crtdll.dll", "_basemajor_dll")
Interceptor.attach(_basemajor_dll, {onLeave: function (args) {send("_basemajor_dll");}});

var _baseminor_dll = Module.findExportByName("crtdll.dll", "_baseminor_dll")
Interceptor.attach(_baseminor_dll, {onLeave: function (args) {send("_baseminor_dll");}});

var _baseversion_dll = Module.findExportByName("crtdll.dll", "_baseversion_dll")
Interceptor.attach(_baseversion_dll, {onLeave: function (args) {send("_baseversion_dll");}});

var _beep = Module.findExportByName("crtdll.dll", "_beep")
Interceptor.attach(_beep, {onLeave: function (args) {send("_beep");}});

var _beginthread = Module.findExportByName("crtdll.dll", "_beginthread")
Interceptor.attach(_beginthread, {onLeave: function (args) {send("_beginthread");}});

var _c_exit = Module.findExportByName("crtdll.dll", "_c_exit")
Interceptor.attach(_c_exit, {onLeave: function (args) {send("_c_exit");}});

var _cabs = Module.findExportByName("crtdll.dll", "_cabs")
Interceptor.attach(_cabs, {onLeave: function (args) {send("_cabs");}});

var _cexit = Module.findExportByName("crtdll.dll", "_cexit")
Interceptor.attach(_cexit, {onLeave: function (args) {send("_cexit");}});

var _cgets = Module.findExportByName("crtdll.dll", "_cgets")
Interceptor.attach(_cgets, {onLeave: function (args) {send("_cgets");}});

var _chdir = Module.findExportByName("crtdll.dll", "_chdir")
Interceptor.attach(_chdir, {onLeave: function (args) {send("_chdir");}});

var _chdrive = Module.findExportByName("crtdll.dll", "_chdrive")
Interceptor.attach(_chdrive, {onLeave: function (args) {send("_chdrive");}});

var _chgsign = Module.findExportByName("crtdll.dll", "_chgsign")
Interceptor.attach(_chgsign, {onLeave: function (args) {send("_chgsign");}});

var _chmod = Module.findExportByName("crtdll.dll", "_chmod")
Interceptor.attach(_chmod, {onLeave: function (args) {send("_chmod");}});

var _chsize = Module.findExportByName("crtdll.dll", "_chsize")
Interceptor.attach(_chsize, {onLeave: function (args) {send("_chsize");}});

var _clearfp = Module.findExportByName("crtdll.dll", "_clearfp")
Interceptor.attach(_clearfp, {onLeave: function (args) {send("_clearfp");}});

var _close = Module.findExportByName("crtdll.dll", "_close")
Interceptor.attach(_close, {onLeave: function (args) {send("_close");}});

var _commit = Module.findExportByName("crtdll.dll", "_commit")
Interceptor.attach(_commit, {onLeave: function (args) {send("_commit");}});

var _commode_dll = Module.findExportByName("crtdll.dll", "_commode_dll")
Interceptor.attach(_commode_dll, {onLeave: function (args) {send("_commode_dll");}});

var _control87 = Module.findExportByName("crtdll.dll", "_control87")
Interceptor.attach(_control87, {onLeave: function (args) {send("_control87");}});

var _controlfp = Module.findExportByName("crtdll.dll", "_controlfp")
Interceptor.attach(_controlfp, {onLeave: function (args) {send("_controlfp");}});

var _copysign = Module.findExportByName("crtdll.dll", "_copysign")
Interceptor.attach(_copysign, {onLeave: function (args) {send("_copysign");}});

var _cprintf = Module.findExportByName("crtdll.dll", "_cprintf")
Interceptor.attach(_cprintf, {onLeave: function (args) {send("_cprintf");}});

var _cpumode_dll = Module.findExportByName("crtdll.dll", "_cpumode_dll")
Interceptor.attach(_cpumode_dll, {onLeave: function (args) {send("_cpumode_dll");}});

var _cputs = Module.findExportByName("crtdll.dll", "_cputs")
Interceptor.attach(_cputs, {onLeave: function (args) {send("_cputs");}});

var _creat = Module.findExportByName("crtdll.dll", "_creat")
Interceptor.attach(_creat, {onLeave: function (args) {send("_creat");}});

var _cscanf = Module.findExportByName("crtdll.dll", "_cscanf")
Interceptor.attach(_cscanf, {onLeave: function (args) {send("_cscanf");}});

var _ctype = Module.findExportByName("crtdll.dll", "_ctype")
Interceptor.attach(_ctype, {onLeave: function (args) {send("_ctype");}});

var _cwait = Module.findExportByName("crtdll.dll", "_cwait")
Interceptor.attach(_cwait, {onLeave: function (args) {send("_cwait");}});

var _daylight_dll = Module.findExportByName("crtdll.dll", "_daylight_dll")
Interceptor.attach(_daylight_dll, {onLeave: function (args) {send("_daylight_dll");}});

var _dup = Module.findExportByName("crtdll.dll", "_dup")
Interceptor.attach(_dup, {onLeave: function (args) {send("_dup");}});

var _dup2 = Module.findExportByName("crtdll.dll", "_dup2")
Interceptor.attach(_dup2, {onLeave: function (args) {send("_dup2");}});

var _ecvt = Module.findExportByName("crtdll.dll", "_ecvt")
Interceptor.attach(_ecvt, {onLeave: function (args) {send("_ecvt");}});

var _endthread = Module.findExportByName("crtdll.dll", "_endthread")
Interceptor.attach(_endthread, {onLeave: function (args) {send("_endthread");}});

var _environ_dll = Module.findExportByName("crtdll.dll", "_environ_dll")
Interceptor.attach(_environ_dll, {onLeave: function (args) {send("_environ_dll");}});

var _eof = Module.findExportByName("crtdll.dll", "_eof")
Interceptor.attach(_eof, {onLeave: function (args) {send("_eof");}});

var _errno = Module.findExportByName("crtdll.dll", "_errno")
Interceptor.attach(_errno, {onLeave: function (args) {send("_errno");}});

var _except_handler2 = Module.findExportByName("crtdll.dll", "_except_handler2")
Interceptor.attach(_except_handler2, {onLeave: function (args) {send("_except_handler2");}});

var _execl = Module.findExportByName("crtdll.dll", "_execl")
Interceptor.attach(_execl, {onLeave: function (args) {send("_execl");}});

var _execle = Module.findExportByName("crtdll.dll", "_execle")
Interceptor.attach(_execle, {onLeave: function (args) {send("_execle");}});

var _execlp = Module.findExportByName("crtdll.dll", "_execlp")
Interceptor.attach(_execlp, {onLeave: function (args) {send("_execlp");}});

var _execlpe = Module.findExportByName("crtdll.dll", "_execlpe")
Interceptor.attach(_execlpe, {onLeave: function (args) {send("_execlpe");}});

var _execv = Module.findExportByName("crtdll.dll", "_execv")
Interceptor.attach(_execv, {onLeave: function (args) {send("_execv");}});

var _execve = Module.findExportByName("crtdll.dll", "_execve")
Interceptor.attach(_execve, {onLeave: function (args) {send("_execve");}});

var _execvp = Module.findExportByName("crtdll.dll", "_execvp")
Interceptor.attach(_execvp, {onLeave: function (args) {send("_execvp");}});

var _execvpe = Module.findExportByName("crtdll.dll", "_execvpe")
Interceptor.attach(_execvpe, {onLeave: function (args) {send("_execvpe");}});

var _exit = Module.findExportByName("crtdll.dll", "_exit")
Interceptor.attach(_exit, {onLeave: function (args) {send("_exit");}});

var _expand = Module.findExportByName("crtdll.dll", "_expand")
Interceptor.attach(_expand, {onLeave: function (args) {send("_expand");}});

var _fcloseall = Module.findExportByName("crtdll.dll", "_fcloseall")
Interceptor.attach(_fcloseall, {onLeave: function (args) {send("_fcloseall");}});

var _fcvt = Module.findExportByName("crtdll.dll", "_fcvt")
Interceptor.attach(_fcvt, {onLeave: function (args) {send("_fcvt");}});

var _fdopen = Module.findExportByName("crtdll.dll", "_fdopen")
Interceptor.attach(_fdopen, {onLeave: function (args) {send("_fdopen");}});

var _fgetchar = Module.findExportByName("crtdll.dll", "_fgetchar")
Interceptor.attach(_fgetchar, {onLeave: function (args) {send("_fgetchar");}});

var _fgetwchar = Module.findExportByName("crtdll.dll", "_fgetwchar")
Interceptor.attach(_fgetwchar, {onLeave: function (args) {send("_fgetwchar");}});

var _filbuf = Module.findExportByName("crtdll.dll", "_filbuf")
Interceptor.attach(_filbuf, {onLeave: function (args) {send("_filbuf");}});

var _fileinfo_dll = Module.findExportByName("crtdll.dll", "_fileinfo_dll")
Interceptor.attach(_fileinfo_dll, {onLeave: function (args) {send("_fileinfo_dll");}});

var _filelength = Module.findExportByName("crtdll.dll", "_filelength")
Interceptor.attach(_filelength, {onLeave: function (args) {send("_filelength");}});

var _fileno = Module.findExportByName("crtdll.dll", "_fileno")
Interceptor.attach(_fileno, {onLeave: function (args) {send("_fileno");}});

var _findclose = Module.findExportByName("crtdll.dll", "_findclose")
Interceptor.attach(_findclose, {onLeave: function (args) {send("_findclose");}});

var _findfirst = Module.findExportByName("crtdll.dll", "_findfirst")
Interceptor.attach(_findfirst, {onLeave: function (args) {send("_findfirst");}});

var _findnext = Module.findExportByName("crtdll.dll", "_findnext")
Interceptor.attach(_findnext, {onLeave: function (args) {send("_findnext");}});

var _finite = Module.findExportByName("crtdll.dll", "_finite")
Interceptor.attach(_finite, {onLeave: function (args) {send("_finite");}});

var _flsbuf = Module.findExportByName("crtdll.dll", "_flsbuf")
Interceptor.attach(_flsbuf, {onLeave: function (args) {send("_flsbuf");}});

var _flushall = Module.findExportByName("crtdll.dll", "_flushall")
Interceptor.attach(_flushall, {onLeave: function (args) {send("_flushall");}});

var _fmode_dll = Module.findExportByName("crtdll.dll", "_fmode_dll")
Interceptor.attach(_fmode_dll, {onLeave: function (args) {send("_fmode_dll");}});

var _fpclass = Module.findExportByName("crtdll.dll", "_fpclass")
Interceptor.attach(_fpclass, {onLeave: function (args) {send("_fpclass");}});

var _fpieee_flt = Module.findExportByName("crtdll.dll", "_fpieee_flt")
Interceptor.attach(_fpieee_flt, {onLeave: function (args) {send("_fpieee_flt");}});

var _fpreset = Module.findExportByName("crtdll.dll", "_fpreset")
Interceptor.attach(_fpreset, {onLeave: function (args) {send("_fpreset");}});

var _fputchar = Module.findExportByName("crtdll.dll", "_fputchar")
Interceptor.attach(_fputchar, {onLeave: function (args) {send("_fputchar");}});

var _fputwchar = Module.findExportByName("crtdll.dll", "_fputwchar")
Interceptor.attach(_fputwchar, {onLeave: function (args) {send("_fputwchar");}});

var _fsopen = Module.findExportByName("crtdll.dll", "_fsopen")
Interceptor.attach(_fsopen, {onLeave: function (args) {send("_fsopen");}});

var _fstat = Module.findExportByName("crtdll.dll", "_fstat")
Interceptor.attach(_fstat, {onLeave: function (args) {send("_fstat");}});

var _ftime = Module.findExportByName("crtdll.dll", "_ftime")
Interceptor.attach(_ftime, {onLeave: function (args) {send("_ftime");}});

var _ftol = Module.findExportByName("crtdll.dll", "_ftol")
Interceptor.attach(_ftol, {onLeave: function (args) {send("_ftol");}});

var _fullpath = Module.findExportByName("crtdll.dll", "_fullpath")
Interceptor.attach(_fullpath, {onLeave: function (args) {send("_fullpath");}});

var _futime = Module.findExportByName("crtdll.dll", "_futime")
Interceptor.attach(_futime, {onLeave: function (args) {send("_futime");}});

var _gcvt = Module.findExportByName("crtdll.dll", "_gcvt")
Interceptor.attach(_gcvt, {onLeave: function (args) {send("_gcvt");}});

var _get_osfhandle = Module.findExportByName("crtdll.dll", "_get_osfhandle")
Interceptor.attach(_get_osfhandle, {onLeave: function (args) {send("_get_osfhandle");}});

var _getch = Module.findExportByName("crtdll.dll", "_getch")
Interceptor.attach(_getch, {onLeave: function (args) {send("_getch");}});

var _getche = Module.findExportByName("crtdll.dll", "_getche")
Interceptor.attach(_getche, {onLeave: function (args) {send("_getche");}});

var _getcwd = Module.findExportByName("crtdll.dll", "_getcwd")
Interceptor.attach(_getcwd, {onLeave: function (args) {send("_getcwd");}});

var _getdcwd = Module.findExportByName("crtdll.dll", "_getdcwd")
Interceptor.attach(_getdcwd, {onLeave: function (args) {send("_getdcwd");}});

var _getdiskfree = Module.findExportByName("crtdll.dll", "_getdiskfree")
Interceptor.attach(_getdiskfree, {onLeave: function (args) {send("_getdiskfree");}});

var _getdllprocaddr = Module.findExportByName("crtdll.dll", "_getdllprocaddr")
Interceptor.attach(_getdllprocaddr, {onLeave: function (args) {send("_getdllprocaddr");}});

var _getdrive = Module.findExportByName("crtdll.dll", "_getdrive")
Interceptor.attach(_getdrive, {onLeave: function (args) {send("_getdrive");}});

var _getdrives = Module.findExportByName("crtdll.dll", "_getdrives")
Interceptor.attach(_getdrives, {onLeave: function (args) {send("_getdrives");}});

var _getpid = Module.findExportByName("crtdll.dll", "_getpid")
Interceptor.attach(_getpid, {onLeave: function (args) {send("_getpid");}});

var _getsystime = Module.findExportByName("crtdll.dll", "_getsystime")
Interceptor.attach(_getsystime, {onLeave: function (args) {send("_getsystime");}});

var _getw = Module.findExportByName("crtdll.dll", "_getw")
Interceptor.attach(_getw, {onLeave: function (args) {send("_getw");}});

var _global_unwind2 = Module.findExportByName("crtdll.dll", "_global_unwind2")
Interceptor.attach(_global_unwind2, {onLeave: function (args) {send("_global_unwind2");}});

var _heapchk = Module.findExportByName("crtdll.dll", "_heapchk")
Interceptor.attach(_heapchk, {onLeave: function (args) {send("_heapchk");}});

var _heapmin = Module.findExportByName("crtdll.dll", "_heapmin")
Interceptor.attach(_heapmin, {onLeave: function (args) {send("_heapmin");}});

var _heapset = Module.findExportByName("crtdll.dll", "_heapset")
Interceptor.attach(_heapset, {onLeave: function (args) {send("_heapset");}});

var _heapwalk = Module.findExportByName("crtdll.dll", "_heapwalk")
Interceptor.attach(_heapwalk, {onLeave: function (args) {send("_heapwalk");}});

var _hypot = Module.findExportByName("crtdll.dll", "_hypot")
Interceptor.attach(_hypot, {onLeave: function (args) {send("_hypot");}});

var _initterm = Module.findExportByName("crtdll.dll", "_initterm")
Interceptor.attach(_initterm, {onLeave: function (args) {send("_initterm");}});

var _iob = Module.findExportByName("crtdll.dll", "_iob")
Interceptor.attach(_iob, {onLeave: function (args) {send("_iob");}});

var _isatty = Module.findExportByName("crtdll.dll", "_isatty")
Interceptor.attach(_isatty, {onLeave: function (args) {send("_isatty");}});

var _isctype = Module.findExportByName("crtdll.dll", "_isctype")
Interceptor.attach(_isctype, {onLeave: function (args) {send("_isctype");}});

var _ismbbalnum = Module.findExportByName("crtdll.dll", "_ismbbalnum")
Interceptor.attach(_ismbbalnum, {onLeave: function (args) {send("_ismbbalnum");}});

var _ismbbalpha = Module.findExportByName("crtdll.dll", "_ismbbalpha")
Interceptor.attach(_ismbbalpha, {onLeave: function (args) {send("_ismbbalpha");}});

var _ismbbgraph = Module.findExportByName("crtdll.dll", "_ismbbgraph")
Interceptor.attach(_ismbbgraph, {onLeave: function (args) {send("_ismbbgraph");}});

var _ismbbkalnum = Module.findExportByName("crtdll.dll", "_ismbbkalnum")
Interceptor.attach(_ismbbkalnum, {onLeave: function (args) {send("_ismbbkalnum");}});

var _ismbbkana = Module.findExportByName("crtdll.dll", "_ismbbkana")
Interceptor.attach(_ismbbkana, {onLeave: function (args) {send("_ismbbkana");}});

var _ismbbkpunct = Module.findExportByName("crtdll.dll", "_ismbbkpunct")
Interceptor.attach(_ismbbkpunct, {onLeave: function (args) {send("_ismbbkpunct");}});

var _ismbblead = Module.findExportByName("crtdll.dll", "_ismbblead")
Interceptor.attach(_ismbblead, {onLeave: function (args) {send("_ismbblead");}});

var _ismbbprint = Module.findExportByName("crtdll.dll", "_ismbbprint")
Interceptor.attach(_ismbbprint, {onLeave: function (args) {send("_ismbbprint");}});

var _ismbbpunct = Module.findExportByName("crtdll.dll", "_ismbbpunct")
Interceptor.attach(_ismbbpunct, {onLeave: function (args) {send("_ismbbpunct");}});

var _ismbbtrail = Module.findExportByName("crtdll.dll", "_ismbbtrail")
Interceptor.attach(_ismbbtrail, {onLeave: function (args) {send("_ismbbtrail");}});

var _ismbcalpha = Module.findExportByName("crtdll.dll", "_ismbcalpha")
Interceptor.attach(_ismbcalpha, {onLeave: function (args) {send("_ismbcalpha");}});

var _ismbcdigit = Module.findExportByName("crtdll.dll", "_ismbcdigit")
Interceptor.attach(_ismbcdigit, {onLeave: function (args) {send("_ismbcdigit");}});

var _ismbchira = Module.findExportByName("crtdll.dll", "_ismbchira")
Interceptor.attach(_ismbchira, {onLeave: function (args) {send("_ismbchira");}});

var _ismbckata = Module.findExportByName("crtdll.dll", "_ismbckata")
Interceptor.attach(_ismbckata, {onLeave: function (args) {send("_ismbckata");}});

var _ismbcl0 = Module.findExportByName("crtdll.dll", "_ismbcl0")
Interceptor.attach(_ismbcl0, {onLeave: function (args) {send("_ismbcl0");}});

var _ismbcl1 = Module.findExportByName("crtdll.dll", "_ismbcl1")
Interceptor.attach(_ismbcl1, {onLeave: function (args) {send("_ismbcl1");}});

var _ismbcl2 = Module.findExportByName("crtdll.dll", "_ismbcl2")
Interceptor.attach(_ismbcl2, {onLeave: function (args) {send("_ismbcl2");}});

var _ismbclegal = Module.findExportByName("crtdll.dll", "_ismbclegal")
Interceptor.attach(_ismbclegal, {onLeave: function (args) {send("_ismbclegal");}});

var _ismbclower = Module.findExportByName("crtdll.dll", "_ismbclower")
Interceptor.attach(_ismbclower, {onLeave: function (args) {send("_ismbclower");}});

var _ismbcprint = Module.findExportByName("crtdll.dll", "_ismbcprint")
Interceptor.attach(_ismbcprint, {onLeave: function (args) {send("_ismbcprint");}});

var _ismbcspace = Module.findExportByName("crtdll.dll", "_ismbcspace")
Interceptor.attach(_ismbcspace, {onLeave: function (args) {send("_ismbcspace");}});

var _ismbcsymbol = Module.findExportByName("crtdll.dll", "_ismbcsymbol")
Interceptor.attach(_ismbcsymbol, {onLeave: function (args) {send("_ismbcsymbol");}});

var _ismbcupper = Module.findExportByName("crtdll.dll", "_ismbcupper")
Interceptor.attach(_ismbcupper, {onLeave: function (args) {send("_ismbcupper");}});

var _ismbslead = Module.findExportByName("crtdll.dll", "_ismbslead")
Interceptor.attach(_ismbslead, {onLeave: function (args) {send("_ismbslead");}});

var _ismbstrail = Module.findExportByName("crtdll.dll", "_ismbstrail")
Interceptor.attach(_ismbstrail, {onLeave: function (args) {send("_ismbstrail");}});

var _isnan = Module.findExportByName("crtdll.dll", "_isnan")
Interceptor.attach(_isnan, {onLeave: function (args) {send("_isnan");}});

var _itoa = Module.findExportByName("crtdll.dll", "_itoa")
Interceptor.attach(_itoa, {onLeave: function (args) {send("_itoa");}});

var _itow = Module.findExportByName("crtdll.dll", "_itow")
Interceptor.attach(_itow, {onLeave: function (args) {send("_itow");}});

var _j0 = Module.findExportByName("crtdll.dll", "_j0")
Interceptor.attach(_j0, {onLeave: function (args) {send("_j0");}});

var _j1 = Module.findExportByName("crtdll.dll", "_j1")
Interceptor.attach(_j1, {onLeave: function (args) {send("_j1");}});

var _jn = Module.findExportByName("crtdll.dll", "_jn")
Interceptor.attach(_jn, {onLeave: function (args) {send("_jn");}});

var _kbhit = Module.findExportByName("crtdll.dll", "_kbhit")
Interceptor.attach(_kbhit, {onLeave: function (args) {send("_kbhit");}});

var _lfind = Module.findExportByName("crtdll.dll", "_lfind")
Interceptor.attach(_lfind, {onLeave: function (args) {send("_lfind");}});

var _loaddll = Module.findExportByName("crtdll.dll", "_loaddll")
Interceptor.attach(_loaddll, {onLeave: function (args) {send("_loaddll");}});

var _local_unwind2 = Module.findExportByName("crtdll.dll", "_local_unwind2")
Interceptor.attach(_local_unwind2, {onLeave: function (args) {send("_local_unwind2");}});

var _locking = Module.findExportByName("crtdll.dll", "_locking")
Interceptor.attach(_locking, {onLeave: function (args) {send("_locking");}});

var _logb = Module.findExportByName("crtdll.dll", "_logb")
Interceptor.attach(_logb, {onLeave: function (args) {send("_logb");}});

var _lrotl = Module.findExportByName("crtdll.dll", "_lrotl")
Interceptor.attach(_lrotl, {onLeave: function (args) {send("_lrotl");}});

var _lrotr = Module.findExportByName("crtdll.dll", "_lrotr")
Interceptor.attach(_lrotr, {onLeave: function (args) {send("_lrotr");}});

var _lsearch = Module.findExportByName("crtdll.dll", "_lsearch")
Interceptor.attach(_lsearch, {onLeave: function (args) {send("_lsearch");}});

var _lseek = Module.findExportByName("crtdll.dll", "_lseek")
Interceptor.attach(_lseek, {onLeave: function (args) {send("_lseek");}});

var _ltoa = Module.findExportByName("crtdll.dll", "_ltoa")
Interceptor.attach(_ltoa, {onLeave: function (args) {send("_ltoa");}});

var _ltow = Module.findExportByName("crtdll.dll", "_ltow")
Interceptor.attach(_ltow, {onLeave: function (args) {send("_ltow");}});

var _makepath = Module.findExportByName("crtdll.dll", "_makepath")
Interceptor.attach(_makepath, {onLeave: function (args) {send("_makepath");}});

var _matherr = Module.findExportByName("crtdll.dll", "_matherr")
Interceptor.attach(_matherr, {onLeave: function (args) {send("_matherr");}});

var _mbbtombc = Module.findExportByName("crtdll.dll", "_mbbtombc")
Interceptor.attach(_mbbtombc, {onLeave: function (args) {send("_mbbtombc");}});

var _mbbtype = Module.findExportByName("crtdll.dll", "_mbbtype")
Interceptor.attach(_mbbtype, {onLeave: function (args) {send("_mbbtype");}});

var _mbccpy = Module.findExportByName("crtdll.dll", "_mbccpy")
Interceptor.attach(_mbccpy, {onLeave: function (args) {send("_mbccpy");}});

var _mbcjistojms = Module.findExportByName("crtdll.dll", "_mbcjistojms")
Interceptor.attach(_mbcjistojms, {onLeave: function (args) {send("_mbcjistojms");}});

var _mbcjmstojis = Module.findExportByName("crtdll.dll", "_mbcjmstojis")
Interceptor.attach(_mbcjmstojis, {onLeave: function (args) {send("_mbcjmstojis");}});

var _mbclen = Module.findExportByName("crtdll.dll", "_mbclen")
Interceptor.attach(_mbclen, {onLeave: function (args) {send("_mbclen");}});

var _mbctohira = Module.findExportByName("crtdll.dll", "_mbctohira")
Interceptor.attach(_mbctohira, {onLeave: function (args) {send("_mbctohira");}});

var _mbctokata = Module.findExportByName("crtdll.dll", "_mbctokata")
Interceptor.attach(_mbctokata, {onLeave: function (args) {send("_mbctokata");}});

var _mbctolower = Module.findExportByName("crtdll.dll", "_mbctolower")
Interceptor.attach(_mbctolower, {onLeave: function (args) {send("_mbctolower");}});

var _mbctombb = Module.findExportByName("crtdll.dll", "_mbctombb")
Interceptor.attach(_mbctombb, {onLeave: function (args) {send("_mbctombb");}});

var _mbctoupper = Module.findExportByName("crtdll.dll", "_mbctoupper")
Interceptor.attach(_mbctoupper, {onLeave: function (args) {send("_mbctoupper");}});

var _mbctype = Module.findExportByName("crtdll.dll", "_mbctype")
Interceptor.attach(_mbctype, {onLeave: function (args) {send("_mbctype");}});

var _mbsbtype = Module.findExportByName("crtdll.dll", "_mbsbtype")
Interceptor.attach(_mbsbtype, {onLeave: function (args) {send("_mbsbtype");}});

var _mbscat = Module.findExportByName("crtdll.dll", "_mbscat")
Interceptor.attach(_mbscat, {onLeave: function (args) {send("_mbscat");}});

var _mbschr = Module.findExportByName("crtdll.dll", "_mbschr")
Interceptor.attach(_mbschr, {onLeave: function (args) {send("_mbschr");}});

var _mbscmp = Module.findExportByName("crtdll.dll", "_mbscmp")
Interceptor.attach(_mbscmp, {onLeave: function (args) {send("_mbscmp");}});

var _mbscpy = Module.findExportByName("crtdll.dll", "_mbscpy")
Interceptor.attach(_mbscpy, {onLeave: function (args) {send("_mbscpy");}});

var _mbscspn = Module.findExportByName("crtdll.dll", "_mbscspn")
Interceptor.attach(_mbscspn, {onLeave: function (args) {send("_mbscspn");}});

var _mbsdec = Module.findExportByName("crtdll.dll", "_mbsdec")
Interceptor.attach(_mbsdec, {onLeave: function (args) {send("_mbsdec");}});

var _mbsdup = Module.findExportByName("crtdll.dll", "_mbsdup")
Interceptor.attach(_mbsdup, {onLeave: function (args) {send("_mbsdup");}});

var _mbsicmp = Module.findExportByName("crtdll.dll", "_mbsicmp")
Interceptor.attach(_mbsicmp, {onLeave: function (args) {send("_mbsicmp");}});

var _mbsinc = Module.findExportByName("crtdll.dll", "_mbsinc")
Interceptor.attach(_mbsinc, {onLeave: function (args) {send("_mbsinc");}});

var _mbslen = Module.findExportByName("crtdll.dll", "_mbslen")
Interceptor.attach(_mbslen, {onLeave: function (args) {send("_mbslen");}});

var _mbslwr = Module.findExportByName("crtdll.dll", "_mbslwr")
Interceptor.attach(_mbslwr, {onLeave: function (args) {send("_mbslwr");}});

var _mbsnbcat = Module.findExportByName("crtdll.dll", "_mbsnbcat")
Interceptor.attach(_mbsnbcat, {onLeave: function (args) {send("_mbsnbcat");}});

var _mbsnbcmp = Module.findExportByName("crtdll.dll", "_mbsnbcmp")
Interceptor.attach(_mbsnbcmp, {onLeave: function (args) {send("_mbsnbcmp");}});

var _mbsnbcnt = Module.findExportByName("crtdll.dll", "_mbsnbcnt")
Interceptor.attach(_mbsnbcnt, {onLeave: function (args) {send("_mbsnbcnt");}});

var _mbsnbcpy = Module.findExportByName("crtdll.dll", "_mbsnbcpy")
Interceptor.attach(_mbsnbcpy, {onLeave: function (args) {send("_mbsnbcpy");}});

var _mbsnbicmp = Module.findExportByName("crtdll.dll", "_mbsnbicmp")
Interceptor.attach(_mbsnbicmp, {onLeave: function (args) {send("_mbsnbicmp");}});

var _mbsnbset = Module.findExportByName("crtdll.dll", "_mbsnbset")
Interceptor.attach(_mbsnbset, {onLeave: function (args) {send("_mbsnbset");}});

var _mbsncat = Module.findExportByName("crtdll.dll", "_mbsncat")
Interceptor.attach(_mbsncat, {onLeave: function (args) {send("_mbsncat");}});

var _mbsnccnt = Module.findExportByName("crtdll.dll", "_mbsnccnt")
Interceptor.attach(_mbsnccnt, {onLeave: function (args) {send("_mbsnccnt");}});

var _mbsncmp = Module.findExportByName("crtdll.dll", "_mbsncmp")
Interceptor.attach(_mbsncmp, {onLeave: function (args) {send("_mbsncmp");}});

var _mbsncpy = Module.findExportByName("crtdll.dll", "_mbsncpy")
Interceptor.attach(_mbsncpy, {onLeave: function (args) {send("_mbsncpy");}});

var _mbsnextc = Module.findExportByName("crtdll.dll", "_mbsnextc")
Interceptor.attach(_mbsnextc, {onLeave: function (args) {send("_mbsnextc");}});

var _mbsnicmp = Module.findExportByName("crtdll.dll", "_mbsnicmp")
Interceptor.attach(_mbsnicmp, {onLeave: function (args) {send("_mbsnicmp");}});

var _mbsninc = Module.findExportByName("crtdll.dll", "_mbsninc")
Interceptor.attach(_mbsninc, {onLeave: function (args) {send("_mbsninc");}});

var _mbsnset = Module.findExportByName("crtdll.dll", "_mbsnset")
Interceptor.attach(_mbsnset, {onLeave: function (args) {send("_mbsnset");}});

var _mbspbrk = Module.findExportByName("crtdll.dll", "_mbspbrk")
Interceptor.attach(_mbspbrk, {onLeave: function (args) {send("_mbspbrk");}});

var _mbsrchr = Module.findExportByName("crtdll.dll", "_mbsrchr")
Interceptor.attach(_mbsrchr, {onLeave: function (args) {send("_mbsrchr");}});

var _mbsrev = Module.findExportByName("crtdll.dll", "_mbsrev")
Interceptor.attach(_mbsrev, {onLeave: function (args) {send("_mbsrev");}});

var _mbsset = Module.findExportByName("crtdll.dll", "_mbsset")
Interceptor.attach(_mbsset, {onLeave: function (args) {send("_mbsset");}});

var _mbsspn = Module.findExportByName("crtdll.dll", "_mbsspn")
Interceptor.attach(_mbsspn, {onLeave: function (args) {send("_mbsspn");}});

var _mbsspnp = Module.findExportByName("crtdll.dll", "_mbsspnp")
Interceptor.attach(_mbsspnp, {onLeave: function (args) {send("_mbsspnp");}});

var _mbsstr = Module.findExportByName("crtdll.dll", "_mbsstr")
Interceptor.attach(_mbsstr, {onLeave: function (args) {send("_mbsstr");}});

var _mbstok = Module.findExportByName("crtdll.dll", "_mbstok")
Interceptor.attach(_mbstok, {onLeave: function (args) {send("_mbstok");}});

var _mbstrlen = Module.findExportByName("crtdll.dll", "_mbstrlen")
Interceptor.attach(_mbstrlen, {onLeave: function (args) {send("_mbstrlen");}});

var _mbsupr = Module.findExportByName("crtdll.dll", "_mbsupr")
Interceptor.attach(_mbsupr, {onLeave: function (args) {send("_mbsupr");}});

var _memccpy = Module.findExportByName("crtdll.dll", "_memccpy")
Interceptor.attach(_memccpy, {onLeave: function (args) {send("_memccpy");}});

var _memicmp = Module.findExportByName("crtdll.dll", "_memicmp")
Interceptor.attach(_memicmp, {onLeave: function (args) {send("_memicmp");}});

var _mkdir = Module.findExportByName("crtdll.dll", "_mkdir")
Interceptor.attach(_mkdir, {onLeave: function (args) {send("_mkdir");}});

var _mktemp = Module.findExportByName("crtdll.dll", "_mktemp")
Interceptor.attach(_mktemp, {onLeave: function (args) {send("_mktemp");}});

var _msize = Module.findExportByName("crtdll.dll", "_msize")
Interceptor.attach(_msize, {onLeave: function (args) {send("_msize");}});

var _nextafter = Module.findExportByName("crtdll.dll", "_nextafter")
Interceptor.attach(_nextafter, {onLeave: function (args) {send("_nextafter");}});

var _onexit = Module.findExportByName("crtdll.dll", "_onexit")
Interceptor.attach(_onexit, {onLeave: function (args) {send("_onexit");}});

var _open = Module.findExportByName("crtdll.dll", "_open")
Interceptor.attach(_open, {onLeave: function (args) {send("_open");}});

var _open_osfhandle = Module.findExportByName("crtdll.dll", "_open_osfhandle")
Interceptor.attach(_open_osfhandle, {onLeave: function (args) {send("_open_osfhandle");}});

var _osmajor_dll = Module.findExportByName("crtdll.dll", "_osmajor_dll")
Interceptor.attach(_osmajor_dll, {onLeave: function (args) {send("_osmajor_dll");}});

var _osminor_dll = Module.findExportByName("crtdll.dll", "_osminor_dll")
Interceptor.attach(_osminor_dll, {onLeave: function (args) {send("_osminor_dll");}});

var _osmode_dll = Module.findExportByName("crtdll.dll", "_osmode_dll")
Interceptor.attach(_osmode_dll, {onLeave: function (args) {send("_osmode_dll");}});

var _osver_dll = Module.findExportByName("crtdll.dll", "_osver_dll")
Interceptor.attach(_osver_dll, {onLeave: function (args) {send("_osver_dll");}});

var _osversion_dll = Module.findExportByName("crtdll.dll", "_osversion_dll")
Interceptor.attach(_osversion_dll, {onLeave: function (args) {send("_osversion_dll");}});

var _pclose = Module.findExportByName("crtdll.dll", "_pclose")
Interceptor.attach(_pclose, {onLeave: function (args) {send("_pclose");}});

var _pctype_dll = Module.findExportByName("crtdll.dll", "_pctype_dll")
Interceptor.attach(_pctype_dll, {onLeave: function (args) {send("_pctype_dll");}});

var _pgmptr_dll = Module.findExportByName("crtdll.dll", "_pgmptr_dll")
Interceptor.attach(_pgmptr_dll, {onLeave: function (args) {send("_pgmptr_dll");}});

var _pipe = Module.findExportByName("crtdll.dll", "_pipe")
Interceptor.attach(_pipe, {onLeave: function (args) {send("_pipe");}});

var _popen = Module.findExportByName("crtdll.dll", "_popen")
Interceptor.attach(_popen, {onLeave: function (args) {send("_popen");}});

var _purecall = Module.findExportByName("crtdll.dll", "_purecall")
Interceptor.attach(_purecall, {onLeave: function (args) {send("_purecall");}});

var _putch = Module.findExportByName("crtdll.dll", "_putch")
Interceptor.attach(_putch, {onLeave: function (args) {send("_putch");}});

var _putenv = Module.findExportByName("crtdll.dll", "_putenv")
Interceptor.attach(_putenv, {onLeave: function (args) {send("_putenv");}});

var _putw = Module.findExportByName("crtdll.dll", "_putw")
Interceptor.attach(_putw, {onLeave: function (args) {send("_putw");}});

var _pwctype_dll = Module.findExportByName("crtdll.dll", "_pwctype_dll")
Interceptor.attach(_pwctype_dll, {onLeave: function (args) {send("_pwctype_dll");}});

var _read = Module.findExportByName("crtdll.dll", "_read")
Interceptor.attach(_read, {onLeave: function (args) {send("_read");}});

var _rmdir = Module.findExportByName("crtdll.dll", "_rmdir")
Interceptor.attach(_rmdir, {onLeave: function (args) {send("_rmdir");}});

var _rmtmp = Module.findExportByName("crtdll.dll", "_rmtmp")
Interceptor.attach(_rmtmp, {onLeave: function (args) {send("_rmtmp");}});

var _rotl = Module.findExportByName("crtdll.dll", "_rotl")
Interceptor.attach(_rotl, {onLeave: function (args) {send("_rotl");}});

var _rotr = Module.findExportByName("crtdll.dll", "_rotr")
Interceptor.attach(_rotr, {onLeave: function (args) {send("_rotr");}});

var _scalb = Module.findExportByName("crtdll.dll", "_scalb")
Interceptor.attach(_scalb, {onLeave: function (args) {send("_scalb");}});

var _searchenv = Module.findExportByName("crtdll.dll", "_searchenv")
Interceptor.attach(_searchenv, {onLeave: function (args) {send("_searchenv");}});

var _seterrormode = Module.findExportByName("crtdll.dll", "_seterrormode")
Interceptor.attach(_seterrormode, {onLeave: function (args) {send("_seterrormode");}});

var _setjmp = Module.findExportByName("crtdll.dll", "_setjmp")
Interceptor.attach(_setjmp, {onLeave: function (args) {send("_setjmp");}});

var _setmode = Module.findExportByName("crtdll.dll", "_setmode")
Interceptor.attach(_setmode, {onLeave: function (args) {send("_setmode");}});

var _setsystime = Module.findExportByName("crtdll.dll", "_setsystime")
Interceptor.attach(_setsystime, {onLeave: function (args) {send("_setsystime");}});

var _sleep = Module.findExportByName("crtdll.dll", "_sleep")
Interceptor.attach(_sleep, {onLeave: function (args) {send("_sleep");}});

var _snprintf = Module.findExportByName("crtdll.dll", "_snprintf")
Interceptor.attach(_snprintf, {onLeave: function (args) {send("_snprintf");}});

var _snwprintf = Module.findExportByName("crtdll.dll", "_snwprintf")
Interceptor.attach(_snwprintf, {onLeave: function (args) {send("_snwprintf");}});

var _sopen = Module.findExportByName("crtdll.dll", "_sopen")
Interceptor.attach(_sopen, {onLeave: function (args) {send("_sopen");}});

var _spawnl = Module.findExportByName("crtdll.dll", "_spawnl")
Interceptor.attach(_spawnl, {onLeave: function (args) {send("_spawnl");}});

var _spawnle = Module.findExportByName("crtdll.dll", "_spawnle")
Interceptor.attach(_spawnle, {onLeave: function (args) {send("_spawnle");}});

var _spawnlp = Module.findExportByName("crtdll.dll", "_spawnlp")
Interceptor.attach(_spawnlp, {onLeave: function (args) {send("_spawnlp");}});

var _spawnlpe = Module.findExportByName("crtdll.dll", "_spawnlpe")
Interceptor.attach(_spawnlpe, {onLeave: function (args) {send("_spawnlpe");}});

var _spawnv = Module.findExportByName("crtdll.dll", "_spawnv")
Interceptor.attach(_spawnv, {onLeave: function (args) {send("_spawnv");}});

var _spawnve = Module.findExportByName("crtdll.dll", "_spawnve")
Interceptor.attach(_spawnve, {onLeave: function (args) {send("_spawnve");}});

var _spawnvp = Module.findExportByName("crtdll.dll", "_spawnvp")
Interceptor.attach(_spawnvp, {onLeave: function (args) {send("_spawnvp");}});

var _spawnvpe = Module.findExportByName("crtdll.dll", "_spawnvpe")
Interceptor.attach(_spawnvpe, {onLeave: function (args) {send("_spawnvpe");}});

var _splitpath = Module.findExportByName("crtdll.dll", "_splitpath")
Interceptor.attach(_splitpath, {onLeave: function (args) {send("_splitpath");}});

var _stat = Module.findExportByName("crtdll.dll", "_stat")
Interceptor.attach(_stat, {onLeave: function (args) {send("_stat");}});

var _statusfp = Module.findExportByName("crtdll.dll", "_statusfp")
Interceptor.attach(_statusfp, {onLeave: function (args) {send("_statusfp");}});

var _strcmpi = Module.findExportByName("crtdll.dll", "_strcmpi")
Interceptor.attach(_strcmpi, {onLeave: function (args) {send("_strcmpi");}});

var _strdate = Module.findExportByName("crtdll.dll", "_strdate")
Interceptor.attach(_strdate, {onLeave: function (args) {send("_strdate");}});

var _strdec = Module.findExportByName("crtdll.dll", "_strdec")
Interceptor.attach(_strdec, {onLeave: function (args) {send("_strdec");}});

var _strdup = Module.findExportByName("crtdll.dll", "_strdup")
Interceptor.attach(_strdup, {onLeave: function (args) {send("_strdup");}});

var _strerror = Module.findExportByName("crtdll.dll", "_strerror")
Interceptor.attach(_strerror, {onLeave: function (args) {send("_strerror");}});

var _stricmp = Module.findExportByName("crtdll.dll", "_stricmp")
Interceptor.attach(_stricmp, {onLeave: function (args) {send("_stricmp");}});

var _stricoll = Module.findExportByName("crtdll.dll", "_stricoll")
Interceptor.attach(_stricoll, {onLeave: function (args) {send("_stricoll");}});

var _strinc = Module.findExportByName("crtdll.dll", "_strinc")
Interceptor.attach(_strinc, {onLeave: function (args) {send("_strinc");}});

var _strlwr = Module.findExportByName("crtdll.dll", "_strlwr")
Interceptor.attach(_strlwr, {onLeave: function (args) {send("_strlwr");}});

var _strncnt = Module.findExportByName("crtdll.dll", "_strncnt")
Interceptor.attach(_strncnt, {onLeave: function (args) {send("_strncnt");}});

var _strnextc = Module.findExportByName("crtdll.dll", "_strnextc")
Interceptor.attach(_strnextc, {onLeave: function (args) {send("_strnextc");}});

var _strnicmp = Module.findExportByName("crtdll.dll", "_strnicmp")
Interceptor.attach(_strnicmp, {onLeave: function (args) {send("_strnicmp");}});

var _strninc = Module.findExportByName("crtdll.dll", "_strninc")
Interceptor.attach(_strninc, {onLeave: function (args) {send("_strninc");}});

var _strnset = Module.findExportByName("crtdll.dll", "_strnset")
Interceptor.attach(_strnset, {onLeave: function (args) {send("_strnset");}});

var _strrev = Module.findExportByName("crtdll.dll", "_strrev")
Interceptor.attach(_strrev, {onLeave: function (args) {send("_strrev");}});

var _strset = Module.findExportByName("crtdll.dll", "_strset")
Interceptor.attach(_strset, {onLeave: function (args) {send("_strset");}});

var _strspnp = Module.findExportByName("crtdll.dll", "_strspnp")
Interceptor.attach(_strspnp, {onLeave: function (args) {send("_strspnp");}});

var _strtime = Module.findExportByName("crtdll.dll", "_strtime")
Interceptor.attach(_strtime, {onLeave: function (args) {send("_strtime");}});

var _strupr = Module.findExportByName("crtdll.dll", "_strupr")
Interceptor.attach(_strupr, {onLeave: function (args) {send("_strupr");}});

var _swab = Module.findExportByName("crtdll.dll", "_swab")
Interceptor.attach(_swab, {onLeave: function (args) {send("_swab");}});

var _sys_errlist = Module.findExportByName("crtdll.dll", "_sys_errlist")
Interceptor.attach(_sys_errlist, {onLeave: function (args) {send("_sys_errlist");}});

var _sys_nerr_dll = Module.findExportByName("crtdll.dll", "_sys_nerr_dll")
Interceptor.attach(_sys_nerr_dll, {onLeave: function (args) {send("_sys_nerr_dll");}});

var _tell = Module.findExportByName("crtdll.dll", "_tell")
Interceptor.attach(_tell, {onLeave: function (args) {send("_tell");}});

var _tempnam = Module.findExportByName("crtdll.dll", "_tempnam")
Interceptor.attach(_tempnam, {onLeave: function (args) {send("_tempnam");}});

var _timezone_dll = Module.findExportByName("crtdll.dll", "_timezone_dll")
Interceptor.attach(_timezone_dll, {onLeave: function (args) {send("_timezone_dll");}});

var _tolower = Module.findExportByName("crtdll.dll", "_tolower")
Interceptor.attach(_tolower, {onLeave: function (args) {send("_tolower");}});

var _toupper = Module.findExportByName("crtdll.dll", "_toupper")
Interceptor.attach(_toupper, {onLeave: function (args) {send("_toupper");}});

var _tzname = Module.findExportByName("crtdll.dll", "_tzname")
Interceptor.attach(_tzname, {onLeave: function (args) {send("_tzname");}});

var _tzset = Module.findExportByName("crtdll.dll", "_tzset")
Interceptor.attach(_tzset, {onLeave: function (args) {send("_tzset");}});

var _ultoa = Module.findExportByName("crtdll.dll", "_ultoa")
Interceptor.attach(_ultoa, {onLeave: function (args) {send("_ultoa");}});

var _ultow = Module.findExportByName("crtdll.dll", "_ultow")
Interceptor.attach(_ultow, {onLeave: function (args) {send("_ultow");}});

var _umask = Module.findExportByName("crtdll.dll", "_umask")
Interceptor.attach(_umask, {onLeave: function (args) {send("_umask");}});

var _ungetch = Module.findExportByName("crtdll.dll", "_ungetch")
Interceptor.attach(_ungetch, {onLeave: function (args) {send("_ungetch");}});

var _unlink = Module.findExportByName("crtdll.dll", "_unlink")
Interceptor.attach(_unlink, {onLeave: function (args) {send("_unlink");}});

var _unloaddll = Module.findExportByName("crtdll.dll", "_unloaddll")
Interceptor.attach(_unloaddll, {onLeave: function (args) {send("_unloaddll");}});

var _utime = Module.findExportByName("crtdll.dll", "_utime")
Interceptor.attach(_utime, {onLeave: function (args) {send("_utime");}});

var _vsnprintf = Module.findExportByName("crtdll.dll", "_vsnprintf")
Interceptor.attach(_vsnprintf, {onLeave: function (args) {send("_vsnprintf");}});

var _vsnwprintf = Module.findExportByName("crtdll.dll", "_vsnwprintf")
Interceptor.attach(_vsnwprintf, {onLeave: function (args) {send("_vsnwprintf");}});

var _wcsdup = Module.findExportByName("crtdll.dll", "_wcsdup")
Interceptor.attach(_wcsdup, {onLeave: function (args) {send("_wcsdup");}});

var _wcsicmp = Module.findExportByName("crtdll.dll", "_wcsicmp")
Interceptor.attach(_wcsicmp, {onLeave: function (args) {send("_wcsicmp");}});

var _wcsicoll = Module.findExportByName("crtdll.dll", "_wcsicoll")
Interceptor.attach(_wcsicoll, {onLeave: function (args) {send("_wcsicoll");}});

var _wcslwr = Module.findExportByName("crtdll.dll", "_wcslwr")
Interceptor.attach(_wcslwr, {onLeave: function (args) {send("_wcslwr");}});

var _wcsnicmp = Module.findExportByName("crtdll.dll", "_wcsnicmp")
Interceptor.attach(_wcsnicmp, {onLeave: function (args) {send("_wcsnicmp");}});

var _wcsnset = Module.findExportByName("crtdll.dll", "_wcsnset")
Interceptor.attach(_wcsnset, {onLeave: function (args) {send("_wcsnset");}});

var _wcsrev = Module.findExportByName("crtdll.dll", "_wcsrev")
Interceptor.attach(_wcsrev, {onLeave: function (args) {send("_wcsrev");}});

var _wcsset = Module.findExportByName("crtdll.dll", "_wcsset")
Interceptor.attach(_wcsset, {onLeave: function (args) {send("_wcsset");}});

var _wcsupr = Module.findExportByName("crtdll.dll", "_wcsupr")
Interceptor.attach(_wcsupr, {onLeave: function (args) {send("_wcsupr");}});

var _winmajor_dll = Module.findExportByName("crtdll.dll", "_winmajor_dll")
Interceptor.attach(_winmajor_dll, {onLeave: function (args) {send("_winmajor_dll");}});

var _winminor_dll = Module.findExportByName("crtdll.dll", "_winminor_dll")
Interceptor.attach(_winminor_dll, {onLeave: function (args) {send("_winminor_dll");}});

var _winver_dll = Module.findExportByName("crtdll.dll", "_winver_dll")
Interceptor.attach(_winver_dll, {onLeave: function (args) {send("_winver_dll");}});

var _write = Module.findExportByName("crtdll.dll", "_write")
Interceptor.attach(_write, {onLeave: function (args) {send("_write");}});

var _wtoi = Module.findExportByName("crtdll.dll", "_wtoi")
Interceptor.attach(_wtoi, {onLeave: function (args) {send("_wtoi");}});

var _wtol = Module.findExportByName("crtdll.dll", "_wtol")
Interceptor.attach(_wtol, {onLeave: function (args) {send("_wtol");}});

var _y0 = Module.findExportByName("crtdll.dll", "_y0")
Interceptor.attach(_y0, {onLeave: function (args) {send("_y0");}});

var _y1 = Module.findExportByName("crtdll.dll", "_y1")
Interceptor.attach(_y1, {onLeave: function (args) {send("_y1");}});

var _yn = Module.findExportByName("crtdll.dll", "_yn")
Interceptor.attach(_yn, {onLeave: function (args) {send("_yn");}});

var abort = Module.findExportByName("crtdll.dll", "abort")
Interceptor.attach(abort, {onLeave: function (args) {send("abort");}});

var abs = Module.findExportByName("crtdll.dll", "abs")
Interceptor.attach(abs, {onLeave: function (args) {send("abs");}});

var acos = Module.findExportByName("crtdll.dll", "acos")
Interceptor.attach(acos, {onLeave: function (args) {send("acos");}});

var asctime = Module.findExportByName("crtdll.dll", "asctime")
Interceptor.attach(asctime, {onLeave: function (args) {send("asctime");}});

var asin = Module.findExportByName("crtdll.dll", "asin")
Interceptor.attach(asin, {onLeave: function (args) {send("asin");}});

var atan = Module.findExportByName("crtdll.dll", "atan")
Interceptor.attach(atan, {onLeave: function (args) {send("atan");}});

var atan2 = Module.findExportByName("crtdll.dll", "atan2")
Interceptor.attach(atan2, {onLeave: function (args) {send("atan2");}});

var atexit = Module.findExportByName("crtdll.dll", "atexit")
Interceptor.attach(atexit, {onLeave: function (args) {send("atexit");}});

var atof = Module.findExportByName("crtdll.dll", "atof")
Interceptor.attach(atof, {onLeave: function (args) {send("atof");}});

var atoi = Module.findExportByName("crtdll.dll", "atoi")
Interceptor.attach(atoi, {onLeave: function (args) {send("atoi");}});

var atol = Module.findExportByName("crtdll.dll", "atol")
Interceptor.attach(atol, {onLeave: function (args) {send("atol");}});

var bsearch = Module.findExportByName("crtdll.dll", "bsearch")
Interceptor.attach(bsearch, {onLeave: function (args) {send("bsearch");}});

var calloc = Module.findExportByName("crtdll.dll", "calloc")
Interceptor.attach(calloc, {onLeave: function (args) {send("calloc");}});

var ceil = Module.findExportByName("crtdll.dll", "ceil")
Interceptor.attach(ceil, {onLeave: function (args) {send("ceil");}});

var clearerr = Module.findExportByName("crtdll.dll", "clearerr")
Interceptor.attach(clearerr, {onLeave: function (args) {send("clearerr");}});

var clock = Module.findExportByName("crtdll.dll", "clock")
Interceptor.attach(clock, {onLeave: function (args) {send("clock");}});

var cos = Module.findExportByName("crtdll.dll", "cos")
Interceptor.attach(cos, {onLeave: function (args) {send("cos");}});

var cosh = Module.findExportByName("crtdll.dll", "cosh")
Interceptor.attach(cosh, {onLeave: function (args) {send("cosh");}});

var ctime = Module.findExportByName("crtdll.dll", "ctime")
Interceptor.attach(ctime, {onLeave: function (args) {send("ctime");}});

var difftime = Module.findExportByName("crtdll.dll", "difftime")
Interceptor.attach(difftime, {onLeave: function (args) {send("difftime");}});

var div = Module.findExportByName("crtdll.dll", "div")
Interceptor.attach(div, {onLeave: function (args) {send("div");}});

var exit = Module.findExportByName("crtdll.dll", "exit")
Interceptor.attach(exit, {onLeave: function (args) {send("exit");}});

var exp = Module.findExportByName("crtdll.dll", "exp")
Interceptor.attach(exp, {onLeave: function (args) {send("exp");}});

var fabs = Module.findExportByName("crtdll.dll", "fabs")
Interceptor.attach(fabs, {onLeave: function (args) {send("fabs");}});

var fclose = Module.findExportByName("crtdll.dll", "fclose")
Interceptor.attach(fclose, {onLeave: function (args) {send("fclose");}});

var feof = Module.findExportByName("crtdll.dll", "feof")
Interceptor.attach(feof, {onLeave: function (args) {send("feof");}});

var ferror = Module.findExportByName("crtdll.dll", "ferror")
Interceptor.attach(ferror, {onLeave: function (args) {send("ferror");}});

var fflush = Module.findExportByName("crtdll.dll", "fflush")
Interceptor.attach(fflush, {onLeave: function (args) {send("fflush");}});

var fgetc = Module.findExportByName("crtdll.dll", "fgetc")
Interceptor.attach(fgetc, {onLeave: function (args) {send("fgetc");}});

var fgetpos = Module.findExportByName("crtdll.dll", "fgetpos")
Interceptor.attach(fgetpos, {onLeave: function (args) {send("fgetpos");}});

var fgets = Module.findExportByName("crtdll.dll", "fgets")
Interceptor.attach(fgets, {onLeave: function (args) {send("fgets");}});

var fgetwc = Module.findExportByName("crtdll.dll", "fgetwc")
Interceptor.attach(fgetwc, {onLeave: function (args) {send("fgetwc");}});

var floor = Module.findExportByName("crtdll.dll", "floor")
Interceptor.attach(floor, {onLeave: function (args) {send("floor");}});

var fmod = Module.findExportByName("crtdll.dll", "fmod")
Interceptor.attach(fmod, {onLeave: function (args) {send("fmod");}});

var fopen = Module.findExportByName("crtdll.dll", "fopen")
Interceptor.attach(fopen, {onLeave: function (args) {send("fopen");}});

var fprintf = Module.findExportByName("crtdll.dll", "fprintf")
Interceptor.attach(fprintf, {onLeave: function (args) {send("fprintf");}});

var fputc = Module.findExportByName("crtdll.dll", "fputc")
Interceptor.attach(fputc, {onLeave: function (args) {send("fputc");}});

var fputs = Module.findExportByName("crtdll.dll", "fputs")
Interceptor.attach(fputs, {onLeave: function (args) {send("fputs");}});

var fputwc = Module.findExportByName("crtdll.dll", "fputwc")
Interceptor.attach(fputwc, {onLeave: function (args) {send("fputwc");}});

var fread = Module.findExportByName("crtdll.dll", "fread")
Interceptor.attach(fread, {onLeave: function (args) {send("fread");}});

var free = Module.findExportByName("crtdll.dll", "free")
Interceptor.attach(free, {onLeave: function (args) {send("free");}});

var freopen = Module.findExportByName("crtdll.dll", "freopen")
Interceptor.attach(freopen, {onLeave: function (args) {send("freopen");}});

var frexp = Module.findExportByName("crtdll.dll", "frexp")
Interceptor.attach(frexp, {onLeave: function (args) {send("frexp");}});

var fscanf = Module.findExportByName("crtdll.dll", "fscanf")
Interceptor.attach(fscanf, {onLeave: function (args) {send("fscanf");}});

var fseek = Module.findExportByName("crtdll.dll", "fseek")
Interceptor.attach(fseek, {onLeave: function (args) {send("fseek");}});

var fsetpos = Module.findExportByName("crtdll.dll", "fsetpos")
Interceptor.attach(fsetpos, {onLeave: function (args) {send("fsetpos");}});

var ftell = Module.findExportByName("crtdll.dll", "ftell")
Interceptor.attach(ftell, {onLeave: function (args) {send("ftell");}});

var fwprintf = Module.findExportByName("crtdll.dll", "fwprintf")
Interceptor.attach(fwprintf, {onLeave: function (args) {send("fwprintf");}});

var fwrite = Module.findExportByName("crtdll.dll", "fwrite")
Interceptor.attach(fwrite, {onLeave: function (args) {send("fwrite");}});

var fwscanf = Module.findExportByName("crtdll.dll", "fwscanf")
Interceptor.attach(fwscanf, {onLeave: function (args) {send("fwscanf");}});

var getc = Module.findExportByName("crtdll.dll", "getc")
Interceptor.attach(getc, {onLeave: function (args) {send("getc");}});

var getchar = Module.findExportByName("crtdll.dll", "getchar")
Interceptor.attach(getchar, {onLeave: function (args) {send("getchar");}});

var getenv = Module.findExportByName("crtdll.dll", "getenv")
Interceptor.attach(getenv, {onLeave: function (args) {send("getenv");}});

var gets = Module.findExportByName("crtdll.dll", "gets")
Interceptor.attach(gets, {onLeave: function (args) {send("gets");}});

var gmtime = Module.findExportByName("crtdll.dll", "gmtime")
Interceptor.attach(gmtime, {onLeave: function (args) {send("gmtime");}});

var is_wctype = Module.findExportByName("crtdll.dll", "is_wctype")
Interceptor.attach(is_wctype, {onLeave: function (args) {send("is_wctype");}});

var isalnum = Module.findExportByName("crtdll.dll", "isalnum")
Interceptor.attach(isalnum, {onLeave: function (args) {send("isalnum");}});

var isalpha = Module.findExportByName("crtdll.dll", "isalpha")
Interceptor.attach(isalpha, {onLeave: function (args) {send("isalpha");}});

var iscntrl = Module.findExportByName("crtdll.dll", "iscntrl")
Interceptor.attach(iscntrl, {onLeave: function (args) {send("iscntrl");}});

var isdigit = Module.findExportByName("crtdll.dll", "isdigit")
Interceptor.attach(isdigit, {onLeave: function (args) {send("isdigit");}});

var isgraph = Module.findExportByName("crtdll.dll", "isgraph")
Interceptor.attach(isgraph, {onLeave: function (args) {send("isgraph");}});

var isleadbyte = Module.findExportByName("crtdll.dll", "isleadbyte")
Interceptor.attach(isleadbyte, {onLeave: function (args) {send("isleadbyte");}});

var islower = Module.findExportByName("crtdll.dll", "islower")
Interceptor.attach(islower, {onLeave: function (args) {send("islower");}});

var isprint = Module.findExportByName("crtdll.dll", "isprint")
Interceptor.attach(isprint, {onLeave: function (args) {send("isprint");}});

var ispunct = Module.findExportByName("crtdll.dll", "ispunct")
Interceptor.attach(ispunct, {onLeave: function (args) {send("ispunct");}});

var isspace = Module.findExportByName("crtdll.dll", "isspace")
Interceptor.attach(isspace, {onLeave: function (args) {send("isspace");}});

var isupper = Module.findExportByName("crtdll.dll", "isupper")
Interceptor.attach(isupper, {onLeave: function (args) {send("isupper");}});

var iswalnum = Module.findExportByName("crtdll.dll", "iswalnum")
Interceptor.attach(iswalnum, {onLeave: function (args) {send("iswalnum");}});

var iswalpha = Module.findExportByName("crtdll.dll", "iswalpha")
Interceptor.attach(iswalpha, {onLeave: function (args) {send("iswalpha");}});

var iswascii = Module.findExportByName("crtdll.dll", "iswascii")
Interceptor.attach(iswascii, {onLeave: function (args) {send("iswascii");}});

var iswcntrl = Module.findExportByName("crtdll.dll", "iswcntrl")
Interceptor.attach(iswcntrl, {onLeave: function (args) {send("iswcntrl");}});

var iswctype = Module.findExportByName("crtdll.dll", "iswctype")
Interceptor.attach(iswctype, {onLeave: function (args) {send("iswctype");}});

var iswdigit = Module.findExportByName("crtdll.dll", "iswdigit")
Interceptor.attach(iswdigit, {onLeave: function (args) {send("iswdigit");}});

var iswgraph = Module.findExportByName("crtdll.dll", "iswgraph")
Interceptor.attach(iswgraph, {onLeave: function (args) {send("iswgraph");}});

var iswlower = Module.findExportByName("crtdll.dll", "iswlower")
Interceptor.attach(iswlower, {onLeave: function (args) {send("iswlower");}});

var iswprint = Module.findExportByName("crtdll.dll", "iswprint")
Interceptor.attach(iswprint, {onLeave: function (args) {send("iswprint");}});

var iswpunct = Module.findExportByName("crtdll.dll", "iswpunct")
Interceptor.attach(iswpunct, {onLeave: function (args) {send("iswpunct");}});

var iswspace = Module.findExportByName("crtdll.dll", "iswspace")
Interceptor.attach(iswspace, {onLeave: function (args) {send("iswspace");}});

var iswupper = Module.findExportByName("crtdll.dll", "iswupper")
Interceptor.attach(iswupper, {onLeave: function (args) {send("iswupper");}});

var iswxdigit = Module.findExportByName("crtdll.dll", "iswxdigit")
Interceptor.attach(iswxdigit, {onLeave: function (args) {send("iswxdigit");}});

var isxdigit = Module.findExportByName("crtdll.dll", "isxdigit")
Interceptor.attach(isxdigit, {onLeave: function (args) {send("isxdigit");}});

var labs = Module.findExportByName("crtdll.dll", "labs")
Interceptor.attach(labs, {onLeave: function (args) {send("labs");}});

var ldexp = Module.findExportByName("crtdll.dll", "ldexp")
Interceptor.attach(ldexp, {onLeave: function (args) {send("ldexp");}});

var ldiv = Module.findExportByName("crtdll.dll", "ldiv")
Interceptor.attach(ldiv, {onLeave: function (args) {send("ldiv");}});

var localeconv = Module.findExportByName("crtdll.dll", "localeconv")
Interceptor.attach(localeconv, {onLeave: function (args) {send("localeconv");}});

var localtime = Module.findExportByName("crtdll.dll", "localtime")
Interceptor.attach(localtime, {onLeave: function (args) {send("localtime");}});

var log = Module.findExportByName("crtdll.dll", "log")
Interceptor.attach(log, {onLeave: function (args) {send("log");}});

var log10 = Module.findExportByName("crtdll.dll", "log10")
Interceptor.attach(log10, {onLeave: function (args) {send("log10");}});

var longjmp = Module.findExportByName("crtdll.dll", "longjmp")
Interceptor.attach(longjmp, {onLeave: function (args) {send("longjmp");}});

var malloc = Module.findExportByName("crtdll.dll", "malloc")
Interceptor.attach(malloc, {onLeave: function (args) {send("malloc");}});

var mblen = Module.findExportByName("crtdll.dll", "mblen")
Interceptor.attach(mblen, {onLeave: function (args) {send("mblen");}});

var mbstowcs = Module.findExportByName("crtdll.dll", "mbstowcs")
Interceptor.attach(mbstowcs, {onLeave: function (args) {send("mbstowcs");}});

var mbtowc = Module.findExportByName("crtdll.dll", "mbtowc")
Interceptor.attach(mbtowc, {onLeave: function (args) {send("mbtowc");}});

var memchr = Module.findExportByName("crtdll.dll", "memchr")
Interceptor.attach(memchr, {onLeave: function (args) {send("memchr");}});

var memcmp = Module.findExportByName("crtdll.dll", "memcmp")
Interceptor.attach(memcmp, {onLeave: function (args) {send("memcmp");}});

var memcpy = Module.findExportByName("crtdll.dll", "memcpy")
Interceptor.attach(memcpy, {onLeave: function (args) {send("memcpy");}});

var memmove = Module.findExportByName("crtdll.dll", "memmove")
Interceptor.attach(memmove, {onLeave: function (args) {send("memmove");}});

var memset = Module.findExportByName("crtdll.dll", "memset")
Interceptor.attach(memset, {onLeave: function (args) {send("memset");}});

var mktime = Module.findExportByName("crtdll.dll", "mktime")
Interceptor.attach(mktime, {onLeave: function (args) {send("mktime");}});

var modf = Module.findExportByName("crtdll.dll", "modf")
Interceptor.attach(modf, {onLeave: function (args) {send("modf");}});

var perror = Module.findExportByName("crtdll.dll", "perror")
Interceptor.attach(perror, {onLeave: function (args) {send("perror");}});

var pow = Module.findExportByName("crtdll.dll", "pow")
Interceptor.attach(pow, {onLeave: function (args) {send("pow");}});

var printf = Module.findExportByName("crtdll.dll", "printf")
Interceptor.attach(printf, {onLeave: function (args) {send("printf");}});

var putc = Module.findExportByName("crtdll.dll", "putc")
Interceptor.attach(putc, {onLeave: function (args) {send("putc");}});

var putchar = Module.findExportByName("crtdll.dll", "putchar")
Interceptor.attach(putchar, {onLeave: function (args) {send("putchar");}});

var puts = Module.findExportByName("crtdll.dll", "puts")
Interceptor.attach(puts, {onLeave: function (args) {send("puts");}});

var qsort = Module.findExportByName("crtdll.dll", "qsort")
Interceptor.attach(qsort, {onLeave: function (args) {send("qsort");}});

var raise = Module.findExportByName("crtdll.dll", "raise")
Interceptor.attach(raise, {onLeave: function (args) {send("raise");}});

var rand = Module.findExportByName("crtdll.dll", "rand")
Interceptor.attach(rand, {onLeave: function (args) {send("rand");}});

var realloc = Module.findExportByName("crtdll.dll", "realloc")
Interceptor.attach(realloc, {onLeave: function (args) {send("realloc");}});

var remove = Module.findExportByName("crtdll.dll", "remove")
Interceptor.attach(remove, {onLeave: function (args) {send("remove");}});

var rename = Module.findExportByName("crtdll.dll", "rename")
Interceptor.attach(rename, {onLeave: function (args) {send("rename");}});

var rewind = Module.findExportByName("crtdll.dll", "rewind")
Interceptor.attach(rewind, {onLeave: function (args) {send("rewind");}});

var scanf = Module.findExportByName("crtdll.dll", "scanf")
Interceptor.attach(scanf, {onLeave: function (args) {send("scanf");}});

var setbuf = Module.findExportByName("crtdll.dll", "setbuf")
Interceptor.attach(setbuf, {onLeave: function (args) {send("setbuf");}});

var setlocale = Module.findExportByName("crtdll.dll", "setlocale")
Interceptor.attach(setlocale, {onLeave: function (args) {send("setlocale");}});

var setvbuf = Module.findExportByName("crtdll.dll", "setvbuf")
Interceptor.attach(setvbuf, {onLeave: function (args) {send("setvbuf");}});

var signal = Module.findExportByName("crtdll.dll", "signal")
Interceptor.attach(signal, {onLeave: function (args) {send("signal");}});

var sin = Module.findExportByName("crtdll.dll", "sin")
Interceptor.attach(sin, {onLeave: function (args) {send("sin");}});

var sinh = Module.findExportByName("crtdll.dll", "sinh")
Interceptor.attach(sinh, {onLeave: function (args) {send("sinh");}});

var sprintf = Module.findExportByName("crtdll.dll", "sprintf")
Interceptor.attach(sprintf, {onLeave: function (args) {send("sprintf");}});

var sqrt = Module.findExportByName("crtdll.dll", "sqrt")
Interceptor.attach(sqrt, {onLeave: function (args) {send("sqrt");}});

var srand = Module.findExportByName("crtdll.dll", "srand")
Interceptor.attach(srand, {onLeave: function (args) {send("srand");}});

var sscanf = Module.findExportByName("crtdll.dll", "sscanf")
Interceptor.attach(sscanf, {onLeave: function (args) {send("sscanf");}});

var strcat = Module.findExportByName("crtdll.dll", "strcat")
Interceptor.attach(strcat, {onLeave: function (args) {send("strcat");}});

var strchr = Module.findExportByName("crtdll.dll", "strchr")
Interceptor.attach(strchr, {onLeave: function (args) {send("strchr");}});

var strcmp = Module.findExportByName("crtdll.dll", "strcmp")
Interceptor.attach(strcmp, {onLeave: function (args) {send("strcmp");}});

var strcoll = Module.findExportByName("crtdll.dll", "strcoll")
Interceptor.attach(strcoll, {onLeave: function (args) {send("strcoll");}});

var strcpy = Module.findExportByName("crtdll.dll", "strcpy")
Interceptor.attach(strcpy, {onLeave: function (args) {send("strcpy");}});

var strcspn = Module.findExportByName("crtdll.dll", "strcspn")
Interceptor.attach(strcspn, {onLeave: function (args) {send("strcspn");}});

var strerror = Module.findExportByName("crtdll.dll", "strerror")
Interceptor.attach(strerror, {onLeave: function (args) {send("strerror");}});

var strftime = Module.findExportByName("crtdll.dll", "strftime")
Interceptor.attach(strftime, {onLeave: function (args) {send("strftime");}});

var strlen = Module.findExportByName("crtdll.dll", "strlen")
Interceptor.attach(strlen, {onLeave: function (args) {send("strlen");}});

var strncat = Module.findExportByName("crtdll.dll", "strncat")
Interceptor.attach(strncat, {onLeave: function (args) {send("strncat");}});

var strncmp = Module.findExportByName("crtdll.dll", "strncmp")
Interceptor.attach(strncmp, {onLeave: function (args) {send("strncmp");}});

var strncpy = Module.findExportByName("crtdll.dll", "strncpy")
Interceptor.attach(strncpy, {onLeave: function (args) {send("strncpy");}});

var strpbrk = Module.findExportByName("crtdll.dll", "strpbrk")
Interceptor.attach(strpbrk, {onLeave: function (args) {send("strpbrk");}});

var strrchr = Module.findExportByName("crtdll.dll", "strrchr")
Interceptor.attach(strrchr, {onLeave: function (args) {send("strrchr");}});

var strspn = Module.findExportByName("crtdll.dll", "strspn")
Interceptor.attach(strspn, {onLeave: function (args) {send("strspn");}});

var strstr = Module.findExportByName("crtdll.dll", "strstr")
Interceptor.attach(strstr, {onLeave: function (args) {send("strstr");}});

var strtod = Module.findExportByName("crtdll.dll", "strtod")
Interceptor.attach(strtod, {onLeave: function (args) {send("strtod");}});

var strtok = Module.findExportByName("crtdll.dll", "strtok")
Interceptor.attach(strtok, {onLeave: function (args) {send("strtok");}});

var strtol = Module.findExportByName("crtdll.dll", "strtol")
Interceptor.attach(strtol, {onLeave: function (args) {send("strtol");}});

var strtoul = Module.findExportByName("crtdll.dll", "strtoul")
Interceptor.attach(strtoul, {onLeave: function (args) {send("strtoul");}});

var strxfrm = Module.findExportByName("crtdll.dll", "strxfrm")
Interceptor.attach(strxfrm, {onLeave: function (args) {send("strxfrm");}});

var swprintf = Module.findExportByName("crtdll.dll", "swprintf")
Interceptor.attach(swprintf, {onLeave: function (args) {send("swprintf");}});

var swscanf = Module.findExportByName("crtdll.dll", "swscanf")
Interceptor.attach(swscanf, {onLeave: function (args) {send("swscanf");}});

var system = Module.findExportByName("crtdll.dll", "system")
Interceptor.attach(system, {onLeave: function (args) {send("system");}});

var tan = Module.findExportByName("crtdll.dll", "tan")
Interceptor.attach(tan, {onLeave: function (args) {send("tan");}});

var tanh = Module.findExportByName("crtdll.dll", "tanh")
Interceptor.attach(tanh, {onLeave: function (args) {send("tanh");}});

var time = Module.findExportByName("crtdll.dll", "time")
Interceptor.attach(time, {onLeave: function (args) {send("time");}});

var tmpfile = Module.findExportByName("crtdll.dll", "tmpfile")
Interceptor.attach(tmpfile, {onLeave: function (args) {send("tmpfile");}});

var tmpnam = Module.findExportByName("crtdll.dll", "tmpnam")
Interceptor.attach(tmpnam, {onLeave: function (args) {send("tmpnam");}});

var tolower = Module.findExportByName("crtdll.dll", "tolower")
Interceptor.attach(tolower, {onLeave: function (args) {send("tolower");}});

var toupper = Module.findExportByName("crtdll.dll", "toupper")
Interceptor.attach(toupper, {onLeave: function (args) {send("toupper");}});

var towlower = Module.findExportByName("crtdll.dll", "towlower")
Interceptor.attach(towlower, {onLeave: function (args) {send("towlower");}});

var towupper = Module.findExportByName("crtdll.dll", "towupper")
Interceptor.attach(towupper, {onLeave: function (args) {send("towupper");}});

var ungetc = Module.findExportByName("crtdll.dll", "ungetc")
Interceptor.attach(ungetc, {onLeave: function (args) {send("ungetc");}});

var ungetwc = Module.findExportByName("crtdll.dll", "ungetwc")
Interceptor.attach(ungetwc, {onLeave: function (args) {send("ungetwc");}});

var vfprintf = Module.findExportByName("crtdll.dll", "vfprintf")
Interceptor.attach(vfprintf, {onLeave: function (args) {send("vfprintf");}});

var vfwprintf = Module.findExportByName("crtdll.dll", "vfwprintf")
Interceptor.attach(vfwprintf, {onLeave: function (args) {send("vfwprintf");}});

var vprintf = Module.findExportByName("crtdll.dll", "vprintf")
Interceptor.attach(vprintf, {onLeave: function (args) {send("vprintf");}});

var vsprintf = Module.findExportByName("crtdll.dll", "vsprintf")
Interceptor.attach(vsprintf, {onLeave: function (args) {send("vsprintf");}});

var vswprintf = Module.findExportByName("crtdll.dll", "vswprintf")
Interceptor.attach(vswprintf, {onLeave: function (args) {send("vswprintf");}});

var vwprintf = Module.findExportByName("crtdll.dll", "vwprintf")
Interceptor.attach(vwprintf, {onLeave: function (args) {send("vwprintf");}});

var wcscat = Module.findExportByName("crtdll.dll", "wcscat")
Interceptor.attach(wcscat, {onLeave: function (args) {send("wcscat");}});

var wcschr = Module.findExportByName("crtdll.dll", "wcschr")
Interceptor.attach(wcschr, {onLeave: function (args) {send("wcschr");}});

var wcscmp = Module.findExportByName("crtdll.dll", "wcscmp")
Interceptor.attach(wcscmp, {onLeave: function (args) {send("wcscmp");}});

var wcscoll = Module.findExportByName("crtdll.dll", "wcscoll")
Interceptor.attach(wcscoll, {onLeave: function (args) {send("wcscoll");}});

var wcscpy = Module.findExportByName("crtdll.dll", "wcscpy")
Interceptor.attach(wcscpy, {onLeave: function (args) {send("wcscpy");}});

var wcscspn = Module.findExportByName("crtdll.dll", "wcscspn")
Interceptor.attach(wcscspn, {onLeave: function (args) {send("wcscspn");}});

var wcsftime = Module.findExportByName("crtdll.dll", "wcsftime")
Interceptor.attach(wcsftime, {onLeave: function (args) {send("wcsftime");}});

var wcslen = Module.findExportByName("crtdll.dll", "wcslen")
Interceptor.attach(wcslen, {onLeave: function (args) {send("wcslen");}});

var wcsncat = Module.findExportByName("crtdll.dll", "wcsncat")
Interceptor.attach(wcsncat, {onLeave: function (args) {send("wcsncat");}});

var wcsncmp = Module.findExportByName("crtdll.dll", "wcsncmp")
Interceptor.attach(wcsncmp, {onLeave: function (args) {send("wcsncmp");}});

var wcsncpy = Module.findExportByName("crtdll.dll", "wcsncpy")
Interceptor.attach(wcsncpy, {onLeave: function (args) {send("wcsncpy");}});

var wcspbrk = Module.findExportByName("crtdll.dll", "wcspbrk")
Interceptor.attach(wcspbrk, {onLeave: function (args) {send("wcspbrk");}});

var wcsrchr = Module.findExportByName("crtdll.dll", "wcsrchr")
Interceptor.attach(wcsrchr, {onLeave: function (args) {send("wcsrchr");}});

var wcsspn = Module.findExportByName("crtdll.dll", "wcsspn")
Interceptor.attach(wcsspn, {onLeave: function (args) {send("wcsspn");}});

var wcsstr = Module.findExportByName("crtdll.dll", "wcsstr")
Interceptor.attach(wcsstr, {onLeave: function (args) {send("wcsstr");}});

var wcstod = Module.findExportByName("crtdll.dll", "wcstod")
Interceptor.attach(wcstod, {onLeave: function (args) {send("wcstod");}});

var wcstok = Module.findExportByName("crtdll.dll", "wcstok")
Interceptor.attach(wcstok, {onLeave: function (args) {send("wcstok");}});

var wcstol = Module.findExportByName("crtdll.dll", "wcstol")
Interceptor.attach(wcstol, {onLeave: function (args) {send("wcstol");}});

var wcstombs = Module.findExportByName("crtdll.dll", "wcstombs")
Interceptor.attach(wcstombs, {onLeave: function (args) {send("wcstombs");}});

var wcstoul = Module.findExportByName("crtdll.dll", "wcstoul")
Interceptor.attach(wcstoul, {onLeave: function (args) {send("wcstoul");}});

var wcsxfrm = Module.findExportByName("crtdll.dll", "wcsxfrm")
Interceptor.attach(wcsxfrm, {onLeave: function (args) {send("wcsxfrm");}});

var wctomb = Module.findExportByName("crtdll.dll", "wctomb")
Interceptor.attach(wctomb, {onLeave: function (args) {send("wctomb");}});

var wprintf = Module.findExportByName("crtdll.dll", "wprintf")
Interceptor.attach(wprintf, {onLeave: function (args) {send("wprintf");}});

var wscanf = Module.findExportByName("crtdll.dll", "wscanf")
Interceptor.attach(wscanf, {onLeave: function (args) {send("wscanf");}});

