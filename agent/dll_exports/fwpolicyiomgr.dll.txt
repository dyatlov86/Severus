var CalculateOpenPortOrAuthAppAddrStringSize = Module.findExportByName("fwpolicyiomgr.dll", "CalculateOpenPortOrAuthAppAddrStringSize")
Interceptor.attach(CalculateOpenPortOrAuthAppAddrStringSize, {onLeave: function (args) {send("CalculateOpenPortOrAuthAppAddrStringSize");}});

var CalculateOpenPortOrAuthAppAddrStringSize2 = Module.findExportByName("fwpolicyiomgr.dll", "CalculateOpenPortOrAuthAppAddrStringSize2")
Interceptor.attach(CalculateOpenPortOrAuthAppAddrStringSize2, {onLeave: function (args) {send("CalculateOpenPortOrAuthAppAddrStringSize2");}});

var CopyIcmpSettings = Module.findExportByName("fwpolicyiomgr.dll", "CopyIcmpSettings")
Interceptor.attach(CopyIcmpSettings, {onLeave: function (args) {send("CopyIcmpSettings");}});

var CopyIcmpV4Rules = Module.findExportByName("fwpolicyiomgr.dll", "CopyIcmpV4Rules")
Interceptor.attach(CopyIcmpV4Rules, {onLeave: function (args) {send("CopyIcmpV4Rules");}});

var CopyIcmpV6Rules = Module.findExportByName("fwpolicyiomgr.dll", "CopyIcmpV6Rules")
Interceptor.attach(CopyIcmpV6Rules, {onLeave: function (args) {send("CopyIcmpV6Rules");}});

var CreateDefaultAuthAppRule = Module.findExportByName("fwpolicyiomgr.dll", "CreateDefaultAuthAppRule")
Interceptor.attach(CreateDefaultAuthAppRule, {onLeave: function (args) {send("CreateDefaultAuthAppRule");}});

var CreateDefaultIcmpRule = Module.findExportByName("fwpolicyiomgr.dll", "CreateDefaultIcmpRule")
Interceptor.attach(CreateDefaultIcmpRule, {onLeave: function (args) {send("CreateDefaultIcmpRule");}});

var CreateDefaultOpenPortRule = Module.findExportByName("fwpolicyiomgr.dll", "CreateDefaultOpenPortRule")
Interceptor.attach(CreateDefaultOpenPortRule, {onLeave: function (args) {send("CreateDefaultOpenPortRule");}});

var CreateDefaultPerInterfaceIcmpRule = Module.findExportByName("fwpolicyiomgr.dll", "CreateDefaultPerInterfaceIcmpRule")
Interceptor.attach(CreateDefaultPerInterfaceIcmpRule, {onLeave: function (args) {send("CreateDefaultPerInterfaceIcmpRule");}});

var CreateDefaultPerInterfaceOpenPortRule = Module.findExportByName("fwpolicyiomgr.dll", "CreateDefaultPerInterfaceOpenPortRule")
Interceptor.attach(CreateDefaultPerInterfaceOpenPortRule, {onLeave: function (args) {send("CreateDefaultPerInterfaceOpenPortRule");}});

var CreateDefaultRemoteAdminRule = Module.findExportByName("fwpolicyiomgr.dll", "CreateDefaultRemoteAdminRule")
Interceptor.attach(CreateDefaultRemoteAdminRule, {onLeave: function (args) {send("CreateDefaultRemoteAdminRule");}});

var CreateDefaultRule = Module.findExportByName("fwpolicyiomgr.dll", "CreateDefaultRule")
Interceptor.attach(CreateDefaultRule, {onLeave: function (args) {send("CreateDefaultRule");}});

var FWDestroyExtensionDllCriticalSection = Module.findExportByName("fwpolicyiomgr.dll", "FWDestroyExtensionDllCriticalSection")
Interceptor.attach(FWDestroyExtensionDllCriticalSection, {onLeave: function (args) {send("FWDestroyExtensionDllCriticalSection");}});

var FWGPLock = Module.findExportByName("fwpolicyiomgr.dll", "FWGPLock")
Interceptor.attach(FWGPLock, {onLeave: function (args) {send("FWGPLock");}});

var FWGPOCleanup = Module.findExportByName("fwpolicyiomgr.dll", "FWGPOCleanup")
Interceptor.attach(FWGPOCleanup, {onLeave: function (args) {send("FWGPOCleanup");}});

var FWGPOSave = Module.findExportByName("fwpolicyiomgr.dll", "FWGPOSave")
Interceptor.attach(FWGPOSave, {onLeave: function (args) {send("FWGPOSave");}});

var FWGPUnlockEx = Module.findExportByName("fwpolicyiomgr.dll", "FWGPUnlockEx")
Interceptor.attach(FWGPUnlockEx, {onLeave: function (args) {send("FWGPUnlockEx");}});

var FWInitExtensionDllCriticalSection = Module.findExportByName("fwpolicyiomgr.dll", "FWInitExtensionDllCriticalSection")
Interceptor.attach(FWInitExtensionDllCriticalSection, {onLeave: function (args) {send("FWInitExtensionDllCriticalSection");}});

var FWOpenGPOAndGetRegKey = Module.findExportByName("fwpolicyiomgr.dll", "FWOpenGPOAndGetRegKey")
Interceptor.attach(FWOpenGPOAndGetRegKey, {onLeave: function (args) {send("FWOpenGPOAndGetRegKey");}});

var FWPrimitivesSetGPHelperFnPtrs = Module.findExportByName("fwpolicyiomgr.dll", "FWPrimitivesSetGPHelperFnPtrs")
Interceptor.attach(FWPrimitivesSetGPHelperFnPtrs, {onLeave: function (args) {send("FWPrimitivesSetGPHelperFnPtrs");}});

var FWResolveGPONames = Module.findExportByName("fwpolicyiomgr.dll", "FWResolveGPONames")
Interceptor.attach(FWResolveGPONames, {onLeave: function (args) {send("FWResolveGPONames");}});

var FWSetGPHelperFnPtrs = Module.findExportByName("fwpolicyiomgr.dll", "FWSetGPHelperFnPtrs")
Interceptor.attach(FWSetGPHelperFnPtrs, {onLeave: function (args) {send("FWSetGPHelperFnPtrs");}});

var FreeAbsoluteInterfaces = Module.findExportByName("fwpolicyiomgr.dll", "FreeAbsoluteInterfaces")
Interceptor.attach(FreeAbsoluteInterfaces, {onLeave: function (args) {send("FreeAbsoluteInterfaces");}});

var FwAddDynamicKeywordAddressInRegistry = Module.findExportByName("fwpolicyiomgr.dll", "FwAddDynamicKeywordAddressInRegistry")
Interceptor.attach(FwAddDynamicKeywordAddressInRegistry, {onLeave: function (args) {send("FwAddDynamicKeywordAddressInRegistry");}});

var FwAddHyperVVMCreatorToRegistry = Module.findExportByName("fwpolicyiomgr.dll", "FwAddHyperVVMCreatorToRegistry")
Interceptor.attach(FwAddHyperVVMCreatorToRegistry, {onLeave: function (args) {send("FwAddHyperVVMCreatorToRegistry");}});

var FwAddRule = Module.findExportByName("fwpolicyiomgr.dll", "FwAddRule")
Interceptor.attach(FwAddRule, {onLeave: function (args) {send("FwAddRule");}});

var FwAddSet = Module.findExportByName("fwpolicyiomgr.dll", "FwAddSet")
Interceptor.attach(FwAddSet, {onLeave: function (args) {send("FwAddSet");}});

var FwAdvPolicyDecodeFirewallRule = Module.findExportByName("fwpolicyiomgr.dll", "FwAdvPolicyDecodeFirewallRule")
Interceptor.attach(FwAdvPolicyDecodeFirewallRule, {onLeave: function (args) {send("FwAdvPolicyDecodeFirewallRule");}});

var FwAdvPolicyEncodeRule = Module.findExportByName("fwpolicyiomgr.dll", "FwAdvPolicyEncodeRule")
Interceptor.attach(FwAdvPolicyEncodeRule, {onLeave: function (args) {send("FwAdvPolicyEncodeRule");}});

var FwAdvPolicyVerifyFirewallRule = Module.findExportByName("fwpolicyiomgr.dll", "FwAdvPolicyVerifyFirewallRule")
Interceptor.attach(FwAdvPolicyVerifyFirewallRule, {onLeave: function (args) {send("FwAdvPolicyVerifyFirewallRule");}});

var FwAppContainerChangeFree = Module.findExportByName("fwpolicyiomgr.dll", "FwAppContainerChangeFree")
Interceptor.attach(FwAppContainerChangeFree, {onLeave: function (args) {send("FwAppContainerChangeFree");}});

var FwAreAllContainedInAddresses = Module.findExportByName("fwpolicyiomgr.dll", "FwAreAllContainedInAddresses")
Interceptor.attach(FwAreAllContainedInAddresses, {onLeave: function (args) {send("FwAreAllContainedInAddresses");}});

var FwAuthSetFree = Module.findExportByName("fwpolicyiomgr.dll", "FwAuthSetFree")
Interceptor.attach(FwAuthSetFree, {onLeave: function (args) {send("FwAuthSetFree");}});

var FwBinariesFree = Module.findExportByName("fwpolicyiomgr.dll", "FwBinariesFree")
Interceptor.attach(FwBinariesFree, {onLeave: function (args) {send("FwBinariesFree");}});

var FwCSRuleEmpty = Module.findExportByName("fwpolicyiomgr.dll", "FwCSRuleEmpty")
Interceptor.attach(FwCSRuleEmpty, {onLeave: function (args) {send("FwCSRuleEmpty");}});

var FwCSRuleEmptyByBinaryVersion = Module.findExportByName("fwpolicyiomgr.dll", "FwCSRuleEmptyByBinaryVersion")
Interceptor.attach(FwCSRuleEmptyByBinaryVersion, {onLeave: function (args) {send("FwCSRuleEmptyByBinaryVersion");}});

var FwCSRuleFree = Module.findExportByName("fwpolicyiomgr.dll", "FwCSRuleFree")
Interceptor.attach(FwCSRuleFree, {onLeave: function (args) {send("FwCSRuleFree");}});

var FwCSRuleVerify = Module.findExportByName("fwpolicyiomgr.dll", "FwCSRuleVerify")
Interceptor.attach(FwCSRuleVerify, {onLeave: function (args) {send("FwCSRuleVerify");}});

var FwChkBuildSidAndAttributesFree = Module.findExportByName("fwpolicyiomgr.dll", "FwChkBuildSidAndAttributesFree")
Interceptor.attach(FwChkBuildSidAndAttributesFree, {onLeave: function (args) {send("FwChkBuildSidAndAttributesFree");}});

var FwCleanupPhase1Sa = Module.findExportByName("fwpolicyiomgr.dll", "FwCleanupPhase1Sa")
Interceptor.attach(FwCleanupPhase1Sa, {onLeave: function (args) {send("FwCleanupPhase1Sa");}});

var FwClosePolicyStore = Module.findExportByName("fwpolicyiomgr.dll", "FwClosePolicyStore")
Interceptor.attach(FwClosePolicyStore, {onLeave: function (args) {send("FwClosePolicyStore");}});

var FwCompareCSRule = Module.findExportByName("fwpolicyiomgr.dll", "FwCompareCSRule")
Interceptor.attach(FwCompareCSRule, {onLeave: function (args) {send("FwCompareCSRule");}});

var FwCompareFWRule = Module.findExportByName("fwpolicyiomgr.dll", "FwCompareFWRule")
Interceptor.attach(FwCompareFWRule, {onLeave: function (args) {send("FwCompareFWRule");}});

var FwConvertFwRuleToHyperVRule = Module.findExportByName("fwpolicyiomgr.dll", "FwConvertFwRuleToHyperVRule")
Interceptor.attach(FwConvertFwRuleToHyperVRule, {onLeave: function (args) {send("FwConvertFwRuleToHyperVRule");}});

var FwConvertIPv6SubNetToRange = Module.findExportByName("fwpolicyiomgr.dll", "FwConvertIPv6SubNetToRange")
Interceptor.attach(FwConvertIPv6SubNetToRange, {onLeave: function (args) {send("FwConvertIPv6SubNetToRange");}});

var FwCopyAuthSetListToLowerVersion = Module.findExportByName("fwpolicyiomgr.dll", "FwCopyAuthSetListToLowerVersion")
Interceptor.attach(FwCopyAuthSetListToLowerVersion, {onLeave: function (args) {send("FwCopyAuthSetListToLowerVersion");}});

var FwCopyAuthSetToLowerVersion = Module.findExportByName("fwpolicyiomgr.dll", "FwCopyAuthSetToLowerVersion")
Interceptor.attach(FwCopyAuthSetToLowerVersion, {onLeave: function (args) {send("FwCopyAuthSetToLowerVersion");}});

var FwCopyAuthsetToHigherVersion = Module.findExportByName("fwpolicyiomgr.dll", "FwCopyAuthsetToHigherVersion")
Interceptor.attach(FwCopyAuthsetToHigherVersion, {onLeave: function (args) {send("FwCopyAuthsetToHigherVersion");}});

var FwCopyCSRule = Module.findExportByName("fwpolicyiomgr.dll", "FwCopyCSRule")
Interceptor.attach(FwCopyCSRule, {onLeave: function (args) {send("FwCopyCSRule");}});

var FwCopyCryptoSet = Module.findExportByName("fwpolicyiomgr.dll", "FwCopyCryptoSet")
Interceptor.attach(FwCopyCryptoSet, {onLeave: function (args) {send("FwCopyCryptoSet");}});

var FwCopyHyperVPort = Module.findExportByName("fwpolicyiomgr.dll", "FwCopyHyperVPort")
Interceptor.attach(FwCopyHyperVPort, {onLeave: function (args) {send("FwCopyHyperVPort");}});

var FwCopyHyperVRule = Module.findExportByName("fwpolicyiomgr.dll", "FwCopyHyperVRule")
Interceptor.attach(FwCopyHyperVRule, {onLeave: function (args) {send("FwCopyHyperVRule");}});

var FwCopyHyperVVMCreator = Module.findExportByName("fwpolicyiomgr.dll", "FwCopyHyperVVMCreator")
Interceptor.attach(FwCopyHyperVVMCreator, {onLeave: function (args) {send("FwCopyHyperVVMCreator");}});

var FwCopyICMPTypeCode = Module.findExportByName("fwpolicyiomgr.dll", "FwCopyICMPTypeCode")
Interceptor.attach(FwCopyICMPTypeCode, {onLeave: function (args) {send("FwCopyICMPTypeCode");}});

var FwCopyInterfaceIndexes = Module.findExportByName("fwpolicyiomgr.dll", "FwCopyInterfaceIndexes")
Interceptor.attach(FwCopyInterfaceIndexes, {onLeave: function (args) {send("FwCopyInterfaceIndexes");}});

var FwCopyInterfaceLuids = Module.findExportByName("fwpolicyiomgr.dll", "FwCopyInterfaceLuids")
Interceptor.attach(FwCopyInterfaceLuids, {onLeave: function (args) {send("FwCopyInterfaceLuids");}});

var FwCopyLUID = Module.findExportByName("fwpolicyiomgr.dll", "FwCopyLUID")
Interceptor.attach(FwCopyLUID, {onLeave: function (args) {send("FwCopyLUID");}});

var FwCopyMMRule = Module.findExportByName("fwpolicyiomgr.dll", "FwCopyMMRule")
Interceptor.attach(FwCopyMMRule, {onLeave: function (args) {send("FwCopyMMRule");}});

var FwCopyPlatform = Module.findExportByName("fwpolicyiomgr.dll", "FwCopyPlatform")
Interceptor.attach(FwCopyPlatform, {onLeave: function (args) {send("FwCopyPlatform");}});

var FwCopyPortRange = Module.findExportByName("fwpolicyiomgr.dll", "FwCopyPortRange")
Interceptor.attach(FwCopyPortRange, {onLeave: function (args) {send("FwCopyPortRange");}});

var FwCopyPortsContents = Module.findExportByName("fwpolicyiomgr.dll", "FwCopyPortsContents")
Interceptor.attach(FwCopyPortsContents, {onLeave: function (args) {send("FwCopyPortsContents");}});

var FwCopyRule = Module.findExportByName("fwpolicyiomgr.dll", "FwCopyRule")
Interceptor.attach(FwCopyRule, {onLeave: function (args) {send("FwCopyRule");}});

var FwCountAuthAppRules = Module.findExportByName("fwpolicyiomgr.dll", "FwCountAuthAppRules")
Interceptor.attach(FwCountAuthAppRules, {onLeave: function (args) {send("FwCountAuthAppRules");}});

var FwCountGlobalOpenPortRules = Module.findExportByName("fwpolicyiomgr.dll", "FwCountGlobalOpenPortRules")
Interceptor.attach(FwCountGlobalOpenPortRules, {onLeave: function (args) {send("FwCountGlobalOpenPortRules");}});

var FwCreateLocalTempStore = Module.findExportByName("fwpolicyiomgr.dll", "FwCreateLocalTempStore")
Interceptor.attach(FwCreateLocalTempStore, {onLeave: function (args) {send("FwCreateLocalTempStore");}});

var FwCryptoSetFree = Module.findExportByName("fwpolicyiomgr.dll", "FwCryptoSetFree")
Interceptor.attach(FwCryptoSetFree, {onLeave: function (args) {send("FwCryptoSetFree");}});

var FwDecodeDynamicKeywordAddress = Module.findExportByName("fwpolicyiomgr.dll", "FwDecodeDynamicKeywordAddress")
Interceptor.attach(FwDecodeDynamicKeywordAddress, {onLeave: function (args) {send("FwDecodeDynamicKeywordAddress");}});

var FwDeleteAllRules = Module.findExportByName("fwpolicyiomgr.dll", "FwDeleteAllRules")
Interceptor.attach(FwDeleteAllRules, {onLeave: function (args) {send("FwDeleteAllRules");}});

var FwDeleteAllSets = Module.findExportByName("fwpolicyiomgr.dll", "FwDeleteAllSets")
Interceptor.attach(FwDeleteAllSets, {onLeave: function (args) {send("FwDeleteAllSets");}});

var FwDeleteDynamicKeywordAddressInRegistry = Module.findExportByName("fwpolicyiomgr.dll", "FwDeleteDynamicKeywordAddressInRegistry")
Interceptor.attach(FwDeleteDynamicKeywordAddressInRegistry, {onLeave: function (args) {send("FwDeleteDynamicKeywordAddressInRegistry");}});

var FwDeleteHyperVVMCreatorFromRegistry = Module.findExportByName("fwpolicyiomgr.dll", "FwDeleteHyperVVMCreatorFromRegistry")
Interceptor.attach(FwDeleteHyperVVMCreatorFromRegistry, {onLeave: function (args) {send("FwDeleteHyperVVMCreatorFromRegistry");}});

var FwDeleteRule = Module.findExportByName("fwpolicyiomgr.dll", "FwDeleteRule")
Interceptor.attach(FwDeleteRule, {onLeave: function (args) {send("FwDeleteRule");}});

var FwDeleteSet = Module.findExportByName("fwpolicyiomgr.dll", "FwDeleteSet")
Interceptor.attach(FwDeleteSet, {onLeave: function (args) {send("FwDeleteSet");}});

var FwDestroyLocalTempStore = Module.findExportByName("fwpolicyiomgr.dll", "FwDestroyLocalTempStore")
Interceptor.attach(FwDestroyLocalTempStore, {onLeave: function (args) {send("FwDestroyLocalTempStore");}});

var FwDoNothingOnObject = Module.findExportByName("fwpolicyiomgr.dll", "FwDoNothingOnObject")
Interceptor.attach(FwDoNothingOnObject, {onLeave: function (args) {send("FwDoNothingOnObject");}});

var FwDownlevelAuthSetFree = Module.findExportByName("fwpolicyiomgr.dll", "FwDownlevelAuthSetFree")
Interceptor.attach(FwDownlevelAuthSetFree, {onLeave: function (args) {send("FwDownlevelAuthSetFree");}});

var FwDownlevelFirewallRuleEmpty = Module.findExportByName("fwpolicyiomgr.dll", "FwDownlevelFirewallRuleEmpty")
Interceptor.attach(FwDownlevelFirewallRuleEmpty, {onLeave: function (args) {send("FwDownlevelFirewallRuleEmpty");}});

var FwDynamicKeywordAddressIsStringValid = Module.findExportByName("fwpolicyiomgr.dll", "FwDynamicKeywordAddressIsStringValid")
Interceptor.attach(FwDynamicKeywordAddressIsStringValid, {onLeave: function (args) {send("FwDynamicKeywordAddressIsStringValid");}});

var FwEmptyWFRule = Module.findExportByName("fwpolicyiomgr.dll", "FwEmptyWFRule")
Interceptor.attach(FwEmptyWFRule, {onLeave: function (args) {send("FwEmptyWFRule");}});

var FwEncodeDynamicKeywordAddress = Module.findExportByName("fwpolicyiomgr.dll", "FwEncodeDynamicKeywordAddress")
Interceptor.attach(FwEncodeDynamicKeywordAddress, {onLeave: function (args) {send("FwEncodeDynamicKeywordAddress");}});

var FwEncodeSyntacticallyImportantFields = Module.findExportByName("fwpolicyiomgr.dll", "FwEncodeSyntacticallyImportantFields")
Interceptor.attach(FwEncodeSyntacticallyImportantFields, {onLeave: function (args) {send("FwEncodeSyntacticallyImportantFields");}});

var FwEncodeSyntacticallyImportantFieldsInt = Module.findExportByName("fwpolicyiomgr.dll", "FwEncodeSyntacticallyImportantFieldsInt")
Interceptor.attach(FwEncodeSyntacticallyImportantFieldsInt, {onLeave: function (args) {send("FwEncodeSyntacticallyImportantFieldsInt");}});

var FwEnumAllDynamicKeywordAddressesInRegistry = Module.findExportByName("fwpolicyiomgr.dll", "FwEnumAllDynamicKeywordAddressesInRegistry")
Interceptor.attach(FwEnumAllDynamicKeywordAddressesInRegistry, {onLeave: function (args) {send("FwEnumAllDynamicKeywordAddressesInRegistry");}});

var FwEnumHyperVVMCreatorsFromRegistry = Module.findExportByName("fwpolicyiomgr.dll", "FwEnumHyperVVMCreatorsFromRegistry")
Interceptor.attach(FwEnumHyperVVMCreatorsFromRegistry, {onLeave: function (args) {send("FwEnumHyperVVMCreatorsFromRegistry");}});

var FwEnumRules = Module.findExportByName("fwpolicyiomgr.dll", "FwEnumRules")
Interceptor.attach(FwEnumRules, {onLeave: function (args) {send("FwEnumRules");}});

var FwEnumSets = Module.findExportByName("fwpolicyiomgr.dll", "FwEnumSets")
Interceptor.attach(FwEnumSets, {onLeave: function (args) {send("FwEnumSets");}});

var FwEraseGPOStoreBaseKey = Module.findExportByName("fwpolicyiomgr.dll", "FwEraseGPOStoreBaseKey")
Interceptor.attach(FwEraseGPOStoreBaseKey, {onLeave: function (args) {send("FwEraseGPOStoreBaseKey");}});

var FwFindMatchingOpenPortRule = Module.findExportByName("fwpolicyiomgr.dll", "FwFindMatchingOpenPortRule")
Interceptor.attach(FwFindMatchingOpenPortRule, {onLeave: function (args) {send("FwFindMatchingOpenPortRule");}});

var FwFreeDynamicKeywordAddressDataBySchemaVersion = Module.findExportByName("fwpolicyiomgr.dll", "FwFreeDynamicKeywordAddressDataBySchemaVersion")
Interceptor.attach(FwFreeDynamicKeywordAddressDataBySchemaVersion, {onLeave: function (args) {send("FwFreeDynamicKeywordAddressDataBySchemaVersion");}});

var FwFreeDynamicKeywordAddressesInternal = Module.findExportByName("fwpolicyiomgr.dll", "FwFreeDynamicKeywordAddressesInternal")
Interceptor.attach(FwFreeDynamicKeywordAddressesInternal, {onLeave: function (args) {send("FwFreeDynamicKeywordAddressesInternal");}});

var FwFreeHyperVPortsBySchemaVersion = Module.findExportByName("fwpolicyiomgr.dll", "FwFreeHyperVPortsBySchemaVersion")
Interceptor.attach(FwFreeHyperVPortsBySchemaVersion, {onLeave: function (args) {send("FwFreeHyperVPortsBySchemaVersion");}});

var FwFreeHyperVRulesBySchemaVersion = Module.findExportByName("fwpolicyiomgr.dll", "FwFreeHyperVRulesBySchemaVersion")
Interceptor.attach(FwFreeHyperVRulesBySchemaVersion, {onLeave: function (args) {send("FwFreeHyperVRulesBySchemaVersion");}});

var FwFreeHyperVVMCreatorsBySchemaVersion = Module.findExportByName("fwpolicyiomgr.dll", "FwFreeHyperVVMCreatorsBySchemaVersion")
Interceptor.attach(FwFreeHyperVVMCreatorsBySchemaVersion, {onLeave: function (args) {send("FwFreeHyperVVMCreatorsBySchemaVersion");}});

var FwFreeObjects = Module.findExportByName("fwpolicyiomgr.dll", "FwFreeObjects")
Interceptor.attach(FwFreeObjects, {onLeave: function (args) {send("FwFreeObjects");}});

var FwFreeRules = Module.findExportByName("fwpolicyiomgr.dll", "FwFreeRules")
Interceptor.attach(FwFreeRules, {onLeave: function (args) {send("FwFreeRules");}});

var FwFreeSets = Module.findExportByName("fwpolicyiomgr.dll", "FwFreeSets")
Interceptor.attach(FwFreeSets, {onLeave: function (args) {send("FwFreeSets");}});

var FwFreeWFRule = Module.findExportByName("fwpolicyiomgr.dll", "FwFreeWFRule")
Interceptor.attach(FwFreeWFRule, {onLeave: function (args) {send("FwFreeWFRule");}});

var FwGetConfig = Module.findExportByName("fwpolicyiomgr.dll", "FwGetConfig")
Interceptor.attach(FwGetConfig, {onLeave: function (args) {send("FwGetConfig");}});

var FwGetDynamicKeywordOriginFromStoreType = Module.findExportByName("fwpolicyiomgr.dll", "FwGetDynamicKeywordOriginFromStoreType")
Interceptor.attach(FwGetDynamicKeywordOriginFromStoreType, {onLeave: function (args) {send("FwGetDynamicKeywordOriginFromStoreType");}});

var FwGetGlobalConfig = Module.findExportByName("fwpolicyiomgr.dll", "FwGetGlobalConfig")
Interceptor.attach(FwGetGlobalConfig, {onLeave: function (args) {send("FwGetGlobalConfig");}});

var FwGetGlobalConfigFromLocalTempStore = Module.findExportByName("fwpolicyiomgr.dll", "FwGetGlobalConfigFromLocalTempStore")
Interceptor.attach(FwGetGlobalConfigFromLocalTempStore, {onLeave: function (args) {send("FwGetGlobalConfigFromLocalTempStore");}});

var FwGetHyperVProfileConfigFromRegistry = Module.findExportByName("fwpolicyiomgr.dll", "FwGetHyperVProfileConfigFromRegistry")
Interceptor.attach(FwGetHyperVProfileConfigFromRegistry, {onLeave: function (args) {send("FwGetHyperVProfileConfigFromRegistry");}});

var FwGetHyperVVMConfigFromRegistry = Module.findExportByName("fwpolicyiomgr.dll", "FwGetHyperVVMConfigFromRegistry")
Interceptor.attach(FwGetHyperVVMConfigFromRegistry, {onLeave: function (args) {send("FwGetHyperVVMConfigFromRegistry");}});

var FwGetHyperVVMCreatorIdsFromRegistry = Module.findExportByName("fwpolicyiomgr.dll", "FwGetHyperVVMCreatorIdsFromRegistry")
Interceptor.attach(FwGetHyperVVMCreatorIdsFromRegistry, {onLeave: function (args) {send("FwGetHyperVVMCreatorIdsFromRegistry");}});

var FwGetRule = Module.findExportByName("fwpolicyiomgr.dll", "FwGetRule")
Interceptor.attach(FwGetRule, {onLeave: function (args) {send("FwGetRule");}});

var FwGetStoreTypeFromDynamicKeywordOriginType = Module.findExportByName("fwpolicyiomgr.dll", "FwGetStoreTypeFromDynamicKeywordOriginType")
Interceptor.attach(FwGetStoreTypeFromDynamicKeywordOriginType, {onLeave: function (args) {send("FwGetStoreTypeFromDynamicKeywordOriginType");}});

var FwHyperVRuleVerify = Module.findExportByName("fwpolicyiomgr.dll", "FwHyperVRuleVerify")
Interceptor.attach(FwHyperVRuleVerify, {onLeave: function (args) {send("FwHyperVRuleVerify");}});

var FwICFProfileToWfProfile = Module.findExportByName("fwpolicyiomgr.dll", "FwICFProfileToWfProfile")
Interceptor.attach(FwICFProfileToWfProfile, {onLeave: function (args) {send("FwICFProfileToWfProfile");}});

var FwICFProtocolToWfProtocol = Module.findExportByName("fwpolicyiomgr.dll", "FwICFProtocolToWfProtocol")
Interceptor.attach(FwICFProtocolToWfProtocol, {onLeave: function (args) {send("FwICFProtocolToWfProtocol");}});

var FwIPV4RangeContainsMulticast = Module.findExportByName("fwpolicyiomgr.dll", "FwIPV4RangeContainsMulticast")
Interceptor.attach(FwIPV4RangeContainsMulticast, {onLeave: function (args) {send("FwIPV4RangeContainsMulticast");}});

var FwIPV6RangeContainsMulticast = Module.findExportByName("fwpolicyiomgr.dll", "FwIPV6RangeContainsMulticast")
Interceptor.attach(FwIPV6RangeContainsMulticast, {onLeave: function (args) {send("FwIPV6RangeContainsMulticast");}});

var FwInvertAddresses = Module.findExportByName("fwpolicyiomgr.dll", "FwInvertAddresses")
Interceptor.attach(FwInvertAddresses, {onLeave: function (args) {send("FwInvertAddresses");}});

var FwIsV6AddrLoopback = Module.findExportByName("fwpolicyiomgr.dll", "FwIsV6AddrLoopback")
Interceptor.attach(FwIsV6AddrLoopback, {onLeave: function (args) {send("FwIsV6AddrLoopback");}});

var FwMMRuleFree = Module.findExportByName("fwpolicyiomgr.dll", "FwMMRuleFree")
Interceptor.attach(FwMMRuleFree, {onLeave: function (args) {send("FwMMRuleFree");}});

var FwMMRuleVerify = Module.findExportByName("fwpolicyiomgr.dll", "FwMMRuleVerify")
Interceptor.attach(FwMMRuleVerify, {onLeave: function (args) {send("FwMMRuleVerify");}});

var FwMigrateLegacyAuthenticatedBypassSddl = Module.findExportByName("fwpolicyiomgr.dll", "FwMigrateLegacyAuthenticatedBypassSddl")
Interceptor.attach(FwMigrateLegacyAuthenticatedBypassSddl, {onLeave: function (args) {send("FwMigrateLegacyAuthenticatedBypassSddl");}});

var FwMigrateLegacySettings = Module.findExportByName("fwpolicyiomgr.dll", "FwMigrateLegacySettings")
Interceptor.attach(FwMigrateLegacySettings, {onLeave: function (args) {send("FwMigrateLegacySettings");}});

var FwNegateAddresses = Module.findExportByName("fwpolicyiomgr.dll", "FwNegateAddresses")
Interceptor.attach(FwNegateAddresses, {onLeave: function (args) {send("FwNegateAddresses");}});

var FwOpenAppCDbPolicyStore = Module.findExportByName("fwpolicyiomgr.dll", "FwOpenAppCDbPolicyStore")
Interceptor.attach(FwOpenAppCDbPolicyStore, {onLeave: function (args) {send("FwOpenAppCDbPolicyStore");}});

var FwOpenOfflinePolicyStore = Module.findExportByName("fwpolicyiomgr.dll", "FwOpenOfflinePolicyStore")
Interceptor.attach(FwOpenOfflinePolicyStore, {onLeave: function (args) {send("FwOpenOfflinePolicyStore");}});

var FwOpenPolicyStore = Module.findExportByName("fwpolicyiomgr.dll", "FwOpenPolicyStore")
Interceptor.attach(FwOpenPolicyStore, {onLeave: function (args) {send("FwOpenPolicyStore");}});

var FwParseAddressToken = Module.findExportByName("fwpolicyiomgr.dll", "FwParseAddressToken")
Interceptor.attach(FwParseAddressToken, {onLeave: function (args) {send("FwParseAddressToken");}});

var FwParseAllPortVersions = Module.findExportByName("fwpolicyiomgr.dll", "FwParseAllPortVersions")
Interceptor.attach(FwParseAllPortVersions, {onLeave: function (args) {send("FwParseAllPortVersions");}});

var FwParseICMPTypeCodes = Module.findExportByName("fwpolicyiomgr.dll", "FwParseICMPTypeCodes")
Interceptor.attach(FwParseICMPTypeCodes, {onLeave: function (args) {send("FwParseICMPTypeCodes");}});

var FwParseInterfaceType = Module.findExportByName("fwpolicyiomgr.dll", "FwParseInterfaceType")
Interceptor.attach(FwParseInterfaceType, {onLeave: function (args) {send("FwParseInterfaceType");}});

var FwPolioConvertIPv6SubNetToRange = Module.findExportByName("fwpolicyiomgr.dll", "FwPolioConvertIPv6SubNetToRange")
Interceptor.attach(FwPolioConvertIPv6SubNetToRange, {onLeave: function (args) {send("FwPolioConvertIPv6SubNetToRange");}});

var FwPolioCopyAuthSet = Module.findExportByName("fwpolicyiomgr.dll", "FwPolioCopyAuthSet")
Interceptor.attach(FwPolioCopyAuthSet, {onLeave: function (args) {send("FwPolioCopyAuthSet");}});

var FwPolioCopyWFAddressesContents = Module.findExportByName("fwpolicyiomgr.dll", "FwPolioCopyWFAddressesContents")
Interceptor.attach(FwPolioCopyWFAddressesContents, {onLeave: function (args) {send("FwPolioCopyWFAddressesContents");}});

var FwPolioEmptyWFAddresses = Module.findExportByName("fwpolicyiomgr.dll", "FwPolioEmptyWFAddresses")
Interceptor.attach(FwPolioEmptyWFAddresses, {onLeave: function (args) {send("FwPolioEmptyWFAddresses");}});

var FwPolioMergeAddresses = Module.findExportByName("fwpolicyiomgr.dll", "FwPolioMergeAddresses")
Interceptor.attach(FwPolioMergeAddresses, {onLeave: function (args) {send("FwPolioMergeAddresses");}});

var FwReduceHyperVRulesToVersion = Module.findExportByName("fwpolicyiomgr.dll", "FwReduceHyperVRulesToVersion")
Interceptor.attach(FwReduceHyperVRulesToVersion, {onLeave: function (args) {send("FwReduceHyperVRulesToVersion");}});

var FwReduceObjectsToVersion = Module.findExportByName("fwpolicyiomgr.dll", "FwReduceObjectsToVersion")
Interceptor.attach(FwReduceObjectsToVersion, {onLeave: function (args) {send("FwReduceObjectsToVersion");}});

var FwRemoveDuplicateAddresses = Module.findExportByName("fwpolicyiomgr.dll", "FwRemoveDuplicateAddresses")
Interceptor.attach(FwRemoveDuplicateAddresses, {onLeave: function (args) {send("FwRemoveDuplicateAddresses");}});

var FwRuleResolveFlags = Module.findExportByName("fwpolicyiomgr.dll", "FwRuleResolveFlags")
Interceptor.attach(FwRuleResolveFlags, {onLeave: function (args) {send("FwRuleResolveFlags");}});

var FwSddlStringVerify = Module.findExportByName("fwpolicyiomgr.dll", "FwSddlStringVerify")
Interceptor.attach(FwSddlStringVerify, {onLeave: function (args) {send("FwSddlStringVerify");}});

var FwSetConfig = Module.findExportByName("fwpolicyiomgr.dll", "FwSetConfig")
Interceptor.attach(FwSetConfig, {onLeave: function (args) {send("FwSetConfig");}});

var FwSetGlobalConfig = Module.findExportByName("fwpolicyiomgr.dll", "FwSetGlobalConfig")
Interceptor.attach(FwSetGlobalConfig, {onLeave: function (args) {send("FwSetGlobalConfig");}});

var FwSetGlobalConfigInLocalTempStore = Module.findExportByName("fwpolicyiomgr.dll", "FwSetGlobalConfigInLocalTempStore")
Interceptor.attach(FwSetGlobalConfigInLocalTempStore, {onLeave: function (args) {send("FwSetGlobalConfigInLocalTempStore");}});

var FwSetHyperVProfileConfigInRegistry = Module.findExportByName("fwpolicyiomgr.dll", "FwSetHyperVProfileConfigInRegistry")
Interceptor.attach(FwSetHyperVProfileConfigInRegistry, {onLeave: function (args) {send("FwSetHyperVProfileConfigInRegistry");}});

var FwSetHyperVVMConfigInRegistry = Module.findExportByName("fwpolicyiomgr.dll", "FwSetHyperVVMConfigInRegistry")
Interceptor.attach(FwSetHyperVVMConfigInRegistry, {onLeave: function (args) {send("FwSetHyperVVMConfigInRegistry");}});

var FwSetResolveFlags = Module.findExportByName("fwpolicyiomgr.dll", "FwSetResolveFlags")
Interceptor.attach(FwSetResolveFlags, {onLeave: function (args) {send("FwSetResolveFlags");}});

var FwSetRule = Module.findExportByName("fwpolicyiomgr.dll", "FwSetRule")
Interceptor.attach(FwSetRule, {onLeave: function (args) {send("FwSetRule");}});

var FwSetSet = Module.findExportByName("fwpolicyiomgr.dll", "FwSetSet")
Interceptor.attach(FwSetSet, {onLeave: function (args) {send("FwSetSet");}});

var FwSidAndAttributesCopy = Module.findExportByName("fwpolicyiomgr.dll", "FwSidAndAttributesCopy")
Interceptor.attach(FwSidAndAttributesCopy, {onLeave: function (args) {send("FwSidAndAttributesCopy");}});

var FwSidAndAttributesFree = Module.findExportByName("fwpolicyiomgr.dll", "FwSidAndAttributesFree")
Interceptor.attach(FwSidAndAttributesFree, {onLeave: function (args) {send("FwSidAndAttributesFree");}});

var FwSidCopy = Module.findExportByName("fwpolicyiomgr.dll", "FwSidCopy")
Interceptor.attach(FwSidCopy, {onLeave: function (args) {send("FwSidCopy");}});

var FwSidsToString = Module.findExportByName("fwpolicyiomgr.dll", "FwSidsToString")
Interceptor.attach(FwSidsToString, {onLeave: function (args) {send("FwSidsToString");}});

var FwStringToSids = Module.findExportByName("fwpolicyiomgr.dll", "FwStringToSids")
Interceptor.attach(FwStringToSids, {onLeave: function (args) {send("FwStringToSids");}});

var FwSubtractAddresses = Module.findExportByName("fwpolicyiomgr.dll", "FwSubtractAddresses")
Interceptor.attach(FwSubtractAddresses, {onLeave: function (args) {send("FwSubtractAddresses");}});

var FwUniteWFAddressesContents = Module.findExportByName("fwpolicyiomgr.dll", "FwUniteWFAddressesContents")
Interceptor.attach(FwUniteWFAddressesContents, {onLeave: function (args) {send("FwUniteWFAddressesContents");}});

var FwUpdateDynamicKeywordAddressInRegistry = Module.findExportByName("fwpolicyiomgr.dll", "FwUpdateDynamicKeywordAddressInRegistry")
Interceptor.attach(FwUpdateDynamicKeywordAddressInRegistry, {onLeave: function (args) {send("FwUpdateDynamicKeywordAddressInRegistry");}});

var FwUpgradeHyperVVMConfigToProfileConfig = Module.findExportByName("fwpolicyiomgr.dll", "FwUpgradeHyperVVMConfigToProfileConfig")
Interceptor.attach(FwUpgradeHyperVVMConfigToProfileConfig, {onLeave: function (args) {send("FwUpgradeHyperVVMConfigToProfileConfig");}});

var FwVerifyWFRuleSemantics = Module.findExportByName("fwpolicyiomgr.dll", "FwVerifyWFRuleSemantics")
Interceptor.attach(FwVerifyWFRuleSemantics, {onLeave: function (args) {send("FwVerifyWFRuleSemantics");}});

var FwWfProtocolToICFProtocol = Module.findExportByName("fwpolicyiomgr.dll", "FwWfProtocolToICFProtocol")
Interceptor.attach(FwWfProtocolToICFProtocol, {onLeave: function (args) {send("FwWfProtocolToICFProtocol");}});

var GetOpenPortOrAuthAppAddrScope = Module.findExportByName("fwpolicyiomgr.dll", "GetOpenPortOrAuthAppAddrScope")
Interceptor.attach(GetOpenPortOrAuthAppAddrScope, {onLeave: function (args) {send("GetOpenPortOrAuthAppAddrScope");}});

var GetOpenPortorAuthAppAddrAsString = Module.findExportByName("fwpolicyiomgr.dll", "GetOpenPortorAuthAppAddrAsString")
Interceptor.attach(GetOpenPortorAuthAppAddrAsString, {onLeave: function (args) {send("GetOpenPortorAuthAppAddrAsString");}});

var GetOpenPortorAuthAppAsBSTR = Module.findExportByName("fwpolicyiomgr.dll", "GetOpenPortorAuthAppAsBSTR")
Interceptor.attach(GetOpenPortorAuthAppAsBSTR, {onLeave: function (args) {send("GetOpenPortorAuthAppAsBSTR");}});

var GetRemoteAdminSettings = Module.findExportByName("fwpolicyiomgr.dll", "GetRemoteAdminSettings")
Interceptor.attach(GetRemoteAdminSettings, {onLeave: function (args) {send("GetRemoteAdminSettings");}});

var IsEqualAddresses = Module.findExportByName("fwpolicyiomgr.dll", "IsEqualAddresses")
Interceptor.attach(IsEqualAddresses, {onLeave: function (args) {send("IsEqualAddresses");}});

var IsEqualFwPorts = Module.findExportByName("fwpolicyiomgr.dll", "IsEqualFwPorts")
Interceptor.attach(IsEqualFwPorts, {onLeave: function (args) {send("IsEqualFwPorts");}});

var IsFwRuleHyperVApplicable = Module.findExportByName("fwpolicyiomgr.dll", "IsFwRuleHyperVApplicable")
Interceptor.attach(IsFwRuleHyperVApplicable, {onLeave: function (args) {send("IsFwRuleHyperVApplicable");}});

var IsPortsEmpty = Module.findExportByName("fwpolicyiomgr.dll", "IsPortsEmpty")
Interceptor.attach(IsPortsEmpty, {onLeave: function (args) {send("IsPortsEmpty");}});

var IsRuleLegacyICMPSettings = Module.findExportByName("fwpolicyiomgr.dll", "IsRuleLegacyICMPSettings")
Interceptor.attach(IsRuleLegacyICMPSettings, {onLeave: function (args) {send("IsRuleLegacyICMPSettings");}});

var IsRulePerInterfaceIcmp = Module.findExportByName("fwpolicyiomgr.dll", "IsRulePerInterfaceIcmp")
Interceptor.attach(IsRulePerInterfaceIcmp, {onLeave: function (args) {send("IsRulePerInterfaceIcmp");}});

var IsRulePerInterfaceOpenPort = Module.findExportByName("fwpolicyiomgr.dll", "IsRulePerInterfaceOpenPort")
Interceptor.attach(IsRulePerInterfaceOpenPort, {onLeave: function (args) {send("IsRulePerInterfaceOpenPort");}});

var IsUnicastExplicitAddressesEmpty = Module.findExportByName("fwpolicyiomgr.dll", "IsUnicastExplicitAddressesEmpty")
Interceptor.attach(IsUnicastExplicitAddressesEmpty, {onLeave: function (args) {send("IsUnicastExplicitAddressesEmpty");}});

var Isv4Orv6AddressesEmpty = Module.findExportByName("fwpolicyiomgr.dll", "Isv4Orv6AddressesEmpty")
Interceptor.attach(Isv4Orv6AddressesEmpty, {onLeave: function (args) {send("Isv4Orv6AddressesEmpty");}});

var LoadGPExtensionDll = Module.findExportByName("fwpolicyiomgr.dll", "LoadGPExtensionDll")
Interceptor.attach(LoadGPExtensionDll, {onLeave: function (args) {send("LoadGPExtensionDll");}});

var MakeAbsoluteInterfaces = Module.findExportByName("fwpolicyiomgr.dll", "MakeAbsoluteInterfaces")
Interceptor.attach(MakeAbsoluteInterfaces, {onLeave: function (args) {send("MakeAbsoluteInterfaces");}});

var OpenPortOrAuthAppAddrToString = Module.findExportByName("fwpolicyiomgr.dll", "OpenPortOrAuthAppAddrToString")
Interceptor.attach(OpenPortOrAuthAppAddrToString, {onLeave: function (args) {send("OpenPortOrAuthAppAddrToString");}});

var OpenPortOrAuthAppAddrToStringInt2 = Module.findExportByName("fwpolicyiomgr.dll", "OpenPortOrAuthAppAddrToStringInt2")
Interceptor.attach(OpenPortOrAuthAppAddrToStringInt2, {onLeave: function (args) {send("OpenPortOrAuthAppAddrToStringInt2");}});

var OpenPortOrAuthAppAddrToStringInt3 = Module.findExportByName("fwpolicyiomgr.dll", "OpenPortOrAuthAppAddrToStringInt3")
Interceptor.attach(OpenPortOrAuthAppAddrToStringInt3, {onLeave: function (args) {send("OpenPortOrAuthAppAddrToStringInt3");}});

var SanitizeForPrivacy = Module.findExportByName("fwpolicyiomgr.dll", "SanitizeForPrivacy")
Interceptor.attach(SanitizeForPrivacy, {onLeave: function (args) {send("SanitizeForPrivacy");}});

var StringArrayToOpenPortOrAuthAppAddress = Module.findExportByName("fwpolicyiomgr.dll", "StringArrayToOpenPortOrAuthAppAddress")
Interceptor.attach(StringArrayToOpenPortOrAuthAppAddress, {onLeave: function (args) {send("StringArrayToOpenPortOrAuthAppAddress");}});

var StringToOpenPortOrAuthAppAddress = Module.findExportByName("fwpolicyiomgr.dll", "StringToOpenPortOrAuthAppAddress")
Interceptor.attach(StringToOpenPortOrAuthAppAddress, {onLeave: function (args) {send("StringToOpenPortOrAuthAppAddress");}});

var StringToOpenPortOrAuthAppAddress2 = Module.findExportByName("fwpolicyiomgr.dll", "StringToOpenPortOrAuthAppAddress2")
Interceptor.attach(StringToOpenPortOrAuthAppAddress2, {onLeave: function (args) {send("StringToOpenPortOrAuthAppAddress2");}});

var ValidatePortOrAppAddressString = Module.findExportByName("fwpolicyiomgr.dll", "ValidatePortOrAppAddressString")
Interceptor.attach(ValidatePortOrAppAddressString, {onLeave: function (args) {send("ValidatePortOrAppAddressString");}});

