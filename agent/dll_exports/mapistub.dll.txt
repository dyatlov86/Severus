var BMAPIAddress = Module.findExportByName("mapistub.dll", "BMAPIAddress")
Interceptor.attach(BMAPIAddress, {onLeave: function (args) {send("BMAPIAddress");}});

var BMAPIDetails = Module.findExportByName("mapistub.dll", "BMAPIDetails")
Interceptor.attach(BMAPIDetails, {onLeave: function (args) {send("BMAPIDetails");}});

var BMAPIFindNext = Module.findExportByName("mapistub.dll", "BMAPIFindNext")
Interceptor.attach(BMAPIFindNext, {onLeave: function (args) {send("BMAPIFindNext");}});

var BMAPIGetAddress = Module.findExportByName("mapistub.dll", "BMAPIGetAddress")
Interceptor.attach(BMAPIGetAddress, {onLeave: function (args) {send("BMAPIGetAddress");}});

var BMAPIGetReadMail = Module.findExportByName("mapistub.dll", "BMAPIGetReadMail")
Interceptor.attach(BMAPIGetReadMail, {onLeave: function (args) {send("BMAPIGetReadMail");}});

var BMAPIReadMail = Module.findExportByName("mapistub.dll", "BMAPIReadMail")
Interceptor.attach(BMAPIReadMail, {onLeave: function (args) {send("BMAPIReadMail");}});

var BMAPIResolveName = Module.findExportByName("mapistub.dll", "BMAPIResolveName")
Interceptor.attach(BMAPIResolveName, {onLeave: function (args) {send("BMAPIResolveName");}});

var BMAPISaveMail = Module.findExportByName("mapistub.dll", "BMAPISaveMail")
Interceptor.attach(BMAPISaveMail, {onLeave: function (args) {send("BMAPISaveMail");}});

var BMAPISendMail = Module.findExportByName("mapistub.dll", "BMAPISendMail")
Interceptor.attach(BMAPISendMail, {onLeave: function (args) {send("BMAPISendMail");}});

var BuildDisplayTable = Module.findExportByName("mapistub.dll", "BuildDisplayTable")
Interceptor.attach(BuildDisplayTable, {onLeave: function (args) {send("BuildDisplayTable");}});

var CbOfEncoded = Module.findExportByName("mapistub.dll", "CbOfEncoded")
Interceptor.attach(CbOfEncoded, {onLeave: function (args) {send("CbOfEncoded");}});

var CchOfEncoding = Module.findExportByName("mapistub.dll", "CchOfEncoding")
Interceptor.attach(CchOfEncoding, {onLeave: function (args) {send("CchOfEncoding");}});

var ChangeIdleRoutine = Module.findExportByName("mapistub.dll", "ChangeIdleRoutine")
Interceptor.attach(ChangeIdleRoutine, {onLeave: function (args) {send("ChangeIdleRoutine");}});

var CloseIMsgSession = Module.findExportByName("mapistub.dll", "CloseIMsgSession")
Interceptor.attach(CloseIMsgSession, {onLeave: function (args) {send("CloseIMsgSession");}});

var CreateIProp = Module.findExportByName("mapistub.dll", "CreateIProp")
Interceptor.attach(CreateIProp, {onLeave: function (args) {send("CreateIProp");}});

var CreateTable = Module.findExportByName("mapistub.dll", "CreateTable")
Interceptor.attach(CreateTable, {onLeave: function (args) {send("CreateTable");}});

var DeinitMapiUtil = Module.findExportByName("mapistub.dll", "DeinitMapiUtil")
Interceptor.attach(DeinitMapiUtil, {onLeave: function (args) {send("DeinitMapiUtil");}});

var DeregisterIdleRoutine = Module.findExportByName("mapistub.dll", "DeregisterIdleRoutine")
Interceptor.attach(DeregisterIdleRoutine, {onLeave: function (args) {send("DeregisterIdleRoutine");}});

var DllCanUnloadNow = Module.findExportByName("mapistub.dll", "DllCanUnloadNow")
Interceptor.attach(DllCanUnloadNow, {onLeave: function (args) {send("DllCanUnloadNow");}});

var DllGetClassObject = Module.findExportByName("mapistub.dll", "DllGetClassObject")
Interceptor.attach(DllGetClassObject, {onLeave: function (args) {send("DllGetClassObject");}});

var EnableIdleRoutine = Module.findExportByName("mapistub.dll", "EnableIdleRoutine")
Interceptor.attach(EnableIdleRoutine, {onLeave: function (args) {send("EnableIdleRoutine");}});

var EncodeID = Module.findExportByName("mapistub.dll", "EncodeID")
Interceptor.attach(EncodeID, {onLeave: function (args) {send("EncodeID");}});

var FBadColumnSet = Module.findExportByName("mapistub.dll", "FBadColumnSet")
Interceptor.attach(FBadColumnSet, {onLeave: function (args) {send("FBadColumnSet");}});

var FBadEntryList = Module.findExportByName("mapistub.dll", "FBadEntryList")
Interceptor.attach(FBadEntryList, {onLeave: function (args) {send("FBadEntryList");}});

var FBadProp = Module.findExportByName("mapistub.dll", "FBadProp")
Interceptor.attach(FBadProp, {onLeave: function (args) {send("FBadProp");}});

var FBadPropTag = Module.findExportByName("mapistub.dll", "FBadPropTag")
Interceptor.attach(FBadPropTag, {onLeave: function (args) {send("FBadPropTag");}});

var FBadRestriction = Module.findExportByName("mapistub.dll", "FBadRestriction")
Interceptor.attach(FBadRestriction, {onLeave: function (args) {send("FBadRestriction");}});

var FBadRglpNameID = Module.findExportByName("mapistub.dll", "FBadRglpNameID")
Interceptor.attach(FBadRglpNameID, {onLeave: function (args) {send("FBadRglpNameID");}});

var FBadRglpszA = Module.findExportByName("mapistub.dll", "FBadRglpszA")
Interceptor.attach(FBadRglpszA, {onLeave: function (args) {send("FBadRglpszA");}});

var FBadRglpszW = Module.findExportByName("mapistub.dll", "FBadRglpszW")
Interceptor.attach(FBadRglpszW, {onLeave: function (args) {send("FBadRglpszW");}});

var FBadRow = Module.findExportByName("mapistub.dll", "FBadRow")
Interceptor.attach(FBadRow, {onLeave: function (args) {send("FBadRow");}});

var FBadRowSet = Module.findExportByName("mapistub.dll", "FBadRowSet")
Interceptor.attach(FBadRowSet, {onLeave: function (args) {send("FBadRowSet");}});

var FBadSortOrderSet = Module.findExportByName("mapistub.dll", "FBadSortOrderSet")
Interceptor.attach(FBadSortOrderSet, {onLeave: function (args) {send("FBadSortOrderSet");}});

var FBinFromHex = Module.findExportByName("mapistub.dll", "FBinFromHex")
Interceptor.attach(FBinFromHex, {onLeave: function (args) {send("FBinFromHex");}});

var FDecodeID = Module.findExportByName("mapistub.dll", "FDecodeID")
Interceptor.attach(FDecodeID, {onLeave: function (args) {send("FDecodeID");}});

var FEqualNames = Module.findExportByName("mapistub.dll", "FEqualNames")
Interceptor.attach(FEqualNames, {onLeave: function (args) {send("FEqualNames");}});

var FGetComponentPath = Module.findExportByName("mapistub.dll", "FGetComponentPath")
Interceptor.attach(FGetComponentPath, {onLeave: function (args) {send("FGetComponentPath");}});

var FPropCompareProp = Module.findExportByName("mapistub.dll", "FPropCompareProp")
Interceptor.attach(FPropCompareProp, {onLeave: function (args) {send("FPropCompareProp");}});

var FPropContainsProp = Module.findExportByName("mapistub.dll", "FPropContainsProp")
Interceptor.attach(FPropContainsProp, {onLeave: function (args) {send("FPropContainsProp");}});

var FPropExists = Module.findExportByName("mapistub.dll", "FPropExists")
Interceptor.attach(FPropExists, {onLeave: function (args) {send("FPropExists");}});

var FixMAPI = Module.findExportByName("mapistub.dll", "FixMAPI")
Interceptor.attach(FixMAPI, {onLeave: function (args) {send("FixMAPI");}});

var FreePadrlist = Module.findExportByName("mapistub.dll", "FreePadrlist")
Interceptor.attach(FreePadrlist, {onLeave: function (args) {send("FreePadrlist");}});

var FreeProws = Module.findExportByName("mapistub.dll", "FreeProws")
Interceptor.attach(FreeProws, {onLeave: function (args) {send("FreeProws");}});

var FtAdcFt = Module.findExportByName("mapistub.dll", "FtAdcFt")
Interceptor.attach(FtAdcFt, {onLeave: function (args) {send("FtAdcFt");}});

var FtAddFt = Module.findExportByName("mapistub.dll", "FtAddFt")
Interceptor.attach(FtAddFt, {onLeave: function (args) {send("FtAddFt");}});

var FtDivFtBogus = Module.findExportByName("mapistub.dll", "FtDivFtBogus")
Interceptor.attach(FtDivFtBogus, {onLeave: function (args) {send("FtDivFtBogus");}});

var FtMulDw = Module.findExportByName("mapistub.dll", "FtMulDw")
Interceptor.attach(FtMulDw, {onLeave: function (args) {send("FtMulDw");}});

var FtMulDwDw = Module.findExportByName("mapistub.dll", "FtMulDwDw")
Interceptor.attach(FtMulDwDw, {onLeave: function (args) {send("FtMulDwDw");}});

var FtNegFt = Module.findExportByName("mapistub.dll", "FtNegFt")
Interceptor.attach(FtNegFt, {onLeave: function (args) {send("FtNegFt");}});

var FtSubFt = Module.findExportByName("mapistub.dll", "FtSubFt")
Interceptor.attach(FtSubFt, {onLeave: function (args) {send("FtSubFt");}});

var FtgRegisterIdleRoutine = Module.findExportByName("mapistub.dll", "FtgRegisterIdleRoutine")
Interceptor.attach(FtgRegisterIdleRoutine, {onLeave: function (args) {send("FtgRegisterIdleRoutine");}});

var GetAttribIMsgOnIStg = Module.findExportByName("mapistub.dll", "GetAttribIMsgOnIStg")
Interceptor.attach(GetAttribIMsgOnIStg, {onLeave: function (args) {send("GetAttribIMsgOnIStg");}});

var GetOutlookVersion = Module.findExportByName("mapistub.dll", "GetOutlookVersion")
Interceptor.attach(GetOutlookVersion, {onLeave: function (args) {send("GetOutlookVersion");}});

var GetTnefStreamCodepage = Module.findExportByName("mapistub.dll", "GetTnefStreamCodepage")
Interceptor.attach(GetTnefStreamCodepage, {onLeave: function (args) {send("GetTnefStreamCodepage");}});

var HexFromBin = Module.findExportByName("mapistub.dll", "HexFromBin")
Interceptor.attach(HexFromBin, {onLeave: function (args) {send("HexFromBin");}});

var HrAddColumns = Module.findExportByName("mapistub.dll", "HrAddColumns")
Interceptor.attach(HrAddColumns, {onLeave: function (args) {send("HrAddColumns");}});

var HrAddColumnsEx = Module.findExportByName("mapistub.dll", "HrAddColumnsEx")
Interceptor.attach(HrAddColumnsEx, {onLeave: function (args) {send("HrAddColumnsEx");}});

var HrAllocAdviseSink = Module.findExportByName("mapistub.dll", "HrAllocAdviseSink")
Interceptor.attach(HrAllocAdviseSink, {onLeave: function (args) {send("HrAllocAdviseSink");}});

var HrComposeEID = Module.findExportByName("mapistub.dll", "HrComposeEID")
Interceptor.attach(HrComposeEID, {onLeave: function (args) {send("HrComposeEID");}});

var HrComposeMsgID = Module.findExportByName("mapistub.dll", "HrComposeMsgID")
Interceptor.attach(HrComposeMsgID, {onLeave: function (args) {send("HrComposeMsgID");}});

var HrDecomposeEID = Module.findExportByName("mapistub.dll", "HrDecomposeEID")
Interceptor.attach(HrDecomposeEID, {onLeave: function (args) {send("HrDecomposeEID");}});

var HrDecomposeMsgID = Module.findExportByName("mapistub.dll", "HrDecomposeMsgID")
Interceptor.attach(HrDecomposeMsgID, {onLeave: function (args) {send("HrDecomposeMsgID");}});

var HrDispatchNotifications = Module.findExportByName("mapistub.dll", "HrDispatchNotifications")
Interceptor.attach(HrDispatchNotifications, {onLeave: function (args) {send("HrDispatchNotifications");}});

var HrEntryIDFromSz = Module.findExportByName("mapistub.dll", "HrEntryIDFromSz")
Interceptor.attach(HrEntryIDFromSz, {onLeave: function (args) {send("HrEntryIDFromSz");}});

var HrGetOmiProvidersFlags = Module.findExportByName("mapistub.dll", "HrGetOmiProvidersFlags")
Interceptor.attach(HrGetOmiProvidersFlags, {onLeave: function (args) {send("HrGetOmiProvidersFlags");}});

var HrGetOneProp = Module.findExportByName("mapistub.dll", "HrGetOneProp")
Interceptor.attach(HrGetOneProp, {onLeave: function (args) {send("HrGetOneProp");}});

var HrIStorageFromStream = Module.findExportByName("mapistub.dll", "HrIStorageFromStream")
Interceptor.attach(HrIStorageFromStream, {onLeave: function (args) {send("HrIStorageFromStream");}});

var HrQueryAllRows = Module.findExportByName("mapistub.dll", "HrQueryAllRows")
Interceptor.attach(HrQueryAllRows, {onLeave: function (args) {send("HrQueryAllRows");}});

var HrSetOmiProvidersFlagsInvalid = Module.findExportByName("mapistub.dll", "HrSetOmiProvidersFlagsInvalid")
Interceptor.attach(HrSetOmiProvidersFlagsInvalid, {onLeave: function (args) {send("HrSetOmiProvidersFlagsInvalid");}});

var HrSetOneProp = Module.findExportByName("mapistub.dll", "HrSetOneProp")
Interceptor.attach(HrSetOneProp, {onLeave: function (args) {send("HrSetOneProp");}});

var HrSzFromEntryID = Module.findExportByName("mapistub.dll", "HrSzFromEntryID")
Interceptor.attach(HrSzFromEntryID, {onLeave: function (args) {send("HrSzFromEntryID");}});

var HrThisThreadAdviseSink = Module.findExportByName("mapistub.dll", "HrThisThreadAdviseSink")
Interceptor.attach(HrThisThreadAdviseSink, {onLeave: function (args) {send("HrThisThreadAdviseSink");}});

var HrValidateIPMSubtree = Module.findExportByName("mapistub.dll", "HrValidateIPMSubtree")
Interceptor.attach(HrValidateIPMSubtree, {onLeave: function (args) {send("HrValidateIPMSubtree");}});

var HrValidateParametersV = Module.findExportByName("mapistub.dll", "HrValidateParametersV")
Interceptor.attach(HrValidateParametersV, {onLeave: function (args) {send("HrValidateParametersV");}});

var HrValidateParametersValist = Module.findExportByName("mapistub.dll", "HrValidateParametersValist")
Interceptor.attach(HrValidateParametersValist, {onLeave: function (args) {send("HrValidateParametersValist");}});

var InstallFilterHook = Module.findExportByName("mapistub.dll", "InstallFilterHook")
Interceptor.attach(InstallFilterHook, {onLeave: function (args) {send("InstallFilterHook");}});

var IsBadBoundedStringPtr = Module.findExportByName("mapistub.dll", "IsBadBoundedStringPtr")
Interceptor.attach(IsBadBoundedStringPtr, {onLeave: function (args) {send("IsBadBoundedStringPtr");}});

var LAUNCHWIZARD = Module.findExportByName("mapistub.dll", "LAUNCHWIZARD")
Interceptor.attach(LAUNCHWIZARD, {onLeave: function (args) {send("LAUNCHWIZARD");}});

var LPropCompareProp = Module.findExportByName("mapistub.dll", "LPropCompareProp")
Interceptor.attach(LPropCompareProp, {onLeave: function (args) {send("LPropCompareProp");}});

var LaunchWizard = Module.findExportByName("mapistub.dll", "LaunchWizard")
Interceptor.attach(LaunchWizard, {onLeave: function (args) {send("LaunchWizard");}});

var LpValFindProp = Module.findExportByName("mapistub.dll", "LpValFindProp")
Interceptor.attach(LpValFindProp, {onLeave: function (args) {send("LpValFindProp");}});

var MAPIAddress = Module.findExportByName("mapistub.dll", "MAPIAddress")
Interceptor.attach(MAPIAddress, {onLeave: function (args) {send("MAPIAddress");}});

var MAPIAdminProfiles = Module.findExportByName("mapistub.dll", "MAPIAdminProfiles")
Interceptor.attach(MAPIAdminProfiles, {onLeave: function (args) {send("MAPIAdminProfiles");}});

var MAPIAllocateBuffer = Module.findExportByName("mapistub.dll", "MAPIAllocateBuffer")
Interceptor.attach(MAPIAllocateBuffer, {onLeave: function (args) {send("MAPIAllocateBuffer");}});

var MAPIAllocateMore = Module.findExportByName("mapistub.dll", "MAPIAllocateMore")
Interceptor.attach(MAPIAllocateMore, {onLeave: function (args) {send("MAPIAllocateMore");}});

var MAPIDeinitIdle = Module.findExportByName("mapistub.dll", "MAPIDeinitIdle")
Interceptor.attach(MAPIDeinitIdle, {onLeave: function (args) {send("MAPIDeinitIdle");}});

var MAPIDeleteMail = Module.findExportByName("mapistub.dll", "MAPIDeleteMail")
Interceptor.attach(MAPIDeleteMail, {onLeave: function (args) {send("MAPIDeleteMail");}});

var MAPIDetails = Module.findExportByName("mapistub.dll", "MAPIDetails")
Interceptor.attach(MAPIDetails, {onLeave: function (args) {send("MAPIDetails");}});

var MAPIFindNext = Module.findExportByName("mapistub.dll", "MAPIFindNext")
Interceptor.attach(MAPIFindNext, {onLeave: function (args) {send("MAPIFindNext");}});

var MAPIFreeBuffer = Module.findExportByName("mapistub.dll", "MAPIFreeBuffer")
Interceptor.attach(MAPIFreeBuffer, {onLeave: function (args) {send("MAPIFreeBuffer");}});

var MAPIGetDefaultMalloc = Module.findExportByName("mapistub.dll", "MAPIGetDefaultMalloc")
Interceptor.attach(MAPIGetDefaultMalloc, {onLeave: function (args) {send("MAPIGetDefaultMalloc");}});

var MAPIInitIdle = Module.findExportByName("mapistub.dll", "MAPIInitIdle")
Interceptor.attach(MAPIInitIdle, {onLeave: function (args) {send("MAPIInitIdle");}});

var MAPIInitialize = Module.findExportByName("mapistub.dll", "MAPIInitialize")
Interceptor.attach(MAPIInitialize, {onLeave: function (args) {send("MAPIInitialize");}});

var MAPILogoff = Module.findExportByName("mapistub.dll", "MAPILogoff")
Interceptor.attach(MAPILogoff, {onLeave: function (args) {send("MAPILogoff");}});

var MAPILogon = Module.findExportByName("mapistub.dll", "MAPILogon")
Interceptor.attach(MAPILogon, {onLeave: function (args) {send("MAPILogon");}});

var MAPILogonEx = Module.findExportByName("mapistub.dll", "MAPILogonEx")
Interceptor.attach(MAPILogonEx, {onLeave: function (args) {send("MAPILogonEx");}});

var MAPIOpenFormMgr = Module.findExportByName("mapistub.dll", "MAPIOpenFormMgr")
Interceptor.attach(MAPIOpenFormMgr, {onLeave: function (args) {send("MAPIOpenFormMgr");}});

var MAPIOpenLocalFormContainer = Module.findExportByName("mapistub.dll", "MAPIOpenLocalFormContainer")
Interceptor.attach(MAPIOpenLocalFormContainer, {onLeave: function (args) {send("MAPIOpenLocalFormContainer");}});

var MAPIReadMail = Module.findExportByName("mapistub.dll", "MAPIReadMail")
Interceptor.attach(MAPIReadMail, {onLeave: function (args) {send("MAPIReadMail");}});

var MAPIResolveName = Module.findExportByName("mapistub.dll", "MAPIResolveName")
Interceptor.attach(MAPIResolveName, {onLeave: function (args) {send("MAPIResolveName");}});

var MAPISaveMail = Module.findExportByName("mapistub.dll", "MAPISaveMail")
Interceptor.attach(MAPISaveMail, {onLeave: function (args) {send("MAPISaveMail");}});

var MAPISendDocuments = Module.findExportByName("mapistub.dll", "MAPISendDocuments")
Interceptor.attach(MAPISendDocuments, {onLeave: function (args) {send("MAPISendDocuments");}});

var MAPISendMail = Module.findExportByName("mapistub.dll", "MAPISendMail")
Interceptor.attach(MAPISendMail, {onLeave: function (args) {send("MAPISendMail");}});

var MAPISendMailW = Module.findExportByName("mapistub.dll", "MAPISendMailW")
Interceptor.attach(MAPISendMailW, {onLeave: function (args) {send("MAPISendMailW");}});

var MAPIUninitialize = Module.findExportByName("mapistub.dll", "MAPIUninitialize")
Interceptor.attach(MAPIUninitialize, {onLeave: function (args) {send("MAPIUninitialize");}});

var MNLS_CompareStringW = Module.findExportByName("mapistub.dll", "MNLS_CompareStringW")
Interceptor.attach(MNLS_CompareStringW, {onLeave: function (args) {send("MNLS_CompareStringW");}});

var MNLS_IsBadStringPtrW = Module.findExportByName("mapistub.dll", "MNLS_IsBadStringPtrW")
Interceptor.attach(MNLS_IsBadStringPtrW, {onLeave: function (args) {send("MNLS_IsBadStringPtrW");}});

var MNLS_MultiByteToWideChar = Module.findExportByName("mapistub.dll", "MNLS_MultiByteToWideChar")
Interceptor.attach(MNLS_MultiByteToWideChar, {onLeave: function (args) {send("MNLS_MultiByteToWideChar");}});

var MNLS_WideCharToMultiByte = Module.findExportByName("mapistub.dll", "MNLS_WideCharToMultiByte")
Interceptor.attach(MNLS_WideCharToMultiByte, {onLeave: function (args) {send("MNLS_WideCharToMultiByte");}});

var MNLS_lstrcmpW = Module.findExportByName("mapistub.dll", "MNLS_lstrcmpW")
Interceptor.attach(MNLS_lstrcmpW, {onLeave: function (args) {send("MNLS_lstrcmpW");}});

var MNLS_lstrcpyW = Module.findExportByName("mapistub.dll", "MNLS_lstrcpyW")
Interceptor.attach(MNLS_lstrcpyW, {onLeave: function (args) {send("MNLS_lstrcpyW");}});

var MNLS_lstrlenW = Module.findExportByName("mapistub.dll", "MNLS_lstrlenW")
Interceptor.attach(MNLS_lstrlenW, {onLeave: function (args) {send("MNLS_lstrlenW");}});

var MapStorageSCode = Module.findExportByName("mapistub.dll", "MapStorageSCode")
Interceptor.attach(MapStorageSCode, {onLeave: function (args) {send("MapStorageSCode");}});

var OpenIMsgOnIStg = Module.findExportByName("mapistub.dll", "OpenIMsgOnIStg")
Interceptor.attach(OpenIMsgOnIStg, {onLeave: function (args) {send("OpenIMsgOnIStg");}});

var OpenIMsgSession = Module.findExportByName("mapistub.dll", "OpenIMsgSession")
Interceptor.attach(OpenIMsgSession, {onLeave: function (args) {send("OpenIMsgSession");}});

var OpenStreamOnFile = Module.findExportByName("mapistub.dll", "OpenStreamOnFile")
Interceptor.attach(OpenStreamOnFile, {onLeave: function (args) {send("OpenStreamOnFile");}});

var OpenTnefStream = Module.findExportByName("mapistub.dll", "OpenTnefStream")
Interceptor.attach(OpenTnefStream, {onLeave: function (args) {send("OpenTnefStream");}});

var OpenTnefStreamEx = Module.findExportByName("mapistub.dll", "OpenTnefStreamEx")
Interceptor.attach(OpenTnefStreamEx, {onLeave: function (args) {send("OpenTnefStreamEx");}});

var PRProviderInit = Module.findExportByName("mapistub.dll", "PRProviderInit")
Interceptor.attach(PRProviderInit, {onLeave: function (args) {send("PRProviderInit");}});

var PpropFindProp = Module.findExportByName("mapistub.dll", "PpropFindProp")
Interceptor.attach(PpropFindProp, {onLeave: function (args) {send("PpropFindProp");}});

var PropCopyMore = Module.findExportByName("mapistub.dll", "PropCopyMore")
Interceptor.attach(PropCopyMore, {onLeave: function (args) {send("PropCopyMore");}});

var RTFSync = Module.findExportByName("mapistub.dll", "RTFSync")
Interceptor.attach(RTFSync, {onLeave: function (args) {send("RTFSync");}});

var ScBinFromHexBounded = Module.findExportByName("mapistub.dll", "ScBinFromHexBounded")
Interceptor.attach(ScBinFromHexBounded, {onLeave: function (args) {send("ScBinFromHexBounded");}});

var ScCopyNotifications = Module.findExportByName("mapistub.dll", "ScCopyNotifications")
Interceptor.attach(ScCopyNotifications, {onLeave: function (args) {send("ScCopyNotifications");}});

var ScCopyProps = Module.findExportByName("mapistub.dll", "ScCopyProps")
Interceptor.attach(ScCopyProps, {onLeave: function (args) {send("ScCopyProps");}});

var ScCountNotifications = Module.findExportByName("mapistub.dll", "ScCountNotifications")
Interceptor.attach(ScCountNotifications, {onLeave: function (args) {send("ScCountNotifications");}});

var ScCountProps = Module.findExportByName("mapistub.dll", "ScCountProps")
Interceptor.attach(ScCountProps, {onLeave: function (args) {send("ScCountProps");}});

var ScCreateConversationIndex = Module.findExportByName("mapistub.dll", "ScCreateConversationIndex")
Interceptor.attach(ScCreateConversationIndex, {onLeave: function (args) {send("ScCreateConversationIndex");}});

var ScDupPropset = Module.findExportByName("mapistub.dll", "ScDupPropset")
Interceptor.attach(ScDupPropset, {onLeave: function (args) {send("ScDupPropset");}});

var ScGenerateMuid = Module.findExportByName("mapistub.dll", "ScGenerateMuid")
Interceptor.attach(ScGenerateMuid, {onLeave: function (args) {send("ScGenerateMuid");}});

var ScInitMapiUtil = Module.findExportByName("mapistub.dll", "ScInitMapiUtil")
Interceptor.attach(ScInitMapiUtil, {onLeave: function (args) {send("ScInitMapiUtil");}});

var ScLocalPathFromUNC = Module.findExportByName("mapistub.dll", "ScLocalPathFromUNC")
Interceptor.attach(ScLocalPathFromUNC, {onLeave: function (args) {send("ScLocalPathFromUNC");}});

var ScMAPIXFromCMC = Module.findExportByName("mapistub.dll", "ScMAPIXFromCMC")
Interceptor.attach(ScMAPIXFromCMC, {onLeave: function (args) {send("ScMAPIXFromCMC");}});

var ScMAPIXFromSMAPI = Module.findExportByName("mapistub.dll", "ScMAPIXFromSMAPI")
Interceptor.attach(ScMAPIXFromSMAPI, {onLeave: function (args) {send("ScMAPIXFromSMAPI");}});

var ScRelocNotifications = Module.findExportByName("mapistub.dll", "ScRelocNotifications")
Interceptor.attach(ScRelocNotifications, {onLeave: function (args) {send("ScRelocNotifications");}});

var ScRelocProps = Module.findExportByName("mapistub.dll", "ScRelocProps")
Interceptor.attach(ScRelocProps, {onLeave: function (args) {send("ScRelocProps");}});

var ScUNCFromLocalPath = Module.findExportByName("mapistub.dll", "ScUNCFromLocalPath")
Interceptor.attach(ScUNCFromLocalPath, {onLeave: function (args) {send("ScUNCFromLocalPath");}});

var SetAttribIMsgOnIStg = Module.findExportByName("mapistub.dll", "SetAttribIMsgOnIStg")
Interceptor.attach(SetAttribIMsgOnIStg, {onLeave: function (args) {send("SetAttribIMsgOnIStg");}});

var SwapPlong = Module.findExportByName("mapistub.dll", "SwapPlong")
Interceptor.attach(SwapPlong, {onLeave: function (args) {send("SwapPlong");}});

var SwapPword = Module.findExportByName("mapistub.dll", "SwapPword")
Interceptor.attach(SwapPword, {onLeave: function (args) {send("SwapPword");}});

var SzFindCh = Module.findExportByName("mapistub.dll", "SzFindCh")
Interceptor.attach(SzFindCh, {onLeave: function (args) {send("SzFindCh");}});

var SzFindLastCh = Module.findExportByName("mapistub.dll", "SzFindLastCh")
Interceptor.attach(SzFindLastCh, {onLeave: function (args) {send("SzFindLastCh");}});

var SzFindSz = Module.findExportByName("mapistub.dll", "SzFindSz")
Interceptor.attach(SzFindSz, {onLeave: function (args) {send("SzFindSz");}});

var UFromSz = Module.findExportByName("mapistub.dll", "UFromSz")
Interceptor.attach(UFromSz, {onLeave: function (args) {send("UFromSz");}});

var UNKOBJ_COFree = Module.findExportByName("mapistub.dll", "UNKOBJ_COFree")
Interceptor.attach(UNKOBJ_COFree, {onLeave: function (args) {send("UNKOBJ_COFree");}});

var UNKOBJ_Free = Module.findExportByName("mapistub.dll", "UNKOBJ_Free")
Interceptor.attach(UNKOBJ_Free, {onLeave: function (args) {send("UNKOBJ_Free");}});

var UNKOBJ_FreeRows = Module.findExportByName("mapistub.dll", "UNKOBJ_FreeRows")
Interceptor.attach(UNKOBJ_FreeRows, {onLeave: function (args) {send("UNKOBJ_FreeRows");}});

var UNKOBJ_ScAllocate = Module.findExportByName("mapistub.dll", "UNKOBJ_ScAllocate")
Interceptor.attach(UNKOBJ_ScAllocate, {onLeave: function (args) {send("UNKOBJ_ScAllocate");}});

var UNKOBJ_ScAllocateMore = Module.findExportByName("mapistub.dll", "UNKOBJ_ScAllocateMore")
Interceptor.attach(UNKOBJ_ScAllocateMore, {onLeave: function (args) {send("UNKOBJ_ScAllocateMore");}});

var UNKOBJ_ScCOAllocate = Module.findExportByName("mapistub.dll", "UNKOBJ_ScCOAllocate")
Interceptor.attach(UNKOBJ_ScCOAllocate, {onLeave: function (args) {send("UNKOBJ_ScCOAllocate");}});

var UNKOBJ_ScCOReallocate = Module.findExportByName("mapistub.dll", "UNKOBJ_ScCOReallocate")
Interceptor.attach(UNKOBJ_ScCOReallocate, {onLeave: function (args) {send("UNKOBJ_ScCOReallocate");}});

var UNKOBJ_ScSzFromIdsAlloc = Module.findExportByName("mapistub.dll", "UNKOBJ_ScSzFromIdsAlloc")
Interceptor.attach(UNKOBJ_ScSzFromIdsAlloc, {onLeave: function (args) {send("UNKOBJ_ScSzFromIdsAlloc");}});

var UlAddRef = Module.findExportByName("mapistub.dll", "UlAddRef")
Interceptor.attach(UlAddRef, {onLeave: function (args) {send("UlAddRef");}});

var UlFromSzHex = Module.findExportByName("mapistub.dll", "UlFromSzHex")
Interceptor.attach(UlFromSzHex, {onLeave: function (args) {send("UlFromSzHex");}});

var UlPropSize = Module.findExportByName("mapistub.dll", "UlPropSize")
Interceptor.attach(UlPropSize, {onLeave: function (args) {send("UlPropSize");}});

var UlRelease = Module.findExportByName("mapistub.dll", "UlRelease")
Interceptor.attach(UlRelease, {onLeave: function (args) {send("UlRelease");}});

var WrapCompressedRTFStream = Module.findExportByName("mapistub.dll", "WrapCompressedRTFStream")
Interceptor.attach(WrapCompressedRTFStream, {onLeave: function (args) {send("WrapCompressedRTFStream");}});

var WrapProgress = Module.findExportByName("mapistub.dll", "WrapProgress")
Interceptor.attach(WrapProgress, {onLeave: function (args) {send("WrapProgress");}});

var WrapStoreEntryID = Module.findExportByName("mapistub.dll", "WrapStoreEntryID")
Interceptor.attach(WrapStoreEntryID, {onLeave: function (args) {send("WrapStoreEntryID");}});

var __CPPValidateParameters = Module.findExportByName("mapistub.dll", "__CPPValidateParameters")
Interceptor.attach(__CPPValidateParameters, {onLeave: function (args) {send("__CPPValidateParameters");}});

var __ValidateParameters = Module.findExportByName("mapistub.dll", "__ValidateParameters")
Interceptor.attach(__ValidateParameters, {onLeave: function (args) {send("__ValidateParameters");}});

var cmc_act_on = Module.findExportByName("mapistub.dll", "cmc_act_on")
Interceptor.attach(cmc_act_on, {onLeave: function (args) {send("cmc_act_on");}});

var cmc_free = Module.findExportByName("mapistub.dll", "cmc_free")
Interceptor.attach(cmc_free, {onLeave: function (args) {send("cmc_free");}});

var cmc_list = Module.findExportByName("mapistub.dll", "cmc_list")
Interceptor.attach(cmc_list, {onLeave: function (args) {send("cmc_list");}});

var cmc_logoff = Module.findExportByName("mapistub.dll", "cmc_logoff")
Interceptor.attach(cmc_logoff, {onLeave: function (args) {send("cmc_logoff");}});

var cmc_logon = Module.findExportByName("mapistub.dll", "cmc_logon")
Interceptor.attach(cmc_logon, {onLeave: function (args) {send("cmc_logon");}});

var cmc_look_up = Module.findExportByName("mapistub.dll", "cmc_look_up")
Interceptor.attach(cmc_look_up, {onLeave: function (args) {send("cmc_look_up");}});

var cmc_query_configuration = Module.findExportByName("mapistub.dll", "cmc_query_configuration")
Interceptor.attach(cmc_query_configuration, {onLeave: function (args) {send("cmc_query_configuration");}});

var cmc_read = Module.findExportByName("mapistub.dll", "cmc_read")
Interceptor.attach(cmc_read, {onLeave: function (args) {send("cmc_read");}});

var cmc_send = Module.findExportByName("mapistub.dll", "cmc_send")
Interceptor.attach(cmc_send, {onLeave: function (args) {send("cmc_send");}});

var cmc_send_documents = Module.findExportByName("mapistub.dll", "cmc_send_documents")
Interceptor.attach(cmc_send_documents, {onLeave: function (args) {send("cmc_send_documents");}});

