var ctlAUXAccess = Module.findExportByName("IntelControlLib.dll", "ctlAUXAccess")
Interceptor.attach(ctlAUXAccess, {onLeave: function (args) {send("ctlAUXAccess");}});

var ctlCheckDriverVersion = Module.findExportByName("IntelControlLib.dll", "ctlCheckDriverVersion")
Interceptor.attach(ctlCheckDriverVersion, {onLeave: function (args) {send("ctlCheckDriverVersion");}});

var ctlClose = Module.findExportByName("IntelControlLib.dll", "ctlClose")
Interceptor.attach(ctlClose, {onLeave: function (args) {send("ctlClose");}});

var ctlEngineGetActivity = Module.findExportByName("IntelControlLib.dll", "ctlEngineGetActivity")
Interceptor.attach(ctlEngineGetActivity, {onLeave: function (args) {send("ctlEngineGetActivity");}});

var ctlEngineGetProperties = Module.findExportByName("IntelControlLib.dll", "ctlEngineGetProperties")
Interceptor.attach(ctlEngineGetProperties, {onLeave: function (args) {send("ctlEngineGetProperties");}});

var ctlEnumEngineGroups = Module.findExportByName("IntelControlLib.dll", "ctlEnumEngineGroups")
Interceptor.attach(ctlEnumEngineGroups, {onLeave: function (args) {send("ctlEnumEngineGroups");}});

var ctlEnumFans = Module.findExportByName("IntelControlLib.dll", "ctlEnumFans")
Interceptor.attach(ctlEnumFans, {onLeave: function (args) {send("ctlEnumFans");}});

var ctlEnumFrequencyDomains = Module.findExportByName("IntelControlLib.dll", "ctlEnumFrequencyDomains")
Interceptor.attach(ctlEnumFrequencyDomains, {onLeave: function (args) {send("ctlEnumFrequencyDomains");}});

var ctlEnumMemoryModules = Module.findExportByName("IntelControlLib.dll", "ctlEnumMemoryModules")
Interceptor.attach(ctlEnumMemoryModules, {onLeave: function (args) {send("ctlEnumMemoryModules");}});

var ctlEnumPowerDomains = Module.findExportByName("IntelControlLib.dll", "ctlEnumPowerDomains")
Interceptor.attach(ctlEnumPowerDomains, {onLeave: function (args) {send("ctlEnumPowerDomains");}});

var ctlEnumTemperatureSensors = Module.findExportByName("IntelControlLib.dll", "ctlEnumTemperatureSensors")
Interceptor.attach(ctlEnumTemperatureSensors, {onLeave: function (args) {send("ctlEnumTemperatureSensors");}});

var ctlEnumerateDevices = Module.findExportByName("IntelControlLib.dll", "ctlEnumerateDevices")
Interceptor.attach(ctlEnumerateDevices, {onLeave: function (args) {send("ctlEnumerateDevices");}});

var ctlEnumerateDisplayOutputs = Module.findExportByName("IntelControlLib.dll", "ctlEnumerateDisplayOutputs")
Interceptor.attach(ctlEnumerateDisplayOutputs, {onLeave: function (args) {send("ctlEnumerateDisplayOutputs");}});

var ctlFanGetConfig = Module.findExportByName("IntelControlLib.dll", "ctlFanGetConfig")
Interceptor.attach(ctlFanGetConfig, {onLeave: function (args) {send("ctlFanGetConfig");}});

var ctlFanGetProperties = Module.findExportByName("IntelControlLib.dll", "ctlFanGetProperties")
Interceptor.attach(ctlFanGetProperties, {onLeave: function (args) {send("ctlFanGetProperties");}});

var ctlFanGetState = Module.findExportByName("IntelControlLib.dll", "ctlFanGetState")
Interceptor.attach(ctlFanGetState, {onLeave: function (args) {send("ctlFanGetState");}});

var ctlFanSetDefaultMode = Module.findExportByName("IntelControlLib.dll", "ctlFanSetDefaultMode")
Interceptor.attach(ctlFanSetDefaultMode, {onLeave: function (args) {send("ctlFanSetDefaultMode");}});

var ctlFanSetFixedSpeedMode = Module.findExportByName("IntelControlLib.dll", "ctlFanSetFixedSpeedMode")
Interceptor.attach(ctlFanSetFixedSpeedMode, {onLeave: function (args) {send("ctlFanSetFixedSpeedMode");}});

var ctlFanSetSpeedTableMode = Module.findExportByName("IntelControlLib.dll", "ctlFanSetSpeedTableMode")
Interceptor.attach(ctlFanSetSpeedTableMode, {onLeave: function (args) {send("ctlFanSetSpeedTableMode");}});

var ctlFrequencyGetAvailableClocks = Module.findExportByName("IntelControlLib.dll", "ctlFrequencyGetAvailableClocks")
Interceptor.attach(ctlFrequencyGetAvailableClocks, {onLeave: function (args) {send("ctlFrequencyGetAvailableClocks");}});

var ctlFrequencyGetProperties = Module.findExportByName("IntelControlLib.dll", "ctlFrequencyGetProperties")
Interceptor.attach(ctlFrequencyGetProperties, {onLeave: function (args) {send("ctlFrequencyGetProperties");}});

var ctlFrequencyGetRange = Module.findExportByName("IntelControlLib.dll", "ctlFrequencyGetRange")
Interceptor.attach(ctlFrequencyGetRange, {onLeave: function (args) {send("ctlFrequencyGetRange");}});

var ctlFrequencyGetState = Module.findExportByName("IntelControlLib.dll", "ctlFrequencyGetState")
Interceptor.attach(ctlFrequencyGetState, {onLeave: function (args) {send("ctlFrequencyGetState");}});

var ctlFrequencyGetThrottleTime = Module.findExportByName("IntelControlLib.dll", "ctlFrequencyGetThrottleTime")
Interceptor.attach(ctlFrequencyGetThrottleTime, {onLeave: function (args) {send("ctlFrequencyGetThrottleTime");}});

var ctlFrequencySetRange = Module.findExportByName("IntelControlLib.dll", "ctlFrequencySetRange")
Interceptor.attach(ctlFrequencySetRange, {onLeave: function (args) {send("ctlFrequencySetRange");}});

var ctlGetAdaperDisplayEncoderProperties = Module.findExportByName("IntelControlLib.dll", "ctlGetAdaperDisplayEncoderProperties")
Interceptor.attach(ctlGetAdaperDisplayEncoderProperties, {onLeave: function (args) {send("ctlGetAdaperDisplayEncoderProperties");}});

var ctlGetCurrentScaling = Module.findExportByName("IntelControlLib.dll", "ctlGetCurrentScaling")
Interceptor.attach(ctlGetCurrentScaling, {onLeave: function (args) {send("ctlGetCurrentScaling");}});

var ctlGetCurrentSharpness = Module.findExportByName("IntelControlLib.dll", "ctlGetCurrentSharpness")
Interceptor.attach(ctlGetCurrentSharpness, {onLeave: function (args) {send("ctlGetCurrentSharpness");}});

var ctlGetDeviceProperties = Module.findExportByName("IntelControlLib.dll", "ctlGetDeviceProperties")
Interceptor.attach(ctlGetDeviceProperties, {onLeave: function (args) {send("ctlGetDeviceProperties");}});

var ctlGetDisplayProperties = Module.findExportByName("IntelControlLib.dll", "ctlGetDisplayProperties")
Interceptor.attach(ctlGetDisplayProperties, {onLeave: function (args) {send("ctlGetDisplayProperties");}});

var ctlGetIntelArcSyncInfoForMonitor = Module.findExportByName("IntelControlLib.dll", "ctlGetIntelArcSyncInfoForMonitor")
Interceptor.attach(ctlGetIntelArcSyncInfoForMonitor, {onLeave: function (args) {send("ctlGetIntelArcSyncInfoForMonitor");}});

var ctlGetIntelArcSyncProfile = Module.findExportByName("IntelControlLib.dll", "ctlGetIntelArcSyncProfile")
Interceptor.attach(ctlGetIntelArcSyncProfile, {onLeave: function (args) {send("ctlGetIntelArcSyncProfile");}});

var ctlGetLACEConfig = Module.findExportByName("IntelControlLib.dll", "ctlGetLACEConfig")
Interceptor.attach(ctlGetLACEConfig, {onLeave: function (args) {send("ctlGetLACEConfig");}});

var ctlGetPowerOptimizationCaps = Module.findExportByName("IntelControlLib.dll", "ctlGetPowerOptimizationCaps")
Interceptor.attach(ctlGetPowerOptimizationCaps, {onLeave: function (args) {send("ctlGetPowerOptimizationCaps");}});

var ctlGetPowerOptimizationSetting = Module.findExportByName("IntelControlLib.dll", "ctlGetPowerOptimizationSetting")
Interceptor.attach(ctlGetPowerOptimizationSetting, {onLeave: function (args) {send("ctlGetPowerOptimizationSetting");}});

var ctlGetSet3DFeature = Module.findExportByName("IntelControlLib.dll", "ctlGetSet3DFeature")
Interceptor.attach(ctlGetSet3DFeature, {onLeave: function (args) {send("ctlGetSet3DFeature");}});

var ctlGetSetRetroScaling = Module.findExportByName("IntelControlLib.dll", "ctlGetSetRetroScaling")
Interceptor.attach(ctlGetSetRetroScaling, {onLeave: function (args) {send("ctlGetSetRetroScaling");}});

var ctlGetSetVideoProcessingFeature = Module.findExportByName("IntelControlLib.dll", "ctlGetSetVideoProcessingFeature")
Interceptor.attach(ctlGetSetVideoProcessingFeature, {onLeave: function (args) {send("ctlGetSetVideoProcessingFeature");}});

var ctlGetSharpnessCaps = Module.findExportByName("IntelControlLib.dll", "ctlGetSharpnessCaps")
Interceptor.attach(ctlGetSharpnessCaps, {onLeave: function (args) {send("ctlGetSharpnessCaps");}});

var ctlGetSupported3DCapabilities = Module.findExportByName("IntelControlLib.dll", "ctlGetSupported3DCapabilities")
Interceptor.attach(ctlGetSupported3DCapabilities, {onLeave: function (args) {send("ctlGetSupported3DCapabilities");}});

var ctlGetSupportedRetroScalingCapability = Module.findExportByName("IntelControlLib.dll", "ctlGetSupportedRetroScalingCapability")
Interceptor.attach(ctlGetSupportedRetroScalingCapability, {onLeave: function (args) {send("ctlGetSupportedRetroScalingCapability");}});

var ctlGetSupportedScalingCapability = Module.findExportByName("IntelControlLib.dll", "ctlGetSupportedScalingCapability")
Interceptor.attach(ctlGetSupportedScalingCapability, {onLeave: function (args) {send("ctlGetSupportedScalingCapability");}});

var ctlGetSupportedVideoProcessingCapabilities = Module.findExportByName("IntelControlLib.dll", "ctlGetSupportedVideoProcessingCapabilities")
Interceptor.attach(ctlGetSupportedVideoProcessingCapabilities, {onLeave: function (args) {send("ctlGetSupportedVideoProcessingCapabilities");}});

var ctlGetZeDevice = Module.findExportByName("IntelControlLib.dll", "ctlGetZeDevice")
Interceptor.attach(ctlGetZeDevice, {onLeave: function (args) {send("ctlGetZeDevice");}});

var ctlI2CAccess = Module.findExportByName("IntelControlLib.dll", "ctlI2CAccess")
Interceptor.attach(ctlI2CAccess, {onLeave: function (args) {send("ctlI2CAccess");}});

var ctlInit = Module.findExportByName("IntelControlLib.dll", "ctlInit")
Interceptor.attach(ctlInit, {onLeave: function (args) {send("ctlInit");}});

var ctlMemoryGetBandwidth = Module.findExportByName("IntelControlLib.dll", "ctlMemoryGetBandwidth")
Interceptor.attach(ctlMemoryGetBandwidth, {onLeave: function (args) {send("ctlMemoryGetBandwidth");}});

var ctlMemoryGetProperties = Module.findExportByName("IntelControlLib.dll", "ctlMemoryGetProperties")
Interceptor.attach(ctlMemoryGetProperties, {onLeave: function (args) {send("ctlMemoryGetProperties");}});

var ctlMemoryGetState = Module.findExportByName("IntelControlLib.dll", "ctlMemoryGetState")
Interceptor.attach(ctlMemoryGetState, {onLeave: function (args) {send("ctlMemoryGetState");}});

var ctlOverclockGetProperties = Module.findExportByName("IntelControlLib.dll", "ctlOverclockGetProperties")
Interceptor.attach(ctlOverclockGetProperties, {onLeave: function (args) {send("ctlOverclockGetProperties");}});

var ctlOverclockGpuFrequencyOffsetGet = Module.findExportByName("IntelControlLib.dll", "ctlOverclockGpuFrequencyOffsetGet")
Interceptor.attach(ctlOverclockGpuFrequencyOffsetGet, {onLeave: function (args) {send("ctlOverclockGpuFrequencyOffsetGet");}});

var ctlOverclockGpuFrequencyOffsetSet = Module.findExportByName("IntelControlLib.dll", "ctlOverclockGpuFrequencyOffsetSet")
Interceptor.attach(ctlOverclockGpuFrequencyOffsetSet, {onLeave: function (args) {send("ctlOverclockGpuFrequencyOffsetSet");}});

var ctlOverclockGpuLockGet = Module.findExportByName("IntelControlLib.dll", "ctlOverclockGpuLockGet")
Interceptor.attach(ctlOverclockGpuLockGet, {onLeave: function (args) {send("ctlOverclockGpuLockGet");}});

var ctlOverclockGpuLockSet = Module.findExportByName("IntelControlLib.dll", "ctlOverclockGpuLockSet")
Interceptor.attach(ctlOverclockGpuLockSet, {onLeave: function (args) {send("ctlOverclockGpuLockSet");}});

var ctlOverclockGpuVoltageOffsetGet = Module.findExportByName("IntelControlLib.dll", "ctlOverclockGpuVoltageOffsetGet")
Interceptor.attach(ctlOverclockGpuVoltageOffsetGet, {onLeave: function (args) {send("ctlOverclockGpuVoltageOffsetGet");}});

var ctlOverclockGpuVoltageOffsetSet = Module.findExportByName("IntelControlLib.dll", "ctlOverclockGpuVoltageOffsetSet")
Interceptor.attach(ctlOverclockGpuVoltageOffsetSet, {onLeave: function (args) {send("ctlOverclockGpuVoltageOffsetSet");}});

var ctlOverclockPowerLimitGet = Module.findExportByName("IntelControlLib.dll", "ctlOverclockPowerLimitGet")
Interceptor.attach(ctlOverclockPowerLimitGet, {onLeave: function (args) {send("ctlOverclockPowerLimitGet");}});

var ctlOverclockPowerLimitSet = Module.findExportByName("IntelControlLib.dll", "ctlOverclockPowerLimitSet")
Interceptor.attach(ctlOverclockPowerLimitSet, {onLeave: function (args) {send("ctlOverclockPowerLimitSet");}});

var ctlOverclockTemperatureLimitGet = Module.findExportByName("IntelControlLib.dll", "ctlOverclockTemperatureLimitGet")
Interceptor.attach(ctlOverclockTemperatureLimitGet, {onLeave: function (args) {send("ctlOverclockTemperatureLimitGet");}});

var ctlOverclockTemperatureLimitSet = Module.findExportByName("IntelControlLib.dll", "ctlOverclockTemperatureLimitSet")
Interceptor.attach(ctlOverclockTemperatureLimitSet, {onLeave: function (args) {send("ctlOverclockTemperatureLimitSet");}});

var ctlOverclockVramFrequencyOffsetGet = Module.findExportByName("IntelControlLib.dll", "ctlOverclockVramFrequencyOffsetGet")
Interceptor.attach(ctlOverclockVramFrequencyOffsetGet, {onLeave: function (args) {send("ctlOverclockVramFrequencyOffsetGet");}});

var ctlOverclockVramFrequencyOffsetSet = Module.findExportByName("IntelControlLib.dll", "ctlOverclockVramFrequencyOffsetSet")
Interceptor.attach(ctlOverclockVramFrequencyOffsetSet, {onLeave: function (args) {send("ctlOverclockVramFrequencyOffsetSet");}});

var ctlOverclockVramVoltageOffsetGet = Module.findExportByName("IntelControlLib.dll", "ctlOverclockVramVoltageOffsetGet")
Interceptor.attach(ctlOverclockVramVoltageOffsetGet, {onLeave: function (args) {send("ctlOverclockVramVoltageOffsetGet");}});

var ctlOverclockVramVoltageOffsetSet = Module.findExportByName("IntelControlLib.dll", "ctlOverclockVramVoltageOffsetSet")
Interceptor.attach(ctlOverclockVramVoltageOffsetSet, {onLeave: function (args) {send("ctlOverclockVramVoltageOffsetSet");}});

var ctlOverclockWaiverSet = Module.findExportByName("IntelControlLib.dll", "ctlOverclockWaiverSet")
Interceptor.attach(ctlOverclockWaiverSet, {onLeave: function (args) {send("ctlOverclockWaiverSet");}});

var ctlPanelDescriptorAccess = Module.findExportByName("IntelControlLib.dll", "ctlPanelDescriptorAccess")
Interceptor.attach(ctlPanelDescriptorAccess, {onLeave: function (args) {send("ctlPanelDescriptorAccess");}});

var ctlPciGetProperties = Module.findExportByName("IntelControlLib.dll", "ctlPciGetProperties")
Interceptor.attach(ctlPciGetProperties, {onLeave: function (args) {send("ctlPciGetProperties");}});

var ctlPciGetState = Module.findExportByName("IntelControlLib.dll", "ctlPciGetState")
Interceptor.attach(ctlPciGetState, {onLeave: function (args) {send("ctlPciGetState");}});

var ctlPixelTransformationGetConfig = Module.findExportByName("IntelControlLib.dll", "ctlPixelTransformationGetConfig")
Interceptor.attach(ctlPixelTransformationGetConfig, {onLeave: function (args) {send("ctlPixelTransformationGetConfig");}});

var ctlPixelTransformationSetConfig = Module.findExportByName("IntelControlLib.dll", "ctlPixelTransformationSetConfig")
Interceptor.attach(ctlPixelTransformationSetConfig, {onLeave: function (args) {send("ctlPixelTransformationSetConfig");}});

var ctlPowerGetEnergyCounter = Module.findExportByName("IntelControlLib.dll", "ctlPowerGetEnergyCounter")
Interceptor.attach(ctlPowerGetEnergyCounter, {onLeave: function (args) {send("ctlPowerGetEnergyCounter");}});

var ctlPowerGetLimits = Module.findExportByName("IntelControlLib.dll", "ctlPowerGetLimits")
Interceptor.attach(ctlPowerGetLimits, {onLeave: function (args) {send("ctlPowerGetLimits");}});

var ctlPowerGetProperties = Module.findExportByName("IntelControlLib.dll", "ctlPowerGetProperties")
Interceptor.attach(ctlPowerGetProperties, {onLeave: function (args) {send("ctlPowerGetProperties");}});

var ctlPowerSetLimits = Module.findExportByName("IntelControlLib.dll", "ctlPowerSetLimits")
Interceptor.attach(ctlPowerSetLimits, {onLeave: function (args) {send("ctlPowerSetLimits");}});

var ctlPowerTelemetryGet = Module.findExportByName("IntelControlLib.dll", "ctlPowerTelemetryGet")
Interceptor.attach(ctlPowerTelemetryGet, {onLeave: function (args) {send("ctlPowerTelemetryGet");}});

var ctlReservedCall = Module.findExportByName("IntelControlLib.dll", "ctlReservedCall")
Interceptor.attach(ctlReservedCall, {onLeave: function (args) {send("ctlReservedCall");}});

var ctlSetCurrentScaling = Module.findExportByName("IntelControlLib.dll", "ctlSetCurrentScaling")
Interceptor.attach(ctlSetCurrentScaling, {onLeave: function (args) {send("ctlSetCurrentScaling");}});

var ctlSetCurrentSharpness = Module.findExportByName("IntelControlLib.dll", "ctlSetCurrentSharpness")
Interceptor.attach(ctlSetCurrentSharpness, {onLeave: function (args) {send("ctlSetCurrentSharpness");}});

var ctlSetIntelArcSyncProfile = Module.findExportByName("IntelControlLib.dll", "ctlSetIntelArcSyncProfile")
Interceptor.attach(ctlSetIntelArcSyncProfile, {onLeave: function (args) {send("ctlSetIntelArcSyncProfile");}});

var ctlSetLACEConfig = Module.findExportByName("IntelControlLib.dll", "ctlSetLACEConfig")
Interceptor.attach(ctlSetLACEConfig, {onLeave: function (args) {send("ctlSetLACEConfig");}});

var ctlSetPowerOptimizationSetting = Module.findExportByName("IntelControlLib.dll", "ctlSetPowerOptimizationSetting")
Interceptor.attach(ctlSetPowerOptimizationSetting, {onLeave: function (args) {send("ctlSetPowerOptimizationSetting");}});

var ctlSetRuntimePath = Module.findExportByName("IntelControlLib.dll", "ctlSetRuntimePath")
Interceptor.attach(ctlSetRuntimePath, {onLeave: function (args) {send("ctlSetRuntimePath");}});

var ctlSoftwarePSR = Module.findExportByName("IntelControlLib.dll", "ctlSoftwarePSR")
Interceptor.attach(ctlSoftwarePSR, {onLeave: function (args) {send("ctlSoftwarePSR");}});

var ctlTemperatureGetProperties = Module.findExportByName("IntelControlLib.dll", "ctlTemperatureGetProperties")
Interceptor.attach(ctlTemperatureGetProperties, {onLeave: function (args) {send("ctlTemperatureGetProperties");}});

var ctlTemperatureGetState = Module.findExportByName("IntelControlLib.dll", "ctlTemperatureGetState")
Interceptor.attach(ctlTemperatureGetState, {onLeave: function (args) {send("ctlTemperatureGetState");}});

var ctlWaitForPropertyChange = Module.findExportByName("IntelControlLib.dll", "ctlWaitForPropertyChange")
Interceptor.attach(ctlWaitForPropertyChange, {onLeave: function (args) {send("ctlWaitForPropertyChange");}});

var ctlpvtTestFunction = Module.findExportByName("IntelControlLib.dll", "ctlpvtTestFunction")
Interceptor.attach(ctlpvtTestFunction, {onLeave: function (args) {send("ctlpvtTestFunction");}});

