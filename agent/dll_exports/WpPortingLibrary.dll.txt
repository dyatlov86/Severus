var GetAppStorageFolder = Module.findExportByName("WpPortingLibrary.dll", "GetAppStorageFolder")
Interceptor.attach(GetAppStorageFolder, {onLeave: function (args) {send("GetAppStorageFolder");}});

var GetDeviceUniqueID = Module.findExportByName("WpPortingLibrary.dll", "GetDeviceUniqueID")
Interceptor.attach(GetDeviceUniqueID, {onLeave: function (args) {send("GetDeviceUniqueID");}});

var GetPhoneBuildInfo = Module.findExportByName("WpPortingLibrary.dll", "GetPhoneBuildInfo")
Interceptor.attach(GetPhoneBuildInfo, {onLeave: function (args) {send("GetPhoneBuildInfo");}});

var GetStorageDeviceInfo = Module.findExportByName("WpPortingLibrary.dll", "GetStorageDeviceInfo")
Interceptor.attach(GetStorageDeviceInfo, {onLeave: function (args) {send("GetStorageDeviceInfo");}});

var Is_AppXExecutionServiceReady_Available = Module.findExportByName("WpPortingLibrary.dll", "Is_AppXExecutionServiceReady_Available")
Interceptor.attach(Is_AppXExecutionServiceReady_Available, {onLeave: function (args) {send("Is_AppXExecutionServiceReady_Available");}});

var Is_BatterySaverState_Available = Module.findExportByName("WpPortingLibrary.dll", "Is_BatterySaverState_Available")
Interceptor.attach(Is_BatterySaverState_Available, {onLeave: function (args) {send("Is_BatterySaverState_Available");}});

var Is_GrantWPNoNetworkingRegistryAccess_Hack_Available = Module.findExportByName("WpPortingLibrary.dll", "Is_GrantWPNoNetworkingRegistryAccess_Hack_Available")
Interceptor.attach(Is_GrantWPNoNetworkingRegistryAccess_Hack_Available, {onLeave: function (args) {send("Is_GrantWPNoNetworkingRegistryAccess_Hack_Available");}});

var Is_OsBeginPostBootWorkState_Available = Module.findExportByName("WpPortingLibrary.dll", "Is_OsBeginPostBootWorkState_Available")
Interceptor.attach(Is_OsBeginPostBootWorkState_Available, {onLeave: function (args) {send("Is_OsBeginPostBootWorkState_Available");}});

var Is_ProvisioningCompleteState_Available = Module.findExportByName("WpPortingLibrary.dll", "Is_ProvisioningCompleteState_Available")
Interceptor.attach(Is_ProvisioningCompleteState_Available, {onLeave: function (args) {send("Is_ProvisioningCompleteState_Available");}});

var Is_ShellReadyInternalState_Available = Module.findExportByName("WpPortingLibrary.dll", "Is_ShellReadyInternalState_Available")
Interceptor.attach(Is_ShellReadyInternalState_Available, {onLeave: function (args) {send("Is_ShellReadyInternalState_Available");}});

var Is_ShellStartReady_Available = Module.findExportByName("WpPortingLibrary.dll", "Is_ShellStartReady_Available")
Interceptor.attach(Is_ShellStartReady_Available, {onLeave: function (args) {send("Is_ShellStartReady_Available");}});

var Is_TaskScheduler_Available = Module.findExportByName("WpPortingLibrary.dll", "Is_TaskScheduler_Available")
Interceptor.attach(Is_TaskScheduler_Available, {onLeave: function (args) {send("Is_TaskScheduler_Available");}});

var Is_VoIPActiveCallState_Available = Module.findExportByName("WpPortingLibrary.dll", "Is_VoIPActiveCallState_Available")
Interceptor.attach(Is_VoIPActiveCallState_Available, {onLeave: function (args) {send("Is_VoIPActiveCallState_Available");}});

var PackageFullNameFromProductIdAndVersion = Module.findExportByName("WpPortingLibrary.dll", "PackageFullNameFromProductIdAndVersion")
Interceptor.attach(PackageFullNameFromProductIdAndVersion, {onLeave: function (args) {send("PackageFullNameFromProductIdAndVersion");}});

var PackageFullNameFromProductInfo = Module.findExportByName("WpPortingLibrary.dll", "PackageFullNameFromProductInfo")
Interceptor.attach(PackageFullNameFromProductInfo, {onLeave: function (args) {send("PackageFullNameFromProductInfo");}});

var ProductInfoFromPackageFullName = Module.findExportByName("WpPortingLibrary.dll", "ProductInfoFromPackageFullName")
Interceptor.attach(ProductInfoFromPackageFullName, {onLeave: function (args) {send("ProductInfoFromPackageFullName");}});

var QueryPhoneInformation = Module.findExportByName("WpPortingLibrary.dll", "QueryPhoneInformation")
Interceptor.attach(QueryPhoneInformation, {onLeave: function (args) {send("QueryPhoneInformation");}});

var TaskSchedulerCreateSchedule = Module.findExportByName("WpPortingLibrary.dll", "TaskSchedulerCreateSchedule")
Interceptor.attach(TaskSchedulerCreateSchedule, {onLeave: function (args) {send("TaskSchedulerCreateSchedule");}});

var TaskSchedulerDeinit = Module.findExportByName("WpPortingLibrary.dll", "TaskSchedulerDeinit")
Interceptor.attach(TaskSchedulerDeinit, {onLeave: function (args) {send("TaskSchedulerDeinit");}});

var TaskSchedulerDeleteSchedule = Module.findExportByName("WpPortingLibrary.dll", "TaskSchedulerDeleteSchedule")
Interceptor.attach(TaskSchedulerDeleteSchedule, {onLeave: function (args) {send("TaskSchedulerDeleteSchedule");}});

var TaskSchedulerEnableSchedule = Module.findExportByName("WpPortingLibrary.dll", "TaskSchedulerEnableSchedule")
Interceptor.attach(TaskSchedulerEnableSchedule, {onLeave: function (args) {send("TaskSchedulerEnableSchedule");}});

var TaskSchedulerFreeSchedule = Module.findExportByName("WpPortingLibrary.dll", "TaskSchedulerFreeSchedule")
Interceptor.attach(TaskSchedulerFreeSchedule, {onLeave: function (args) {send("TaskSchedulerFreeSchedule");}});

var TaskSchedulerFreeScheduleStatistics = Module.findExportByName("WpPortingLibrary.dll", "TaskSchedulerFreeScheduleStatistics")
Interceptor.attach(TaskSchedulerFreeScheduleStatistics, {onLeave: function (args) {send("TaskSchedulerFreeScheduleStatistics");}});

var TaskSchedulerGetPublishStateName = Module.findExportByName("WpPortingLibrary.dll", "TaskSchedulerGetPublishStateName")
Interceptor.attach(TaskSchedulerGetPublishStateName, {onLeave: function (args) {send("TaskSchedulerGetPublishStateName");}});

var TaskSchedulerGetSchedule = Module.findExportByName("WpPortingLibrary.dll", "TaskSchedulerGetSchedule")
Interceptor.attach(TaskSchedulerGetSchedule, {onLeave: function (args) {send("TaskSchedulerGetSchedule");}});

var TaskSchedulerInit = Module.findExportByName("WpPortingLibrary.dll", "TaskSchedulerInit")
Interceptor.attach(TaskSchedulerInit, {onLeave: function (args) {send("TaskSchedulerInit");}});

