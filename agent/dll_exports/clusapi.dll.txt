var AddClusterGroupDependency = Module.findExportByName("clusapi.dll", "AddClusterGroupDependency")
Interceptor.attach(AddClusterGroupDependency, {onLeave: function (args) {send("AddClusterGroupDependency");}});

var AddClusterGroupDependencyEx = Module.findExportByName("clusapi.dll", "AddClusterGroupDependencyEx")
Interceptor.attach(AddClusterGroupDependencyEx, {onLeave: function (args) {send("AddClusterGroupDependencyEx");}});

var AddClusterGroupSetDependency = Module.findExportByName("clusapi.dll", "AddClusterGroupSetDependency")
Interceptor.attach(AddClusterGroupSetDependency, {onLeave: function (args) {send("AddClusterGroupSetDependency");}});

var AddClusterGroupSetDependencyEx = Module.findExportByName("clusapi.dll", "AddClusterGroupSetDependencyEx")
Interceptor.attach(AddClusterGroupSetDependencyEx, {onLeave: function (args) {send("AddClusterGroupSetDependencyEx");}});

var AddClusterGroupToGroupSetDependency = Module.findExportByName("clusapi.dll", "AddClusterGroupToGroupSetDependency")
Interceptor.attach(AddClusterGroupToGroupSetDependency, {onLeave: function (args) {send("AddClusterGroupToGroupSetDependency");}});

var AddClusterGroupToGroupSetDependencyEx = Module.findExportByName("clusapi.dll", "AddClusterGroupToGroupSetDependencyEx")
Interceptor.attach(AddClusterGroupToGroupSetDependencyEx, {onLeave: function (args) {send("AddClusterGroupToGroupSetDependencyEx");}});

var AddClusterNode = Module.findExportByName("clusapi.dll", "AddClusterNode")
Interceptor.attach(AddClusterNode, {onLeave: function (args) {send("AddClusterNode");}});

var AddClusterNodeEx = Module.findExportByName("clusapi.dll", "AddClusterNodeEx")
Interceptor.attach(AddClusterNodeEx, {onLeave: function (args) {send("AddClusterNodeEx");}});

var AddClusterResourceDependency = Module.findExportByName("clusapi.dll", "AddClusterResourceDependency")
Interceptor.attach(AddClusterResourceDependency, {onLeave: function (args) {send("AddClusterResourceDependency");}});

var AddClusterResourceDependencyEx = Module.findExportByName("clusapi.dll", "AddClusterResourceDependencyEx")
Interceptor.attach(AddClusterResourceDependencyEx, {onLeave: function (args) {send("AddClusterResourceDependencyEx");}});

var AddClusterResourceNode = Module.findExportByName("clusapi.dll", "AddClusterResourceNode")
Interceptor.attach(AddClusterResourceNode, {onLeave: function (args) {send("AddClusterResourceNode");}});

var AddClusterResourceNodeEx = Module.findExportByName("clusapi.dll", "AddClusterResourceNodeEx")
Interceptor.attach(AddClusterResourceNodeEx, {onLeave: function (args) {send("AddClusterResourceNodeEx");}});

var AddClusterStorageNode = Module.findExportByName("clusapi.dll", "AddClusterStorageNode")
Interceptor.attach(AddClusterStorageNode, {onLeave: function (args) {send("AddClusterStorageNode");}});

var AddCrossClusterGroupSetDependency = Module.findExportByName("clusapi.dll", "AddCrossClusterGroupSetDependency")
Interceptor.attach(AddCrossClusterGroupSetDependency, {onLeave: function (args) {send("AddCrossClusterGroupSetDependency");}});

var AddResourceToClusterSharedVolumes = Module.findExportByName("clusapi.dll", "AddResourceToClusterSharedVolumes")
Interceptor.attach(AddResourceToClusterSharedVolumes, {onLeave: function (args) {send("AddResourceToClusterSharedVolumes");}});

var AddResourceToClusterSharedVolumesEx = Module.findExportByName("clusapi.dll", "AddResourceToClusterSharedVolumesEx")
Interceptor.attach(AddResourceToClusterSharedVolumesEx, {onLeave: function (args) {send("AddResourceToClusterSharedVolumesEx");}});

var AddResourceToClusterSharedVolumesEx2 = Module.findExportByName("clusapi.dll", "AddResourceToClusterSharedVolumesEx2")
Interceptor.attach(AddResourceToClusterSharedVolumesEx2, {onLeave: function (args) {send("AddResourceToClusterSharedVolumesEx2");}});

var BackupClusterDatabase = Module.findExportByName("clusapi.dll", "BackupClusterDatabase")
Interceptor.attach(BackupClusterDatabase, {onLeave: function (args) {send("BackupClusterDatabase");}});

var CCHlpAddNodeUpdateCluster = Module.findExportByName("clusapi.dll", "CCHlpAddNodeUpdateCluster")
Interceptor.attach(CCHlpAddNodeUpdateCluster, {onLeave: function (args) {send("CCHlpAddNodeUpdateCluster");}});

var CCHlpConfigureNode = Module.findExportByName("clusapi.dll", "CCHlpConfigureNode")
Interceptor.attach(CCHlpConfigureNode, {onLeave: function (args) {send("CCHlpConfigureNode");}});

var CCHlpCreateClusterNameCOIfNotExists = Module.findExportByName("clusapi.dll", "CCHlpCreateClusterNameCOIfNotExists")
Interceptor.attach(CCHlpCreateClusterNameCOIfNotExists, {onLeave: function (args) {send("CCHlpCreateClusterNameCOIfNotExists");}});

var CCHlpCreateClusterNameInAD = Module.findExportByName("clusapi.dll", "CCHlpCreateClusterNameInAD")
Interceptor.attach(CCHlpCreateClusterNameInAD, {onLeave: function (args) {send("CCHlpCreateClusterNameInAD");}});

var CCHlpGetClusterServiceSecret = Module.findExportByName("clusapi.dll", "CCHlpGetClusterServiceSecret")
Interceptor.attach(CCHlpGetClusterServiceSecret, {onLeave: function (args) {send("CCHlpGetClusterServiceSecret");}});

var CCHlpGetDNSHostLabel = Module.findExportByName("clusapi.dll", "CCHlpGetDNSHostLabel")
Interceptor.attach(CCHlpGetDNSHostLabel, {onLeave: function (args) {send("CCHlpGetDNSHostLabel");}});

var CCHlpRestoreClusterVirtualObjectToInitialState = Module.findExportByName("clusapi.dll", "CCHlpRestoreClusterVirtualObjectToInitialState")
Interceptor.attach(CCHlpRestoreClusterVirtualObjectToInitialState, {onLeave: function (args) {send("CCHlpRestoreClusterVirtualObjectToInitialState");}});

var CanResourceBeDependent = Module.findExportByName("clusapi.dll", "CanResourceBeDependent")
Interceptor.attach(CanResourceBeDependent, {onLeave: function (args) {send("CanResourceBeDependent");}});

var CancelClusterGroupOperation = Module.findExportByName("clusapi.dll", "CancelClusterGroupOperation")
Interceptor.attach(CancelClusterGroupOperation, {onLeave: function (args) {send("CancelClusterGroupOperation");}});

var ChangeClusterResourceGroup = Module.findExportByName("clusapi.dll", "ChangeClusterResourceGroup")
Interceptor.attach(ChangeClusterResourceGroup, {onLeave: function (args) {send("ChangeClusterResourceGroup");}});

var ChangeClusterResourceGroupEx = Module.findExportByName("clusapi.dll", "ChangeClusterResourceGroupEx")
Interceptor.attach(ChangeClusterResourceGroupEx, {onLeave: function (args) {send("ChangeClusterResourceGroupEx");}});

var ChangeClusterResourceGroupEx2 = Module.findExportByName("clusapi.dll", "ChangeClusterResourceGroupEx2")
Interceptor.attach(ChangeClusterResourceGroupEx2, {onLeave: function (args) {send("ChangeClusterResourceGroupEx2");}});

var CloseCluster = Module.findExportByName("clusapi.dll", "CloseCluster")
Interceptor.attach(CloseCluster, {onLeave: function (args) {send("CloseCluster");}});

var CloseClusterGroup = Module.findExportByName("clusapi.dll", "CloseClusterGroup")
Interceptor.attach(CloseClusterGroup, {onLeave: function (args) {send("CloseClusterGroup");}});

var CloseClusterGroupSet = Module.findExportByName("clusapi.dll", "CloseClusterGroupSet")
Interceptor.attach(CloseClusterGroupSet, {onLeave: function (args) {send("CloseClusterGroupSet");}});

var CloseClusterNetInterface = Module.findExportByName("clusapi.dll", "CloseClusterNetInterface")
Interceptor.attach(CloseClusterNetInterface, {onLeave: function (args) {send("CloseClusterNetInterface");}});

var CloseClusterNetwork = Module.findExportByName("clusapi.dll", "CloseClusterNetwork")
Interceptor.attach(CloseClusterNetwork, {onLeave: function (args) {send("CloseClusterNetwork");}});

var CloseClusterNode = Module.findExportByName("clusapi.dll", "CloseClusterNode")
Interceptor.attach(CloseClusterNode, {onLeave: function (args) {send("CloseClusterNode");}});

var CloseClusterNotifyPort = Module.findExportByName("clusapi.dll", "CloseClusterNotifyPort")
Interceptor.attach(CloseClusterNotifyPort, {onLeave: function (args) {send("CloseClusterNotifyPort");}});

var CloseClusterResource = Module.findExportByName("clusapi.dll", "CloseClusterResource")
Interceptor.attach(CloseClusterResource, {onLeave: function (args) {send("CloseClusterResource");}});

var CluFreeFaultDomainInfo = Module.findExportByName("clusapi.dll", "CluFreeFaultDomainInfo")
Interceptor.attach(CluFreeFaultDomainInfo, {onLeave: function (args) {send("CluFreeFaultDomainInfo");}});

var CluFreeGuidArrayPtr = Module.findExportByName("clusapi.dll", "CluFreeGuidArrayPtr")
Interceptor.attach(CluFreeGuidArrayPtr, {onLeave: function (args) {send("CluFreeGuidArrayPtr");}});

var CluFreeStr = Module.findExportByName("clusapi.dll", "CluFreeStr")
Interceptor.attach(CluFreeStr, {onLeave: function (args) {send("CluFreeStr");}});

var CluGetDriveInfo = Module.findExportByName("clusapi.dll", "CluGetDriveInfo")
Interceptor.attach(CluGetDriveInfo, {onLeave: function (args) {send("CluGetDriveInfo");}});

var CluGetFaultDomainObject = Module.findExportByName("clusapi.dll", "CluGetFaultDomainObject")
Interceptor.attach(CluGetFaultDomainObject, {onLeave: function (args) {send("CluGetFaultDomainObject");}});

var CluGetFaultDomainObjects = Module.findExportByName("clusapi.dll", "CluGetFaultDomainObjects")
Interceptor.attach(CluGetFaultDomainObjects, {onLeave: function (args) {send("CluGetFaultDomainObjects");}});

var CluRemoveFaultDomainObject = Module.findExportByName("clusapi.dll", "CluRemoveFaultDomainObject")
Interceptor.attach(CluRemoveFaultDomainObject, {onLeave: function (args) {send("CluRemoveFaultDomainObject");}});

var ClusapiSetReasonHandler = Module.findExportByName("clusapi.dll", "ClusapiSetReasonHandler")
Interceptor.attach(ClusapiSetReasonHandler, {onLeave: function (args) {send("ClusapiSetReasonHandler");}});

var ClusterAddGroupToAffinityRule = Module.findExportByName("clusapi.dll", "ClusterAddGroupToAffinityRule")
Interceptor.attach(ClusterAddGroupToAffinityRule, {onLeave: function (args) {send("ClusterAddGroupToAffinityRule");}});

var ClusterAddGroupToGroupSet = Module.findExportByName("clusapi.dll", "ClusterAddGroupToGroupSet")
Interceptor.attach(ClusterAddGroupToGroupSet, {onLeave: function (args) {send("ClusterAddGroupToGroupSet");}});

var ClusterAddGroupToGroupSetWithDomains = Module.findExportByName("clusapi.dll", "ClusterAddGroupToGroupSetWithDomains")
Interceptor.attach(ClusterAddGroupToGroupSetWithDomains, {onLeave: function (args) {send("ClusterAddGroupToGroupSetWithDomains");}});

var ClusterAddGroupToGroupSetWithDomainsEx = Module.findExportByName("clusapi.dll", "ClusterAddGroupToGroupSetWithDomainsEx")
Interceptor.attach(ClusterAddGroupToGroupSetWithDomainsEx, {onLeave: function (args) {send("ClusterAddGroupToGroupSetWithDomainsEx");}});

var ClusterAffinityRuleControl = Module.findExportByName("clusapi.dll", "ClusterAffinityRuleControl")
Interceptor.attach(ClusterAffinityRuleControl, {onLeave: function (args) {send("ClusterAffinityRuleControl");}});

var ClusterCaptureLiveDump = Module.findExportByName("clusapi.dll", "ClusterCaptureLiveDump")
Interceptor.attach(ClusterCaptureLiveDump, {onLeave: function (args) {send("ClusterCaptureLiveDump");}});

var ClusterCaptureLiveDumpEx = Module.findExportByName("clusapi.dll", "ClusterCaptureLiveDumpEx")
Interceptor.attach(ClusterCaptureLiveDumpEx, {onLeave: function (args) {send("ClusterCaptureLiveDumpEx");}});

var ClusterChangeVMSettings = Module.findExportByName("clusapi.dll", "ClusterChangeVMSettings")
Interceptor.attach(ClusterChangeVMSettings, {onLeave: function (args) {send("ClusterChangeVMSettings");}});

var ClusterCloseEnum = Module.findExportByName("clusapi.dll", "ClusterCloseEnum")
Interceptor.attach(ClusterCloseEnum, {onLeave: function (args) {send("ClusterCloseEnum");}});

var ClusterCloseEnumEx = Module.findExportByName("clusapi.dll", "ClusterCloseEnumEx")
Interceptor.attach(ClusterCloseEnumEx, {onLeave: function (args) {send("ClusterCloseEnumEx");}});

var ClusterControl = Module.findExportByName("clusapi.dll", "ClusterControl")
Interceptor.attach(ClusterControl, {onLeave: function (args) {send("ClusterControl");}});

var ClusterControlEx = Module.findExportByName("clusapi.dll", "ClusterControlEx")
Interceptor.attach(ClusterControlEx, {onLeave: function (args) {send("ClusterControlEx");}});

var ClusterCreateAffinityRule = Module.findExportByName("clusapi.dll", "ClusterCreateAffinityRule")
Interceptor.attach(ClusterCreateAffinityRule, {onLeave: function (args) {send("ClusterCreateAffinityRule");}});

var ClusterCreateClusterStorageEnclosure = Module.findExportByName("clusapi.dll", "ClusterCreateClusterStorageEnclosure")
Interceptor.attach(ClusterCreateClusterStorageEnclosure, {onLeave: function (args) {send("ClusterCreateClusterStorageEnclosure");}});

var ClusterCreateFaultDomain = Module.findExportByName("clusapi.dll", "ClusterCreateFaultDomain")
Interceptor.attach(ClusterCreateFaultDomain, {onLeave: function (args) {send("ClusterCreateFaultDomain");}});

var ClusterCreateFaultDomainFromXML = Module.findExportByName("clusapi.dll", "ClusterCreateFaultDomainFromXML")
Interceptor.attach(ClusterCreateFaultDomainFromXML, {onLeave: function (args) {send("ClusterCreateFaultDomainFromXML");}});

var ClusterCreateVMReservation = Module.findExportByName("clusapi.dll", "ClusterCreateVMReservation")
Interceptor.attach(ClusterCreateVMReservation, {onLeave: function (args) {send("ClusterCreateVMReservation");}});

var ClusterCreateVMReservationWithDomains = Module.findExportByName("clusapi.dll", "ClusterCreateVMReservationWithDomains")
Interceptor.attach(ClusterCreateVMReservationWithDomains, {onLeave: function (args) {send("ClusterCreateVMReservationWithDomains");}});

var ClusterEnum = Module.findExportByName("clusapi.dll", "ClusterEnum")
Interceptor.attach(ClusterEnum, {onLeave: function (args) {send("ClusterEnum");}});

var ClusterEnumEx = Module.findExportByName("clusapi.dll", "ClusterEnumEx")
Interceptor.attach(ClusterEnumEx, {onLeave: function (args) {send("ClusterEnumEx");}});

var ClusterFreeMemory = Module.findExportByName("clusapi.dll", "ClusterFreeMemory")
Interceptor.attach(ClusterFreeMemory, {onLeave: function (args) {send("ClusterFreeMemory");}});

var ClusterFreeMrrResponse = Module.findExportByName("clusapi.dll", "ClusterFreeMrrResponse")
Interceptor.attach(ClusterFreeMrrResponse, {onLeave: function (args) {send("ClusterFreeMrrResponse");}});

var ClusterFreeVMReservation = Module.findExportByName("clusapi.dll", "ClusterFreeVMReservation")
Interceptor.attach(ClusterFreeVMReservation, {onLeave: function (args) {send("ClusterFreeVMReservation");}});

var ClusterGetClusterStorageEnclosureObject = Module.findExportByName("clusapi.dll", "ClusterGetClusterStorageEnclosureObject")
Interceptor.attach(ClusterGetClusterStorageEnclosureObject, {onLeave: function (args) {send("ClusterGetClusterStorageEnclosureObject");}});

var ClusterGetClusterStorageEnclosureObjects = Module.findExportByName("clusapi.dll", "ClusterGetClusterStorageEnclosureObjects")
Interceptor.attach(ClusterGetClusterStorageEnclosureObjects, {onLeave: function (args) {send("ClusterGetClusterStorageEnclosureObjects");}});

var ClusterGetDriveInfo = Module.findExportByName("clusapi.dll", "ClusterGetDriveInfo")
Interceptor.attach(ClusterGetDriveInfo, {onLeave: function (args) {send("ClusterGetDriveInfo");}});

var ClusterGetEnumCount = Module.findExportByName("clusapi.dll", "ClusterGetEnumCount")
Interceptor.attach(ClusterGetEnumCount, {onLeave: function (args) {send("ClusterGetEnumCount");}});

var ClusterGetEnumCountEx = Module.findExportByName("clusapi.dll", "ClusterGetEnumCountEx")
Interceptor.attach(ClusterGetEnumCountEx, {onLeave: function (args) {send("ClusterGetEnumCountEx");}});

var ClusterGetFaultDomainObject = Module.findExportByName("clusapi.dll", "ClusterGetFaultDomainObject")
Interceptor.attach(ClusterGetFaultDomainObject, {onLeave: function (args) {send("ClusterGetFaultDomainObject");}});

var ClusterGetFaultDomainObjects = Module.findExportByName("clusapi.dll", "ClusterGetFaultDomainObjects")
Interceptor.attach(ClusterGetFaultDomainObjects, {onLeave: function (args) {send("ClusterGetFaultDomainObjects");}});

var ClusterGetFaultDomainState = Module.findExportByName("clusapi.dll", "ClusterGetFaultDomainState")
Interceptor.attach(ClusterGetFaultDomainState, {onLeave: function (args) {send("ClusterGetFaultDomainState");}});

var ClusterGetFaultDomainXML = Module.findExportByName("clusapi.dll", "ClusterGetFaultDomainXML")
Interceptor.attach(ClusterGetFaultDomainXML, {onLeave: function (args) {send("ClusterGetFaultDomainXML");}});

var ClusterGetMaximumAccessForToken = Module.findExportByName("clusapi.dll", "ClusterGetMaximumAccessForToken")
Interceptor.attach(ClusterGetMaximumAccessForToken, {onLeave: function (args) {send("ClusterGetMaximumAccessForToken");}});

var ClusterGetPlacementScore = Module.findExportByName("clusapi.dll", "ClusterGetPlacementScore")
Interceptor.attach(ClusterGetPlacementScore, {onLeave: function (args) {send("ClusterGetPlacementScore");}});

var ClusterGroupCloseEnum = Module.findExportByName("clusapi.dll", "ClusterGroupCloseEnum")
Interceptor.attach(ClusterGroupCloseEnum, {onLeave: function (args) {send("ClusterGroupCloseEnum");}});

var ClusterGroupCloseEnumEx = Module.findExportByName("clusapi.dll", "ClusterGroupCloseEnumEx")
Interceptor.attach(ClusterGroupCloseEnumEx, {onLeave: function (args) {send("ClusterGroupCloseEnumEx");}});

var ClusterGroupControl = Module.findExportByName("clusapi.dll", "ClusterGroupControl")
Interceptor.attach(ClusterGroupControl, {onLeave: function (args) {send("ClusterGroupControl");}});

var ClusterGroupControlEx = Module.findExportByName("clusapi.dll", "ClusterGroupControlEx")
Interceptor.attach(ClusterGroupControlEx, {onLeave: function (args) {send("ClusterGroupControlEx");}});

var ClusterGroupEnum = Module.findExportByName("clusapi.dll", "ClusterGroupEnum")
Interceptor.attach(ClusterGroupEnum, {onLeave: function (args) {send("ClusterGroupEnum");}});

var ClusterGroupEnumEx = Module.findExportByName("clusapi.dll", "ClusterGroupEnumEx")
Interceptor.attach(ClusterGroupEnumEx, {onLeave: function (args) {send("ClusterGroupEnumEx");}});

var ClusterGroupGetEnumCount = Module.findExportByName("clusapi.dll", "ClusterGroupGetEnumCount")
Interceptor.attach(ClusterGroupGetEnumCount, {onLeave: function (args) {send("ClusterGroupGetEnumCount");}});

var ClusterGroupGetEnumCountEx = Module.findExportByName("clusapi.dll", "ClusterGroupGetEnumCountEx")
Interceptor.attach(ClusterGroupGetEnumCountEx, {onLeave: function (args) {send("ClusterGroupGetEnumCountEx");}});

var ClusterGroupOpenEnum = Module.findExportByName("clusapi.dll", "ClusterGroupOpenEnum")
Interceptor.attach(ClusterGroupOpenEnum, {onLeave: function (args) {send("ClusterGroupOpenEnum");}});

var ClusterGroupOpenEnumEx = Module.findExportByName("clusapi.dll", "ClusterGroupOpenEnumEx")
Interceptor.attach(ClusterGroupOpenEnumEx, {onLeave: function (args) {send("ClusterGroupOpenEnumEx");}});

var ClusterGroupSetCloseEnum = Module.findExportByName("clusapi.dll", "ClusterGroupSetCloseEnum")
Interceptor.attach(ClusterGroupSetCloseEnum, {onLeave: function (args) {send("ClusterGroupSetCloseEnum");}});

var ClusterGroupSetControl = Module.findExportByName("clusapi.dll", "ClusterGroupSetControl")
Interceptor.attach(ClusterGroupSetControl, {onLeave: function (args) {send("ClusterGroupSetControl");}});

var ClusterGroupSetControlEx = Module.findExportByName("clusapi.dll", "ClusterGroupSetControlEx")
Interceptor.attach(ClusterGroupSetControlEx, {onLeave: function (args) {send("ClusterGroupSetControlEx");}});

var ClusterGroupSetEnum = Module.findExportByName("clusapi.dll", "ClusterGroupSetEnum")
Interceptor.attach(ClusterGroupSetEnum, {onLeave: function (args) {send("ClusterGroupSetEnum");}});

var ClusterGroupSetGetEnumCount = Module.findExportByName("clusapi.dll", "ClusterGroupSetGetEnumCount")
Interceptor.attach(ClusterGroupSetGetEnumCount, {onLeave: function (args) {send("ClusterGroupSetGetEnumCount");}});

var ClusterGroupSetOpenEnum = Module.findExportByName("clusapi.dll", "ClusterGroupSetOpenEnum")
Interceptor.attach(ClusterGroupSetOpenEnum, {onLeave: function (args) {send("ClusterGroupSetOpenEnum");}});

var ClusterNetInterfaceCloseEnum = Module.findExportByName("clusapi.dll", "ClusterNetInterfaceCloseEnum")
Interceptor.attach(ClusterNetInterfaceCloseEnum, {onLeave: function (args) {send("ClusterNetInterfaceCloseEnum");}});

var ClusterNetInterfaceControl = Module.findExportByName("clusapi.dll", "ClusterNetInterfaceControl")
Interceptor.attach(ClusterNetInterfaceControl, {onLeave: function (args) {send("ClusterNetInterfaceControl");}});

var ClusterNetInterfaceControlEx = Module.findExportByName("clusapi.dll", "ClusterNetInterfaceControlEx")
Interceptor.attach(ClusterNetInterfaceControlEx, {onLeave: function (args) {send("ClusterNetInterfaceControlEx");}});

var ClusterNetInterfaceEnum = Module.findExportByName("clusapi.dll", "ClusterNetInterfaceEnum")
Interceptor.attach(ClusterNetInterfaceEnum, {onLeave: function (args) {send("ClusterNetInterfaceEnum");}});

var ClusterNetInterfaceOpenEnum = Module.findExportByName("clusapi.dll", "ClusterNetInterfaceOpenEnum")
Interceptor.attach(ClusterNetInterfaceOpenEnum, {onLeave: function (args) {send("ClusterNetInterfaceOpenEnum");}});

var ClusterNetworkCloseEnum = Module.findExportByName("clusapi.dll", "ClusterNetworkCloseEnum")
Interceptor.attach(ClusterNetworkCloseEnum, {onLeave: function (args) {send("ClusterNetworkCloseEnum");}});

var ClusterNetworkControl = Module.findExportByName("clusapi.dll", "ClusterNetworkControl")
Interceptor.attach(ClusterNetworkControl, {onLeave: function (args) {send("ClusterNetworkControl");}});

var ClusterNetworkControlEx = Module.findExportByName("clusapi.dll", "ClusterNetworkControlEx")
Interceptor.attach(ClusterNetworkControlEx, {onLeave: function (args) {send("ClusterNetworkControlEx");}});

var ClusterNetworkEnum = Module.findExportByName("clusapi.dll", "ClusterNetworkEnum")
Interceptor.attach(ClusterNetworkEnum, {onLeave: function (args) {send("ClusterNetworkEnum");}});

var ClusterNetworkGetEnumCount = Module.findExportByName("clusapi.dll", "ClusterNetworkGetEnumCount")
Interceptor.attach(ClusterNetworkGetEnumCount, {onLeave: function (args) {send("ClusterNetworkGetEnumCount");}});

var ClusterNetworkHealthFreeInterfaceConnections = Module.findExportByName("clusapi.dll", "ClusterNetworkHealthFreeInterfaceConnections")
Interceptor.attach(ClusterNetworkHealthFreeInterfaceConnections, {onLeave: function (args) {send("ClusterNetworkHealthFreeInterfaceConnections");}});

var ClusterNetworkHealthFreeNodeConnections = Module.findExportByName("clusapi.dll", "ClusterNetworkHealthFreeNodeConnections")
Interceptor.attach(ClusterNetworkHealthFreeNodeConnections, {onLeave: function (args) {send("ClusterNetworkHealthFreeNodeConnections");}});

var ClusterNetworkHealthGetInterfaceConnections = Module.findExportByName("clusapi.dll", "ClusterNetworkHealthGetInterfaceConnections")
Interceptor.attach(ClusterNetworkHealthGetInterfaceConnections, {onLeave: function (args) {send("ClusterNetworkHealthGetInterfaceConnections");}});

var ClusterNetworkHealthGetNodeConnections = Module.findExportByName("clusapi.dll", "ClusterNetworkHealthGetNodeConnections")
Interceptor.attach(ClusterNetworkHealthGetNodeConnections, {onLeave: function (args) {send("ClusterNetworkHealthGetNodeConnections");}});

var ClusterNetworkOpenEnum = Module.findExportByName("clusapi.dll", "ClusterNetworkOpenEnum")
Interceptor.attach(ClusterNetworkOpenEnum, {onLeave: function (args) {send("ClusterNetworkOpenEnum");}});

var ClusterNodeCloseEnum = Module.findExportByName("clusapi.dll", "ClusterNodeCloseEnum")
Interceptor.attach(ClusterNodeCloseEnum, {onLeave: function (args) {send("ClusterNodeCloseEnum");}});

var ClusterNodeCloseEnumEx = Module.findExportByName("clusapi.dll", "ClusterNodeCloseEnumEx")
Interceptor.attach(ClusterNodeCloseEnumEx, {onLeave: function (args) {send("ClusterNodeCloseEnumEx");}});

var ClusterNodeControl = Module.findExportByName("clusapi.dll", "ClusterNodeControl")
Interceptor.attach(ClusterNodeControl, {onLeave: function (args) {send("ClusterNodeControl");}});

var ClusterNodeControlEx = Module.findExportByName("clusapi.dll", "ClusterNodeControlEx")
Interceptor.attach(ClusterNodeControlEx, {onLeave: function (args) {send("ClusterNodeControlEx");}});

var ClusterNodeEnum = Module.findExportByName("clusapi.dll", "ClusterNodeEnum")
Interceptor.attach(ClusterNodeEnum, {onLeave: function (args) {send("ClusterNodeEnum");}});

var ClusterNodeEnumEx = Module.findExportByName("clusapi.dll", "ClusterNodeEnumEx")
Interceptor.attach(ClusterNodeEnumEx, {onLeave: function (args) {send("ClusterNodeEnumEx");}});

var ClusterNodeGetEnumCount = Module.findExportByName("clusapi.dll", "ClusterNodeGetEnumCount")
Interceptor.attach(ClusterNodeGetEnumCount, {onLeave: function (args) {send("ClusterNodeGetEnumCount");}});

var ClusterNodeGetEnumCountEx = Module.findExportByName("clusapi.dll", "ClusterNodeGetEnumCountEx")
Interceptor.attach(ClusterNodeGetEnumCountEx, {onLeave: function (args) {send("ClusterNodeGetEnumCountEx");}});

var ClusterNodeOpenEnum = Module.findExportByName("clusapi.dll", "ClusterNodeOpenEnum")
Interceptor.attach(ClusterNodeOpenEnum, {onLeave: function (args) {send("ClusterNodeOpenEnum");}});

var ClusterNodeOpenEnumEx = Module.findExportByName("clusapi.dll", "ClusterNodeOpenEnumEx")
Interceptor.attach(ClusterNodeOpenEnumEx, {onLeave: function (args) {send("ClusterNodeOpenEnumEx");}});

var ClusterNodeReplacement = Module.findExportByName("clusapi.dll", "ClusterNodeReplacement")
Interceptor.attach(ClusterNodeReplacement, {onLeave: function (args) {send("ClusterNodeReplacement");}});

var ClusterOpenEnum = Module.findExportByName("clusapi.dll", "ClusterOpenEnum")
Interceptor.attach(ClusterOpenEnum, {onLeave: function (args) {send("ClusterOpenEnum");}});

var ClusterOpenEnumEx = Module.findExportByName("clusapi.dll", "ClusterOpenEnumEx")
Interceptor.attach(ClusterOpenEnumEx, {onLeave: function (args) {send("ClusterOpenEnumEx");}});

var ClusterRegBatchAddCommand = Module.findExportByName("clusapi.dll", "ClusterRegBatchAddCommand")
Interceptor.attach(ClusterRegBatchAddCommand, {onLeave: function (args) {send("ClusterRegBatchAddCommand");}});

var ClusterRegBatchCloseNotification = Module.findExportByName("clusapi.dll", "ClusterRegBatchCloseNotification")
Interceptor.attach(ClusterRegBatchCloseNotification, {onLeave: function (args) {send("ClusterRegBatchCloseNotification");}});

var ClusterRegBatchReadCommand = Module.findExportByName("clusapi.dll", "ClusterRegBatchReadCommand")
Interceptor.attach(ClusterRegBatchReadCommand, {onLeave: function (args) {send("ClusterRegBatchReadCommand");}});

var ClusterRegCloseBatch = Module.findExportByName("clusapi.dll", "ClusterRegCloseBatch")
Interceptor.attach(ClusterRegCloseBatch, {onLeave: function (args) {send("ClusterRegCloseBatch");}});

var ClusterRegCloseBatchEx = Module.findExportByName("clusapi.dll", "ClusterRegCloseBatchEx")
Interceptor.attach(ClusterRegCloseBatchEx, {onLeave: function (args) {send("ClusterRegCloseBatchEx");}});

var ClusterRegCloseBatchNotifyPort = Module.findExportByName("clusapi.dll", "ClusterRegCloseBatchNotifyPort")
Interceptor.attach(ClusterRegCloseBatchNotifyPort, {onLeave: function (args) {send("ClusterRegCloseBatchNotifyPort");}});

var ClusterRegCloseKey = Module.findExportByName("clusapi.dll", "ClusterRegCloseKey")
Interceptor.attach(ClusterRegCloseKey, {onLeave: function (args) {send("ClusterRegCloseKey");}});

var ClusterRegCloseReadBatch = Module.findExportByName("clusapi.dll", "ClusterRegCloseReadBatch")
Interceptor.attach(ClusterRegCloseReadBatch, {onLeave: function (args) {send("ClusterRegCloseReadBatch");}});

var ClusterRegCloseReadBatchEx = Module.findExportByName("clusapi.dll", "ClusterRegCloseReadBatchEx")
Interceptor.attach(ClusterRegCloseReadBatchEx, {onLeave: function (args) {send("ClusterRegCloseReadBatchEx");}});

var ClusterRegCloseReadBatchReply = Module.findExportByName("clusapi.dll", "ClusterRegCloseReadBatchReply")
Interceptor.attach(ClusterRegCloseReadBatchReply, {onLeave: function (args) {send("ClusterRegCloseReadBatchReply");}});

var ClusterRegCreateBatch = Module.findExportByName("clusapi.dll", "ClusterRegCreateBatch")
Interceptor.attach(ClusterRegCreateBatch, {onLeave: function (args) {send("ClusterRegCreateBatch");}});

var ClusterRegCreateBatchNotifyPort = Module.findExportByName("clusapi.dll", "ClusterRegCreateBatchNotifyPort")
Interceptor.attach(ClusterRegCreateBatchNotifyPort, {onLeave: function (args) {send("ClusterRegCreateBatchNotifyPort");}});

var ClusterRegCreateKey = Module.findExportByName("clusapi.dll", "ClusterRegCreateKey")
Interceptor.attach(ClusterRegCreateKey, {onLeave: function (args) {send("ClusterRegCreateKey");}});

var ClusterRegCreateKeyEx = Module.findExportByName("clusapi.dll", "ClusterRegCreateKeyEx")
Interceptor.attach(ClusterRegCreateKeyEx, {onLeave: function (args) {send("ClusterRegCreateKeyEx");}});

var ClusterRegCreateKeyForceSync = Module.findExportByName("clusapi.dll", "ClusterRegCreateKeyForceSync")
Interceptor.attach(ClusterRegCreateKeyForceSync, {onLeave: function (args) {send("ClusterRegCreateKeyForceSync");}});

var ClusterRegCreateReadBatch = Module.findExportByName("clusapi.dll", "ClusterRegCreateReadBatch")
Interceptor.attach(ClusterRegCreateReadBatch, {onLeave: function (args) {send("ClusterRegCreateReadBatch");}});

var ClusterRegDeleteKey = Module.findExportByName("clusapi.dll", "ClusterRegDeleteKey")
Interceptor.attach(ClusterRegDeleteKey, {onLeave: function (args) {send("ClusterRegDeleteKey");}});

var ClusterRegDeleteKeyEx = Module.findExportByName("clusapi.dll", "ClusterRegDeleteKeyEx")
Interceptor.attach(ClusterRegDeleteKeyEx, {onLeave: function (args) {send("ClusterRegDeleteKeyEx");}});

var ClusterRegDeleteKeyForceSync = Module.findExportByName("clusapi.dll", "ClusterRegDeleteKeyForceSync")
Interceptor.attach(ClusterRegDeleteKeyForceSync, {onLeave: function (args) {send("ClusterRegDeleteKeyForceSync");}});

var ClusterRegDeleteValue = Module.findExportByName("clusapi.dll", "ClusterRegDeleteValue")
Interceptor.attach(ClusterRegDeleteValue, {onLeave: function (args) {send("ClusterRegDeleteValue");}});

var ClusterRegDeleteValueEx = Module.findExportByName("clusapi.dll", "ClusterRegDeleteValueEx")
Interceptor.attach(ClusterRegDeleteValueEx, {onLeave: function (args) {send("ClusterRegDeleteValueEx");}});

var ClusterRegDeleteValueForceSync = Module.findExportByName("clusapi.dll", "ClusterRegDeleteValueForceSync")
Interceptor.attach(ClusterRegDeleteValueForceSync, {onLeave: function (args) {send("ClusterRegDeleteValueForceSync");}});

var ClusterRegEnumKey = Module.findExportByName("clusapi.dll", "ClusterRegEnumKey")
Interceptor.attach(ClusterRegEnumKey, {onLeave: function (args) {send("ClusterRegEnumKey");}});

var ClusterRegEnumValue = Module.findExportByName("clusapi.dll", "ClusterRegEnumValue")
Interceptor.attach(ClusterRegEnumValue, {onLeave: function (args) {send("ClusterRegEnumValue");}});

var ClusterRegGetBatchNotification = Module.findExportByName("clusapi.dll", "ClusterRegGetBatchNotification")
Interceptor.attach(ClusterRegGetBatchNotification, {onLeave: function (args) {send("ClusterRegGetBatchNotification");}});

var ClusterRegGetKeySecurity = Module.findExportByName("clusapi.dll", "ClusterRegGetKeySecurity")
Interceptor.attach(ClusterRegGetKeySecurity, {onLeave: function (args) {send("ClusterRegGetKeySecurity");}});

var ClusterRegOpenKey = Module.findExportByName("clusapi.dll", "ClusterRegOpenKey")
Interceptor.attach(ClusterRegOpenKey, {onLeave: function (args) {send("ClusterRegOpenKey");}});

var ClusterRegQueryAllValues = Module.findExportByName("clusapi.dll", "ClusterRegQueryAllValues")
Interceptor.attach(ClusterRegQueryAllValues, {onLeave: function (args) {send("ClusterRegQueryAllValues");}});

var ClusterRegQueryInfoKey = Module.findExportByName("clusapi.dll", "ClusterRegQueryInfoKey")
Interceptor.attach(ClusterRegQueryInfoKey, {onLeave: function (args) {send("ClusterRegQueryInfoKey");}});

var ClusterRegQueryValue = Module.findExportByName("clusapi.dll", "ClusterRegQueryValue")
Interceptor.attach(ClusterRegQueryValue, {onLeave: function (args) {send("ClusterRegQueryValue");}});

var ClusterRegReadBatchAddCommand = Module.findExportByName("clusapi.dll", "ClusterRegReadBatchAddCommand")
Interceptor.attach(ClusterRegReadBatchAddCommand, {onLeave: function (args) {send("ClusterRegReadBatchAddCommand");}});

var ClusterRegReadBatchReplyNextCommand = Module.findExportByName("clusapi.dll", "ClusterRegReadBatchReplyNextCommand")
Interceptor.attach(ClusterRegReadBatchReplyNextCommand, {onLeave: function (args) {send("ClusterRegReadBatchReplyNextCommand");}});

var ClusterRegSetKeySecurity = Module.findExportByName("clusapi.dll", "ClusterRegSetKeySecurity")
Interceptor.attach(ClusterRegSetKeySecurity, {onLeave: function (args) {send("ClusterRegSetKeySecurity");}});

var ClusterRegSetKeySecurityEx = Module.findExportByName("clusapi.dll", "ClusterRegSetKeySecurityEx")
Interceptor.attach(ClusterRegSetKeySecurityEx, {onLeave: function (args) {send("ClusterRegSetKeySecurityEx");}});

var ClusterRegSetValue = Module.findExportByName("clusapi.dll", "ClusterRegSetValue")
Interceptor.attach(ClusterRegSetValue, {onLeave: function (args) {send("ClusterRegSetValue");}});

var ClusterRegSetValueEx = Module.findExportByName("clusapi.dll", "ClusterRegSetValueEx")
Interceptor.attach(ClusterRegSetValueEx, {onLeave: function (args) {send("ClusterRegSetValueEx");}});

var ClusterRegSetValueForceSync = Module.findExportByName("clusapi.dll", "ClusterRegSetValueForceSync")
Interceptor.attach(ClusterRegSetValueForceSync, {onLeave: function (args) {send("ClusterRegSetValueForceSync");}});

var ClusterRegSyncDatabase = Module.findExportByName("clusapi.dll", "ClusterRegSyncDatabase")
Interceptor.attach(ClusterRegSyncDatabase, {onLeave: function (args) {send("ClusterRegSyncDatabase");}});

var ClusterRemoveAffinityRule = Module.findExportByName("clusapi.dll", "ClusterRemoveAffinityRule")
Interceptor.attach(ClusterRemoveAffinityRule, {onLeave: function (args) {send("ClusterRemoveAffinityRule");}});

var ClusterRemoveClusterStorageEnclosure = Module.findExportByName("clusapi.dll", "ClusterRemoveClusterStorageEnclosure")
Interceptor.attach(ClusterRemoveClusterStorageEnclosure, {onLeave: function (args) {send("ClusterRemoveClusterStorageEnclosure");}});

var ClusterRemoveFaultDomain = Module.findExportByName("clusapi.dll", "ClusterRemoveFaultDomain")
Interceptor.attach(ClusterRemoveFaultDomain, {onLeave: function (args) {send("ClusterRemoveFaultDomain");}});

var ClusterRemoveGroupFromAffinityRule = Module.findExportByName("clusapi.dll", "ClusterRemoveGroupFromAffinityRule")
Interceptor.attach(ClusterRemoveGroupFromAffinityRule, {onLeave: function (args) {send("ClusterRemoveGroupFromAffinityRule");}});

var ClusterRemoveGroupFromGroupSet = Module.findExportByName("clusapi.dll", "ClusterRemoveGroupFromGroupSet")
Interceptor.attach(ClusterRemoveGroupFromGroupSet, {onLeave: function (args) {send("ClusterRemoveGroupFromGroupSet");}});

var ClusterRemoveGroupFromGroupSetEx = Module.findExportByName("clusapi.dll", "ClusterRemoveGroupFromGroupSetEx")
Interceptor.attach(ClusterRemoveGroupFromGroupSetEx, {onLeave: function (args) {send("ClusterRemoveGroupFromGroupSetEx");}});

var ClusterResourceCloseEnum = Module.findExportByName("clusapi.dll", "ClusterResourceCloseEnum")
Interceptor.attach(ClusterResourceCloseEnum, {onLeave: function (args) {send("ClusterResourceCloseEnum");}});

var ClusterResourceCloseEnumEx = Module.findExportByName("clusapi.dll", "ClusterResourceCloseEnumEx")
Interceptor.attach(ClusterResourceCloseEnumEx, {onLeave: function (args) {send("ClusterResourceCloseEnumEx");}});

var ClusterResourceControl = Module.findExportByName("clusapi.dll", "ClusterResourceControl")
Interceptor.attach(ClusterResourceControl, {onLeave: function (args) {send("ClusterResourceControl");}});

var ClusterResourceControlAsUser = Module.findExportByName("clusapi.dll", "ClusterResourceControlAsUser")
Interceptor.attach(ClusterResourceControlAsUser, {onLeave: function (args) {send("ClusterResourceControlAsUser");}});

var ClusterResourceControlAsUserEx = Module.findExportByName("clusapi.dll", "ClusterResourceControlAsUserEx")
Interceptor.attach(ClusterResourceControlAsUserEx, {onLeave: function (args) {send("ClusterResourceControlAsUserEx");}});

var ClusterResourceControlEx = Module.findExportByName("clusapi.dll", "ClusterResourceControlEx")
Interceptor.attach(ClusterResourceControlEx, {onLeave: function (args) {send("ClusterResourceControlEx");}});

var ClusterResourceEnum = Module.findExportByName("clusapi.dll", "ClusterResourceEnum")
Interceptor.attach(ClusterResourceEnum, {onLeave: function (args) {send("ClusterResourceEnum");}});

var ClusterResourceEnumEx = Module.findExportByName("clusapi.dll", "ClusterResourceEnumEx")
Interceptor.attach(ClusterResourceEnumEx, {onLeave: function (args) {send("ClusterResourceEnumEx");}});

var ClusterResourceGetEnumCount = Module.findExportByName("clusapi.dll", "ClusterResourceGetEnumCount")
Interceptor.attach(ClusterResourceGetEnumCount, {onLeave: function (args) {send("ClusterResourceGetEnumCount");}});

var ClusterResourceGetEnumCountEx = Module.findExportByName("clusapi.dll", "ClusterResourceGetEnumCountEx")
Interceptor.attach(ClusterResourceGetEnumCountEx, {onLeave: function (args) {send("ClusterResourceGetEnumCountEx");}});

var ClusterResourceOpenEnum = Module.findExportByName("clusapi.dll", "ClusterResourceOpenEnum")
Interceptor.attach(ClusterResourceOpenEnum, {onLeave: function (args) {send("ClusterResourceOpenEnum");}});

var ClusterResourceOpenEnumEx = Module.findExportByName("clusapi.dll", "ClusterResourceOpenEnumEx")
Interceptor.attach(ClusterResourceOpenEnumEx, {onLeave: function (args) {send("ClusterResourceOpenEnumEx");}});

var ClusterResourceTypeCloseEnum = Module.findExportByName("clusapi.dll", "ClusterResourceTypeCloseEnum")
Interceptor.attach(ClusterResourceTypeCloseEnum, {onLeave: function (args) {send("ClusterResourceTypeCloseEnum");}});

var ClusterResourceTypeControl = Module.findExportByName("clusapi.dll", "ClusterResourceTypeControl")
Interceptor.attach(ClusterResourceTypeControl, {onLeave: function (args) {send("ClusterResourceTypeControl");}});

var ClusterResourceTypeControlAsUser = Module.findExportByName("clusapi.dll", "ClusterResourceTypeControlAsUser")
Interceptor.attach(ClusterResourceTypeControlAsUser, {onLeave: function (args) {send("ClusterResourceTypeControlAsUser");}});

var ClusterResourceTypeControlAsUserEx = Module.findExportByName("clusapi.dll", "ClusterResourceTypeControlAsUserEx")
Interceptor.attach(ClusterResourceTypeControlAsUserEx, {onLeave: function (args) {send("ClusterResourceTypeControlAsUserEx");}});

var ClusterResourceTypeControlEx = Module.findExportByName("clusapi.dll", "ClusterResourceTypeControlEx")
Interceptor.attach(ClusterResourceTypeControlEx, {onLeave: function (args) {send("ClusterResourceTypeControlEx");}});

var ClusterResourceTypeEnum = Module.findExportByName("clusapi.dll", "ClusterResourceTypeEnum")
Interceptor.attach(ClusterResourceTypeEnum, {onLeave: function (args) {send("ClusterResourceTypeEnum");}});

var ClusterResourceTypeGetEnumCount = Module.findExportByName("clusapi.dll", "ClusterResourceTypeGetEnumCount")
Interceptor.attach(ClusterResourceTypeGetEnumCount, {onLeave: function (args) {send("ClusterResourceTypeGetEnumCount");}});

var ClusterResourceTypeOpenEnum = Module.findExportByName("clusapi.dll", "ClusterResourceTypeOpenEnum")
Interceptor.attach(ClusterResourceTypeOpenEnum, {onLeave: function (args) {send("ClusterResourceTypeOpenEnum");}});

var ClusterSendReceiveMrr = Module.findExportByName("clusapi.dll", "ClusterSendReceiveMrr")
Interceptor.attach(ClusterSendReceiveMrr, {onLeave: function (args) {send("ClusterSendReceiveMrr");}});

var ClusterSendReceiveMrrAsUser = Module.findExportByName("clusapi.dll", "ClusterSendReceiveMrrAsUser")
Interceptor.attach(ClusterSendReceiveMrrAsUser, {onLeave: function (args) {send("ClusterSendReceiveMrrAsUser");}});

var ClusterSetAccountAccess = Module.findExportByName("clusapi.dll", "ClusterSetAccountAccess")
Interceptor.attach(ClusterSetAccountAccess, {onLeave: function (args) {send("ClusterSetAccountAccess");}});

var ClusterSetClusterStorageEnclosure = Module.findExportByName("clusapi.dll", "ClusterSetClusterStorageEnclosure")
Interceptor.attach(ClusterSetClusterStorageEnclosure, {onLeave: function (args) {send("ClusterSetClusterStorageEnclosure");}});

var ClusterSetFaultDomain = Module.findExportByName("clusapi.dll", "ClusterSetFaultDomain")
Interceptor.attach(ClusterSetFaultDomain, {onLeave: function (args) {send("ClusterSetFaultDomain");}});

var ClusterSetNodeFaultDomain = Module.findExportByName("clusapi.dll", "ClusterSetNodeFaultDomain")
Interceptor.attach(ClusterSetNodeFaultDomain, {onLeave: function (args) {send("ClusterSetNodeFaultDomain");}});

var ClusterSharedVolumeClearBackupState = Module.findExportByName("clusapi.dll", "ClusterSharedVolumeClearBackupState")
Interceptor.attach(ClusterSharedVolumeClearBackupState, {onLeave: function (args) {send("ClusterSharedVolumeClearBackupState");}});

var ClusterSharedVolumeSetSnapshotState = Module.findExportByName("clusapi.dll", "ClusterSharedVolumeSetSnapshotState")
Interceptor.attach(ClusterSharedVolumeSetSnapshotState, {onLeave: function (args) {send("ClusterSharedVolumeSetSnapshotState");}});

var ClusterStmFindDisk = Module.findExportByName("clusapi.dll", "ClusterStmFindDisk")
Interceptor.attach(ClusterStmFindDisk, {onLeave: function (args) {send("ClusterStmFindDisk");}});

var ClusterUpgradeFunctionalLevel = Module.findExportByName("clusapi.dll", "ClusterUpgradeFunctionalLevel")
Interceptor.attach(ClusterUpgradeFunctionalLevel, {onLeave: function (args) {send("ClusterUpgradeFunctionalLevel");}});

var ClusterUpgradeFunctionalLevelEx = Module.findExportByName("clusapi.dll", "ClusterUpgradeFunctionalLevelEx")
Interceptor.attach(ClusterUpgradeFunctionalLevelEx, {onLeave: function (args) {send("ClusterUpgradeFunctionalLevelEx");}});

var ClusterWprAddMarker = Module.findExportByName("clusapi.dll", "ClusterWprAddMarker")
Interceptor.attach(ClusterWprAddMarker, {onLeave: function (args) {send("ClusterWprAddMarker");}});

var ClusterWprCancel = Module.findExportByName("clusapi.dll", "ClusterWprCancel")
Interceptor.attach(ClusterWprCancel, {onLeave: function (args) {send("ClusterWprCancel");}});

var ClusterWprCaptureState = Module.findExportByName("clusapi.dll", "ClusterWprCaptureState")
Interceptor.attach(ClusterWprCaptureState, {onLeave: function (args) {send("ClusterWprCaptureState");}});

var ClusterWprFlush = Module.findExportByName("clusapi.dll", "ClusterWprFlush")
Interceptor.attach(ClusterWprFlush, {onLeave: function (args) {send("ClusterWprFlush");}});

var ClusterWprStart = Module.findExportByName("clusapi.dll", "ClusterWprStart")
Interceptor.attach(ClusterWprStart, {onLeave: function (args) {send("ClusterWprStart");}});

var ClusterWprStop = Module.findExportByName("clusapi.dll", "ClusterWprStop")
Interceptor.attach(ClusterWprStop, {onLeave: function (args) {send("ClusterWprStop");}});

var CreateCluster = Module.findExportByName("clusapi.dll", "CreateCluster")
Interceptor.attach(CreateCluster, {onLeave: function (args) {send("CreateCluster");}});

var CreateClusterAvailabilitySet = Module.findExportByName("clusapi.dll", "CreateClusterAvailabilitySet")
Interceptor.attach(CreateClusterAvailabilitySet, {onLeave: function (args) {send("CreateClusterAvailabilitySet");}});

var CreateClusterGroup = Module.findExportByName("clusapi.dll", "CreateClusterGroup")
Interceptor.attach(CreateClusterGroup, {onLeave: function (args) {send("CreateClusterGroup");}});

var CreateClusterGroupEx = Module.findExportByName("clusapi.dll", "CreateClusterGroupEx")
Interceptor.attach(CreateClusterGroupEx, {onLeave: function (args) {send("CreateClusterGroupEx");}});

var CreateClusterGroupSet = Module.findExportByName("clusapi.dll", "CreateClusterGroupSet")
Interceptor.attach(CreateClusterGroupSet, {onLeave: function (args) {send("CreateClusterGroupSet");}});

var CreateClusterManagementPoint = Module.findExportByName("clusapi.dll", "CreateClusterManagementPoint")
Interceptor.attach(CreateClusterManagementPoint, {onLeave: function (args) {send("CreateClusterManagementPoint");}});

var CreateClusterNameAccount = Module.findExportByName("clusapi.dll", "CreateClusterNameAccount")
Interceptor.attach(CreateClusterNameAccount, {onLeave: function (args) {send("CreateClusterNameAccount");}});

var CreateClusterNotifyPort = Module.findExportByName("clusapi.dll", "CreateClusterNotifyPort")
Interceptor.attach(CreateClusterNotifyPort, {onLeave: function (args) {send("CreateClusterNotifyPort");}});

var CreateClusterNotifyPortV2 = Module.findExportByName("clusapi.dll", "CreateClusterNotifyPortV2")
Interceptor.attach(CreateClusterNotifyPortV2, {onLeave: function (args) {send("CreateClusterNotifyPortV2");}});

var CreateClusterResource = Module.findExportByName("clusapi.dll", "CreateClusterResource")
Interceptor.attach(CreateClusterResource, {onLeave: function (args) {send("CreateClusterResource");}});

var CreateClusterResourceEx = Module.findExportByName("clusapi.dll", "CreateClusterResourceEx")
Interceptor.attach(CreateClusterResourceEx, {onLeave: function (args) {send("CreateClusterResourceEx");}});

var CreateClusterResourceType = Module.findExportByName("clusapi.dll", "CreateClusterResourceType")
Interceptor.attach(CreateClusterResourceType, {onLeave: function (args) {send("CreateClusterResourceType");}});

var CreateClusterResourceTypeEx = Module.findExportByName("clusapi.dll", "CreateClusterResourceTypeEx")
Interceptor.attach(CreateClusterResourceTypeEx, {onLeave: function (args) {send("CreateClusterResourceTypeEx");}});

var CreateClusterResourceWithId = Module.findExportByName("clusapi.dll", "CreateClusterResourceWithId")
Interceptor.attach(CreateClusterResourceWithId, {onLeave: function (args) {send("CreateClusterResourceWithId");}});

var DeleteClusterGroup = Module.findExportByName("clusapi.dll", "DeleteClusterGroup")
Interceptor.attach(DeleteClusterGroup, {onLeave: function (args) {send("DeleteClusterGroup");}});

var DeleteClusterGroupEx = Module.findExportByName("clusapi.dll", "DeleteClusterGroupEx")
Interceptor.attach(DeleteClusterGroupEx, {onLeave: function (args) {send("DeleteClusterGroupEx");}});

var DeleteClusterGroupSet = Module.findExportByName("clusapi.dll", "DeleteClusterGroupSet")
Interceptor.attach(DeleteClusterGroupSet, {onLeave: function (args) {send("DeleteClusterGroupSet");}});

var DeleteClusterGroupSetEx = Module.findExportByName("clusapi.dll", "DeleteClusterGroupSetEx")
Interceptor.attach(DeleteClusterGroupSetEx, {onLeave: function (args) {send("DeleteClusterGroupSetEx");}});

var DeleteClusterResource = Module.findExportByName("clusapi.dll", "DeleteClusterResource")
Interceptor.attach(DeleteClusterResource, {onLeave: function (args) {send("DeleteClusterResource");}});

var DeleteClusterResourceEx = Module.findExportByName("clusapi.dll", "DeleteClusterResourceEx")
Interceptor.attach(DeleteClusterResourceEx, {onLeave: function (args) {send("DeleteClusterResourceEx");}});

var DeleteClusterResourceType = Module.findExportByName("clusapi.dll", "DeleteClusterResourceType")
Interceptor.attach(DeleteClusterResourceType, {onLeave: function (args) {send("DeleteClusterResourceType");}});

var DeleteClusterResourceTypeEx = Module.findExportByName("clusapi.dll", "DeleteClusterResourceTypeEx")
Interceptor.attach(DeleteClusterResourceTypeEx, {onLeave: function (args) {send("DeleteClusterResourceTypeEx");}});

var DestroyCluster = Module.findExportByName("clusapi.dll", "DestroyCluster")
Interceptor.attach(DestroyCluster, {onLeave: function (args) {send("DestroyCluster");}});

var DestroyClusterGroup = Module.findExportByName("clusapi.dll", "DestroyClusterGroup")
Interceptor.attach(DestroyClusterGroup, {onLeave: function (args) {send("DestroyClusterGroup");}});

var DestroyClusterGroupEx = Module.findExportByName("clusapi.dll", "DestroyClusterGroupEx")
Interceptor.attach(DestroyClusterGroupEx, {onLeave: function (args) {send("DestroyClusterGroupEx");}});

var DetermineCNOResTypeFromCluster = Module.findExportByName("clusapi.dll", "DetermineCNOResTypeFromCluster")
Interceptor.attach(DetermineCNOResTypeFromCluster, {onLeave: function (args) {send("DetermineCNOResTypeFromCluster");}});

var DetermineCNOResTypeFromNodelist = Module.findExportByName("clusapi.dll", "DetermineCNOResTypeFromNodelist")
Interceptor.attach(DetermineCNOResTypeFromNodelist, {onLeave: function (args) {send("DetermineCNOResTypeFromNodelist");}});

var DetermineClusterCloudTypeFromCluster = Module.findExportByName("clusapi.dll", "DetermineClusterCloudTypeFromCluster")
Interceptor.attach(DetermineClusterCloudTypeFromCluster, {onLeave: function (args) {send("DetermineClusterCloudTypeFromCluster");}});

var DetermineClusterCloudTypeFromNodelist = Module.findExportByName("clusapi.dll", "DetermineClusterCloudTypeFromNodelist")
Interceptor.attach(DetermineClusterCloudTypeFromNodelist, {onLeave: function (args) {send("DetermineClusterCloudTypeFromNodelist");}});

var EvictClusterNode = Module.findExportByName("clusapi.dll", "EvictClusterNode")
Interceptor.attach(EvictClusterNode, {onLeave: function (args) {send("EvictClusterNode");}});

var EvictClusterNodeEx = Module.findExportByName("clusapi.dll", "EvictClusterNodeEx")
Interceptor.attach(EvictClusterNodeEx, {onLeave: function (args) {send("EvictClusterNodeEx");}});

var EvictClusterNodeEx2 = Module.findExportByName("clusapi.dll", "EvictClusterNodeEx2")
Interceptor.attach(EvictClusterNodeEx2, {onLeave: function (args) {send("EvictClusterNodeEx2");}});

var FailClusterResource = Module.findExportByName("clusapi.dll", "FailClusterResource")
Interceptor.attach(FailClusterResource, {onLeave: function (args) {send("FailClusterResource");}});

var FailClusterResourceEx = Module.findExportByName("clusapi.dll", "FailClusterResourceEx")
Interceptor.attach(FailClusterResourceEx, {onLeave: function (args) {send("FailClusterResourceEx");}});

var FreeClusFaultDomainInfo = Module.findExportByName("clusapi.dll", "FreeClusFaultDomainInfo")
Interceptor.attach(FreeClusFaultDomainInfo, {onLeave: function (args) {send("FreeClusFaultDomainInfo");}});

var FreeClusFaultDomainInfoArray = Module.findExportByName("clusapi.dll", "FreeClusFaultDomainInfoArray")
Interceptor.attach(FreeClusFaultDomainInfoArray, {onLeave: function (args) {send("FreeClusFaultDomainInfoArray");}});

var FreeClusFaultDomainXML = Module.findExportByName("clusapi.dll", "FreeClusFaultDomainXML")
Interceptor.attach(FreeClusFaultDomainXML, {onLeave: function (args) {send("FreeClusFaultDomainXML");}});

var FreeClusStorageEnclosureInfo = Module.findExportByName("clusapi.dll", "FreeClusStorageEnclosureInfo")
Interceptor.attach(FreeClusStorageEnclosureInfo, {onLeave: function (args) {send("FreeClusStorageEnclosureInfo");}});

var FreeClusStorageEnclosureInfoArray = Module.findExportByName("clusapi.dll", "FreeClusStorageEnclosureInfoArray")
Interceptor.attach(FreeClusStorageEnclosureInfoArray, {onLeave: function (args) {send("FreeClusStorageEnclosureInfoArray");}});

var GetClusterFromGroup = Module.findExportByName("clusapi.dll", "GetClusterFromGroup")
Interceptor.attach(GetClusterFromGroup, {onLeave: function (args) {send("GetClusterFromGroup");}});

var GetClusterFromNetInterface = Module.findExportByName("clusapi.dll", "GetClusterFromNetInterface")
Interceptor.attach(GetClusterFromNetInterface, {onLeave: function (args) {send("GetClusterFromNetInterface");}});

var GetClusterFromNetwork = Module.findExportByName("clusapi.dll", "GetClusterFromNetwork")
Interceptor.attach(GetClusterFromNetwork, {onLeave: function (args) {send("GetClusterFromNetwork");}});

var GetClusterFromNode = Module.findExportByName("clusapi.dll", "GetClusterFromNode")
Interceptor.attach(GetClusterFromNode, {onLeave: function (args) {send("GetClusterFromNode");}});

var GetClusterFromResource = Module.findExportByName("clusapi.dll", "GetClusterFromResource")
Interceptor.attach(GetClusterFromResource, {onLeave: function (args) {send("GetClusterFromResource");}});

var GetClusterGroupKey = Module.findExportByName("clusapi.dll", "GetClusterGroupKey")
Interceptor.attach(GetClusterGroupKey, {onLeave: function (args) {send("GetClusterGroupKey");}});

var GetClusterGroupState = Module.findExportByName("clusapi.dll", "GetClusterGroupState")
Interceptor.attach(GetClusterGroupState, {onLeave: function (args) {send("GetClusterGroupState");}});

var GetClusterInformation = Module.findExportByName("clusapi.dll", "GetClusterInformation")
Interceptor.attach(GetClusterInformation, {onLeave: function (args) {send("GetClusterInformation");}});

var GetClusterKey = Module.findExportByName("clusapi.dll", "GetClusterKey")
Interceptor.attach(GetClusterKey, {onLeave: function (args) {send("GetClusterKey");}});

var GetClusterNetInterface = Module.findExportByName("clusapi.dll", "GetClusterNetInterface")
Interceptor.attach(GetClusterNetInterface, {onLeave: function (args) {send("GetClusterNetInterface");}});

var GetClusterNetInterfaceKey = Module.findExportByName("clusapi.dll", "GetClusterNetInterfaceKey")
Interceptor.attach(GetClusterNetInterfaceKey, {onLeave: function (args) {send("GetClusterNetInterfaceKey");}});

var GetClusterNetInterfaceState = Module.findExportByName("clusapi.dll", "GetClusterNetInterfaceState")
Interceptor.attach(GetClusterNetInterfaceState, {onLeave: function (args) {send("GetClusterNetInterfaceState");}});

var GetClusterNetworkId = Module.findExportByName("clusapi.dll", "GetClusterNetworkId")
Interceptor.attach(GetClusterNetworkId, {onLeave: function (args) {send("GetClusterNetworkId");}});

var GetClusterNetworkKey = Module.findExportByName("clusapi.dll", "GetClusterNetworkKey")
Interceptor.attach(GetClusterNetworkKey, {onLeave: function (args) {send("GetClusterNetworkKey");}});

var GetClusterNetworkState = Module.findExportByName("clusapi.dll", "GetClusterNetworkState")
Interceptor.attach(GetClusterNetworkState, {onLeave: function (args) {send("GetClusterNetworkState");}});

var GetClusterNodeId = Module.findExportByName("clusapi.dll", "GetClusterNodeId")
Interceptor.attach(GetClusterNodeId, {onLeave: function (args) {send("GetClusterNodeId");}});

var GetClusterNodeKey = Module.findExportByName("clusapi.dll", "GetClusterNodeKey")
Interceptor.attach(GetClusterNodeKey, {onLeave: function (args) {send("GetClusterNodeKey");}});

var GetClusterNodeState = Module.findExportByName("clusapi.dll", "GetClusterNodeState")
Interceptor.attach(GetClusterNodeState, {onLeave: function (args) {send("GetClusterNodeState");}});

var GetClusterNotify = Module.findExportByName("clusapi.dll", "GetClusterNotify")
Interceptor.attach(GetClusterNotify, {onLeave: function (args) {send("GetClusterNotify");}});

var GetClusterNotifyV2 = Module.findExportByName("clusapi.dll", "GetClusterNotifyV2")
Interceptor.attach(GetClusterNotifyV2, {onLeave: function (args) {send("GetClusterNotifyV2");}});

var GetClusterQuorumResource = Module.findExportByName("clusapi.dll", "GetClusterQuorumResource")
Interceptor.attach(GetClusterQuorumResource, {onLeave: function (args) {send("GetClusterQuorumResource");}});

var GetClusterResourceDependencyExpression = Module.findExportByName("clusapi.dll", "GetClusterResourceDependencyExpression")
Interceptor.attach(GetClusterResourceDependencyExpression, {onLeave: function (args) {send("GetClusterResourceDependencyExpression");}});

var GetClusterResourceKey = Module.findExportByName("clusapi.dll", "GetClusterResourceKey")
Interceptor.attach(GetClusterResourceKey, {onLeave: function (args) {send("GetClusterResourceKey");}});

var GetClusterResourceNetworkName = Module.findExportByName("clusapi.dll", "GetClusterResourceNetworkName")
Interceptor.attach(GetClusterResourceNetworkName, {onLeave: function (args) {send("GetClusterResourceNetworkName");}});

var GetClusterResourceState = Module.findExportByName("clusapi.dll", "GetClusterResourceState")
Interceptor.attach(GetClusterResourceState, {onLeave: function (args) {send("GetClusterResourceState");}});

var GetClusterResourceTypeKey = Module.findExportByName("clusapi.dll", "GetClusterResourceTypeKey")
Interceptor.attach(GetClusterResourceTypeKey, {onLeave: function (args) {send("GetClusterResourceTypeKey");}});

var GetClusterSharedVolumeNameForFile = Module.findExportByName("clusapi.dll", "GetClusterSharedVolumeNameForFile")
Interceptor.attach(GetClusterSharedVolumeNameForFile, {onLeave: function (args) {send("GetClusterSharedVolumeNameForFile");}});

var GetNodeCloudTypeDW = Module.findExportByName("clusapi.dll", "GetNodeCloudTypeDW")
Interceptor.attach(GetNodeCloudTypeDW, {onLeave: function (args) {send("GetNodeCloudTypeDW");}});

var GetNodeClusterState = Module.findExportByName("clusapi.dll", "GetNodeClusterState")
Interceptor.attach(GetNodeClusterState, {onLeave: function (args) {send("GetNodeClusterState");}});

var GetNotifyEventHandle = Module.findExportByName("clusapi.dll", "GetNotifyEventHandle")
Interceptor.attach(GetNotifyEventHandle, {onLeave: function (args) {send("GetNotifyEventHandle");}});

var InitializeClusFaultDomainInfo = Module.findExportByName("clusapi.dll", "InitializeClusFaultDomainInfo")
Interceptor.attach(InitializeClusFaultDomainInfo, {onLeave: function (args) {send("InitializeClusFaultDomainInfo");}});

var InitializeClusFaultDomainInfoArray = Module.findExportByName("clusapi.dll", "InitializeClusFaultDomainInfoArray")
Interceptor.attach(InitializeClusFaultDomainInfoArray, {onLeave: function (args) {send("InitializeClusFaultDomainInfoArray");}});

var InitializeClusStorageEnclosureInfo = Module.findExportByName("clusapi.dll", "InitializeClusStorageEnclosureInfo")
Interceptor.attach(InitializeClusStorageEnclosureInfo, {onLeave: function (args) {send("InitializeClusStorageEnclosureInfo");}});

var InitializeClusStorageEnclosureInfoArray = Module.findExportByName("clusapi.dll", "InitializeClusStorageEnclosureInfoArray")
Interceptor.attach(InitializeClusStorageEnclosureInfoArray, {onLeave: function (args) {send("InitializeClusStorageEnclosureInfoArray");}});

var IsFileOnClusterSharedVolume = Module.findExportByName("clusapi.dll", "IsFileOnClusterSharedVolume")
Interceptor.attach(IsFileOnClusterSharedVolume, {onLeave: function (args) {send("IsFileOnClusterSharedVolume");}});

var MoveClusterGroup = Module.findExportByName("clusapi.dll", "MoveClusterGroup")
Interceptor.attach(MoveClusterGroup, {onLeave: function (args) {send("MoveClusterGroup");}});

var MoveClusterGroupEx = Module.findExportByName("clusapi.dll", "MoveClusterGroupEx")
Interceptor.attach(MoveClusterGroupEx, {onLeave: function (args) {send("MoveClusterGroupEx");}});

var MoveClusterGroupEx2 = Module.findExportByName("clusapi.dll", "MoveClusterGroupEx2")
Interceptor.attach(MoveClusterGroupEx2, {onLeave: function (args) {send("MoveClusterGroupEx2");}});

var OfflineClusterGroup = Module.findExportByName("clusapi.dll", "OfflineClusterGroup")
Interceptor.attach(OfflineClusterGroup, {onLeave: function (args) {send("OfflineClusterGroup");}});

var OfflineClusterGroupEx = Module.findExportByName("clusapi.dll", "OfflineClusterGroupEx")
Interceptor.attach(OfflineClusterGroupEx, {onLeave: function (args) {send("OfflineClusterGroupEx");}});

var OfflineClusterGroupEx2 = Module.findExportByName("clusapi.dll", "OfflineClusterGroupEx2")
Interceptor.attach(OfflineClusterGroupEx2, {onLeave: function (args) {send("OfflineClusterGroupEx2");}});

var OfflineClusterResource = Module.findExportByName("clusapi.dll", "OfflineClusterResource")
Interceptor.attach(OfflineClusterResource, {onLeave: function (args) {send("OfflineClusterResource");}});

var OfflineClusterResourceEx = Module.findExportByName("clusapi.dll", "OfflineClusterResourceEx")
Interceptor.attach(OfflineClusterResourceEx, {onLeave: function (args) {send("OfflineClusterResourceEx");}});

var OfflineClusterResourceEx2 = Module.findExportByName("clusapi.dll", "OfflineClusterResourceEx2")
Interceptor.attach(OfflineClusterResourceEx2, {onLeave: function (args) {send("OfflineClusterResourceEx2");}});

var OnlineClusterGroup = Module.findExportByName("clusapi.dll", "OnlineClusterGroup")
Interceptor.attach(OnlineClusterGroup, {onLeave: function (args) {send("OnlineClusterGroup");}});

var OnlineClusterGroupEx = Module.findExportByName("clusapi.dll", "OnlineClusterGroupEx")
Interceptor.attach(OnlineClusterGroupEx, {onLeave: function (args) {send("OnlineClusterGroupEx");}});

var OnlineClusterGroupEx2 = Module.findExportByName("clusapi.dll", "OnlineClusterGroupEx2")
Interceptor.attach(OnlineClusterGroupEx2, {onLeave: function (args) {send("OnlineClusterGroupEx2");}});

var OnlineClusterResource = Module.findExportByName("clusapi.dll", "OnlineClusterResource")
Interceptor.attach(OnlineClusterResource, {onLeave: function (args) {send("OnlineClusterResource");}});

var OnlineClusterResourceEx = Module.findExportByName("clusapi.dll", "OnlineClusterResourceEx")
Interceptor.attach(OnlineClusterResourceEx, {onLeave: function (args) {send("OnlineClusterResourceEx");}});

var OnlineClusterResourceEx2 = Module.findExportByName("clusapi.dll", "OnlineClusterResourceEx2")
Interceptor.attach(OnlineClusterResourceEx2, {onLeave: function (args) {send("OnlineClusterResourceEx2");}});

var OpenCluster = Module.findExportByName("clusapi.dll", "OpenCluster")
Interceptor.attach(OpenCluster, {onLeave: function (args) {send("OpenCluster");}});

var OpenClusterEx = Module.findExportByName("clusapi.dll", "OpenClusterEx")
Interceptor.attach(OpenClusterEx, {onLeave: function (args) {send("OpenClusterEx");}});

var OpenClusterEx2 = Module.findExportByName("clusapi.dll", "OpenClusterEx2")
Interceptor.attach(OpenClusterEx2, {onLeave: function (args) {send("OpenClusterEx2");}});

var OpenClusterGroup = Module.findExportByName("clusapi.dll", "OpenClusterGroup")
Interceptor.attach(OpenClusterGroup, {onLeave: function (args) {send("OpenClusterGroup");}});

var OpenClusterGroupEx = Module.findExportByName("clusapi.dll", "OpenClusterGroupEx")
Interceptor.attach(OpenClusterGroupEx, {onLeave: function (args) {send("OpenClusterGroupEx");}});

var OpenClusterGroupSet = Module.findExportByName("clusapi.dll", "OpenClusterGroupSet")
Interceptor.attach(OpenClusterGroupSet, {onLeave: function (args) {send("OpenClusterGroupSet");}});

var OpenClusterNetInterface = Module.findExportByName("clusapi.dll", "OpenClusterNetInterface")
Interceptor.attach(OpenClusterNetInterface, {onLeave: function (args) {send("OpenClusterNetInterface");}});

var OpenClusterNetInterfaceEx = Module.findExportByName("clusapi.dll", "OpenClusterNetInterfaceEx")
Interceptor.attach(OpenClusterNetInterfaceEx, {onLeave: function (args) {send("OpenClusterNetInterfaceEx");}});

var OpenClusterNetwork = Module.findExportByName("clusapi.dll", "OpenClusterNetwork")
Interceptor.attach(OpenClusterNetwork, {onLeave: function (args) {send("OpenClusterNetwork");}});

var OpenClusterNetworkEx = Module.findExportByName("clusapi.dll", "OpenClusterNetworkEx")
Interceptor.attach(OpenClusterNetworkEx, {onLeave: function (args) {send("OpenClusterNetworkEx");}});

var OpenClusterNode = Module.findExportByName("clusapi.dll", "OpenClusterNode")
Interceptor.attach(OpenClusterNode, {onLeave: function (args) {send("OpenClusterNode");}});

var OpenClusterNodeById = Module.findExportByName("clusapi.dll", "OpenClusterNodeById")
Interceptor.attach(OpenClusterNodeById, {onLeave: function (args) {send("OpenClusterNodeById");}});

var OpenClusterNodeEx = Module.findExportByName("clusapi.dll", "OpenClusterNodeEx")
Interceptor.attach(OpenClusterNodeEx, {onLeave: function (args) {send("OpenClusterNodeEx");}});

var OpenClusterResource = Module.findExportByName("clusapi.dll", "OpenClusterResource")
Interceptor.attach(OpenClusterResource, {onLeave: function (args) {send("OpenClusterResource");}});

var OpenClusterResourceEx = Module.findExportByName("clusapi.dll", "OpenClusterResourceEx")
Interceptor.attach(OpenClusterResourceEx, {onLeave: function (args) {send("OpenClusterResourceEx");}});

var PauseClusterNode = Module.findExportByName("clusapi.dll", "PauseClusterNode")
Interceptor.attach(PauseClusterNode, {onLeave: function (args) {send("PauseClusterNode");}});

var PauseClusterNodeEx = Module.findExportByName("clusapi.dll", "PauseClusterNodeEx")
Interceptor.attach(PauseClusterNodeEx, {onLeave: function (args) {send("PauseClusterNodeEx");}});

var PauseClusterNodeEx2 = Module.findExportByName("clusapi.dll", "PauseClusterNodeEx2")
Interceptor.attach(PauseClusterNodeEx2, {onLeave: function (args) {send("PauseClusterNodeEx2");}});

var RegisterClusterNotify = Module.findExportByName("clusapi.dll", "RegisterClusterNotify")
Interceptor.attach(RegisterClusterNotify, {onLeave: function (args) {send("RegisterClusterNotify");}});

var RegisterClusterNotifyV2 = Module.findExportByName("clusapi.dll", "RegisterClusterNotifyV2")
Interceptor.attach(RegisterClusterNotifyV2, {onLeave: function (args) {send("RegisterClusterNotifyV2");}});

var RegisterClusterResourceTypeNotifyV2 = Module.findExportByName("clusapi.dll", "RegisterClusterResourceTypeNotifyV2")
Interceptor.attach(RegisterClusterResourceTypeNotifyV2, {onLeave: function (args) {send("RegisterClusterResourceTypeNotifyV2");}});

var RemoveClusterGroupDependency = Module.findExportByName("clusapi.dll", "RemoveClusterGroupDependency")
Interceptor.attach(RemoveClusterGroupDependency, {onLeave: function (args) {send("RemoveClusterGroupDependency");}});

var RemoveClusterGroupDependencyEx = Module.findExportByName("clusapi.dll", "RemoveClusterGroupDependencyEx")
Interceptor.attach(RemoveClusterGroupDependencyEx, {onLeave: function (args) {send("RemoveClusterGroupDependencyEx");}});

var RemoveClusterGroupSetDependency = Module.findExportByName("clusapi.dll", "RemoveClusterGroupSetDependency")
Interceptor.attach(RemoveClusterGroupSetDependency, {onLeave: function (args) {send("RemoveClusterGroupSetDependency");}});

var RemoveClusterGroupSetDependencyEx = Module.findExportByName("clusapi.dll", "RemoveClusterGroupSetDependencyEx")
Interceptor.attach(RemoveClusterGroupSetDependencyEx, {onLeave: function (args) {send("RemoveClusterGroupSetDependencyEx");}});

var RemoveClusterGroupToGroupSetDependency = Module.findExportByName("clusapi.dll", "RemoveClusterGroupToGroupSetDependency")
Interceptor.attach(RemoveClusterGroupToGroupSetDependency, {onLeave: function (args) {send("RemoveClusterGroupToGroupSetDependency");}});

var RemoveClusterGroupToGroupSetDependencyEx = Module.findExportByName("clusapi.dll", "RemoveClusterGroupToGroupSetDependencyEx")
Interceptor.attach(RemoveClusterGroupToGroupSetDependencyEx, {onLeave: function (args) {send("RemoveClusterGroupToGroupSetDependencyEx");}});

var RemoveClusterNameAccount = Module.findExportByName("clusapi.dll", "RemoveClusterNameAccount")
Interceptor.attach(RemoveClusterNameAccount, {onLeave: function (args) {send("RemoveClusterNameAccount");}});

var RemoveClusterResourceDependency = Module.findExportByName("clusapi.dll", "RemoveClusterResourceDependency")
Interceptor.attach(RemoveClusterResourceDependency, {onLeave: function (args) {send("RemoveClusterResourceDependency");}});

var RemoveClusterResourceDependencyEx = Module.findExportByName("clusapi.dll", "RemoveClusterResourceDependencyEx")
Interceptor.attach(RemoveClusterResourceDependencyEx, {onLeave: function (args) {send("RemoveClusterResourceDependencyEx");}});

var RemoveClusterResourceNode = Module.findExportByName("clusapi.dll", "RemoveClusterResourceNode")
Interceptor.attach(RemoveClusterResourceNode, {onLeave: function (args) {send("RemoveClusterResourceNode");}});

var RemoveClusterResourceNodeEx = Module.findExportByName("clusapi.dll", "RemoveClusterResourceNodeEx")
Interceptor.attach(RemoveClusterResourceNodeEx, {onLeave: function (args) {send("RemoveClusterResourceNodeEx");}});

var RemoveClusterStorageNode = Module.findExportByName("clusapi.dll", "RemoveClusterStorageNode")
Interceptor.attach(RemoveClusterStorageNode, {onLeave: function (args) {send("RemoveClusterStorageNode");}});

var RemoveCrossClusterGroupSetDependency = Module.findExportByName("clusapi.dll", "RemoveCrossClusterGroupSetDependency")
Interceptor.attach(RemoveCrossClusterGroupSetDependency, {onLeave: function (args) {send("RemoveCrossClusterGroupSetDependency");}});

var RemoveResourceFromClusterSharedVolumes = Module.findExportByName("clusapi.dll", "RemoveResourceFromClusterSharedVolumes")
Interceptor.attach(RemoveResourceFromClusterSharedVolumes, {onLeave: function (args) {send("RemoveResourceFromClusterSharedVolumes");}});

var RestartClusterResource = Module.findExportByName("clusapi.dll", "RestartClusterResource")
Interceptor.attach(RestartClusterResource, {onLeave: function (args) {send("RestartClusterResource");}});

var RestartClusterResourceEx = Module.findExportByName("clusapi.dll", "RestartClusterResourceEx")
Interceptor.attach(RestartClusterResourceEx, {onLeave: function (args) {send("RestartClusterResourceEx");}});

var RestoreClusterDatabase = Module.findExportByName("clusapi.dll", "RestoreClusterDatabase")
Interceptor.attach(RestoreClusterDatabase, {onLeave: function (args) {send("RestoreClusterDatabase");}});

var ResumeClusterNode = Module.findExportByName("clusapi.dll", "ResumeClusterNode")
Interceptor.attach(ResumeClusterNode, {onLeave: function (args) {send("ResumeClusterNode");}});

var ResumeClusterNodeEx = Module.findExportByName("clusapi.dll", "ResumeClusterNodeEx")
Interceptor.attach(ResumeClusterNodeEx, {onLeave: function (args) {send("ResumeClusterNodeEx");}});

var ResumeClusterNodeEx2 = Module.findExportByName("clusapi.dll", "ResumeClusterNodeEx2")
Interceptor.attach(ResumeClusterNodeEx2, {onLeave: function (args) {send("ResumeClusterNodeEx2");}});

var SetClusterGroupName = Module.findExportByName("clusapi.dll", "SetClusterGroupName")
Interceptor.attach(SetClusterGroupName, {onLeave: function (args) {send("SetClusterGroupName");}});

var SetClusterGroupNameEx = Module.findExportByName("clusapi.dll", "SetClusterGroupNameEx")
Interceptor.attach(SetClusterGroupNameEx, {onLeave: function (args) {send("SetClusterGroupNameEx");}});

var SetClusterGroupNodeList = Module.findExportByName("clusapi.dll", "SetClusterGroupNodeList")
Interceptor.attach(SetClusterGroupNodeList, {onLeave: function (args) {send("SetClusterGroupNodeList");}});

var SetClusterGroupNodeListEx = Module.findExportByName("clusapi.dll", "SetClusterGroupNodeListEx")
Interceptor.attach(SetClusterGroupNodeListEx, {onLeave: function (args) {send("SetClusterGroupNodeListEx");}});

var SetClusterGroupSetDependencyExpression = Module.findExportByName("clusapi.dll", "SetClusterGroupSetDependencyExpression")
Interceptor.attach(SetClusterGroupSetDependencyExpression, {onLeave: function (args) {send("SetClusterGroupSetDependencyExpression");}});

var SetClusterGroupSetDependencyExpressionEx = Module.findExportByName("clusapi.dll", "SetClusterGroupSetDependencyExpressionEx")
Interceptor.attach(SetClusterGroupSetDependencyExpressionEx, {onLeave: function (args) {send("SetClusterGroupSetDependencyExpressionEx");}});

var SetClusterName = Module.findExportByName("clusapi.dll", "SetClusterName")
Interceptor.attach(SetClusterName, {onLeave: function (args) {send("SetClusterName");}});

var SetClusterNameEx = Module.findExportByName("clusapi.dll", "SetClusterNameEx")
Interceptor.attach(SetClusterNameEx, {onLeave: function (args) {send("SetClusterNameEx");}});

var SetClusterNetworkName = Module.findExportByName("clusapi.dll", "SetClusterNetworkName")
Interceptor.attach(SetClusterNetworkName, {onLeave: function (args) {send("SetClusterNetworkName");}});

var SetClusterNetworkNameEx = Module.findExportByName("clusapi.dll", "SetClusterNetworkNameEx")
Interceptor.attach(SetClusterNetworkNameEx, {onLeave: function (args) {send("SetClusterNetworkNameEx");}});

var SetClusterNetworkPriorityOrder = Module.findExportByName("clusapi.dll", "SetClusterNetworkPriorityOrder")
Interceptor.attach(SetClusterNetworkPriorityOrder, {onLeave: function (args) {send("SetClusterNetworkPriorityOrder");}});

var SetClusterQuorumResource = Module.findExportByName("clusapi.dll", "SetClusterQuorumResource")
Interceptor.attach(SetClusterQuorumResource, {onLeave: function (args) {send("SetClusterQuorumResource");}});

var SetClusterQuorumResourceEx = Module.findExportByName("clusapi.dll", "SetClusterQuorumResourceEx")
Interceptor.attach(SetClusterQuorumResourceEx, {onLeave: function (args) {send("SetClusterQuorumResourceEx");}});

var SetClusterResourceDependencyExpression = Module.findExportByName("clusapi.dll", "SetClusterResourceDependencyExpression")
Interceptor.attach(SetClusterResourceDependencyExpression, {onLeave: function (args) {send("SetClusterResourceDependencyExpression");}});

var SetClusterResourceName = Module.findExportByName("clusapi.dll", "SetClusterResourceName")
Interceptor.attach(SetClusterResourceName, {onLeave: function (args) {send("SetClusterResourceName");}});

var SetClusterResourceNameEx = Module.findExportByName("clusapi.dll", "SetClusterResourceNameEx")
Interceptor.attach(SetClusterResourceNameEx, {onLeave: function (args) {send("SetClusterResourceNameEx");}});

var SetClusterServiceAccountPassword = Module.findExportByName("clusapi.dll", "SetClusterServiceAccountPassword")
Interceptor.attach(SetClusterServiceAccountPassword, {onLeave: function (args) {send("SetClusterServiceAccountPassword");}});

var SetGroupDependencyExpression = Module.findExportByName("clusapi.dll", "SetGroupDependencyExpression")
Interceptor.attach(SetGroupDependencyExpression, {onLeave: function (args) {send("SetGroupDependencyExpression");}});

var SetGroupDependencyExpressionEx = Module.findExportByName("clusapi.dll", "SetGroupDependencyExpressionEx")
Interceptor.attach(SetGroupDependencyExpressionEx, {onLeave: function (args) {send("SetGroupDependencyExpressionEx");}});

