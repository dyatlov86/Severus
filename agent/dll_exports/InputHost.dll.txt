var CreateComboButtonProxy = Module.findExportByName("InputHost.dll", "CreateComboButtonProxy")
Interceptor.attach(CreateComboButtonProxy, {onLeave: function (args) {send("CreateComboButtonProxy");}});

var CreateCursorClient = Module.findExportByName("InputHost.dll", "CreateCursorClient")
Interceptor.attach(CreateCursorClient, {onLeave: function (args) {send("CreateCursorClient");}});

var CreateCursorManager = Module.findExportByName("InputHost.dll", "CreateCursorManager")
Interceptor.attach(CreateCursorManager, {onLeave: function (args) {send("CreateCursorManager");}});

var CreateDragOperationPrivate = Module.findExportByName("InputHost.dll", "CreateDragOperationPrivate")
Interceptor.attach(CreateDragOperationPrivate, {onLeave: function (args) {send("CreateDragOperationPrivate");}});

var CreateGenericInputHost = Module.findExportByName("InputHost.dll", "CreateGenericInputHost")
Interceptor.attach(CreateGenericInputHost, {onLeave: function (args) {send("CreateGenericInputHost");}});

var CreateHeatGripServiceClient = Module.findExportByName("InputHost.dll", "CreateHeatGripServiceClient")
Interceptor.attach(CreateHeatGripServiceClient, {onLeave: function (args) {send("CreateHeatGripServiceClient");}});

var CreateInputDeviceWatcher = Module.findExportByName("InputHost.dll", "CreateInputDeviceWatcher")
Interceptor.attach(CreateInputDeviceWatcher, {onLeave: function (args) {send("CreateInputDeviceWatcher");}});

var CreateInputHost = Module.findExportByName("InputHost.dll", "CreateInputHost")
Interceptor.attach(CreateInputHost, {onLeave: function (args) {send("CreateInputHost");}});

var CreateInputHostForProcess = Module.findExportByName("InputHost.dll", "CreateInputHostForProcess")
Interceptor.attach(CreateInputHostForProcess, {onLeave: function (args) {send("CreateInputHostForProcess");}});

var CreateInputSystemClientConnection = Module.findExportByName("InputHost.dll", "CreateInputSystemClientConnection")
Interceptor.attach(CreateInputSystemClientConnection, {onLeave: function (args) {send("CreateInputSystemClientConnection");}});

var CreateMPCManagerClient = Module.findExportByName("InputHost.dll", "CreateMPCManagerClient")
Interceptor.attach(CreateMPCManagerClient, {onLeave: function (args) {send("CreateMPCManagerClient");}});

var CreatePointerInputHost = Module.findExportByName("InputHost.dll", "CreatePointerInputHost")
Interceptor.attach(CreatePointerInputHost, {onLeave: function (args) {send("CreatePointerInputHost");}});

var CreateTouchInputHost = Module.findExportByName("InputHost.dll", "CreateTouchInputHost")
Interceptor.attach(CreateTouchInputHost, {onLeave: function (args) {send("CreateTouchInputHost");}});

var CreateViewHitTestRequestClient = Module.findExportByName("InputHost.dll", "CreateViewHitTestRequestClient")
Interceptor.attach(CreateViewHitTestRequestClient, {onLeave: function (args) {send("CreateViewHitTestRequestClient");}});

var DllCanUnloadNow = Module.findExportByName("InputHost.dll", "DllCanUnloadNow")
Interceptor.attach(DllCanUnloadNow, {onLeave: function (args) {send("DllCanUnloadNow");}});

var DllGetActivationFactory = Module.findExportByName("InputHost.dll", "DllGetActivationFactory")
Interceptor.attach(DllGetActivationFactory, {onLeave: function (args) {send("DllGetActivationFactory");}});

var DllGetClassObject = Module.findExportByName("InputHost.dll", "DllGetClassObject")
Interceptor.attach(DllGetClassObject, {onLeave: function (args) {send("DllGetClassObject");}});

var SetInputButtonEnabledOnIdle = Module.findExportByName("InputHost.dll", "SetInputButtonEnabledOnIdle")
Interceptor.attach(SetInputButtonEnabledOnIdle, {onLeave: function (args) {send("SetInputButtonEnabledOnIdle");}});

var SetInputDeviceIndicatorState = Module.findExportByName("InputHost.dll", "SetInputDeviceIndicatorState")
Interceptor.attach(SetInputDeviceIndicatorState, {onLeave: function (args) {send("SetInputDeviceIndicatorState");}});

var SetInputDeviceRepeatParameters = Module.findExportByName("InputHost.dll", "SetInputDeviceRepeatParameters")
Interceptor.attach(SetInputDeviceRepeatParameters, {onLeave: function (args) {send("SetInputDeviceRepeatParameters");}});

var SetInputFocus = Module.findExportByName("InputHost.dll", "SetInputFocus")
Interceptor.attach(SetInputFocus, {onLeave: function (args) {send("SetInputFocus");}});

var TouchInputHostCreate = Module.findExportByName("InputHost.dll", "TouchInputHostCreate")
Interceptor.attach(TouchInputHostCreate, {onLeave: function (args) {send("TouchInputHostCreate");}});

var ViewHitTestClientCreate = Module.findExportByName("InputHost.dll", "ViewHitTestClientCreate")
Interceptor.attach(ViewHitTestClientCreate, {onLeave: function (args) {send("ViewHitTestClientCreate");}});

